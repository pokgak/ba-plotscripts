<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201110 08:37:20.479" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.788" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:21.804" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:23.820" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:21.784" endtime="20201110 08:37:23.822"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.827" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:23.824" endtime="20201110 08:37:23.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.781" endtime="20201110 08:37:23.829"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.834" endtime="20201110 08:37:24.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.831" endtime="20201110 08:37:24.180"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.212" endtime="20201110 08:37:24.230"></status>
</kw>
<msg timestamp="20201110 08:37:24.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.209" endtime="20201110 08:37:24.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.234" endtime="20201110 08:37:24.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.244" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:24.240" endtime="20201110 08:37:24.245"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.202" endtime="20201110 08:37:24.247"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.195" endtime="20201110 08:37:24.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.193" endtime="20201110 08:37:24.249"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:24.259" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:24.257" endtime="20201110 08:37:24.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.251" endtime="20201110 08:37:24.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.191" endtime="20201110 08:37:24.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.189" endtime="20201110 08:37:24.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.263" endtime="20201110 08:37:24.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.185" endtime="20201110 08:37:24.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.270" endtime="20201110 08:37:24.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.182" endtime="20201110 08:37:24.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.778" endtime="20201110 08:37:24.276"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.290" endtime="20201110 08:37:24.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.286" endtime="20201110 08:37:24.314"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.349" endtime="20201110 08:37:24.366"></status>
</kw>
<msg timestamp="20201110 08:37:24.367" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.345" endtime="20201110 08:37:24.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.370" endtime="20201110 08:37:24.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.380" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:24.376" endtime="20201110 08:37:24.381"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.338" endtime="20201110 08:37:24.384"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.332" endtime="20201110 08:37:24.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.327" endtime="20201110 08:37:24.388"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:24.396" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:24.394" endtime="20201110 08:37:24.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.390" endtime="20201110 08:37:24.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.325" endtime="20201110 08:37:24.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.323" endtime="20201110 08:37:24.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.399" endtime="20201110 08:37:24.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.319" endtime="20201110 08:37:24.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.315" endtime="20201110 08:37:24.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.284" endtime="20201110 08:37:24.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.423" endtime="20201110 08:37:24.435"></status>
</kw>
<msg timestamp="20201110 08:37:24.436" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.420" endtime="20201110 08:37:24.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.442" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.438" endtime="20201110 08:37:24.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.444" endtime="20201110 08:37:24.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.413" endtime="20201110 08:37:24.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.408" endtime="20201110 08:37:24.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.460" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:37:24.458" endtime="20201110 08:37:24.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.465" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:37:24.463" endtime="20201110 08:37:24.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.452" endtime="20201110 08:37:24.467"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:24.277" endtime="20201110 08:37:24.469" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:20.736" endtime="20201110 08:37:24.475"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.611" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:24.627" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:26.682" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:24.606" endtime="20201110 08:37:26.683"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.688" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:26.685" endtime="20201110 08:37:26.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.603" endtime="20201110 08:37:26.691"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.695" endtime="20201110 08:37:27.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.692" endtime="20201110 08:37:27.045"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.077" endtime="20201110 08:37:27.092"></status>
</kw>
<msg timestamp="20201110 08:37:27.094" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.073" endtime="20201110 08:37:27.094"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.100" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.096" endtime="20201110 08:37:27.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.107" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:27.102" endtime="20201110 08:37:27.107"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:27.067" endtime="20201110 08:37:27.109"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:27.061" endtime="20201110 08:37:27.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.058" endtime="20201110 08:37:27.112"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:27.119" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:27.118" endtime="20201110 08:37:27.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.113" endtime="20201110 08:37:27.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.056" endtime="20201110 08:37:27.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.054" endtime="20201110 08:37:27.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.123" endtime="20201110 08:37:27.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.051" endtime="20201110 08:37:27.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.130" endtime="20201110 08:37:27.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.047" endtime="20201110 08:37:27.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.600" endtime="20201110 08:37:27.135"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.149" endtime="20201110 08:37:27.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.145" endtime="20201110 08:37:27.172"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.271" endtime="20201110 08:37:27.287"></status>
</kw>
<msg timestamp="20201110 08:37:27.288" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.266" endtime="20201110 08:37:27.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.295" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.291" endtime="20201110 08:37:27.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.302" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:27.297" endtime="20201110 08:37:27.302"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:27.257" endtime="20201110 08:37:27.304"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:27.188" endtime="20201110 08:37:27.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.186" endtime="20201110 08:37:27.307"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:27.314" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:27.313" endtime="20201110 08:37:27.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.308" endtime="20201110 08:37:27.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.184" endtime="20201110 08:37:27.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.182" endtime="20201110 08:37:27.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.318" endtime="20201110 08:37:27.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.178" endtime="20201110 08:37:27.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.174" endtime="20201110 08:37:27.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.142" endtime="20201110 08:37:27.325"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:37:27.329" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.349" endtime="20201110 08:37:27.360"></status>
</kw>
<msg timestamp="20201110 08:37:27.361" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.345" endtime="20201110 08:37:27.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.367" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:27.363" endtime="20201110 08:37:27.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.369" endtime="20201110 08:37:27.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.338" endtime="20201110 08:37:27.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.333" endtime="20201110 08:37:27.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.394" endtime="20201110 08:37:27.755"></status>
</kw>
<msg timestamp="20201110 08:37:27.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190305083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190305556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.391" endtime="20201110 08:37:27.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.190305083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190305556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:27.765" endtime="20201110 08:37:27.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.783" endtime="20201110 08:37:27.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.382" endtime="20201110 08:37:27.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.377" endtime="20201110 08:37:27.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.800" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:27.798" endtime="20201110 08:37:27.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.812" level="INFO">VALUE: [{'time': 0.190305083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.190305556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999730783e-07, 'source_diff': 4.729999999730783e-07}, {'time': 0.190314917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361000000013275e-06, 'source_diff': 9.361000000013275e-06}, {'time': 0.190315389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190322333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000008721e-06, 'source_diff': 6.944000000008721e-06}, {'time': 0.190322806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190329875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.190330347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190336625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.190337167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999922709e-07, 'source_diff': 5.419999999922709e-07}, {'time': 0.190342653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.190343125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190353431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0305999999987714e-05, 'source_diff': 1.0305999999987714e-05}, {'time': 0.190353903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190362944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000015176e-06, 'source_diff': 9.041000000015176e-06}, {'time': 0.190363417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190367778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.360999999980519e-06, 'source_diff': 4.360999999980519e-06}, {'time': 0.19036825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190378958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.190379431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190387639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000009541e-06, 'source_diff': 8.208000000009541e-06}, {'time': 0.190388111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190396861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.190397333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190407542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0209000000011015e-05, 'source_diff': 1.0209000000011015e-05}, {'time': 0.190408014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.190413597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.190414069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190420819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.190421292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190431708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0416000000013081e-05, 'source_diff': 1.0416000000013081e-05}, {'time': 0.190432181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190441944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.76299999999597e-06, 'source_diff': 9.76299999999597e-06}, {'time': 0.190442417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190447083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.665999999986514e-06, 'source_diff': 4.665999999986514e-06}, {'time': 0.190447556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190453361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.804999999997618e-06, 'source_diff': 5.804999999997618e-06}, {'time': 0.190453833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190464125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000022838e-05, 'source_diff': 1.0292000000022838e-05}, {'time': 0.190464597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190471889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.291999999992083e-06, 'source_diff': 7.291999999992083e-06}, {'time': 0.190472361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190480653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291999999993083e-06, 'source_diff': 8.291999999993083e-06}, {'time': 0.190481125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.1904855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.190485972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190494681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708999999995637e-06, 'source_diff': 8.708999999995637e-06}, {'time': 0.190495153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190503375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.190503847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190508833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999984614e-06, 'source_diff': 4.985999999984614e-06}, {'time': 0.190509306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190513639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.333000000023013e-06, 'source_diff': 4.333000000023013e-06}, {'time': 0.190514111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190521167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999977525e-06, 'source_diff': 7.055999999977525e-06}, {'time': 0.190521639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190529014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.190529486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190540319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833000000015636e-05, 'source_diff': 1.0833000000015636e-05}, {'time': 0.190540792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999730783e-07, 'source_diff': 4.729999999730783e-07}, {'time': 0.190549833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000015176e-06, 'source_diff': 9.041000000015176e-06}, {'time': 0.190550306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190555403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000009455e-06, 'source_diff': 5.097000000009455e-06}, {'time': 0.190555875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190565944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0068999999973682e-05, 'source_diff': 1.0068999999973682e-05}, {'time': 0.190566417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190570889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4720000000053606e-06, 'source_diff': 4.4720000000053606e-06}, {'time': 0.190571361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190581444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0082999999994069e-05, 'source_diff': 1.0082999999994069e-05}, {'time': 0.190581917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190591167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.25000000001619e-06, 'source_diff': 9.25000000001619e-06}, {'time': 0.190591639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190602042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999992169e-05, 'source_diff': 1.0402999999992169e-05}, {'time': 0.190602514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190608736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.190609208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190619222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.190619694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190625069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.190625542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190634806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999981065e-06, 'source_diff': 9.263999999981065e-06}, {'time': 0.190635278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190642125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.190642597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190648722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.190649194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190657722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.52800000000764e-06, 'source_diff': 8.52800000000764e-06}, {'time': 0.190658194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190668708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999989254e-05, 'source_diff': 1.0513999999989254e-05}, {'time': 0.190669181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.190679056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000020284e-06, 'source_diff': 9.875000000020284e-06}, {'time': 0.190679528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999997360464e-07, 'source_diff': 4.7199999997360464e-07}, {'time': 0.19068775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.190688222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190694972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.190695444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190702514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.190702986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.190710472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.190710944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:27.802" endtime="20201110 08:37:27.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.792" endtime="20201110 08:37:27.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:27.879" level="INFO">${debug-compressed} = {'source_diff': [0, 4.729999999730783e-07, 9.361000000013275e-06, 4.720000000013602e-07, 6.944000000008721e-06, 4.7300000000083386e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.2779999999984515...</msg>
<status status="PASS" starttime="20201110 08:37:27.818" endtime="20201110 08:37:27.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.891" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:27.888" endtime="20201110 08:37:27.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.900" level="INFO">VALUE: {'source_diff': [0, 4.729999999730783e-07, 9.361000000013275e-06, 4.720000000013602e-07, 6.944000000008721e-06, 4.7300000000083386e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 5.419999999922709e-07, 5.485999999998992e-06, 4.720000000013602e-07, 1.0305999999987714e-05, 4.720000000013602e-07, 9.041000000015176e-06, 4.7300000000083386e-07, 4.360999999980519e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.208000000009541e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 1.0209000000011015e-05, 4.7199999997360464e-07, 5.583000000003446e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.7300000000083386e-07, 1.0416000000013081e-05, 4.7300000000083386e-07, 9.76299999999597e-06, 4.7300000000083386e-07, 4.665999999986514e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 1.0292000000022838e-05, 4.720000000013602e-07, 7.291999999992083e-06, 4.720000000013602e-07, 8.291999999993083e-06, 4.720000000013602e-07, 4.375000000000906e-06, 4.720000000013602e-07, 8.708999999995637e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.720000000013602e-07, 4.985999999984614e-06, 4.7300000000083386e-07, 4.333000000023013e-06, 4.720000000013602e-07, 7.055999999977525e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 1.0833000000015636e-05, 4.729999999730783e-07, 9.041000000015176e-06, 4.7300000000083386e-07, 5.097000000009455e-06, 4.720000000013602e-07, 1.0068999999973682e-05, 4.7300000000083386e-07, 4.4720000000053606e-06, 4.720000000013602e-07, 1.0082999999994069e-05, 4.7300000000083386e-07, 9.25000000001619e-06, 4.720000000013602e-07, 1.0402999999992169e-05, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 9.263999999981065e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 8.52800000000764e-06, 4.720000000013602e-07, 1.0513999999989254e-05, 4.7300000000083386e-07, 9.875000000020284e-06, 4.7199999997360464e-07, 8.222000000002172e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.729999999730783e-07, 9.361000000013275e-06, 4.720000000013602e-07, 6.944000000008721e-06, 4.7300000000083386e-07, 7.068999999998438e-06, 4.720000000013602e-07, 6.2779999999984515e-06, 5.419999999922709e-07, 5.485999999998992e-06, 4.720000000013602e-07, 1.0305999999987714e-05, 4.720000000013602e-07, 9.041000000015176e-06, 4.7300000000083386e-07, 4.360999999980519e-06, 4.720000000013602e-07, 1.0707999999998163e-05, 4.7300000000083386e-07, 8.208000000009541e-06, 4.720000000013602e-07, 8.750000000001812e-06, 4.720000000013602e-07, 1.0209000000011015e-05, 4.7199999997360464e-07, 5.583000000003446e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.7300000000083386e-07, 1.0416000000013081e-05, 4.7300000000083386e-07, 9.76299999999597e-06, 4.7300000000083386e-07, 4.665999999986514e-06, 4.7300000000083386e-07, 5.804999999997618e-06, 4.720000000013602e-07, 1.0292000000022838e-05, 4.720000000013602e-07, 7.291999999992083e-06, 4.720000000013602e-07, 8.291999999993083e-06, 4.720000000013602e-07, 4.375000000000906e-06, 4.720000000013602e-07, 8.708999999995637e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.720000000013602e-07, 4.985999999984614e-06, 4.7300000000083386e-07, 4.333000000023013e-06, 4.720000000013602e-07, 7.055999999977525e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 1.0833000000015636e-05, 4.729999999730783e-07, 9.041000000015176e-06, 4.7300000000083386e-07, 5.097000000009455e-06, 4.720000000013602e-07, 1.0068999999973682e-05, 4.7300000000083386e-07, 4.4720000000053606e-06, 4.720000000013602e-07, 1.0082999999994069e-05, 4.7300000000083386e-07, 9.25000000001619e-06, 4.720000000013602e-07, 1.0402999999992169e-05, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 1.0014000000002632e-05, 4.720000000013602e-07, 5.375000000001906e-06, 4.7300000000083386e-07, 9.263999999981065e-06, 4.720000000013602e-07, 6.847000000004266e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 8.52800000000764e-06, 4.720000000013602e-07, 1.0513999999989254e-05, 4.7300000000083386e-07, 9.875000000020284e-06, 4.7199999997360464e-07, 8.222000000002172e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.720000000013602e-07], 'eventtime': [0.190305083, 0.190305556, 0.190314917, 0.190315389, 0.190322333, 0.190322806, 0.190329875, 0.190330347, 0.190336625, 0.190337167, 0.190342653, 0.190343125, 0.190353431, 0.190353903, 0.190362944, 0.190363417, 0.190367778, 0.19036825, 0.190378958, 0.190379431, 0.190387639, 0.190388111, 0.190396861, 0.190397333, 0.190407542, 0.190408014, 0.190413597, 0.190414069, 0.190420819, 0.190421292, 0.190431708, 0.190432181, 0.190441944, 0.190442417, 0.190447083, 0.190447556, 0.190453361, 0.190453833, 0.190464125, 0.190464597, 0.190471889, 0.190472361, 0.190480653, 0.190481125, 0.1904855, 0.190485972, 0.190494681, 0.190495153, 0.190503375, 0.190503847, 0.190508833, 0.190509306, 0.190513639, 0.190514111, 0.190521167, 0.190521639, 0.190529014, 0.190529486, 0.190540319, 0.190540792, 0.190549833, 0.190550306, 0.190555403, 0.190555875, 0.190565944, 0.190566417, 0.190570889, 0.190571361, 0.190581444, 0.190581917, 0.190591167, 0.190591639, 0.190602042, 0.190602514, 0.190608736, 0.190609208, 0.190619222, 0.190619694, 0.190625069, 0.190625542, 0.190634806, 0.190635278, 0.190642125, 0.190642597, 0.190648722, 0.190649194, 0.190657722, 0.190658194, 0.190668708, 0.190669181, 0.190679056, 0.190679528, 0.19068775, 0.190688222, 0.190694972, 0.190695444, 0.190702514, 0.190702986, 0.190710472, 0.190710944]}</msg>
<status status="PASS" starttime="20201110 08:37:27.893" endtime="20201110 08:37:27.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.882" endtime="20201110 08:37:27.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:27.915" level="INFO">${RESULT} = [{'time': 0.190305556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.729999999730783e-07, 'source_diff': 4.729999999730783e-07}, {'time': 0.190315389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:27.906" endtime="20201110 08:37:27.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:27.946" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.729999999730783e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-0...</msg>
<status status="PASS" starttime="20201110 08:37:27.917" endtime="20201110 08:37:27.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.956" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:27.954" endtime="20201110 08:37:27.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:27.962" level="INFO">VALUE: [4.729999999730783e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999922709e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.729999999730783e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:27.959" endtime="20201110 08:37:27.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.948" endtime="20201110 08:37:27.964"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:27.971" endtime="20201110 08:37:27.973"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:27.979" endtime="20201110 08:37:28.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.974" endtime="20201110 08:37:28.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.966" endtime="20201110 08:37:28.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.330" endtime="20201110 08:37:28.005"></status>
</kw>
<msg timestamp="20201110 08:37:28.005" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.025" endtime="20201110 08:37:28.037"></status>
</kw>
<msg timestamp="20201110 08:37:28.038" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.022" endtime="20201110 08:37:28.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.040" endtime="20201110 08:37:28.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.047" endtime="20201110 08:37:28.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.015" endtime="20201110 08:37:28.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.010" endtime="20201110 08:37:28.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.070" endtime="20201110 08:37:28.448"></status>
</kw>
<msg timestamp="20201110 08:37:28.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036367111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036367583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.067" endtime="20201110 08:37:28.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036367111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036367583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.468" endtime="20201110 08:37:28.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.495" endtime="20201110 08:37:28.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.060" endtime="20201110 08:37:28.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.055" endtime="20201110 08:37:28.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.511" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:28.509" endtime="20201110 08:37:28.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.524" level="INFO">VALUE: [{'time': 0.036367111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036367583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036376639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.036377111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036387097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.036387569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036392028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.0363925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036401958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.036402431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036408042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.036408514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036412861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999994827e-06, 'source_diff': 4.346999999994827e-06}, {'time': 0.036413333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036420403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.036420875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036425639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.76400000000432e-06, 'source_diff': 4.76400000000432e-06}, {'time': 0.036426111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036432542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.036433014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036443639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.036444111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0364495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.036449972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036457972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036458444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036467611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.036468083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036478181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0098000000000051e-05, 'source_diff': 1.0098000000000051e-05}, {'time': 0.036478653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036488111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.036488583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036494069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.036494542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036503583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.036504056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036510625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.568999999997938e-06, 'source_diff': 6.568999999997938e-06}, {'time': 0.036511097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036516778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.03651725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036525264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.036525736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036535097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036535569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036540347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.036540819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03655075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.930999999997747e-06, 'source_diff': 9.930999999997747e-06}, {'time': 0.036551292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036555639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.036556111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036566917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805999999995153e-05, 'source_diff': 1.0805999999995153e-05}, {'time': 0.036567389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036576528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036577, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036581458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.036581931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036586806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.036587278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036598, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.036598472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036603139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.036603611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036609847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.036610319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036620111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791999999994583e-06, 'source_diff': 9.791999999994583e-06}, {'time': 0.036620583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036628514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.036629056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036633167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.036633639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036643111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999996483e-06, 'source_diff': 9.471999999996483e-06}, {'time': 0.036643583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036648667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.036649139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036657972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036658444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036669167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0723000000004146e-05, 'source_diff': 1.0723000000004146e-05}, {'time': 0.036669639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036680042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0403000000006046e-05, 'source_diff': 1.0403000000006046e-05}, {'time': 0.036680514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036689042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.036689514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036696389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.036696861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036701611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.036702083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036710819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.036711292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036719708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.415999999997203e-06, 'source_diff': 8.415999999997203e-06}, {'time': 0.036720181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036729333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152000000005323e-06, 'source_diff': 9.152000000005323e-06}, {'time': 0.036729806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036734681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.036735153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036745556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036746028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036751, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.036751472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036761764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036762236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:28.515" endtime="20201110 08:37:28.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.503" endtime="20201110 08:37:28.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:28.585" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 9.056000000000342e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 9.457999999996913e...</msg>
<status status="PASS" starttime="20201110 08:37:28.530" endtime="20201110 08:37:28.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.594" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:28.592" endtime="20201110 08:37:28.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.603" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 9.056000000000342e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 5.611000000002586e-06, 4.720000000013602e-07, 4.346999999994827e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 4.76400000000432e-06, 4.7199999999442133e-07, 6.431000000001186e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 5.389000000001476e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0098000000000051e-05, 4.720000000013602e-07, 9.457999999996913e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7300000000083386e-07, 6.568999999997938e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999442133e-07, 4.77800000000389e-06, 4.720000000013602e-07, 9.930999999997747e-06, 5.419999999992098e-07, 4.347000000001766e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.791999999994583e-06, 4.720000000013602e-07, 7.931000000002686e-06, 5.419999999992098e-07, 4.111000000001086e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07, 5.08400000000242e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.0723000000004146e-05, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 6.875000000003406e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.7300000000083386e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 9.152000000005323e-06, 4.7299999999389497e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07], 'sourcediff': [0, 4.720000000013602e-07, 9.056000000000342e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 9.457999999996913e-06, 4.7300000000083386e-07, 5.611000000002586e-06, 4.720000000013602e-07, 4.346999999994827e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 4.76400000000432e-06, 4.7199999999442133e-07, 6.431000000001186e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 5.389000000001476e-06, 4.7199999999442133e-07, 8.000000000001062e-06, 4.720000000013602e-07, 9.166999999997427e-06, 4.720000000013602e-07, 1.0098000000000051e-05, 4.720000000013602e-07, 9.457999999996913e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 9.041000000001298e-06, 4.7300000000083386e-07, 6.568999999997938e-06, 4.720000000013602e-07, 5.681000000000436e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7199999999442133e-07, 4.77800000000389e-06, 4.720000000013602e-07, 9.930999999997747e-06, 5.419999999992098e-07, 4.347000000001766e-06, 4.720000000013602e-07, 1.0805999999995153e-05, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 4.666999999999866e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 9.791999999994583e-06, 4.720000000013602e-07, 7.931000000002686e-06, 5.419999999992098e-07, 4.111000000001086e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07, 5.08400000000242e-06, 4.7199999999442133e-07, 8.832999999999758e-06, 4.720000000013602e-07, 1.0723000000004146e-05, 4.7199999999442133e-07, 1.0403000000006046e-05, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 6.875000000003406e-06, 4.7199999999442133e-07, 4.75000000000475e-06, 4.720000000013602e-07, 8.735999999995303e-06, 4.7300000000083386e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 9.152000000005323e-06, 4.7299999999389497e-07, 4.875000000001406e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 4.971999999998922e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07], 'eventtime': [0.036367111, 0.036367583, 0.036376639, 0.036377111, 0.036387097, 0.036387569, 0.036392028, 0.0363925, 0.036401958, 0.036402431, 0.036408042, 0.036408514, 0.036412861, 0.036413333, 0.036420403, 0.036420875, 0.036425639, 0.036426111, 0.036432542, 0.036433014, 0.036443639, 0.036444111, 0.0364495, 0.036449972, 0.036457972, 0.036458444, 0.036467611, 0.036468083, 0.036478181, 0.036478653, 0.036488111, 0.036488583, 0.036494069, 0.036494542, 0.036503583, 0.036504056, 0.036510625, 0.036511097, 0.036516778, 0.03651725, 0.036525264, 0.036525736, 0.036535097, 0.036535569, 0.036540347, 0.036540819, 0.03655075, 0.036551292, 0.036555639, 0.036556111, 0.036566917, 0.036567389, 0.036576528, 0.036577, 0.036581458, 0.036581931, 0.036586806, 0.036587278, 0.036598, 0.036598472, 0.036603139, 0.036603611, 0.036609847, 0.036610319, 0.036620111, 0.036620583, 0.036628514, 0.036629056, 0.036633167, 0.036633639, 0.036643111, 0.036643583, 0.036648667, 0.036649139, 0.036657972, 0.036658444, 0.036669167, 0.036669639, 0.036680042, 0.036680514, 0.036689042, 0.036689514, 0.036696389, 0.036696861, 0.036701611, 0.036702083, 0.036710819, 0.036711292, 0.036719708, 0.036720181, 0.036729333, 0.036729806, 0.036734681, 0.036735153, 0.036745556, 0.036746028, 0.036751, 0.036751472, 0.036761764, 0.036762236]}</msg>
<status status="PASS" starttime="20201110 08:37:28.596" endtime="20201110 08:37:28.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.586" endtime="20201110 08:37:28.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:28.618" level="INFO">${RESULT} = [{'time': 0.036367583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036377111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:28.609" endtime="20201110 08:37:28.618"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:28.654" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201110 08:37:28.620" endtime="20201110 08:37:28.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.668" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:28.665" endtime="20201110 08:37:28.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.675" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07]</msg>
<status status="PASS" starttime="20201110 08:37:28.671" endtime="20201110 08:37:28.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.657" endtime="20201110 08:37:28.678"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.685" endtime="20201110 08:37:28.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:28.694" endtime="20201110 08:37:28.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.689" endtime="20201110 08:37:28.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.681" endtime="20201110 08:37:28.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.006" endtime="20201110 08:37:28.720"></status>
</kw>
<msg timestamp="20201110 08:37:28.721" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.740" endtime="20201110 08:37:28.754"></status>
</kw>
<msg timestamp="20201110 08:37:28.755" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.737" endtime="20201110 08:37:28.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:28.761" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:28.757" endtime="20201110 08:37:28.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.763" endtime="20201110 08:37:28.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.730" endtime="20201110 08:37:28.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.725" endtime="20201110 08:37:28.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:28.787" endtime="20201110 08:37:29.130"></status>
</kw>
<msg timestamp="20201110 08:37:29.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038239069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038239542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:28.783" endtime="20201110 08:37:29.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038239069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038239542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.142" endtime="20201110 08:37:29.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.165" endtime="20201110 08:37:29.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.776" endtime="20201110 08:37:29.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.771" endtime="20201110 08:37:29.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.186" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:29.183" endtime="20201110 08:37:29.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.197" level="INFO">VALUE: [{'time': 0.038239069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038239542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038248278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.03824875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038255806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.038256278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038263778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.03826425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038272458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.038272931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038282403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999996483e-06, 'source_diff': 9.471999999996483e-06}, {'time': 0.038282875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038289056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.038289597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038298833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.038299306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038303528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2220000000051106e-06, 'source_diff': 4.2220000000051106e-06}, {'time': 0.038304, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038314722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0722000000004672e-05, 'source_diff': 1.0722000000004672e-05}, {'time': 0.038315194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038320694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.038321167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038328236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.038328708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038338694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.038339167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038346444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.038346917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038352667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.038353208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038362458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.038362931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038368569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6379999999953134e-06, 'source_diff': 5.6379999999953134e-06}, {'time': 0.038369042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03837775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.708000000003102e-06, 'source_diff': 8.708000000003102e-06}, {'time': 0.038378222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038383194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000005861e-06, 'source_diff': 4.972000000005861e-06}, {'time': 0.038383667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038392514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.038392986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038402056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.038402528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038411028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.0384115, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038419097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.038419569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038428611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.038429083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038438875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791999999994583e-06, 'source_diff': 9.791999999994583e-06}, {'time': 0.038439347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03844975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.038450222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038458056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833999999998231e-06, 'source_diff': 7.833999999998231e-06}, {'time': 0.038458528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038468806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.038469278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038475917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.038476389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038484639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.038485111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038491625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.038492097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038502292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.038502764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038510778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.03851125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038515806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.038516278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038520625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.038521097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038527222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.038527694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038535806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111999999997621e-06, 'source_diff': 8.111999999997621e-06}, {'time': 0.038536278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038547014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0735999999997303e-05, 'source_diff': 1.0735999999997303e-05}, {'time': 0.038547486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038556736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.038557208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038564375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.038564847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038573014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.038573556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038581764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.038582236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038589514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038589986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038600069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.038600542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038608028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.0386085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038614111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.038614583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038620694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.038621167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038625944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777000000004417e-06, 'source_diff': 4.777000000004417e-06}, {'time': 0.038626417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038637028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0610999999993709e-05, 'source_diff': 1.0610999999993709e-05}, {'time': 0.0386375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038644569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.038645042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:29.188" endtime="20201110 08:37:29.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.176" endtime="20201110 08:37:29.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:29.257" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 8.735999999995303e-06, 4.720000000013602e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 7.500000000000562e-06, 4.720000000013602e-07, 8.208000000002602e...</msg>
<status status="PASS" starttime="20201110 08:37:29.204" endtime="20201110 08:37:29.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.267" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:29.264" endtime="20201110 08:37:29.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.276" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 8.735999999995303e-06, 4.720000000013602e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 7.500000000000562e-06, 4.720000000013602e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 9.471999999996483e-06, 4.720000000013602e-07, 6.181000000000936e-06, 5.409999999997361e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 4.2220000000051106e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7300000000083386e-07, 7.068999999998438e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 5.409999999997361e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 5.6379999999953134e-06, 4.7300000000083386e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 4.972000000005861e-06, 4.7300000000083386e-07, 8.846999999999328e-06, 4.7199999999442133e-07, 9.069999999999911e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 9.791999999994583e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 4.55600000000278e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 6.125000000002656e-06, 4.720000000013602e-07, 8.111999999997621e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 8.167000000003366e-06, 5.419999999992098e-07, 8.207999999995663e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 7.486000000000992e-06, 4.7199999999442133e-07, 5.611000000002586e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.7300000000083386e-07, 4.777000000004417e-06, 4.7300000000083386e-07, 1.0610999999993709e-05, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.7300000000083386e-07, 8.735999999995303e-06, 4.720000000013602e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 7.500000000000562e-06, 4.720000000013602e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 9.471999999996483e-06, 4.720000000013602e-07, 6.181000000000936e-06, 5.409999999997361e-07, 9.235999999995803e-06, 4.7300000000083386e-07, 4.2220000000051106e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7300000000083386e-07, 7.068999999998438e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 7.276999999999978e-06, 4.7300000000083386e-07, 5.749999999998812e-06, 5.409999999997361e-07, 9.250000000002312e-06, 4.7300000000083386e-07, 5.6379999999953134e-06, 4.7300000000083386e-07, 8.708000000003102e-06, 4.7199999999442133e-07, 4.972000000005861e-06, 4.7300000000083386e-07, 8.846999999999328e-06, 4.7199999999442133e-07, 9.069999999999911e-06, 4.720000000013602e-07, 8.500000000001562e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 9.791999999994583e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 7.833999999998231e-06, 4.720000000013602e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 6.638999999995787e-06, 4.720000000013602e-07, 8.250000000001312e-06, 4.720000000013602e-07, 6.513999999999132e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 4.55600000000278e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 6.125000000002656e-06, 4.720000000013602e-07, 8.111999999997621e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.720000000013602e-07, 9.250000000002312e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 8.167000000003366e-06, 5.419999999992098e-07, 8.207999999995663e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 7.486000000000992e-06, 4.7199999999442133e-07, 5.611000000002586e-06, 4.720000000013602e-07, 6.110999999996147e-06, 4.7300000000083386e-07, 4.777000000004417e-06, 4.7300000000083386e-07, 1.0610999999993709e-05, 4.720000000013602e-07, 7.068999999998438e-06, 4.7300000000083386e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.038239069, 0.038239542, 0.038248278, 0.03824875, 0.038255806, 0.038256278, 0.038263778, 0.03826425, 0.038272458, 0.038272931, 0.038282403, 0.038282875, 0.038289056, 0.038289597, 0.038298833, 0.038299306, 0.038303528, 0.038304, 0.038314722, 0.038315194, 0.038320694, 0.038321167, 0.038328236, 0.038328708, 0.038338694, 0.038339167, 0.038346444, 0.038346917, 0.038352667, 0.038353208, 0.038362458, 0.038362931, 0.038368569, 0.038369042, 0.03837775, 0.038378222, 0.038383194, 0.038383667, 0.038392514, 0.038392986, 0.038402056, 0.038402528, 0.038411028, 0.0384115, 0.038419097, 0.038419569, 0.038428611, 0.038429083, 0.038438875, 0.038439347, 0.03844975, 0.038450222, 0.038458056, 0.038458528, 0.038468806, 0.038469278, 0.038475917, 0.038476389, 0.038484639, 0.038485111, 0.038491625, 0.038492097, 0.038502292, 0.038502764, 0.038510778, 0.03851125, 0.038515806, 0.038516278, 0.038520625, 0.038521097, 0.038527222, 0.038527694, 0.038535806, 0.038536278, 0.038547014, 0.038547486, 0.038556736, 0.038557208, 0.038564375, 0.038564847, 0.038573014, 0.038573556, 0.038581764, 0.038582236, 0.038589514, 0.038589986, 0.038600069, 0.038600542, 0.038608028, 0.0386085, 0.038614111, 0.038614583, 0.038620694, 0.038621167, 0.038625944, 0.038626417, 0.038637028, 0.0386375, 0.038644569, 0.038645042]}</msg>
<status status="PASS" starttime="20201110 08:37:29.269" endtime="20201110 08:37:29.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.259" endtime="20201110 08:37:29.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.290" level="INFO">${RESULT} = [{'time': 0.038239542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03824875, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:29.281" endtime="20201110 08:37:29.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:29.321" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e...</msg>
<status status="PASS" starttime="20201110 08:37:29.292" endtime="20201110 08:37:29.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.333" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:29.329" endtime="20201110 08:37:29.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.338" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:29.335" endtime="20201110 08:37:29.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.323" endtime="20201110 08:37:29.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.347" endtime="20201110 08:37:29.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:29.355" endtime="20201110 08:37:29.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.351" endtime="20201110 08:37:29.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.342" endtime="20201110 08:37:29.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:28.722" endtime="20201110 08:37:29.381"></status>
</kw>
<msg timestamp="20201110 08:37:29.382" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.402" endtime="20201110 08:37:29.413"></status>
</kw>
<msg timestamp="20201110 08:37:29.414" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.398" endtime="20201110 08:37:29.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.421" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:29.417" endtime="20201110 08:37:29.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.423" endtime="20201110 08:37:29.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.391" endtime="20201110 08:37:29.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.386" endtime="20201110 08:37:29.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.446" endtime="20201110 08:37:29.793"></status>
</kw>
<msg timestamp="20201110 08:37:29.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036362125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036362597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.443" endtime="20201110 08:37:29.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036362125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036362597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:29.802" endtime="20201110 08:37:29.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.822" endtime="20201110 08:37:29.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.436" endtime="20201110 08:37:29.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.431" endtime="20201110 08:37:29.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.838" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:29.836" endtime="20201110 08:37:29.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.849" level="INFO">VALUE: [{'time': 0.036362125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036362597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03637025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.036370792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036376375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.583000000003446e-06, 'source_diff': 5.583000000003446e-06}, {'time': 0.036376847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036387458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036387931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036394042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.036394514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036404111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.036404583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036414861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0278000000002452e-05, 'source_diff': 1.0278000000002452e-05}, {'time': 0.036415333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036422806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.036423278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036434, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.036434472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036440167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.036440639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036448333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.036448806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036453792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.036454264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036465069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.036465542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.03647375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036474222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036479319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.036479792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036488528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036489, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036494194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.036494667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036503903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.235999999995803e-06, 'source_diff': 9.235999999995803e-06}, {'time': 0.036504375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036515097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0722000000004672e-05, 'source_diff': 1.0722000000004672e-05}, {'time': 0.036515569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036523986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.036524458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036529861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402999999994107e-06, 'source_diff': 5.402999999994107e-06}, {'time': 0.036530333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036540625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036541097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036549736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.036550208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036560417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208999999997137e-05, 'source_diff': 1.0208999999997137e-05}, {'time': 0.036560889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036570153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.036570625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036577903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036578375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036583222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.036583694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036588167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.472999999997895e-06, 'source_diff': 4.472999999997895e-06}, {'time': 0.036588639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036595583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.036596056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036602486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.429999999994773e-06, 'source_diff': 6.429999999994773e-06}, {'time': 0.036602958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036609181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.036609653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036620167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.036620639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036629181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541999999993333e-06, 'source_diff': 8.541999999993333e-06}, {'time': 0.036629653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036634, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.036634472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036639847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036640319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036645819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.036646292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036656069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.036656542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03666675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0207999999997663e-05, 'source_diff': 1.0207999999997663e-05}, {'time': 0.036667222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036674708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.036675181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03668025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.036680722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036689556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.036690028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036698139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.036698611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036708181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.036708653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036713944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.036714417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036721583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.036722056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036731736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.036732208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036737417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.036737889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036747333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.036747806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036755792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036756264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036760847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.583000000002446e-06, 'source_diff': 4.583000000002446e-06}, {'time': 0.036761319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:29.840" endtime="20201110 08:37:29.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.830" endtime="20201110 08:37:29.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:29.911" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 7.652999999996357e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 6.11100000000308...</msg>
<status status="PASS" starttime="20201110 08:37:29.855" endtime="20201110 08:37:29.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.921" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:29.918" endtime="20201110 08:37:29.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.930" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 7.652999999996357e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 6.111000000003086e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999442133e-07, 7.694000000002532e-06, 4.7300000000083386e-07, 4.985999999998492e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7299999999389497e-07, 8.208000000002602e-06, 4.720000000013602e-07, 5.097000000002516e-06, 4.7299999999389497e-07, 8.736000000002242e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 5.402999999994107e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 4.846999999995327e-06, 4.720000000013602e-07, 4.472999999997895e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7300000000083386e-07, 6.429999999994773e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 4.720000000013602e-07, 8.541999999993333e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7299999999389497e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.290999999997548e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.583000000002446e-06, 4.720000000013602e-07], 'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'diff': [0, 4.720000000013602e-07, 7.652999999996357e-06, 5.419999999992098e-07, 5.583000000003446e-06, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.7300000000083386e-07, 6.111000000003086e-06, 4.720000000013602e-07, 9.597000000000078e-06, 4.7199999999442133e-07, 1.0278000000002452e-05, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 5.695000000000006e-06, 4.7199999999442133e-07, 7.694000000002532e-06, 4.7300000000083386e-07, 4.985999999998492e-06, 4.720000000013602e-07, 1.0805000000002618e-05, 4.7299999999389497e-07, 8.208000000002602e-06, 4.720000000013602e-07, 5.097000000002516e-06, 4.7299999999389497e-07, 8.736000000002242e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 9.235999999995803e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 5.402999999994107e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 8.638999999997787e-06, 4.720000000013602e-07, 1.0208999999997137e-05, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 4.846999999995327e-06, 4.720000000013602e-07, 4.472999999997895e-06, 4.720000000013602e-07, 6.944000000001782e-06, 4.7300000000083386e-07, 6.429999999994773e-06, 4.720000000013602e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 1.0514000000003132e-05, 4.720000000013602e-07, 8.541999999993333e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7299999999389497e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 1.0207999999997663e-05, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 5.290999999997548e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7300000000083386e-07, 9.679999999998024e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 9.443999999997343e-06, 4.7300000000083386e-07, 7.986000000001492e-06, 4.7199999999442133e-07, 4.583000000002446e-06, 4.720000000013602e-07], 'eventtime': [0.036362125, 0.036362597, 0.03637025, 0.036370792, 0.036376375, 0.036376847, 0.036387458, 0.036387931, 0.036394042, 0.036394514, 0.036404111, 0.036404583, 0.036414861, 0.036415333, 0.036422806, 0.036423278, 0.036434, 0.036434472, 0.036440167, 0.036440639, 0.036448333, 0.036448806, 0.036453792, 0.036454264, 0.036465069, 0.036465542, 0.03647375, 0.036474222, 0.036479319, 0.036479792, 0.036488528, 0.036489, 0.036494194, 0.036494667, 0.036503903, 0.036504375, 0.036515097, 0.036515569, 0.036523986, 0.036524458, 0.036529861, 0.036530333, 0.036540625, 0.036541097, 0.036549736, 0.036550208, 0.036560417, 0.036560889, 0.036570153, 0.036570625, 0.036577903, 0.036578375, 0.036583222, 0.036583694, 0.036588167, 0.036588639, 0.036595583, 0.036596056, 0.036602486, 0.036602958, 0.036609181, 0.036609653, 0.036620167, 0.036620639, 0.036629181, 0.036629653, 0.036634, 0.036634472, 0.036639847, 0.036640319, 0.036645819, 0.036646292, 0.036656069, 0.036656542, 0.03666675, 0.036667222, 0.036674708, 0.036675181, 0.03668025, 0.036680722, 0.036689556, 0.036690028, 0.036698139, 0.036698611, 0.036708181, 0.036708653, 0.036713944, 0.036714417, 0.036721583, 0.036722056, 0.036731736, 0.036732208, 0.036737417, 0.036737889, 0.036747333, 0.036747806, 0.036755792, 0.036756264, 0.036760847, 0.036761319]}</msg>
<status status="PASS" starttime="20201110 08:37:29.923" endtime="20201110 08:37:29.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.913" endtime="20201110 08:37:29.933"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:29.944" level="INFO">${RESULT} = [{'time': 0.036362597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036370792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:29.935" endtime="20201110 08:37:29.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:29.974" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201110 08:37:29.946" endtime="20201110 08:37:29.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.985" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:29.983" endtime="20201110 08:37:29.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:29.990" level="INFO">VALUE: [4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:29.987" endtime="20201110 08:37:29.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.976" endtime="20201110 08:37:29.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:29.999" endtime="20201110 08:37:30.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.007" endtime="20201110 08:37:30.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.003" endtime="20201110 08:37:30.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.994" endtime="20201110 08:37:30.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:29.383" endtime="20201110 08:37:30.033"></status>
</kw>
<msg timestamp="20201110 08:37:30.033" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.053" endtime="20201110 08:37:30.064"></status>
</kw>
<msg timestamp="20201110 08:37:30.065" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.050" endtime="20201110 08:37:30.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.071" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.067" endtime="20201110 08:37:30.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.073" endtime="20201110 08:37:30.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.043" endtime="20201110 08:37:30.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.038" endtime="20201110 08:37:30.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.097" endtime="20201110 08:37:30.446"></status>
</kw>
<msg timestamp="20201110 08:37:30.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.093" endtime="20201110 08:37:30.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035979028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.456" endtime="20201110 08:37:30.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.475" endtime="20201110 08:37:30.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.086" endtime="20201110 08:37:30.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.082" endtime="20201110 08:37:30.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.491" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:30.489" endtime="20201110 08:37:30.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.503" level="INFO">VALUE: [{'time': 0.035978556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035984931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.902999999994607e-06, 'source_diff': 5.902999999994607e-06}, {'time': 0.035985403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035992486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.035992958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036001556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597999999998551e-06, 'source_diff': 8.597999999998551e-06}, {'time': 0.036002028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036009208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.036009681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.029099999999561e-05, 'source_diff': 1.029099999999561e-05}, {'time': 0.036020444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036028861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.036029333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036034722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.036035194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036039542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.036040014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036049486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.471999999996483e-06, 'source_diff': 9.471999999996483e-06}, {'time': 0.036049958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036054819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.036055292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036064667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036065139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036073861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.036074333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036083597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.036084069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036090736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666999999994927e-06, 'source_diff': 6.666999999994927e-06}, {'time': 0.036091208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036097778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.569999999997411e-06, 'source_diff': 6.569999999997411e-06}, {'time': 0.036098319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036104444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.036104917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036113125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036113597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036121403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.80600000000603e-06, 'source_diff': 7.80600000000603e-06}, {'time': 0.036121875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036131653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.036132125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036137528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.036138, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036146819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.818999999993249e-06, 'source_diff': 8.818999999993249e-06}, {'time': 0.036147292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036153042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7500000000057505e-06, 'source_diff': 5.7500000000057505e-06}, {'time': 0.036153583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.03616, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.416999999994677e-06, 'source_diff': 6.416999999994677e-06}, {'time': 0.036160472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361665, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.036166972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03617175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.036172222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036181681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.036182153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036189639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.036190111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036197375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.036197847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036207319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472000000003422e-06, 'source_diff': 9.472000000003422e-06}, {'time': 0.036207792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0362135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.036213972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036223847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.875000000006406e-06, 'source_diff': 9.875000000006406e-06}, {'time': 0.036224319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036232042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.036232514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036238403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.036238875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036247181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.30600000000653e-06, 'source_diff': 8.30600000000653e-06}, {'time': 0.036247653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036257542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.036258014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036268736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0722000000004672e-05, 'source_diff': 1.0722000000004672e-05}, {'time': 0.036269208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036275431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.036275903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036284236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.332999999999258e-06, 'source_diff': 8.332999999999258e-06}, {'time': 0.036284708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0362895, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.036290042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036295222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.036295694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036301208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.036301681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036308736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.036309208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036319097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.036319569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036326014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444999999993817e-06, 'source_diff': 6.444999999993817e-06}, {'time': 0.036326486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036336472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.036336944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036345472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999993763e-06, 'source_diff': 8.527999999993763e-06}, {'time': 0.036345944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036350681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.737000000004654e-06, 'source_diff': 4.737000000004654e-06}, {'time': 0.036351153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036358847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.036359319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036367417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097999999998051e-06, 'source_diff': 8.097999999998051e-06}, {'time': 0.036367889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:30.494" endtime="20201110 08:37:30.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.483" endtime="20201110 08:37:30.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:30.562" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 7.0829999999980076e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 7.180000000002462e...</msg>
<status status="PASS" starttime="20201110 08:37:30.509" endtime="20201110 08:37:30.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.572" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:30.569" endtime="20201110 08:37:30.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.581" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 7.0829999999980076e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 7.180000000002462e-06, 4.7300000000083386e-07, 1.029099999999561e-05, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07, 4.34800000000124e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 6.666999999994927e-06, 4.720000000013602e-07, 6.569999999997411e-06, 5.409999999997361e-07, 6.125000000002656e-06, 4.7300000000083386e-07, 8.208000000002602e-06, 4.7199999999442133e-07, 7.80600000000603e-06, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 5.403000000001046e-06, 4.720000000013602e-07, 8.818999999993249e-06, 4.7300000000083386e-07, 5.7500000000057505e-06, 5.409999999997361e-07, 6.416999999994677e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.77800000000389e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.7199999999442133e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 7.723000000001146e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7199999999442133e-07, 8.30600000000653e-06, 4.7199999999442133e-07, 9.888999999999037e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.720000000013602e-07, 4.79200000000346e-06, 5.419999999992098e-07, 5.180000000000462e-06, 4.720000000013602e-07, 5.5139999999981315e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 6.444999999993817e-06, 4.720000000013602e-07, 9.986000000003492e-06, 4.720000000013602e-07, 8.527999999993763e-06, 4.720000000013602e-07, 4.737000000004654e-06, 4.7199999999442133e-07, 7.694000000002532e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 5.902999999994607e-06, 4.720000000013602e-07, 7.0829999999980076e-06, 4.720000000013602e-07, 8.597999999998551e-06, 4.720000000013602e-07, 7.180000000002462e-06, 4.7300000000083386e-07, 1.029099999999561e-05, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 5.389000000001476e-06, 4.720000000013602e-07, 4.34800000000124e-06, 4.720000000013602e-07, 9.471999999996483e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7300000000083386e-07, 9.374999999998967e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 6.666999999994927e-06, 4.720000000013602e-07, 6.569999999997411e-06, 5.409999999997361e-07, 6.125000000002656e-06, 4.7300000000083386e-07, 8.208000000002602e-06, 4.7199999999442133e-07, 7.80600000000603e-06, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 5.403000000001046e-06, 4.720000000013602e-07, 8.818999999993249e-06, 4.7300000000083386e-07, 5.7500000000057505e-06, 5.409999999997361e-07, 6.416999999994677e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.77800000000389e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7199999999442133e-07, 7.263999999999882e-06, 4.720000000013602e-07, 9.472000000003422e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.7199999999442133e-07, 9.875000000006406e-06, 4.7199999999442133e-07, 7.723000000001146e-06, 4.720000000013602e-07, 5.889000000001976e-06, 4.7199999999442133e-07, 8.30600000000653e-06, 4.7199999999442133e-07, 9.888999999999037e-06, 4.720000000013602e-07, 1.0722000000004672e-05, 4.7199999999442133e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 8.332999999999258e-06, 4.720000000013602e-07, 4.79200000000346e-06, 5.419999999992098e-07, 5.180000000000462e-06, 4.720000000013602e-07, 5.5139999999981315e-06, 4.7300000000083386e-07, 7.054999999998868e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 6.444999999993817e-06, 4.720000000013602e-07, 9.986000000003492e-06, 4.720000000013602e-07, 8.527999999993763e-06, 4.720000000013602e-07, 4.737000000004654e-06, 4.7199999999442133e-07, 7.694000000002532e-06, 4.720000000013602e-07, 8.097999999998051e-06, 4.720000000013602e-07], 'eventtime': [0.035978556, 0.035979028, 0.035984931, 0.035985403, 0.035992486, 0.035992958, 0.036001556, 0.036002028, 0.036009208, 0.036009681, 0.036019972, 0.036020444, 0.036028861, 0.036029333, 0.036034722, 0.036035194, 0.036039542, 0.036040014, 0.036049486, 0.036049958, 0.036054819, 0.036055292, 0.036064667, 0.036065139, 0.036073861, 0.036074333, 0.036083597, 0.036084069, 0.036090736, 0.036091208, 0.036097778, 0.036098319, 0.036104444, 0.036104917, 0.036113125, 0.036113597, 0.036121403, 0.036121875, 0.036131653, 0.036132125, 0.036137528, 0.036138, 0.036146819, 0.036147292, 0.036153042, 0.036153583, 0.03616, 0.036160472, 0.0361665, 0.036166972, 0.03617175, 0.036172222, 0.036181681, 0.036182153, 0.036189639, 0.036190111, 0.036197375, 0.036197847, 0.036207319, 0.036207792, 0.0362135, 0.036213972, 0.036223847, 0.036224319, 0.036232042, 0.036232514, 0.036238403, 0.036238875, 0.036247181, 0.036247653, 0.036257542, 0.036258014, 0.036268736, 0.036269208, 0.036275431, 0.036275903, 0.036284236, 0.036284708, 0.0362895, 0.036290042, 0.036295222, 0.036295694, 0.036301208, 0.036301681, 0.036308736, 0.036309208, 0.036319097, 0.036319569, 0.036326014, 0.036326486, 0.036336472, 0.036336944, 0.036345472, 0.036345944, 0.036350681, 0.036351153, 0.036358847, 0.036359319, 0.036367417, 0.036367889]}</msg>
<status status="PASS" starttime="20201110 08:37:30.574" endtime="20201110 08:37:30.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.564" endtime="20201110 08:37:30.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:30.595" level="INFO">${RESULT} = [{'time': 0.035979028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035985403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:30.586" endtime="20201110 08:37:30.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:30.626" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201110 08:37:30.597" endtime="20201110 08:37:30.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.636" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:30.634" endtime="20201110 08:37:30.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.642" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:30.639" endtime="20201110 08:37:30.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.628" endtime="20201110 08:37:30.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.651" endtime="20201110 08:37:30.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.659" endtime="20201110 08:37:30.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.655" endtime="20201110 08:37:30.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.646" endtime="20201110 08:37:30.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.035" endtime="20201110 08:37:30.685"></status>
</kw>
<msg timestamp="20201110 08:37:30.685" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.706" endtime="20201110 08:37:30.717"></status>
</kw>
<msg timestamp="20201110 08:37:30.718" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.703" endtime="20201110 08:37:30.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.724" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:30.720" endtime="20201110 08:37:30.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.727" endtime="20201110 08:37:30.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.694" endtime="20201110 08:37:30.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.690" endtime="20201110 08:37:30.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:30.750" endtime="20201110 08:37:31.087"></status>
</kw>
<msg timestamp="20201110 08:37:31.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037602069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037602542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:30.747" endtime="20201110 08:37:31.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037602069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037602542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.097" endtime="20201110 08:37:31.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.116" endtime="20201110 08:37:31.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.739" endtime="20201110 08:37:31.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.735" endtime="20201110 08:37:31.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.132" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:31.130" endtime="20201110 08:37:31.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.144" level="INFO">VALUE: [{'time': 0.037602069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037602542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037607625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.037608097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037614208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037614681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037622792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111000000005086e-06, 'source_diff': 8.111000000005086e-06}, {'time': 0.037623264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037628236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972000000005861e-06, 'source_diff': 4.972000000005861e-06}, {'time': 0.037628708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037637042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.33400000000567e-06, 'source_diff': 8.33400000000567e-06}, {'time': 0.037637514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037642819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.3050000000040565e-06, 'source_diff': 5.3050000000040565e-06}, {'time': 0.037643292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037647819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.037648292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037653486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.037653958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037661431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.037661903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037670431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037670903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037675542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037676014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037683306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.037683778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037692597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.037693069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037701903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.037702375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037710486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.037710958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037717931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9730000000003955e-06, 'source_diff': 6.9730000000003955e-06}, {'time': 0.037718403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037727764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.037728236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037738319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.037738792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037744917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.037745389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037751514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.037751986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037761875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.037762347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037772653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.037773125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037783431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.037783903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037794611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0707999999998163e-05, 'source_diff': 1.0707999999998163e-05}, {'time': 0.037795083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037802153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.037802625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037807694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.037808167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037815556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000003476e-06, 'source_diff': 7.389000000003476e-06}, {'time': 0.037816028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037825278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.03782575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037830222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.037830694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037839833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.037840306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037847472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.037847944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037857125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.180999999996997e-06, 'source_diff': 9.180999999996997e-06}, {'time': 0.037857597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037868097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.037868569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037874472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.037874944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037880736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.037881278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037887986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.037888458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037898764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.037899236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037907139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.037907611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037913736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.125000000002656e-06, 'source_diff': 6.125000000002656e-06}, {'time': 0.037914208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037924306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0098000000000051e-05, 'source_diff': 1.0098000000000051e-05}, {'time': 0.037924778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037929222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.037929694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037936028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333999999996731e-06, 'source_diff': 6.333999999996731e-06}, {'time': 0.0379365, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037943986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037944458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037949014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.037949486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037954472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9860000000054305e-06, 'source_diff': 4.9860000000054305e-06}, {'time': 0.037954944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037962736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.037963208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037971431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.037971903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037976764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.037977236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037983056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8200000000036e-06, 'source_diff': 5.8200000000036e-06}, {'time': 0.037983528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:31.135" endtime="20201110 08:37:31.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.124" endtime="20201110 08:37:31.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:31.206" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7299999999389497e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 4.97200000000586...</msg>
<status status="PASS" starttime="20201110 08:37:31.150" endtime="20201110 08:37:31.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.218" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:31.216" endtime="20201110 08:37:31.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.230" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7299999999389497e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 4.972000000005861e-06, 4.7199999999442133e-07, 8.33400000000567e-06, 4.7199999999442133e-07, 5.3050000000040565e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.9730000000003955e-06, 4.7199999999442133e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 6.125000000002656e-06, 4.7199999999442133e-07, 6.125000000002656e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 5.069000000003376e-06, 4.7299999999389497e-07, 7.389000000003476e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 4.471999999998422e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.7299999999389497e-07, 7.166000000002892e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.791999999997521e-06, 5.419999999992098e-07, 6.708000000001102e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 6.125000000002656e-06, 4.7199999999442133e-07, 1.0098000000000051e-05, 4.720000000013602e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.7199999999442133e-07, 4.9860000000054305e-06, 4.7199999999442133e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.223000000001646e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7199999999442133e-07, 5.8200000000036e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 6.111000000003086e-06, 4.7299999999389497e-07, 8.111000000005086e-06, 4.7199999999442133e-07, 4.972000000005861e-06, 4.7199999999442133e-07, 8.33400000000567e-06, 4.7199999999442133e-07, 5.3050000000040565e-06, 4.7300000000083386e-07, 4.526999999997228e-06, 4.7300000000083386e-07, 5.194000000000032e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.639000000000726e-06, 4.720000000013602e-07, 7.2919999999990215e-06, 4.720000000013602e-07, 8.819000000000188e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.110999999998147e-06, 4.720000000013602e-07, 6.9730000000003955e-06, 4.7199999999442133e-07, 9.360999999999398e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 6.125000000002656e-06, 4.7199999999442133e-07, 6.125000000002656e-06, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 1.0707999999998163e-05, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 5.069000000003376e-06, 4.7299999999389497e-07, 7.389000000003476e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.720000000013602e-07, 4.471999999998422e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.7299999999389497e-07, 7.166000000002892e-06, 4.720000000013602e-07, 9.180999999996997e-06, 4.720000000013602e-07, 1.0500000000003562e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 5.791999999997521e-06, 5.419999999992098e-07, 6.708000000001102e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 6.125000000002656e-06, 4.7199999999442133e-07, 1.0098000000000051e-05, 4.720000000013602e-07, 4.443999999999282e-06, 4.720000000013602e-07, 6.333999999996731e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.720000000013602e-07, 4.55600000000278e-06, 4.7199999999442133e-07, 4.9860000000054305e-06, 4.7199999999442133e-07, 7.791999999999522e-06, 4.720000000013602e-07, 8.223000000001646e-06, 4.720000000013602e-07, 4.861000000001836e-06, 4.7199999999442133e-07, 5.8200000000036e-06, 4.720000000013602e-07], 'eventtime': [0.037602069, 0.037602542, 0.037607625, 0.037608097, 0.037614208, 0.037614681, 0.037622792, 0.037623264, 0.037628236, 0.037628708, 0.037637042, 0.037637514, 0.037642819, 0.037643292, 0.037647819, 0.037648292, 0.037653486, 0.037653958, 0.037661431, 0.037661903, 0.037670431, 0.037670903, 0.037675542, 0.037676014, 0.037683306, 0.037683778, 0.037692597, 0.037693069, 0.037701903, 0.037702375, 0.037710486, 0.037710958, 0.037717931, 0.037718403, 0.037727764, 0.037728236, 0.037738319, 0.037738792, 0.037744917, 0.037745389, 0.037751514, 0.037751986, 0.037761875, 0.037762347, 0.037772653, 0.037773125, 0.037783431, 0.037783903, 0.037794611, 0.037795083, 0.037802153, 0.037802625, 0.037807694, 0.037808167, 0.037815556, 0.037816028, 0.037825278, 0.03782575, 0.037830222, 0.037830694, 0.037839833, 0.037840306, 0.037847472, 0.037847944, 0.037857125, 0.037857597, 0.037868097, 0.037868569, 0.037874472, 0.037874944, 0.037880736, 0.037881278, 0.037887986, 0.037888458, 0.037898764, 0.037899236, 0.037907139, 0.037907611, 0.037913736, 0.037914208, 0.037924306, 0.037924778, 0.037929222, 0.037929694, 0.037936028, 0.0379365, 0.037943986, 0.037944458, 0.037949014, 0.037949486, 0.037954472, 0.037954944, 0.037962736, 0.037963208, 0.037971431, 0.037971903, 0.037976764, 0.037977236, 0.037983056, 0.037983528]}</msg>
<status status="PASS" starttime="20201110 08:37:31.221" endtime="20201110 08:37:31.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.209" endtime="20201110 08:37:31.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.244" level="INFO">${RESULT} = [{'time': 0.037602542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037608097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:31.235" endtime="20201110 08:37:31.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:31.275" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.73000000000833...</msg>
<status status="PASS" starttime="20201110 08:37:31.246" endtime="20201110 08:37:31.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.286" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:31.283" endtime="20201110 08:37:31.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.292" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:31.289" endtime="20201110 08:37:31.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.277" endtime="20201110 08:37:31.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.301" endtime="20201110 08:37:31.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.309" endtime="20201110 08:37:31.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.305" endtime="20201110 08:37:31.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.296" endtime="20201110 08:37:31.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.686" endtime="20201110 08:37:31.335"></status>
</kw>
<msg timestamp="20201110 08:37:31.335" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.355" endtime="20201110 08:37:31.365"></status>
</kw>
<msg timestamp="20201110 08:37:31.367" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.352" endtime="20201110 08:37:31.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.373" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.369" endtime="20201110 08:37:31.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.375" endtime="20201110 08:37:31.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.344" endtime="20201110 08:37:31.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.340" endtime="20201110 08:37:31.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.398" endtime="20201110 08:37:31.737"></status>
</kw>
<msg timestamp="20201110 08:37:31.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036007097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036007569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.395" endtime="20201110 08:37:31.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036007097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036007569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.747" endtime="20201110 08:37:31.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.766" endtime="20201110 08:37:31.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.388" endtime="20201110 08:37:31.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.383" endtime="20201110 08:37:31.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.783" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:31.780" endtime="20201110 08:37:31.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.794" level="INFO">VALUE: [{'time': 0.036007097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036007569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0874999999993529e-05, 'source_diff': 1.0874999999993529e-05}, {'time': 0.036018986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036025944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.957999999994413e-06, 'source_diff': 6.957999999994413e-06}, {'time': 0.036026417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036032639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036033111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036042056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036042528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036046986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458000000005791e-06, 'source_diff': 4.458000000005791e-06}, {'time': 0.036047458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0360565, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.036056972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036064861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.888999999997037e-06, 'source_diff': 7.888999999997037e-06}, {'time': 0.036065333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036074181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.036074653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036082653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036083125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036089375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.036089847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036094278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.430999999999186e-06, 'source_diff': 4.430999999999186e-06}, {'time': 0.03609475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036100361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.036100833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036107472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036107944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036115417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472999999993957e-06, 'source_diff': 7.472999999993957e-06}, {'time': 0.036115889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036123903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.036124375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03612925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.036129722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036138875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.036139347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036148625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999994513e-06, 'source_diff': 9.277999999994513e-06}, {'time': 0.036149167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036154875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.036155347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036166056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0709000000004576e-05, 'source_diff': 1.0709000000004576e-05}, {'time': 0.036166528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036176722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036177194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036185431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.236999999994277e-06, 'source_diff': 8.236999999994277e-06}, {'time': 0.036185903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036195653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.036196125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036204194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.036204736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036213125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.388999999997537e-06, 'source_diff': 8.388999999997537e-06}, {'time': 0.036213597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036223903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.036224375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036231778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.03623225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036240125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.874999999997467e-06, 'source_diff': 7.874999999997467e-06}, {'time': 0.036240597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036245819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.221999999999172e-06, 'source_diff': 5.221999999999172e-06}, {'time': 0.036246292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036253639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.3469999999978275e-06, 'source_diff': 7.3469999999978275e-06}, {'time': 0.036254111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036261806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.036262278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036271542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999994943e-06, 'source_diff': 9.263999999994943e-06}, {'time': 0.036272014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036276458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.443999999999282e-06, 'source_diff': 4.443999999999282e-06}, {'time': 0.036276931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036281153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.036281625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036289542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.036290014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036296694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.679999999995023e-06, 'source_diff': 6.679999999995023e-06}, {'time': 0.036297236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036303986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.750000000006751e-06, 'source_diff': 6.750000000006751e-06}, {'time': 0.036304458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036311417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.036311889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036320833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.036321306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036328833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527000000000228e-06, 'source_diff': 7.527000000000228e-06}, {'time': 0.036329375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036338097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.722000000002672e-06, 'source_diff': 8.722000000002672e-06}, {'time': 0.036338569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.036346528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036354097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.036354569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036362569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999994123e-06, 'source_diff': 7.999999999994123e-06}, {'time': 0.036363042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0363675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.036367972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036375556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.036376028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036386528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0500000000003562e-05, 'source_diff': 1.0500000000003562e-05}, {'time': 0.036387, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036394806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.036395278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036404653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036405125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:31.785" endtime="20201110 08:37:31.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.774" endtime="20201110 08:37:31.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:31.856" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 1.0874999999993529e-05, 5.420000000061487e-07, 6.957999999994413e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.945000000003256...</msg>
<status status="PASS" starttime="20201110 08:37:31.800" endtime="20201110 08:37:31.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.865" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:31.863" endtime="20201110 08:37:31.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.874" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 1.0874999999993529e-05, 5.420000000061487e-07, 6.957999999994413e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 4.458000000005791e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.610999999995647e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 7.472999999993957e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 9.277999999994513e-06, 5.420000000061487e-07, 5.708000000000102e-06, 4.7199999999442133e-07, 1.0709000000004576e-05, 4.720000000013602e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 8.236999999994277e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 8.068999999999438e-06, 5.419999999992098e-07, 8.388999999997537e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 7.402999999996107e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.221999999999172e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.720000000013602e-07, 9.263999999994943e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 4.221999999998172e-06, 4.720000000013602e-07, 7.917000000003116e-06, 4.720000000013602e-07, 6.679999999995023e-06, 5.419999999992098e-07, 6.750000000006751e-06, 4.7199999999442133e-07, 6.959000000000826e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 5.419999999992098e-07, 8.722000000002672e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.7300000000083386e-07, 4.457999999998852e-06, 4.720000000013602e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 1.0874999999993529e-05, 5.420000000061487e-07, 6.957999999994413e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 4.458000000005791e-06, 4.7199999999442133e-07, 9.042000000000772e-06, 4.720000000013602e-07, 7.888999999997037e-06, 4.720000000013602e-07, 8.847999999998801e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.720000000013602e-07, 4.430999999999186e-06, 4.720000000013602e-07, 5.610999999995647e-06, 4.720000000013602e-07, 6.639000000002726e-06, 4.720000000013602e-07, 7.472999999993957e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.720000000013602e-07, 9.152999999997857e-06, 4.720000000013602e-07, 9.277999999994513e-06, 5.420000000061487e-07, 5.708000000000102e-06, 4.7199999999442133e-07, 1.0709000000004576e-05, 4.720000000013602e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 8.236999999994277e-06, 4.720000000013602e-07, 9.750000000002812e-06, 4.720000000013602e-07, 8.068999999999438e-06, 5.419999999992098e-07, 8.388999999997537e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 7.402999999996107e-06, 4.720000000013602e-07, 7.874999999997467e-06, 4.720000000013602e-07, 5.221999999999172e-06, 4.7300000000083386e-07, 7.3469999999978275e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.720000000013602e-07, 9.263999999994943e-06, 4.720000000013602e-07, 4.443999999999282e-06, 4.7300000000083386e-07, 4.221999999998172e-06, 4.720000000013602e-07, 7.917000000003116e-06, 4.720000000013602e-07, 6.679999999995023e-06, 5.419999999992098e-07, 6.750000000006751e-06, 4.7199999999442133e-07, 6.959000000000826e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.7300000000083386e-07, 7.527000000000228e-06, 5.419999999992098e-07, 8.722000000002672e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.720000000013602e-07, 7.568999999998938e-06, 4.720000000013602e-07, 7.999999999994123e-06, 4.7300000000083386e-07, 4.457999999998852e-06, 4.720000000013602e-07, 7.58400000000492e-06, 4.7199999999442133e-07, 1.0500000000003562e-05, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07], 'eventtime': [0.036007097, 0.036007569, 0.036018444, 0.036018986, 0.036025944, 0.036026417, 0.036032639, 0.036033111, 0.036042056, 0.036042528, 0.036046986, 0.036047458, 0.0360565, 0.036056972, 0.036064861, 0.036065333, 0.036074181, 0.036074653, 0.036082653, 0.036083125, 0.036089375, 0.036089847, 0.036094278, 0.03609475, 0.036100361, 0.036100833, 0.036107472, 0.036107944, 0.036115417, 0.036115889, 0.036123903, 0.036124375, 0.03612925, 0.036129722, 0.036138875, 0.036139347, 0.036148625, 0.036149167, 0.036154875, 0.036155347, 0.036166056, 0.036166528, 0.036176722, 0.036177194, 0.036185431, 0.036185903, 0.036195653, 0.036196125, 0.036204194, 0.036204736, 0.036213125, 0.036213597, 0.036223903, 0.036224375, 0.036231778, 0.03623225, 0.036240125, 0.036240597, 0.036245819, 0.036246292, 0.036253639, 0.036254111, 0.036261806, 0.036262278, 0.036271542, 0.036272014, 0.036276458, 0.036276931, 0.036281153, 0.036281625, 0.036289542, 0.036290014, 0.036296694, 0.036297236, 0.036303986, 0.036304458, 0.036311417, 0.036311889, 0.036320833, 0.036321306, 0.036328833, 0.036329375, 0.036338097, 0.036338569, 0.036346056, 0.036346528, 0.036354097, 0.036354569, 0.036362569, 0.036363042, 0.0363675, 0.036367972, 0.036375556, 0.036376028, 0.036386528, 0.036387, 0.036394806, 0.036395278, 0.036404653, 0.036405125]}</msg>
<status status="PASS" starttime="20201110 08:37:31.867" endtime="20201110 08:37:31.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.857" endtime="20201110 08:37:31.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.888" level="INFO">${RESULT} = [{'time': 0.036007569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036018986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.880" endtime="20201110 08:37:31.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:31.919" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 5.420000000061487e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201110 08:37:31.891" endtime="20201110 08:37:31.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.929" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:31.927" endtime="20201110 08:37:31.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.934" level="INFO">VALUE: [4.720000000013602e-07, 5.420000000061487e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:31.931" endtime="20201110 08:37:31.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.921" endtime="20201110 08:37:31.937"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.943" endtime="20201110 08:37:31.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.952" endtime="20201110 08:37:31.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.947" endtime="20201110 08:37:31.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.939" endtime="20201110 08:37:31.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.336" endtime="20201110 08:37:31.977"></status>
</kw>
<msg timestamp="20201110 08:37:31.978" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.997" endtime="20201110 08:37:32.008"></status>
</kw>
<msg timestamp="20201110 08:37:32.009" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.994" endtime="20201110 08:37:32.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.016" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.012" endtime="20201110 08:37:32.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.018" endtime="20201110 08:37:32.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.987" endtime="20201110 08:37:32.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.982" endtime="20201110 08:37:32.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.041" endtime="20201110 08:37:32.382"></status>
</kw>
<msg timestamp="20201110 08:37:32.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036172, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036172472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:32.038" endtime="20201110 08:37:32.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036172, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036172472, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:32.392" endtime="20201110 08:37:32.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.412" endtime="20201110 08:37:32.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.031" endtime="20201110 08:37:32.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.026" endtime="20201110 08:37:32.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.428" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:32.426" endtime="20201110 08:37:32.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.439" level="INFO">VALUE: [{'time': 0.036172, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036172472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036179222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.036179694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036187069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.036187542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036198361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0818999999995249e-05, 'source_diff': 1.0818999999995249e-05}, {'time': 0.036198833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036205472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.036205944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036212694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.036213167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036217722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.036218194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036226514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.036226986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036237597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.036238069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036246917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.036247389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036254764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.036255236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036264278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999993833e-06, 'source_diff': 9.041999999993833e-06}, {'time': 0.03626475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036271083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.036271556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036282278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.03628275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03628825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.036288722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036293597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.036294069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036299139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.036299611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.036305472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036311306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.83400000000317e-06, 'source_diff': 5.83400000000317e-06}, {'time': 0.036311778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036318, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036318472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036325528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.036326, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036336306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.036336778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036341347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.036341819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036348778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.03634925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036359333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.036359806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036368639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036369111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036378389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.277999999994513e-06, 'source_diff': 9.277999999994513e-06}, {'time': 0.036378861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036385167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.30600000000453e-06, 'source_diff': 6.30600000000453e-06}, {'time': 0.036385639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036390194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.036390667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036401194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.052699999999629e-05, 'source_diff': 1.052699999999629e-05}, {'time': 0.036401667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036411958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.036412431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036420528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036421, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036427014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.036427486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036432792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305999999996591e-06, 'source_diff': 5.305999999996591e-06}, {'time': 0.036433264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036438444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.036438917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036447014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036447486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036457583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.036458056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036463125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0689999999964375e-06, 'source_diff': 5.0689999999964375e-06}, {'time': 0.036463597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036472972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.036473444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036483736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036484208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036493903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.695000000004006e-06, 'source_diff': 9.695000000004006e-06}, {'time': 0.036494375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036502472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.036502944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036511889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999996317e-06, 'source_diff': 8.944999999996317e-06}, {'time': 0.036512361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036518097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.036518569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036526125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.036526597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036537111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.036537583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036544431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.84800000000374e-06, 'source_diff': 6.84800000000374e-06}, {'time': 0.036544903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036553444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.541000000000798e-06, 'source_diff': 8.541000000000798e-06}, {'time': 0.036553917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036558569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.036559042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036569444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0401999999999634e-05, 'source_diff': 1.0401999999999634e-05}, {'time': 0.036569917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:32.430" endtime="20201110 08:37:32.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.420" endtime="20201110 08:37:32.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:32.499" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 6.63900000000272...</msg>
<status status="PASS" starttime="20201110 08:37:32.445" endtime="20201110 08:37:32.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.508" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:32.506" endtime="20201110 08:37:32.509"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.517" level="INFO">VALUE: {'source_diff': [0, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 6.639000000002726e-06, 4.7199999999442133e-07, 6.749999999999812e-06, 4.7300000000083386e-07, 4.555000000003306e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.7199999999442133e-07, 8.847999999998801e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.720000000013602e-07, 5.388999999994537e-06, 4.720000000013602e-07, 5.83400000000317e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 4.569000000002876e-06, 4.7199999999442133e-07, 6.959000000000826e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.277999999994513e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 4.555000000003306e-06, 4.7300000000083386e-07, 1.052699999999629e-05, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.305999999996591e-06, 4.720000000013602e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 9.695000000004006e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 5.735999999999242e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 6.84800000000374e-06, 4.7199999999442133e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07], 'sourcediff': [0, 4.7199999999442133e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.7300000000083386e-07, 1.0818999999995249e-05, 4.720000000013602e-07, 6.639000000002726e-06, 4.7199999999442133e-07, 6.749999999999812e-06, 4.7300000000083386e-07, 4.555000000003306e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.7199999999442133e-07, 8.847999999998801e-06, 4.720000000013602e-07, 7.375000000003906e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.720000000013602e-07, 5.07000000000285e-06, 4.720000000013602e-07, 5.388999999994537e-06, 4.720000000013602e-07, 5.83400000000317e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 7.05600000000528e-06, 4.7199999999442133e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 4.569000000002876e-06, 4.7199999999442133e-07, 6.959000000000826e-06, 4.720000000013602e-07, 1.0083000000001008e-05, 4.7300000000083386e-07, 8.832999999999758e-06, 4.720000000013602e-07, 9.277999999994513e-06, 4.720000000013602e-07, 6.30600000000453e-06, 4.7199999999442133e-07, 4.555000000003306e-06, 4.7300000000083386e-07, 1.052699999999629e-05, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 5.305999999996591e-06, 4.720000000013602e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.7300000000083386e-07, 5.0689999999964375e-06, 4.720000000013602e-07, 9.374999999998967e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 9.695000000004006e-06, 4.720000000013602e-07, 8.096999999998578e-06, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 5.735999999999242e-06, 4.720000000013602e-07, 7.555999999998841e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 6.84800000000374e-06, 4.7199999999442133e-07, 8.541000000000798e-06, 4.7300000000083386e-07, 4.652000000000822e-06, 4.7300000000083386e-07, 1.0401999999999634e-05, 4.7300000000083386e-07], 'eventtime': [0.036172, 0.036172472, 0.036179222, 0.036179694, 0.036187069, 0.036187542, 0.036198361, 0.036198833, 0.036205472, 0.036205944, 0.036212694, 0.036213167, 0.036217722, 0.036218194, 0.036226514, 0.036226986, 0.036237597, 0.036238069, 0.036246917, 0.036247389, 0.036254764, 0.036255236, 0.036264278, 0.03626475, 0.036271083, 0.036271556, 0.036282278, 0.03628275, 0.03628825, 0.036288722, 0.036293597, 0.036294069, 0.036299139, 0.036299611, 0.036305, 0.036305472, 0.036311306, 0.036311778, 0.036318, 0.036318472, 0.036325528, 0.036326, 0.036336306, 0.036336778, 0.036341347, 0.036341819, 0.036348778, 0.03634925, 0.036359333, 0.036359806, 0.036368639, 0.036369111, 0.036378389, 0.036378861, 0.036385167, 0.036385639, 0.036390194, 0.036390667, 0.036401194, 0.036401667, 0.036411958, 0.036412431, 0.036420528, 0.036421, 0.036427014, 0.036427486, 0.036432792, 0.036433264, 0.036438444, 0.036438917, 0.036447014, 0.036447486, 0.036457583, 0.036458056, 0.036463125, 0.036463597, 0.036472972, 0.036473444, 0.036483736, 0.036484208, 0.036493903, 0.036494375, 0.036502472, 0.036502944, 0.036511889, 0.036512361, 0.036518097, 0.036518569, 0.036526125, 0.036526597, 0.036537111, 0.036537583, 0.036544431, 0.036544903, 0.036553444, 0.036553917, 0.036558569, 0.036559042, 0.036569444, 0.036569917]}</msg>
<status status="PASS" starttime="20201110 08:37:32.511" endtime="20201110 08:37:32.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.501" endtime="20201110 08:37:32.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.532" level="INFO">${RESULT} = [{'time': 0.036172472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036179694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:32.523" endtime="20201110 08:37:32.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:32.562" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e...</msg>
<status status="PASS" starttime="20201110 08:37:32.534" endtime="20201110 08:37:32.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.572" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:32.570" endtime="20201110 08:37:32.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.578" level="INFO">VALUE: [4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:32.575" endtime="20201110 08:37:32.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.564" endtime="20201110 08:37:32.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.587" endtime="20201110 08:37:32.589"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.595" endtime="20201110 08:37:32.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.591" endtime="20201110 08:37:32.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.582" endtime="20201110 08:37:32.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.979" endtime="20201110 08:37:32.620"></status>
</kw>
<msg timestamp="20201110 08:37:32.621" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.643" endtime="20201110 08:37:32.654"></status>
</kw>
<msg timestamp="20201110 08:37:32.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.640" endtime="20201110 08:37:32.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.661" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.657" endtime="20201110 08:37:32.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.664" endtime="20201110 08:37:32.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.630" endtime="20201110 08:37:32.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.625" endtime="20201110 08:37:32.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.687" endtime="20201110 08:37:33.025"></status>
</kw>
<msg timestamp="20201110 08:37:33.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038566625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038567097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.684" endtime="20201110 08:37:33.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038566625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038567097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.034" endtime="20201110 08:37:33.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.054" endtime="20201110 08:37:33.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.676" endtime="20201110 08:37:33.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.672" endtime="20201110 08:37:33.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.070" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:33.068" endtime="20201110 08:37:33.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.082" level="INFO">VALUE: [{'time': 0.038566625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038567097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038571333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.038571806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038582611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0805000000002618e-05, 'source_diff': 1.0805000000002618e-05}, {'time': 0.038583083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038588986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.038589458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038598514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.038598986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038606889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.038607361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038614417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.038614889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038624792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.038625333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.038635625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.038636097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038645986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.888999999999037e-06, 'source_diff': 9.888999999999037e-06}, {'time': 0.038646458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038651542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083999999995481e-06, 'source_diff': 5.083999999995481e-06}, {'time': 0.038652014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038657514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.038657986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038665556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.038666028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038671319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2910000000044866e-06, 'source_diff': 5.2910000000044866e-06}, {'time': 0.038671792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038680944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.038681417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038687639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.038688111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038697361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.038697833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038707125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.038707667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038711903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.038712375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038720917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.038721389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038730222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.038730694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038735875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.038736347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038741417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.038741889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038747083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.038747556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038754194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.6379999999963135e-06, 'source_diff': 6.6379999999963135e-06}, {'time': 0.038754667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0387615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.038761972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038767889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.038768361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038772583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.038773056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038782625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.038783097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038787972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.038788444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038798736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.038799208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038808861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.038809333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038820153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.038820625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038830403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.038830875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038841375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0499999999996623e-05, 'source_diff': 1.0499999999996623e-05}, {'time': 0.038841847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038846931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.038847403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038852292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.888999999994037e-06, 'source_diff': 4.888999999994037e-06}, {'time': 0.038852764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038860847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.038861319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038866194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.038866667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038871444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.038871917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038877514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.038877986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038885458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.471999999994483e-06, 'source_diff': 7.471999999994483e-06}, {'time': 0.038885931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038895917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.038896389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038903153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.038903625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038908694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069000000003376e-06, 'source_diff': 5.069000000003376e-06}, {'time': 0.038909167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038916528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.038917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038923236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.038923708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038932236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.038932708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038940375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.038940847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038947139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.038947681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:33.073" endtime="20201110 08:37:33.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.062" endtime="20201110 08:37:33.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:33.142" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 4.2359999999977416e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 9.0560000000003...</msg>
<status status="PASS" starttime="20201110 08:37:33.088" endtime="20201110 08:37:33.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.151" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:33.149" endtime="20201110 08:37:33.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.160" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 4.2359999999977416e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.902999999998607e-06, 5.409999999997361e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 5.083999999995481e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 5.2910000000044866e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.292000000001022e-06, 5.419999999992098e-07, 4.2359999999977416e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.7199999999442133e-07, 5.07000000000285e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 6.6379999999963135e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.7300000000083386e-07, 9.569000000000938e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.08400000000242e-06, 4.720000000013602e-07, 4.888999999994037e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 4.776999999997478e-06, 4.7300000000083386e-07, 5.597000000003016e-06, 4.720000000013602e-07, 7.471999999994483e-06, 4.7300000000083386e-07, 9.986000000003492e-06, 4.720000000013602e-07, 6.763999999999382e-06, 4.7199999999442133e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 6.291999999998021e-06, 5.419999999992098e-07], 'sourcediff': [0, 4.720000000013602e-07, 4.2359999999977416e-06, 4.7300000000083386e-07, 1.0805000000002618e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 9.056000000000342e-06, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 9.902999999998607e-06, 5.409999999997361e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.888999999999037e-06, 4.720000000013602e-07, 5.083999999995481e-06, 4.720000000013602e-07, 5.499999999998562e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 5.2910000000044866e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 6.222000000000172e-06, 4.7199999999442133e-07, 9.250000000002312e-06, 4.720000000013602e-07, 9.292000000001022e-06, 5.419999999992098e-07, 4.2359999999977416e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.7199999999442133e-07, 5.07000000000285e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7300000000083386e-07, 6.6379999999963135e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 4.221999999998172e-06, 4.7300000000083386e-07, 9.569000000000938e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 9.778000000001952e-06, 4.720000000013602e-07, 1.0499999999996623e-05, 4.720000000013602e-07, 5.08400000000242e-06, 4.720000000013602e-07, 4.888999999994037e-06, 4.720000000013602e-07, 8.082999999999008e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 4.776999999997478e-06, 4.7300000000083386e-07, 5.597000000003016e-06, 4.720000000013602e-07, 7.471999999994483e-06, 4.7300000000083386e-07, 9.986000000003492e-06, 4.720000000013602e-07, 6.763999999999382e-06, 4.7199999999442133e-07, 5.069000000003376e-06, 4.7300000000083386e-07, 7.360999999997397e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 7.666999999995927e-06, 4.720000000013602e-07, 6.291999999998021e-06, 5.419999999992098e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.038566625, 0.038567097, 0.038571333, 0.038571806, 0.038582611, 0.038583083, 0.038588986, 0.038589458, 0.038598514, 0.038598986, 0.038606889, 0.038607361, 0.038614417, 0.038614889, 0.038624792, 0.038625333, 0.038635625, 0.038636097, 0.038645986, 0.038646458, 0.038651542, 0.038652014, 0.038657514, 0.038657986, 0.038665556, 0.038666028, 0.038671319, 0.038671792, 0.038680944, 0.038681417, 0.038687639, 0.038688111, 0.038697361, 0.038697833, 0.038707125, 0.038707667, 0.038711903, 0.038712375, 0.038720917, 0.038721389, 0.038730222, 0.038730694, 0.038735875, 0.038736347, 0.038741417, 0.038741889, 0.038747083, 0.038747556, 0.038754194, 0.038754667, 0.0387615, 0.038761972, 0.038767889, 0.038768361, 0.038772583, 0.038773056, 0.038782625, 0.038783097, 0.038787972, 0.038788444, 0.038798736, 0.038799208, 0.038808861, 0.038809333, 0.038820153, 0.038820625, 0.038830403, 0.038830875, 0.038841375, 0.038841847, 0.038846931, 0.038847403, 0.038852292, 0.038852764, 0.038860847, 0.038861319, 0.038866194, 0.038866667, 0.038871444, 0.038871917, 0.038877514, 0.038877986, 0.038885458, 0.038885931, 0.038895917, 0.038896389, 0.038903153, 0.038903625, 0.038908694, 0.038909167, 0.038916528, 0.038917, 0.038923236, 0.038923708, 0.038932236, 0.038932708, 0.038940375, 0.038940847, 0.038947139, 0.038947681]}</msg>
<status status="PASS" starttime="20201110 08:37:33.153" endtime="20201110 08:37:33.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.144" endtime="20201110 08:37:33.164"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.175" level="INFO">${RESULT} = [{'time': 0.038567097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038571806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.166" endtime="20201110 08:37:33.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:33.205" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-0...</msg>
<status status="PASS" starttime="20201110 08:37:33.177" endtime="20201110 08:37:33.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.216" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:33.213" endtime="20201110 08:37:33.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.222" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:37:33.219" endtime="20201110 08:37:33.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.207" endtime="20201110 08:37:33.224"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.231" endtime="20201110 08:37:33.233"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.239" endtime="20201110 08:37:33.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.234" endtime="20201110 08:37:33.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.226" endtime="20201110 08:37:33.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.622" endtime="20201110 08:37:33.267"></status>
</kw>
<msg timestamp="20201110 08:37:33.268" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.297" endtime="20201110 08:37:33.308"></status>
</kw>
<msg timestamp="20201110 08:37:33.310" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.292" endtime="20201110 08:37:33.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.319" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.312" endtime="20201110 08:37:33.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.323" endtime="20201110 08:37:33.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.280" endtime="20201110 08:37:33.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.273" endtime="20201110 08:37:33.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.351" endtime="20201110 08:37:33.696"></status>
</kw>
<msg timestamp="20201110 08:37:33.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048871722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:33.347" endtime="20201110 08:37:33.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048871722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:33.705" endtime="20201110 08:37:33.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.724" endtime="20201110 08:37:33.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.340" endtime="20201110 08:37:33.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.335" endtime="20201110 08:37:33.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.741" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:33.739" endtime="20201110 08:37:33.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.752" level="INFO">VALUE: [{'time': 0.04887125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048871722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048876917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.1949999999995056e-06, 'source_diff': 5.1949999999995056e-06}, {'time': 0.048877389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048884347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.048884819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048891347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.048891819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048898986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.048899458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048904431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.972999999998395e-06, 'source_diff': 4.972999999998395e-06}, {'time': 0.048904903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.04891375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.048914222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048920458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.048920931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.048928611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.679999999996023e-06, 'source_diff': 7.679999999996023e-06}, {'time': 0.048929083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048936986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.048937458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048948292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0833999999994293e-05, 'source_diff': 1.0833999999994293e-05}, {'time': 0.048948764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048953625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.048954097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048962111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.048962583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.048967556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.973000000005334e-06, 'source_diff': 4.973000000005334e-06}, {'time': 0.048968028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.048975736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.708000000002102e-06, 'source_diff': 7.708000000002102e-06}, {'time': 0.048976208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048980417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208999999998075e-06, 'source_diff': 4.208999999998075e-06}, {'time': 0.048980889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048987111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.048987583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048993292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.048993764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049000611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.049001083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049008569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.049009042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.049018194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.049018667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.049028778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.04902925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049033903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999993357e-06, 'source_diff': 4.652999999993357e-06}, {'time': 0.049034375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049044042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.049044514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.049052833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.049053306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.049062778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.472000000003422e-06, 'source_diff': 9.472000000003422e-06}, {'time': 0.04906325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049068444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.049068917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.049074792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.049075333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.049080681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.34800000000224e-06, 'source_diff': 5.34800000000224e-06}, {'time': 0.049081153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049085722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.568999999995937e-06, 'source_diff': 4.568999999995937e-06}, {'time': 0.049086194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049093153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.049093625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049104028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.0491045, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049110528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.049111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049116597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.049117069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049125944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.874999999998467e-06, 'source_diff': 8.874999999998467e-06}, {'time': 0.049126417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.04913575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.049136222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049142361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.049142833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.049149361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.52800000000564e-06, 'source_diff': 6.52800000000564e-06}, {'time': 0.049149833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.049156056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.049156528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049167139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.049167611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049177292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.049177764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049186389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.049186861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049191097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2360000000046805e-06, 'source_diff': 4.2360000000046805e-06}, {'time': 0.049191569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.049195819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.25000000000425e-06, 'source_diff': 4.25000000000425e-06}, {'time': 0.049196361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.049204986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.049205458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049215444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.049215917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.049225694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.049226167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.049234583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.415999999997203e-06, 'source_diff': 8.415999999997203e-06}, {'time': 0.049235056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.049240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.049241139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.049249056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.049249528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:33.743" endtime="20201110 08:37:33.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.733" endtime="20201110 08:37:33.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:33.814" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 7.166999999995427...</msg>
<status status="PASS" starttime="20201110 08:37:33.758" endtime="20201110 08:37:33.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.823" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:33.821" endtime="20201110 08:37:33.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.832" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.7300000000083386e-07, 7.679999999996023e-06, 4.720000000013602e-07, 7.903000000003546e-06, 4.720000000013602e-07, 1.0833999999994293e-05, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 4.973000000005334e-06, 4.7199999999442133e-07, 7.708000000002102e-06, 4.720000000013602e-07, 4.208999999998075e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 4.652999999993357e-06, 4.720000000013602e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 9.472000000003422e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7299999999389497e-07, 5.875000000002406e-06, 5.409999999997361e-07, 5.34800000000224e-06, 4.720000000013602e-07, 4.568999999995937e-06, 4.720000000013602e-07, 6.959000000000826e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 5.596999999996077e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 6.139000000002226e-06, 4.7199999999442133e-07, 6.52800000000564e-06, 4.7199999999442133e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 4.2360000000046805e-06, 4.7199999999442133e-07, 4.25000000000425e-06, 5.419999999992098e-07, 8.624999999998217e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 5.611000000002586e-06, 4.720000000013602e-07, 7.916999999996177e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 5.1949999999995056e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 4.972999999998395e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.7300000000083386e-07, 7.679999999996023e-06, 4.720000000013602e-07, 7.903000000003546e-06, 4.720000000013602e-07, 1.0833999999994293e-05, 4.720000000013602e-07, 4.861000000001836e-06, 4.720000000013602e-07, 8.014000000000632e-06, 4.7199999999442133e-07, 4.973000000005334e-06, 4.7199999999442133e-07, 7.708000000002102e-06, 4.720000000013602e-07, 4.208999999998075e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 6.8469999999973274e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 9.151999999998384e-06, 4.7300000000083386e-07, 1.0111000000000148e-05, 4.720000000013602e-07, 4.652999999993357e-06, 4.720000000013602e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 8.318999999999688e-06, 4.7300000000083386e-07, 9.472000000003422e-06, 4.720000000013602e-07, 5.194000000000032e-06, 4.7299999999389497e-07, 5.875000000002406e-06, 5.409999999997361e-07, 5.34800000000224e-06, 4.720000000013602e-07, 4.568999999995937e-06, 4.720000000013602e-07, 6.959000000000826e-06, 4.720000000013602e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 5.596999999996077e-06, 4.720000000013602e-07, 8.874999999998467e-06, 4.7300000000083386e-07, 9.333000000000258e-06, 4.720000000013602e-07, 6.139000000002226e-06, 4.7199999999442133e-07, 6.52800000000564e-06, 4.7199999999442133e-07, 6.2229999999996455e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 9.680999999997497e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 4.2360000000046805e-06, 4.7199999999442133e-07, 4.25000000000425e-06, 5.419999999992098e-07, 8.624999999998217e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07, 9.777000000002478e-06, 4.7300000000083386e-07, 8.415999999997203e-06, 4.7300000000083386e-07, 5.611000000002586e-06, 4.720000000013602e-07, 7.916999999996177e-06, 4.720000000013602e-07], 'eventtime': [0.04887125, 0.048871722, 0.048876917, 0.048877389, 0.048884347, 0.048884819, 0.048891347, 0.048891819, 0.048898986, 0.048899458, 0.048904431, 0.048904903, 0.04891375, 0.048914222, 0.048920458, 0.048920931, 0.048928611, 0.048929083, 0.048936986, 0.048937458, 0.048948292, 0.048948764, 0.048953625, 0.048954097, 0.048962111, 0.048962583, 0.048967556, 0.048968028, 0.048975736, 0.048976208, 0.048980417, 0.048980889, 0.048987111, 0.048987583, 0.048993292, 0.048993764, 0.049000611, 0.049001083, 0.049008569, 0.049009042, 0.049018194, 0.049018667, 0.049028778, 0.04902925, 0.049033903, 0.049034375, 0.049044042, 0.049044514, 0.049052833, 0.049053306, 0.049062778, 0.04906325, 0.049068444, 0.049068917, 0.049074792, 0.049075333, 0.049080681, 0.049081153, 0.049085722, 0.049086194, 0.049093153, 0.049093625, 0.049104028, 0.0491045, 0.049110528, 0.049111, 0.049116597, 0.049117069, 0.049125944, 0.049126417, 0.04913575, 0.049136222, 0.049142361, 0.049142833, 0.049149361, 0.049149833, 0.049156056, 0.049156528, 0.049167139, 0.049167611, 0.049177292, 0.049177764, 0.049186389, 0.049186861, 0.049191097, 0.049191569, 0.049195819, 0.049196361, 0.049204986, 0.049205458, 0.049215444, 0.049215917, 0.049225694, 0.049226167, 0.049234583, 0.049235056, 0.049240667, 0.049241139, 0.049249056, 0.049249528]}</msg>
<status status="PASS" starttime="20201110 08:37:33.825" endtime="20201110 08:37:33.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.816" endtime="20201110 08:37:33.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.847" level="INFO">${RESULT} = [{'time': 0.048871722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.048877389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:33.838" endtime="20201110 08:37:33.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:33.877" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07...</msg>
<status status="PASS" starttime="20201110 08:37:33.849" endtime="20201110 08:37:33.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.887" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:33.885" endtime="20201110 08:37:33.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.893" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:33.890" endtime="20201110 08:37:33.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.879" endtime="20201110 08:37:33.895"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.902" endtime="20201110 08:37:33.904"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.910" endtime="20201110 08:37:33.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.906" endtime="20201110 08:37:33.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.897" endtime="20201110 08:37:33.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.269" endtime="20201110 08:37:33.935"></status>
</kw>
<msg timestamp="20201110 08:37:33.936" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.956" endtime="20201110 08:37:33.966"></status>
</kw>
<msg timestamp="20201110 08:37:33.967" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.952" endtime="20201110 08:37:33.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.974" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.970" endtime="20201110 08:37:33.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.976" endtime="20201110 08:37:33.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.945" endtime="20201110 08:37:33.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.941" endtime="20201110 08:37:33.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.999" endtime="20201110 08:37:34.340"></status>
</kw>
<msg timestamp="20201110 08:37:34.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035918486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035918958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.996" endtime="20201110 08:37:34.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035918486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035918958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.350" endtime="20201110 08:37:34.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.369" endtime="20201110 08:37:34.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.989" endtime="20201110 08:37:34.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.984" endtime="20201110 08:37:34.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.385" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:34.383" endtime="20201110 08:37:34.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.397" level="INFO">VALUE: [{'time': 0.035918486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035918958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035928833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.035929306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035937736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.429999999996773e-06, 'source_diff': 8.429999999996773e-06}, {'time': 0.035938208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035943694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.035944167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035949458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.035949931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035956583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652000000002822e-06, 'source_diff': 6.652000000002822e-06}, {'time': 0.035957056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0359635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.035963972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035973958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.035974431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035984514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0083000000001008e-05, 'source_diff': 1.0083000000001008e-05}, {'time': 0.035984986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035990083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.035990556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035996931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.035997472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036005292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.819999999998661e-06, 'source_diff': 7.819999999998661e-06}, {'time': 0.036005833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036012889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.036013361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036019694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.036020167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036024708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.036025181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036030264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.036030736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036036958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036037431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036046611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.036047083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036056639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.036057111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036066667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555999999993903e-06, 'source_diff': 9.555999999993903e-06}, {'time': 0.036067139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036072653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.036073125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036079347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036079819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036085236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.036085708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036092014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.036092486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036100806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.319999999999161e-06, 'source_diff': 8.319999999999161e-06}, {'time': 0.036101278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036108042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.036108514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361185, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036118972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036123931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.036124403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036135222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0819000000002188e-05, 'source_diff': 1.0819000000002188e-05}, {'time': 0.036135694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036145681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986999999996027e-06, 'source_diff': 9.986999999996027e-06}, {'time': 0.036146153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036152819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.036153292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036160014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036160486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036169986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.500000000002562e-06, 'source_diff': 9.500000000002562e-06}, {'time': 0.036170458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036174778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.319999999995161e-06, 'source_diff': 4.319999999995161e-06}, {'time': 0.03617525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036181583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.036182056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036188806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.036189278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2220000000051106e-06, 'source_diff': 4.2220000000051106e-06}, {'time': 0.036193972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036203431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.459000000003326e-06, 'source_diff': 9.459000000003326e-06}, {'time': 0.036203903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03621275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.036213222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036218292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.069999999995911e-06, 'source_diff': 5.069999999995911e-06}, {'time': 0.036218764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036228028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.0362285, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036238167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.036238639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036247069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.429999999996773e-06, 'source_diff': 8.429999999996773e-06}, {'time': 0.036247542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036252083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.540999999996798e-06, 'source_diff': 4.540999999996798e-06}, {'time': 0.036252556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036260972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416000000004142e-06, 'source_diff': 8.416000000004142e-06}, {'time': 0.036261444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036270097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000004296e-06, 'source_diff': 8.653000000004296e-06}, {'time': 0.036270569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036281056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486999999996527e-05, 'source_diff': 1.0486999999996527e-05}, {'time': 0.036281528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036288694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.036289167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036295819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652000000002822e-06, 'source_diff': 6.652000000002822e-06}, {'time': 0.036296292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036303542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.250000000000312e-06, 'source_diff': 7.250000000000312e-06}, {'time': 0.036304014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:34.388" endtime="20201110 08:37:34.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.377" endtime="20201110 08:37:34.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:34.457" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.290999999997548...</msg>
<status status="PASS" starttime="20201110 08:37:34.403" endtime="20201110 08:37:34.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.466" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:34.464" endtime="20201110 08:37:34.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.475" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.290999999997548e-06, 4.7300000000083386e-07, 6.652000000002822e-06, 4.7300000000083386e-07, 6.444000000001282e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.7199999999442133e-07, 5.097000000002516e-06, 4.7300000000083386e-07, 6.375000000002906e-06, 5.409999999997361e-07, 7.819999999998661e-06, 5.409999999997361e-07, 7.055999999998341e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 5.51400000000507e-06, 4.7199999999442133e-07, 6.222000000000172e-06, 4.720000000013602e-07, 5.417000000000616e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 6.763999999999382e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 9.986999999996027e-06, 4.720000000013602e-07, 6.666000000002392e-06, 4.7299999999389497e-07, 6.722000000000672e-06, 4.720000000013602e-07, 9.500000000002562e-06, 4.720000000013602e-07, 4.319999999995161e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7299999999389497e-07, 6.749999999999812e-06, 4.720000000013602e-07, 4.2220000000051106e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 5.069999999995911e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.720000000013602e-07, 8.429999999996773e-06, 4.7300000000083386e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 8.416000000004142e-06, 4.7199999999442133e-07, 8.653000000004296e-06, 4.720000000013602e-07, 1.0486999999996527e-05, 4.720000000013602e-07, 7.166000000002892e-06, 4.7299999999389497e-07, 6.652000000002822e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 5.485999999998992e-06, 4.7300000000083386e-07, 5.290999999997548e-06, 4.7300000000083386e-07, 6.652000000002822e-06, 4.7300000000083386e-07, 6.444000000001282e-06, 4.7199999999442133e-07, 9.986000000003492e-06, 4.7300000000083386e-07, 1.0083000000001008e-05, 4.7199999999442133e-07, 5.097000000002516e-06, 4.7300000000083386e-07, 6.375000000002906e-06, 5.409999999997361e-07, 7.819999999998661e-06, 5.409999999997361e-07, 7.055999999998341e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.7300000000083386e-07, 4.5410000000037365e-06, 4.7300000000083386e-07, 5.082999999996007e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.7300000000083386e-07, 9.179999999997523e-06, 4.720000000013602e-07, 9.556000000000842e-06, 4.720000000013602e-07, 9.555999999993903e-06, 4.720000000013602e-07, 5.51400000000507e-06, 4.7199999999442133e-07, 6.222000000000172e-06, 4.720000000013602e-07, 5.417000000000616e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 8.319999999999161e-06, 4.720000000013602e-07, 6.763999999999382e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 4.9589999999988255e-06, 4.720000000013602e-07, 1.0819000000002188e-05, 4.720000000013602e-07, 9.986999999996027e-06, 4.720000000013602e-07, 6.666000000002392e-06, 4.7299999999389497e-07, 6.722000000000672e-06, 4.720000000013602e-07, 9.500000000002562e-06, 4.720000000013602e-07, 4.319999999995161e-06, 4.720000000013602e-07, 6.333000000004196e-06, 4.7299999999389497e-07, 6.749999999999812e-06, 4.720000000013602e-07, 4.2220000000051106e-06, 4.7199999999442133e-07, 9.459000000003326e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.720000000013602e-07, 5.069999999995911e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.720000000013602e-07, 8.429999999996773e-06, 4.7300000000083386e-07, 4.540999999996798e-06, 4.7300000000083386e-07, 8.416000000004142e-06, 4.7199999999442133e-07, 8.653000000004296e-06, 4.720000000013602e-07, 1.0486999999996527e-05, 4.720000000013602e-07, 7.166000000002892e-06, 4.7299999999389497e-07, 6.652000000002822e-06, 4.7300000000083386e-07, 7.250000000000312e-06, 4.720000000013602e-07], 'eventtime': [0.035918486, 0.035918958, 0.035928833, 0.035929306, 0.035937736, 0.035938208, 0.035943694, 0.035944167, 0.035949458, 0.035949931, 0.035956583, 0.035957056, 0.0359635, 0.035963972, 0.035973958, 0.035974431, 0.035984514, 0.035984986, 0.035990083, 0.035990556, 0.035996931, 0.035997472, 0.036005292, 0.036005833, 0.036012889, 0.036013361, 0.036019694, 0.036020167, 0.036024708, 0.036025181, 0.036030264, 0.036030736, 0.036036958, 0.036037431, 0.036046611, 0.036047083, 0.036056639, 0.036057111, 0.036066667, 0.036067139, 0.036072653, 0.036073125, 0.036079347, 0.036079819, 0.036085236, 0.036085708, 0.036092014, 0.036092486, 0.036100806, 0.036101278, 0.036108042, 0.036108514, 0.0361185, 0.036118972, 0.036123931, 0.036124403, 0.036135222, 0.036135694, 0.036145681, 0.036146153, 0.036152819, 0.036153292, 0.036160014, 0.036160486, 0.036169986, 0.036170458, 0.036174778, 0.03617525, 0.036181583, 0.036182056, 0.036188806, 0.036189278, 0.0361935, 0.036193972, 0.036203431, 0.036203903, 0.03621275, 0.036213222, 0.036218292, 0.036218764, 0.036228028, 0.0362285, 0.036238167, 0.036238639, 0.036247069, 0.036247542, 0.036252083, 0.036252556, 0.036260972, 0.036261444, 0.036270097, 0.036270569, 0.036281056, 0.036281528, 0.036288694, 0.036289167, 0.036295819, 0.036296292, 0.036303542, 0.036304014]}</msg>
<status status="PASS" starttime="20201110 08:37:34.468" endtime="20201110 08:37:34.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.458" endtime="20201110 08:37:34.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.490" level="INFO">${RESULT} = [{'time': 0.035918958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035929306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:34.481" endtime="20201110 08:37:34.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:34.520" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.730000000008338...</msg>
<status status="PASS" starttime="20201110 08:37:34.492" endtime="20201110 08:37:34.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.530" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:34.528" endtime="20201110 08:37:34.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.536" level="INFO">VALUE: [4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:34.533" endtime="20201110 08:37:34.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.522" endtime="20201110 08:37:34.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.544" endtime="20201110 08:37:34.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.553" endtime="20201110 08:37:34.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.548" endtime="20201110 08:37:34.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.540" endtime="20201110 08:37:34.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.937" endtime="20201110 08:37:34.578"></status>
</kw>
<msg timestamp="20201110 08:37:34.579" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.600" endtime="20201110 08:37:34.611"></status>
</kw>
<msg timestamp="20201110 08:37:34.612" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.597" endtime="20201110 08:37:34.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.618" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.614" endtime="20201110 08:37:34.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.621" endtime="20201110 08:37:34.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.588" endtime="20201110 08:37:34.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.583" endtime="20201110 08:37:34.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.649" endtime="20201110 08:37:34.991"></status>
</kw>
<msg timestamp="20201110 08:37:34.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037699208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037699681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.645" endtime="20201110 08:37:34.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037699208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037699681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.000" endtime="20201110 08:37:35.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.020" endtime="20201110 08:37:35.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.637" endtime="20201110 08:37:35.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.631" endtime="20201110 08:37:35.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.036" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:35.034" endtime="20201110 08:37:35.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.048" level="INFO">VALUE: [{'time': 0.037699208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037699681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037708319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.637999999998314e-06, 'source_diff': 8.637999999998314e-06}, {'time': 0.037708792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037717528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037718, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037727139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037727611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037736556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.944999999996317e-06, 'source_diff': 8.944999999996317e-06}, {'time': 0.037737028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03774325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.037743722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037754542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.037755014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037762389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037762861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037768986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.037769458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037778722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.037779194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037786681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.037787153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.037795514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037801528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.037802, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037812625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.037813097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037823542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0445000000004756e-05, 'source_diff': 1.0445000000004756e-05}, {'time': 0.037824083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037833639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.037834111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037840347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.236000000006681e-06, 'source_diff': 6.236000000006681e-06}, {'time': 0.037840819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037847986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.037848458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037853347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.037853819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037858778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.959000000005764e-06, 'source_diff': 4.959000000005764e-06}, {'time': 0.03785925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037866111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.037866583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037877042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0458999999997387e-05, 'source_diff': 1.0458999999997387e-05}, {'time': 0.037877583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037882736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037883208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03789175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.542000000000272e-06, 'source_diff': 8.542000000000272e-06}, {'time': 0.037892222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037898431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2090000000000756e-06, 'source_diff': 6.2090000000000756e-06}, {'time': 0.037898903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037904931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.037905403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0379135, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.097000000005516e-06, 'source_diff': 8.097000000005516e-06}, {'time': 0.037913972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0379225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037922972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037928681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.037929153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037936417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037936889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037944264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.037944736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037951472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037951944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037957958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.037958431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037963528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.097000000002516e-06, 'source_diff': 5.097000000002516e-06}, {'time': 0.037964, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037970111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.111000000003086e-06, 'source_diff': 6.111000000003086e-06}, {'time': 0.037970583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037979417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.037979889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037988611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.037989083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037996889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.037997361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038003903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.038004375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038014569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.038015042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038022444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402000000003572e-06, 'source_diff': 7.402000000003572e-06}, {'time': 0.038022986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.038029625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.038030097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038037583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.038038056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038044069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.012999999999158e-06, 'source_diff': 6.012999999999158e-06}, {'time': 0.038044542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038055264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.038055736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.038066361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0625000000000218e-05, 'source_diff': 1.0625000000000218e-05}, {'time': 0.038066833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03807325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.038073722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038082458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.038082931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.038087278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.03808775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.038092917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.038093389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:35.039" endtime="20201110 08:37:35.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.028" endtime="20201110 08:37:35.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:35.109" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 8.637999999998314e-06, 4.7300000000083386e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.944999999996317...</msg>
<status status="PASS" starttime="20201110 08:37:35.054" endtime="20201110 08:37:35.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.118" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:35.116" endtime="20201110 08:37:35.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.128" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 8.637999999998314e-06, 4.7300000000083386e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.7199999999442133e-07, 1.0445000000004756e-05, 5.409999999997361e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 6.236000000006681e-06, 4.7199999999442133e-07, 7.167000000002366e-06, 4.720000000013602e-07, 4.889000000000976e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.720000000013602e-07, 1.0458999999997387e-05, 5.409999999997361e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 6.02800000000514e-06, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 5.097000000002516e-06, 4.7199999999442133e-07, 6.111000000003086e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 7.402000000003572e-06, 5.419999999992098e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 6.012999999999158e-06, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 8.736000000002242e-06, 4.7300000000083386e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.7300000000083386e-07, 8.637999999998314e-06, 4.7300000000083386e-07, 8.736000000002242e-06, 4.720000000013602e-07, 9.138999999998287e-06, 4.720000000013602e-07, 8.944999999996317e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 1.0820000000001662e-05, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 6.124999999995717e-06, 4.720000000013602e-07, 9.264000000001882e-06, 4.720000000013602e-07, 7.4870000000004655e-06, 4.7199999999442133e-07, 7.889000000003976e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.720000000013602e-07, 1.0625000000000218e-05, 4.7199999999442133e-07, 1.0445000000004756e-05, 5.409999999997361e-07, 9.556000000000842e-06, 4.7199999999442133e-07, 6.236000000006681e-06, 4.7199999999442133e-07, 7.167000000002366e-06, 4.720000000013602e-07, 4.889000000000976e-06, 4.7199999999442133e-07, 4.959000000005764e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.720000000013602e-07, 1.0458999999997387e-05, 5.409999999997361e-07, 5.153000000000796e-06, 4.720000000013602e-07, 8.542000000000272e-06, 4.720000000013602e-07, 6.2090000000000756e-06, 4.7199999999442133e-07, 6.02800000000514e-06, 4.7199999999442133e-07, 8.097000000005516e-06, 4.7199999999442133e-07, 8.528000000000702e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 7.263999999999882e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 6.0139999999986316e-06, 4.7300000000083386e-07, 5.097000000002516e-06, 4.7199999999442133e-07, 6.111000000003086e-06, 4.720000000013602e-07, 8.833999999999231e-06, 4.720000000013602e-07, 8.721999999995733e-06, 4.720000000013602e-07, 7.805999999999091e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 1.0193999999998093e-05, 4.7300000000083386e-07, 7.402000000003572e-06, 5.419999999992098e-07, 6.638999999995787e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7300000000083386e-07, 6.012999999999158e-06, 4.7300000000083386e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 1.0625000000000218e-05, 4.720000000013602e-07, 6.417000000001616e-06, 4.7199999999442133e-07, 8.736000000002242e-06, 4.7300000000083386e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.037699208, 0.037699681, 0.037708319, 0.037708792, 0.037717528, 0.037718, 0.037727139, 0.037727611, 0.037736556, 0.037737028, 0.03774325, 0.037743722, 0.037754542, 0.037755014, 0.037762389, 0.037762861, 0.037768986, 0.037769458, 0.037778722, 0.037779194, 0.037786681, 0.037787153, 0.037795042, 0.037795514, 0.037801528, 0.037802, 0.037812625, 0.037813097, 0.037823542, 0.037824083, 0.037833639, 0.037834111, 0.037840347, 0.037840819, 0.037847986, 0.037848458, 0.037853347, 0.037853819, 0.037858778, 0.03785925, 0.037866111, 0.037866583, 0.037877042, 0.037877583, 0.037882736, 0.037883208, 0.03789175, 0.037892222, 0.037898431, 0.037898903, 0.037904931, 0.037905403, 0.0379135, 0.037913972, 0.0379225, 0.037922972, 0.037928681, 0.037929153, 0.037936417, 0.037936889, 0.037944264, 0.037944736, 0.037951472, 0.037951944, 0.037957958, 0.037958431, 0.037963528, 0.037964, 0.037970111, 0.037970583, 0.037979417, 0.037979889, 0.037988611, 0.037989083, 0.037996889, 0.037997361, 0.038003903, 0.038004375, 0.038014569, 0.038015042, 0.038022444, 0.038022986, 0.038029625, 0.038030097, 0.038037583, 0.038038056, 0.038044069, 0.038044542, 0.038055264, 0.038055736, 0.038066361, 0.038066833, 0.03807325, 0.038073722, 0.038082458, 0.038082931, 0.038087278, 0.03808775, 0.038092917, 0.038093389]}</msg>
<status status="PASS" starttime="20201110 08:37:35.121" endtime="20201110 08:37:35.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.111" endtime="20201110 08:37:35.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.142" level="INFO">${RESULT} = [{'time': 0.037699681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037708792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:35.133" endtime="20201110 08:37:35.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:35.173" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-0...</msg>
<status status="PASS" starttime="20201110 08:37:35.144" endtime="20201110 08:37:35.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.183" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:35.181" endtime="20201110 08:37:35.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.189" level="INFO">VALUE: [4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:35.186" endtime="20201110 08:37:35.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.175" endtime="20201110 08:37:35.191"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.198" endtime="20201110 08:37:35.200"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.206" endtime="20201110 08:37:35.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.202" endtime="20201110 08:37:35.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.193" endtime="20201110 08:37:35.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.580" endtime="20201110 08:37:35.231"></status>
</kw>
<msg timestamp="20201110 08:37:35.232" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.252" endtime="20201110 08:37:35.262"></status>
</kw>
<msg timestamp="20201110 08:37:35.263" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.248" endtime="20201110 08:37:35.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.266" endtime="20201110 08:37:35.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.272" endtime="20201110 08:37:35.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.241" endtime="20201110 08:37:35.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.236" endtime="20201110 08:37:35.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.295" endtime="20201110 08:37:35.636"></status>
</kw>
<msg timestamp="20201110 08:37:35.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.292" endtime="20201110 08:37:35.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.646" endtime="20201110 08:37:35.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.665" endtime="20201110 08:37:35.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.285" endtime="20201110 08:37:35.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.280" endtime="20201110 08:37:35.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.682" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:35.679" endtime="20201110 08:37:35.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.693" level="INFO">VALUE: [{'time': 0.036003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036003542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0360085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.036008972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036016653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.036017125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036022333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.036022806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036030486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.036030958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036041403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0444999999997817e-05, 'source_diff': 1.0444999999997817e-05}, {'time': 0.036041944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036048375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.036048847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036053722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.036054194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036059361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.036059833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036066694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.036067167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036075167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036075639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036086361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.036086833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036094625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.036095097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036099986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.036100458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036109083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.036109556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036118847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.036119389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036126667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036127139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036137417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.036137889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036146722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036147194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036155403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.209000000002076e-06, 'source_diff': 8.209000000002076e-06}, {'time': 0.036155875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036162014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.036162486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036169958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.036170431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036176889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.457999999993913e-06, 'source_diff': 6.457999999993913e-06}, {'time': 0.036177361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036185347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.986000000001492e-06, 'source_diff': 7.986000000001492e-06}, {'time': 0.036185819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036193097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036193569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036198028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.0361985, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0362065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.000000000001062e-06, 'source_diff': 8.000000000001062e-06}, {'time': 0.036206972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03621225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.036212722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036218194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.471999999999422e-06, 'source_diff': 5.471999999999422e-06}, {'time': 0.036218736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036225764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.036226236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036231625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.036232097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036240514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.036240986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036248153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.036248625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036254542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.036255014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036265458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0443999999998343e-05, 'source_diff': 1.0443999999998343e-05}, {'time': 0.036265931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036275361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.429999999997773e-06, 'source_diff': 9.429999999997773e-06}, {'time': 0.036275833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036283111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036283583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036293778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.03629425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036302153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.036302625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036311764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.139000000005226e-06, 'source_diff': 9.139000000005226e-06}, {'time': 0.036312236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036322556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.036323028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036329653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.036330125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036340333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0208000000004602e-05, 'source_diff': 1.0208000000004602e-05}, {'time': 0.036340806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036346056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.036346597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036355292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.694999999996067e-06, 'source_diff': 8.694999999996067e-06}, {'time': 0.036355764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036365125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036365597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036370681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.036371153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036380097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.036380569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036390764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.036391236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036398028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.036398569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:35.684" endtime="20201110 08:37:35.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.673" endtime="20201110 08:37:35.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:35.754" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 5.207999999999602e-06, 4.7300000000083386e-07, 7.68000000000296...</msg>
<status status="PASS" starttime="20201110 08:37:35.699" endtime="20201110 08:37:35.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.763" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:35.761" endtime="20201110 08:37:35.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.773" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 5.207999999999602e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 5.409999999997361e-07, 6.431000000001186e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.861000000003836e-06, 4.7299999999389497e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 4.889000000000976e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 5.419999999992098e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.209000000002076e-06, 4.7199999999442133e-07, 6.139000000002226e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 6.457999999993913e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 5.471999999999422e-06, 5.419999999992098e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 1.0208000000004602e-05, 4.7300000000083386e-07, 5.2499999999983116e-06, 5.409999999997361e-07, 8.694999999996067e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 5.08400000000242e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 6.7919999999985214e-06, 5.409999999997361e-07], 'sourcediff': [0, 4.7300000000083386e-07, 4.957999999999352e-06, 4.720000000013602e-07, 7.681000000002436e-06, 4.7199999999442133e-07, 5.207999999999602e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 1.0444999999997817e-05, 5.409999999997361e-07, 6.431000000001186e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7199999999442133e-07, 5.167000000000366e-06, 4.720000000013602e-07, 6.861000000003836e-06, 4.7299999999389497e-07, 8.000000000001062e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 7.791999999999522e-06, 4.720000000013602e-07, 4.889000000000976e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.7300000000083386e-07, 9.291000000001548e-06, 5.419999999992098e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.209000000002076e-06, 4.7199999999442133e-07, 6.139000000002226e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 6.457999999993913e-06, 4.720000000013602e-07, 7.986000000001492e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 4.458999999998325e-06, 4.720000000013602e-07, 8.000000000001062e-06, 4.7199999999442133e-07, 5.27800000000439e-06, 4.720000000013602e-07, 5.471999999999422e-06, 5.419999999992098e-07, 7.0279999999992016e-06, 4.720000000013602e-07, 5.389000000001476e-06, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 1.0443999999998343e-05, 4.7300000000083386e-07, 9.429999999997773e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 9.139000000005226e-06, 4.7199999999442133e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 1.0208000000004602e-05, 4.7300000000083386e-07, 5.2499999999983116e-06, 5.409999999997361e-07, 8.694999999996067e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 5.08400000000242e-06, 4.720000000013602e-07, 8.943999999996843e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 6.7919999999985214e-06, 5.409999999997361e-07], 'eventtime': [0.036003069, 0.036003542, 0.0360085, 0.036008972, 0.036016653, 0.036017125, 0.036022333, 0.036022806, 0.036030486, 0.036030958, 0.036041403, 0.036041944, 0.036048375, 0.036048847, 0.036053722, 0.036054194, 0.036059361, 0.036059833, 0.036066694, 0.036067167, 0.036075167, 0.036075639, 0.036086361, 0.036086833, 0.036094625, 0.036095097, 0.036099986, 0.036100458, 0.036109083, 0.036109556, 0.036118847, 0.036119389, 0.036126667, 0.036127139, 0.036137417, 0.036137889, 0.036146722, 0.036147194, 0.036155403, 0.036155875, 0.036162014, 0.036162486, 0.036169958, 0.036170431, 0.036176889, 0.036177361, 0.036185347, 0.036185819, 0.036193097, 0.036193569, 0.036198028, 0.0361985, 0.0362065, 0.036206972, 0.03621225, 0.036212722, 0.036218194, 0.036218736, 0.036225764, 0.036226236, 0.036231625, 0.036232097, 0.036240514, 0.036240986, 0.036248153, 0.036248625, 0.036254542, 0.036255014, 0.036265458, 0.036265931, 0.036275361, 0.036275833, 0.036283111, 0.036283583, 0.036293778, 0.03629425, 0.036302153, 0.036302625, 0.036311764, 0.036312236, 0.036322556, 0.036323028, 0.036329653, 0.036330125, 0.036340333, 0.036340806, 0.036346056, 0.036346597, 0.036355292, 0.036355764, 0.036365125, 0.036365597, 0.036370681, 0.036371153, 0.036380097, 0.036380569, 0.036390764, 0.036391236, 0.036398028, 0.036398569]}</msg>
<status status="PASS" starttime="20201110 08:37:35.766" endtime="20201110 08:37:35.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.756" endtime="20201110 08:37:35.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.787" level="INFO">${RESULT} = [{'time': 0.036003542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036008972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:35.778" endtime="20201110 08:37:35.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:35.818" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e...</msg>
<status status="PASS" starttime="20201110 08:37:35.789" endtime="20201110 08:37:35.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.828" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:35.826" endtime="20201110 08:37:35.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.834" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07]</msg>
<status status="PASS" starttime="20201110 08:37:35.831" endtime="20201110 08:37:35.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.820" endtime="20201110 08:37:35.836"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.842" endtime="20201110 08:37:35.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.851" endtime="20201110 08:37:35.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.846" endtime="20201110 08:37:35.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.838" endtime="20201110 08:37:35.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.233" endtime="20201110 08:37:35.876"></status>
</kw>
<msg timestamp="20201110 08:37:35.877" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.896" endtime="20201110 08:37:35.907"></status>
</kw>
<msg timestamp="20201110 08:37:35.908" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.893" endtime="20201110 08:37:35.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.914" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.910" endtime="20201110 08:37:35.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.917" endtime="20201110 08:37:35.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.886" endtime="20201110 08:37:35.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.881" endtime="20201110 08:37:35.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.942" endtime="20201110 08:37:36.283"></status>
</kw>
<msg timestamp="20201110 08:37:36.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035989819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035990292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.938" endtime="20201110 08:37:36.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.310" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035989819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035990292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.292" endtime="20201110 08:37:36.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.314" endtime="20201110 08:37:36.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.930" endtime="20201110 08:37:36.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.925" endtime="20201110 08:37:36.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.330" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:36.328" endtime="20201110 08:37:36.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.341" level="INFO">VALUE: [{'time': 0.035989819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035990292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035999542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.036000014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036006889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.036007361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036015431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.036015903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036021847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.036022319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036032917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0598000000000551e-05, 'source_diff': 1.0598000000000551e-05}, {'time': 0.036033389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036042056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.036042597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036051528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.930999999996747e-06, 'source_diff': 8.930999999996747e-06}, {'time': 0.036052, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036057306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.305999999996591e-06, 'source_diff': 5.305999999996591e-06}, {'time': 0.036057778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036063778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.03606425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036073597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.036074069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036080097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.036080569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036085083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.036085625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0277999999995513e-05, 'source_diff': 1.0277999999995513e-05}, {'time': 0.036096375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036102083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.036102556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036113417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0861000000000898e-05, 'source_diff': 1.0861000000000898e-05}, {'time': 0.036113958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.036124667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0708999999997637e-05, 'source_diff': 1.0708999999997637e-05}, {'time': 0.036125139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036133972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036134444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036141611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.036142083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036152833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0750000000003812e-05, 'source_diff': 1.0750000000003812e-05}, {'time': 0.036153306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.957999999997413e-06, 'source_diff': 9.957999999997413e-06}, {'time': 0.036163736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036170444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.036170986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036176139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.036176611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036182639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.036183111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036187347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2360000000046805e-06, 'source_diff': 4.2360000000046805e-06}, {'time': 0.036187819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036194556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7369999999997154e-06, 'source_diff': 6.7369999999997154e-06}, {'time': 0.036195028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036199375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.036199847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036208292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.445000000002756e-06, 'source_diff': 8.445000000002756e-06}, {'time': 0.036208764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036216847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.083000000005947e-06, 'source_diff': 8.083000000005947e-06}, {'time': 0.036217319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036225944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000005156e-06, 'source_diff': 8.625000000005156e-06}, {'time': 0.036226417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036236639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0222000000004172e-05, 'source_diff': 1.0222000000004172e-05}, {'time': 0.036237111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036244694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036245167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036251375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.036251847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036260069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.036260542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036270639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.036271111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036277653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.036278125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036287167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.036287639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036295847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.036296319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036305778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.458999999996387e-06, 'source_diff': 9.458999999996387e-06}, {'time': 0.03630625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036313208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.036313681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036322111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.429999999996773e-06, 'source_diff': 8.429999999996773e-06}, {'time': 0.036322583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03633225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.036332722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036343444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0722000000004672e-05, 'source_diff': 1.0722000000004672e-05}, {'time': 0.036343917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036350792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.036351264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036358, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.036358472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036369194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.036369667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036379236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.569000000000938e-06, 'source_diff': 9.569000000000938e-06}, {'time': 0.036379708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036385611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.036386083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036393361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036393833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036403819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.036404292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:36.332" endtime="20201110 08:37:36.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.322" endtime="20201110 08:37:36.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:36.404" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 9.250000000002312e-06, 4.7199999999442133e-07, 6.875000000003406e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 5.944000000000782...</msg>
<status status="PASS" starttime="20201110 08:37:36.347" endtime="20201110 08:37:36.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.413" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:36.411" endtime="20201110 08:37:36.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.422" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 9.250000000002312e-06, 4.7199999999442133e-07, 6.875000000003406e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 5.944000000000782e-06, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 8.667000000003866e-06, 5.409999999997361e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.305999999996591e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.513999999997131e-06, 5.420000000061487e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 5.409999999997361e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 6.708000000001102e-06, 5.419999999992098e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 6.02800000000514e-06, 4.7199999999442133e-07, 4.2360000000046805e-06, 4.720000000013602e-07, 6.7369999999997154e-06, 4.7199999999442133e-07, 4.347000000001766e-06, 4.720000000013602e-07, 8.445000000002756e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 8.625000000005156e-06, 4.7299999999389497e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.7199999999442133e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7300000000083386e-07, 6.874999999996467e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.7300000000083386e-07, 9.569000000000938e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.7300000000083386e-07, 9.250000000002312e-06, 4.7199999999442133e-07, 6.875000000003406e-06, 4.720000000013602e-07, 8.069999999998911e-06, 4.720000000013602e-07, 5.944000000000782e-06, 4.7199999999442133e-07, 1.0598000000000551e-05, 4.720000000013602e-07, 8.667000000003866e-06, 5.409999999997361e-07, 8.930999999996747e-06, 4.720000000013602e-07, 5.305999999996591e-06, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 9.346999999999828e-06, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 4.513999999997131e-06, 5.420000000061487e-07, 1.0277999999995513e-05, 4.720000000013602e-07, 5.708000000000102e-06, 4.7300000000083386e-07, 1.0861000000000898e-05, 5.409999999997361e-07, 1.0708999999997637e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0750000000003812e-05, 4.7300000000083386e-07, 9.957999999997413e-06, 4.720000000013602e-07, 6.708000000001102e-06, 5.419999999992098e-07, 5.153000000000796e-06, 4.7199999999442133e-07, 6.02800000000514e-06, 4.7199999999442133e-07, 4.2360000000046805e-06, 4.720000000013602e-07, 6.7369999999997154e-06, 4.7199999999442133e-07, 4.347000000001766e-06, 4.720000000013602e-07, 8.445000000002756e-06, 4.7199999999442133e-07, 8.083000000005947e-06, 4.7199999999442133e-07, 8.625000000005156e-06, 4.7299999999389497e-07, 1.0222000000004172e-05, 4.720000000013602e-07, 7.582999999998508e-06, 4.7300000000083386e-07, 6.208000000000602e-06, 4.7199999999442133e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.7199999999442133e-07, 8.208000000002602e-06, 4.720000000013602e-07, 9.458999999996387e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7300000000083386e-07, 8.429999999996773e-06, 4.720000000013602e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7300000000083386e-07, 6.874999999996467e-06, 4.720000000013602e-07, 6.736000000000242e-06, 4.720000000013602e-07, 1.0721999999997733e-05, 4.7300000000083386e-07, 9.569000000000938e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 7.2779999999994516e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.7300000000083386e-07], 'eventtime': [0.035989819, 0.035990292, 0.035999542, 0.036000014, 0.036006889, 0.036007361, 0.036015431, 0.036015903, 0.036021847, 0.036022319, 0.036032917, 0.036033389, 0.036042056, 0.036042597, 0.036051528, 0.036052, 0.036057306, 0.036057778, 0.036063778, 0.03606425, 0.036073597, 0.036074069, 0.036080097, 0.036080569, 0.036085083, 0.036085625, 0.036095903, 0.036096375, 0.036102083, 0.036102556, 0.036113417, 0.036113958, 0.036124667, 0.036125139, 0.036133972, 0.036134444, 0.036141611, 0.036142083, 0.036152833, 0.036153306, 0.036163264, 0.036163736, 0.036170444, 0.036170986, 0.036176139, 0.036176611, 0.036182639, 0.036183111, 0.036187347, 0.036187819, 0.036194556, 0.036195028, 0.036199375, 0.036199847, 0.036208292, 0.036208764, 0.036216847, 0.036217319, 0.036225944, 0.036226417, 0.036236639, 0.036237111, 0.036244694, 0.036245167, 0.036251375, 0.036251847, 0.036260069, 0.036260542, 0.036270639, 0.036271111, 0.036277653, 0.036278125, 0.036287167, 0.036287639, 0.036295847, 0.036296319, 0.036305778, 0.03630625, 0.036313208, 0.036313681, 0.036322111, 0.036322583, 0.03633225, 0.036332722, 0.036343444, 0.036343917, 0.036350792, 0.036351264, 0.036358, 0.036358472, 0.036369194, 0.036369667, 0.036379236, 0.036379708, 0.036385611, 0.036386083, 0.036393361, 0.036393833, 0.036403819, 0.036404292]}</msg>
<status status="PASS" starttime="20201110 08:37:36.415" endtime="20201110 08:37:36.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.405" endtime="20201110 08:37:36.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.436" level="INFO">${RESULT} = [{'time': 0.035990292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036000014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:36.427" endtime="20201110 08:37:36.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:36.466" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201110 08:37:36.438" endtime="20201110 08:37:36.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.477" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:36.474" endtime="20201110 08:37:36.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.482" level="INFO">VALUE: [4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:36.479" endtime="20201110 08:37:36.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.468" endtime="20201110 08:37:36.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.491" endtime="20201110 08:37:36.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.500" endtime="20201110 08:37:36.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.495" endtime="20201110 08:37:36.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.486" endtime="20201110 08:37:36.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.878" endtime="20201110 08:37:36.526"></status>
</kw>
<msg timestamp="20201110 08:37:36.526" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.546" endtime="20201110 08:37:36.557"></status>
</kw>
<msg timestamp="20201110 08:37:36.558" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.543" endtime="20201110 08:37:36.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.565" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.561" endtime="20201110 08:37:36.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.567" endtime="20201110 08:37:36.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.536" endtime="20201110 08:37:36.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.531" endtime="20201110 08:37:36.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.590" endtime="20201110 08:37:36.934"></status>
</kw>
<msg timestamp="20201110 08:37:36.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035690125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.587" endtime="20201110 08:37:36.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035690125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.943" endtime="20201110 08:37:36.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.962" endtime="20201110 08:37:36.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.579" endtime="20201110 08:37:36.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.575" endtime="20201110 08:37:36.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.978" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:36.976" endtime="20201110 08:37:36.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.989" level="INFO">VALUE: [{'time': 0.035689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035696153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.035696625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035704931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.035705403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035712264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.861000000003836e-06, 'source_diff': 6.861000000003836e-06}, {'time': 0.035712736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035717722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.035718194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035723472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.035723944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0357305, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}, {'time': 0.035730972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035738639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.035739111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035749833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0722000000004672e-05, 'source_diff': 1.0722000000004672e-05}, {'time': 0.035750306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035755819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.035756292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035766889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.035767361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035775569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.035776042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035784139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.035784611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035792458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.035793, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035801097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.096999999998578e-06, 'source_diff': 8.096999999998578e-06}, {'time': 0.035801569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035808639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.035809111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035816792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.035817264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03582725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.035827722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035836667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.035837139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035845389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.250000000001312e-06, 'source_diff': 8.250000000001312e-06}, {'time': 0.035845931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035856111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0180000000005462e-05, 'source_diff': 1.0180000000005462e-05}, {'time': 0.035856583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035863569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.035864042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035868875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.035869347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035880236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0889000000000038e-05, 'source_diff': 1.0889000000000038e-05}, {'time': 0.035880778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035885514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.035885986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035895972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.985999999996553e-06, 'source_diff': 9.985999999996553e-06}, {'time': 0.035896444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035903917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.473000000000896e-06, 'source_diff': 7.473000000000896e-06}, {'time': 0.035904389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035909278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.889000000000976e-06, 'source_diff': 4.889000000000976e-06}, {'time': 0.03590975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035914708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.035915181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035924847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666000000005393e-06, 'source_diff': 9.666000000005393e-06}, {'time': 0.035925319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035931778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.03593225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035940986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.035941458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035951542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.035952014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.0359625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0486000000003992e-05, 'source_diff': 1.0486000000003992e-05}, {'time': 0.035962972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035973056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.035973528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035977889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.035978361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035984819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.035985361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035993583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.035994056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.03600075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.693999999994593e-06, 'source_diff': 6.693999999994593e-06}, {'time': 0.036001292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036009167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.036009639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036019194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.554999999994429e-06, 'source_diff': 9.554999999994429e-06}, {'time': 0.036019667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036029861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194000000005032e-05, 'source_diff': 1.0194000000005032e-05}, {'time': 0.036030333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036040847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0514000000003132e-05, 'source_diff': 1.0514000000003132e-05}, {'time': 0.036041319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036047125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.036047597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036053306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7089999999995755e-06, 'source_diff': 5.7089999999995755e-06}, {'time': 0.036053778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.207999999995663e-06, 'source_diff': 8.207999999995663e-06}, {'time': 0.036062458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036070875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.036071347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036075806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000005264e-06, 'source_diff': 4.459000000005264e-06}, {'time': 0.036076278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036083861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.036084333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036093583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.249999999995373e-06, 'source_diff': 9.249999999995373e-06}, {'time': 0.036094056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:36.980" endtime="20201110 08:37:36.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.970" endtime="20201110 08:37:36.994"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:37.050" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.720000000013602e-07, 4.985999999998492...</msg>
<status status="PASS" starttime="20201110 08:37:36.995" endtime="20201110 08:37:37.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.060" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:37.057" endtime="20201110 08:37:37.060"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.069" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 6.555999999997841e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7300000000083386e-07, 5.512999999998658e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 7.846999999998328e-06, 5.419999999992098e-07, 8.096999999998578e-06, 4.720000000013602e-07, 7.07000000000485e-06, 4.7199999999442133e-07, 7.681000000002436e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 8.250000000001312e-06, 5.419999999992098e-07, 1.0180000000005462e-05, 4.7199999999442133e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 4.833000000002696e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 5.419999999992098e-07, 4.735999999998242e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 4.889000000000976e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 9.666000000005393e-06, 4.7199999999442133e-07, 6.459000000000326e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07, 4.361000000001336e-06, 4.720000000013602e-07, 6.458000000000852e-06, 5.419999999992098e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 6.693999999994593e-06, 5.419999999992098e-07, 7.875000000004406e-06, 4.720000000013602e-07, 9.554999999994429e-06, 4.7300000000083386e-07, 1.0194000000005032e-05, 4.7199999999442133e-07, 1.0514000000003132e-05, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 4.459000000005264e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.720000000013602e-07, 6.0279999999982015e-06, 4.720000000013602e-07, 8.305999999999591e-06, 4.7199999999442133e-07, 6.861000000003836e-06, 4.720000000013602e-07, 4.985999999998492e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07, 6.555999999997841e-06, 4.720000000013602e-07, 7.667000000002866e-06, 4.7199999999442133e-07, 1.0722000000004672e-05, 4.7300000000083386e-07, 5.512999999998658e-06, 4.7300000000083386e-07, 1.0597000000001078e-05, 4.7199999999442133e-07, 8.208000000002602e-06, 4.7300000000083386e-07, 8.096999999998578e-06, 4.720000000013602e-07, 7.846999999998328e-06, 5.419999999992098e-07, 8.096999999998578e-06, 4.720000000013602e-07, 7.07000000000485e-06, 4.7199999999442133e-07, 7.681000000002436e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 8.250000000001312e-06, 5.419999999992098e-07, 1.0180000000005462e-05, 4.7199999999442133e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 4.833000000002696e-06, 4.720000000013602e-07, 1.0889000000000038e-05, 5.419999999992098e-07, 4.735999999998242e-06, 4.720000000013602e-07, 9.985999999996553e-06, 4.720000000013602e-07, 7.473000000000896e-06, 4.720000000013602e-07, 4.889000000000976e-06, 4.7199999999442133e-07, 4.957999999999352e-06, 4.7300000000083386e-07, 9.666000000005393e-06, 4.7199999999442133e-07, 6.459000000000326e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07, 1.0486000000003992e-05, 4.720000000013602e-07, 1.0084000000000481e-05, 4.7199999999442133e-07, 4.361000000001336e-06, 4.720000000013602e-07, 6.458000000000852e-06, 5.419999999992098e-07, 8.222000000002172e-06, 4.7300000000083386e-07, 6.693999999994593e-06, 5.419999999992098e-07, 7.875000000004406e-06, 4.720000000013602e-07, 9.554999999994429e-06, 4.7300000000083386e-07, 1.0194000000005032e-05, 4.7199999999442133e-07, 1.0514000000003132e-05, 4.720000000013602e-07, 5.805999999997091e-06, 4.720000000013602e-07, 5.7089999999995755e-06, 4.720000000013602e-07, 8.207999999995663e-06, 4.720000000013602e-07, 8.417000000003616e-06, 4.7199999999442133e-07, 4.459000000005264e-06, 4.720000000013602e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.249999999995373e-06, 4.7300000000083386e-07], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.035689653, 0.035690125, 0.035696153, 0.035696625, 0.035704931, 0.035705403, 0.035712264, 0.035712736, 0.035717722, 0.035718194, 0.035723472, 0.035723944, 0.0357305, 0.035730972, 0.035738639, 0.035739111, 0.035749833, 0.035750306, 0.035755819, 0.035756292, 0.035766889, 0.035767361, 0.035775569, 0.035776042, 0.035784139, 0.035784611, 0.035792458, 0.035793, 0.035801097, 0.035801569, 0.035808639, 0.035809111, 0.035816792, 0.035817264, 0.03582725, 0.035827722, 0.035836667, 0.035837139, 0.035845389, 0.035845931, 0.035856111, 0.035856583, 0.035863569, 0.035864042, 0.035868875, 0.035869347, 0.035880236, 0.035880778, 0.035885514, 0.035885986, 0.035895972, 0.035896444, 0.035903917, 0.035904389, 0.035909278, 0.03590975, 0.035914708, 0.035915181, 0.035924847, 0.035925319, 0.035931778, 0.03593225, 0.035940986, 0.035941458, 0.035951542, 0.035952014, 0.0359625, 0.035962972, 0.035973056, 0.035973528, 0.035977889, 0.035978361, 0.035984819, 0.035985361, 0.035993583, 0.035994056, 0.03600075, 0.036001292, 0.036009167, 0.036009639, 0.036019194, 0.036019667, 0.036029861, 0.036030333, 0.036040847, 0.036041319, 0.036047125, 0.036047597, 0.036053306, 0.036053778, 0.036061986, 0.036062458, 0.036070875, 0.036071347, 0.036075806, 0.036076278, 0.036083861, 0.036084333, 0.036093583, 0.036094056]}</msg>
<status status="PASS" starttime="20201110 08:37:37.062" endtime="20201110 08:37:37.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.052" endtime="20201110 08:37:37.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.083" level="INFO">${RESULT} = [{'time': 0.035690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035696625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.074" endtime="20201110 08:37:37.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:37.113" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-0...</msg>
<status status="PASS" starttime="20201110 08:37:37.085" endtime="20201110 08:37:37.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.123" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:37.121" endtime="20201110 08:37:37.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.129" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:37.125" endtime="20201110 08:37:37.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.115" endtime="20201110 08:37:37.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.137" endtime="20201110 08:37:37.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.145" endtime="20201110 08:37:37.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.141" endtime="20201110 08:37:37.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.133" endtime="20201110 08:37:37.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.528" endtime="20201110 08:37:37.171"></status>
</kw>
<msg timestamp="20201110 08:37:37.171" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.191" endtime="20201110 08:37:37.202"></status>
</kw>
<msg timestamp="20201110 08:37:37.204" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.188" endtime="20201110 08:37:37.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.210" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.206" endtime="20201110 08:37:37.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.212" endtime="20201110 08:37:37.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.181" endtime="20201110 08:37:37.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.176" endtime="20201110 08:37:37.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.236" endtime="20201110 08:37:37.583"></status>
</kw>
<msg timestamp="20201110 08:37:37.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035824431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.232" endtime="20201110 08:37:37.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035824431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.592" endtime="20201110 08:37:37.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.617" endtime="20201110 08:37:37.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.225" endtime="20201110 08:37:37.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.220" endtime="20201110 08:37:37.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.634" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:37.631" endtime="20201110 08:37:37.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.645" level="INFO">VALUE: [{'time': 0.035823958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035824431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035829139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.708000000006041e-06, 'source_diff': 4.708000000006041e-06}, {'time': 0.035829681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035837264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.035837736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035847403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.035847875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035857236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.035857708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035864764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.035865236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035873861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.035874333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035882028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.695000000002006e-06, 'source_diff': 7.695000000002006e-06}, {'time': 0.0358825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035890917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.035891389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035901903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0513999999996193e-05, 'source_diff': 1.0513999999996193e-05}, {'time': 0.035902375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035908319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.035908792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035916556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.035917028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035922111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083000000002946e-06, 'source_diff': 5.083000000002946e-06}, {'time': 0.035922583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0359285, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.035928972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035936347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.035936819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035942, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.035942472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035946847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.374999999993967e-06, 'source_diff': 4.374999999993967e-06}, {'time': 0.035947319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035953236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.035953708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035960014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.035960486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035967028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.0359675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03597425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.035974722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035981875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.153000000002796e-06, 'source_diff': 7.153000000002796e-06}, {'time': 0.035982347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035988361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0140000000055704e-06, 'source_diff': 6.0140000000055704e-06}, {'time': 0.035988833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035999556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0723000000004146e-05, 'source_diff': 1.0723000000004146e-05}, {'time': 0.036000028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03600425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.036004722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036012625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.036013097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036023389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0292000000002022e-05, 'source_diff': 1.0292000000002022e-05}, {'time': 0.036023861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036032292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.431000000003186e-06, 'source_diff': 8.431000000003186e-06}, {'time': 0.036032764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036042125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036042597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036049667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.036050139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036056361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.036056833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036061708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.036062181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036072472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291000000002548e-05, 'source_diff': 1.0291000000002548e-05}, {'time': 0.036072944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036079069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.036079542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036088, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.458000000002852e-06, 'source_diff': 8.458000000002852e-06}, {'time': 0.036088472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036096333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.036096806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036104306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.036104778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036111764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.036112306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036121139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036121611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036130347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.036130819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036137472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.036137944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036144472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.036144944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036152014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.036152486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036157986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.036158458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036168861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0402999999999107e-05, 'source_diff': 1.0402999999999107e-05}, {'time': 0.036169333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036177972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000004726e-06, 'source_diff': 8.639000000004726e-06}, {'time': 0.036178444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036188431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.987000000002966e-06, 'source_diff': 9.987000000002966e-06}, {'time': 0.036188903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036195861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.036196333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036202764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.036203236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036212083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.036212556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:37.636" endtime="20201110 08:37:37.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.625" endtime="20201110 08:37:37.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:37.704" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7299999999389497e-07, 4.708000000006041e-06, 5.419999999992098e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 9.360999999999398e...</msg>
<status status="PASS" starttime="20201110 08:37:37.651" endtime="20201110 08:37:37.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.713" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:37.711" endtime="20201110 08:37:37.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.722" level="INFO">VALUE: {'source_diff': [0, 4.7299999999389497e-07, 4.708000000006041e-06, 5.419999999992098e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 5.944000000000782e-06, 4.7300000000083386e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 5.083000000002946e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 4.374999999993967e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 1.0723000000004146e-05, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 8.431000000003186e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 6.124999999995717e-06, 4.7300000000083386e-07, 8.458000000002852e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 7.500000000000562e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.720000000013602e-07, 6.652999999995357e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 7.07000000000485e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 8.639000000004726e-06, 4.7199999999442133e-07, 9.987000000002966e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7199999999442133e-07, 6.431000000001186e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07], 'sourcediff': [0, 4.7299999999389497e-07, 4.708000000006041e-06, 5.419999999992098e-07, 7.582999999998508e-06, 4.720000000013602e-07, 9.666999999997927e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.055999999998341e-06, 4.720000000013602e-07, 8.624999999998217e-06, 4.720000000013602e-07, 7.695000000002006e-06, 4.7199999999442133e-07, 8.417000000003616e-06, 4.720000000013602e-07, 1.0513999999996193e-05, 4.720000000013602e-07, 5.944000000000782e-06, 4.7300000000083386e-07, 7.764000000000382e-06, 4.7199999999442133e-07, 5.083000000002946e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 5.180999999999936e-06, 4.720000000013602e-07, 4.374999999993967e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 6.305999999997591e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 6.749999999999812e-06, 4.720000000013602e-07, 7.153000000002796e-06, 4.7199999999442133e-07, 6.0140000000055704e-06, 4.7199999999442133e-07, 1.0723000000004146e-05, 4.720000000013602e-07, 4.221999999998172e-06, 4.720000000013602e-07, 7.902999999996607e-06, 4.720000000013602e-07, 1.0292000000002022e-05, 4.7199999999442133e-07, 8.431000000003186e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.720000000013602e-07, 7.069999999997911e-06, 4.720000000013602e-07, 6.222000000000172e-06, 4.720000000013602e-07, 4.874999999994467e-06, 4.7300000000083386e-07, 1.0291000000002548e-05, 4.720000000013602e-07, 6.124999999995717e-06, 4.7300000000083386e-07, 8.458000000002852e-06, 4.720000000013602e-07, 7.860999999997897e-06, 4.7300000000083386e-07, 7.500000000000562e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 5.419999999992098e-07, 8.832999999999758e-06, 4.720000000013602e-07, 8.736000000002242e-06, 4.720000000013602e-07, 6.652999999995357e-06, 4.720000000013602e-07, 6.5279999999987015e-06, 4.720000000013602e-07, 7.07000000000485e-06, 4.7199999999442133e-07, 5.5000000000055005e-06, 4.7199999999442133e-07, 1.0402999999999107e-05, 4.720000000013602e-07, 8.639000000004726e-06, 4.7199999999442133e-07, 9.987000000002966e-06, 4.720000000013602e-07, 6.958000000001352e-06, 4.7199999999442133e-07, 6.431000000001186e-06, 4.720000000013602e-07, 8.846999999999328e-06, 4.7300000000083386e-07], 'eventtime': [0.035823958, 0.035824431, 0.035829139, 0.035829681, 0.035837264, 0.035837736, 0.035847403, 0.035847875, 0.035857236, 0.035857708, 0.035864764, 0.035865236, 0.035873861, 0.035874333, 0.035882028, 0.0358825, 0.035890917, 0.035891389, 0.035901903, 0.035902375, 0.035908319, 0.035908792, 0.035916556, 0.035917028, 0.035922111, 0.035922583, 0.0359285, 0.035928972, 0.035936347, 0.035936819, 0.035942, 0.035942472, 0.035946847, 0.035947319, 0.035953236, 0.035953708, 0.035960014, 0.035960486, 0.035967028, 0.0359675, 0.03597425, 0.035974722, 0.035981875, 0.035982347, 0.035988361, 0.035988833, 0.035999556, 0.036000028, 0.03600425, 0.036004722, 0.036012625, 0.036013097, 0.036023389, 0.036023861, 0.036032292, 0.036032764, 0.036042125, 0.036042597, 0.036049667, 0.036050139, 0.036056361, 0.036056833, 0.036061708, 0.036062181, 0.036072472, 0.036072944, 0.036079069, 0.036079542, 0.036088, 0.036088472, 0.036096333, 0.036096806, 0.036104306, 0.036104778, 0.036111764, 0.036112306, 0.036121139, 0.036121611, 0.036130347, 0.036130819, 0.036137472, 0.036137944, 0.036144472, 0.036144944, 0.036152014, 0.036152486, 0.036157986, 0.036158458, 0.036168861, 0.036169333, 0.036177972, 0.036178444, 0.036188431, 0.036188903, 0.036195861, 0.036196333, 0.036202764, 0.036203236, 0.036212083, 0.036212556]}</msg>
<status status="PASS" starttime="20201110 08:37:37.715" endtime="20201110 08:37:37.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.705" endtime="20201110 08:37:37.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.736" level="INFO">${RESULT} = [{'time': 0.035824431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.035829681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:37.727" endtime="20201110 08:37:37.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:37.766" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-0...</msg>
<status status="PASS" starttime="20201110 08:37:37.738" endtime="20201110 08:37:37.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.776" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:37.774" endtime="20201110 08:37:37.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.782" level="INFO">VALUE: [4.7299999999389497e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07]</msg>
<status status="PASS" starttime="20201110 08:37:37.778" endtime="20201110 08:37:37.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.768" endtime="20201110 08:37:37.784"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.790" endtime="20201110 08:37:37.793"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.798" endtime="20201110 08:37:37.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.794" endtime="20201110 08:37:37.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.786" endtime="20201110 08:37:37.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.173" endtime="20201110 08:37:37.824"></status>
</kw>
<msg timestamp="20201110 08:37:37.824" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.845" endtime="20201110 08:37:37.857"></status>
</kw>
<msg timestamp="20201110 08:37:37.858" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.842" endtime="20201110 08:37:37.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.864" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.860" endtime="20201110 08:37:37.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.867" endtime="20201110 08:37:37.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.834" endtime="20201110 08:37:37.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.829" endtime="20201110 08:37:37.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.890" endtime="20201110 08:37:38.240"></status>
</kw>
<msg timestamp="20201110 08:37:38.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037176028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:37.886" endtime="20201110 08:37:38.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037176028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371765, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:38.249" endtime="20201110 08:37:38.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.268" endtime="20201110 08:37:38.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.879" endtime="20201110 08:37:38.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.875" endtime="20201110 08:37:38.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.285" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:38.282" endtime="20201110 08:37:38.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.297" level="INFO">VALUE: [{'time': 0.037176028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0371765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037183667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.037184139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03719475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.037195222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037202694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.037203167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037210431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037210903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037220181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.037220653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037226028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.0372265, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037235264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.763999999994443e-06, 'source_diff': 8.763999999994443e-06}, {'time': 0.037235806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.037242236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.429999999994773e-06, 'source_diff': 6.429999999994773e-06}, {'time': 0.037242708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037247583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.037248056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037255014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.037255486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.03726525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.037265722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037274139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}, {'time': 0.037274611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037281611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.000000000000062e-06, 'source_diff': 7.000000000000062e-06}, {'time': 0.037282153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037288819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.666000000002392e-06, 'source_diff': 6.666000000002392e-06}, {'time': 0.037289292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037296125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037296597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037306917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.037307389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037314556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166999999995427e-06, 'source_diff': 7.166999999995427e-06}, {'time': 0.037315028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037325625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0597000000001078e-05, 'source_diff': 1.0597000000001078e-05}, {'time': 0.037326097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037334014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.037334486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037343097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037343569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037353556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.987000000002966e-06, 'source_diff': 9.987000000002966e-06}, {'time': 0.037354028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037359208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.037359681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037366139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.037366611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037376806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0194999999997567e-05, 'source_diff': 1.0194999999997567e-05}, {'time': 0.037377278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037383278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.03738375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037388208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.457999999998852e-06, 'source_diff': 4.457999999998852e-06}, {'time': 0.037388681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037397208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.037397681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037406181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.499999999994623e-06, 'source_diff': 8.499999999994623e-06}, {'time': 0.037406653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037414139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.037414611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037422806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.037423278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037429611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.333000000004196e-06, 'source_diff': 6.333000000004196e-06}, {'time': 0.037430083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037439125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.041999999993833e-06, 'source_diff': 9.041999999993833e-06}, {'time': 0.037439597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037445847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.249999999999312e-06, 'source_diff': 6.249999999999312e-06}, {'time': 0.037446319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037450889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.037451431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.037459958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527000000001228e-06, 'source_diff': 8.527000000001228e-06}, {'time': 0.037460431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.037469472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.040999999994359e-06, 'source_diff': 9.040999999994359e-06}, {'time': 0.037469944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037478569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.625000000005156e-06, 'source_diff': 8.625000000005156e-06}, {'time': 0.037479042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.037487056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.037487528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037494361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037494833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037500236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.037500708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037505278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.57000000000235e-06, 'source_diff': 4.57000000000235e-06}, {'time': 0.03750575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037515097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.037515569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037523681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.11200000000456e-06, 'source_diff': 8.11200000000456e-06}, {'time': 0.037524153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.037530056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.037530528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037536861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3329999999972575e-06, 'source_diff': 6.3329999999972575e-06}, {'time': 0.037537333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037542542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2089999999990755e-06, 'source_diff': 5.2089999999990755e-06}, {'time': 0.037543014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037553542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0528000000002702e-05, 'source_diff': 1.0528000000002702e-05}, {'time': 0.037554083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.037562917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.833999999999231e-06, 'source_diff': 8.833999999999231e-06}, {'time': 0.037563389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037568667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037569139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:38.288" endtime="20201110 08:37:38.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.277" endtime="20201110 08:37:38.301"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:38.357" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.263999999999882...</msg>
<status status="PASS" starttime="20201110 08:37:38.303" endtime="20201110 08:37:38.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.366" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:38.364" endtime="20201110 08:37:38.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.375" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 9.278000000001452e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.763999999994443e-06, 5.420000000061487e-07, 6.429999999994773e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 7.000000000000062e-06, 5.419999999992098e-07, 6.666000000002392e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 7.916999999996177e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.987000000002966e-06, 4.7199999999442133e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 6.458000000000852e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 6.333000000004196e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.720000000013602e-07, 4.57000000000235e-06, 5.419999999992098e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 9.040999999994359e-06, 4.720000000013602e-07, 8.625000000005156e-06, 4.7299999999389497e-07, 8.014000000000632e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 5.403000000001046e-06, 4.720000000013602e-07, 4.57000000000235e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 8.11200000000456e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 1.0528000000002702e-05, 5.409999999997361e-07, 8.833999999999231e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.263999999999882e-06, 4.7199999999442133e-07, 9.278000000001452e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 8.763999999994443e-06, 5.420000000061487e-07, 6.429999999994773e-06, 4.720000000013602e-07, 4.875000000001406e-06, 4.7300000000083386e-07, 6.958000000001352e-06, 4.7199999999442133e-07, 9.764000000002382e-06, 4.720000000013602e-07, 8.416999999996677e-06, 4.720000000013602e-07, 7.000000000000062e-06, 5.419999999992098e-07, 6.666000000002392e-06, 4.7300000000083386e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 7.166999999995427e-06, 4.720000000013602e-07, 1.0597000000001078e-05, 4.720000000013602e-07, 7.916999999996177e-06, 4.720000000013602e-07, 8.610999999998648e-06, 4.720000000013602e-07, 9.987000000002966e-06, 4.7199999999442133e-07, 5.180000000000462e-06, 4.7300000000083386e-07, 6.458000000000852e-06, 4.720000000013602e-07, 1.0194999999997567e-05, 4.720000000013602e-07, 5.999999999999062e-06, 4.720000000013602e-07, 4.457999999998852e-06, 4.7300000000083386e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 8.499999999994623e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.720000000013602e-07, 8.195000000002506e-06, 4.7199999999442133e-07, 6.333000000004196e-06, 4.720000000013602e-07, 9.041999999993833e-06, 4.720000000013602e-07, 6.249999999999312e-06, 4.720000000013602e-07, 4.57000000000235e-06, 5.419999999992098e-07, 8.527000000001228e-06, 4.7300000000083386e-07, 9.040999999994359e-06, 4.720000000013602e-07, 8.625000000005156e-06, 4.7299999999389497e-07, 8.014000000000632e-06, 4.720000000013602e-07, 6.8329999999977575e-06, 4.720000000013602e-07, 5.403000000001046e-06, 4.720000000013602e-07, 4.57000000000235e-06, 4.7199999999442133e-07, 9.346999999999828e-06, 4.720000000013602e-07, 8.11200000000456e-06, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 6.3329999999972575e-06, 4.720000000013602e-07, 5.2089999999990755e-06, 4.720000000013602e-07, 1.0528000000002702e-05, 5.409999999997361e-07, 8.833999999999231e-06, 4.720000000013602e-07, 5.277999999997451e-06, 4.720000000013602e-07], 'eventtime': [0.037176028, 0.0371765, 0.037183667, 0.037184139, 0.03719475, 0.037195222, 0.037202694, 0.037203167, 0.037210431, 0.037210903, 0.037220181, 0.037220653, 0.037226028, 0.0372265, 0.037235264, 0.037235806, 0.037242236, 0.037242708, 0.037247583, 0.037248056, 0.037255014, 0.037255486, 0.03726525, 0.037265722, 0.037274139, 0.037274611, 0.037281611, 0.037282153, 0.037288819, 0.037289292, 0.037296125, 0.037296597, 0.037306917, 0.037307389, 0.037314556, 0.037315028, 0.037325625, 0.037326097, 0.037334014, 0.037334486, 0.037343097, 0.037343569, 0.037353556, 0.037354028, 0.037359208, 0.037359681, 0.037366139, 0.037366611, 0.037376806, 0.037377278, 0.037383278, 0.03738375, 0.037388208, 0.037388681, 0.037397208, 0.037397681, 0.037406181, 0.037406653, 0.037414139, 0.037414611, 0.037422806, 0.037423278, 0.037429611, 0.037430083, 0.037439125, 0.037439597, 0.037445847, 0.037446319, 0.037450889, 0.037451431, 0.037459958, 0.037460431, 0.037469472, 0.037469944, 0.037478569, 0.037479042, 0.037487056, 0.037487528, 0.037494361, 0.037494833, 0.037500236, 0.037500708, 0.037505278, 0.03750575, 0.037515097, 0.037515569, 0.037523681, 0.037524153, 0.037530056, 0.037530528, 0.037536861, 0.037537333, 0.037542542, 0.037543014, 0.037553542, 0.037554083, 0.037562917, 0.037563389, 0.037568667, 0.037569139]}</msg>
<status status="PASS" starttime="20201110 08:37:38.368" endtime="20201110 08:37:38.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.359" endtime="20201110 08:37:38.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.389" level="INFO">${RESULT} = [{'time': 0.0371765, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.037184139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:38.380" endtime="20201110 08:37:38.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:38.420" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-0...</msg>
<status status="PASS" starttime="20201110 08:37:38.391" endtime="20201110 08:37:38.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.431" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:38.428" endtime="20201110 08:37:38.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.437" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.409999999997361e-07, 4.720000000013602e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:38.434" endtime="20201110 08:37:38.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.422" endtime="20201110 08:37:38.440"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.446" endtime="20201110 08:37:38.449"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.455" endtime="20201110 08:37:38.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.450" endtime="20201110 08:37:38.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.442" endtime="20201110 08:37:38.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.826" endtime="20201110 08:37:38.481"></status>
</kw>
<msg timestamp="20201110 08:37:38.481" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.501" endtime="20201110 08:37:38.512"></status>
</kw>
<msg timestamp="20201110 08:37:38.513" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.497" endtime="20201110 08:37:38.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.519" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.516" endtime="20201110 08:37:38.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.522" endtime="20201110 08:37:38.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.490" endtime="20201110 08:37:38.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.486" endtime="20201110 08:37:38.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.545" endtime="20201110 08:37:38.890"></status>
</kw>
<msg timestamp="20201110 08:37:38.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035910764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035911236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.542" endtime="20201110 08:37:38.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035910764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035911236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.900" endtime="20201110 08:37:38.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.919" endtime="20201110 08:37:38.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.534" endtime="20201110 08:37:38.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.530" endtime="20201110 08:37:38.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.935" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:38.933" endtime="20201110 08:37:38.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.947" level="INFO">VALUE: [{'time': 0.035910764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035911236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035917861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.035918333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035926153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.8200000000056e-06, 'source_diff': 7.8200000000056e-06}, {'time': 0.035926625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035936375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.750000000002812e-06, 'source_diff': 9.750000000002812e-06}, {'time': 0.035936847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035944014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.035944486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035954806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0320000000001162e-05, 'source_diff': 1.0320000000001162e-05}, {'time': 0.035955278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03596275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.035963222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035970806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.583999999997981e-06, 'source_diff': 7.583999999997981e-06}, {'time': 0.035971278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035976694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.415999999994203e-06, 'source_diff': 5.415999999994203e-06}, {'time': 0.035977167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035984333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.035984806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035993208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.035993681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035999389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.035999861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036007333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.036007806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0360155, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.693999999995593e-06, 'source_diff': 7.693999999995593e-06}, {'time': 0.036015972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036021792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.036022264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036030486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.036030958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036035611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.036036083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036043472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000003476e-06, 'source_diff': 7.389000000003476e-06}, {'time': 0.036043944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036053597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.036054069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036063431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.361999999998871e-06, 'source_diff': 9.361999999998871e-06}, {'time': 0.036063903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036072736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.036073208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036080694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.486000000000992e-06, 'source_diff': 7.486000000000992e-06}, {'time': 0.036081167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036091069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902000000006073e-06, 'source_diff': 9.902000000006073e-06}, {'time': 0.036091542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036098903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.361000000004336e-06, 'source_diff': 7.361000000004336e-06}, {'time': 0.036099375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036105292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916999999994177e-06, 'source_diff': 5.916999999994177e-06}, {'time': 0.036105764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036112306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.036112778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036118486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.036118958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036127903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.945000000003256e-06, 'source_diff': 8.945000000003256e-06}, {'time': 0.036128375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036135139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.036135611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036140986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.375000000001906e-06, 'source_diff': 5.375000000001906e-06}, {'time': 0.036141458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036145819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.036146292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036155347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.055000000000868e-06, 'source_diff': 9.055000000000868e-06}, {'time': 0.036155819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036163389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.036163861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036173542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.681000000004436e-06, 'source_diff': 9.681000000004436e-06}, {'time': 0.036174014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036183097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.036183639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036191014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.375000000003906e-06, 'source_diff': 7.375000000003906e-06}, {'time': 0.036191486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036196069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.582999999995507e-06, 'source_diff': 4.582999999995507e-06}, {'time': 0.036196542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036203472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.930000000002212e-06, 'source_diff': 6.930000000002212e-06}, {'time': 0.036203944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036214778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.03621525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036221153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.036221625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036226194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.036226667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}, {'time': 0.036230875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.208000000005541e-06, 'source_diff': 4.208000000005541e-06}, {'time': 0.036231347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036238333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.036238806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036247708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.901999999998134e-06, 'source_diff': 8.901999999998134e-06}, {'time': 0.036248181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036256083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902000000004072e-06, 'source_diff': 7.902000000004072e-06}, {'time': 0.036256556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036260903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.346999999994827e-06, 'source_diff': 4.346999999994827e-06}, {'time': 0.036261375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036265944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.036266417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036276083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}, {'time': 0.036276556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036281736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.036282208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036291569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036292042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7299999999389497e-07, 'source_diff': 4.7299999999389497e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:38.938" endtime="20201110 08:37:38.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.927" endtime="20201110 08:37:38.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:39.007" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 7.8200000000056e-06, 4.7199999999442133e-07, 9.750000000002812e-06, 4.720000000013602e-07, 7.167000000002366e-...</msg>
<status status="PASS" starttime="20201110 08:37:38.953" endtime="20201110 08:37:39.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.016" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:39.014" endtime="20201110 08:37:39.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.025" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 7.8200000000056e-06, 4.7199999999442133e-07, 9.750000000002812e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.7199999999442133e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 7.472000000001422e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 5.415999999994203e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.693999999995593e-06, 4.720000000013602e-07, 5.819999999996661e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999442133e-07, 7.389000000003476e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7299999999389497e-07, 9.902000000006073e-06, 4.7299999999389497e-07, 7.361000000004336e-06, 4.720000000013602e-07, 5.916999999994177e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 6.763999999999382e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7299999999389497e-07, 9.055000000000868e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.681000000004436e-06, 4.7199999999442133e-07, 9.083000000000008e-06, 5.419999999992098e-07, 7.375000000003906e-06, 4.720000000013602e-07, 4.582999999995507e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 1.0834000000001232e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 4.569000000002876e-06, 4.7299999999389497e-07, 4.208000000005541e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07, 7.902000000004072e-06, 4.7300000000083386e-07, 4.346999999994827e-06, 4.720000000013602e-07, 4.569000000002876e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 5.180000000000462e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7299999999389497e-07], 'sourcediff': [0, 4.720000000013602e-07, 6.625000000003156e-06, 4.7199999999442133e-07, 7.8200000000056e-06, 4.7199999999442133e-07, 9.750000000002812e-06, 4.720000000013602e-07, 7.167000000002366e-06, 4.7199999999442133e-07, 1.0320000000001162e-05, 4.720000000013602e-07, 7.472000000001422e-06, 4.720000000013602e-07, 7.583999999997981e-06, 4.720000000013602e-07, 5.415999999994203e-06, 4.7300000000083386e-07, 7.166000000002892e-06, 4.7300000000083386e-07, 8.401999999997634e-06, 4.7300000000083386e-07, 5.708000000000102e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.7300000000083386e-07, 7.693999999995593e-06, 4.720000000013602e-07, 5.819999999996661e-06, 4.720000000013602e-07, 8.222000000002172e-06, 4.720000000013602e-07, 4.653000000000296e-06, 4.7199999999442133e-07, 7.389000000003476e-06, 4.720000000013602e-07, 9.652999999998357e-06, 4.720000000013602e-07, 9.361999999998871e-06, 4.720000000013602e-07, 8.832999999999758e-06, 4.720000000013602e-07, 7.486000000000992e-06, 4.7299999999389497e-07, 9.902000000006073e-06, 4.7299999999389497e-07, 7.361000000004336e-06, 4.720000000013602e-07, 5.916999999994177e-06, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.720000000013602e-07, 8.945000000003256e-06, 4.7199999999442133e-07, 6.763999999999382e-06, 4.720000000013602e-07, 5.375000000001906e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7299999999389497e-07, 9.055000000000868e-06, 4.720000000013602e-07, 7.569999999998411e-06, 4.720000000013602e-07, 9.681000000004436e-06, 4.7199999999442133e-07, 9.083000000000008e-06, 5.419999999992098e-07, 7.375000000003906e-06, 4.720000000013602e-07, 4.582999999995507e-06, 4.7300000000083386e-07, 6.930000000002212e-06, 4.720000000013602e-07, 1.0834000000001232e-05, 4.7199999999442133e-07, 5.903000000001546e-06, 4.720000000013602e-07, 4.569000000002876e-06, 4.7299999999389497e-07, 4.208000000005541e-06, 4.7199999999442133e-07, 6.986000000000492e-06, 4.7300000000083386e-07, 8.901999999998134e-06, 4.7300000000083386e-07, 7.902000000004072e-06, 4.7300000000083386e-07, 4.346999999994827e-06, 4.720000000013602e-07, 4.569000000002876e-06, 4.7300000000083386e-07, 9.665999999998454e-06, 4.7300000000083386e-07, 5.180000000000462e-06, 4.720000000013602e-07, 9.360999999999398e-06, 4.7299999999389497e-07], 'eventtime': [0.035910764, 0.035911236, 0.035917861, 0.035918333, 0.035926153, 0.035926625, 0.035936375, 0.035936847, 0.035944014, 0.035944486, 0.035954806, 0.035955278, 0.03596275, 0.035963222, 0.035970806, 0.035971278, 0.035976694, 0.035977167, 0.035984333, 0.035984806, 0.035993208, 0.035993681, 0.035999389, 0.035999861, 0.036007333, 0.036007806, 0.0360155, 0.036015972, 0.036021792, 0.036022264, 0.036030486, 0.036030958, 0.036035611, 0.036036083, 0.036043472, 0.036043944, 0.036053597, 0.036054069, 0.036063431, 0.036063903, 0.036072736, 0.036073208, 0.036080694, 0.036081167, 0.036091069, 0.036091542, 0.036098903, 0.036099375, 0.036105292, 0.036105764, 0.036112306, 0.036112778, 0.036118486, 0.036118958, 0.036127903, 0.036128375, 0.036135139, 0.036135611, 0.036140986, 0.036141458, 0.036145819, 0.036146292, 0.036155347, 0.036155819, 0.036163389, 0.036163861, 0.036173542, 0.036174014, 0.036183097, 0.036183639, 0.036191014, 0.036191486, 0.036196069, 0.036196542, 0.036203472, 0.036203944, 0.036214778, 0.03621525, 0.036221153, 0.036221625, 0.036226194, 0.036226667, 0.036230875, 0.036231347, 0.036238333, 0.036238806, 0.036247708, 0.036248181, 0.036256083, 0.036256556, 0.036260903, 0.036261375, 0.036265944, 0.036266417, 0.036276083, 0.036276556, 0.036281736, 0.036282208, 0.036291569, 0.036292042]}</msg>
<status status="PASS" starttime="20201110 08:37:39.018" endtime="20201110 08:37:39.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.009" endtime="20201110 08:37:39.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.039" level="INFO">${RESULT} = [{'time': 0.035911236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035918333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:39.031" endtime="20201110 08:37:39.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:39.070" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-...</msg>
<status status="PASS" starttime="20201110 08:37:39.041" endtime="20201110 08:37:39.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.080" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:39.078" endtime="20201110 08:37:39.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.086" level="INFO">VALUE: [4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7299999999389497e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7299999999389497e-07]</msg>
<status status="PASS" starttime="20201110 08:37:39.082" endtime="20201110 08:37:39.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.072" endtime="20201110 08:37:39.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.094" endtime="20201110 08:37:39.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.103" endtime="20201110 08:37:39.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.098" endtime="20201110 08:37:39.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.090" endtime="20201110 08:37:39.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.482" endtime="20201110 08:37:39.128"></status>
</kw>
<msg timestamp="20201110 08:37:39.129" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.148" endtime="20201110 08:37:39.160"></status>
</kw>
<msg timestamp="20201110 08:37:39.161" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.145" endtime="20201110 08:37:39.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.167" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.163" endtime="20201110 08:37:39.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.169" endtime="20201110 08:37:39.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.138" endtime="20201110 08:37:39.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.133" endtime="20201110 08:37:39.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.194" endtime="20201110 08:37:39.536"></status>
</kw>
<msg timestamp="20201110 08:37:39.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035814458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035814931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.191" endtime="20201110 08:37:39.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035814458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035814931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.545" endtime="20201110 08:37:39.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.564" endtime="20201110 08:37:39.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.182" endtime="20201110 08:37:39.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.177" endtime="20201110 08:37:39.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.580" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:39.578" endtime="20201110 08:37:39.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.591" level="INFO">VALUE: [{'time': 0.035814458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035814931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035825542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.035826014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035834847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.832999999999758e-06, 'source_diff': 8.832999999999758e-06}, {'time': 0.035835319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035846153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0834000000001232e-05, 'source_diff': 1.0834000000001232e-05}, {'time': 0.035846625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035854403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.035854875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03586225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.035862722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0735999999997303e-05, 'source_diff': 1.0735999999997303e-05}, {'time': 0.035873931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035881806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.035882278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035888111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.035888583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035893028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.0358935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035900875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.035901347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035908944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.035909417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035914861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.444000000000282e-06, 'source_diff': 5.444000000000282e-06}, {'time': 0.035915403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035923792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000004476e-06, 'source_diff': 8.389000000004476e-06}, {'time': 0.035924264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035933931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.035934403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035939278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.875000000001406e-06, 'source_diff': 4.875000000001406e-06}, {'time': 0.03593975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035948278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.03594875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035955625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.874999999996467e-06, 'source_diff': 6.874999999996467e-06}, {'time': 0.035956097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035966153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0056000000001342e-05, 'source_diff': 1.0056000000001342e-05}, {'time': 0.035966625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035977347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0721999999997733e-05, 'source_diff': 1.0721999999997733e-05}, {'time': 0.035977819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035988639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0820000000001662e-05, 'source_diff': 1.0820000000001662e-05}, {'time': 0.035989111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035999889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0778000000002952e-05, 'source_diff': 1.0778000000002952e-05}, {'time': 0.036000431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036009972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.541000000001798e-06, 'source_diff': 9.541000000001798e-06}, {'time': 0.036010444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036017639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.194999999994567e-06, 'source_diff': 7.194999999994567e-06}, {'time': 0.036018111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03602525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.036025722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036035597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036036069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036045417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.34800000000624e-06, 'source_diff': 9.34800000000624e-06}, {'time': 0.036045889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036054736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.036055208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036065083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036065556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036073236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680000000002962e-06, 'source_diff': 7.680000000002962e-06}, {'time': 0.036073708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036080264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.555999999997841e-06, 'source_diff': 6.555999999997841e-06}, {'time': 0.036080736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036086972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.235999999999742e-06, 'source_diff': 6.235999999999742e-06}, {'time': 0.036087444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036096181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736999999994777e-06, 'source_diff': 8.736999999994777e-06}, {'time': 0.036096653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036104125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.472000000001422e-06, 'source_diff': 7.472000000001422e-06}, {'time': 0.036104597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036112278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.680999999995497e-06, 'source_diff': 7.680999999995497e-06}, {'time': 0.03611275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036116986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2359999999977416e-06, 'source_diff': 4.2359999999977416e-06}, {'time': 0.036117458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036121917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.459000000005264e-06, 'source_diff': 4.459000000005264e-06}, {'time': 0.036122389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036127028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.0361275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036132903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.036133375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036143667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0291999999995083e-05, 'source_diff': 1.0291999999995083e-05}, {'time': 0.036144139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036150681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.036151153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.0361555, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.036155972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036165847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.874999999999468e-06, 'source_diff': 9.874999999999468e-06}, {'time': 0.036166319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036174361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.036174903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.036179153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.036179625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036183833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.207999999998602e-06, 'source_diff': 4.207999999998602e-06}, {'time': 0.036184306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.0361945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.036194972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036204736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.764000000002382e-06, 'source_diff': 9.764000000002382e-06}, {'time': 0.036205208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036212694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.485999999994053e-06, 'source_diff': 7.485999999994053e-06}, {'time': 0.036213167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036219917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.036220389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:39.582" endtime="20201110 08:37:39.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.572" endtime="20201110 08:37:39.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:39.650" level="INFO">${debug-compressed} = {'source_diff': [0, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.7199999999442133e-07, 1.0834000000001232e-05, 4.720000000013602e-07, 7.7779999999999...</msg>
<status status="PASS" starttime="20201110 08:37:39.597" endtime="20201110 08:37:39.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.659" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:39.657" endtime="20201110 08:37:39.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.668" level="INFO">VALUE: {'source_diff': [0, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.7199999999442133e-07, 1.0834000000001232e-05, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 5.833000000003696e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.7300000000083386e-07, 5.444000000000282e-06, 5.419999999992098e-07, 8.389000000004476e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 4.875000000001406e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 6.874999999996467e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 1.0778000000002952e-05, 5.419999999992098e-07, 9.541000000001798e-06, 4.720000000013602e-07, 7.194999999994567e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7199999999442133e-07, 9.34800000000624e-06, 4.7199999999442133e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 6.555999999997841e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 8.736999999994777e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 4.2359999999977416e-06, 4.720000000013602e-07, 4.459000000005264e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.403000000001046e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.041999999999772e-06, 5.419999999992098e-07, 4.2499999999973115e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 7.485999999994053e-06, 4.7300000000083386e-07, 6.749999999999812e-06, 4.720000000013602e-07], 'sourcediff': [0, 4.7300000000083386e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 8.832999999999758e-06, 4.7199999999442133e-07, 1.0834000000001232e-05, 4.720000000013602e-07, 7.777999999999952e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 1.0735999999997303e-05, 4.7300000000083386e-07, 7.875000000004406e-06, 4.7199999999442133e-07, 5.833000000003696e-06, 4.720000000013602e-07, 4.4449999999987555e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 7.5969999999980775e-06, 4.7300000000083386e-07, 5.444000000000282e-06, 5.419999999992098e-07, 8.389000000004476e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 4.875000000001406e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 6.874999999996467e-06, 4.720000000013602e-07, 1.0056000000001342e-05, 4.720000000013602e-07, 1.0721999999997733e-05, 4.720000000013602e-07, 1.0820000000001662e-05, 4.7199999999442133e-07, 1.0778000000002952e-05, 5.419999999992098e-07, 9.541000000001798e-06, 4.720000000013602e-07, 7.194999999994567e-06, 4.720000000013602e-07, 7.139000000003226e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7199999999442133e-07, 9.34800000000624e-06, 4.7199999999442133e-07, 8.846999999999328e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.7300000000083386e-07, 7.680000000002962e-06, 4.720000000013602e-07, 6.555999999997841e-06, 4.720000000013602e-07, 6.235999999999742e-06, 4.720000000013602e-07, 8.736999999994777e-06, 4.720000000013602e-07, 7.472000000001422e-06, 4.720000000013602e-07, 7.680999999995497e-06, 4.720000000013602e-07, 4.2359999999977416e-06, 4.720000000013602e-07, 4.459000000005264e-06, 4.7199999999442133e-07, 4.639000000000726e-06, 4.720000000013602e-07, 5.403000000001046e-06, 4.720000000013602e-07, 1.0291999999995083e-05, 4.720000000013602e-07, 6.541999999998271e-06, 4.720000000013602e-07, 4.347000000001766e-06, 4.720000000013602e-07, 9.874999999999468e-06, 4.720000000013602e-07, 8.041999999999772e-06, 5.419999999992098e-07, 4.2499999999973115e-06, 4.720000000013602e-07, 4.207999999998602e-06, 4.7300000000083386e-07, 1.0193999999998093e-05, 4.720000000013602e-07, 9.764000000002382e-06, 4.720000000013602e-07, 7.485999999994053e-06, 4.7300000000083386e-07, 6.749999999999812e-06, 4.720000000013602e-07], 'eventtime': [0.035814458, 0.035814931, 0.035825542, 0.035826014, 0.035834847, 0.035835319, 0.035846153, 0.035846625, 0.035854403, 0.035854875, 0.03586225, 0.035862722, 0.035873458, 0.035873931, 0.035881806, 0.035882278, 0.035888111, 0.035888583, 0.035893028, 0.0358935, 0.035900875, 0.035901347, 0.035908944, 0.035909417, 0.035914861, 0.035915403, 0.035923792, 0.035924264, 0.035933931, 0.035934403, 0.035939278, 0.03593975, 0.035948278, 0.03594875, 0.035955625, 0.035956097, 0.035966153, 0.035966625, 0.035977347, 0.035977819, 0.035988639, 0.035989111, 0.035999889, 0.036000431, 0.036009972, 0.036010444, 0.036017639, 0.036018111, 0.03602525, 0.036025722, 0.036035597, 0.036036069, 0.036045417, 0.036045889, 0.036054736, 0.036055208, 0.036065083, 0.036065556, 0.036073236, 0.036073708, 0.036080264, 0.036080736, 0.036086972, 0.036087444, 0.036096181, 0.036096653, 0.036104125, 0.036104597, 0.036112278, 0.03611275, 0.036116986, 0.036117458, 0.036121917, 0.036122389, 0.036127028, 0.0361275, 0.036132903, 0.036133375, 0.036143667, 0.036144139, 0.036150681, 0.036151153, 0.0361555, 0.036155972, 0.036165847, 0.036166319, 0.036174361, 0.036174903, 0.036179153, 0.036179625, 0.036183833, 0.036184306, 0.0361945, 0.036194972, 0.036204736, 0.036205208, 0.036212694, 0.036213167, 0.036219917, 0.036220389]}</msg>
<status status="PASS" starttime="20201110 08:37:39.662" endtime="20201110 08:37:39.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.652" endtime="20201110 08:37:39.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.682" level="INFO">${RESULT} = [{'time': 0.035814931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035826014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:39.674" endtime="20201110 08:37:39.683"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:39.713" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e...</msg>
<status status="PASS" starttime="20201110 08:37:39.684" endtime="20201110 08:37:39.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.723" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:39.721" endtime="20201110 08:37:39.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.728" level="INFO">VALUE: [4.7300000000083386e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07]</msg>
<status status="PASS" starttime="20201110 08:37:39.725" endtime="20201110 08:37:39.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.715" endtime="20201110 08:37:39.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.737" endtime="20201110 08:37:39.739"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.746" endtime="20201110 08:37:39.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.741" endtime="20201110 08:37:39.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.732" endtime="20201110 08:37:39.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.130" endtime="20201110 08:37:39.772"></status>
</kw>
<msg timestamp="20201110 08:37:39.772" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.792" endtime="20201110 08:37:39.802"></status>
</kw>
<msg timestamp="20201110 08:37:39.803" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.788" endtime="20201110 08:37:39.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.809" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.805" endtime="20201110 08:37:39.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.812" endtime="20201110 08:37:39.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.781" endtime="20201110 08:37:39.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.777" endtime="20201110 08:37:39.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.834" endtime="20201110 08:37:40.165"></status>
</kw>
<msg timestamp="20201110 08:37:40.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035660889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035661361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.831" endtime="20201110 08:37:40.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035660889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035661361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.174" endtime="20201110 08:37:40.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.193" endtime="20201110 08:37:40.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.824" endtime="20201110 08:37:40.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.819" endtime="20201110 08:37:40.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.209" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:40.207" endtime="20201110 08:37:40.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.221" level="INFO">VALUE: [{'time': 0.035660889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035661361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035669792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430999999996247e-06, 'source_diff': 8.430999999996247e-06}, {'time': 0.035670264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035680361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0097000000000578e-05, 'source_diff': 1.0097000000000578e-05}, {'time': 0.035680833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035689653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819999999999661e-06, 'source_diff': 8.819999999999661e-06}, {'time': 0.035690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035697597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.471999999994483e-06, 'source_diff': 7.471999999994483e-06}, {'time': 0.035698069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035703986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.035704458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035714764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.035715236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035725847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0611000000000648e-05, 'source_diff': 1.0611000000000648e-05}, {'time': 0.035726319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035731944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.035732417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035736889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.471999999998422e-06, 'source_diff': 4.471999999998422e-06}, {'time': 0.035737361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035742736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.374999999994967e-06, 'source_diff': 5.374999999994967e-06}, {'time': 0.035743208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035753514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.035753986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035760097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.110999999996147e-06, 'source_diff': 6.110999999996147e-06}, {'time': 0.035760569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035770139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.570000000000412e-06, 'source_diff': 9.570000000000412e-06}, {'time': 0.035770611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035777694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.035778167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035783958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.790999999998048e-06, 'source_diff': 5.790999999998048e-06}, {'time': 0.035784431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035789833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.035790306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035794653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.035795125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035802028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.035802569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035809833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.035810306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.035816681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.035817222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.409999999997361e-07, 'source_diff': 5.409999999997361e-07}, {'time': 0.035827861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0638999999999788e-05, 'source_diff': 1.0638999999999788e-05}, {'time': 0.035828403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035832514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.111000000001086e-06, 'source_diff': 4.111000000001086e-06}, {'time': 0.035832986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035841417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.431000000003186e-06, 'source_diff': 8.431000000003186e-06}, {'time': 0.035841889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.03584625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.035846722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035856792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0070000000000912e-05, 'source_diff': 1.0070000000000912e-05}, {'time': 0.035857264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035862042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.035862514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035871556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.035872028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035877736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.035878208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035882764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555999999995841e-06, 'source_diff': 4.555999999995841e-06}, {'time': 0.035883236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035893542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0306000000001592e-05, 'source_diff': 1.0306000000001592e-05}, {'time': 0.035894014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035898778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.03589925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035906625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.374999999996967e-06, 'source_diff': 7.374999999996967e-06}, {'time': 0.035907097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035915625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.035916097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035920861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.035921333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035926125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.035926597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035936264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.035936736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035941389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.035941861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035950139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.035950681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.03596075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.035961222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035967264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.035967736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035975597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.035976139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}, {'time': 0.035983264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.125000000003656e-06, 'source_diff': 7.125000000003656e-06}, {'time': 0.035983736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035990167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.431000000001186e-06, 'source_diff': 6.431000000001186e-06}, {'time': 0.035990639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.035997181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.54200000000521e-06, 'source_diff': 6.54200000000521e-06}, {'time': 0.035997653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7199999999442133e-07, 'source_diff': 4.7199999999442133e-07}, {'time': 0.036004944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.036005417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036012208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.790999999999048e-06, 'source_diff': 6.790999999999048e-06}, {'time': 0.03601275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.420000000061487e-07, 'source_diff': 5.420000000061487e-07}, {'time': 0.036022014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999994943e-06, 'source_diff': 9.263999999994943e-06}, {'time': 0.036022486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.036029208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.036029681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7300000000083386e-07, 'source_diff': 4.7300000000083386e-07}, {'time': 0.036035736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.054999999997868e-06, 'source_diff': 6.054999999997868e-06}, {'time': 0.036036278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.419999999992098e-07, 'source_diff': 5.419999999992098e-07}]</msg>
<status status="PASS" starttime="20201110 08:37:40.212" endtime="20201110 08:37:40.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.201" endtime="20201110 08:37:40.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:40.282" level="INFO">${debug-compressed} = {'source_diff': [0, 4.720000000013602e-07, 8.430999999996247e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 7.471999999994483e...</msg>
<status status="PASS" starttime="20201110 08:37:40.227" endtime="20201110 08:37:40.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.291" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:40.289" endtime="20201110 08:37:40.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.300" level="INFO">VALUE: {'source_diff': [0, 4.720000000013602e-07, 8.430999999996247e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 7.471999999994483e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 5.625000000002156e-06, 4.7300000000083386e-07, 4.471999999998422e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 7.0829999999980076e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 5.402000000001572e-06, 4.7300000000083386e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 6.903000000002546e-06, 5.409999999997361e-07, 7.263999999999882e-06, 4.7300000000083386e-07, 6.375000000002906e-06, 5.409999999997361e-07, 1.0638999999999788e-05, 5.419999999992098e-07, 4.111000000001086e-06, 4.7199999999442133e-07, 8.431000000003186e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 4.777999999996951e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.720000000013602e-07, 4.555999999995841e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 4.79200000000346e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.278000000000452e-06, 5.419999999992098e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 6.041999999997771e-06, 4.720000000013602e-07, 7.860999999997897e-06, 5.419999999992098e-07, 7.125000000003656e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.7199999999442133e-07, 7.290999999999548e-06, 4.7300000000083386e-07, 6.790999999999048e-06, 5.420000000061487e-07, 9.263999999994943e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 6.054999999997868e-06, 5.419999999992098e-07], 'sourcediff': [0, 4.720000000013602e-07, 8.430999999996247e-06, 4.720000000013602e-07, 1.0097000000000578e-05, 4.720000000013602e-07, 8.819999999999661e-06, 4.720000000013602e-07, 7.471999999994483e-06, 4.720000000013602e-07, 5.917000000001116e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.7199999999442133e-07, 1.0611000000000648e-05, 4.720000000013602e-07, 5.625000000002156e-06, 4.7300000000083386e-07, 4.471999999998422e-06, 4.720000000013602e-07, 5.374999999994967e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 6.110999999996147e-06, 4.720000000013602e-07, 9.570000000000412e-06, 4.720000000013602e-07, 7.0829999999980076e-06, 4.7300000000083386e-07, 5.790999999998048e-06, 4.7300000000083386e-07, 5.402000000001572e-06, 4.7300000000083386e-07, 4.347000000001766e-06, 4.7199999999442133e-07, 6.903000000002546e-06, 5.409999999997361e-07, 7.263999999999882e-06, 4.7300000000083386e-07, 6.375000000002906e-06, 5.409999999997361e-07, 1.0638999999999788e-05, 5.419999999992098e-07, 4.111000000001086e-06, 4.7199999999442133e-07, 8.431000000003186e-06, 4.720000000013602e-07, 4.361000000001336e-06, 4.7199999999442133e-07, 1.0070000000000912e-05, 4.720000000013602e-07, 4.777999999996951e-06, 4.720000000013602e-07, 9.042000000000772e-06, 4.720000000013602e-07, 5.708000000000102e-06, 4.720000000013602e-07, 4.555999999995841e-06, 4.720000000013602e-07, 1.0306000000001592e-05, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 7.374999999996967e-06, 4.720000000013602e-07, 8.528000000000702e-06, 4.720000000013602e-07, 4.7639999999973814e-06, 4.720000000013602e-07, 4.79200000000346e-06, 4.7199999999442133e-07, 9.667000000004866e-06, 4.7199999999442133e-07, 4.653000000000296e-06, 4.720000000013602e-07, 8.278000000000452e-06, 5.419999999992098e-07, 1.0069000000001438e-05, 4.720000000013602e-07, 6.041999999997771e-06, 4.720000000013602e-07, 7.860999999997897e-06, 5.419999999992098e-07, 7.125000000003656e-06, 4.720000000013602e-07, 6.431000000001186e-06, 4.7199999999442133e-07, 6.54200000000521e-06, 4.7199999999442133e-07, 7.290999999999548e-06, 4.7300000000083386e-07, 6.790999999999048e-06, 5.420000000061487e-07, 9.263999999994943e-06, 4.720000000013602e-07, 6.722000000000672e-06, 4.7300000000083386e-07, 6.054999999997868e-06, 5.419999999992098e-07], 'eventtime': [0.035660889, 0.035661361, 0.035669792, 0.035670264, 0.035680361, 0.035680833, 0.035689653, 0.035690125, 0.035697597, 0.035698069, 0.035703986, 0.035704458, 0.035714764, 0.035715236, 0.035725847, 0.035726319, 0.035731944, 0.035732417, 0.035736889, 0.035737361, 0.035742736, 0.035743208, 0.035753514, 0.035753986, 0.035760097, 0.035760569, 0.035770139, 0.035770611, 0.035777694, 0.035778167, 0.035783958, 0.035784431, 0.035789833, 0.035790306, 0.035794653, 0.035795125, 0.035802028, 0.035802569, 0.035809833, 0.035810306, 0.035816681, 0.035817222, 0.035827861, 0.035828403, 0.035832514, 0.035832986, 0.035841417, 0.035841889, 0.03584625, 0.035846722, 0.035856792, 0.035857264, 0.035862042, 0.035862514, 0.035871556, 0.035872028, 0.035877736, 0.035878208, 0.035882764, 0.035883236, 0.035893542, 0.035894014, 0.035898778, 0.03589925, 0.035906625, 0.035907097, 0.035915625, 0.035916097, 0.035920861, 0.035921333, 0.035926125, 0.035926597, 0.035936264, 0.035936736, 0.035941389, 0.035941861, 0.035950139, 0.035950681, 0.03596075, 0.035961222, 0.035967264, 0.035967736, 0.035975597, 0.035976139, 0.035983264, 0.035983736, 0.035990167, 0.035990639, 0.035997181, 0.035997653, 0.036004944, 0.036005417, 0.036012208, 0.03601275, 0.036022014, 0.036022486, 0.036029208, 0.036029681, 0.036035736, 0.036036278]}</msg>
<status status="PASS" starttime="20201110 08:37:40.293" endtime="20201110 08:37:40.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.284" endtime="20201110 08:37:40.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.314" level="INFO">${RESULT} = [{'time': 0.035661361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.720000000013602e-07, 'source_diff': 4.720000000013602e-07}, {'time': 0.035670264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:40.305" endtime="20201110 08:37:40.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:40.345" level="INFO">${GPIO_OVERHEAD} = {'source_diff': [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07...</msg>
<status status="PASS" starttime="20201110 08:37:40.316" endtime="20201110 08:37:40.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.355" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:40.352" endtime="20201110 08:37:40.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.360" level="INFO">VALUE: [4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7300000000083386e-07, 4.7199999999442133e-07, 5.409999999997361e-07, 4.7300000000083386e-07, 5.409999999997361e-07, 5.419999999992098e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.720000000013602e-07, 5.419999999992098e-07, 4.720000000013602e-07, 4.7199999999442133e-07, 4.7199999999442133e-07, 4.7300000000083386e-07, 5.420000000061487e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 5.419999999992098e-07]</msg>
<status status="PASS" starttime="20201110 08:37:40.357" endtime="20201110 08:37:40.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.346" endtime="20201110 08:37:40.362"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.369" endtime="20201110 08:37:40.371"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.377" endtime="20201110 08:37:40.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.372" endtime="20201110 08:37:40.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.364" endtime="20201110 08:37:40.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.773" endtime="20201110 08:37:40.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:27.327" endtime="20201110 08:37:40.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.415" endtime="20201110 08:37:40.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.410" endtime="20201110 08:37:40.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.407" endtime="20201110 08:37:40.441"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:27.136" endtime="20201110 08:37:40.441" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.459" endtime="20201110 08:37:40.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.455" endtime="20201110 08:37:40.482"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.518" endtime="20201110 08:37:40.536"></status>
</kw>
<msg timestamp="20201110 08:37:40.537" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.514" endtime="20201110 08:37:40.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.539" endtime="20201110 08:37:40.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.551" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:40.546" endtime="20201110 08:37:40.551"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:40.505" endtime="20201110 08:37:40.553"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:40.499" endtime="20201110 08:37:40.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.496" endtime="20201110 08:37:40.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:40.563" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:40.562" endtime="20201110 08:37:40.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.557" endtime="20201110 08:37:40.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.494" endtime="20201110 08:37:40.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.492" endtime="20201110 08:37:40.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.567" endtime="20201110 08:37:40.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.488" endtime="20201110 08:37:40.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.484" endtime="20201110 08:37:40.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.453" endtime="20201110 08:37:40.574"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:37:40.577" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.597" endtime="20201110 08:37:40.610"></status>
</kw>
<msg timestamp="20201110 08:37:40.611" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.593" endtime="20201110 08:37:40.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.617" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.613" endtime="20201110 08:37:40.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.619" endtime="20201110 08:37:40.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.586" endtime="20201110 08:37:40.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.582" endtime="20201110 08:37:40.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.643" endtime="20201110 08:37:40.996"></status>
</kw>
<msg timestamp="20201110 08:37:41.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128470403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128480097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.639" endtime="20201110 08:37:41.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.128470403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128480097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.006" endtime="20201110 08:37:41.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.024" endtime="20201110 08:37:41.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.632" endtime="20201110 08:37:41.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.627" endtime="20201110 08:37:41.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.041" level="INFO">${RESULT} = [{'time': 0.128480097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.693999999976777e-06, 'source_diff': 9.693999999976777e-06}, {'time': 0.128494194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.032" endtime="20201110 08:37:41.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:41.073" level="INFO">${OVERHEAD} = {'source_diff': [9.693999999976777e-06, 9.361000000013275e-06, 9.695000000004006e-06, 9.027999999994263e-06, 8.860999999998898e-06, 9.193999999990154e-06, 9.194999999989628e-06, 9.693999999976777e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:41.043" endtime="20201110 08:37:41.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.084" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:41.082" endtime="20201110 08:37:41.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.089" level="INFO">VALUE: [9.693999999976777e-06, 9.361000000013275e-06, 9.695000000004006e-06, 9.027999999994263e-06, 8.860999999998898e-06, 9.193999999990154e-06, 9.194999999989628e-06, 9.693999999976777e-06, 9.235999999995803e-06, 9.167000000004366e-06, 9.736000000010181e-06, 9.361999999984993e-06, 9.180999999996997e-06, 8.875000000019284e-06, 9.860999999999898e-06, 9.527000000009167e-06, 9.860999999999898e-06, 8.985999999988614e-06, 9.193999999990154e-06, 9.014000000001632e-06, 9.179999999997523e-06, 9.027999999994263e-06, 9.542000000001272e-06, 9.221999999975417e-06, 9.51400000001601e-06, 9.375000000005906e-06, 9.527000000009167e-06, 9.540999999974042e-06, 9.695000000004006e-06, 9.513999999988254e-06, 8.805000000000618e-06, 9.527999999980885e-06, 9.222000000003172e-06, 9.249999999988434e-06, 9.569000000014816e-06, 9.444999999996817e-06, 8.860999999998898e-06, 9.014000000001632e-06, 9.361000000013275e-06, 9.179999999997523e-06, 8.847000000006267e-06, 9.179999999997523e-06, 9.346999999992889e-06, 8.860999999998898e-06, 9.513999999988254e-06, 9.499999999995623e-06, 9.527000000009167e-06, 9.542000000001272e-06, 9.541000000001798e-06, 8.98600000001637e-06]</msg>
<status status="PASS" starttime="20201110 08:37:41.086" endtime="20201110 08:37:41.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.076" endtime="20201110 08:37:41.092"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.098" endtime="20201110 08:37:41.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.106" endtime="20201110 08:37:41.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.102" endtime="20201110 08:37:41.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.093" endtime="20201110 08:37:41.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.578" endtime="20201110 08:37:41.131"></status>
</kw>
<msg timestamp="20201110 08:37:41.132" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.151" endtime="20201110 08:37:41.165"></status>
</kw>
<msg timestamp="20201110 08:37:41.166" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.148" endtime="20201110 08:37:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.172" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.168" endtime="20201110 08:37:41.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.174" endtime="20201110 08:37:41.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.141" endtime="20201110 08:37:41.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.136" endtime="20201110 08:37:41.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.197" endtime="20201110 08:37:41.540"></status>
</kw>
<msg timestamp="20201110 08:37:41.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036403208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036412944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.194" endtime="20201110 08:37:41.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036403208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036412944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.550" endtime="20201110 08:37:41.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.569" endtime="20201110 08:37:41.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.187" endtime="20201110 08:37:41.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.182" endtime="20201110 08:37:41.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.586" level="INFO">${RESULT} = [{'time': 0.036412944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.036431931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.577" endtime="20201110 08:37:41.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:41.618" level="INFO">${OVERHEAD} = {'source_diff': [9.736000000003242e-06, 9.695000000004006e-06, 9.027000000001728e-06, 9.500000000002562e-06, 8.944999999996317e-06, 9.193999999997093e-06, 9.681000000004436e-06, 8.874999999998467e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:41.589" endtime="20201110 08:37:41.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:41.626" endtime="20201110 08:37:41.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.634" level="INFO">VALUE: [9.736000000003242e-06, 9.695000000004006e-06, 9.027000000001728e-06, 9.500000000002562e-06, 8.944999999996317e-06, 9.193999999997093e-06, 9.681000000004436e-06, 8.874999999998467e-06, 9.374999999998967e-06, 9.679999999998024e-06, 9.194000000004032e-06, 9.707999999997163e-06, 9.694000000004532e-06, 9.583000000000508e-06, 9.429999999997773e-06, 9.195000000003506e-06, 9.514000000002132e-06, 9.374999999998967e-06, 9.347999999999301e-06, 8.860999999998898e-06, 9.042000000000772e-06, 9.028000000001202e-06, 8.874999999998467e-06, 9.528000000001702e-06, 9.666999999997927e-06, 8.847000000006267e-06, 9.485999999996053e-06, 9.014000000001632e-06, 9.694999999997067e-06, 9.513999999995193e-06, 9.860999999999898e-06, 9.360999999999398e-06, 9.500000000002562e-06, 9.194000000004032e-06, 9.360999999999398e-06, 8.860999999998898e-06, 9.193999999997093e-06, 9.360999999999398e-06, 8.846999999999328e-06, 9.693999999997593e-06, 9.569000000000938e-06, 9.167000000004366e-06, 9.01299999999522e-06, 9.042000000000772e-06, 8.860999999998898e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.319000000000688e-06, 9.028000000001202e-06, 8.861000000005836e-06]</msg>
<status status="PASS" starttime="20201110 08:37:41.631" endtime="20201110 08:37:41.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.620" endtime="20201110 08:37:41.636"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.643" endtime="20201110 08:37:41.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.651" endtime="20201110 08:37:41.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.647" endtime="20201110 08:37:41.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.638" endtime="20201110 08:37:41.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.133" endtime="20201110 08:37:41.677"></status>
</kw>
<msg timestamp="20201110 08:37:41.677" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.697" endtime="20201110 08:37:41.709"></status>
</kw>
<msg timestamp="20201110 08:37:41.710" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.694" endtime="20201110 08:37:41.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.716" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.712" endtime="20201110 08:37:41.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.718" endtime="20201110 08:37:41.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.686" endtime="20201110 08:37:41.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.682" endtime="20201110 08:37:41.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.742" endtime="20201110 08:37:42.078"></status>
</kw>
<msg timestamp="20201110 08:37:42.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03669475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036703778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:41.738" endtime="20201110 08:37:42.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03669475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036703778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:42.087" endtime="20201110 08:37:42.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.106" endtime="20201110 08:37:42.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.731" endtime="20201110 08:37:42.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.727" endtime="20201110 08:37:42.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.124" level="INFO">${RESULT} = [{'time': 0.036703778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.036723694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:42.115" endtime="20201110 08:37:42.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:42.158" level="INFO">${OVERHEAD} = {'source_diff': [9.028000000001202e-06, 9.194000000004032e-06, 9.499999999995623e-06, 8.846999999999328e-06, 9.000000000002062e-06, 9.721999999996733e-06, 8.903000000004546e-06, 9.013999999994693e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:42.126" endtime="20201110 08:37:42.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.168" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:42.166" endtime="20201110 08:37:42.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.173" level="INFO">VALUE: [9.028000000001202e-06, 9.194000000004032e-06, 9.499999999995623e-06, 8.846999999999328e-06, 9.000000000002062e-06, 9.721999999996733e-06, 8.903000000004546e-06, 9.013999999994693e-06, 8.874999999998467e-06, 9.387999999999064e-06, 9.152999999997857e-06, 9.527999999994763e-06, 9.347999999999301e-06, 9.333999999999731e-06, 9.610999999999648e-06, 9.638999999998787e-06, 9.374999999998967e-06, 9.528000000001702e-06, 9.528000000001702e-06, 8.874999999998467e-06, 9.638999999998787e-06, 9.556000000000842e-06, 9.014000000001632e-06, 9.333000000000258e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.360999999999398e-06, 9.193999999997093e-06, 9.138999999998287e-06, 9.679999999998024e-06, 9.528000000001702e-06, 8.959000000002826e-06, 9.708999999996637e-06, 9.167000000004366e-06, 9.028000000001202e-06, 9.528000000001702e-06, 9.624999999999218e-06, 9.527999999994763e-06, 9.540999999994859e-06, 9.207999999996663e-06, 8.860999999998898e-06, 9.430999999997247e-06, 9.514000000002132e-06, 9.389000000005476e-06, 9.374999999998967e-06, 8.929999999997273e-06, 9.514000000002132e-06, 9.694000000004532e-06, 9.360999999999398e-06]</msg>
<status status="PASS" starttime="20201110 08:37:42.170" endtime="20201110 08:37:42.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.160" endtime="20201110 08:37:42.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.182" endtime="20201110 08:37:42.185"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.191" endtime="20201110 08:37:42.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.186" endtime="20201110 08:37:42.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.178" endtime="20201110 08:37:42.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.678" endtime="20201110 08:37:42.216"></status>
</kw>
<msg timestamp="20201110 08:37:42.217" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.236" endtime="20201110 08:37:42.248"></status>
</kw>
<msg timestamp="20201110 08:37:42.250" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.233" endtime="20201110 08:37:42.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.256" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.252" endtime="20201110 08:37:42.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.258" endtime="20201110 08:37:42.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.226" endtime="20201110 08:37:42.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.221" endtime="20201110 08:37:42.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.281" endtime="20201110 08:37:42.620"></status>
</kw>
<msg timestamp="20201110 08:37:42.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036671514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036680875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.278" endtime="20201110 08:37:42.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036671514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036680875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.629" endtime="20201110 08:37:42.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.653" endtime="20201110 08:37:42.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.271" endtime="20201110 08:37:42.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.266" endtime="20201110 08:37:42.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.670" level="INFO">${RESULT} = [{'time': 0.036680875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.360999999999398e-06, 'source_diff': 9.360999999999398e-06}, {'time': 0.036694875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:42.661" endtime="20201110 08:37:42.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:42.701" level="INFO">${OVERHEAD} = {'source_diff': [9.360999999999398e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.665999999998454e-06, 9.388999999998537e-06, 9.707999999997163e-06, 9.167000000004366e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:42.672" endtime="20201110 08:37:42.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.713" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:42.709" endtime="20201110 08:37:42.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.718" level="INFO">VALUE: [9.360999999999398e-06, 9.500000000002562e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.665999999998454e-06, 9.388999999998537e-06, 9.707999999997163e-06, 9.167000000004366e-06, 9.513999999995193e-06, 9.347999999999301e-06, 9.694000000004532e-06, 9.361999999998871e-06, 9.695000000004006e-06, 9.069000000000438e-06, 9.360999999999398e-06, 9.499999999995623e-06, 8.986000000002492e-06, 8.847999999998801e-06, 9.679999999998024e-06, 9.166000000004892e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.360999999999398e-06, 9.528000000001702e-06, 9.528000000001702e-06, 8.833999999999231e-06, 9.680999999997497e-06, 9.014000000001632e-06, 9.680999999997497e-06, 8.846999999999328e-06, 9.527000000002228e-06, 9.707999999997163e-06, 9.028000000001202e-06, 8.860999999998898e-06, 8.832999999999758e-06, 9.179999999997523e-06, 9.208000000003602e-06, 9.180999999996997e-06, 9.027000000001728e-06, 9.055000000000868e-06, 9.693999999997593e-06, 9.360999999999398e-06, 9.014000000001632e-06, 9.528000000001702e-06, 9.693999999997593e-06, 9.527999999994763e-06, 9.709000000003576e-06, 9.360999999999398e-06, 9.667000000004866e-06, 9.041999999993833e-06]</msg>
<status status="PASS" starttime="20201110 08:37:42.715" endtime="20201110 08:37:42.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.703" endtime="20201110 08:37:42.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.727" endtime="20201110 08:37:42.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.735" endtime="20201110 08:37:42.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.731" endtime="20201110 08:37:42.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.722" endtime="20201110 08:37:42.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.218" endtime="20201110 08:37:42.761"></status>
</kw>
<msg timestamp="20201110 08:37:42.761" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.781" endtime="20201110 08:37:42.793"></status>
</kw>
<msg timestamp="20201110 08:37:42.794" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.777" endtime="20201110 08:37:42.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.800" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.796" endtime="20201110 08:37:42.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.803" endtime="20201110 08:37:42.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.770" endtime="20201110 08:37:42.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.766" endtime="20201110 08:37:42.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.826" endtime="20201110 08:37:43.165"></status>
</kw>
<msg timestamp="20201110 08:37:43.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036569778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036578625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.823" endtime="20201110 08:37:43.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036569778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036578625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.177" endtime="20201110 08:37:43.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.196" endtime="20201110 08:37:43.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.815" endtime="20201110 08:37:43.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.811" endtime="20201110 08:37:43.203"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.214" level="INFO">${RESULT} = [{'time': 0.036578625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.036594639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:43.205" endtime="20201110 08:37:43.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:43.245" level="INFO">${OVERHEAD} = {'source_diff': [8.846999999999328e-06, 9.320000000000161e-06, 9.528000000001702e-06, 9.708000000004102e-06, 9.222000000003172e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.514000000002132e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:43.216" endtime="20201110 08:37:43.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.255" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:43.253" endtime="20201110 08:37:43.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.260" level="INFO">VALUE: [8.846999999999328e-06, 9.320000000000161e-06, 9.528000000001702e-06, 9.708000000004102e-06, 9.222000000003172e-06, 9.542000000001272e-06, 9.528000000001702e-06, 9.514000000002132e-06, 9.193999999997093e-06, 9.069999999999911e-06, 9.388999999998537e-06, 8.986000000002492e-06, 9.346999999999828e-06, 9.708000000004102e-06, 9.416999999997677e-06, 9.000000000002062e-06, 9.014000000001632e-06, 9.209000000003076e-06, 8.846999999999328e-06, 9.360999999999398e-06, 9.138999999998287e-06, 9.208000000003602e-06, 9.528000000001702e-06, 9.028000000001202e-06, 9.193999999997093e-06, 9.194000000004032e-06, 9.207999999996663e-06, 8.846999999999328e-06, 9.194000000004032e-06, 8.888999999998037e-06, 9.041000000001298e-06, 9.041000000001298e-06, 9.389000000005476e-06, 9.431000000004186e-06, 9.360999999999398e-06, 9.042000000000772e-06, 9.027999999994263e-06, 9.860999999999898e-06, 9.014000000001632e-06, 9.014000000001632e-06, 9.707999999997163e-06, 8.846999999999328e-06, 9.708000000004102e-06, 9.041999999993833e-06, 9.861999999999371e-06, 9.027999999994263e-06, 9.042000000000772e-06, 9.374999999998967e-06, 9.207999999996663e-06, 9.346999999999828e-06]</msg>
<status status="PASS" starttime="20201110 08:37:43.257" endtime="20201110 08:37:43.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.246" endtime="20201110 08:37:43.263"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.270" endtime="20201110 08:37:43.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.279" endtime="20201110 08:37:43.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.274" endtime="20201110 08:37:43.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.265" endtime="20201110 08:37:43.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.762" endtime="20201110 08:37:43.304"></status>
</kw>
<msg timestamp="20201110 08:37:43.305" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.325" endtime="20201110 08:37:43.337"></status>
</kw>
<msg timestamp="20201110 08:37:43.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.321" endtime="20201110 08:37:43.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.344" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.340" endtime="20201110 08:37:43.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.346" endtime="20201110 08:37:43.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.314" endtime="20201110 08:37:43.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.309" endtime="20201110 08:37:43.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.370" endtime="20201110 08:37:43.711"></status>
</kw>
<msg timestamp="20201110 08:37:43.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036481028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036490708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.366" endtime="20201110 08:37:43.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036481028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036490708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.720" endtime="20201110 08:37:43.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.739" endtime="20201110 08:37:43.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.359" endtime="20201110 08:37:43.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.354" endtime="20201110 08:37:43.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.756" level="INFO">${RESULT} = [{'time': 0.036490708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.03650975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:43.747" endtime="20201110 08:37:43.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:43.788" level="INFO">${OVERHEAD} = {'source_diff': [9.679999999998024e-06, 9.346999999999828e-06, 9.014000000001632e-06, 9.193999999997093e-06, 9.360999999999398e-06, 9.208000000003602e-06, 9.193999999997093e-06, 9.360999999999398e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:43.758" endtime="20201110 08:37:43.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.801" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:43.798" endtime="20201110 08:37:43.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.809" level="INFO">VALUE: [9.679999999998024e-06, 9.346999999999828e-06, 9.014000000001632e-06, 9.193999999997093e-06, 9.360999999999398e-06, 9.208000000003602e-06, 9.193999999997093e-06, 9.360999999999398e-06, 9.180999999996997e-06, 9.528000000001702e-06, 8.846999999999328e-06, 9.181000000003936e-06, 8.846999999999328e-06, 8.860999999998898e-06, 9.694999999997067e-06, 9.638999999998787e-06, 8.86200000000531e-06, 8.846999999999328e-06, 9.151999999998384e-06, 9.042000000000772e-06, 9.179999999997523e-06, 8.860999999998898e-06, 9.181000000003936e-06, 9.693999999997593e-06, 9.693999999997593e-06, 9.361000000006336e-06, 9.277999999994513e-06, 9.666999999997927e-06, 9.083000000000008e-06, 9.570000000000412e-06, 9.360999999999398e-06, 8.792000000000522e-06, 9.014000000001632e-06, 8.846999999999328e-06, 9.346999999999828e-06, 9.500000000002562e-06, 9.083000000000008e-06, 8.860999999998898e-06, 9.083000000000008e-06, 9.193999999997093e-06, 9.195000000003506e-06, 9.042000000000772e-06, 9.416999999997677e-06, 8.999999999995123e-06, 9.583000000000508e-06, 9.708999999996637e-06, 9.180000000004462e-06, 9.694999999997067e-06, 9.014000000001632e-06, 8.875000000005406e-06]</msg>
<status status="PASS" starttime="20201110 08:37:43.806" endtime="20201110 08:37:43.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.792" endtime="20201110 08:37:43.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.821" endtime="20201110 08:37:43.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.829" endtime="20201110 08:37:43.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.825" endtime="20201110 08:37:43.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.815" endtime="20201110 08:37:43.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.306" endtime="20201110 08:37:43.856"></status>
</kw>
<msg timestamp="20201110 08:37:43.856" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.877" endtime="20201110 08:37:43.889"></status>
</kw>
<msg timestamp="20201110 08:37:43.890" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.873" endtime="20201110 08:37:43.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.896" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.892" endtime="20201110 08:37:43.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.898" endtime="20201110 08:37:43.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.866" endtime="20201110 08:37:43.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.861" endtime="20201110 08:37:43.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.923" endtime="20201110 08:37:44.264"></status>
</kw>
<msg timestamp="20201110 08:37:44.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037139667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037149, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:43.919" endtime="20201110 08:37:44.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037139667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037149, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:44.276" endtime="20201110 08:37:44.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.296" endtime="20201110 08:37:44.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.912" endtime="20201110 08:37:44.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.907" endtime="20201110 08:37:44.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.317" level="INFO">${RESULT} = [{'time': 0.037149, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.333000000000258e-06, 'source_diff': 9.333000000000258e-06}, {'time': 0.037163097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:44.307" endtime="20201110 08:37:44.318"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:44.352" level="INFO">${OVERHEAD} = {'source_diff': [9.333000000000258e-06, 9.528000000001702e-06, 9.193999999997093e-06, 9.527000000002228e-06, 8.986000000002492e-06, 9.514000000002132e-06, 9.000000000002062e-06, 9.360999999999398e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:44.320" endtime="20201110 08:37:44.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.364" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:44.362" endtime="20201110 08:37:44.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.371" level="INFO">VALUE: [9.333000000000258e-06, 9.528000000001702e-06, 9.193999999997093e-06, 9.527000000002228e-06, 8.986000000002492e-06, 9.514000000002132e-06, 9.000000000002062e-06, 9.360999999999398e-06, 8.819000000000188e-06, 9.722000000003672e-06, 9.333999999999731e-06, 8.846999999999328e-06, 8.999999999995123e-06, 9.194999999996567e-06, 9.485999999996053e-06, 9.527999999994763e-06, 9.361999999998871e-06, 9.680999999997497e-06, 8.861000000005836e-06, 9.027000000001728e-06, 9.028000000001202e-06, 9.694999999997067e-06, 9.209000000003076e-06, 9.194999999996567e-06, 9.583000000000508e-06, 9.292000000001022e-06, 9.096999999999578e-06, 9.041000000001298e-06, 9.528000000001702e-06, 9.403000000005046e-06, 9.514000000002132e-06, 9.207999999996663e-06, 9.486000000002992e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.083999999999481e-06, 9.014000000001632e-06, 9.860999999999898e-06, 9.013999999994693e-06, 9.417000000004616e-06, 9.514000000002132e-06, 8.985999999995553e-06, 9.528000000001702e-06, 9.860999999999898e-06, 9.708000000004102e-06, 9.235999999995803e-06, 9.360999999999398e-06, 9.402999999998107e-06, 9.693999999997593e-06, 9.320000000000161e-06]</msg>
<status status="PASS" starttime="20201110 08:37:44.367" endtime="20201110 08:37:44.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.354" endtime="20201110 08:37:44.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.382" endtime="20201110 08:37:44.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.393" endtime="20201110 08:37:44.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.387" endtime="20201110 08:37:44.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.377" endtime="20201110 08:37:44.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.858" endtime="20201110 08:37:44.420"></status>
</kw>
<msg timestamp="20201110 08:37:44.421" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.447" endtime="20201110 08:37:44.465"></status>
</kw>
<msg timestamp="20201110 08:37:44.466" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.443" endtime="20201110 08:37:44.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.474" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.469" endtime="20201110 08:37:44.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.476" endtime="20201110 08:37:44.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.434" endtime="20201110 08:37:44.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.427" endtime="20201110 08:37:44.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.499" endtime="20201110 08:37:44.839"></status>
</kw>
<msg timestamp="20201110 08:37:44.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046377, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:44.496" endtime="20201110 08:37:44.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046367819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046377, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:44.849" endtime="20201110 08:37:44.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.867" endtime="20201110 08:37:44.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.489" endtime="20201110 08:37:44.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.484" endtime="20201110 08:37:44.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.885" level="INFO">${RESULT} = [{'time': 0.046377, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.046391083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:37:44.876" endtime="20201110 08:37:44.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:44.916" level="INFO">${OVERHEAD} = {'source_diff': [9.181000000003936e-06, 9.207999999996663e-06, 9.180000000004462e-06, 8.860999999998898e-06, 9.207999999996663e-06, 8.847999999998801e-06, 9.194999999996567e-06, 9.194999999996567e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:44.887" endtime="20201110 08:37:44.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.926" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:44.924" endtime="20201110 08:37:44.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.931" level="INFO">VALUE: [9.181000000003936e-06, 9.207999999996663e-06, 9.180000000004462e-06, 8.860999999998898e-06, 9.207999999996663e-06, 8.847999999998801e-06, 9.194999999996567e-06, 9.194999999996567e-06, 9.527000000002228e-06, 9.540999999994859e-06, 8.874999999998467e-06, 8.847999999998801e-06, 9.832999999993819e-06, 9.320000000000161e-06, 9.36200000000581e-06, 9.680999999997497e-06, 9.528000000001702e-06, 9.346999999999828e-06, 9.014000000001632e-06, 9.514000000002132e-06, 8.861000000005836e-06, 8.902999999997607e-06, 9.194000000004032e-06, 9.374999999998967e-06, 9.014000000001632e-06, 9.208000000003602e-06, 9.222000000003172e-06, 9.028000000001202e-06, 9.679999999998024e-06, 9.028000000001202e-06, 9.485999999996053e-06, 9.346999999999828e-06, 9.541999999994333e-06, 9.014000000001632e-06, 8.846999999999328e-06, 9.874999999999468e-06, 8.888999999998037e-06, 8.860999999998898e-06, 9.513000000002658e-06, 9.694999999997067e-06, 9.847000000000328e-06, 9.207999999996663e-06, 9.042000000000772e-06, 9.153000000004796e-06, 9.875000000006406e-06, 9.540999999994859e-06, 9.638999999998787e-06, 9.819000000001188e-06, 8.875000000005406e-06, 8.860999999998898e-06]</msg>
<status status="PASS" starttime="20201110 08:37:44.928" endtime="20201110 08:37:44.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.918" endtime="20201110 08:37:44.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.940" endtime="20201110 08:37:44.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.948" endtime="20201110 08:37:44.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.944" endtime="20201110 08:37:44.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.935" endtime="20201110 08:37:44.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.422" endtime="20201110 08:37:44.973"></status>
</kw>
<msg timestamp="20201110 08:37:44.974" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.993" endtime="20201110 08:37:45.006"></status>
</kw>
<msg timestamp="20201110 08:37:45.007" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.990" endtime="20201110 08:37:45.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.009" endtime="20201110 08:37:45.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.015" endtime="20201110 08:37:45.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.983" endtime="20201110 08:37:45.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.978" endtime="20201110 08:37:45.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.040" endtime="20201110 08:37:45.390"></status>
</kw>
<msg timestamp="20201110 08:37:45.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036804042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.037" endtime="20201110 08:37:45.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036804042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036813667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.399" endtime="20201110 08:37:45.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.417" endtime="20201110 08:37:45.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.030" endtime="20201110 08:37:45.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.025" endtime="20201110 08:37:45.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.435" level="INFO">${RESULT} = [{'time': 0.036813667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.624999999999218e-06, 'source_diff': 9.624999999999218e-06}, {'time': 0.03682875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:45.426" endtime="20201110 08:37:45.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:45.465" level="INFO">${OVERHEAD} = {'source_diff': [9.624999999999218e-06, 8.819000000000188e-06, 9.236000000002742e-06, 9.194000000004032e-06, 9.333000000000258e-06, 9.707999999997163e-06, 9.180000000004462e-06, 9.333999999999731e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:45.437" endtime="20201110 08:37:45.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.475" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:45.472" endtime="20201110 08:37:45.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.480" level="INFO">VALUE: [9.624999999999218e-06, 8.819000000000188e-06, 9.236000000002742e-06, 9.194000000004032e-06, 9.333000000000258e-06, 9.707999999997163e-06, 9.180000000004462e-06, 9.333999999999731e-06, 9.417000000004616e-06, 9.860999999999898e-06, 9.528000000001702e-06, 9.333000000000258e-06, 9.388999999998537e-06, 9.764000000002382e-06, 8.846999999999328e-06, 9.194999999996567e-06, 9.360999999999398e-06, 9.624999999999218e-06, 9.514000000002132e-06, 9.860999999999898e-06, 9.527000000002228e-06, 9.709000000003576e-06, 9.360999999999398e-06, 9.528000000001702e-06, 9.680000000004962e-06, 8.957999999996413e-06, 9.638999999998787e-06, 9.347999999999301e-06, 9.513999999995193e-06, 8.860999999998898e-06, 9.041999999993833e-06, 9.209000000003076e-06, 9.193999999997093e-06, 9.528000000001702e-06, 9.624999999999218e-06, 8.874999999998467e-06, 9.360999999999398e-06, 9.207999999996663e-06, 9.680999999997497e-06, 8.833000000006697e-06, 9.194999999996567e-06, 9.013999999994693e-06, 9.028000000001202e-06, 9.681000000004436e-06, 9.042000000000772e-06, 9.042000000000772e-06, 9.694999999997067e-06, 9.014000000001632e-06, 9.708000000004102e-06, 9.194000000004032e-06]</msg>
<status status="PASS" starttime="20201110 08:37:45.477" endtime="20201110 08:37:45.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.466" endtime="20201110 08:37:45.482"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.489" endtime="20201110 08:37:45.491"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.497" endtime="20201110 08:37:45.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.492" endtime="20201110 08:37:45.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.484" endtime="20201110 08:37:45.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.975" endtime="20201110 08:37:45.522"></status>
</kw>
<msg timestamp="20201110 08:37:45.522" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.543" endtime="20201110 08:37:45.555"></status>
</kw>
<msg timestamp="20201110 08:37:45.556" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.540" endtime="20201110 08:37:45.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.562" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.558" endtime="20201110 08:37:45.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.564" endtime="20201110 08:37:45.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.532" endtime="20201110 08:37:45.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.527" endtime="20201110 08:37:45.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.589" endtime="20201110 08:37:45.918"></status>
</kw>
<msg timestamp="20201110 08:37:45.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037122958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.585" endtime="20201110 08:37:45.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037113944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037122958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.928" endtime="20201110 08:37:45.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.957" endtime="20201110 08:37:45.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.577" endtime="20201110 08:37:45.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.572" endtime="20201110 08:37:45.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.982" level="INFO">${RESULT} = [{'time': 0.037122958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.037137861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:45.973" endtime="20201110 08:37:45.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:46.013" level="INFO">${OVERHEAD} = {'source_diff': [9.013999999994693e-06, 9.708000000004102e-06, 9.680000000004962e-06, 9.514000000002132e-06, 9.736000000003242e-06, 9.069000000000438e-06, 9.693999999997593e-06, 9.209000000003076e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:45.984" endtime="20201110 08:37:46.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.024" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:46.022" endtime="20201110 08:37:46.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.029" level="INFO">VALUE: [9.013999999994693e-06, 9.708000000004102e-06, 9.680000000004962e-06, 9.514000000002132e-06, 9.736000000003242e-06, 9.069000000000438e-06, 9.693999999997593e-06, 9.209000000003076e-06, 9.193999999997093e-06, 9.707999999997163e-06, 9.028000000001202e-06, 9.500000000002562e-06, 9.708000000004102e-06, 8.860999999998898e-06, 9.194000000004032e-06, 9.514000000002132e-06, 9.486000000002992e-06, 9.179999999997523e-06, 9.666999999997927e-06, 9.51299999999572e-06, 9.375000000005906e-06, 9.667000000004866e-06, 9.207999999996663e-06, 9.665999999998454e-06, 9.014000000001632e-06, 9.514000000002132e-06, 9.417000000004616e-06, 9.124999999998717e-06, 8.875000000005406e-06, 9.180999999996997e-06, 8.861000000005836e-06, 9.014000000001632e-06, 9.514000000002132e-06, 9.374999999998967e-06, 9.347999999999301e-06, 9.680999999997497e-06, 9.346999999999828e-06, 9.527000000002228e-06, 9.181000000003936e-06, 9.360999999999398e-06, 9.333999999999731e-06, 9.179999999997523e-06, 9.208000000003602e-06, 9.541999999994333e-06, 9.193999999997093e-06, 9.527000000002228e-06, 9.194000000004032e-06, 9.209000000003076e-06, 9.194999999996567e-06, 9.52699999999529e-06]</msg>
<status status="PASS" starttime="20201110 08:37:46.026" endtime="20201110 08:37:46.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.015" endtime="20201110 08:37:46.032"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.038" endtime="20201110 08:37:46.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.047" endtime="20201110 08:37:46.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.042" endtime="20201110 08:37:46.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.034" endtime="20201110 08:37:46.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.524" endtime="20201110 08:37:46.073"></status>
</kw>
<msg timestamp="20201110 08:37:46.074" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.094" endtime="20201110 08:37:46.108"></status>
</kw>
<msg timestamp="20201110 08:37:46.109" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.090" endtime="20201110 08:37:46.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.115" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.111" endtime="20201110 08:37:46.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.117" endtime="20201110 08:37:46.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.083" endtime="20201110 08:37:46.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.078" endtime="20201110 08:37:46.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.141" endtime="20201110 08:37:46.488"></status>
</kw>
<msg timestamp="20201110 08:37:46.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037174736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037183764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.138" endtime="20201110 08:37:46.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037174736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037183764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.498" endtime="20201110 08:37:46.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.517" endtime="20201110 08:37:46.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.130" endtime="20201110 08:37:46.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.126" endtime="20201110 08:37:46.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.535" level="INFO">${RESULT} = [{'time': 0.037183764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.037199931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.526" endtime="20201110 08:37:46.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:46.568" level="INFO">${OVERHEAD} = {'source_diff': [9.028000000001202e-06, 9.499999999995623e-06, 9.694999999997067e-06, 9.013000000002158e-06, 9.166999999997427e-06, 9.528000000001702e-06, 8.847999999998801e-06, 9.193999999997093e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:46.537" endtime="20201110 08:37:46.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.578" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:46.576" endtime="20201110 08:37:46.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.583" level="INFO">VALUE: [9.028000000001202e-06, 9.499999999995623e-06, 9.694999999997067e-06, 9.013000000002158e-06, 9.166999999997427e-06, 9.528000000001702e-06, 8.847999999998801e-06, 9.193999999997093e-06, 9.180999999996997e-06, 9.306000000000592e-06, 8.847000000006267e-06, 8.846999999999328e-06, 8.846999999999328e-06, 9.346999999999828e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.194000000004032e-06, 9.027000000001728e-06, 9.679999999998024e-06, 9.514000000002132e-06, 8.860999999998898e-06, 9.360999999999398e-06, 9.179999999997523e-06, 9.360999999999398e-06, 9.444000000004282e-06, 9.666999999997927e-06, 9.514000000002132e-06, 8.875000000005406e-06, 9.680999999997497e-06, 9.694999999997067e-06, 9.514000000002132e-06, 9.306000000000592e-06, 9.180999999996997e-06, 9.374999999998967e-06, 8.847000000006267e-06, 9.278000000001452e-06, 9.528000000001702e-06, 8.860999999998898e-06, 9.527999999994763e-06, 9.02699999999479e-06, 9.194000000004032e-06, 9.014000000001632e-06, 9.360999999999398e-06, 8.860999999998898e-06, 9.193999999997093e-06, 9.514000000002132e-06, 8.875000000005406e-06, 9.014000000001632e-06, 9.527000000002228e-06, 9.680999999997497e-06]</msg>
<status status="PASS" starttime="20201110 08:37:46.580" endtime="20201110 08:37:46.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.570" endtime="20201110 08:37:46.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.593" endtime="20201110 08:37:46.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.602" endtime="20201110 08:37:46.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.597" endtime="20201110 08:37:46.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.588" endtime="20201110 08:37:46.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.075" endtime="20201110 08:37:46.627"></status>
</kw>
<msg timestamp="20201110 08:37:46.628" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.648" endtime="20201110 08:37:46.662"></status>
</kw>
<msg timestamp="20201110 08:37:46.664" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.645" endtime="20201110 08:37:46.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.670" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.666" endtime="20201110 08:37:46.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.672" endtime="20201110 08:37:46.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.637" endtime="20201110 08:37:46.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.633" endtime="20201110 08:37:46.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.696" endtime="20201110 08:37:47.064"></status>
</kw>
<msg timestamp="20201110 08:37:47.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037432958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037442486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.693" endtime="20201110 08:37:47.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037432958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037442486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.074" endtime="20201110 08:37:47.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.092" endtime="20201110 08:37:47.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.685" endtime="20201110 08:37:47.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.680" endtime="20201110 08:37:47.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.110" level="INFO">${RESULT} = [{'time': 0.037442486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527999999994763e-06, 'source_diff': 9.527999999994763e-06}, {'time': 0.0374605, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:47.101" endtime="20201110 08:37:47.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:47.142" level="INFO">${OVERHEAD} = {'source_diff': [9.527999999994763e-06, 8.860999999998898e-06, 9.360999999999398e-06, 9.028000000001202e-06, 9.360999999999398e-06, 9.624999999999218e-06, 9.014000000001632e-06, 9.694000000004532e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:47.112" endtime="20201110 08:37:47.143"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.153" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:47.150" endtime="20201110 08:37:47.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.158" level="INFO">VALUE: [9.527999999994763e-06, 8.860999999998898e-06, 9.360999999999398e-06, 9.028000000001202e-06, 9.360999999999398e-06, 9.624999999999218e-06, 9.014000000001632e-06, 9.694000000004532e-06, 9.693999999997593e-06, 9.193999999997093e-06, 9.000000000002062e-06, 9.374999999998967e-06, 9.542000000001272e-06, 9.374999999998967e-06, 9.527999999994763e-06, 9.360999999999398e-06, 8.986000000002492e-06, 9.333999999999731e-06, 9.179999999997523e-06, 9.042000000000772e-06, 9.528000000001702e-06, 8.860999999998898e-06, 9.346999999999828e-06, 9.708999999996637e-06, 9.360999999999398e-06, 8.791000000001048e-06, 9.680000000004962e-06, 8.861000000005836e-06, 9.041000000001298e-06, 9.402999999998107e-06, 9.193999999997093e-06, 9.528000000001702e-06, 9.681000000004436e-06, 9.527000000002228e-06, 9.513999999995193e-06, 9.374999999998967e-06, 9.194999999996567e-06, 8.874999999998467e-06, 9.360999999999398e-06, 9.541000000001798e-06, 8.846999999999328e-06, 9.541999999994333e-06, 9.514000000002132e-06, 9.694999999997067e-06, 9.207999999996663e-06, 8.832999999999758e-06, 9.860999999999898e-06, 9.695000000004006e-06, 9.346999999999828e-06, 9.679999999998024e-06]</msg>
<status status="PASS" starttime="20201110 08:37:47.155" endtime="20201110 08:37:47.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.144" endtime="20201110 08:37:47.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.168" endtime="20201110 08:37:47.171"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.176" endtime="20201110 08:37:47.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.172" endtime="20201110 08:37:47.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.163" endtime="20201110 08:37:47.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.629" endtime="20201110 08:37:47.202"></status>
</kw>
<msg timestamp="20201110 08:37:47.203" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.223" endtime="20201110 08:37:47.237"></status>
</kw>
<msg timestamp="20201110 08:37:47.238" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.220" endtime="20201110 08:37:47.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.245" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.241" endtime="20201110 08:37:47.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.247" endtime="20201110 08:37:47.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.212" endtime="20201110 08:37:47.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.207" endtime="20201110 08:37:47.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.271" endtime="20201110 08:37:47.616"></status>
</kw>
<msg timestamp="20201110 08:37:47.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037951556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.268" endtime="20201110 08:37:47.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037941875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037951556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.626" endtime="20201110 08:37:47.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.645" endtime="20201110 08:37:47.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.260" endtime="20201110 08:37:47.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.255" endtime="20201110 08:37:47.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.663" level="INFO">${RESULT} = [{'time': 0.037951556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.680999999997497e-06, 'source_diff': 9.680999999997497e-06}, {'time': 0.037966667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.653" endtime="20201110 08:37:47.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:47.699" level="INFO">${OVERHEAD} = {'source_diff': [9.680999999997497e-06, 9.709000000003576e-06, 8.874999999998467e-06, 9.165999999997954e-06, 9.194999999996567e-06, 9.402999999998107e-06, 8.986000000002492e-06, 9.014000000001632e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:47.667" endtime="20201110 08:37:47.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.712" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:47.710" endtime="20201110 08:37:47.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.717" level="INFO">VALUE: [9.680999999997497e-06, 9.709000000003576e-06, 8.874999999998467e-06, 9.165999999997954e-06, 9.194999999996567e-06, 9.402999999998107e-06, 8.986000000002492e-06, 9.014000000001632e-06, 9.527999999994763e-06, 8.792000000000522e-06, 9.694999999997067e-06, 9.360999999999398e-06, 8.987000000001966e-06, 9.193999999997093e-06, 9.346999999999828e-06, 9.401999999998634e-06, 8.888999999998037e-06, 9.028000000001202e-06, 9.346999999999828e-06, 9.514000000002132e-06, 9.208999999996137e-06, 9.528000000001702e-06, 9.458999999996387e-06, 9.333000000000258e-06, 9.541999999994333e-06, 9.693999999997593e-06, 9.707999999997163e-06, 8.86200000000531e-06, 9.360999999999398e-06, 9.179999999997523e-06, 9.166999999997427e-06, 8.875000000005406e-06, 9.361000000006336e-06, 9.179999999997523e-06, 9.638999999998787e-06, 9.193999999997093e-06, 9.028000000001202e-06, 9.52699999999529e-06, 8.888000000005503e-06, 9.000000000002062e-06, 9.069000000000438e-06, 9.028000000001202e-06, 8.957999999996413e-06, 9.514000000002132e-06, 9.542000000001272e-06, 9.541000000001798e-06, 9.374999999998967e-06, 9.360999999999398e-06, 9.028000000001202e-06, 9.513000000002658e-06]</msg>
<status status="PASS" starttime="20201110 08:37:47.714" endtime="20201110 08:37:47.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.702" endtime="20201110 08:37:47.721"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.728" endtime="20201110 08:37:47.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.736" endtime="20201110 08:37:47.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.732" endtime="20201110 08:37:47.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.723" endtime="20201110 08:37:47.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.204" endtime="20201110 08:37:47.762"></status>
</kw>
<msg timestamp="20201110 08:37:47.763" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.782" endtime="20201110 08:37:47.794"></status>
</kw>
<msg timestamp="20201110 08:37:47.795" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.779" endtime="20201110 08:37:47.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.801" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.797" endtime="20201110 08:37:47.802"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.804" endtime="20201110 08:37:47.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.772" endtime="20201110 08:37:47.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.767" endtime="20201110 08:37:47.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.827" endtime="20201110 08:37:48.156"></status>
</kw>
<msg timestamp="20201110 08:37:48.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036497056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036506569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.823" endtime="20201110 08:37:48.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036497056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036506569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.165" endtime="20201110 08:37:48.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.183" endtime="20201110 08:37:48.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.816" endtime="20201110 08:37:48.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.812" endtime="20201110 08:37:48.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.201" level="INFO">${RESULT} = [{'time': 0.036506569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513000000002658e-06, 'source_diff': 9.513000000002658e-06}, {'time': 0.036520722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.192" endtime="20201110 08:37:48.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:48.232" level="INFO">${OVERHEAD} = {'source_diff': [9.513000000002658e-06, 9.693999999997593e-06, 9.028000000001202e-06, 9.055000000000868e-06, 8.846999999999328e-06, 9.499999999995623e-06, 9.624999999999218e-06, 9.320000000000161e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:48.203" endtime="20201110 08:37:48.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.242" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:48.240" endtime="20201110 08:37:48.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.248" level="INFO">VALUE: [9.513000000002658e-06, 9.693999999997593e-06, 9.028000000001202e-06, 9.055000000000868e-06, 8.846999999999328e-06, 9.499999999995623e-06, 9.624999999999218e-06, 9.320000000000161e-06, 9.028000000001202e-06, 9.528000000001702e-06, 9.679999999998024e-06, 9.167000000004366e-06, 9.527999999994763e-06, 9.346999999999828e-06, 9.333000000000258e-06, 9.583000000000508e-06, 9.167000000004366e-06, 9.027000000001728e-06, 9.027000000001728e-06, 9.179999999997523e-06, 9.694999999997067e-06, 9.707999999997163e-06, 9.360999999999398e-06, 8.86200000000531e-06, 9.695000000004006e-06, 9.179999999997523e-06, 9.347999999999301e-06, 9.014000000001632e-06, 9.737000000002716e-06, 9.042000000000772e-06, 9.514000000002132e-06, 9.195000000003506e-06, 9.360999999999398e-06, 9.374999999998967e-06, 9.028000000001202e-06, 9.695000000004006e-06, 9.360999999999398e-06, 9.500000000002562e-06, 9.014000000001632e-06, 9.179999999997523e-06, 8.847000000006267e-06, 8.846999999999328e-06, 9.527999999994763e-06, 9.360999999999398e-06, 9.360999999999398e-06, 9.707999999997163e-06, 9.042000000000772e-06, 9.527999999994763e-06, 9.444000000004282e-06, 9.542000000001272e-06]</msg>
<status status="PASS" starttime="20201110 08:37:48.245" endtime="20201110 08:37:48.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.234" endtime="20201110 08:37:48.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.257" endtime="20201110 08:37:48.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.265" endtime="20201110 08:37:48.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.261" endtime="20201110 08:37:48.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.253" endtime="20201110 08:37:48.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.764" endtime="20201110 08:37:48.291"></status>
</kw>
<msg timestamp="20201110 08:37:48.291" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.311" endtime="20201110 08:37:48.323"></status>
</kw>
<msg timestamp="20201110 08:37:48.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.307" endtime="20201110 08:37:48.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.330" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.326" endtime="20201110 08:37:48.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.332" endtime="20201110 08:37:48.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.300" endtime="20201110 08:37:48.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.296" endtime="20201110 08:37:48.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.357" endtime="20201110 08:37:48.689"></status>
</kw>
<msg timestamp="20201110 08:37:48.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036325931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036334972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.354" endtime="20201110 08:37:48.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036325931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036334972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.699" endtime="20201110 08:37:48.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.717" endtime="20201110 08:37:48.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.346" endtime="20201110 08:37:48.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.340" endtime="20201110 08:37:48.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.734" level="INFO">${RESULT} = [{'time': 0.036334972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.041000000001298e-06, 'source_diff': 9.041000000001298e-06}, {'time': 0.036353917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.725" endtime="20201110 08:37:48.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:48.766" level="INFO">${OVERHEAD} = {'source_diff': [9.041000000001298e-06, 9.694999999997067e-06, 9.208999999996137e-06, 9.195000000003506e-06, 9.193999999997093e-06, 9.695000000004006e-06, 9.041000000001298e-06, 9.860999999999898e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:48.736" endtime="20201110 08:37:48.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:48.775" endtime="20201110 08:37:48.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.784" level="INFO">VALUE: [9.041000000001298e-06, 9.694999999997067e-06, 9.208999999996137e-06, 9.195000000003506e-06, 9.193999999997093e-06, 9.695000000004006e-06, 9.041000000001298e-06, 9.860999999999898e-06, 9.195000000003506e-06, 9.124999999998717e-06, 8.860999999998898e-06, 9.180999999996997e-06, 9.680000000004962e-06, 9.527000000002228e-06, 9.514000000002132e-06, 9.514000000002132e-06, 9.193999999997093e-06, 9.541000000001798e-06, 9.707999999997163e-06, 9.528000000001702e-06, 9.528000000001702e-06, 9.166999999997427e-06, 9.388999999998537e-06, 9.52699999999529e-06, 9.680999999997497e-06, 9.514000000002132e-06, 9.694999999997067e-06, 9.360999999999398e-06, 9.346999999999828e-06, 9.193999999997093e-06, 9.165999999997954e-06, 8.846999999999328e-06, 9.179999999997523e-06, 8.847999999998801e-06, 9.541000000001798e-06, 8.874999999998467e-06, 9.680999999997497e-06, 8.930999999996747e-06, 9.707999999997163e-06, 9.208999999996137e-06, 9.195000000003506e-06, 9.514000000002132e-06, 9.528000000001702e-06, 9.028000000001202e-06, 9.346999999999828e-06, 9.014000000001632e-06, 9.028000000001202e-06, 9.528000000001702e-06, 9.360999999999398e-06, 9.680999999997497e-06]</msg>
<status status="PASS" starttime="20201110 08:37:48.780" endtime="20201110 08:37:48.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.768" endtime="20201110 08:37:48.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.800" endtime="20201110 08:37:48.804"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.812" endtime="20201110 08:37:48.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.806" endtime="20201110 08:37:48.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.794" endtime="20201110 08:37:48.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.292" endtime="20201110 08:37:48.839"></status>
</kw>
<msg timestamp="20201110 08:37:48.839" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.860" endtime="20201110 08:37:48.874"></status>
</kw>
<msg timestamp="20201110 08:37:48.875" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.857" endtime="20201110 08:37:48.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.881" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.877" endtime="20201110 08:37:48.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.884" endtime="20201110 08:37:48.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.848" endtime="20201110 08:37:48.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.844" endtime="20201110 08:37:48.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.907" endtime="20201110 08:37:49.258"></status>
</kw>
<msg timestamp="20201110 08:37:49.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038598819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.904" endtime="20201110 08:37:49.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038598819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038608194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.267" endtime="20201110 08:37:49.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.286" endtime="20201110 08:37:49.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.896" endtime="20201110 08:37:49.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.892" endtime="20201110 08:37:49.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.303" level="INFO">${RESULT} = [{'time': 0.038608194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038624111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.294" endtime="20201110 08:37:49.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:49.334" level="INFO">${OVERHEAD} = {'source_diff': [9.374999999998967e-06, 8.846999999999328e-06, 9.679999999998024e-06, 8.985999999995553e-06, 9.527000000002228e-06, 9.583999999999981e-06, 9.860999999999898e-06, 8.959000000002826e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:49.305" endtime="20201110 08:37:49.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.344" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:49.342" endtime="20201110 08:37:49.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.351" level="INFO">VALUE: [9.374999999998967e-06, 8.846999999999328e-06, 9.679999999998024e-06, 8.985999999995553e-06, 9.527000000002228e-06, 9.583999999999981e-06, 9.860999999999898e-06, 8.959000000002826e-06, 9.360999999999398e-06, 9.361000000006336e-06, 9.194000000004032e-06, 9.110999999999148e-06, 9.707999999997163e-06, 9.179999999997523e-06, 9.027000000001728e-06, 9.360999999999398e-06, 8.888999999998037e-06, 9.222999999995707e-06, 9.611999999999121e-06, 9.027999999994263e-06, 9.014000000001632e-06, 8.847000000006267e-06, 9.472000000003422e-06, 9.694999999997067e-06, 9.083000000000008e-06, 8.846999999999328e-06, 8.861999999998371e-06, 9.916999999998177e-06, 9.514000000002132e-06, 9.693999999997593e-06, 9.319000000000688e-06, 8.971999999995983e-06, 9.528000000001702e-06, 9.152999999997857e-06, 9.346999999999828e-06, 9.513999999995193e-06, 9.139000000005226e-06, 9.709000000003576e-06, 9.042000000000772e-06, 9.875000000006406e-06, 9.514000000002132e-06, 9.360999999999398e-06, 8.778000000000952e-06, 9.707999999997163e-06, 9.360999999999398e-06, 9.027000000001728e-06, 9.931000000004686e-06, 9.860999999999898e-06, 9.124999999998717e-06, 9.374999999998967e-06]</msg>
<status status="PASS" starttime="20201110 08:37:49.347" endtime="20201110 08:37:49.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.336" endtime="20201110 08:37:49.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.361" endtime="20201110 08:37:49.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.369" endtime="20201110 08:37:49.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.365" endtime="20201110 08:37:49.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.356" endtime="20201110 08:37:49.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.840" endtime="20201110 08:37:49.395"></status>
</kw>
<msg timestamp="20201110 08:37:49.395" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.415" endtime="20201110 08:37:49.429"></status>
</kw>
<msg timestamp="20201110 08:37:49.430" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.412" endtime="20201110 08:37:49.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.432" endtime="20201110 08:37:49.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.438" endtime="20201110 08:37:49.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.405" endtime="20201110 08:37:49.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.400" endtime="20201110 08:37:49.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.463" endtime="20201110 08:37:49.807"></status>
</kw>
<msg timestamp="20201110 08:37:49.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036831653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036841333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.460" endtime="20201110 08:37:49.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036831653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036841333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.817" endtime="20201110 08:37:49.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.836" endtime="20201110 08:37:49.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.452" endtime="20201110 08:37:49.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.446" endtime="20201110 08:37:49.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.854" level="INFO">${RESULT} = [{'time': 0.036841333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.679999999998024e-06, 'source_diff': 9.679999999998024e-06}, {'time': 0.036856458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.844" endtime="20201110 08:37:49.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:49.885" level="INFO">${OVERHEAD} = {'source_diff': [9.679999999998024e-06, 9.722000000003672e-06, 9.374999999998967e-06, 9.013999999994693e-06, 9.638999999998787e-06, 9.527000000002228e-06, 9.514000000002132e-06, 9.014000000001632e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:49.857" endtime="20201110 08:37:49.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.895" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:49.893" endtime="20201110 08:37:49.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.901" level="INFO">VALUE: [9.679999999998024e-06, 9.722000000003672e-06, 9.374999999998967e-06, 9.013999999994693e-06, 9.638999999998787e-06, 9.527000000002228e-06, 9.514000000002132e-06, 9.014000000001632e-06, 8.84800000000574e-06, 9.527000000002228e-06, 9.527000000002228e-06, 9.485999999996053e-06, 9.431000000004186e-06, 9.028000000001202e-06, 9.208999999996137e-06, 9.374999999998967e-06, 9.180999999996997e-06, 9.027000000001728e-06, 9.513000000002658e-06, 9.027000000001728e-06, 9.000000000002062e-06, 9.681000000004436e-06, 9.180999999996997e-06, 9.347999999999301e-06, 9.013999999994693e-06, 9.528000000001702e-06, 9.250000000002312e-06, 9.388999999998537e-06, 9.360999999999398e-06, 9.167000000004366e-06, 9.694000000004532e-06, 9.709000000003576e-06, 8.833999999999231e-06, 9.040999999994359e-06, 8.833000000006697e-06, 9.208000000003602e-06, 9.528000000001702e-06, 8.973000000002396e-06, 9.180999999996997e-06, 8.860999999998898e-06, 9.346999999999828e-06, 9.194000000004032e-06, 9.360999999999398e-06, 8.846999999999328e-06, 9.193999999997093e-06, 9.069999999999911e-06, 9.041000000001298e-06, 9.680999999997497e-06, 9.666000000005393e-06, 9.028000000001202e-06]</msg>
<status status="PASS" starttime="20201110 08:37:49.898" endtime="20201110 08:37:49.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.887" endtime="20201110 08:37:49.904"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.910" endtime="20201110 08:37:49.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.920" endtime="20201110 08:37:49.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.916" endtime="20201110 08:37:49.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.906" endtime="20201110 08:37:49.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.397" endtime="20201110 08:37:49.946"></status>
</kw>
<msg timestamp="20201110 08:37:49.947" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.967" endtime="20201110 08:37:49.979"></status>
</kw>
<msg timestamp="20201110 08:37:49.980" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.963" endtime="20201110 08:37:49.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.986" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.982" endtime="20201110 08:37:49.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.989" endtime="20201110 08:37:49.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.956" endtime="20201110 08:37:49.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.951" endtime="20201110 08:37:49.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.012" endtime="20201110 08:37:50.373"></status>
</kw>
<msg timestamp="20201110 08:37:50.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037234292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037243819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.009" endtime="20201110 08:37:50.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037234292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037243819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.382" endtime="20201110 08:37:50.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.401" endtime="20201110 08:37:50.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.002" endtime="20201110 08:37:50.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.997" endtime="20201110 08:37:50.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.418" level="INFO">${RESULT} = [{'time': 0.037243819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}, {'time': 0.037259972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:50.409" endtime="20201110 08:37:50.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:50.448" level="INFO">${OVERHEAD} = {'source_diff': [9.52699999999529e-06, 9.180000000004462e-06, 9.528000000001702e-06, 9.054999999993929e-06, 9.693999999997593e-06, 9.527999999994763e-06, 9.514000000002132e-06, 9.333000000000258e-06, ...</msg>
<status status="PASS" starttime="20201110 08:37:50.420" endtime="20201110 08:37:50.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.458" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:50.456" endtime="20201110 08:37:50.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.463" level="INFO">VALUE: [9.52699999999529e-06, 9.180000000004462e-06, 9.528000000001702e-06, 9.054999999993929e-06, 9.693999999997593e-06, 9.527999999994763e-06, 9.514000000002132e-06, 9.333000000000258e-06, 9.694000000004532e-06, 9.028000000001202e-06, 9.860999999999898e-06, 9.541000000001798e-06, 9.360999999999398e-06, 9.542000000001272e-06, 9.014000000001632e-06, 9.347999999999301e-06, 9.014000000001632e-06, 9.693999999997593e-06, 8.860999999998898e-06, 9.860999999999898e-06, 9.194000000004032e-06, 9.360999999999398e-06, 9.513000000002658e-06, 9.443999999997343e-06, 9.360999999999398e-06, 9.695000000004006e-06, 9.193999999997093e-06, 9.360999999999398e-06, 9.180999999996997e-06, 9.542000000001272e-06, 9.750000000002812e-06, 9.181000000003936e-06, 9.541000000001798e-06, 9.694000000004532e-06, 9.042000000000772e-06, 9.195000000003506e-06, 9.693999999997593e-06, 9.694000000004532e-06, 9.528000000001702e-06, 9.374999999998967e-06, 8.860999999998898e-06, 9.514000000002132e-06, 9.195000000003506e-06, 9.527000000002228e-06, 9.195000000003506e-06, 9.527999999994763e-06, 8.875000000005406e-06, 9.028000000001202e-06, 8.860999999998898e-06, 9.181000000003936e-06]</msg>
<status status="PASS" starttime="20201110 08:37:50.460" endtime="20201110 08:37:50.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.450" endtime="20201110 08:37:50.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.473" endtime="20201110 08:37:50.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.481" endtime="20201110 08:37:50.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.477" endtime="20201110 08:37:50.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.468" endtime="20201110 08:37:50.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.948" endtime="20201110 08:37:50.508"></status>
</kw>
<msg timestamp="20201110 08:37:50.508" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.528" endtime="20201110 08:37:50.539"></status>
</kw>
<msg timestamp="20201110 08:37:50.541" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.524" endtime="20201110 08:37:50.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.543" endtime="20201110 08:37:50.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.549" endtime="20201110 08:37:50.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.517" endtime="20201110 08:37:50.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.513" endtime="20201110 08:37:50.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.572" endtime="20201110 08:37:50.906"></status>
</kw>
<msg timestamp="20201110 08:37:50.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036238889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036248208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.568" endtime="20201110 08:37:50.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036238889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036248208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.915" endtime="20201110 08:37:50.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.934" endtime="20201110 08:37:50.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.561" endtime="20201110 08:37:50.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.557" endtime="20201110 08:37:50.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.951" level="INFO">${RESULT} = [{'time': 0.036248208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.318999999993749e-06, 'source_diff': 9.318999999993749e-06}, {'time': 0.036265292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:50.942" endtime="20201110 08:37:50.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:50.983" level="INFO">${OVERHEAD} = {'source_diff': [9.318999999993749e-06, 9.708999999996637e-06, 9.541000000001798e-06, 8.819000000000188e-06, 9.375000000005906e-06, 9.180999999996997e-06, 9.013000000002158e-06, 9.681000000004436e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:50.953" endtime="20201110 08:37:50.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.993" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:50.991" endtime="20201110 08:37:50.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.998" level="INFO">VALUE: [9.318999999993749e-06, 9.708999999996637e-06, 9.541000000001798e-06, 8.819000000000188e-06, 9.375000000005906e-06, 9.180999999996997e-06, 9.013000000002158e-06, 9.681000000004436e-06, 8.861000000005836e-06, 9.360999999999398e-06, 8.972000000002922e-06, 8.860999999998898e-06, 9.527000000002228e-06, 9.193999999997093e-06, 9.374999999998967e-06, 9.693999999997593e-06, 9.042000000000772e-06, 9.52699999999529e-06, 9.652999999998357e-06, 8.805000000000618e-06, 9.181000000003936e-06, 9.513999999995193e-06, 9.51299999999572e-06, 9.500000000002562e-06, 9.360999999999398e-06, 9.333000000000258e-06, 9.514000000002132e-06, 9.042000000000772e-06, 9.528000000001702e-06, 9.014000000001632e-06, 9.388999999998537e-06, 9.014000000001632e-06, 8.846999999999328e-06, 9.693999999997593e-06, 9.346999999999828e-06, 9.347999999999301e-06, 8.860999999998898e-06, 9.360999999999398e-06, 9.708999999996637e-06, 9.499999999995623e-06, 9.679999999998024e-06, 8.792000000000522e-06, 9.528000000001702e-06, 9.028000000001202e-06, 9.347999999999301e-06, 9.236000000002742e-06, 9.694999999997067e-06, 9.333000000000258e-06, 9.388999999998537e-06, 9.028000000001202e-06]</msg>
<status status="PASS" starttime="20201110 08:37:50.995" endtime="20201110 08:37:51.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.985" endtime="20201110 08:37:51.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.008" endtime="20201110 08:37:51.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.016" endtime="20201110 08:37:51.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.012" endtime="20201110 08:37:51.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.004" endtime="20201110 08:37:51.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.509" endtime="20201110 08:37:51.042"></status>
</kw>
<msg timestamp="20201110 08:37:51.042" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.063" endtime="20201110 08:37:51.075"></status>
</kw>
<msg timestamp="20201110 08:37:51.076" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.060" endtime="20201110 08:37:51.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.083" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.078" endtime="20201110 08:37:51.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.085" endtime="20201110 08:37:51.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.053" endtime="20201110 08:37:51.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.047" endtime="20201110 08:37:51.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.108" endtime="20201110 08:37:51.442"></status>
</kw>
<msg timestamp="20201110 08:37:51.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037960292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037969306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.105" endtime="20201110 08:37:51.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037960292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037969306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.451" endtime="20201110 08:37:51.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.469" endtime="20201110 08:37:51.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.097" endtime="20201110 08:37:51.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.093" endtime="20201110 08:37:51.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.486" level="INFO">${RESULT} = [{'time': 0.037969306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.037986389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:51.478" endtime="20201110 08:37:51.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:51.517" level="INFO">${OVERHEAD} = {'source_diff': [9.014000000001632e-06, 8.860999999998898e-06, 8.846999999999328e-06, 9.180000000004462e-06, 9.528000000001702e-06, 9.361999999998871e-06, 8.860999999998898e-06, 9.528000000001702e-06,...</msg>
<status status="PASS" starttime="20201110 08:37:51.488" endtime="20201110 08:37:51.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.527" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:51.525" endtime="20201110 08:37:51.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.532" level="INFO">VALUE: [9.014000000001632e-06, 8.860999999998898e-06, 8.846999999999328e-06, 9.180000000004462e-06, 9.528000000001702e-06, 9.361999999998871e-06, 8.860999999998898e-06, 9.528000000001702e-06, 9.693999999997593e-06, 9.346999999999828e-06, 8.860999999998898e-06, 9.013999999994693e-06, 9.374999999998967e-06, 8.860999999998898e-06, 9.194000000004032e-06, 9.014000000001632e-06, 9.681000000004436e-06, 9.514000000002132e-06, 9.014000000001632e-06, 8.860999999998898e-06, 9.707999999997163e-06, 9.305000000001118e-06, 9.514000000002132e-06, 8.846999999999328e-06, 9.138999999998287e-06, 8.846999999999328e-06, 8.986000000002492e-06, 9.542000000001272e-06, 9.681000000004436e-06, 9.028000000001202e-06, 8.860999999998898e-06, 9.042000000000772e-06, 9.360999999999398e-06, 9.361999999998871e-06, 9.207999999996663e-06, 9.401999999998634e-06, 8.875000000005406e-06, 9.222000000003172e-06, 9.195000000003506e-06, 9.500000000002562e-06, 9.014000000001632e-06, 9.167000000004366e-06, 9.527000000002228e-06, 9.860999999999898e-06, 9.027999999994263e-06, 8.847999999998801e-06, 9.180999999996997e-06, 9.361999999998871e-06, 9.513999999995193e-06, 9.179999999997523e-06]</msg>
<status status="PASS" starttime="20201110 08:37:51.529" endtime="20201110 08:37:51.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.519" endtime="20201110 08:37:51.535"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.542" endtime="20201110 08:37:51.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.550" endtime="20201110 08:37:51.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.545" endtime="20201110 08:37:51.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.537" endtime="20201110 08:37:51.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.043" endtime="20201110 08:37:51.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.575" endtime="20201110 08:37:51.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.585" endtime="20201110 08:37:51.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.581" endtime="20201110 08:37:51.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.578" endtime="20201110 08:37:51.609"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:40.446" endtime="20201110 08:37:51.610" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.626" endtime="20201110 08:37:51.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.623" endtime="20201110 08:37:51.649"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.684" endtime="20201110 08:37:51.699"></status>
</kw>
<msg timestamp="20201110 08:37:51.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.680" endtime="20201110 08:37:51.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.702" endtime="20201110 08:37:51.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.713" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:51.708" endtime="20201110 08:37:51.713"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:51.673" endtime="20201110 08:37:51.715"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:51.667" endtime="20201110 08:37:51.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.664" endtime="20201110 08:37:51.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:51.730" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:51.724" endtime="20201110 08:37:51.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.719" endtime="20201110 08:37:51.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.662" endtime="20201110 08:37:51.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.661" endtime="20201110 08:37:51.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.735" endtime="20201110 08:37:51.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.655" endtime="20201110 08:37:51.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.651" endtime="20201110 08:37:51.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.620" endtime="20201110 08:37:51.744"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.772" endtime="20201110 08:37:51.797"></status>
</kw>
<msg timestamp="20201110 08:37:51.798" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.768" endtime="20201110 08:37:51.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.804" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.800" endtime="20201110 08:37:51.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.807" endtime="20201110 08:37:51.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.759" endtime="20201110 08:37:51.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.751" endtime="20201110 08:37:51.813"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.818" endtime="20201110 08:37:51.822"></status>
</kw>
<msg timestamp="20201110 08:37:51.824" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:51.815" endtime="20201110 08:37:51.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.833" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:51.831" endtime="20201110 08:37:51.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.838" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:51.836" endtime="20201110 08:37:51.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.825" endtime="20201110 08:37:51.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.851" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:51.847" endtime="20201110 08:37:51.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.856" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:51.854" endtime="20201110 08:37:51.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.841" endtime="20201110 08:37:51.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.879" endtime="20201110 08:37:52.232"></status>
</kw>
<msg timestamp="20201110 08:37:52.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138771153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138793722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.875" endtime="20201110 08:37:52.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.138771153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.138793722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.242" endtime="20201110 08:37:52.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.261" endtime="20201110 08:37:52.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.867" endtime="20201110 08:37:52.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.863" endtime="20201110 08:37:52.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.278" level="INFO">${RESULT} = [{'time': 0.138793722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.256900000000006e-05, 'source_diff': 2.256900000000006e-05}, {'time': 0.138827681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.269" endtime="20201110 08:37:52.278"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:52.308" level="INFO">${OVERHEAD} = {'source_diff': [2.256900000000006e-05, 2.384800000002074e-05, 2.4514000000003255e-05, 2.4026999999982035e-05, 2.470900000001164e-05, 2.4527999999995886e-05, 2.4695000000019007e-05, 2.3804999999987864...</msg>
<status status="PASS" starttime="20201110 08:37:52.280" endtime="20201110 08:37:52.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.319" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:52.317" endtime="20201110 08:37:52.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.325" level="INFO">VALUE: [2.256900000000006e-05, 2.384800000002074e-05, 2.4514000000003255e-05, 2.4026999999982035e-05, 2.470900000001164e-05, 2.4527999999995886e-05, 2.4695000000019007e-05, 2.3804999999987864e-05, 2.519500000000563e-05, 2.4208000000025542e-05, 2.470900000001164e-05, 2.434700000000789e-05, 2.4694999999991252e-05, 2.5542000000017273e-05, 2.4207999999997787e-05, 2.4679999999999147e-05, 2.434700000000789e-05, 2.4541999999988517e-05, 2.387500000000653e-05, 2.440300000000617e-05, 2.417999999998477e-05, 2.4375000000020908e-05, 2.391700000001218e-05, 2.419500000000463e-05, 2.4348000000007364e-05, 2.4166999999991612e-05, 2.38610000000139e-05, 2.4194000000005156e-05, 2.422299999998989e-05, 2.4042000000001895e-05, 2.5028000000010264e-05, 2.4207999999997787e-05, 2.3846999999993512e-05, 2.402700000000979e-05, 2.4388999999985783e-05, 2.4514000000003255e-05, 2.502700000001079e-05, 2.4527999999995886e-05, 2.4028000000009264e-05, 2.397199999998323e-05, 2.3999999999996247e-05, 2.438900000001354e-05, 2.519500000000563e-05, 2.419500000000463e-05, 2.38610000000139e-05, 2.5222000000019174e-05, 2.5541999999989518e-05, 2.423599999998305e-05, 2.412500000001372e-05, 2.4055999999994526e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.322" endtime="20201110 08:37:52.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.310" endtime="20201110 08:37:52.328"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.334" endtime="20201110 08:37:52.337"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.342" endtime="20201110 08:37:52.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.338" endtime="20201110 08:37:52.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.330" endtime="20201110 08:37:52.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.746" endtime="20201110 08:37:52.367"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:51.614" endtime="20201110 08:37:52.369" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.386" endtime="20201110 08:37:52.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.382" endtime="20201110 08:37:52.410"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.452" endtime="20201110 08:37:52.470"></status>
</kw>
<msg timestamp="20201110 08:37:52.472" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.448" endtime="20201110 08:37:52.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.478" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.474" endtime="20201110 08:37:52.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.485" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:52.480" endtime="20201110 08:37:52.485"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:52.439" endtime="20201110 08:37:52.487"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:52.430" endtime="20201110 08:37:52.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.427" endtime="20201110 08:37:52.489"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:52.497" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:52.496" endtime="20201110 08:37:52.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.491" endtime="20201110 08:37:52.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.425" endtime="20201110 08:37:52.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.422" endtime="20201110 08:37:52.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.501" endtime="20201110 08:37:52.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.417" endtime="20201110 08:37:52.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.412" endtime="20201110 08:37:52.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.379" endtime="20201110 08:37:52.507"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.530" endtime="20201110 08:37:52.611"></status>
</kw>
<msg timestamp="20201110 08:37:52.612" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.527" endtime="20201110 08:37:52.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.618" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.614" endtime="20201110 08:37:52.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.620" endtime="20201110 08:37:52.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.520" endtime="20201110 08:37:52.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.513" endtime="20201110 08:37:52.627"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.632" endtime="20201110 08:37:52.636"></status>
</kw>
<msg timestamp="20201110 08:37:52.637" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:52.629" endtime="20201110 08:37:52.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.647" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:52.645" endtime="20201110 08:37:52.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.651" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:52.649" endtime="20201110 08:37:52.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.639" endtime="20201110 08:37:52.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.663" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:52.661" endtime="20201110 08:37:52.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.667" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:52.665" endtime="20201110 08:37:52.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.655" endtime="20201110 08:37:52.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.688" endtime="20201110 08:37:53.048"></status>
</kw>
<msg timestamp="20201110 08:37:53.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137555556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137580375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.683" endtime="20201110 08:37:53.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.137555556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.137580375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.058" endtime="20201110 08:37:53.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.076" endtime="20201110 08:37:53.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.675" endtime="20201110 08:37:53.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.671" endtime="20201110 08:37:53.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.109" level="INFO">${RESULT} = [{'time': 0.137580375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.481900000000925e-05, 'source_diff': 2.481900000000925e-05}, {'time': 0.138799861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.092" endtime="20201110 08:37:53.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:53.142" level="INFO">${OVERHEAD} = {'source_diff': [2.481900000000925e-05, 3.368000000000815e-05, 3.443100000000143e-05, 3.408399999998979e-05, 3.391599999999495e-05, 3.381900000001825e-05, 3.4290999999991856e-05, 3.4096999999982947e-0...</msg>
<status status="PASS" starttime="20201110 08:37:53.112" endtime="20201110 08:37:53.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.156" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:53.154" endtime="20201110 08:37:53.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.161" level="INFO">VALUE: [2.481900000000925e-05, 3.368000000000815e-05, 3.443100000000143e-05, 3.408399999998979e-05, 3.391599999999495e-05, 3.381900000001825e-05, 3.4290999999991856e-05, 3.4096999999982947e-05, 3.392999999998758e-05, 3.40970000000107e-05, 3.409799999998242e-05, 3.363900000000197e-05, 3.42779999999987e-05, 3.438799999999631e-05, 3.4124999999995964e-05, 3.408300000001807e-05, 3.3930999999987055e-05, 3.424999999998568e-05, 3.40970000000107e-05, 3.443100000000143e-05, 3.449999999999287e-05, 3.377799999998432e-05, 3.39580000000006e-05, 3.393000000001534e-05, 3.3972999999992703e-05, 3.3764000000019445e-05, 3.373600000000643e-05, 3.397199999999323e-05, 3.4596999999997324e-05, 3.443000000000196e-05, 3.445800000001498e-05, 3.406999999999716e-05, 3.374999999999906e-05, 3.361100000001671e-05, 3.42779999999987e-05, 3.392999999998758e-05, 3.40970000000107e-05, 3.391700000002218e-05, 3.40970000000107e-05, 3.426400000000607e-05, 3.3610999999988955e-05, 3.370900000002064e-05, 3.4444999999994064e-05, 3.424999999998568e-05, 3.376399999999169e-05, 3.35139999999845e-05, 3.444399999999459e-05, 3.394500000000744e-05, 3.42779999999987e-05, 3.42779999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.158" endtime="20201110 08:37:53.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.146" endtime="20201110 08:37:53.164"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.170" endtime="20201110 08:37:53.173"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.178" endtime="20201110 08:37:53.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.174" endtime="20201110 08:37:53.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.166" endtime="20201110 08:37:53.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.509" endtime="20201110 08:37:53.204"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:52.373" endtime="20201110 08:37:53.206" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.223" endtime="20201110 08:37:53.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.219" endtime="20201110 08:37:53.246"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.283" endtime="20201110 08:37:53.298"></status>
</kw>
<msg timestamp="20201110 08:37:53.299" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.276" endtime="20201110 08:37:53.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.306" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.302" endtime="20201110 08:37:53.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.313" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:53.308" endtime="20201110 08:37:53.313"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:53.268" endtime="20201110 08:37:53.315"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:53.262" endtime="20201110 08:37:53.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.259" endtime="20201110 08:37:53.317"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:53.325" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:53.324" endtime="20201110 08:37:53.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.319" endtime="20201110 08:37:53.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.257" endtime="20201110 08:37:53.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.256" endtime="20201110 08:37:53.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.329" endtime="20201110 08:37:53.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.252" endtime="20201110 08:37:53.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.247" endtime="20201110 08:37:53.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.216" endtime="20201110 08:37:53.336"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.360" endtime="20201110 08:37:53.554"></status>
</kw>
<msg timestamp="20201110 08:37:53.556" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.356" endtime="20201110 08:37:53.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.562" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.558" endtime="20201110 08:37:53.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.564" endtime="20201110 08:37:53.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.349" endtime="20201110 08:37:53.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.343" endtime="20201110 08:37:53.571"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.575" endtime="20201110 08:37:53.580"></status>
</kw>
<msg timestamp="20201110 08:37:53.581" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:53.573" endtime="20201110 08:37:53.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.591" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:53.589" endtime="20201110 08:37:53.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.596" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:53.594" endtime="20201110 08:37:53.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.583" endtime="20201110 08:37:53.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.607" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:53.605" endtime="20201110 08:37:53.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.612" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:53.610" endtime="20201110 08:37:53.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.599" endtime="20201110 08:37:53.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.631" endtime="20201110 08:37:53.977"></status>
</kw>
<msg timestamp="20201110 08:37:53.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131403194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131440194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.627" endtime="20201110 08:37:53.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131403194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131440194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.987" endtime="20201110 08:37:54.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.005" endtime="20201110 08:37:54.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.620" endtime="20201110 08:37:54.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.616" endtime="20201110 08:37:54.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.023" level="INFO">${RESULT} = [{'time': 0.131440194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.700000000000925e-05, 'source_diff': 3.700000000000925e-05}, {'time': 0.134902458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.014" endtime="20201110 08:37:54.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:54.056" level="INFO">${OVERHEAD} = {'source_diff': [3.700000000000925e-05, 5.463899999999522e-05, 5.463899999999522e-05, 5.4917000000015426e-05, 5.4471999999999854e-05, 5.4485999999992485e-05, 5.4485999999992485e-05, 5.493100000000806e...</msg>
<status status="PASS" starttime="20201110 08:37:54.026" endtime="20201110 08:37:54.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.068" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:54.066" endtime="20201110 08:37:54.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.074" level="INFO">VALUE: [3.700000000000925e-05, 5.463899999999522e-05, 5.463899999999522e-05, 5.4917000000015426e-05, 5.4471999999999854e-05, 5.4485999999992485e-05, 5.4485999999992485e-05, 5.493100000000806e-05, 5.4709000000013885e-05, 5.480600000001834e-05, 5.4971999999986476e-05, 5.498600000000686e-05, 5.445799999997947e-05, 5.431999999999659e-05, 5.495899999999332e-05, 5.462500000000259e-05, 5.5125000000016966e-05, 5.448699999999196e-05, 5.429200000001133e-05, 5.427699999999147e-05, 5.480499999999111e-05, 5.462500000000259e-05, 5.51390000000096e-05, 5.465200000001613e-05, 5.4125000000015966e-05, 5.430599999997621e-05, 5.462500000000259e-05, 5.511099999999658e-05, 5.4429999999994205e-05, 5.4971999999986476e-05, 5.413899999998084e-05, 5.4181000000014246e-05, 5.416699999999386e-05, 5.430600000000396e-05, 5.480499999999111e-05, 5.480599999996283e-05, 5.480500000004662e-05, 5.430499999997673e-05, 5.4957999999993845e-05, 5.430600000000396e-05, 5.5041000000033424e-05, 5.41390000000086e-05, 5.42909999999841e-05, 5.458299999999694e-05, 5.413799999998137e-05, 5.429200000001133e-05, 5.4957999999993845e-05, 5.429200000001133e-05, 5.444400000004235e-05, 5.511099999999658e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.070" endtime="20201110 08:37:54.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.058" endtime="20201110 08:37:54.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.083" endtime="20201110 08:37:54.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.091" endtime="20201110 08:37:54.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.086" endtime="20201110 08:37:54.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.078" endtime="20201110 08:37:54.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.338" endtime="20201110 08:37:54.117"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:53.210" endtime="20201110 08:37:54.118" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.139" endtime="20201110 08:37:54.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.134" endtime="20201110 08:37:54.178"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.215" endtime="20201110 08:37:54.230"></status>
</kw>
<msg timestamp="20201110 08:37:54.231" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.212" endtime="20201110 08:37:54.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.238" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.234" endtime="20201110 08:37:54.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.246" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:54.240" endtime="20201110 08:37:54.246"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:54.204" endtime="20201110 08:37:54.248"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:54.198" endtime="20201110 08:37:54.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.196" endtime="20201110 08:37:54.251"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:54.258" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:54.257" endtime="20201110 08:37:54.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.252" endtime="20201110 08:37:54.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.194" endtime="20201110 08:37:54.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.192" endtime="20201110 08:37:54.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.262" endtime="20201110 08:37:54.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.187" endtime="20201110 08:37:54.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.181" endtime="20201110 08:37:54.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.129" endtime="20201110 08:37:54.270"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.291" endtime="20201110 08:37:54.313"></status>
</kw>
<msg timestamp="20201110 08:37:54.315" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.288" endtime="20201110 08:37:54.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.321" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.317" endtime="20201110 08:37:54.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.323" endtime="20201110 08:37:54.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.281" endtime="20201110 08:37:54.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.275" endtime="20201110 08:37:54.330"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.334" endtime="20201110 08:37:54.339"></status>
</kw>
<msg timestamp="20201110 08:37:54.340" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:54.331" endtime="20201110 08:37:54.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.364" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:54.359" endtime="20201110 08:37:54.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.374" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:54.369" endtime="20201110 08:37:54.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.343" endtime="20201110 08:37:54.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.402" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:54.394" endtime="20201110 08:37:54.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.411" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:54.407" endtime="20201110 08:37:54.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.381" endtime="20201110 08:37:54.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.447" endtime="20201110 08:37:54.795"></status>
</kw>
<msg timestamp="20201110 08:37:54.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142631903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142654819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.443" endtime="20201110 08:37:54.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.142631903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.142654819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.807" endtime="20201110 08:37:54.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.829" endtime="20201110 08:37:54.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.428" endtime="20201110 08:37:54.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.418" endtime="20201110 08:37:54.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.852" level="INFO">${RESULT} = [{'time': 0.142654819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.291599999998395e-05, 'source_diff': 2.291599999998395e-05}, {'time': 0.142708917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.843" endtime="20201110 08:37:54.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:54.883" level="INFO">${OVERHEAD} = {'source_diff': [2.291599999998395e-05, 2.3402999999977414e-05, 2.3124999999984963e-05, 2.333300000001426e-05, 2.319500000000363e-05, 2.312500000001272e-05, 2.30969999999997e-05, 2.3791999999994706e-0...</msg>
<status status="PASS" starttime="20201110 08:37:54.854" endtime="20201110 08:37:54.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.895" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:54.892" endtime="20201110 08:37:54.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.900" level="INFO">VALUE: [2.291599999998395e-05, 2.3402999999977414e-05, 2.3124999999984963e-05, 2.333300000001426e-05, 2.319500000000363e-05, 2.312500000001272e-05, 2.30969999999997e-05, 2.3791999999994706e-05, 2.3596999999986323e-05, 2.380500000001562e-05, 2.3791999999994706e-05, 2.2930000000004336e-05, 2.3097000000027457e-05, 2.329100000000861e-05, 2.3778000000002075e-05, 2.319500000000363e-05, 2.345900000000345e-05, 2.3290999999980855e-05, 2.383300000000088e-05, 2.3290999999980855e-05, 2.2930000000004336e-05, 2.3610999999978954e-05, 2.3110999999992332e-05, 2.362499999999934e-05, 2.30969999999997e-05, 2.3805999999987337e-05, 2.329100000000861e-05, 2.3804999999987864e-05, 2.362499999999934e-05, 2.3679999999998147e-05, 2.362499999999934e-05, 2.338900000001254e-05, 2.3444999999983063e-05, 2.3791999999994706e-05, 2.37770000000026e-05, 2.362499999999934e-05, 2.3151999999998507e-05, 2.3778000000002075e-05, 2.312500000001272e-05, 2.295899999998907e-05, 2.393100000000481e-05, 2.359700000001408e-05, 2.312500000001272e-05, 2.3110999999992332e-05, 2.3943999999997967e-05, 2.3278000000015453e-05, 2.3110999999992332e-05, 2.3458000000003976e-05, 2.3486000000016993e-05, 2.308300000000707e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.897" endtime="20201110 08:37:54.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.885" endtime="20201110 08:37:54.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.909" endtime="20201110 08:37:54.911"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.917" endtime="20201110 08:37:54.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.913" endtime="20201110 08:37:54.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.904" endtime="20201110 08:37:54.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.271" endtime="20201110 08:37:54.942"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:54.123" endtime="20201110 08:37:54.944" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.964" endtime="20201110 08:37:54.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.960" endtime="20201110 08:37:54.988"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.021" endtime="20201110 08:37:55.039"></status>
</kw>
<msg timestamp="20201110 08:37:55.041" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.018" endtime="20201110 08:37:55.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.047" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.043" endtime="20201110 08:37:55.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.054" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:55.049" endtime="20201110 08:37:55.054"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:55.011" endtime="20201110 08:37:55.056"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:55.004" endtime="20201110 08:37:55.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.002" endtime="20201110 08:37:55.059"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:55.067" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:55.065" endtime="20201110 08:37:55.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.061" endtime="20201110 08:37:55.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.000" endtime="20201110 08:37:55.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.998" endtime="20201110 08:37:55.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.071" endtime="20201110 08:37:55.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.994" endtime="20201110 08:37:55.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.989" endtime="20201110 08:37:55.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.954" endtime="20201110 08:37:55.078"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.100" endtime="20201110 08:37:55.183"></status>
</kw>
<msg timestamp="20201110 08:37:55.184" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.097" endtime="20201110 08:37:55.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.190" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.186" endtime="20201110 08:37:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.193" endtime="20201110 08:37:55.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.089" endtime="20201110 08:37:55.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.084" endtime="20201110 08:37:55.199"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.204" endtime="20201110 08:37:55.210"></status>
</kw>
<msg timestamp="20201110 08:37:55.211" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:55.201" endtime="20201110 08:37:55.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.223" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:55.220" endtime="20201110 08:37:55.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.229" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:55.226" endtime="20201110 08:37:55.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.213" endtime="20201110 08:37:55.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.245" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:55.242" endtime="20201110 08:37:55.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.250" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:55.247" endtime="20201110 08:37:55.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.233" endtime="20201110 08:37:55.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.271" endtime="20201110 08:37:55.620"></status>
</kw>
<msg timestamp="20201110 08:37:55.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129212181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129243847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.267" endtime="20201110 08:37:55.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129212181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129243847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.629" endtime="20201110 08:37:55.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.649" endtime="20201110 08:37:55.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.260" endtime="20201110 08:37:55.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.255" endtime="20201110 08:37:55.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.666" level="INFO">${RESULT} = [{'time': 0.129243847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.166599999998576e-05, 'source_diff': 3.166599999998576e-05}, {'time': 0.130484111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:55.657" endtime="20201110 08:37:55.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:55.697" level="INFO">${OVERHEAD} = {'source_diff': [3.166599999998576e-05, 3.166700000001299e-05, 3.117999999999177e-05, 3.183300000000888e-05, 3.200000000000425e-05, 3.1348000000014364e-05, 3.134799999998661e-05, 3.149999999998987e-05...</msg>
<status status="PASS" starttime="20201110 08:37:55.668" endtime="20201110 08:37:55.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.708" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:55.706" endtime="20201110 08:37:55.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.714" level="INFO">VALUE: [3.166599999998576e-05, 3.166700000001299e-05, 3.117999999999177e-05, 3.183300000000888e-05, 3.200000000000425e-05, 3.1348000000014364e-05, 3.134799999998661e-05, 3.149999999998987e-05, 3.115200000000651e-05, 3.116699999999861e-05, 3.1666999999985235e-05, 3.101399999999588e-05, 3.198599999998386e-05, 3.167999999997839e-05, 3.101399999999588e-05, 3.168100000000562e-05, 3.116699999999861e-05, 3.181999999998797e-05, 3.117999999999177e-05, 3.1332999999994504e-05, 3.166599999998576e-05, 3.1152999999978226e-05, 3.1332999999994504e-05, 3.152800000000289e-05, 3.187500000001453e-05, 3.133399999999398e-05, 3.1332999999994504e-05, 3.111100000000033e-05, 3.148599999999724e-05, 3.166599999998576e-05, 3.184700000000151e-05, 3.132000000000135e-05, 3.168100000000562e-05, 3.1820000000015725e-05, 3.200000000000425e-05, 3.108399999998679e-05, 3.184700000000151e-05, 3.152800000000289e-05, 3.097199999999023e-05, 3.116699999999861e-05, 3.1514000000010256e-05, 3.1680999999977866e-05, 3.1500000000017625e-05, 3.149999999998987e-05, 3.147300000000408e-05, 3.183300000000888e-05, 3.100000000000325e-05, 3.1514000000010256e-05, 3.1332999999994504e-05, 3.136100000000752e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.710" endtime="20201110 08:37:55.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.699" endtime="20201110 08:37:55.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.723" endtime="20201110 08:37:55.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.731" endtime="20201110 08:37:55.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.726" endtime="20201110 08:37:55.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.718" endtime="20201110 08:37:55.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.079" endtime="20201110 08:37:55.756"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:54.948" endtime="20201110 08:37:55.758" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.775" endtime="20201110 08:37:55.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.771" endtime="20201110 08:37:55.798"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.831" endtime="20201110 08:37:55.853"></status>
</kw>
<msg timestamp="20201110 08:37:55.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.828" endtime="20201110 08:37:55.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.862" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.857" endtime="20201110 08:37:55.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.870" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:55.865" endtime="20201110 08:37:55.871"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:55.821" endtime="20201110 08:37:55.874"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:55.814" endtime="20201110 08:37:55.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.812" endtime="20201110 08:37:55.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:55.886" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:55.885" endtime="20201110 08:37:55.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.879" endtime="20201110 08:37:55.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.810" endtime="20201110 08:37:55.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.808" endtime="20201110 08:37:55.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.891" endtime="20201110 08:37:55.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.804" endtime="20201110 08:37:55.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.800" endtime="20201110 08:37:55.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.768" endtime="20201110 08:37:55.900"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.924" endtime="20201110 08:37:56.121"></status>
</kw>
<msg timestamp="20201110 08:37:56.122" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.921" endtime="20201110 08:37:56.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.128" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.124" endtime="20201110 08:37:56.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.130" endtime="20201110 08:37:56.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.914" endtime="20201110 08:37:56.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.907" endtime="20201110 08:37:56.137"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.142" endtime="20201110 08:37:56.146"></status>
</kw>
<msg timestamp="20201110 08:37:56.147" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:56.139" endtime="20201110 08:37:56.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.157" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:56.155" endtime="20201110 08:37:56.158"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.163" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:56.160" endtime="20201110 08:37:56.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.149" endtime="20201110 08:37:56.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.177" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:56.174" endtime="20201110 08:37:56.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.183" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:56.180" endtime="20201110 08:37:56.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.167" endtime="20201110 08:37:56.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.206" endtime="20201110 08:37:56.554"></status>
</kw>
<msg timestamp="20201110 08:37:56.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143897597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143938444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.202" endtime="20201110 08:37:56.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143897597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.143938444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.565" endtime="20201110 08:37:56.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.587" endtime="20201110 08:37:56.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.193" endtime="20201110 08:37:56.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.187" endtime="20201110 08:37:56.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.605" level="INFO">${RESULT} = [{'time': 0.143938444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0847000000010514e-05, 'source_diff': 4.0847000000010514e-05}, {'time': 0.147423778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.596" endtime="20201110 08:37:56.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:56.636" level="INFO">${OVERHEAD} = {'source_diff': [4.0847000000010514e-05, 4.015300000001498e-05, 3.999999999998449e-05, 4.0319000000010874e-05, 4.01939999999934e-05, 4.05139999999915e-05, 4.068100000001462e-05, 4.052699999998466e-05,...</msg>
<status status="PASS" starttime="20201110 08:37:56.607" endtime="20201110 08:37:56.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.663" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:56.658" endtime="20201110 08:37:56.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.672" level="INFO">VALUE: [4.0847000000010514e-05, 4.015300000001498e-05, 3.999999999998449e-05, 4.0319000000010874e-05, 4.01939999999934e-05, 4.05139999999915e-05, 4.068100000001462e-05, 4.052699999998466e-05, 4.084699999998276e-05, 4.0028000000025266e-05, 4.0861000000003145e-05, 4.0861000000003145e-05, 4.067999999998739e-05, 4.054199999997676e-05, 4.001400000000488e-05, 4.101299999997865e-05, 4.052799999998413e-05, 4.088899999998841e-05, 4.049999999999887e-05, 4.052800000001189e-05, 4.0181000000000244e-05, 4.087500000002353e-05, 4.052799999998413e-05, 4.034799999999561e-05, 4.054099999997729e-05, 4.0861000000003145e-05, 4.024999999999168e-05, 4.000000000001225e-05, 4.056900000001806e-05, 4.0042000000017897e-05, 4.0861000000003145e-05, 4.026400000001207e-05, 4.069399999995227e-05, 4.03749999999814e-05, 4.05139999999915e-05, 4.090200000000932e-05, 3.997199999999923e-05, 4.0541000000005045e-05, 4.05139999999915e-05, 4.052799999998413e-05, 4.087500000005129e-05, 4.01939999999934e-05, 4.077699999999185e-05, 4.018000000000077e-05, 4.0026999999998036e-05, 4.0874999999995776e-05, 4.086199999997486e-05, 4.0555999999969394e-05, 3.998599999999186e-05, 4.079099999998448e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.667" endtime="20201110 08:37:56.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.639" endtime="20201110 08:37:56.676"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.685" endtime="20201110 08:37:56.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.698" endtime="20201110 08:37:56.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.692" endtime="20201110 08:37:56.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.678" endtime="20201110 08:37:56.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.902" endtime="20201110 08:37:56.733"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:55.762" endtime="20201110 08:37:56.734" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:24.488" endtime="20201110 08:37:56.754"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.921" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:56.939" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:58.960" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:56.917" endtime="20201110 08:37:58.961"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.966" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:37:58.963" endtime="20201110 08:37:58.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.914" endtime="20201110 08:37:58.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.973" endtime="20201110 08:37:59.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.970" endtime="20201110 08:37:59.331"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.376" endtime="20201110 08:37:59.391"></status>
</kw>
<msg timestamp="20201110 08:37:59.393" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.372" endtime="20201110 08:37:59.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.399" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.395" endtime="20201110 08:37:59.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.406" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:59.401" endtime="20201110 08:37:59.407"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:59.366" endtime="20201110 08:37:59.408"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:59.360" endtime="20201110 08:37:59.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.343" endtime="20201110 08:37:59.411"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:59.419" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:59.417" endtime="20201110 08:37:59.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.413" endtime="20201110 08:37:59.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.341" endtime="20201110 08:37:59.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.339" endtime="20201110 08:37:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.423" endtime="20201110 08:37:59.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.336" endtime="20201110 08:37:59.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.429" endtime="20201110 08:37:59.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.332" endtime="20201110 08:37:59.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.912" endtime="20201110 08:37:59.435"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.451" endtime="20201110 08:37:59.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.447" endtime="20201110 08:37:59.475"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.508" endtime="20201110 08:37:59.524"></status>
</kw>
<msg timestamp="20201110 08:37:59.525" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.505" endtime="20201110 08:37:59.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.532" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.528" endtime="20201110 08:37:59.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.539" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:59.535" endtime="20201110 08:37:59.540"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:59.497" endtime="20201110 08:37:59.541"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:59.491" endtime="20201110 08:37:59.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.488" endtime="20201110 08:37:59.544"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:59.552" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:59.551" endtime="20201110 08:37:59.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.546" endtime="20201110 08:37:59.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.487" endtime="20201110 08:37:59.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.485" endtime="20201110 08:37:59.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.556" endtime="20201110 08:37:59.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.481" endtime="20201110 08:37:59.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.476" endtime="20201110 08:37:59.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.442" endtime="20201110 08:37:59.563"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.588" endtime="20201110 08:37:59.605"></status>
</kw>
<msg timestamp="20201110 08:37:59.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.584" endtime="20201110 08:37:59.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.608" endtime="20201110 08:37:59.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.615" endtime="20201110 08:37:59.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.577" endtime="20201110 08:37:59.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.571" endtime="20201110 08:37:59.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.640" endtime="20201110 08:38:00.018"></status>
</kw>
<msg timestamp="20201110 08:38:00.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128020097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.637" endtime="20201110 08:38:00.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.127980597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.128020097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.028" endtime="20201110 08:38:00.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.047" endtime="20201110 08:38:00.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.627" endtime="20201110 08:38:00.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.623" endtime="20201110 08:38:00.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.065" level="INFO">${RESULT} = [{'time': 0.128020097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.949999999999787e-05, 'source_diff': 3.949999999999787e-05}, {'time': 0.128093208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:00.056" endtime="20201110 08:38:00.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.106" level="INFO">${ACCURACY} = {'source_diff': [3.949999999999787e-05, 4.0485999999978484e-05, 3.884699999998076e-05, 3.8847000000008514e-05, 3.9612000000022185e-05, 3.924999999999068e-05, 3.9597000000002325e-05, 3.980600000000334e...</msg>
<status status="PASS" starttime="20201110 08:38:00.067" endtime="20201110 08:38:00.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.120" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.117" endtime="20201110 08:38:00.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.128" level="INFO">VALUE: [3.949999999999787e-05, 4.0485999999978484e-05, 3.884699999998076e-05, 3.8847000000008514e-05, 3.9612000000022185e-05, 3.924999999999068e-05, 3.9597000000002325e-05, 3.980600000000334e-05, 3.954200000000352e-05, 3.917999999999977e-05, 3.870799999999841e-05, 3.916600000000714e-05, 3.9653000000000604e-05, 3.923599999999805e-05, 4.0138999999994596e-05, 4.041600000001533e-05, 3.9026999999997036e-05, 3.920900000001226e-05, 4.011200000000881e-05, 3.954200000000352e-05, 3.962499999998759e-05, 4.0610999999995956e-05, 4.047300000001308e-05, 3.9194999999991875e-05, 3.9639000000007973e-05, 3.9917000000000424e-05, 4.048600000000624e-05, 3.8847000000008514e-05, 4.0458999999992695e-05, 4.008399999999579e-05, 3.976399999999769e-05, 3.975000000000506e-05, 3.87770000000176e-05, 4.045800000002098e-05, 3.972199999999204e-05, 3.956900000001706e-05, 3.954199999997576e-05, 3.9653000000000604e-05, 3.8805000000002865e-05, 3.948600000000524e-05, 4.062499999998859e-05, 3.997199999999923e-05, 3.98339999999886e-05, 4.026400000001207e-05, 4.030499999999049e-05, 3.997199999999923e-05, 3.9639000000007973e-05, 4.023599999999905e-05, 3.977799999999032e-05, 3.9402999999993416e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.123" endtime="20201110 08:38:00.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.109" endtime="20201110 08:38:00.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.149" endtime="20201110 08:38:00.172"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.222" endtime="20201110 08:38:00.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.185" endtime="20201110 08:38:00.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.136" endtime="20201110 08:38:00.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.567" endtime="20201110 08:38:00.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.566" endtime="20201110 08:38:00.248"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.271" endtime="20201110 08:38:00.288"></status>
</kw>
<msg timestamp="20201110 08:38:00.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.268" endtime="20201110 08:38:00.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.292" endtime="20201110 08:38:00.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.298" endtime="20201110 08:38:00.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.261" endtime="20201110 08:38:00.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.255" endtime="20201110 08:38:00.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.321" endtime="20201110 08:38:00.666"></status>
</kw>
<msg timestamp="20201110 08:38:00.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040666403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.318" endtime="20201110 08:38:00.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040666403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.675" endtime="20201110 08:38:00.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.694" endtime="20201110 08:38:00.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.311" endtime="20201110 08:38:00.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.306" endtime="20201110 08:38:00.701"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.711" level="INFO">${RESULT} = [{'time': 0.040705236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8833000000002005e-05, 'source_diff': 3.8833000000002005e-05}, {'time': 0.040776375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:00.702" endtime="20201110 08:38:00.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.743" level="INFO">${ACCURACY} = {'source_diff': [3.8833000000002005e-05, 3.8874999999993776e-05, 3.9888999999994346e-05, 3.9375000000001215e-05, 4.047199999999973e-05, 3.924999999999762e-05, 3.9583000000002755e-05, 3.884699999999463...</msg>
<status status="PASS" starttime="20201110 08:38:00.713" endtime="20201110 08:38:00.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.754" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.751" endtime="20201110 08:38:00.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.759" level="INFO">VALUE: [3.8833000000002005e-05, 3.8874999999993776e-05, 3.9888999999994346e-05, 3.9375000000001215e-05, 4.047199999999973e-05, 3.924999999999762e-05, 3.9583000000002755e-05, 3.8846999999994636e-05, 3.9097000000001825e-05, 4.047199999999973e-05, 4.029199999999733e-05, 3.952799999999701e-05, 3.886200000000062e-05, 3.873599999999755e-05, 3.9833000000003005e-05, 3.9389000000000784e-05, 3.9444999999999064e-05, 3.8875000000000715e-05, 3.9389000000000784e-05, 3.919500000000575e-05, 3.892999999999952e-05, 3.955599999999615e-05, 4.0153000000001104e-05, 3.905599999999565e-05, 4.04859999999993e-05, 3.904200000000302e-05, 3.976399999999769e-05, 3.9375000000001215e-05, 3.900000000000431e-05, 3.920799999999891e-05, 3.925000000000456e-05, 3.869399999999884e-05, 3.9082999999995316e-05, 3.895799999999866e-05, 3.9625000000001465e-05, 3.945799999999916e-05, 3.982000000000291e-05, 3.999999999999837e-05, 4.0125000000001965e-05, 4.045800000000016e-05, 4.0319000000003935e-05, 3.995799999999966e-05, 4.0139000000001535e-05, 3.9194999999998814e-05, 4.047199999999973e-05, 3.869399999999884e-05, 3.998600000000574e-05, 3.954200000000352e-05, 3.8902999999999854e-05, 3.9667000000000174e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.756" endtime="20201110 08:38:00.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.745" endtime="20201110 08:38:00.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.768" endtime="20201110 08:38:00.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.777" endtime="20201110 08:38:00.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.772" endtime="20201110 08:38:00.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.764" endtime="20201110 08:38:00.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.251" endtime="20201110 08:38:00.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.249" endtime="20201110 08:38:00.802"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.825" endtime="20201110 08:38:00.841"></status>
</kw>
<msg timestamp="20201110 08:38:00.843" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.821" endtime="20201110 08:38:00.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.845" endtime="20201110 08:38:00.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.851" endtime="20201110 08:38:00.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.814" endtime="20201110 08:38:00.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.809" endtime="20201110 08:38:00.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.879" endtime="20201110 08:38:01.215"></status>
</kw>
<msg timestamp="20201110 08:38:01.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039798181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039838458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.875" endtime="20201110 08:38:01.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039798181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039838458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.225" endtime="20201110 08:38:01.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.243" endtime="20201110 08:38:01.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.865" endtime="20201110 08:38:01.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.859" endtime="20201110 08:38:01.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.263" level="INFO">${RESULT} = [{'time': 0.039838458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0276999999998286e-05, 'source_diff': 4.0276999999998286e-05}, {'time': 0.039910611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.254" endtime="20201110 08:38:01.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.293" level="INFO">${ACCURACY} = {'source_diff': [4.0276999999998286e-05, 4.0110999999995456e-05, 3.976400000000463e-05, 3.933400000000198e-05, 3.968000000000027e-05, 4.049999999999887e-05, 3.876400000000363e-05, 3.9569000000003185e-...</msg>
<status status="PASS" starttime="20201110 08:38:01.265" endtime="20201110 08:38:01.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.304" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.302" endtime="20201110 08:38:01.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.309" level="INFO">VALUE: [4.0276999999998286e-05, 4.0110999999995456e-05, 3.976400000000463e-05, 3.933400000000198e-05, 3.968000000000027e-05, 4.049999999999887e-05, 3.876400000000363e-05, 3.9569000000003185e-05, 3.870799999999841e-05, 4.0153000000001104e-05, 3.943000000000002e-05, 3.8861000000001145e-05, 3.8889000000000284e-05, 3.9653000000000604e-05, 3.924999999999762e-05, 3.9568999999996246e-05, 4.033400000000298e-05, 3.915200000000063e-05, 3.8889000000000284e-05, 3.9097000000001825e-05, 3.8902999999999854e-05, 3.9388999999993846e-05, 4.0361000000002645e-05, 3.98059999999964e-05, 3.9096999999994886e-05, 3.952799999999701e-05, 3.907000000000216e-05, 3.9639000000001035e-05, 3.922200000000542e-05, 3.870799999999841e-05, 3.9389000000000784e-05, 3.872199999999798e-05, 3.89580000000056e-05, 3.9374999999994276e-05, 4.04859999999993e-05, 3.869399999999884e-05, 3.9818999999996496e-05, 3.9166999999999674e-05, 3.9653000000000604e-05, 3.970799999999941e-05, 3.873599999999755e-05, 4.0611000000002895e-05, 3.9569000000003185e-05, 3.983400000000248e-05, 3.9375000000001215e-05, 3.926399999999719e-05, 3.9804999999996926e-05, 3.9069000000002685e-05, 4.029200000000427e-05, 3.8832999999995066e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.306" endtime="20201110 08:38:01.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.295" endtime="20201110 08:38:01.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.319" endtime="20201110 08:38:01.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.327" endtime="20201110 08:38:01.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.323" endtime="20201110 08:38:01.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.314" endtime="20201110 08:38:01.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.804" endtime="20201110 08:38:01.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.803" endtime="20201110 08:38:01.360"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.393" endtime="20201110 08:38:01.410"></status>
</kw>
<msg timestamp="20201110 08:38:01.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.390" endtime="20201110 08:38:01.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.413" endtime="20201110 08:38:01.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.419" endtime="20201110 08:38:01.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.382" endtime="20201110 08:38:01.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.372" endtime="20201110 08:38:01.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.442" endtime="20201110 08:38:01.785"></status>
</kw>
<msg timestamp="20201110 08:38:01.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057635694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057675292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.439" endtime="20201110 08:38:01.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057635694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057675292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.796" endtime="20201110 08:38:01.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.816" endtime="20201110 08:38:01.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.432" endtime="20201110 08:38:01.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.427" endtime="20201110 08:38:01.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.836" level="INFO">${RESULT} = [{'time': 0.057675292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.95980000000018e-05, 'source_diff': 3.95980000000018e-05}, {'time': 0.057746403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:01.827" endtime="20201110 08:38:01.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.866" level="INFO">${ACCURACY} = {'source_diff': [3.95980000000018e-05, 4.032000000000341e-05, 4.0110999999995456e-05, 3.923599999999805e-05, 3.979200000000377e-05, 4.0318999999996996e-05, 3.9569000000003185e-05, 4.050000000000581e-0...</msg>
<status status="PASS" starttime="20201110 08:38:01.838" endtime="20201110 08:38:01.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.877" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.875" endtime="20201110 08:38:01.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.883" level="INFO">VALUE: [3.95980000000018e-05, 4.032000000000341e-05, 4.0110999999995456e-05, 3.923599999999805e-05, 3.979200000000377e-05, 4.0318999999996996e-05, 3.9569000000003185e-05, 4.050000000000581e-05, 4.0138999999994596e-05, 4.0153000000001104e-05, 3.9222999999997954e-05, 3.997199999999923e-05, 3.9026999999997036e-05, 3.965200000000113e-05, 3.9805000000003865e-05, 4.0124999999995026e-05, 3.9653000000000604e-05, 3.9680999999999744e-05, 4.01660000000012e-05, 4.044400000000059e-05, 4.044400000000059e-05, 3.954200000000352e-05, 4.027799999999776e-05, 3.973599999999855e-05, 3.9597000000002325e-05, 3.9667000000000174e-05, 3.904200000000302e-05, 4.0430999999993555e-05, 3.8902999999999854e-05, 4.047200000000667e-05, 3.8694999999998314e-05, 3.934799999999461e-05, 4.0332999999996566e-05, 4.047199999999973e-05, 3.948600000000524e-05, 3.9346999999995136e-05, 3.904200000000302e-05, 3.873599999999755e-05, 4.044400000000059e-05, 3.874999999999712e-05, 3.9096999999994886e-05, 3.980600000000334e-05, 3.933400000000198e-05, 3.954199999999658e-05, 3.874999999999712e-05, 3.926399999999719e-05, 3.872199999999798e-05, 4.04859999999993e-05, 3.8875000000000715e-05, 4.03059999999969e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.880" endtime="20201110 08:38:01.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.868" endtime="20201110 08:38:01.886"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.892" endtime="20201110 08:38:01.895"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.900" endtime="20201110 08:38:01.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.896" endtime="20201110 08:38:01.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.887" endtime="20201110 08:38:01.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.363" endtime="20201110 08:38:01.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.361" endtime="20201110 08:38:01.930"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.961" endtime="20201110 08:38:01.977"></status>
</kw>
<msg timestamp="20201110 08:38:01.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.957" endtime="20201110 08:38:01.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.981" endtime="20201110 08:38:01.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.987" endtime="20201110 08:38:01.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.949" endtime="20201110 08:38:01.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.941" endtime="20201110 08:38:01.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.010" endtime="20201110 08:38:02.343"></status>
</kw>
<msg timestamp="20201110 08:38:02.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052346764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052385778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.007" endtime="20201110 08:38:02.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052346764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052385778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.352" endtime="20201110 08:38:02.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.371" endtime="20201110 08:38:02.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.000" endtime="20201110 08:38:02.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.995" endtime="20201110 08:38:02.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.389" level="INFO">${RESULT} = [{'time': 0.052385778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.901400000000388e-05, 'source_diff': 3.901400000000388e-05}, {'time': 0.052454903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.380" endtime="20201110 08:38:02.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.419" level="INFO">${ACCURACY} = {'source_diff': [3.901400000000388e-05, 3.999999999999837e-05, 3.97780000000042e-05, 3.9208999999998384e-05, 3.876400000000363e-05, 3.9555000000003615e-05, 4.044400000000059e-05, 4.045800000000016e-05...</msg>
<status status="PASS" starttime="20201110 08:38:02.391" endtime="20201110 08:38:02.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.431" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.429" endtime="20201110 08:38:02.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.436" level="INFO">VALUE: [3.901400000000388e-05, 3.999999999999837e-05, 3.97780000000042e-05, 3.9208999999998384e-05, 3.876400000000363e-05, 3.9555000000003615e-05, 4.044400000000059e-05, 4.045800000000016e-05, 4.045800000000016e-05, 4.045800000000016e-05, 3.997300000000564e-05, 3.9569000000003185e-05, 3.9194999999998814e-05, 4.057000000000366e-05, 3.9153000000000104e-05, 4.030600000000384e-05, 3.869500000000525e-05, 3.965200000000113e-05, 4.0139000000001535e-05, 3.9082999999995316e-05, 3.949999999999787e-05, 3.901399999999694e-05, 4.0139000000001535e-05, 3.9374999999994276e-05, 3.8916999999999424e-05, 4.0153000000001104e-05, 4.047199999999973e-05, 3.9375000000001215e-05, 3.9639000000001035e-05, 4.0458999999999634e-05, 4.0125000000001965e-05, 3.9054999999996176e-05, 3.922199999999848e-05, 3.999999999999837e-05, 3.952800000000395e-05, 3.993000000000052e-05, 3.920799999999891e-05, 3.867999999999927e-05, 3.957000000000266e-05, 4.0124999999995026e-05, 3.9639000000001035e-05, 3.940200000000088e-05, 3.979199999999683e-05, 3.997199999999923e-05, 4.04859999999993e-05, 3.995900000000607e-05, 4.032000000000341e-05, 4.017999999999383e-05, 3.923599999999805e-05, 3.9804999999996926e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.433" endtime="20201110 08:38:02.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.422" endtime="20201110 08:38:02.439"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.446" endtime="20201110 08:38:02.448"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.454" endtime="20201110 08:38:02.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.449" endtime="20201110 08:38:02.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.441" endtime="20201110 08:38:02.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.932" endtime="20201110 08:38:02.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.931" endtime="20201110 08:38:02.480"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.502" endtime="20201110 08:38:02.520"></status>
</kw>
<msg timestamp="20201110 08:38:02.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.499" endtime="20201110 08:38:02.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.524" endtime="20201110 08:38:02.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.530" endtime="20201110 08:38:02.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.492" endtime="20201110 08:38:02.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.486" endtime="20201110 08:38:02.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.553" endtime="20201110 08:38:02.893"></status>
</kw>
<msg timestamp="20201110 08:38:02.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039821347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039862014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.549" endtime="20201110 08:38:02.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039821347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039862014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.903" endtime="20201110 08:38:02.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.921" endtime="20201110 08:38:02.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.542" endtime="20201110 08:38:02.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.538" endtime="20201110 08:38:02.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.940" level="INFO">${RESULT} = [{'time': 0.039862014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0667000000001174e-05, 'source_diff': 4.0667000000001174e-05}, {'time': 0.039929083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:02.931" endtime="20201110 08:38:02.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.973" level="INFO">${ACCURACY} = {'source_diff': [4.0667000000001174e-05, 3.873599999999755e-05, 3.9818999999996496e-05, 3.875000000000406e-05, 3.9903000000000854e-05, 3.952800000000395e-05, 3.9568999999996246e-05, 3.9361000000001645...</msg>
<status status="PASS" starttime="20201110 08:38:02.942" endtime="20201110 08:38:02.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.984" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.982" endtime="20201110 08:38:02.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.989" level="INFO">VALUE: [4.0667000000001174e-05, 3.873599999999755e-05, 3.9818999999996496e-05, 3.875000000000406e-05, 3.9903000000000854e-05, 3.952800000000395e-05, 3.9568999999996246e-05, 3.9361000000001645e-05, 3.9667000000000174e-05, 3.9361000000001645e-05, 4.029200000000427e-05, 4.0166999999993735e-05, 3.9583000000002755e-05, 3.9068999999995746e-05, 3.9097000000001825e-05, 3.980600000000334e-05, 4.000000000000531e-05, 4.04859999999993e-05, 3.872300000000439e-05, 3.977799999999726e-05, 3.872300000000439e-05, 3.899999999999737e-05, 3.9625000000001465e-05, 3.9625000000001465e-05, 3.922199999999848e-05, 3.8861000000001145e-05, 3.976399999999769e-05, 4.045800000000016e-05, 4.058400000000323e-05, 3.940200000000088e-05, 3.9819000000003435e-05, 3.9680999999999744e-05, 3.869500000000525e-05, 3.936200000000112e-05, 3.995799999999966e-05, 4.0139000000001535e-05, 4.002799999999751e-05, 3.952799999999701e-05, 3.897199999999823e-05, 3.873600000000449e-05, 3.9875000000001715e-05, 3.9416999999999924e-05, 3.9583000000002755e-05, 4.045799999999322e-05, 4.027799999999776e-05, 3.8861000000001145e-05, 3.908400000000173e-05, 3.872199999999798e-05, 3.9055000000003115e-05, 4.0083000000003255e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.986" endtime="20201110 08:38:02.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.975" endtime="20201110 08:38:02.992"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.999" endtime="20201110 08:38:03.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.007" endtime="20201110 08:38:03.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.003" endtime="20201110 08:38:03.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.994" endtime="20201110 08:38:03.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.482" endtime="20201110 08:38:03.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.480" endtime="20201110 08:38:03.033"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.056" endtime="20201110 08:38:03.073"></status>
</kw>
<msg timestamp="20201110 08:38:03.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.053" endtime="20201110 08:38:03.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.076" endtime="20201110 08:38:03.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.082" endtime="20201110 08:38:03.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.045" endtime="20201110 08:38:03.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.040" endtime="20201110 08:38:03.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.106" endtime="20201110 08:38:03.453"></status>
</kw>
<msg timestamp="20201110 08:38:03.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040327764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.102" endtime="20201110 08:38:03.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040327764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040367819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.462" endtime="20201110 08:38:03.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.481" endtime="20201110 08:38:03.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.095" endtime="20201110 08:38:03.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.090" endtime="20201110 08:38:03.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.499" level="INFO">${RESULT} = [{'time': 0.040367819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0054999999997176e-05, 'source_diff': 4.0054999999997176e-05}, {'time': 0.040441028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:03.490" endtime="20201110 08:38:03.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.531" level="INFO">${ACCURACY} = {'source_diff': [4.0054999999997176e-05, 3.906999999999522e-05, 3.979200000000377e-05, 3.9625000000001465e-05, 3.8916999999999424e-05, 4.0403000000001354e-05, 3.98059999999964e-05, 3.902800000000345e-...</msg>
<status status="PASS" starttime="20201110 08:38:03.501" endtime="20201110 08:38:03.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.542" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.539" endtime="20201110 08:38:03.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.547" level="INFO">VALUE: [4.0054999999997176e-05, 3.906999999999522e-05, 3.979200000000377e-05, 3.9625000000001465e-05, 3.8916999999999424e-05, 4.0403000000001354e-05, 3.98059999999964e-05, 3.902800000000345e-05, 3.902799999999651e-05, 3.883400000000148e-05, 3.9639000000001035e-05, 3.9389000000000784e-05, 4.0319000000003935e-05, 4.023599999999905e-05, 3.9332999999995566e-05, 3.8916999999999424e-05, 4.004200000000402e-05, 3.976400000000463e-05, 3.9611000000001895e-05, 4.0096999999995886e-05, 4.0082999999996316e-05, 3.9639000000001035e-05, 3.9624999999994526e-05, 3.9054999999996176e-05, 3.8902999999999854e-05, 3.9403000000000354e-05, 3.9639000000001035e-05, 4.0527000000005475e-05, 3.901400000000388e-05, 3.9653000000000604e-05, 4.04859999999993e-05, 4.013800000000206e-05, 3.9568999999996246e-05, 4.045800000000016e-05, 3.969399999999984e-05, 3.995799999999966e-05, 3.920800000000585e-05, 3.9124999999994026e-05, 3.997200000000617e-05, 3.8916999999999424e-05, 4.0445000000000064e-05, 3.999999999999837e-05, 3.934800000000155e-05, 4.0276999999998286e-05, 3.9818999999996496e-05, 3.9416999999999924e-05, 4.0347000000003075e-05, 4.0290999999997856e-05, 3.902800000000345e-05, 3.9569000000003185e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.544" endtime="20201110 08:38:03.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.532" endtime="20201110 08:38:03.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.556" endtime="20201110 08:38:03.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.565" endtime="20201110 08:38:03.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.560" endtime="20201110 08:38:03.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.552" endtime="20201110 08:38:03.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.035" endtime="20201110 08:38:03.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.034" endtime="20201110 08:38:03.591"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.613" endtime="20201110 08:38:03.630"></status>
</kw>
<msg timestamp="20201110 08:38:03.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.610" endtime="20201110 08:38:03.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.634" endtime="20201110 08:38:03.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.640" endtime="20201110 08:38:03.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.603" endtime="20201110 08:38:03.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.597" endtime="20201110 08:38:03.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.663" endtime="20201110 08:38:03.999"></status>
</kw>
<msg timestamp="20201110 08:38:04.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040318667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040357556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.660" endtime="20201110 08:38:04.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040318667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040357556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.009" endtime="20201110 08:38:04.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.027" endtime="20201110 08:38:04.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.653" endtime="20201110 08:38:04.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.648" endtime="20201110 08:38:04.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.045" level="INFO">${RESULT} = [{'time': 0.040357556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8889000000000284e-05, 'source_diff': 3.8889000000000284e-05}, {'time': 0.040427736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:04.036" endtime="20201110 08:38:04.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.077" level="INFO">${ACCURACY} = {'source_diff': [3.8889000000000284e-05, 4.019400000000034e-05, 4.043000000000102e-05, 3.9139000000000534e-05, 4.03059999999969e-05, 3.907000000000216e-05, 3.9374999999994276e-05, 3.94859999999983e-05...</msg>
<status status="PASS" starttime="20201110 08:38:04.047" endtime="20201110 08:38:04.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.088" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.085" endtime="20201110 08:38:04.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.093" level="INFO">VALUE: [3.8889000000000284e-05, 4.019400000000034e-05, 4.043000000000102e-05, 3.9139000000000534e-05, 4.03059999999969e-05, 3.907000000000216e-05, 3.9374999999994276e-05, 3.94859999999983e-05, 4.0291000000004795e-05, 3.9083000000002255e-05, 3.954199999999658e-05, 3.8889000000000284e-05, 3.958399999999529e-05, 3.920799999999891e-05, 3.9375000000001215e-05, 3.895799999999866e-05, 3.9805000000003865e-05, 4.043000000000102e-05, 3.905600000000259e-05, 3.9653000000000604e-05, 3.979200000000377e-05, 3.955600000000309e-05, 3.940200000000088e-05, 3.891600000000689e-05, 3.9818999999996496e-05, 4.001400000000488e-05, 3.9611000000001895e-05, 3.958400000000223e-05, 3.929200000000327e-05, 3.9360999999994706e-05, 3.9541000000004045e-05, 3.9805000000003865e-05, 3.8902999999999854e-05, 3.9611000000001895e-05, 3.9653000000000604e-05, 3.8680999999998744e-05, 3.9846999999995636e-05, 3.874999999999712e-05, 3.957000000000266e-05, 3.961199999999443e-05, 3.917999999999977e-05, 3.874999999999712e-05, 3.997199999999923e-05, 3.920799999999891e-05, 4.0346999999996136e-05, 4.034799999999561e-05, 3.998700000000521e-05, 3.9403000000000354e-05, 3.923700000000446e-05, 3.9513000000004905e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.090" endtime="20201110 08:38:04.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.079" endtime="20201110 08:38:04.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.103" endtime="20201110 08:38:04.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.111" endtime="20201110 08:38:04.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.107" endtime="20201110 08:38:04.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.098" endtime="20201110 08:38:04.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.593" endtime="20201110 08:38:04.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.592" endtime="20201110 08:38:04.137"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.160" endtime="20201110 08:38:04.177"></status>
</kw>
<msg timestamp="20201110 08:38:04.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.156" endtime="20201110 08:38:04.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.180" endtime="20201110 08:38:04.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.186" endtime="20201110 08:38:04.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.149" endtime="20201110 08:38:04.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.143" endtime="20201110 08:38:04.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.210" endtime="20201110 08:38:04.565"></status>
</kw>
<msg timestamp="20201110 08:38:04.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040330458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040371056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.206" endtime="20201110 08:38:04.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040330458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040371056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.574" endtime="20201110 08:38:04.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.593" endtime="20201110 08:38:04.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.199" endtime="20201110 08:38:04.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.195" endtime="20201110 08:38:04.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.610" level="INFO">${RESULT} = [{'time': 0.040371056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.05980000000028e-05, 'source_diff': 4.05980000000028e-05}, {'time': 0.040439194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:04.601" endtime="20201110 08:38:04.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.642" level="INFO">${ACCURACY} = {'source_diff': [4.05980000000028e-05, 4.0610999999995956e-05, 3.904199999999608e-05, 3.9930999999999994e-05, 3.979199999999683e-05, 3.997199999999923e-05, 3.9790999999997356e-05, 3.999999999999837e-0...</msg>
<status status="PASS" starttime="20201110 08:38:04.612" endtime="20201110 08:38:04.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.653" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.651" endtime="20201110 08:38:04.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.659" level="INFO">VALUE: [4.05980000000028e-05, 4.0610999999995956e-05, 3.904199999999608e-05, 3.9930999999999994e-05, 3.979199999999683e-05, 3.997199999999923e-05, 3.9790999999997356e-05, 3.999999999999837e-05, 3.952799999999701e-05, 3.997199999999923e-05, 3.982000000000291e-05, 4.033400000000298e-05, 3.924999999999762e-05, 3.9639000000001035e-05, 3.870799999999841e-05, 3.873599999999755e-05, 4.055599999999715e-05, 3.956999999999572e-05, 3.9568999999996246e-05, 3.9403000000000354e-05, 3.9139000000000534e-05, 3.872200000000492e-05, 3.9860999999995206e-05, 3.9667000000000174e-05, 4.026400000000513e-05, 3.99859999999988e-05, 4.001400000000488e-05, 4.0596999999996386e-05, 4.02780000000047e-05, 3.99859999999988e-05, 3.9610999999994956e-05, 3.926400000000413e-05, 4.0111000000002395e-05, 3.902800000000345e-05, 3.9416999999999924e-05, 3.9846999999995636e-05, 3.997199999999923e-05, 3.875000000000406e-05, 3.902800000000345e-05, 4.0139000000001535e-05, 4.030600000000384e-05, 4.0458999999999634e-05, 3.888800000000081e-05, 4.00980000000023e-05, 3.876400000000363e-05, 3.955599999999615e-05, 3.873599999999755e-05, 4.0360999999995706e-05, 4.0138999999994596e-05, 3.8666999999999174e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.656" endtime="20201110 08:38:04.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.644" endtime="20201110 08:38:04.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.668" endtime="20201110 08:38:04.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.676" endtime="20201110 08:38:04.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.672" endtime="20201110 08:38:04.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.664" endtime="20201110 08:38:04.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.139" endtime="20201110 08:38:04.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.138" endtime="20201110 08:38:04.702"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.725" endtime="20201110 08:38:04.744"></status>
</kw>
<msg timestamp="20201110 08:38:04.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.722" endtime="20201110 08:38:04.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.748" endtime="20201110 08:38:04.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.755" endtime="20201110 08:38:04.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.714" endtime="20201110 08:38:04.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.709" endtime="20201110 08:38:04.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.778" endtime="20201110 08:38:05.126"></status>
</kw>
<msg timestamp="20201110 08:38:05.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.775" endtime="20201110 08:38:05.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040067431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.135" endtime="20201110 08:38:05.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.154" endtime="20201110 08:38:05.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.768" endtime="20201110 08:38:05.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.763" endtime="20201110 08:38:05.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.171" level="INFO">${RESULT} = [{'time': 0.040067431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9194999999998814e-05, 'source_diff': 3.9194999999998814e-05}, {'time': 0.040135569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.162" endtime="20201110 08:38:05.171"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.202" level="INFO">${ACCURACY} = {'source_diff': [3.9194999999998814e-05, 3.968000000000027e-05, 3.8875000000000715e-05, 3.9389000000000784e-05, 3.873599999999755e-05, 3.995799999999966e-05, 3.9944999999999564e-05, 4.0639000000002035...</msg>
<status status="PASS" starttime="20201110 08:38:05.173" endtime="20201110 08:38:05.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.216" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.212" endtime="20201110 08:38:05.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.223" level="INFO">VALUE: [3.9194999999998814e-05, 3.968000000000027e-05, 3.8875000000000715e-05, 3.9389000000000784e-05, 3.873599999999755e-05, 3.995799999999966e-05, 3.9944999999999564e-05, 4.0639000000002035e-05, 4.01660000000012e-05, 3.9041000000003545e-05, 3.9041000000003545e-05, 3.9054999999996176e-05, 3.8916999999999424e-05, 3.9944999999999564e-05, 4.0139000000001535e-05, 3.8625000000000465e-05, 3.9653000000000604e-05, 4.0139000000001535e-05, 3.904199999999608e-05, 4.045800000000016e-05, 3.8666999999999174e-05, 3.9804999999996926e-05, 4.015200000000163e-05, 4.01660000000012e-05, 3.954199999999658e-05, 3.9388999999993846e-05, 3.869399999999884e-05, 4.0097000000002825e-05, 4.033399999999604e-05, 4.026399999999819e-05, 3.8861000000001145e-05, 3.951400000000438e-05, 3.9832999999996066e-05, 3.922199999999848e-05, 3.9110999999994456e-05, 3.963800000000156e-05, 3.979199999999683e-05, 4.0361000000002645e-05, 3.8666999999999174e-05, 3.919399999999934e-05, 3.925000000000456e-05, 4.033400000000298e-05, 3.9583000000002755e-05, 3.9597000000002325e-05, 4.0111000000002395e-05, 3.8847000000001575e-05, 4.0153000000001104e-05, 4.047199999999973e-05, 3.924999999999762e-05, 3.902799999999651e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.219" endtime="20201110 08:38:05.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.203" endtime="20201110 08:38:05.226"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.233" endtime="20201110 08:38:05.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.241" endtime="20201110 08:38:05.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.236" endtime="20201110 08:38:05.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.228" endtime="20201110 08:38:05.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.704" endtime="20201110 08:38:05.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.703" endtime="20201110 08:38:05.267"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.289" endtime="20201110 08:38:05.306"></status>
</kw>
<msg timestamp="20201110 08:38:05.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.286" endtime="20201110 08:38:05.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.310" endtime="20201110 08:38:05.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.316" endtime="20201110 08:38:05.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.279" endtime="20201110 08:38:05.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.273" endtime="20201110 08:38:05.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.340" endtime="20201110 08:38:05.737"></status>
</kw>
<msg timestamp="20201110 08:38:05.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040177806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.337" endtime="20201110 08:38:05.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040137389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040177806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.746" endtime="20201110 08:38:05.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.765" endtime="20201110 08:38:05.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.329" endtime="20201110 08:38:05.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.324" endtime="20201110 08:38:05.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.783" level="INFO">${RESULT} = [{'time': 0.040177806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0417000000000924e-05, 'source_diff': 4.0417000000000924e-05}, {'time': 0.040250944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:05.774" endtime="20201110 08:38:05.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.813" level="INFO">${ACCURACY} = {'source_diff': [4.0417000000000924e-05, 4.0040999999997606e-05, 4.0417000000000924e-05, 4.0417000000000924e-05, 4.0611000000002895e-05, 4.124999999999962e-05, 4.149999999999987e-05, 3.988900000000128...</msg>
<status status="PASS" starttime="20201110 08:38:05.785" endtime="20201110 08:38:05.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.824" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.822" endtime="20201110 08:38:05.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.830" level="INFO">VALUE: [4.0417000000000924e-05, 4.0040999999997606e-05, 4.0417000000000924e-05, 4.0417000000000924e-05, 4.0611000000002895e-05, 4.124999999999962e-05, 4.149999999999987e-05, 3.9889000000001285e-05, 4.0805000000004865e-05, 4.076399999999869e-05, 4.0597000000003325e-05, 4.002799999999751e-05, 3.974999999999812e-05, 4.0639000000002035e-05, 4.0375000000002215e-05, 4.0832999999997066e-05, 3.9653000000000604e-05, 4.076399999999869e-05, 4.034800000000255e-05, 4.0389000000001785e-05, 4.043000000000102e-05, 3.969399999999984e-05, 4.052799999999801e-05, 4.0610999999995956e-05, 4.158399999999729e-05, 4.1181000000001244e-05, 4.095800000000066e-05, 4.0917000000001424e-05, 4.1110999999996456e-05, 4.0875000000002715e-05, 4.127799999999876e-05, 4.1125000000002965e-05, 4.147200000000073e-05, 4.058399999999629e-05, 4.0458999999999634e-05, 4.115200000000263e-05, 3.969399999999984e-05, 4.152799999999901e-05, 4.002799999999751e-05, 4.084800000000305e-05, 4.06660000000017e-05, 4.029199999999733e-05, 4.152799999999901e-05, 4.0361000000002645e-05, 4.155599999999815e-05, 4.1304999999998426e-05, 4.0431000000000494e-05, 3.979200000000377e-05, 4.1276999999999286e-05, 4.06660000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.827" endtime="20201110 08:38:05.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.815" endtime="20201110 08:38:05.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.839" endtime="20201110 08:38:05.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.849" endtime="20201110 08:38:05.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.843" endtime="20201110 08:38:05.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.835" endtime="20201110 08:38:05.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.269" endtime="20201110 08:38:05.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.268" endtime="20201110 08:38:05.875"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.898" endtime="20201110 08:38:05.917"></status>
</kw>
<msg timestamp="20201110 08:38:05.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.895" endtime="20201110 08:38:05.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.920" endtime="20201110 08:38:05.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.927" endtime="20201110 08:38:05.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.888" endtime="20201110 08:38:05.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.882" endtime="20201110 08:38:05.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.950" endtime="20201110 08:38:06.296"></status>
</kw>
<msg timestamp="20201110 08:38:06.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040906264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040947056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.947" endtime="20201110 08:38:06.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040906264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040947056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.306" endtime="20201110 08:38:06.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.324" endtime="20201110 08:38:06.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.940" endtime="20201110 08:38:06.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.935" endtime="20201110 08:38:06.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.342" level="INFO">${RESULT} = [{'time': 0.040947056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.079200000000477e-05, 'source_diff': 4.079200000000477e-05}, {'time': 0.041020208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.333" endtime="20201110 08:38:06.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.373" level="INFO">${ACCURACY} = {'source_diff': [4.079200000000477e-05, 4.122200000000048e-05, 4.122200000000048e-05, 4.177799999999926e-05, 4.0917000000001424e-05, 4.2694999999995376e-05, 4.1040999999998606e-05, 4.155599999999815e-...</msg>
<status status="PASS" starttime="20201110 08:38:06.344" endtime="20201110 08:38:06.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.384" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.382" endtime="20201110 08:38:06.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.390" level="INFO">VALUE: [4.079200000000477e-05, 4.122200000000048e-05, 4.122200000000048e-05, 4.177799999999926e-05, 4.0917000000001424e-05, 4.2694999999995376e-05, 4.1040999999998606e-05, 4.155599999999815e-05, 4.181999999999797e-05, 4.163799999999662e-05, 4.1431000000001494e-05, 4.104200000000502e-05, 4.0945000000000564e-05, 4.225000000000062e-05, 4.151399999999944e-05, 4.123600000000005e-05, 4.2624999999997526e-05, 4.06660000000017e-05, 4.1068999999997746e-05, 4.200000000000037e-05, 4.201300000000047e-05, 4.248599999999436e-05, 4.1639000000003035e-05, 4.1389000000002785e-05, 4.070799999999347e-05, 4.0889000000002285e-05, 4.176399999999969e-05, 4.1346999999997136e-05, 4.1222999999999954e-05, 4.172200000000098e-05, 4.1554999999998676e-05, 4.2166999999995736e-05, 4.1861000000004145e-05, 4.177799999999926e-05, 4.076400000000563e-05, 4.1082999999997316e-05, 4.2139000000003535e-05, 4.1083000000004255e-05, 4.1389000000002785e-05, 4.074999999999912e-05, 4.152799999999901e-05, 4.2181000000002244e-05, 4.1388999999995846e-05, 4.0903000000001855e-05, 4.123600000000005e-05, 4.2360999999997706e-05, 4.24860000000013e-05, 4.1181000000001244e-05, 4.1610999999996956e-05, 4.076399999999869e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.387" endtime="20201110 08:38:06.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.375" endtime="20201110 08:38:06.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.400" endtime="20201110 08:38:06.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.408" endtime="20201110 08:38:06.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.404" endtime="20201110 08:38:06.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.395" endtime="20201110 08:38:06.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.877" endtime="20201110 08:38:06.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.876" endtime="20201110 08:38:06.435"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.462" endtime="20201110 08:38:06.479"></status>
</kw>
<msg timestamp="20201110 08:38:06.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.459" endtime="20201110 08:38:06.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.483" endtime="20201110 08:38:06.487"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.489" endtime="20201110 08:38:06.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.451" endtime="20201110 08:38:06.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.445" endtime="20201110 08:38:06.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.512" endtime="20201110 08:38:06.864"></status>
</kw>
<msg timestamp="20201110 08:38:06.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044591806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044635306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.509" endtime="20201110 08:38:06.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044591806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044635306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.874" endtime="20201110 08:38:06.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.893" endtime="20201110 08:38:06.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.502" endtime="20201110 08:38:06.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.497" endtime="20201110 08:38:06.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.910" level="INFO">${RESULT} = [{'time': 0.044635306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.350000000000187e-05, 'source_diff': 4.350000000000187e-05}, {'time': 0.044705444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.901" endtime="20201110 08:38:06.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.941" level="INFO">${ACCURACY} = {'source_diff': [4.350000000000187e-05, 4.1874999999996776e-05, 4.316599999999726e-05, 4.172200000000098e-05, 4.225000000000062e-05, 4.252800000000001e-05, 4.331999999999947e-05, 4.2959000000002134e-0...</msg>
<status status="PASS" starttime="20201110 08:38:06.912" endtime="20201110 08:38:06.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.953" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.950" endtime="20201110 08:38:06.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.958" level="INFO">VALUE: [4.350000000000187e-05, 4.1874999999996776e-05, 4.316599999999726e-05, 4.172200000000098e-05, 4.225000000000062e-05, 4.252800000000001e-05, 4.331999999999947e-05, 4.2959000000002134e-05, 4.2666999999996236e-05, 4.29860000000018e-05, 4.1917000000002425e-05, 4.220800000000191e-05, 4.2083000000005255e-05, 4.204199999999908e-05, 4.223600000000105e-05, 4.273600000000155e-05, 4.2541000000000107e-05, 4.2583000000005755e-05, 4.2111000000004395e-05, 4.1694999999994375e-05, 4.1695000000001314e-05, 4.350000000000187e-05, 4.350000000000187e-05, 4.1874999999996776e-05, 4.255599999999915e-05, 4.3472999999995265e-05, 4.2832999999999066e-05, 4.265199999999719e-05, 4.343000000000402e-05, 4.175000000000012e-05, 4.2596999999998386e-05, 4.2402999999996416e-05, 4.176300000000022e-05, 4.304199999999314e-05, 4.251300000000097e-05, 4.2389000000003785e-05, 4.2583000000005755e-05, 4.175000000000012e-05, 4.201399999999994e-05, 4.173600000000055e-05, 4.256999999999872e-05, 4.220800000000191e-05, 4.2652999999996666e-05, 4.172200000000098e-05, 4.2083000000005255e-05, 4.256999999999872e-05, 4.2833000000006005e-05, 4.299999999999443e-05, 4.2611000000004895e-05, 4.3167000000003675e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.955" endtime="20201110 08:38:06.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.943" endtime="20201110 08:38:06.962"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.968" endtime="20201110 08:38:06.971"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.977" endtime="20201110 08:38:06.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.972" endtime="20201110 08:38:07.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.964" endtime="20201110 08:38:07.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.438" endtime="20201110 08:38:07.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.436" endtime="20201110 08:38:07.003"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.028" endtime="20201110 08:38:07.048"></status>
</kw>
<msg timestamp="20201110 08:38:07.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.025" endtime="20201110 08:38:07.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.051" endtime="20201110 08:38:07.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.058" endtime="20201110 08:38:07.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.017" endtime="20201110 08:38:07.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.010" endtime="20201110 08:38:07.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.082" endtime="20201110 08:38:07.429"></status>
</kw>
<msg timestamp="20201110 08:38:07.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043389694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.078" endtime="20201110 08:38:07.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043346875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043389694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.439" endtime="20201110 08:38:07.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.458" endtime="20201110 08:38:07.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.071" endtime="20201110 08:38:07.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.066" endtime="20201110 08:38:07.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.475" level="INFO">${RESULT} = [{'time': 0.043389694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2818999999999496e-05, 'source_diff': 4.2818999999999496e-05}, {'time': 0.043465861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:07.466" endtime="20201110 08:38:07.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.507" level="INFO">${ACCURACY} = {'source_diff': [4.2818999999999496e-05, 4.368000000000427e-05, 4.306999999999922e-05, 4.2737000000001024e-05, 4.2874999999997776e-05, 4.323599999999511e-05, 4.322199999999554e-05, 4.38060000000004e-0...</msg>
<status status="PASS" starttime="20201110 08:38:07.478" endtime="20201110 08:38:07.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.518" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.515" endtime="20201110 08:38:07.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.524" level="INFO">VALUE: [4.2818999999999496e-05, 4.368000000000427e-05, 4.306999999999922e-05, 4.2737000000001024e-05, 4.2874999999997776e-05, 4.323599999999511e-05, 4.322199999999554e-05, 4.38060000000004e-05, 4.3638999999998096e-05, 4.2916999999996486e-05, 4.4430999999997556e-05, 4.2916999999996486e-05, 4.3402999999997416e-05, 4.3541000000001107e-05, 4.320800000000291e-05, 4.4124999999999026e-05, 4.4138999999998596e-05, 4.3082999999999316e-05, 4.2680999999995806e-05, 4.3209000000002384e-05, 4.397199999999629e-05, 4.431899999999406e-05, 4.3638999999998096e-05, 4.2875000000004715e-05, 4.4624999999999526e-05, 4.4209000000003384e-05, 4.355600000000015e-05, 4.3417000000003925e-05, 4.273599999999461e-05, 4.324999999999468e-05, 4.3681000000003745e-05, 4.4374999999999276e-05, 4.2639000000004035e-05, 4.275000000000112e-05, 4.3819000000000496e-05, 4.3360999999998706e-05, 4.2888999999997346e-05, 4.270800000000241e-05, 4.447199999999679e-05, 4.3958999999996196e-05, 4.450000000000287e-05, 4.323599999999511e-05, 4.4180999999997306e-05, 4.3082999999999316e-05, 4.3110999999998456e-05, 4.4166999999997736e-05, 4.3374999999998276e-05, 4.401400000000194e-05, 4.3638999999998096e-05, 4.3931000000003995e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.520" endtime="20201110 08:38:07.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.508" endtime="20201110 08:38:07.527"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.533" endtime="20201110 08:38:07.536"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.542" endtime="20201110 08:38:07.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.537" endtime="20201110 08:38:07.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.529" endtime="20201110 08:38:07.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.005" endtime="20201110 08:38:07.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.004" endtime="20201110 08:38:07.568"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.592" endtime="20201110 08:38:07.614"></status>
</kw>
<msg timestamp="20201110 08:38:07.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.588" endtime="20201110 08:38:07.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.617" endtime="20201110 08:38:07.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.624" endtime="20201110 08:38:07.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.581" endtime="20201110 08:38:07.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.575" endtime="20201110 08:38:07.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.647" endtime="20201110 08:38:08.006"></status>
</kw>
<msg timestamp="20201110 08:38:08.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041497625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.644" endtime="20201110 08:38:08.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041497625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041542181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.016" endtime="20201110 08:38:08.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.035" endtime="20201110 08:38:08.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.637" endtime="20201110 08:38:08.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.632" endtime="20201110 08:38:08.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.053" level="INFO">${RESULT} = [{'time': 0.041542181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.455599999999421e-05, 'source_diff': 4.455599999999421e-05}, {'time': 0.041616278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.043" endtime="20201110 08:38:08.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.084" level="INFO">${ACCURACY} = {'source_diff': [4.455599999999421e-05, 4.483400000000054e-05, 4.454200000000158e-05, 4.501299999999653e-05, 4.3860999999999206e-05, 4.4624999999999526e-05, 4.4388999999998846e-05, 4.423600000000305e-...</msg>
<status status="PASS" starttime="20201110 08:38:08.055" endtime="20201110 08:38:08.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.095" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.093" endtime="20201110 08:38:08.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.101" level="INFO">VALUE: [4.455599999999421e-05, 4.483400000000054e-05, 4.454200000000158e-05, 4.501299999999653e-05, 4.3860999999999206e-05, 4.4624999999999526e-05, 4.4388999999998846e-05, 4.423600000000305e-05, 4.41939999999974e-05, 4.450000000000287e-05, 4.529200000000233e-05, 4.3722999999995515e-05, 4.477800000000226e-05, 4.515199999999969e-05, 4.4652999999998666e-05, 4.3874999999998776e-05, 4.5181000000005245e-05, 4.3846999999999636e-05, 4.400000000000237e-05, 4.370799999999647e-05, 4.4624999999999526e-05, 4.3874999999998776e-05, 4.402800000000151e-05, 4.5111000000000456e-05, 4.497199999999729e-05, 4.390200000000538e-05, 4.544399999999865e-05, 4.5013999999996e-05, 4.3888999999998346e-05, 4.425000000000262e-05, 4.5458999999997696e-05, 4.4166999999997736e-05, 4.480499999999499e-05, 4.5333000000001566e-05, 4.375000000000212e-05, 4.465199999999919e-05, 4.554099999999617e-05, 4.5625000000000526e-05, 4.4208999999996446e-05, 4.386199999999868e-05, 4.527799999999582e-05, 4.468000000000527e-05, 4.5347000000001136e-05, 4.402800000000151e-05, 4.5138999999999596e-05, 4.3708999999995946e-05, 4.554100000000311e-05, 4.4402999999998416e-05, 4.5333000000001566e-05, 4.4597000000000386e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.097" endtime="20201110 08:38:08.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.086" endtime="20201110 08:38:08.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.110" endtime="20201110 08:38:08.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.119" endtime="20201110 08:38:08.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.114" endtime="20201110 08:38:08.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.106" endtime="20201110 08:38:08.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.570" endtime="20201110 08:38:08.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.569" endtime="20201110 08:38:08.145"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.167" endtime="20201110 08:38:08.185"></status>
</kw>
<msg timestamp="20201110 08:38:08.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.164" endtime="20201110 08:38:08.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.188" endtime="20201110 08:38:08.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.194" endtime="20201110 08:38:08.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.157" endtime="20201110 08:38:08.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.151" endtime="20201110 08:38:08.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.219" endtime="20201110 08:38:08.579"></status>
</kw>
<msg timestamp="20201110 08:38:08.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039997556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.216" endtime="20201110 08:38:08.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039997556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.588" endtime="20201110 08:38:08.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.607" endtime="20201110 08:38:08.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.207" endtime="20201110 08:38:08.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.202" endtime="20201110 08:38:08.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.625" level="INFO">${RESULT} = [{'time': 0.039997556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.626399999999725e-05, 'source_diff': 4.626399999999725e-05}, {'time': 0.040070722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.616" endtime="20201110 08:38:08.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.657" level="INFO">${ACCURACY} = {'source_diff': [4.626399999999725e-05, 4.529100000000286e-05, 4.523599999999711e-05, 4.6208999999998446e-05, 4.558400000000129e-05, 4.580599999999546e-05, 4.625000000000462e-05, 4.523599999999711e-05...</msg>
<status status="PASS" starttime="20201110 08:38:08.627" endtime="20201110 08:38:08.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.668" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.665" endtime="20201110 08:38:08.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.673" level="INFO">VALUE: [4.626399999999725e-05, 4.529100000000286e-05, 4.523599999999711e-05, 4.6208999999998446e-05, 4.558400000000129e-05, 4.580599999999546e-05, 4.625000000000462e-05, 4.523599999999711e-05, 4.645799999999922e-05, 4.5430999999998556e-05, 4.602700000000404e-05, 4.6139000000000596e-05, 4.5875000000000776e-05, 4.606900000000275e-05, 4.552799999999607e-05, 4.5666999999999236e-05, 4.647199999999879e-05, 4.492999999999858e-05, 4.5569000000002247e-05, 4.538800000000037e-05, 4.5138999999999596e-05, 4.474999999999618e-05, 4.4958999999997196e-05, 4.6153000000000166e-05, 4.6597000000002387e-05, 4.500000000000337e-05, 4.5625000000000526e-05, 4.65139999999975e-05, 4.556899999999531e-05, 4.579199999999589e-05, 4.470799999999747e-05, 4.505500000000218e-05, 4.555599999999521e-05, 4.472199999999704e-05, 4.5416999999998986e-05, 4.504099999999567e-05, 4.645799999999922e-05, 4.5902999999999916e-05, 4.605500000000318e-05, 4.6125000000001026e-05, 4.629200000000333e-05, 4.5403000000006355e-05, 4.577799999999632e-05, 4.5416999999998986e-05, 4.552799999999607e-05, 4.6361000000001706e-05, 4.595800000000566e-05, 4.6013999999997e-05, 4.647199999999879e-05, 4.599999999999743e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.670" endtime="20201110 08:38:08.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.658" endtime="20201110 08:38:08.677"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.683" endtime="20201110 08:38:08.686"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.692" endtime="20201110 08:38:08.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.687" endtime="20201110 08:38:08.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.679" endtime="20201110 08:38:08.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.147" endtime="20201110 08:38:08.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.146" endtime="20201110 08:38:08.718"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.741" endtime="20201110 08:38:08.762"></status>
</kw>
<msg timestamp="20201110 08:38:08.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.738" endtime="20201110 08:38:08.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.765" endtime="20201110 08:38:08.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.772" endtime="20201110 08:38:08.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.731" endtime="20201110 08:38:08.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.725" endtime="20201110 08:38:08.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.796" endtime="20201110 08:38:09.155"></status>
</kw>
<msg timestamp="20201110 08:38:09.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041593958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.792" endtime="20201110 08:38:09.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041548264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041593958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.165" endtime="20201110 08:38:09.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.184" endtime="20201110 08:38:09.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.785" endtime="20201110 08:38:09.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.780" endtime="20201110 08:38:09.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.202" level="INFO">${RESULT} = [{'time': 0.041593958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.56939999999989e-05, 'source_diff': 4.56939999999989e-05}, {'time': 0.041670097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:09.192" endtime="20201110 08:38:09.202"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.233" level="INFO">${ACCURACY} = {'source_diff': [4.56939999999989e-05, 4.576400000000369e-05, 4.623600000000505e-05, 4.747199999999979e-05, 4.6625000000001526e-05, 4.6597000000002387e-05, 4.744400000000065e-05, 4.712499999999509e-05...</msg>
<status status="PASS" starttime="20201110 08:38:09.204" endtime="20201110 08:38:09.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.244" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.242" endtime="20201110 08:38:09.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.249" level="INFO">VALUE: [4.56939999999989e-05, 4.576400000000369e-05, 4.623600000000505e-05, 4.747199999999979e-05, 4.6625000000001526e-05, 4.6597000000002387e-05, 4.744400000000065e-05, 4.712499999999509e-05, 4.6389000000000846e-05, 4.608400000000179e-05, 4.702800000000451e-05, 4.713899999999466e-05, 4.751400000000544e-05, 4.5916999999999486e-05, 4.720799999999997e-05, 4.7013999999998e-05, 4.655599999999621e-05, 4.5708999999997946e-05, 4.617999999999983e-05, 4.602800000000351e-05, 4.727799999999782e-05, 4.6958999999999196e-05, 4.6667000000000236e-05, 4.647200000000573e-05, 4.6680999999999806e-05, 4.5902999999999916e-05, 4.7458999999999696e-05, 4.641600000000051e-05, 4.6416999999999986e-05, 4.7458999999999696e-05, 4.666600000000076e-05, 4.663899999999416e-05, 4.680599999999646e-05, 4.5694999999998376e-05, 4.6347000000002136e-05, 4.730499999999749e-05, 4.5930999999999056e-05, 4.73060000000039e-05, 4.5916999999999486e-05, 4.698599999999886e-05, 4.654100000000411e-05, 4.63469999999952e-05, 4.6583000000002817e-05, 4.683400000000254e-05, 4.702700000000504e-05, 4.654199999999664e-05, 4.573599999999761e-05, 4.6458999999998696e-05, 4.591600000000001e-05, 4.6637999999994684e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.246" endtime="20201110 08:38:09.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.235" endtime="20201110 08:38:09.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.259" endtime="20201110 08:38:09.262"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.268" endtime="20201110 08:38:09.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.263" endtime="20201110 08:38:09.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.255" endtime="20201110 08:38:09.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.720" endtime="20201110 08:38:09.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.719" endtime="20201110 08:38:09.294"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.317" endtime="20201110 08:38:09.338"></status>
</kw>
<msg timestamp="20201110 08:38:09.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.314" endtime="20201110 08:38:09.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.341" endtime="20201110 08:38:09.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.348" endtime="20201110 08:38:09.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.306" endtime="20201110 08:38:09.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.300" endtime="20201110 08:38:09.354"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.371" endtime="20201110 08:38:09.731"></status>
</kw>
<msg timestamp="20201110 08:38:09.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041361069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041409028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.368" endtime="20201110 08:38:09.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041361069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041409028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.741" endtime="20201110 08:38:09.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.760" endtime="20201110 08:38:09.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.361" endtime="20201110 08:38:09.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.356" endtime="20201110 08:38:09.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.778" level="INFO">${RESULT} = [{'time': 0.041409028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7959000000000196e-05, 'source_diff': 4.7959000000000196e-05}, {'time': 0.041486167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:09.768" endtime="20201110 08:38:09.778"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.809" level="INFO">${ACCURACY} = {'source_diff': [4.7959000000000196e-05, 4.712499999999509e-05, 4.705500000000418e-05, 4.7139000000001596e-05, 4.681899999999656e-05, 4.765299999999473e-05, 4.7347000000003137e-05, 4.722199999999954e-...</msg>
<status status="PASS" starttime="20201110 08:38:09.780" endtime="20201110 08:38:09.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.820" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.818" endtime="20201110 08:38:09.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.826" level="INFO">VALUE: [4.7959000000000196e-05, 4.712499999999509e-05, 4.705500000000418e-05, 4.7139000000001596e-05, 4.681899999999656e-05, 4.765299999999473e-05, 4.7347000000003137e-05, 4.722199999999954e-05, 4.752800000000501e-05, 4.7681000000000806e-05, 4.856999999999778e-05, 4.722199999999954e-05, 4.734799999999567e-05, 4.8179999999994894e-05, 4.8125000000003026e-05, 4.673599999999861e-05, 4.722199999999954e-05, 4.854200000000558e-05, 4.8195000000000876e-05, 4.758299999999688e-05, 4.7111000000002456e-05, 4.8473000000000266e-05, 4.702799999999757e-05, 4.847200000000079e-05, 4.7959000000000196e-05, 4.738899999999491e-05, 4.8125000000003026e-05, 4.694400000000015e-05, 4.819499999999394e-05, 4.758299999999688e-05, 4.85139999999995e-05, 4.784800000000311e-05, 4.829099999999892e-05, 4.720799999999997e-05, 4.686200000000168e-05, 4.740200000000194e-05, 4.8319000000005e-05, 4.679199999999689e-05, 4.705599999999671e-05, 4.795800000000072e-05, 4.740299999999448e-05, 4.862499999999659e-05, 4.794499999999369e-05, 4.693000000000058e-05, 4.704199999999714e-05, 4.8473000000000266e-05, 4.830499999999849e-05, 4.819499999999394e-05, 4.676399999999775e-05, 4.758299999999688e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.822" endtime="20201110 08:38:09.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.811" endtime="20201110 08:38:09.834"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.840" endtime="20201110 08:38:09.843"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.849" endtime="20201110 08:38:09.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.844" endtime="20201110 08:38:09.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.836" endtime="20201110 08:38:09.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.296" endtime="20201110 08:38:09.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.295" endtime="20201110 08:38:09.875"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.898" endtime="20201110 08:38:09.919"></status>
</kw>
<msg timestamp="20201110 08:38:09.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.895" endtime="20201110 08:38:09.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.923" endtime="20201110 08:38:09.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.929" endtime="20201110 08:38:09.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.888" endtime="20201110 08:38:09.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.882" endtime="20201110 08:38:09.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.953" endtime="20201110 08:38:10.315"></status>
</kw>
<msg timestamp="20201110 08:38:10.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041705194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041754708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.950" endtime="20201110 08:38:10.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041705194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041754708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.334" endtime="20201110 08:38:10.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.361" endtime="20201110 08:38:10.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.942" endtime="20201110 08:38:10.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.938" endtime="20201110 08:38:10.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.383" level="INFO">${RESULT} = [{'time': 0.041754708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.95140000000005e-05, 'source_diff': 4.95140000000005e-05}, {'time': 0.041837917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:10.373" endtime="20201110 08:38:10.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.413" level="INFO">${ACCURACY} = {'source_diff': [4.95140000000005e-05, 4.933400000000504e-05, 4.8111000000003457e-05, 4.807000000000422e-05, 4.9125000000004027e-05, 4.856899999999831e-05, 4.822200000000054e-05, 4.805499999999824e-05...</msg>
<status status="PASS" starttime="20201110 08:38:10.385" endtime="20201110 08:38:10.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.425" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.422" endtime="20201110 08:38:10.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.430" level="INFO">VALUE: [4.95140000000005e-05, 4.933400000000504e-05, 4.8111000000003457e-05, 4.807000000000422e-05, 4.9125000000004027e-05, 4.856899999999831e-05, 4.822200000000054e-05, 4.805499999999824e-05, 4.911100000000446e-05, 4.948600000000136e-05, 4.856900000000525e-05, 4.927799999999982e-05, 4.854099999999917e-05, 4.843099999999462e-05, 4.915299999999623e-05, 4.808299999999738e-05, 4.8417000000001986e-05, 4.900000000000043e-05, 4.883299999999813e-05, 4.8209000000000446e-05, 4.911100000000446e-05, 4.820800000000097e-05, 4.826399999999925e-05, 4.7681000000000806e-05, 4.776399999999875e-05, 4.900000000000043e-05, 4.856900000000525e-05, 4.9014e-05, 4.807000000000422e-05, 4.824999999999968e-05, 4.930499999999949e-05, 4.770800000000047e-05, 4.823600000000011e-05, 4.947200000000179e-05, 4.823600000000011e-05, 4.963899999999716e-05, 4.947200000000179e-05, 4.8236999999999586e-05, 4.948600000000136e-05, 4.8625000000003527e-05, 4.8417000000001986e-05, 4.857000000000472e-05, 4.897199999999435e-05, 4.794400000000115e-05, 4.95140000000005e-05, 4.7695000000000376e-05, 4.773599999999961e-05, 4.808300000000432e-05, 4.8375000000003276e-05, 4.91669999999958e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.427" endtime="20201110 08:38:10.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.415" endtime="20201110 08:38:10.433"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.440" endtime="20201110 08:38:10.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.448" endtime="20201110 08:38:10.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.444" endtime="20201110 08:38:10.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.435" endtime="20201110 08:38:10.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.877" endtime="20201110 08:38:10.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.876" endtime="20201110 08:38:10.475"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.498" endtime="20201110 08:38:10.520"></status>
</kw>
<msg timestamp="20201110 08:38:10.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.495" endtime="20201110 08:38:10.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.523" endtime="20201110 08:38:10.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.530" endtime="20201110 08:38:10.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.487" endtime="20201110 08:38:10.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.481" endtime="20201110 08:38:10.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.554" endtime="20201110 08:38:10.910"></status>
</kw>
<msg timestamp="20201110 08:38:10.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042116417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042165167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.551" endtime="20201110 08:38:10.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042116417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042165167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.920" endtime="20201110 08:38:10.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.939" endtime="20201110 08:38:10.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.543" endtime="20201110 08:38:10.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.539" endtime="20201110 08:38:10.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.958" level="INFO">${RESULT} = [{'time': 0.042165167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.875000000000018e-05, 'source_diff': 4.875000000000018e-05}, {'time': 0.042247306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:10.949" endtime="20201110 08:38:10.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.989" level="INFO">${ACCURACY} = {'source_diff': [4.875000000000018e-05, 5.054200000000064e-05, 4.876399999999975e-05, 4.912499999999709e-05, 5.047200000000279e-05, 4.8957999999994783e-05, 4.96669999999963e-05, 4.926400000000025e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:10.961" endtime="20201110 08:38:10.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.001" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.998" endtime="20201110 08:38:11.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.006" level="INFO">VALUE: [4.875000000000018e-05, 5.054200000000064e-05, 4.876399999999975e-05, 4.912499999999709e-05, 5.047200000000279e-05, 4.8957999999994783e-05, 4.96669999999963e-05, 4.926400000000025e-05, 5.03339999999991e-05, 5.043099999999662e-05, 5.048600000000236e-05, 4.958299999999888e-05, 4.981999999999903e-05, 5.031900000000006e-05, 4.980599999999946e-05, 4.906999999999828e-05, 4.956899999999931e-05, 5.0485999999995423e-05, 4.993000000000358e-05, 4.959799999999792e-05, 4.961099999999802e-05, 4.926400000000025e-05, 4.8695000000001376e-05, 5.05419999999937e-05, 5.049999999999499e-05, 4.981999999999903e-05, 4.907000000000522e-05, 4.8889000000003346e-05, 4.923600000000111e-05, 4.9375000000004277e-05, 4.959699999999845e-05, 5.0153000000004166e-05, 4.959800000000486e-05, 4.941600000000351e-05, 5.015299999999723e-05, 5.015299999999723e-05, 4.926400000000025e-05, 4.930499999999949e-05, 4.880499999999899e-05, 4.875000000000018e-05, 4.8917000000002486e-05, 5.013899999999766e-05, 4.961099999999802e-05, 5.050000000000193e-05, 4.9401999999997004e-05, 4.9665999999996824e-05, 5.0193999999996464e-05, 5.055500000000074e-05, 5.0235999999995173e-05, 4.981899999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.003" endtime="20201110 08:38:11.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.991" endtime="20201110 08:38:11.009"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.016" endtime="20201110 08:38:11.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.024" endtime="20201110 08:38:11.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.020" endtime="20201110 08:38:11.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.011" endtime="20201110 08:38:11.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.477" endtime="20201110 08:38:11.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.476" endtime="20201110 08:38:11.051"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.075" endtime="20201110 08:38:11.096"></status>
</kw>
<msg timestamp="20201110 08:38:11.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.071" endtime="20201110 08:38:11.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.099" endtime="20201110 08:38:11.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.106" endtime="20201110 08:38:11.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.063" endtime="20201110 08:38:11.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.057" endtime="20201110 08:38:11.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.130" endtime="20201110 08:38:11.485"></status>
</kw>
<msg timestamp="20201110 08:38:11.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042446194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042497361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.126" endtime="20201110 08:38:11.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042446194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042497361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.495" endtime="20201110 08:38:11.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.514" endtime="20201110 08:38:11.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.119" endtime="20201110 08:38:11.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.114" endtime="20201110 08:38:11.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.534" level="INFO">${RESULT} = [{'time': 0.042497361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.11669999999978e-05, 'source_diff': 5.11669999999978e-05}, {'time': 0.042576542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:11.524" endtime="20201110 08:38:11.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.565" level="INFO">${ACCURACY} = {'source_diff': [5.11669999999978e-05, 5.1209000000003446e-05, 4.975000000000118e-05, 5.10270000000021e-05, 5.083300000000013e-05, 5.113899999999866e-05, 5.027800000000082e-05, 4.975000000000118e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:11.536" endtime="20201110 08:38:11.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.576" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.574" endtime="20201110 08:38:11.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.582" level="INFO">VALUE: [5.11669999999978e-05, 5.1209000000003446e-05, 4.975000000000118e-05, 5.10270000000021e-05, 5.083300000000013e-05, 5.113899999999866e-05, 5.027800000000082e-05, 4.975000000000118e-05, 5.008299999999938e-05, 5.131900000000106e-05, 5.0639000000005097e-05, 5.130600000000096e-05, 5.026400000000125e-05, 5.081900000000056e-05, 5.080600000000046e-05, 5.058399999999935e-05, 4.973600000000161e-05, 5.00549999999933e-05, 5.131899999999412e-05, 4.993099999999612e-05, 5.004200000000014e-05, 5.008299999999938e-05, 5.037499999999834e-05, 5.023600000000211e-05, 5.152800000000207e-05, 5.038899999999791e-05, 5.05419999999937e-05, 5.054100000000117e-05, 5.058299999999988e-05, 5.054200000000064e-05, 4.988899999999741e-05, 5.147299999999633e-05, 5.0221999999995603e-05, 5.1237000000002586e-05, 5.038899999999791e-05, 5.150000000000293e-05, 5.080500000000099e-05, 5.006899999999981e-05, 5.025000000000168e-05, 5.0207999999996034e-05, 4.986099999999827e-05, 5.104200000000114e-05, 5.031900000000006e-05, 4.988899999999741e-05, 5.150000000000293e-05, 5.144499999999719e-05, 5.0403000000004416e-05, 5.0665999999997824e-05, 5.148600000000336e-05, 5.099999999999549e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.579" endtime="20201110 08:38:11.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.567" endtime="20201110 08:38:11.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.592" endtime="20201110 08:38:11.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.600" endtime="20201110 08:38:11.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.596" endtime="20201110 08:38:11.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.587" endtime="20201110 08:38:11.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.053" endtime="20201110 08:38:11.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.052" endtime="20201110 08:38:11.627"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.650" endtime="20201110 08:38:11.671"></status>
</kw>
<msg timestamp="20201110 08:38:11.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.647" endtime="20201110 08:38:11.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.675" endtime="20201110 08:38:11.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.681" endtime="20201110 08:38:11.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.639" endtime="20201110 08:38:11.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.633" endtime="20201110 08:38:11.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.705" endtime="20201110 08:38:12.061"></status>
</kw>
<msg timestamp="20201110 08:38:12.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041711125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041763611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.701" endtime="20201110 08:38:12.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041711125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041763611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.070" endtime="20201110 08:38:12.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.089" endtime="20201110 08:38:12.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.694" endtime="20201110 08:38:12.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.689" endtime="20201110 08:38:12.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.108" level="INFO">${RESULT} = [{'time': 0.041763611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2485999999997424e-05, 'source_diff': 5.2485999999997424e-05}, {'time': 0.041847792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:12.099" endtime="20201110 08:38:12.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.140" level="INFO">${ACCURACY} = {'source_diff': [5.2485999999997424e-05, 5.16669999999983e-05, 5.204200000000214e-05, 5.159700000000045e-05, 5.180600000000146e-05, 5.2179999999998894e-05, 5.1695000000004376e-05, 5.18340000000006e-05...</msg>
<status status="PASS" starttime="20201110 08:38:12.111" endtime="20201110 08:38:12.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.151" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.148" endtime="20201110 08:38:12.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.156" level="INFO">VALUE: [5.2485999999997424e-05, 5.16669999999983e-05, 5.204200000000214e-05, 5.159700000000045e-05, 5.180600000000146e-05, 5.2179999999998894e-05, 5.1695000000004376e-05, 5.18340000000006e-05, 5.2485999999997424e-05, 5.158300000000088e-05, 5.1235999999996173e-05, 5.077800000000132e-05, 5.161100000000002e-05, 5.2709000000004946e-05, 5.233300000000163e-05, 5.112499999999909e-05, 5.154200000000164e-05, 5.144400000000465e-05, 5.2443999999998714e-05, 5.175000000000318e-05, 5.200000000000343e-05, 5.202800000000257e-05, 5.179200000000189e-05, 5.251300000000403e-05, 5.076299999999534e-05, 5.179200000000189e-05, 5.256900000000231e-05, 5.109699999999995e-05, 5.072200000000304e-05, 5.2513999999996563e-05, 5.0707999999996534e-05, 5.2485999999997424e-05, 5.254099999999623e-05, 5.215299999999923e-05, 5.233300000000163e-05, 5.183300000000113e-05, 5.230599999999502e-05, 5.1235999999996173e-05, 5.186100000000027e-05, 5.069499999999644e-05, 5.255599999999527e-05, 5.118099999999737e-05, 5.202800000000257e-05, 5.213899999999966e-05, 5.079099999999448e-05, 5.25140000000035e-05, 5.161100000000002e-05, 5.23470000000012e-05, 5.108399999999985e-05, 5.0929999999997644e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.153" endtime="20201110 08:38:12.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.141" endtime="20201110 08:38:12.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.166" endtime="20201110 08:38:12.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.174" endtime="20201110 08:38:12.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.170" endtime="20201110 08:38:12.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.161" endtime="20201110 08:38:12.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.629" endtime="20201110 08:38:12.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.628" endtime="20201110 08:38:12.201"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.224" endtime="20201110 08:38:12.245"></status>
</kw>
<msg timestamp="20201110 08:38:12.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.221" endtime="20201110 08:38:12.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.248" endtime="20201110 08:38:12.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.255" endtime="20201110 08:38:12.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.213" endtime="20201110 08:38:12.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.207" endtime="20201110 08:38:12.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.278" endtime="20201110 08:38:12.646"></status>
</kw>
<msg timestamp="20201110 08:38:12.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041429194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041481111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.275" endtime="20201110 08:38:12.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041429194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041481111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.656" endtime="20201110 08:38:12.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.675" endtime="20201110 08:38:12.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.268" endtime="20201110 08:38:12.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.263" endtime="20201110 08:38:12.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.696" level="INFO">${RESULT} = [{'time': 0.041481111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.191699999999855e-05, 'source_diff': 5.191699999999855e-05}, {'time': 0.041568278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.687" endtime="20201110 08:38:12.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.727" level="INFO">${ACCURACY} = {'source_diff': [5.191699999999855e-05, 5.33340000000021e-05, 5.236200000000024e-05, 5.279100000000342e-05, 5.3179999999999894e-05, 5.258299999999494e-05, 5.190299999999898e-05, 5.194499999999769e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:12.698" endtime="20201110 08:38:12.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.739" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.736" endtime="20201110 08:38:12.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.744" level="INFO">VALUE: [5.191699999999855e-05, 5.33340000000021e-05, 5.236200000000024e-05, 5.279100000000342e-05, 5.3179999999999894e-05, 5.258299999999494e-05, 5.190299999999898e-05, 5.194499999999769e-05, 5.281899999999562e-05, 5.329199999999645e-05, 5.31669999999998e-05, 5.344499999999919e-05, 5.330600000000296e-05, 5.331999999999559e-05, 5.3459000000005696e-05, 5.265299999999973e-05, 5.23470000000012e-05, 5.3499999999997994e-05, 5.263900000000016e-05, 5.1695000000004376e-05, 5.355500000000374e-05, 5.261099999999408e-05, 5.188899999999941e-05, 5.331899999999612e-05, 5.2235999999997174e-05, 5.240299999999948e-05, 5.2429999999999144e-05, 5.329099999999698e-05, 5.2249999999996743e-05, 5.315300000000023e-05, 5.362500000000159e-05, 5.3513999999997564e-05, 5.202800000000257e-05, 5.268099999999887e-05, 5.312500000000109e-05, 5.206900000000181e-05, 5.259700000000145e-05, 5.258300000000188e-05, 5.265299999999973e-05, 5.345899999999876e-05, 5.3138000000001184e-05, 5.186100000000027e-05, 5.2249999999996743e-05, 5.3430000000000144e-05, 5.3499999999997994e-05, 5.2249999999996743e-05, 5.279200000000289e-05, 5.3513999999997564e-05, 5.2665999999999824e-05, 5.330499999999655e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.741" endtime="20201110 08:38:12.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.729" endtime="20201110 08:38:12.747"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.754" endtime="20201110 08:38:12.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.762" endtime="20201110 08:38:12.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.758" endtime="20201110 08:38:12.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.749" endtime="20201110 08:38:12.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.203" endtime="20201110 08:38:12.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.202" endtime="20201110 08:38:12.789"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.812" endtime="20201110 08:38:12.832"></status>
</kw>
<msg timestamp="20201110 08:38:12.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.808" endtime="20201110 08:38:12.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.835" endtime="20201110 08:38:12.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.842" endtime="20201110 08:38:12.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.801" endtime="20201110 08:38:12.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.795" endtime="20201110 08:38:12.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.866" endtime="20201110 08:38:13.211"></status>
</kw>
<msg timestamp="20201110 08:38:13.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041177125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041230528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.862" endtime="20201110 08:38:13.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041177125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041230528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.221" endtime="20201110 08:38:13.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.240" endtime="20201110 08:38:13.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.855" endtime="20201110 08:38:13.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.850" endtime="20201110 08:38:13.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.259" level="INFO">${RESULT} = [{'time': 0.041230528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.340300000000048e-05, 'source_diff': 5.340300000000048e-05}, {'time': 0.041311667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.250" endtime="20201110 08:38:13.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.290" level="INFO">${ACCURACY} = {'source_diff': [5.340300000000048e-05, 5.359800000000192e-05, 5.452699999999866e-05, 5.343099999999962e-05, 5.368099999999987e-05, 5.430499999999755e-05, 5.38749999999949e-05, 5.4165999999994385e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:13.261" endtime="20201110 08:38:13.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.301" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.299" endtime="20201110 08:38:13.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.307" level="INFO">VALUE: [5.340300000000048e-05, 5.359800000000192e-05, 5.452699999999866e-05, 5.343099999999962e-05, 5.368099999999987e-05, 5.430499999999755e-05, 5.38749999999949e-05, 5.4165999999994385e-05, 5.355500000000374e-05, 5.3235999999998174e-05, 5.462499999999565e-05, 5.443100000000062e-05, 5.463900000000216e-05, 5.305500000000324e-05, 5.343099999999962e-05, 5.458299999999694e-05, 5.3985999999998924e-05, 5.3999999999998494e-05, 5.370899999999901e-05, 5.4152000000001754e-05, 5.358299999999594e-05, 5.4416000000001574e-05, 5.4277999999997883e-05, 5.355599999999627e-05, 5.359699999999551e-05, 5.284699999999476e-05, 5.363900000000116e-05, 5.3014000000004e-05, 5.359700000000245e-05, 5.273600000000461e-05, 5.35419999999967e-05, 5.462500000000259e-05, 5.402699999999816e-05, 5.286100000000127e-05, 5.387500000000184e-05, 5.3221999999998604e-05, 5.315300000000023e-05, 5.3237000000004586e-05, 5.291699999999955e-05, 5.3971999999999354e-05, 5.277800000000332e-05, 5.343099999999962e-05, 5.290299999999998e-05, 5.465300000000173e-05, 5.3749999999998244e-05, 5.358299999999594e-05, 5.35549999999968e-05, 5.440299999999454e-05, 5.2721999999998104e-05, 5.394499999999969e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.304" endtime="20201110 08:38:13.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.292" endtime="20201110 08:38:13.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.316" endtime="20201110 08:38:13.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.325" endtime="20201110 08:38:13.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.321" endtime="20201110 08:38:13.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.312" endtime="20201110 08:38:13.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.791" endtime="20201110 08:38:13.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.790" endtime="20201110 08:38:13.351"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.374" endtime="20201110 08:38:13.394"></status>
</kw>
<msg timestamp="20201110 08:38:13.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.371" endtime="20201110 08:38:13.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.397" endtime="20201110 08:38:13.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.404" endtime="20201110 08:38:13.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.363" endtime="20201110 08:38:13.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.357" endtime="20201110 08:38:13.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.427" endtime="20201110 08:38:13.776"></status>
</kw>
<msg timestamp="20201110 08:38:13.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041064806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041119806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.424" endtime="20201110 08:38:13.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041064806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041119806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.786" endtime="20201110 08:38:13.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.805" endtime="20201110 08:38:13.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.417" endtime="20201110 08:38:13.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.412" endtime="20201110 08:38:13.814"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.824" level="INFO">${RESULT} = [{'time': 0.041119806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4999999999999494e-05, 'source_diff': 5.4999999999999494e-05}, {'time': 0.041204972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:13.815" endtime="20201110 08:38:13.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.855" level="INFO">${ACCURACY} = {'source_diff': [5.4999999999999494e-05, 5.533299999999769e-05, 5.437500000000234e-05, 5.563900000000316e-05, 5.5194000000001464e-05, 5.54869999999999e-05, 5.443100000000062e-05, 5.456899999999737e-05...</msg>
<status status="PASS" starttime="20201110 08:38:13.827" endtime="20201110 08:38:13.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.867" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.864" endtime="20201110 08:38:13.867"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.872" level="INFO">VALUE: [5.4999999999999494e-05, 5.533299999999769e-05, 5.437500000000234e-05, 5.563900000000316e-05, 5.5194000000001464e-05, 5.54869999999999e-05, 5.443100000000062e-05, 5.456899999999737e-05, 5.5165999999995385e-05, 5.5194000000001464e-05, 5.5277999999998884e-05, 5.4027999999997633e-05, 5.5305999999998023e-05, 5.458299999999694e-05, 5.534800000000367e-05, 5.513900000000266e-05, 5.4999999999999494e-05, 5.509699999999701e-05, 5.375000000000518e-05, 5.5472000000000854e-05, 5.4013999999998064e-05, 5.419499999999994e-05, 5.459699999999651e-05, 5.4972000000000354e-05, 5.51670000000018e-05, 5.515300000000223e-05, 5.5194000000001464e-05, 5.377800000000432e-05, 5.4249999999998744e-05, 5.48749999999959e-05, 5.388899999999447e-05, 5.405599999999677e-05, 5.5472000000000854e-05, 5.5194000000001464e-05, 5.5513999999999564e-05, 5.482000000000403e-05, 5.407000000000328e-05, 5.376400000000475e-05, 5.408400000000285e-05, 5.495900000000026e-05, 5.3763999999997814e-05, 5.379099999999748e-05, 5.551300000000009e-05, 5.409700000000295e-05, 5.3721999999999104e-05, 5.402800000000457e-05, 5.509699999999701e-05, 5.419499999999994e-05, 5.4209000000006446e-05, 5.531899999999812e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.869" endtime="20201110 08:38:13.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.857" endtime="20201110 08:38:13.875"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.882" endtime="20201110 08:38:13.885"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.891" endtime="20201110 08:38:13.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.886" endtime="20201110 08:38:13.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.877" endtime="20201110 08:38:13.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.353" endtime="20201110 08:38:13.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.352" endtime="20201110 08:38:13.917"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.941" endtime="20201110 08:38:13.962"></status>
</kw>
<msg timestamp="20201110 08:38:13.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.937" endtime="20201110 08:38:13.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.965" endtime="20201110 08:38:13.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.971" endtime="20201110 08:38:13.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.930" endtime="20201110 08:38:13.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.924" endtime="20201110 08:38:13.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.995" endtime="20201110 08:38:14.351"></status>
</kw>
<msg timestamp="20201110 08:38:14.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04161075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041666625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:13.992" endtime="20201110 08:38:14.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04161075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041666625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:14.360" endtime="20201110 08:38:14.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.379" endtime="20201110 08:38:14.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.984" endtime="20201110 08:38:14.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.980" endtime="20201110 08:38:14.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.399" level="INFO">${RESULT} = [{'time': 0.041666625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.58749999999969e-05, 'source_diff': 5.58749999999969e-05}, {'time': 0.041754736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:14.390" endtime="20201110 08:38:14.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.430" level="INFO">${ACCURACY} = {'source_diff': [5.58749999999969e-05, 5.537500000000334e-05, 5.597300000000083e-05, 5.5291999999998453e-05, 5.53749999999964e-05, 5.5222000000000604e-05, 5.612500000000409e-05, 5.634699999999826e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:14.401" endtime="20201110 08:38:14.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.441" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.439" endtime="20201110 08:38:14.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.446" level="INFO">VALUE: [5.58749999999969e-05, 5.537500000000334e-05, 5.597300000000083e-05, 5.5291999999998453e-05, 5.53749999999964e-05, 5.5222000000000604e-05, 5.612500000000409e-05, 5.634699999999826e-05, 5.512500000000309e-05, 5.6486000000001424e-05, 5.584699999999776e-05, 5.511099999999658e-05, 5.5972000000001354e-05, 5.486099999999633e-05, 5.561100000000402e-05, 5.5791999999998954e-05, 5.4902000000002504e-05, 5.586100000000427e-05, 5.615300000000323e-05, 5.613899999999672e-05, 5.6165999999996385e-05, 5.583300000000513e-05, 5.506899999999787e-05, 5.562499999999665e-05, 5.4749999999999244e-05, 5.522300000000008e-05, 5.529099999999898e-05, 5.4708000000000534e-05, 5.611100000000452e-05, 5.5472000000000854e-05, 5.5401999999996066e-05, 5.4722000000000104e-05, 5.6000000000000494e-05, 5.583299999999819e-05, 5.633399999999816e-05, 5.5415999999995635e-05, 5.5944000000002214e-05, 5.493100000000112e-05, 5.50549999999983e-05, 5.515299999999529e-05, 5.5013999999999064e-05, 5.509699999999701e-05, 5.5263999999999314e-05, 5.6014000000000064e-05, 5.5485999999993485e-05, 5.579099999999948e-05, 5.61670000000028e-05, 5.473600000000661e-05, 5.4958000000000784e-05, 5.493100000000112e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.443" endtime="20201110 08:38:14.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.432" endtime="20201110 08:38:14.450"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.456" endtime="20201110 08:38:14.459"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.465" endtime="20201110 08:38:14.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.460" endtime="20201110 08:38:14.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.452" endtime="20201110 08:38:14.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.919" endtime="20201110 08:38:14.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.918" endtime="20201110 08:38:14.491"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.514" endtime="20201110 08:38:14.536"></status>
</kw>
<msg timestamp="20201110 08:38:14.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.511" endtime="20201110 08:38:14.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.539" endtime="20201110 08:38:14.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.546" endtime="20201110 08:38:14.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.504" endtime="20201110 08:38:14.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.498" endtime="20201110 08:38:14.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.569" endtime="20201110 08:38:14.923"></status>
</kw>
<msg timestamp="20201110 08:38:14.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041552944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.566" endtime="20201110 08:38:14.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041495417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041552944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.933" endtime="20201110 08:38:14.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.952" endtime="20201110 08:38:14.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.559" endtime="20201110 08:38:14.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.554" endtime="20201110 08:38:14.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.974" level="INFO">${RESULT} = [{'time': 0.041552944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.752700000000166e-05, 'source_diff': 5.752700000000166e-05}, {'time': 0.041638069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.965" endtime="20201110 08:38:14.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.005" level="INFO">${ACCURACY} = {'source_diff': [5.752700000000166e-05, 5.7486000000002424e-05, 5.6236000000001174e-05, 5.7680000000004394e-05, 5.69870000000014e-05, 5.7500000000001994e-05, 5.6055999999998773e-05, 5.7333999999999163...</msg>
<status status="PASS" starttime="20201110 08:38:14.976" endtime="20201110 08:38:15.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.016" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.014" endtime="20201110 08:38:15.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.022" level="INFO">VALUE: [5.752700000000166e-05, 5.7486000000002424e-05, 5.6236000000001174e-05, 5.7680000000004394e-05, 5.69870000000014e-05, 5.7500000000001994e-05, 5.6055999999998773e-05, 5.7333999999999163e-05, 5.695899999999532e-05, 5.661099999999808e-05, 5.733299999999969e-05, 5.58749999999969e-05, 5.684799999999823e-05, 5.6208000000002034e-05, 5.65549999999998e-05, 5.659699999999851e-05, 5.73619999999983e-05, 5.668099999999593e-05, 5.686099999999833e-05, 5.590300000000298e-05, 5.6055999999998773e-05, 5.577699999999991e-05, 5.604099999999973e-05, 5.712499999999815e-05, 5.75550000000008e-05, 5.6458000000002284e-05, 5.586099999999733e-05, 5.7194000000003464e-05, 5.7485999999995485e-05, 5.73749999999984e-05, 5.7583999999999413e-05, 5.7208000000003034e-05, 5.747300000000233e-05, 5.738899999999797e-05, 5.731900000000012e-05, 5.595900000000126e-05, 5.609699999999801e-05, 5.663899999999722e-05, 5.715299999999729e-05, 5.627700000000041e-05, 5.658299999999894e-05, 5.6027999999999634e-05, 5.7500000000001994e-05, 5.6805999999999524e-05, 5.5750000000000244e-05, 5.71670000000038e-05, 5.641699999999611e-05, 5.634699999999826e-05, 5.5750000000000244e-05, 5.6416000000003574e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.018" endtime="20201110 08:38:15.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.007" endtime="20201110 08:38:15.025"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.031" endtime="20201110 08:38:15.034"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.040" endtime="20201110 08:38:15.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.035" endtime="20201110 08:38:15.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.027" endtime="20201110 08:38:15.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.493" endtime="20201110 08:38:15.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.492" endtime="20201110 08:38:15.066"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.090" endtime="20201110 08:38:15.108"></status>
</kw>
<msg timestamp="20201110 08:38:15.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.086" endtime="20201110 08:38:15.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.112" endtime="20201110 08:38:15.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.118" endtime="20201110 08:38:15.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.079" endtime="20201110 08:38:15.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.073" endtime="20201110 08:38:15.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.141" endtime="20201110 08:38:15.502"></status>
</kw>
<msg timestamp="20201110 08:38:15.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04167825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0417355, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:15.138" endtime="20201110 08:38:15.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04167825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0417355, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:15.512" endtime="20201110 08:38:15.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.531" endtime="20201110 08:38:15.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.131" endtime="20201110 08:38:15.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.126" endtime="20201110 08:38:15.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.551" level="INFO">${RESULT} = [{'time': 0.0417355, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7250000000001744e-05, 'source_diff': 5.7250000000001744e-05}, {'time': 0.041820639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:15.541" endtime="20201110 08:38:15.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.582" level="INFO">${ACCURACY} = {'source_diff': [5.7250000000001744e-05, 5.711099999999858e-05, 5.7264000000001314e-05, 5.6916000000004074e-05, 5.8179999999997956e-05, 5.6778000000000384e-05, 5.8165999999998386e-05, 5.72500000000017...</msg>
<status status="PASS" starttime="20201110 08:38:15.553" endtime="20201110 08:38:15.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.593" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.591" endtime="20201110 08:38:15.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.598" level="INFO">VALUE: [5.7250000000001744e-05, 5.711099999999858e-05, 5.7264000000001314e-05, 5.6916000000004074e-05, 5.8179999999997956e-05, 5.6778000000000384e-05, 5.8165999999998386e-05, 5.7250000000001744e-05, 5.75550000000008e-05, 5.738899999999797e-05, 5.7833999999999663e-05, 5.6750000000001244e-05, 5.787500000000584e-05, 5.8499999999996055e-05, 5.8277999999994945e-05, 5.7665999999997886e-05, 5.859700000000051e-05, 5.743100000000362e-05, 5.784699999999976e-05, 5.8556000000001274e-05, 5.8056000000000774e-05, 5.78749999999989e-05, 5.723699999999471e-05, 5.727699999999447e-05, 5.812500000000609e-05, 5.709699999999901e-05, 5.7250000000001744e-05, 5.8000000000002494e-05, 5.67629999999944e-05, 5.693099999999618e-05, 5.7556000000000274e-05, 5.730500000000055e-05, 5.8499999999996055e-05, 5.708299999999944e-05, 5.770900000000301e-05, 5.788899999999847e-05, 5.7943999999997275e-05, 5.691699999999661e-05, 5.8542000000001704e-05, 5.76670000000043e-05, 5.783300000000019e-05, 5.8235999999996235e-05, 5.7972000000003354e-05, 5.8250000000002744e-05, 5.780500000000105e-05, 5.763899999999822e-05, 5.754100000000123e-05, 5.6819999999999093e-05, 5.8014000000002064e-05, 5.784699999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.595" endtime="20201110 08:38:15.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.583" endtime="20201110 08:38:15.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.608" endtime="20201110 08:38:15.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.617" endtime="20201110 08:38:15.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.612" endtime="20201110 08:38:15.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.604" endtime="20201110 08:38:15.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.068" endtime="20201110 08:38:15.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.067" endtime="20201110 08:38:15.643"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.666" endtime="20201110 08:38:15.688"></status>
</kw>
<msg timestamp="20201110 08:38:15.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.663" endtime="20201110 08:38:15.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.692" endtime="20201110 08:38:15.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.698" endtime="20201110 08:38:15.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.655" endtime="20201110 08:38:15.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.649" endtime="20201110 08:38:15.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.723" endtime="20201110 08:38:16.069"></status>
</kw>
<msg timestamp="20201110 08:38:16.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041337111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.720" endtime="20201110 08:38:16.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041337111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.079" endtime="20201110 08:38:16.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.098" endtime="20201110 08:38:16.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.712" endtime="20201110 08:38:16.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.707" endtime="20201110 08:38:16.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.117" level="INFO">${RESULT} = [{'time': 0.041337111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.880500000000205e-05, 'source_diff': 5.880500000000205e-05}, {'time': 0.041425347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.108" endtime="20201110 08:38:16.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.148" level="INFO">${ACCURACY} = {'source_diff': [5.880500000000205e-05, 5.88749999999999e-05, 5.9207999999998095e-05, 5.9264000000003314e-05, 5.843100000000462e-05, 5.776300000000234e-05, 5.9165999999999386e-05, 5.936100000000083e-0...</msg>
<status status="PASS" starttime="20201110 08:38:16.119" endtime="20201110 08:38:16.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.160" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.158" endtime="20201110 08:38:16.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.166" level="INFO">VALUE: [5.880500000000205e-05, 5.88749999999999e-05, 5.9207999999998095e-05, 5.9264000000003314e-05, 5.843100000000462e-05, 5.776300000000234e-05, 5.9165999999999386e-05, 5.936100000000083e-05, 5.938899999999997e-05, 5.7806000000000524e-05, 5.858300000000094e-05, 5.9333999999994225e-05, 5.9486000000004424e-05, 5.865300000000573e-05, 5.795900000000326e-05, 5.915299999999929e-05, 5.93750000000004e-05, 5.8694000000004964e-05, 5.9472000000004854e-05, 5.788900000000541e-05, 5.854100000000223e-05, 5.7778000000001384e-05, 5.8292000000001454e-05, 5.9472000000004854e-05, 5.7764000000001814e-05, 5.788899999999847e-05, 5.883300000000119e-05, 5.936100000000083e-05, 5.9499999999997055e-05, 5.897299999999689e-05, 5.7915999999998136e-05, 5.909700000000101e-05, 5.9334000000001164e-05, 5.843099999999768e-05, 5.779100000000148e-05, 5.8721999999997165e-05, 5.8278000000001884e-05, 5.9179999999998956e-05, 5.8735999999996735e-05, 5.8014000000002064e-05, 5.916699999999886e-05, 5.9028000000002634e-05, 5.9179999999998956e-05, 5.7721999999996165e-05, 5.8971999999997415e-05, 5.9041999999995265e-05, 5.7736000000002674e-05, 5.9179999999998956e-05, 5.8597999999999983e-05, 5.9194999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.162" endtime="20201110 08:38:16.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.150" endtime="20201110 08:38:16.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.175" endtime="20201110 08:38:16.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.184" endtime="20201110 08:38:16.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.179" endtime="20201110 08:38:16.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.171" endtime="20201110 08:38:16.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.645" endtime="20201110 08:38:16.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.644" endtime="20201110 08:38:16.213"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.236" endtime="20201110 08:38:16.254"></status>
</kw>
<msg timestamp="20201110 08:38:16.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.232" endtime="20201110 08:38:16.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.257" endtime="20201110 08:38:16.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.263" endtime="20201110 08:38:16.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.225" endtime="20201110 08:38:16.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.219" endtime="20201110 08:38:16.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.287" endtime="20201110 08:38:16.621"></status>
</kw>
<msg timestamp="20201110 08:38:16.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043577333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043637375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.283" endtime="20201110 08:38:16.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043577333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043637375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.630" endtime="20201110 08:38:16.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.649" endtime="20201110 08:38:16.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.276" endtime="20201110 08:38:16.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.272" endtime="20201110 08:38:16.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.668" level="INFO">${RESULT} = [{'time': 0.043637375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0041999999996265e-05, 'source_diff': 6.0041999999996265e-05}, {'time': 0.043724444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:16.659" endtime="20201110 08:38:16.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.699" level="INFO">${ACCURACY} = {'source_diff': [6.0041999999996265e-05, 5.876300000000334e-05, 6.066700000000036e-05, 6.0485999999998485e-05, 5.961100000000108e-05, 5.906900000000187e-05, 5.96670000000063e-05, 5.927699999999647e-05...</msg>
<status status="PASS" starttime="20201110 08:38:16.670" endtime="20201110 08:38:16.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.710" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.707" endtime="20201110 08:38:16.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.716" level="INFO">VALUE: [6.0041999999996265e-05, 5.876300000000334e-05, 6.066700000000036e-05, 6.0485999999998485e-05, 5.961100000000108e-05, 5.906900000000187e-05, 5.96670000000063e-05, 5.927699999999647e-05, 5.906899999999493e-05, 5.986100000000133e-05, 5.988900000000047e-05, 5.9458000000005284e-05, 5.981899999999568e-05, 5.9819999999995155e-05, 5.912500000000015e-05, 6.0528000000004134e-05, 5.966699999999936e-05, 5.908300000000144e-05, 5.9652000000000316e-05, 5.961100000000108e-05, 6.034700000000226e-05, 5.965299999999979e-05, 5.9250000000003744e-05, 5.86949999999975e-05, 5.8972000000004354e-05, 6.0499999999998055e-05, 5.945899999999782e-05, 5.9222000000004604e-05, 5.98750000000009e-05, 6.015300000000029e-05, 5.983300000000219e-05, 5.893099999999818e-05, 6.0486000000005424e-05, 6.033300000000269e-05, 6.038899999999403e-05, 5.9721999999998165e-05, 6.03750000000014e-05, 6.0485999999998485e-05, 6.0152000000000816e-05, 5.9443999999998776e-05, 5.9207999999998095e-05, 6.0291999999996515e-05, 6.0098000000001484e-05, 5.9429999999999206e-05, 6.0320000000002594e-05, 6.0513999999997625e-05, 5.9070000000001344e-05, 5.930499999999561e-05, 5.9264000000003314e-05, 5.945900000000476e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.712" endtime="20201110 08:38:16.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.701" endtime="20201110 08:38:16.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.726" endtime="20201110 08:38:16.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.735" endtime="20201110 08:38:16.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.730" endtime="20201110 08:38:16.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.721" endtime="20201110 08:38:16.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.215" endtime="20201110 08:38:16.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.214" endtime="20201110 08:38:16.761"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.784" endtime="20201110 08:38:16.802"></status>
</kw>
<msg timestamp="20201110 08:38:16.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.780" endtime="20201110 08:38:16.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.805" endtime="20201110 08:38:16.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.811" endtime="20201110 08:38:16.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.773" endtime="20201110 08:38:16.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.767" endtime="20201110 08:38:16.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.835" endtime="20201110 08:38:17.169"></status>
</kw>
<msg timestamp="20201110 08:38:17.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040645583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.831" endtime="20201110 08:38:17.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040645583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040705319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.178" endtime="20201110 08:38:17.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.197" endtime="20201110 08:38:17.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.824" endtime="20201110 08:38:17.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.820" endtime="20201110 08:38:17.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.218" level="INFO">${RESULT} = [{'time': 0.040705319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9735999999997735e-05, 'source_diff': 5.9735999999997735e-05}, {'time': 0.040795514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:17.209" endtime="20201110 08:38:17.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.248" level="INFO">${ACCURACY} = {'source_diff': [5.9735999999997735e-05, 6.041700000000011e-05, 6.06949999999995e-05, 6.0985999999998985e-05, 6.0277999999996945e-05, 6.155499999999786e-05, 5.9778000000003384e-05, 6.138900000000197e-...</msg>
<status status="PASS" starttime="20201110 08:38:17.220" endtime="20201110 08:38:17.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.259" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.257" endtime="20201110 08:38:17.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.265" level="INFO">VALUE: [5.9735999999997735e-05, 6.041700000000011e-05, 6.06949999999995e-05, 6.0985999999998985e-05, 6.0277999999996945e-05, 6.155499999999786e-05, 5.9778000000003384e-05, 6.138900000000197e-05, 6.012499999999421e-05, 6.03750000000014e-05, 6.0930000000000706e-05, 6.0820000000003094e-05, 5.98750000000009e-05, 6.137499999999546e-05, 6.147299999999939e-05, 6.063900000000122e-05, 6.0112000000001053e-05, 6.004099999999679e-05, 5.9707999999998596e-05, 6.148599999999949e-05, 6.0972000000006354e-05, 6.13200000000036e-05, 6.119400000000053e-05, 6.041700000000011e-05, 6.0263999999997375e-05, 6.0707999999999596e-05, 6.059700000000251e-05, 5.9735999999997735e-05, 5.9750000000004244e-05, 5.9735999999997735e-05, 6.137499999999546e-05, 6.040300000000054e-05, 6.0221999999998665e-05, 6.134699999999632e-05, 6.086100000000233e-05, 6.0443999999999776e-05, 6.149999999999906e-05, 6.08750000000019e-05, 6.0416000000000636e-05, 6.006899999999593e-05, 6.1195e-05, 6.1000000000005494e-05, 6.027699999999747e-05, 5.98750000000009e-05, 6.0291999999996515e-05, 6.145800000000035e-05, 5.9778000000003384e-05, 6.1014000000005064e-05, 6.059700000000251e-05, 6.0721999999999166e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.262" endtime="20201110 08:38:17.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.250" endtime="20201110 08:38:17.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.274" endtime="20201110 08:38:17.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.283" endtime="20201110 08:38:17.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.278" endtime="20201110 08:38:17.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.270" endtime="20201110 08:38:17.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.763" endtime="20201110 08:38:17.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.762" endtime="20201110 08:38:17.308"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.331" endtime="20201110 08:38:17.350"></status>
</kw>
<msg timestamp="20201110 08:38:17.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.328" endtime="20201110 08:38:17.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.353" endtime="20201110 08:38:17.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.359" endtime="20201110 08:38:17.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.321" endtime="20201110 08:38:17.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.315" endtime="20201110 08:38:17.366"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.382" endtime="20201110 08:38:17.717"></status>
</kw>
<msg timestamp="20201110 08:38:17.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040560375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040622347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.379" endtime="20201110 08:38:17.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040560375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040622347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.727" endtime="20201110 08:38:17.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.746" endtime="20201110 08:38:17.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.372" endtime="20201110 08:38:17.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.367" endtime="20201110 08:38:17.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.765" level="INFO">${RESULT} = [{'time': 0.040622347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.197200000000042e-05, 'source_diff': 6.197200000000042e-05}, {'time': 0.040715569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.756" endtime="20201110 08:38:17.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.796" level="INFO">${ACCURACY} = {'source_diff': [6.197200000000042e-05, 6.0944000000000276e-05, 6.236099999999689e-05, 6.195800000000085e-05, 6.254199999999877e-05, 6.0778000000004384e-05, 6.206899999999793e-05, 6.0763999999997875e-...</msg>
<status status="PASS" starttime="20201110 08:38:17.768" endtime="20201110 08:38:17.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.807" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.805" endtime="20201110 08:38:17.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.813" level="INFO">VALUE: [6.197200000000042e-05, 6.0944000000000276e-05, 6.236099999999689e-05, 6.195800000000085e-05, 6.254199999999877e-05, 6.0778000000004384e-05, 6.206899999999793e-05, 6.0763999999997875e-05, 6.158300000000394e-05, 6.236099999999689e-05, 6.194399999999434e-05, 6.148599999999949e-05, 6.161099999999614e-05, 6.23200000000046e-05, 6.247200000000092e-05, 6.230599999999809e-05, 6.112500000000215e-05, 6.238799999999656e-05, 6.109700000000301e-05, 6.109700000000301e-05, 6.159799999999604e-05, 6.091700000000061e-05, 6.247200000000092e-05, 6.254199999999877e-05, 6.137499999999546e-05, 6.097299999999889e-05, 6.266699999999542e-05, 6.184800000000323e-05, 6.219499999999406e-05, 6.123599999999924e-05, 6.123599999999924e-05, 6.170900000000007e-05, 6.159700000000351e-05, 6.25279999999992e-05, 6.162500000000265e-05, 6.129199999999752e-05, 6.118000000000096e-05, 6.0957999999999846e-05, 6.233299999999775e-05, 6.159799999999604e-05, 6.190300000000204e-05, 6.247200000000092e-05, 6.157000000000384e-05, 6.0749999999998305e-05, 6.112500000000215e-05, 6.201399999999913e-05, 6.065300000000079e-05, 6.188900000000247e-05, 6.234699999999732e-05, 6.166700000000136e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.809" endtime="20201110 08:38:17.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.798" endtime="20201110 08:38:17.816"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.822" endtime="20201110 08:38:17.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.831" endtime="20201110 08:38:17.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.826" endtime="20201110 08:38:17.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.818" endtime="20201110 08:38:17.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.311" endtime="20201110 08:38:17.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.309" endtime="20201110 08:38:17.856"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.879" endtime="20201110 08:38:17.897"></status>
</kw>
<msg timestamp="20201110 08:38:17.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.876" endtime="20201110 08:38:17.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.901" endtime="20201110 08:38:17.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.907" endtime="20201110 08:38:17.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.869" endtime="20201110 08:38:17.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.863" endtime="20201110 08:38:17.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.931" endtime="20201110 08:38:18.267"></status>
</kw>
<msg timestamp="20201110 08:38:18.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040544375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.927" endtime="20201110 08:38:18.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040544375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040606639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.277" endtime="20201110 08:38:18.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.296" endtime="20201110 08:38:18.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.920" endtime="20201110 08:38:18.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.915" endtime="20201110 08:38:18.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.315" level="INFO">${RESULT} = [{'time': 0.040606639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.226399999999938e-05, 'source_diff': 6.226399999999938e-05}, {'time': 0.040697833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.306" endtime="20201110 08:38:18.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.345" level="INFO">${ACCURACY} = {'source_diff': [6.226399999999938e-05, 6.261100000000408e-05, 6.30279999999997e-05, 6.316699999999592e-05, 6.305599999999884e-05, 6.244400000000178e-05, 6.194500000000075e-05, 6.209799999999654e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:18.317" endtime="20201110 08:38:18.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.356" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.354" endtime="20201110 08:38:18.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.361" level="INFO">VALUE: [6.226399999999938e-05, 6.261100000000408e-05, 6.30279999999997e-05, 6.316699999999592e-05, 6.305599999999884e-05, 6.244400000000178e-05, 6.194500000000075e-05, 6.209799999999654e-05, 6.256899999999843e-05, 6.283299999999825e-05, 6.363900000000422e-05, 6.354199999999977e-05, 6.298600000000099e-05, 6.222300000000014e-05, 6.330499999999961e-05, 6.24029999999956e-05, 6.17629999999994e-05, 6.209699999999707e-05, 6.334699999999832e-05, 6.356899999999943e-05, 6.2195000000001e-05, 6.24029999999956e-05, 6.258400000000441e-05, 6.240200000000307e-05, 6.248600000000049e-05, 6.266600000000289e-05, 6.270900000000107e-05, 6.288900000000347e-05, 6.22499999999998e-05, 6.336099999999789e-05, 6.218100000000143e-05, 6.191600000000214e-05, 6.233400000000416e-05, 6.223600000000024e-05, 6.270900000000107e-05, 6.298600000000099e-05, 6.208300000000444e-05, 6.261100000000408e-05, 6.284699999999782e-05, 6.306899999999893e-05, 6.195800000000085e-05, 6.316699999999592e-05, 6.300000000000056e-05, 6.355599999999934e-05, 6.263899999999628e-05, 6.35280000000002e-05, 6.241600000000264e-05, 6.330599999999909e-05, 6.311099999999764e-05, 6.255499999999886e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.358" endtime="20201110 08:38:18.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.347" endtime="20201110 08:38:18.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.371" endtime="20201110 08:38:18.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.379" endtime="20201110 08:38:18.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.375" endtime="20201110 08:38:18.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.366" endtime="20201110 08:38:18.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.858" endtime="20201110 08:38:18.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.857" endtime="20201110 08:38:18.405"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.428" endtime="20201110 08:38:18.446"></status>
</kw>
<msg timestamp="20201110 08:38:18.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.425" endtime="20201110 08:38:18.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.450" endtime="20201110 08:38:18.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.456" endtime="20201110 08:38:18.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.417" endtime="20201110 08:38:18.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.412" endtime="20201110 08:38:18.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.482" endtime="20201110 08:38:18.841"></status>
</kw>
<msg timestamp="20201110 08:38:18.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040486347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040550042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.476" endtime="20201110 08:38:18.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040486347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040550042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.851" endtime="20201110 08:38:18.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.870" endtime="20201110 08:38:18.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.469" endtime="20201110 08:38:18.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.464" endtime="20201110 08:38:18.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.889" level="INFO">${RESULT} = [{'time': 0.040550042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.36950000000025e-05, 'source_diff': 6.36950000000025e-05}, {'time': 0.040641264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:18.880" endtime="20201110 08:38:18.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.920" level="INFO">${ACCURACY} = {'source_diff': [6.36950000000025e-05, 6.362500000000465e-05, 6.30829999999985e-05, 6.308399999999798e-05, 6.388900000000447e-05, 6.3582999999999e-05, 6.36950000000025e-05, 6.337499999999746e-05, 6.31...</msg>
<status status="PASS" starttime="20201110 08:38:18.891" endtime="20201110 08:38:18.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.931" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.929" endtime="20201110 08:38:18.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.937" level="INFO">VALUE: [6.36950000000025e-05, 6.362500000000465e-05, 6.30829999999985e-05, 6.308399999999798e-05, 6.388900000000447e-05, 6.3582999999999e-05, 6.36950000000025e-05, 6.337499999999746e-05, 6.311100000000458e-05, 6.449999999999512e-05, 6.368000000000346e-05, 6.32500000000008e-05, 6.450000000000206e-05, 6.445899999999588e-05, 6.340300000000354e-05, 6.455600000000034e-05, 6.415299999999735e-05, 6.419400000000353e-05, 6.30279999999997e-05, 6.323600000000124e-05, 6.273600000000074e-05, 6.376400000000088e-05, 6.429100000000104e-05, 6.293100000000218e-05, 6.367999999999652e-05, 6.437499999999846e-05, 6.434699999999932e-05, 6.398700000000146e-05, 6.281999999999816e-05, 6.406899999999993e-05, 6.358399999999848e-05, 6.415300000000429e-05, 6.454200000000077e-05, 6.329199999999952e-05, 6.397200000000242e-05, 6.27500000000003e-05, 6.345800000000235e-05, 6.466700000000436e-05, 6.401400000000113e-05, 6.326400000000038e-05, 6.377800000000045e-05, 6.277800000000638e-05, 6.359799999999804e-05, 6.429200000000052e-05, 6.329199999999952e-05, 6.372200000000217e-05, 6.305599999999884e-05, 6.355499999999986e-05, 6.330599999999909e-05, 6.359699999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.934" endtime="20201110 08:38:18.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.922" endtime="20201110 08:38:18.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.947" endtime="20201110 08:38:18.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.955" endtime="20201110 08:38:18.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.951" endtime="20201110 08:38:18.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.942" endtime="20201110 08:38:18.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.407" endtime="20201110 08:38:18.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.406" endtime="20201110 08:38:18.982"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.005" endtime="20201110 08:38:19.026"></status>
</kw>
<msg timestamp="20201110 08:38:19.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.002" endtime="20201110 08:38:19.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.029" endtime="20201110 08:38:19.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.035" endtime="20201110 08:38:19.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.994" endtime="20201110 08:38:19.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.988" endtime="20201110 08:38:19.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.059" endtime="20201110 08:38:19.403"></status>
</kw>
<msg timestamp="20201110 08:38:19.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041700944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041766292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.056" endtime="20201110 08:38:19.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041700944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041766292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.413" endtime="20201110 08:38:19.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.432" endtime="20201110 08:38:19.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.048" endtime="20201110 08:38:19.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.044" endtime="20201110 08:38:19.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.453" level="INFO">${RESULT} = [{'time': 0.041766292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.53479999999998e-05, 'source_diff': 6.53479999999998e-05}, {'time': 0.041862444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:19.444" endtime="20201110 08:38:19.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.484" level="INFO">${ACCURACY} = {'source_diff': [6.53479999999998e-05, 6.372199999999523e-05, 6.40829999999995e-05, 6.429100000000104e-05, 6.520799999999716e-05, 6.48750000000059e-05, 6.484699999999982e-05, 6.392999999999677e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:38:19.455" endtime="20201110 08:38:19.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.495" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.493" endtime="20201110 08:38:19.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.501" level="INFO">VALUE: [6.53479999999998e-05, 6.372199999999523e-05, 6.40829999999995e-05, 6.429100000000104e-05, 6.520799999999716e-05, 6.48750000000059e-05, 6.484699999999982e-05, 6.392999999999677e-05, 6.430600000000009e-05, 6.512499999999921e-05, 6.394400000000328e-05, 6.427800000000095e-05, 6.470900000000307e-05, 6.554200000000177e-05, 6.552700000000272e-05, 6.447200000000292e-05, 6.532000000000066e-05, 6.537499999999946e-05, 6.563899999999928e-05, 6.551400000000263e-05, 6.552799999999526e-05, 6.409699999999907e-05, 6.533400000000023e-05, 6.459699999999957e-05, 6.376400000000088e-05, 6.456900000000043e-05, 6.562499999999971e-05, 6.42500000000018e-05, 6.438899999999803e-05, 6.411099999999864e-05, 6.426399999999444e-05, 6.488899999999853e-05, 6.405500000000036e-05, 6.392999999999677e-05, 6.4583e-05, 6.494399999999734e-05, 6.568099999999799e-05, 6.377800000000045e-05, 6.370900000000207e-05, 6.512500000000615e-05, 6.5195000000004e-05, 6.461099999999914e-05, 6.554100000000229e-05, 6.501400000000213e-05, 6.438899999999803e-05, 6.406899999999993e-05, 6.405500000000036e-05, 6.455600000000034e-05, 6.419400000000353e-05, 6.379200000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.497" endtime="20201110 08:38:19.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.486" endtime="20201110 08:38:19.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.511" endtime="20201110 08:38:19.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.519" endtime="20201110 08:38:19.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.515" endtime="20201110 08:38:19.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.506" endtime="20201110 08:38:19.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.984" endtime="20201110 08:38:19.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.983" endtime="20201110 08:38:19.545"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.568" endtime="20201110 08:38:19.589"></status>
</kw>
<msg timestamp="20201110 08:38:19.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.565" endtime="20201110 08:38:19.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.593" endtime="20201110 08:38:19.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.599" endtime="20201110 08:38:19.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.558" endtime="20201110 08:38:19.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.552" endtime="20201110 08:38:19.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.623" endtime="20201110 08:38:19.970"></status>
</kw>
<msg timestamp="20201110 08:38:19.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041549222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041613847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.620" endtime="20201110 08:38:19.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041549222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041613847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.979" endtime="20201110 08:38:19.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.998" endtime="20201110 08:38:20.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.612" endtime="20201110 08:38:20.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.607" endtime="20201110 08:38:20.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.018" level="INFO">${RESULT} = [{'time': 0.041613847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.462500000000565e-05, 'source_diff': 6.462500000000565e-05}, {'time': 0.041709167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.009" endtime="20201110 08:38:20.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.050" level="INFO">${ACCURACY} = {'source_diff': [6.462500000000565e-05, 6.497299999999595e-05, 6.662500000000071e-05, 6.511099999999964e-05, 6.548600000000349e-05, 6.559700000000057e-05, 6.562499999999971e-05, 6.618099999999849e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:20.020" endtime="20201110 08:38:20.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.061" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.059" endtime="20201110 08:38:20.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.067" level="INFO">VALUE: [6.462500000000565e-05, 6.497299999999595e-05, 6.662500000000071e-05, 6.511099999999964e-05, 6.548600000000349e-05, 6.559700000000057e-05, 6.562499999999971e-05, 6.618099999999849e-05, 6.615299999999935e-05, 6.538899999999903e-05, 6.506900000000093e-05, 6.526399999999544e-05, 6.562499999999971e-05, 6.529199999999458e-05, 6.601299999999671e-05, 6.540300000000554e-05, 6.583300000000125e-05, 6.512499999999921e-05, 6.562499999999971e-05, 6.505600000000084e-05, 6.50830000000005e-05, 6.491700000000461e-05, 6.649999999999712e-05, 6.577699999999603e-05, 6.505500000000136e-05, 6.604199999999533e-05, 6.477800000000145e-05, 6.477800000000145e-05, 6.666599999999995e-05, 6.568099999999799e-05, 6.631900000000218e-05, 6.616699999999892e-05, 6.545799999999741e-05, 6.536099999999989e-05, 6.547200000000392e-05, 6.651400000000363e-05, 6.619400000000553e-05, 6.47359999999958e-05, 6.491699999999767e-05, 6.582000000000116e-05, 6.562499999999971e-05, 6.544500000000425e-05, 6.477700000000197e-05, 6.569399999999809e-05, 6.641600000000664e-05, 6.601399999999619e-05, 6.588899999999953e-05, 6.486099999999939e-05, 6.637500000000046e-05, 6.626399999999644e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.064" endtime="20201110 08:38:20.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.052" endtime="20201110 08:38:20.070"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.076" endtime="20201110 08:38:20.079"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.085" endtime="20201110 08:38:20.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.080" endtime="20201110 08:38:20.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.072" endtime="20201110 08:38:20.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.547" endtime="20201110 08:38:20.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.546" endtime="20201110 08:38:20.111"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.134" endtime="20201110 08:38:20.155"></status>
</kw>
<msg timestamp="20201110 08:38:20.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.131" endtime="20201110 08:38:20.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.158" endtime="20201110 08:38:20.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.165" endtime="20201110 08:38:20.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.124" endtime="20201110 08:38:20.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.118" endtime="20201110 08:38:20.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.188" endtime="20201110 08:38:20.534"></status>
</kw>
<msg timestamp="20201110 08:38:20.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041200708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041266986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.185" endtime="20201110 08:38:20.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041200708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041266986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.543" endtime="20201110 08:38:20.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.562" endtime="20201110 08:38:20.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.178" endtime="20201110 08:38:20.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.173" endtime="20201110 08:38:20.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.581" level="INFO">${RESULT} = [{'time': 0.041266986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.6277999999996e-05, 'source_diff': 6.6277999999996e-05}, {'time': 0.041362222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6...</msg>
<status status="PASS" starttime="20201110 08:38:20.572" endtime="20201110 08:38:20.582"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.612" level="INFO">${ACCURACY} = {'source_diff': [6.6277999999996e-05, 6.669399999999909e-05, 6.648600000000449e-05, 6.70280000000037e-05, 6.669399999999909e-05, 6.637500000000046e-05, 6.756899999999649e-05, 6.700000000000456e-05, 6....</msg>
<status status="PASS" starttime="20201110 08:38:20.584" endtime="20201110 08:38:20.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.624" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.621" endtime="20201110 08:38:20.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.629" level="INFO">VALUE: [6.6277999999996e-05, 6.669399999999909e-05, 6.648600000000449e-05, 6.70280000000037e-05, 6.669399999999909e-05, 6.637500000000046e-05, 6.756899999999649e-05, 6.700000000000456e-05, 6.588899999999953e-05, 6.6583000000002e-05, 6.667999999999952e-05, 6.662500000000071e-05, 6.730600000000309e-05, 6.61109999999937e-05, 6.716699999999992e-05, 6.642999999999927e-05, 6.618099999999849e-05, 6.718099999999949e-05, 6.638900000000003e-05, 6.609700000000107e-05, 6.719399999999959e-05, 6.661100000000114e-05, 6.620899999999763e-05, 6.754200000000377e-05, 6.698599999999805e-05, 6.637500000000046e-05, 6.624999999999687e-05, 6.745799999999941e-05, 6.631900000000218e-05, 6.72229999999982e-05, 6.661100000000114e-05, 6.572300000000364e-05, 6.591699999999867e-05, 6.611100000000064e-05, 6.687500000000096e-05, 6.620799999999816e-05, 6.658399999999454e-05, 6.704199999999633e-05, 6.719399999999959e-05, 6.591699999999867e-05, 6.733300000000275e-05, 6.624999999999687e-05, 6.650000000000406e-05, 6.580600000000159e-05, 6.702799999999676e-05, 6.704099999999685e-05, 6.615299999999935e-05, 6.663900000000028e-05, 6.659700000000157e-05, 6.716699999999992e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.626" endtime="20201110 08:38:20.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.614" endtime="20201110 08:38:20.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.639" endtime="20201110 08:38:20.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.647" endtime="20201110 08:38:20.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.643" endtime="20201110 08:38:20.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.634" endtime="20201110 08:38:20.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.113" endtime="20201110 08:38:20.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.112" endtime="20201110 08:38:20.673"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.696" endtime="20201110 08:38:20.717"></status>
</kw>
<msg timestamp="20201110 08:38:20.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.693" endtime="20201110 08:38:20.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.721" endtime="20201110 08:38:20.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.727" endtime="20201110 08:38:20.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.686" endtime="20201110 08:38:20.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.680" endtime="20201110 08:38:20.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.751" endtime="20201110 08:38:21.106"></status>
</kw>
<msg timestamp="20201110 08:38:21.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041178681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.747" endtime="20201110 08:38:21.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041110653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041178681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.115" endtime="20201110 08:38:21.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.134" endtime="20201110 08:38:21.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.740" endtime="20201110 08:38:21.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.735" endtime="20201110 08:38:21.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.154" level="INFO">${RESULT} = [{'time': 0.041178681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.80280000000047e-05, 'source_diff': 6.80280000000047e-05}, {'time': 0.041276847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:21.144" endtime="20201110 08:38:21.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.185" level="INFO">${ACCURACY} = {'source_diff': [6.80280000000047e-05, 6.802799999999776e-05, 6.863900000000228e-05, 6.711100000000164e-05, 6.768099999999999e-05, 6.849999999999912e-05, 6.852799999999826e-05, 6.731999999999572e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:21.156" endtime="20201110 08:38:21.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.196" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.194" endtime="20201110 08:38:21.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.201" level="INFO">VALUE: [6.80280000000047e-05, 6.802799999999776e-05, 6.863900000000228e-05, 6.711100000000164e-05, 6.768099999999999e-05, 6.849999999999912e-05, 6.852799999999826e-05, 6.731999999999572e-05, 6.677699999999703e-05, 6.815299999999441e-05, 6.67909999999966e-05, 6.772199999999923e-05, 6.830499999999767e-05, 6.758400000000248e-05, 6.802699999999828e-05, 6.729199999999658e-05, 6.818000000000102e-05, 6.766700000000042e-05, 6.682000000000216e-05, 6.787500000000196e-05, 6.819400000000059e-05, 6.743099999999974e-05, 6.748600000000549e-05, 6.851399999999869e-05, 6.726399999999744e-05, 6.763900000000128e-05, 6.84030000000016e-05, 6.836099999999595e-05, 6.704200000000327e-05, 6.743099999999974e-05, 6.766700000000042e-05, 6.829100000000504e-05, 6.75700000000029e-05, 6.762499999999477e-05, 6.804199999999733e-05, 6.72909999999971e-05, 6.773700000000521e-05, 6.677800000000345e-05, 6.840199999999519e-05, 6.754100000000429e-05, 6.695799999999891e-05, 6.854199999999783e-05, 6.709699999999513e-05, 6.768099999999999e-05, 6.71109999999947e-05, 6.755499999999692e-05, 6.677799999999651e-05, 6.801399999999819e-05, 6.697299999999795e-05, 6.815300000000135e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.198" endtime="20201110 08:38:21.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.187" endtime="20201110 08:38:21.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.211" endtime="20201110 08:38:21.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.220" endtime="20201110 08:38:21.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.215" endtime="20201110 08:38:21.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.207" endtime="20201110 08:38:21.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.675" endtime="20201110 08:38:21.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.674" endtime="20201110 08:38:21.246"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.270" endtime="20201110 08:38:21.292"></status>
</kw>
<msg timestamp="20201110 08:38:21.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.266" endtime="20201110 08:38:21.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.295" endtime="20201110 08:38:21.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.302" endtime="20201110 08:38:21.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.259" endtime="20201110 08:38:21.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.253" endtime="20201110 08:38:21.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.326" endtime="20201110 08:38:21.671"></status>
</kw>
<msg timestamp="20201110 08:38:21.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041682472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:21.322" endtime="20201110 08:38:21.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041682472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041752, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:21.680" endtime="20201110 08:38:21.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.698" endtime="20201110 08:38:21.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.315" endtime="20201110 08:38:21.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.310" endtime="20201110 08:38:21.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.719" level="INFO">${RESULT} = [{'time': 0.041752, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.952799999999926e-05, 'source_diff': 6.952799999999926e-05}, {'time': 0.041851194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:38:21.710" endtime="20201110 08:38:21.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.749" level="INFO">${ACCURACY} = {'source_diff': [6.952799999999926e-05, 6.870800000000066e-05, 6.869500000000056e-05, 6.781899999999674e-05, 6.945800000000141e-05, 6.919400000000159e-05, 6.919400000000159e-05, 6.870900000000013e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:21.721" endtime="20201110 08:38:21.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.760" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.758" endtime="20201110 08:38:21.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.765" level="INFO">VALUE: [6.952799999999926e-05, 6.870800000000066e-05, 6.869500000000056e-05, 6.781899999999674e-05, 6.945800000000141e-05, 6.919400000000159e-05, 6.919400000000159e-05, 6.870900000000013e-05, 6.887499999999602e-05, 6.96109999999972e-05, 6.901400000000613e-05, 6.780499999999717e-05, 6.952799999999926e-05, 6.833399999999629e-05, 6.938900000000303e-05, 6.777799999999751e-05, 6.918100000000149e-05, 6.95559999999984e-05, 6.884700000000382e-05, 6.877799999999851e-05, 6.824999999999887e-05, 6.952699999999978e-05, 6.86109999999962e-05, 6.95700000000049e-05, 6.938900000000303e-05, 6.952799999999926e-05, 6.851399999999869e-05, 6.809800000000255e-05, 6.959699999999763e-05, 6.808299999999656e-05, 6.936100000000389e-05, 6.919399999999465e-05, 6.886200000000287e-05, 6.770799999999966e-05, 6.838900000000203e-05, 6.841700000000117e-05, 6.794400000000034e-05, 6.826399999999844e-05, 6.774999999999837e-05, 6.87359999999998e-05, 6.966600000000295e-05, 6.797199999999948e-05, 6.951399999999969e-05, 6.81109999999957e-05, 6.937499999999652e-05, 6.920800000000116e-05, 6.872200000000023e-05, 6.951399999999969e-05, 6.840200000000213e-05, 6.908400000000398e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.762" endtime="20201110 08:38:21.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.751" endtime="20201110 08:38:21.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.775" endtime="20201110 08:38:21.777"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.783" endtime="20201110 08:38:21.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.778" endtime="20201110 08:38:21.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.770" endtime="20201110 08:38:21.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.248" endtime="20201110 08:38:21.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.247" endtime="20201110 08:38:21.809"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.831" endtime="20201110 08:38:21.849"></status>
</kw>
<msg timestamp="20201110 08:38:21.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.828" endtime="20201110 08:38:21.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.853" endtime="20201110 08:38:21.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.859" endtime="20201110 08:38:21.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.821" endtime="20201110 08:38:21.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.815" endtime="20201110 08:38:21.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.884" endtime="20201110 08:38:22.220"></status>
</kw>
<msg timestamp="20201110 08:38:22.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.880" endtime="20201110 08:38:22.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039995736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040065597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.230" endtime="20201110 08:38:22.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.248" endtime="20201110 08:38:22.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.872" endtime="20201110 08:38:22.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.867" endtime="20201110 08:38:22.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.267" level="INFO">${RESULT} = [{'time': 0.040065597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986100000000439e-05, 'source_diff': 6.986100000000439e-05}, {'time': 0.040165792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.258" endtime="20201110 08:38:22.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.298" level="INFO">${ACCURACY} = {'source_diff': [6.986100000000439e-05, 6.879199999999808e-05, 6.897200000000048e-05, 7.016699999999598e-05, 7.052800000000026e-05, 7.048700000000102e-05, 6.969399999999515e-05, 6.969400000000209e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:22.269" endtime="20201110 08:38:22.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.309" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.306" endtime="20201110 08:38:22.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.314" level="INFO">VALUE: [6.986100000000439e-05, 6.879199999999808e-05, 6.897200000000048e-05, 7.016699999999598e-05, 7.052800000000026e-05, 7.048700000000102e-05, 6.969399999999515e-05, 6.969400000000209e-05, 6.968000000000252e-05, 6.943000000000227e-05, 6.899999999999962e-05, 6.908299999999756e-05, 6.927699999999953e-05, 7.001400000000019e-05, 6.909699999999713e-05, 7.019399999999565e-05, 7.054199999999983e-05, 6.970899999999419e-05, 7.000000000000062e-05, 6.983399999999779e-05, 6.963900000000328e-05, 7.050000000000112e-05, 6.950000000000012e-05, 6.883400000000373e-05, 6.929199999999858e-05, 6.897200000000048e-05, 6.906999999999747e-05, 7.050000000000112e-05, 6.97360000000008e-05, 6.897200000000048e-05, 6.998700000000052e-05, 6.990299999999616e-05, 7.038900000000403e-05, 6.944499999999437e-05, 6.906899999999799e-05, 6.941699999999523e-05, 6.898600000000005e-05, 7.026400000000044e-05, 7.020799999999522e-05, 7.055499999999992e-05, 6.908299999999756e-05, 6.931899999999824e-05, 6.966600000000295e-05, 6.872200000000023e-05, 7.017999999999608e-05, 6.880600000000459e-05, 7.017999999999608e-05, 6.936100000000389e-05, 7.050000000000112e-05, 6.90979999999966e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.311" endtime="20201110 08:38:22.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.299" endtime="20201110 08:38:22.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.324" endtime="20201110 08:38:22.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.332" endtime="20201110 08:38:22.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.328" endtime="20201110 08:38:22.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.319" endtime="20201110 08:38:22.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.811" endtime="20201110 08:38:22.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.810" endtime="20201110 08:38:22.358"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.381" endtime="20201110 08:38:22.400"></status>
</kw>
<msg timestamp="20201110 08:38:22.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.377" endtime="20201110 08:38:22.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.403" endtime="20201110 08:38:22.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.409" endtime="20201110 08:38:22.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.370" endtime="20201110 08:38:22.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.364" endtime="20201110 08:38:22.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.438" endtime="20201110 08:38:22.834"></status>
</kw>
<msg timestamp="20201110 08:38:22.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.434" endtime="20201110 08:38:22.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040615972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040687014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.843" endtime="20201110 08:38:22.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.862" endtime="20201110 08:38:22.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.422" endtime="20201110 08:38:22.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.417" endtime="20201110 08:38:22.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.881" level="INFO">${RESULT} = [{'time': 0.040687014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.104200000000033e-05, 'source_diff': 7.104200000000033e-05}, {'time': 0.040790208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.872" endtime="20201110 08:38:22.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.911" level="INFO">${ACCURACY} = {'source_diff': [7.104200000000033e-05, 7.009699999999813e-05, 7.150000000000212e-05, 7.119399999999665e-05, 6.970800000000166e-05, 7.068100000000299e-05, 7.084699999999888e-05, 7.098599999999511e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:22.883" endtime="20201110 08:38:22.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.923" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.920" endtime="20201110 08:38:22.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.928" level="INFO">VALUE: [7.104200000000033e-05, 7.009699999999813e-05, 7.150000000000212e-05, 7.119399999999665e-05, 6.970800000000166e-05, 7.068100000000299e-05, 7.084699999999888e-05, 7.098599999999511e-05, 7.041699999999623e-05, 7.022200000000173e-05, 6.973700000000027e-05, 7.150000000000212e-05, 6.975000000000037e-05, 6.97909999999996e-05, 7.120899999999569e-05, 7.086099999999845e-05, 7.150000000000212e-05, 7.069499999999562e-05, 6.995800000000191e-05, 7.161100000000614e-05, 7.12360000000023e-05, 7.045800000000241e-05, 7.101399999999425e-05, 7.137499999999852e-05, 7.048599999999461e-05, 7.119500000000306e-05, 7.102800000000076e-05, 7.133399999999929e-05, 7.138899999999809e-05, 7.012500000000421e-05, 7.090299999999716e-05, 7.045800000000241e-05, 7.100000000000162e-05, 7.118100000000349e-05, 7.138899999999809e-05, 6.972200000000123e-05, 7.00830000000055e-05, 7.06109999999982e-05, 7.100000000000162e-05, 7.118100000000349e-05, 7.019400000000259e-05, 7.044500000000231e-05, 7.040299999999666e-05, 7.029199999999958e-05, 6.995900000000138e-05, 7.04439999999959e-05, 7.041700000000317e-05, 7.136099999999895e-05, 7.027800000000001e-05, 7.012499999999727e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.925" endtime="20201110 08:38:22.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.913" endtime="20201110 08:38:22.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.939" endtime="20201110 08:38:22.941"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.947" endtime="20201110 08:38:22.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.943" endtime="20201110 08:38:22.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.934" endtime="20201110 08:38:22.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.360" endtime="20201110 08:38:22.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.359" endtime="20201110 08:38:22.973"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.996" endtime="20201110 08:38:23.015"></status>
</kw>
<msg timestamp="20201110 08:38:23.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.993" endtime="20201110 08:38:23.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.018" endtime="20201110 08:38:23.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.024" endtime="20201110 08:38:23.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.985" endtime="20201110 08:38:23.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.979" endtime="20201110 08:38:23.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.048" endtime="20201110 08:38:23.382"></status>
</kw>
<msg timestamp="20201110 08:38:23.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040739778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040812306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.044" endtime="20201110 08:38:23.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040739778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040812306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.392" endtime="20201110 08:38:23.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.410" endtime="20201110 08:38:23.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.037" endtime="20201110 08:38:23.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.033" endtime="20201110 08:38:23.419"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.429" level="INFO">${RESULT} = [{'time': 0.040812306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.252800000000226e-05, 'source_diff': 7.252800000000226e-05}, {'time': 0.040916528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:23.420" endtime="20201110 08:38:23.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.460" level="INFO">${ACCURACY} = {'source_diff': [7.252800000000226e-05, 7.115299999999741e-05, 7.079200000000008e-05, 7.254200000000183e-05, 7.241699999999823e-05, 7.113900000000478e-05, 7.167999999999758e-05, 7.251400000000269e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:23.431" endtime="20201110 08:38:23.460"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.471" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.468" endtime="20201110 08:38:23.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.476" level="INFO">VALUE: [7.252800000000226e-05, 7.115299999999741e-05, 7.079200000000008e-05, 7.254200000000183e-05, 7.241699999999823e-05, 7.113900000000478e-05, 7.167999999999758e-05, 7.251400000000269e-05, 7.126400000000144e-05, 7.252799999999532e-05, 7.238799999999962e-05, 7.208400000000004e-05, 7.251400000000269e-05, 7.081899999999974e-05, 7.254200000000183e-05, 7.148600000000255e-05, 7.238899999999909e-05, 7.263800000000681e-05, 7.151299999999527e-05, 7.184699999999988e-05, 7.191699999999773e-05, 7.201399999999525e-05, 7.127800000000101e-05, 7.138900000000503e-05, 7.145800000000341e-05, 7.201400000000219e-05, 7.205499999999448e-05, 7.238799999999962e-05, 7.186099999999945e-05, 7.076400000000094e-05, 7.190299999999816e-05, 7.141700000000417e-05, 7.206999999999353e-05, 7.091700000000367e-05, 7.081899999999974e-05, 7.126300000000196e-05, 7.254200000000183e-05, 7.222200000000373e-05, 7.141699999999723e-05, 7.169399999999715e-05, 7.184699999999988e-05, 7.219399999999765e-05, 7.08480000000053e-05, 7.162499999999877e-05, 7.127700000000153e-05, 7.100000000000162e-05, 7.188899999999859e-05, 7.126400000000144e-05, 7.175000000000237e-05, 7.162499999999877e-05]</msg>
<status status="PASS" starttime="20201110 08:38:23.473" endtime="20201110 08:38:23.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.461" endtime="20201110 08:38:23.479"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.486" endtime="20201110 08:38:23.488"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.494" endtime="20201110 08:38:23.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.490" endtime="20201110 08:38:23.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.481" endtime="20201110 08:38:23.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.975" endtime="20201110 08:38:23.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.974" endtime="20201110 08:38:23.520"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.542" endtime="20201110 08:38:23.561"></status>
</kw>
<msg timestamp="20201110 08:38:23.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.539" endtime="20201110 08:38:23.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.565" endtime="20201110 08:38:23.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.571" endtime="20201110 08:38:23.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.532" endtime="20201110 08:38:23.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.526" endtime="20201110 08:38:23.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.594" endtime="20201110 08:38:23.931"></status>
</kw>
<msg timestamp="20201110 08:38:23.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040429236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.591" endtime="20201110 08:38:23.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040429236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040502903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.940" endtime="20201110 08:38:23.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.959" endtime="20201110 08:38:23.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.584" endtime="20201110 08:38:23.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.579" endtime="20201110 08:38:23.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.981" level="INFO">${RESULT} = [{'time': 0.040502903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.366699999999948e-05, 'source_diff': 7.366699999999948e-05}, {'time': 0.040603097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:23.972" endtime="20201110 08:38:23.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.088" level="INFO">${ACCURACY} = {'source_diff': [7.366699999999948e-05, 7.209700000000013e-05, 7.305499999999548e-05, 7.227800000000201e-05, 7.179199999999414e-05, 7.191599999999826e-05, 7.177800000000151e-05, 7.337500000000052e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:23.983" endtime="20201110 08:38:24.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.099" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.096" endtime="20201110 08:38:24.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.104" level="INFO">VALUE: [7.366699999999948e-05, 7.209700000000013e-05, 7.305499999999548e-05, 7.227800000000201e-05, 7.179199999999414e-05, 7.191599999999826e-05, 7.177800000000151e-05, 7.337500000000052e-05, 7.194499999999687e-05, 7.302699999999634e-05, 7.232000000000072e-05, 7.241599999999876e-05, 7.268100000000499e-05, 7.254200000000183e-05, 7.223599999999636e-05, 7.308400000000104e-05, 7.230600000000115e-05, 7.270799999999772e-05, 7.351400000000369e-05, 7.352800000000326e-05, 7.305499999999548e-05, 7.208300000000056e-05, 7.334700000000138e-05, 7.301399999999625e-05, 7.341699999999923e-05, 7.177700000000203e-05, 7.283300000000131e-05, 7.337500000000052e-05, 7.282000000000122e-05, 7.336100000000095e-05, 7.241699999999823e-05, 7.348600000000455e-05, 7.245900000000388e-05, 7.267999999999858e-05, 7.318100000000549e-05, 7.2069000000001e-05, 7.302800000000276e-05, 7.25690000000015e-05, 7.224999999999593e-05, 7.266699999999848e-05, 7.234700000000038e-05, 7.336100000000095e-05, 7.262499999999977e-05, 7.304100000000285e-05, 7.244499999999737e-05, 7.36110000000012e-05, 7.24439999999979e-05, 7.366699999999948e-05, 7.174999999999543e-05, 7.227800000000201e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.101" endtime="20201110 08:38:24.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.090" endtime="20201110 08:38:24.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.114" endtime="20201110 08:38:24.116"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.122" endtime="20201110 08:38:24.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.118" endtime="20201110 08:38:24.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.109" endtime="20201110 08:38:24.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.522" endtime="20201110 08:38:24.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.521" endtime="20201110 08:38:24.148"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.172" endtime="20201110 08:38:24.191"></status>
</kw>
<msg timestamp="20201110 08:38:24.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.167" endtime="20201110 08:38:24.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.194" endtime="20201110 08:38:24.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.200" endtime="20201110 08:38:24.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.160" endtime="20201110 08:38:24.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.154" endtime="20201110 08:38:24.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.224" endtime="20201110 08:38:24.559"></status>
</kw>
<msg timestamp="20201110 08:38:24.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041720958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.221" endtime="20201110 08:38:24.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041647833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041720958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.568" endtime="20201110 08:38:24.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.587" endtime="20201110 08:38:24.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.213" endtime="20201110 08:38:24.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.208" endtime="20201110 08:38:24.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.606" level="INFO">${RESULT} = [{'time': 0.041720958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.312500000000027e-05, 'source_diff': 7.312500000000027e-05}, {'time': 0.041824153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:24.596" endtime="20201110 08:38:24.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.638" level="INFO">${ACCURACY} = {'source_diff': [7.312500000000027e-05, 7.40560000000029e-05, 7.365299999999991e-05, 7.388900000000059e-05, 7.384699999999494e-05, 7.369499999999862e-05, 7.377800000000351e-05, 7.443000000000033e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:24.608" endtime="20201110 08:38:24.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.648" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.646" endtime="20201110 08:38:24.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.654" level="INFO">VALUE: [7.312500000000027e-05, 7.40560000000029e-05, 7.365299999999991e-05, 7.388900000000059e-05, 7.384699999999494e-05, 7.369499999999862e-05, 7.377800000000351e-05, 7.443000000000033e-05, 7.315299999999941e-05, 7.327800000000301e-05, 7.440200000000119e-05, 7.357000000000197e-05, 7.365299999999991e-05, 7.369399999999915e-05, 7.44439999999999e-05, 7.36110000000012e-05, 7.286100000000045e-05, 7.277800000000251e-05, 7.423599999999836e-05, 7.295799999999797e-05, 7.363900000000034e-05, 7.423599999999836e-05, 7.370799999999872e-05, 7.415200000000094e-05, 7.37360000000048e-05, 7.436099999999501e-05, 7.387500000000102e-05, 7.444499999999937e-05, 7.317999999999908e-05, 7.312500000000027e-05, 7.419399999999965e-05, 7.4069000000003e-05, 7.404100000000385e-05, 7.44309999999998e-05, 7.331900000000224e-05, 7.408300000000256e-05, 7.372199999999829e-05, 7.437500000000152e-05, 7.273599999999686e-05, 7.451400000000469e-05, 7.348700000000402e-05, 7.308300000000156e-05, 7.277700000000303e-05, 7.275000000000337e-05, 7.348600000000455e-05, 7.386099999999451e-05, 7.362500000000077e-05, 7.308300000000156e-05, 7.399999999999768e-05, 7.370800000000566e-05]</msg>
<status status="PASS" starttime="20201110 08:38:24.651" endtime="20201110 08:38:24.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.640" endtime="20201110 08:38:24.657"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.663" endtime="20201110 08:38:24.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.672" endtime="20201110 08:38:24.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.667" endtime="20201110 08:38:24.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.659" endtime="20201110 08:38:24.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.150" endtime="20201110 08:38:24.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.149" endtime="20201110 08:38:24.697"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.720" endtime="20201110 08:38:24.740"></status>
</kw>
<msg timestamp="20201110 08:38:24.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.717" endtime="20201110 08:38:24.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.744" endtime="20201110 08:38:24.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.750" endtime="20201110 08:38:24.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.710" endtime="20201110 08:38:24.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.704" endtime="20201110 08:38:24.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.773" endtime="20201110 08:38:25.106"></status>
</kw>
<msg timestamp="20201110 08:38:25.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041830903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041904653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.770" endtime="20201110 08:38:25.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041830903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041904653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.115" endtime="20201110 08:38:25.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.134" endtime="20201110 08:38:25.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.762" endtime="20201110 08:38:25.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.758" endtime="20201110 08:38:25.141"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.151" level="INFO">${RESULT} = [{'time': 0.041904653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.374999999999743e-05, 'source_diff': 7.374999999999743e-05}, {'time': 0.042007819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:25.142" endtime="20201110 08:38:25.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.181" level="INFO">${ACCURACY} = {'source_diff': [7.374999999999743e-05, 7.469400000000015e-05, 7.524999999999893e-05, 7.499999999999868e-05, 7.395900000000538e-05, 7.44309999999998e-05, 7.440300000000066e-05, 7.461099999999526e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:25.153" endtime="20201110 08:38:25.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.192" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.190" endtime="20201110 08:38:25.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.197" level="INFO">VALUE: [7.374999999999743e-05, 7.469400000000015e-05, 7.524999999999893e-05, 7.499999999999868e-05, 7.395900000000538e-05, 7.44309999999998e-05, 7.440300000000066e-05, 7.461099999999526e-05, 7.529199999999764e-05, 7.520800000000022e-05, 7.463900000000134e-05, 7.516700000000098e-05, 7.392999999999983e-05, 7.472299999999876e-05, 7.40839999999951e-05, 7.474999999999843e-05, 7.415300000000041e-05, 7.398599999999811e-05, 7.433400000000229e-05, 7.447199999999904e-05, 7.481999999999628e-05, 7.522199999999979e-05, 7.53890000000021e-05, 7.463900000000134e-05, 7.490200000000169e-05, 7.444500000000631e-05, 7.434700000000238e-05, 7.424999999999793e-05, 7.550000000000612e-05, 7.468100000000005e-05, 7.392999999999983e-05, 7.440300000000066e-05, 7.470799999999972e-05, 7.49440000000004e-05, 7.395799999999897e-05, 7.413900000000084e-05, 7.397199999999854e-05, 7.555499999999798e-05, 7.515300000000141e-05, 7.516700000000098e-05, 7.445799999999947e-05, 7.380600000000265e-05, 7.552799999999832e-05, 7.46110000000022e-05, 7.46389999999944e-05, 7.487500000000202e-05, 7.501399999999825e-05, 7.552699999999885e-05, 7.537499999999558e-05, 7.430499999999673e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.194" endtime="20201110 08:38:25.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.183" endtime="20201110 08:38:25.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.217" endtime="20201110 08:38:25.220"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.227" endtime="20201110 08:38:25.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.221" endtime="20201110 08:38:25.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.213" endtime="20201110 08:38:25.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.700" endtime="20201110 08:38:25.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.698" endtime="20201110 08:38:25.253"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.275" endtime="20201110 08:38:25.294"></status>
</kw>
<msg timestamp="20201110 08:38:25.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.272" endtime="20201110 08:38:25.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.297" endtime="20201110 08:38:25.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.303" endtime="20201110 08:38:25.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.265" endtime="20201110 08:38:25.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.259" endtime="20201110 08:38:25.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.328" endtime="20201110 08:38:25.661"></status>
</kw>
<msg timestamp="20201110 08:38:25.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0398445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039920389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:25.325" endtime="20201110 08:38:25.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0398445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039920389, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:25.670" endtime="20201110 08:38:25.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.689" endtime="20201110 08:38:25.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.316" endtime="20201110 08:38:25.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.311" endtime="20201110 08:38:25.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.706" level="INFO">${RESULT} = [{'time': 0.039920389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.58890000000026e-05, 'source_diff': 7.58890000000026e-05}, {'time': 0.040026583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:25.697" endtime="20201110 08:38:25.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.737" level="INFO">${ACCURACY} = {'source_diff': [7.58890000000026e-05, 7.666599999999607e-05, 7.650000000000018e-05, 7.48189999999968e-05, 7.5763999999999e-05, 7.480600000000365e-05, 7.629199999999864e-05, 7.497199999999954e-05, 7.6...</msg>
<status status="PASS" starttime="20201110 08:38:25.708" endtime="20201110 08:38:25.737"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.748" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.746" endtime="20201110 08:38:25.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.753" level="INFO">VALUE: [7.58890000000026e-05, 7.666599999999607e-05, 7.650000000000018e-05, 7.48189999999968e-05, 7.5763999999999e-05, 7.480600000000365e-05, 7.629199999999864e-05, 7.497199999999954e-05, 7.619400000000165e-05, 7.54440000000009e-05, 7.618100000000155e-05, 7.63890000000031e-05, 7.609800000000361e-05, 7.599999999999968e-05, 7.547200000000004e-05, 7.637500000000352e-05, 7.599999999999968e-05, 7.530499999999773e-05, 7.58890000000026e-05, 7.498599999999911e-05, 7.656899999999855e-05, 7.633399999999735e-05, 7.491700000000073e-05, 7.477800000000451e-05, 7.597200000000054e-05, 7.629199999999864e-05, 7.559700000000363e-05, 7.637500000000352e-05, 7.494399999999346e-05, 7.54440000000009e-05, 7.538899999999515e-05, 7.566700000000148e-05, 7.509700000000313e-05, 7.569500000000062e-05, 7.480499999999723e-05, 7.618100000000155e-05, 7.652699999999985e-05, 7.494499999999987e-05, 7.495799999999997e-05, 7.586200000000293e-05, 7.524999999999893e-05, 7.5763999999999e-05, 7.63189999999983e-05, 7.566600000000201e-05, 7.651399999999975e-05, 7.534700000000338e-05, 7.622200000000079e-05, 7.604099999999892e-05, 7.533300000000381e-05, 7.524999999999893e-05]</msg>
<status status="PASS" starttime="20201110 08:38:25.750" endtime="20201110 08:38:25.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.739" endtime="20201110 08:38:25.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.763" endtime="20201110 08:38:25.765"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.771" endtime="20201110 08:38:25.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.767" endtime="20201110 08:38:25.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.758" endtime="20201110 08:38:25.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.255" endtime="20201110 08:38:25.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.253" endtime="20201110 08:38:25.797"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.820" endtime="20201110 08:38:25.839"></status>
</kw>
<msg timestamp="20201110 08:38:25.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.816" endtime="20201110 08:38:25.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.842" endtime="20201110 08:38:25.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.848" endtime="20201110 08:38:25.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.809" endtime="20201110 08:38:25.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.804" endtime="20201110 08:38:25.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.872" endtime="20201110 08:38:26.213"></status>
</kw>
<msg timestamp="20201110 08:38:26.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040559708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.868" endtime="20201110 08:38:26.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040559708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.222" endtime="20201110 08:38:26.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.241" endtime="20201110 08:38:26.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.861" endtime="20201110 08:38:26.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.856" endtime="20201110 08:38:26.248"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.258" level="INFO">${RESULT} = [{'time': 0.040559708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.75969999999987e-05, 'source_diff': 7.75969999999987e-05}, {'time': 0.040667903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:26.249" endtime="20201110 08:38:26.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.291" level="INFO">${ACCURACY} = {'source_diff': [7.75969999999987e-05, 7.730599999999921e-05, 7.669400000000215e-05, 7.597200000000054e-05, 7.719499999999518e-05, 7.624999999999993e-05, 7.723600000000136e-05, 7.747299999999457e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:26.260" endtime="20201110 08:38:26.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.302" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.300" endtime="20201110 08:38:26.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.307" level="INFO">VALUE: [7.75969999999987e-05, 7.730599999999921e-05, 7.669400000000215e-05, 7.597200000000054e-05, 7.719499999999518e-05, 7.624999999999993e-05, 7.723600000000136e-05, 7.747299999999457e-05, 7.669500000000162e-05, 7.758299999999912e-05, 7.615300000000241e-05, 7.740299999999672e-05, 7.627799999999907e-05, 7.750000000000118e-05, 7.701400000000025e-05, 7.754100000000042e-05, 7.584700000000388e-05, 7.601399999999925e-05, 7.573599999999986e-05, 7.68890000000036e-05, 7.57769999999991e-05, 7.663900000000334e-05, 7.665300000000291e-05, 7.627799999999907e-05, 7.66389999999964e-05, 7.605499999999848e-05, 7.59589999999935e-05, 7.738899999999715e-05, 7.717999999999614e-05, 7.595900000000044e-05, 7.666700000000248e-05, 7.7069000000006e-05, 7.641700000000223e-05, 7.645800000000147e-05, 7.583299999999737e-05, 7.675000000000043e-05, 7.574999999999943e-05, 7.612500000000327e-05, 7.576400000000594e-05, 7.615300000000241e-05, 7.677799999999957e-05, 7.624999999999993e-05, 7.748600000000161e-05, 7.592999999999489e-05, 7.647300000000051e-05, 7.722199999999485e-05, 7.629199999999864e-05, 7.574999999999943e-05, 7.704199999999939e-05, 7.716699999999604e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.304" endtime="20201110 08:38:26.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.293" endtime="20201110 08:38:26.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.317" endtime="20201110 08:38:26.319"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.325" endtime="20201110 08:38:26.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.321" endtime="20201110 08:38:26.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.312" endtime="20201110 08:38:26.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.799" endtime="20201110 08:38:26.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.798" endtime="20201110 08:38:26.351"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.374" endtime="20201110 08:38:26.394"></status>
</kw>
<msg timestamp="20201110 08:38:26.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.370" endtime="20201110 08:38:26.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.398" endtime="20201110 08:38:26.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.404" endtime="20201110 08:38:26.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.363" endtime="20201110 08:38:26.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.357" endtime="20201110 08:38:26.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.427" endtime="20201110 08:38:26.776"></status>
</kw>
<msg timestamp="20201110 08:38:26.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040525083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.424" endtime="20201110 08:38:26.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040525083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.786" endtime="20201110 08:38:26.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.804" endtime="20201110 08:38:26.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.417" endtime="20201110 08:38:26.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.412" endtime="20201110 08:38:26.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.823" level="INFO">${RESULT} = [{'time': 0.040525083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.719400000000265e-05, 'source_diff': 7.719400000000265e-05}, {'time': 0.040636306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:26.814" endtime="20201110 08:38:26.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.854" level="INFO">${ACCURACY} = {'source_diff': [7.719400000000265e-05, 7.836199999999849e-05, 7.74169999999963e-05, 7.823600000000236e-05, 7.68189999999988e-05, 7.741700000000323e-05, 7.787499999999808e-05, 7.773600000000186e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:38:26.825" endtime="20201110 08:38:26.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.864" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.862" endtime="20201110 08:38:26.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.870" level="INFO">VALUE: [7.719400000000265e-05, 7.836199999999849e-05, 7.74169999999963e-05, 7.823600000000236e-05, 7.68189999999988e-05, 7.741700000000323e-05, 7.787499999999808e-05, 7.773600000000186e-05, 7.675000000000043e-05, 7.701400000000025e-05, 7.69440000000024e-05, 7.709700000000513e-05, 7.849999999999524e-05, 7.695800000000197e-05, 7.787499999999808e-05, 7.72640000000005e-05, 7.729199999999964e-05, 7.680599999999871e-05, 7.712499999999733e-05, 7.74310000000028e-05, 7.798599999999517e-05, 7.769400000000315e-05, 7.770900000000219e-05, 7.790300000000416e-05, 7.818099999999661e-05, 7.850000000000218e-05, 7.834799999999892e-05, 7.751400000000075e-05, 7.758300000000606e-05, 7.825000000000193e-05, 7.818100000000355e-05, 7.693000000000283e-05, 7.723600000000136e-05, 7.74169999999963e-05, 7.857000000000003e-05, 7.836099999999901e-05, 7.784799999999842e-05, 7.733399999999835e-05, 7.851400000000175e-05, 7.805500000000049e-05, 7.833299999999987e-05, 7.786099999999851e-05, 7.77369999999944e-05, 7.823600000000236e-05, 7.798599999999517e-05, 7.806900000000006e-05, 7.85839999999996e-05, 7.838899999999815e-05, 7.784699999999894e-05, 7.6764e-05]</msg>
<status status="PASS" starttime="20201110 08:38:26.867" endtime="20201110 08:38:26.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.855" endtime="20201110 08:38:26.873"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.880" endtime="20201110 08:38:26.882"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.888" endtime="20201110 08:38:26.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.883" endtime="20201110 08:38:26.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.875" endtime="20201110 08:38:26.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.353" endtime="20201110 08:38:26.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.352" endtime="20201110 08:38:26.914"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.937" endtime="20201110 08:38:26.957"></status>
</kw>
<msg timestamp="20201110 08:38:26.959" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.933" endtime="20201110 08:38:26.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.961" endtime="20201110 08:38:26.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.967" endtime="20201110 08:38:26.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.926" endtime="20201110 08:38:26.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.920" endtime="20201110 08:38:26.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.990" endtime="20201110 08:38:27.336"></status>
</kw>
<msg timestamp="20201110 08:38:27.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040711653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040790389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.987" endtime="20201110 08:38:27.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040711653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040790389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.346" endtime="20201110 08:38:27.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.364" endtime="20201110 08:38:27.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.980" endtime="20201110 08:38:27.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.975" endtime="20201110 08:38:27.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.383" level="INFO">${RESULT} = [{'time': 0.040790389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.873600000000286e-05, 'source_diff': 7.873600000000286e-05}, {'time': 0.040901597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.374" endtime="20201110 08:38:27.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.413" level="INFO">${ACCURACY} = {'source_diff': [7.873600000000286e-05, 7.956899999999462e-05, 7.84310000000038e-05, 7.86389999999984e-05, 7.937499999999958e-05, 7.948599999999667e-05, 7.888899999999865e-05, 7.858300000000012e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:38:27.385" endtime="20201110 08:38:27.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.424" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.422" endtime="20201110 08:38:27.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.429" level="INFO">VALUE: [7.873600000000286e-05, 7.956899999999462e-05, 7.84310000000038e-05, 7.86389999999984e-05, 7.937499999999958e-05, 7.948599999999667e-05, 7.888899999999865e-05, 7.858300000000012e-05, 7.937499999999958e-05, 7.797300000000201e-05, 7.819500000000312e-05, 7.812499999999833e-05, 7.938899999999915e-05, 7.950000000000318e-05, 7.934700000000044e-05, 7.883399999999985e-05, 7.969500000000462e-05, 7.827799999999413e-05, 7.833299999999987e-05, 7.81389999999979e-05, 7.81389999999979e-05, 7.79719999999956e-05, 7.89310000000043e-05, 7.895799999999703e-05, 7.869399999999721e-05, 7.940199999999925e-05, 7.900000000000268e-05, 7.919400000000465e-05, 7.84169999999973e-05, 7.779200000000014e-05, 7.79440000000034e-05, 7.951400000000275e-05, 7.906900000000106e-05, 7.952800000000232e-05, 7.89169999999978e-05, 7.937499999999958e-05, 7.916599999999857e-05, 7.812500000000527e-05, 7.834699999999944e-05, 7.904100000000192e-05, 7.866699999999754e-05, 7.866700000000448e-05, 7.84169999999973e-05, 7.867999999999764e-05, 7.866700000000448e-05, 7.858300000000012e-05, 7.780599999999971e-05, 7.856900000000056e-05, 7.857000000000003e-05, 7.779200000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.426" endtime="20201110 08:38:27.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.415" endtime="20201110 08:38:27.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.438" endtime="20201110 08:38:27.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.447" endtime="20201110 08:38:27.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.442" endtime="20201110 08:38:27.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.434" endtime="20201110 08:38:27.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.916" endtime="20201110 08:38:27.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.915" endtime="20201110 08:38:27.472"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.495" endtime="20201110 08:38:27.514"></status>
</kw>
<msg timestamp="20201110 08:38:27.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.492" endtime="20201110 08:38:27.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.518" endtime="20201110 08:38:27.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.525" endtime="20201110 08:38:27.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.484" endtime="20201110 08:38:27.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.479" endtime="20201110 08:38:27.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.548" endtime="20201110 08:38:27.879"></status>
</kw>
<msg timestamp="20201110 08:38:27.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040048444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.545" endtime="20201110 08:38:27.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039967861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040048444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.888" endtime="20201110 08:38:27.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.906" endtime="20201110 08:38:27.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.538" endtime="20201110 08:38:27.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.533" endtime="20201110 08:38:27.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.925" level="INFO">${RESULT} = [{'time': 0.040048444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.058300000000213e-05, 'source_diff': 8.058300000000213e-05}, {'time': 0.040160653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.916" endtime="20201110 08:38:27.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.955" level="INFO">${ACCURACY} = {'source_diff': [8.058300000000213e-05, 7.877799999999463e-05, 7.912499999999933e-05, 7.987500000000008e-05, 7.96389999999994e-05, 7.891700000000473e-05, 8.036100000000101e-05, 7.880500000000124e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:27.927" endtime="20201110 08:38:27.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.966" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.963" endtime="20201110 08:38:27.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.971" level="INFO">VALUE: [8.058300000000213e-05, 7.877799999999463e-05, 7.912499999999933e-05, 7.987500000000008e-05, 7.96389999999994e-05, 7.891700000000473e-05, 8.036100000000101e-05, 7.880500000000124e-05, 7.973600000000386e-05, 8.007000000000153e-05, 7.93469999999935e-05, 7.95970000000007e-05, 7.936100000000001e-05, 7.911099999999976e-05, 7.937499999999958e-05, 7.988899999999965e-05, 8.030500000000274e-05, 7.983400000000085e-05, 7.927800000000207e-05, 7.905499999999455e-05, 8.001399999999631e-05, 7.990299999999922e-05, 7.95970000000007e-05, 7.945799999999753e-05, 7.967999999999864e-05, 8.05269999999969e-05, 7.879100000000167e-05, 7.876399999999506e-05, 7.883399999999985e-05, 7.87919999999942e-05, 7.986100000000051e-05, 7.876300000000253e-05, 7.934700000000044e-05, 8.036199999999355e-05, 7.993099999999836e-05, 7.947300000000351e-05, 7.930600000000121e-05, 7.96389999999994e-05, 8.070799999999878e-05, 7.912499999999933e-05, 7.976299999999659e-05, 8.061100000000126e-05, 7.993099999999836e-05, 7.94310000000048e-05, 7.932000000000078e-05, 7.973599999999692e-05, 8.055600000000246e-05, 7.911099999999976e-05, 7.930600000000121e-05, 7.966699999999854e-05]</msg>
<status status="PASS" starttime="20201110 08:38:27.968" endtime="20201110 08:38:27.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.957" endtime="20201110 08:38:27.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.980" endtime="20201110 08:38:27.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.988" endtime="20201110 08:38:28.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.984" endtime="20201110 08:38:28.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.976" endtime="20201110 08:38:28.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.475" endtime="20201110 08:38:28.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.473" endtime="20201110 08:38:28.014"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.037" endtime="20201110 08:38:28.056"></status>
</kw>
<msg timestamp="20201110 08:38:28.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.034" endtime="20201110 08:38:28.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.059" endtime="20201110 08:38:28.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.065" endtime="20201110 08:38:28.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.027" endtime="20201110 08:38:28.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.021" endtime="20201110 08:38:28.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.094" endtime="20201110 08:38:28.440"></status>
</kw>
<msg timestamp="20201110 08:38:28.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040256625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.091" endtime="20201110 08:38:28.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040176181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040256625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.449" endtime="20201110 08:38:28.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.468" endtime="20201110 08:38:28.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.083" endtime="20201110 08:38:28.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.078" endtime="20201110 08:38:28.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.487" level="INFO">${RESULT} = [{'time': 0.040256625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.044399999999896e-05, 'source_diff': 8.044399999999896e-05}, {'time': 0.040370819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:28.478" endtime="20201110 08:38:28.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.520" level="INFO">${ACCURACY} = {'source_diff': [8.044399999999896e-05, 8.058300000000213e-05, 8.090300000000022e-05, 8.048599999999767e-05, 8.01389999999999e-05, 8.133300000000288e-05, 8.068099999999911e-05, 7.972199999999735e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:28.489" endtime="20201110 08:38:28.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.531" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.528" endtime="20201110 08:38:28.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.536" level="INFO">VALUE: [8.044399999999896e-05, 8.058300000000213e-05, 8.090300000000022e-05, 8.048599999999767e-05, 8.01389999999999e-05, 8.133300000000288e-05, 8.068099999999911e-05, 7.972199999999735e-05, 8.040299999999972e-05, 8.118000000000014e-05, 8.120799999999928e-05, 8.090300000000022e-05, 8.140300000000072e-05, 7.982000000000128e-05, 8.042999999999939e-05, 8.033300000000188e-05, 7.99589999999975e-05, 8.029100000000317e-05, 8.04169999999993e-05, 8.118099999999961e-05, 8.119399999999971e-05, 8.087500000000108e-05, 8.01389999999999e-05, 8.104199999999645e-05, 7.99719999999976e-05, 8.012500000000033e-05, 8.104200000000339e-05, 8.027800000000307e-05, 8.102799999999688e-05, 8.100000000000468e-05, 7.975000000000343e-05, 7.99719999999976e-05, 8.140300000000072e-05, 8.115299999999354e-05, 8.116600000000057e-05, 8.045900000000494e-05, 8.027800000000307e-05, 8.073599999999792e-05, 8.106999999999559e-05, 8.029099999999623e-05, 8.047300000000451e-05, 8.069400000000615e-05, 8.027699999999666e-05, 8.043099999999886e-05, 8.133400000000235e-05, 8.033300000000188e-05, 8.152800000000432e-05, 8.141599999999388e-05, 8.088899999999372e-05, 8.068099999999911e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.533" endtime="20201110 08:38:28.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.522" endtime="20201110 08:38:28.539"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.546" endtime="20201110 08:38:28.548"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.554" endtime="20201110 08:38:28.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.550" endtime="20201110 08:38:28.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.541" endtime="20201110 08:38:28.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.017" endtime="20201110 08:38:28.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.015" endtime="20201110 08:38:28.580"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.602" endtime="20201110 08:38:28.622"></status>
</kw>
<msg timestamp="20201110 08:38:28.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.599" endtime="20201110 08:38:28.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.625" endtime="20201110 08:38:28.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.631" endtime="20201110 08:38:28.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.592" endtime="20201110 08:38:28.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.586" endtime="20201110 08:38:28.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.655" endtime="20201110 08:38:28.989"></status>
</kw>
<msg timestamp="20201110 08:38:28.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040337458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040419167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.651" endtime="20201110 08:38:28.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040337458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040419167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.998" endtime="20201110 08:38:29.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.017" endtime="20201110 08:38:29.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.644" endtime="20201110 08:38:29.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.640" endtime="20201110 08:38:29.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.035" level="INFO">${RESULT} = [{'time': 0.040419167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.170899999999925e-05, 'source_diff': 8.170899999999925e-05}, {'time': 0.040535389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:29.026" endtime="20201110 08:38:29.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.067" level="INFO">${ACCURACY} = {'source_diff': [8.170899999999925e-05, 8.238899999999522e-05, 8.170799999999978e-05, 8.08049999999963e-05, 8.109800000000167e-05, 8.207000000000353e-05, 8.091600000000032e-05, 8.186100000000252e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:29.037" endtime="20201110 08:38:29.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.078" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.075" endtime="20201110 08:38:29.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.083" level="INFO">VALUE: [8.170899999999925e-05, 8.238899999999522e-05, 8.170799999999978e-05, 8.08049999999963e-05, 8.109800000000167e-05, 8.207000000000353e-05, 8.091600000000032e-05, 8.186100000000252e-05, 8.201399999999831e-05, 8.111100000000177e-05, 8.243000000000139e-05, 8.133299999999594e-05, 8.123599999999842e-05, 8.218100000000061e-05, 8.14170000000003e-05, 8.258299999999719e-05, 8.198599999999917e-05, 8.241699999999436e-05, 8.20269999999984e-05, 8.09719999999986e-05, 8.219400000000071e-05, 8.17919999999972e-05, 8.205500000000449e-05, 8.259799999999623e-05, 8.145799999999953e-05, 8.219400000000071e-05, 8.206900000000406e-05, 8.251399999999881e-05, 8.252800000000532e-05, 8.238900000000215e-05, 8.243100000000086e-05, 8.16249999999949e-05, 8.254199999999795e-05, 8.166700000000054e-05, 8.236100000000302e-05, 8.14719999999991e-05, 8.133300000000288e-05, 8.127799999999713e-05, 8.186100000000252e-05, 8.16390000000014e-05, 8.202799999999788e-05, 8.205500000000449e-05, 8.145799999999953e-05, 8.16390000000014e-05, 8.116700000000004e-05, 8.222199999999985e-05, 8.255499999999805e-05, 8.130600000000321e-05, 8.220800000000028e-05, 8.194499999999993e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.080" endtime="20201110 08:38:29.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.068" endtime="20201110 08:38:29.086"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.093" endtime="20201110 08:38:29.095"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.101" endtime="20201110 08:38:29.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.096" endtime="20201110 08:38:29.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.088" endtime="20201110 08:38:29.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.582" endtime="20201110 08:38:29.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.581" endtime="20201110 08:38:29.128"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.151" endtime="20201110 08:38:29.170"></status>
</kw>
<msg timestamp="20201110 08:38:29.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.148" endtime="20201110 08:38:29.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.177" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.174" endtime="20201110 08:38:29.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.180" endtime="20201110 08:38:29.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.140" endtime="20201110 08:38:29.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.134" endtime="20201110 08:38:29.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.203" endtime="20201110 08:38:29.538"></status>
</kw>
<msg timestamp="20201110 08:38:29.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041561569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041644208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.200" endtime="20201110 08:38:29.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041561569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041644208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.547" endtime="20201110 08:38:29.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.566" endtime="20201110 08:38:29.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.193" endtime="20201110 08:38:29.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.188" endtime="20201110 08:38:29.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.583" level="INFO">${RESULT} = [{'time': 0.041644208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.26390000000024e-05, 'source_diff': 8.26390000000024e-05}, {'time': 0.041755417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:29.574" endtime="20201110 08:38:29.584"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.615" level="INFO">${ACCURACY} = {'source_diff': [8.26390000000024e-05, 8.286100000000352e-05, 8.22919999999977e-05, 8.250000000000618e-05, 8.322200000000085e-05, 8.201399999999831e-05, 8.268000000000164e-05, 8.247299999999957e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:38:29.585" endtime="20201110 08:38:29.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.626" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.624" endtime="20201110 08:38:29.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.632" level="INFO">VALUE: [8.26390000000024e-05, 8.286100000000352e-05, 8.22919999999977e-05, 8.250000000000618e-05, 8.322200000000085e-05, 8.201399999999831e-05, 8.268000000000164e-05, 8.247299999999957e-05, 8.17919999999972e-05, 8.369400000000221e-05, 8.36799999999957e-05, 8.309800000000367e-05, 8.359699999999776e-05, 8.213899999999497e-05, 8.286099999999658e-05, 8.1764000000005e-05, 8.302799999999888e-05, 8.34720000000011e-05, 8.177699999999816e-05, 8.276399999999906e-05, 8.237499999999565e-05, 8.191600000000132e-05, 8.262500000000284e-05, 8.305500000000549e-05, 8.305499999999855e-05, 8.29720000000006e-05, 8.306899999999812e-05, 8.268100000000111e-05, 8.22919999999977e-05, 8.194400000000046e-05, 8.322200000000085e-05, 8.198600000000611e-05, 8.269500000000068e-05, 8.304199999999845e-05, 8.233300000000388e-05, 8.247299999999957e-05, 8.177699999999816e-05, 8.249999999999924e-05, 8.227799999999813e-05, 8.26390000000024e-05, 8.281999999999734e-05, 8.366700000000254e-05, 8.193000000000089e-05, 8.245800000000053e-05, 8.183300000000338e-05, 8.211099999999583e-05, 8.215199999999506e-05, 8.334700000000445e-05, 8.265299999999504e-05, 8.218100000000061e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.629" endtime="20201110 08:38:29.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.617" endtime="20201110 08:38:29.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.641" endtime="20201110 08:38:29.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.650" endtime="20201110 08:38:29.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.645" endtime="20201110 08:38:29.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.637" endtime="20201110 08:38:29.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.130" endtime="20201110 08:38:29.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.128" endtime="20201110 08:38:29.675"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.698" endtime="20201110 08:38:29.719"></status>
</kw>
<msg timestamp="20201110 08:38:29.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.695" endtime="20201110 08:38:29.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.723" endtime="20201110 08:38:29.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.729" endtime="20201110 08:38:29.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.688" endtime="20201110 08:38:29.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.682" endtime="20201110 08:38:29.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.752" endtime="20201110 08:38:30.101"></status>
</kw>
<msg timestamp="20201110 08:38:30.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040551889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.749" endtime="20201110 08:38:30.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040467653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040551889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.110" endtime="20201110 08:38:30.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.129" endtime="20201110 08:38:30.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.742" endtime="20201110 08:38:30.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.737" endtime="20201110 08:38:30.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.147" level="INFO">${RESULT} = [{'time': 0.040551889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.423600000000142e-05, 'source_diff': 8.423600000000142e-05}, {'time': 0.040668139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:30.138" endtime="20201110 08:38:30.148"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.180" level="INFO">${ACCURACY} = {'source_diff': [8.423600000000142e-05, 8.465299999999704e-05, 8.32919999999987e-05, 8.27919999999982e-05, 8.434700000000545e-05, 8.330599999999827e-05, 8.459699999999876e-05, 8.402799999999988e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:38:30.149" endtime="20201110 08:38:30.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.191" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.188" endtime="20201110 08:38:30.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.196" level="INFO">VALUE: [8.423600000000142e-05, 8.465299999999704e-05, 8.32919999999987e-05, 8.27919999999982e-05, 8.434700000000545e-05, 8.330599999999827e-05, 8.459699999999876e-05, 8.402799999999988e-05, 8.368100000000211e-05, 8.348600000000067e-05, 8.402799999999988e-05, 8.311099999999683e-05, 8.368099999999518e-05, 8.418100000000261e-05, 8.28049999999983e-05, 8.277799999999863e-05, 8.431899999999937e-05, 8.324999999999999e-05, 8.456999999999909e-05, 8.276399999999906e-05, 8.422299999999439e-05, 8.301399999999931e-05, 8.341599999999588e-05, 8.402700000000041e-05, 8.436100000000502e-05, 8.308299999999769e-05, 8.330599999999827e-05, 8.388899999999672e-05, 8.347300000000057e-05, 8.327799999999913e-05, 8.359699999999776e-05, 8.41799999999962e-05, 8.293100000000136e-05, 8.345799999999459e-05, 8.434799999999798e-05, 8.327799999999913e-05, 8.32919999999987e-05, 8.309800000000367e-05, 8.452800000000038e-05, 8.333400000000435e-05, 8.387499999999715e-05, 8.27919999999982e-05, 8.315300000000247e-05, 8.32919999999987e-05, 8.422200000000185e-05, 8.434799999999798e-05, 8.388899999999672e-05, 8.311099999999683e-05, 8.276399999999906e-05, 8.384700000000495e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.193" endtime="20201110 08:38:30.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.181" endtime="20201110 08:38:30.204"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.210" endtime="20201110 08:38:30.213"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.218" endtime="20201110 08:38:30.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.214" endtime="20201110 08:38:30.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.205" endtime="20201110 08:38:30.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.678" endtime="20201110 08:38:30.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.676" endtime="20201110 08:38:30.245"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.267" endtime="20201110 08:38:30.288"></status>
</kw>
<msg timestamp="20201110 08:38:30.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.264" endtime="20201110 08:38:30.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.292" endtime="20201110 08:38:30.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.298" endtime="20201110 08:38:30.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.257" endtime="20201110 08:38:30.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.251" endtime="20201110 08:38:30.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.321" endtime="20201110 08:38:30.673"></status>
</kw>
<msg timestamp="20201110 08:38:30.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040788292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040873139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.318" endtime="20201110 08:38:30.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040788292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040873139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.683" endtime="20201110 08:38:30.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.702" endtime="20201110 08:38:30.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.311" endtime="20201110 08:38:30.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.306" endtime="20201110 08:38:30.708"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.719" level="INFO">${RESULT} = [{'time': 0.040873139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.484700000000595e-05, 'source_diff': 8.484700000000595e-05}, {'time': 0.040989361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:30.710" endtime="20201110 08:38:30.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.752" level="INFO">${ACCURACY} = {'source_diff': [8.484700000000595e-05, 8.398600000000117e-05, 8.52920000000007e-05, 8.411200000000424e-05, 8.473600000000192e-05, 8.538900000000516e-05, 8.426300000000109e-05, 8.41249999999974e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:38:30.721" endtime="20201110 08:38:30.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.763" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.761" endtime="20201110 08:38:30.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.769" level="INFO">VALUE: [8.484700000000595e-05, 8.398600000000117e-05, 8.52920000000007e-05, 8.411200000000424e-05, 8.473600000000192e-05, 8.538900000000516e-05, 8.426300000000109e-05, 8.41249999999974e-05, 8.444399999999602e-05, 8.531999999999984e-05, 8.375000000000049e-05, 8.4846999999999e-05, 8.470800000000278e-05, 8.569400000000421e-05, 8.473600000000192e-05, 8.411099999999783e-05, 8.46669999999966e-05, 8.411100000000477e-05, 8.569500000000368e-05, 8.42919999999997e-05, 8.442999999999645e-05, 8.447199999999516e-05, 8.506999999999959e-05, 8.376400000000006e-05, 8.491599999999738e-05, 8.46249999999979e-05, 8.494399999999652e-05, 8.576400000000206e-05, 8.459799999999823e-05, 8.434799999999798e-05, 8.537499999999865e-05, 8.555499999999411e-05, 8.46390000000044e-05, 8.468000000000364e-05, 8.470800000000278e-05, 8.506900000000012e-05, 8.494500000000293e-05, 8.472200000000235e-05, 8.565299999999804e-05, 8.541699999999736e-05, 8.383299999999844e-05, 8.38049999999993e-05, 8.444500000000243e-05, 8.488899999999772e-05, 8.46249999999979e-05, 8.411099999999783e-05, 8.400000000000074e-05, 8.409699999999826e-05, 8.469499999999575e-05, 8.426400000000056e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.766" endtime="20201110 08:38:30.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.754" endtime="20201110 08:38:30.772"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.778" endtime="20201110 08:38:30.781"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.786" endtime="20201110 08:38:30.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.782" endtime="20201110 08:38:30.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.774" endtime="20201110 08:38:30.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.247" endtime="20201110 08:38:30.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.246" endtime="20201110 08:38:30.813"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.835" endtime="20201110 08:38:30.855"></status>
</kw>
<msg timestamp="20201110 08:38:30.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.832" endtime="20201110 08:38:30.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.858" endtime="20201110 08:38:30.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.864" endtime="20201110 08:38:30.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.825" endtime="20201110 08:38:30.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.819" endtime="20201110 08:38:30.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.888" endtime="20201110 08:38:31.225"></status>
</kw>
<msg timestamp="20201110 08:38:31.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040789375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.884" endtime="20201110 08:38:31.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040704236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040789375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.234" endtime="20201110 08:38:31.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.253" endtime="20201110 08:38:31.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.877" endtime="20201110 08:38:31.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.872" endtime="20201110 08:38:31.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.270" level="INFO">${RESULT} = [{'time': 0.040789375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.51390000000049e-05, 'source_diff': 8.51390000000049e-05}, {'time': 0.040905597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:31.261" endtime="20201110 08:38:31.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.301" level="INFO">${ACCURACY} = {'source_diff': [8.51390000000049e-05, 8.502800000000088e-05, 8.511099999999883e-05, 8.49590000000025e-05, 8.624999999999605e-05, 8.626399999999562e-05, 8.537500000000559e-05, 8.625000000000299e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:38:31.273" endtime="20201110 08:38:31.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.314" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.310" endtime="20201110 08:38:31.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.319" level="INFO">VALUE: [8.51390000000049e-05, 8.502800000000088e-05, 8.511099999999883e-05, 8.49590000000025e-05, 8.624999999999605e-05, 8.626399999999562e-05, 8.537500000000559e-05, 8.625000000000299e-05, 8.538899999999822e-05, 8.52920000000007e-05, 8.49720000000026e-05, 8.533299999999994e-05, 8.54999999999953e-05, 8.490299999999729e-05, 8.661100000000033e-05, 8.47370000000014e-05, 8.642999999999845e-05, 8.555500000000105e-05, 8.606999999999365e-05, 8.661100000000033e-05, 8.623599999999648e-05, 8.550000000000224e-05, 8.533299999999994e-05, 8.483299999999944e-05, 8.56390000000054e-05, 8.572200000000335e-05, 8.642999999999845e-05, 8.592999999999795e-05, 8.563899999999847e-05, 8.623599999999648e-05, 8.561099999999933e-05, 8.590200000000575e-05, 8.587499999999915e-05, 8.659700000000076e-05, 8.595799999999709e-05, 8.531900000000037e-05, 8.622199999999691e-05, 8.606900000000112e-05, 8.590300000000523e-05, 8.548700000000214e-05, 8.586200000000599e-05, 8.537500000000559e-05, 8.479100000000073e-05, 8.5459000000003e-05, 8.508299999999969e-05, 8.640299999999879e-05, 8.565299999999804e-05, 8.568099999999718e-05, 8.486099999999858e-05, 8.551400000000181e-05]</msg>
<status status="PASS" starttime="20201110 08:38:31.316" endtime="20201110 08:38:31.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.303" endtime="20201110 08:38:31.322"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.329" endtime="20201110 08:38:31.331"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.337" endtime="20201110 08:38:31.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.333" endtime="20201110 08:38:31.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.324" endtime="20201110 08:38:31.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.815" endtime="20201110 08:38:31.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.813" endtime="20201110 08:38:31.363"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.385" endtime="20201110 08:38:31.405"></status>
</kw>
<msg timestamp="20201110 08:38:31.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.382" endtime="20201110 08:38:31.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.408" endtime="20201110 08:38:31.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.415" endtime="20201110 08:38:31.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.375" endtime="20201110 08:38:31.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.369" endtime="20201110 08:38:31.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.438" endtime="20201110 08:38:31.773"></status>
</kw>
<msg timestamp="20201110 08:38:31.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040396194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.435" endtime="20201110 08:38:31.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040396194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040482167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.783" endtime="20201110 08:38:31.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.801" endtime="20201110 08:38:31.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.427" endtime="20201110 08:38:31.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.423" endtime="20201110 08:38:31.808"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.819" level="INFO">${RESULT} = [{'time': 0.040482167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.597299999999614e-05, 'source_diff': 8.597299999999614e-05}, {'time': 0.040602375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:31.810" endtime="20201110 08:38:31.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.850" level="INFO">${ACCURACY} = {'source_diff': [8.597299999999614e-05, 8.62920000000017e-05, 8.690299999999929e-05, 8.71799999999992e-05, 8.6459000000004e-05, 8.704199999999551e-05, 8.63050000000018e-05, 8.719399999999877e-05, 8.73...</msg>
<status status="PASS" starttime="20201110 08:38:31.821" endtime="20201110 08:38:31.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.861" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.858" endtime="20201110 08:38:31.862"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.866" level="INFO">VALUE: [8.597299999999614e-05, 8.62920000000017e-05, 8.690299999999929e-05, 8.71799999999992e-05, 8.6459000000004e-05, 8.704199999999551e-05, 8.63050000000018e-05, 8.719399999999877e-05, 8.730600000000227e-05, 8.729100000000323e-05, 8.62920000000017e-05, 8.581900000000087e-05, 8.676400000000306e-05, 8.598700000000264e-05, 8.6944999999998e-05, 8.705600000000202e-05, 8.687500000000015e-05, 8.76669999999996e-05, 8.759800000000123e-05, 8.616700000000505e-05, 8.722299999999739e-05, 8.672199999999741e-05, 8.692999999999895e-05, 8.593100000000437e-05, 8.756999999999515e-05, 8.61669999999981e-05, 8.740299999999979e-05, 8.576300000000259e-05, 8.59999999999958e-05, 8.66669999999986e-05, 8.632000000000084e-05, 8.615299999999854e-05, 8.5847e-05, 8.665199999999956e-05, 8.580499999999436e-05, 8.752699999999697e-05, 8.720900000000475e-05, 8.670899999999732e-05, 8.66669999999986e-05, 8.648599999999673e-05, 8.661100000000033e-05, 8.615299999999854e-05, 8.709700000000126e-05, 8.773599999999798e-05, 8.650000000000324e-05, 8.615299999999854e-05, 8.647299999999664e-05, 8.577800000000163e-05, 8.652799999999544e-05, 8.665299999999904e-05]</msg>
<status status="PASS" starttime="20201110 08:38:31.863" endtime="20201110 08:38:31.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.852" endtime="20201110 08:38:31.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.877" endtime="20201110 08:38:31.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.885" endtime="20201110 08:38:31.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.881" endtime="20201110 08:38:31.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.872" endtime="20201110 08:38:31.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.365" endtime="20201110 08:38:31.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.364" endtime="20201110 08:38:31.911"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.934" endtime="20201110 08:38:31.953"></status>
</kw>
<msg timestamp="20201110 08:38:31.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.931" endtime="20201110 08:38:31.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.957" endtime="20201110 08:38:31.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.963" endtime="20201110 08:38:31.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.923" endtime="20201110 08:38:31.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.918" endtime="20201110 08:38:31.970"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.986" endtime="20201110 08:38:32.322"></status>
</kw>
<msg timestamp="20201110 08:38:32.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040452375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.983" endtime="20201110 08:38:32.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040452375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040540639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.332" endtime="20201110 08:38:32.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.351" endtime="20201110 08:38:32.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.976" endtime="20201110 08:38:32.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.971" endtime="20201110 08:38:32.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.368" level="INFO">${RESULT} = [{'time': 0.040540639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.826400000000456e-05, 'source_diff': 8.826400000000456e-05}, {'time': 0.040660861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.359" endtime="20201110 08:38:32.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.399" level="INFO">${ACCURACY} = {'source_diff': [8.826400000000456e-05, 8.776399999999712e-05, 8.823599999999848e-05, 8.6944999999998e-05, 8.76669999999996e-05, 8.681900000000187e-05, 8.822199999999891e-05, 8.856900000000362e-05, 8....</msg>
<status status="PASS" starttime="20201110 08:38:32.370" endtime="20201110 08:38:32.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.410" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.407" endtime="20201110 08:38:32.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.415" level="INFO">VALUE: [8.826400000000456e-05, 8.776399999999712e-05, 8.823599999999848e-05, 8.6944999999998e-05, 8.76669999999996e-05, 8.681900000000187e-05, 8.822199999999891e-05, 8.856900000000362e-05, 8.809700000000226e-05, 8.780600000000277e-05, 8.827799999999719e-05, 8.772200000000535e-05, 8.770899999999832e-05, 8.820899999999882e-05, 8.734800000000098e-05, 8.809800000000173e-05, 8.768099999999918e-05, 8.683300000000144e-05, 8.701399999999637e-05, 8.71669999999991e-05, 8.71250000000004e-05, 8.73470000000015e-05, 8.791699999999986e-05, 8.809800000000173e-05, 8.827799999999719e-05, 8.680600000000177e-05, 8.750000000000424e-05, 8.702800000000288e-05, 8.702800000000288e-05, 8.843000000000045e-05, 8.71799999999992e-05, 8.76250000000009e-05, 8.702799999999594e-05, 8.73470000000015e-05, 8.844400000000002e-05, 8.804100000000398e-05, 8.675000000000349e-05, 8.8332999999996e-05, 8.765200000000056e-05, 8.776399999999712e-05, 8.790300000000029e-05, 8.747300000000457e-05, 8.854200000000395e-05, 8.769399999999927e-05, 8.736100000000108e-05, 8.841600000000088e-05, 8.787500000000115e-05, 8.768099999999918e-05, 8.73050000000028e-05, 8.823599999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:38:32.412" endtime="20201110 08:38:32.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.401" endtime="20201110 08:38:32.418"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.425" endtime="20201110 08:38:32.429"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.434" endtime="20201110 08:38:32.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.430" endtime="20201110 08:38:32.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.420" endtime="20201110 08:38:32.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.913" endtime="20201110 08:38:32.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.912" endtime="20201110 08:38:32.460"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.483" endtime="20201110 08:38:32.503"></status>
</kw>
<msg timestamp="20201110 08:38:32.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.480" endtime="20201110 08:38:32.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.506" endtime="20201110 08:38:32.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.512" endtime="20201110 08:38:32.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.473" endtime="20201110 08:38:32.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.467" endtime="20201110 08:38:32.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.535" endtime="20201110 08:38:32.876"></status>
</kw>
<msg timestamp="20201110 08:38:32.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040537236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.532" endtime="20201110 08:38:32.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040447958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040537236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.885" endtime="20201110 08:38:32.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.904" endtime="20201110 08:38:32.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.525" endtime="20201110 08:38:32.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.520" endtime="20201110 08:38:32.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.921" level="INFO">${RESULT} = [{'time': 0.040537236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.927799999999819e-05, 'source_diff': 8.927799999999819e-05}, {'time': 0.040655486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.912" endtime="20201110 08:38:32.922"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.954" level="INFO">${ACCURACY} = {'source_diff': [8.927799999999819e-05, 8.86800000000007e-05, 8.938900000000222e-05, 8.958399999999672e-05, 8.815300000000054e-05, 8.832000000000284e-05, 8.972200000000041e-05, 8.834700000000251e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:32.923" endtime="20201110 08:38:32.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.965" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.963" endtime="20201110 08:38:32.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.970" level="INFO">VALUE: [8.927799999999819e-05, 8.86800000000007e-05, 8.938900000000222e-05, 8.958399999999672e-05, 8.815300000000054e-05, 8.832000000000284e-05, 8.972200000000041e-05, 8.834700000000251e-05, 8.940300000000179e-05, 8.81250000000014e-05, 8.78329999999955e-05, 8.84999999999983e-05, 8.787500000000115e-05, 8.83050000000038e-05, 8.865300000000104e-05, 8.902700000000541e-05, 8.8332999999996e-05, 8.926400000000556e-05, 8.865300000000104e-05, 8.850000000000524e-05, 8.865200000000156e-05, 8.869400000000027e-05, 8.786100000000158e-05, 8.820799999999934e-05, 8.888900000000172e-05, 8.801400000000431e-05, 8.957000000000409e-05, 8.801400000000431e-05, 8.931900000000437e-05, 8.897199999999966e-05, 8.845800000000653e-05, 8.888899999999478e-05, 8.826299999999815e-05, 8.834699999999557e-05, 8.845899999999907e-05, 8.963900000000247e-05, 8.901399999999837e-05, 8.909700000000326e-05, 8.961100000000333e-05, 8.84999999999983e-05, 8.923599999999948e-05, 8.845799999999959e-05, 8.87920000000042e-05, 8.833300000000294e-05, 8.944400000000102e-05, 8.876399999999812e-05, 8.876400000000506e-05, 8.913899999999503e-05, 8.904199999999751e-05, 8.830599999999633e-05]</msg>
<status status="PASS" starttime="20201110 08:38:32.967" endtime="20201110 08:38:32.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.956" endtime="20201110 08:38:32.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.980" endtime="20201110 08:38:32.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.988" endtime="20201110 08:38:33.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.984" endtime="20201110 08:38:33.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.975" endtime="20201110 08:38:33.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.462" endtime="20201110 08:38:33.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.461" endtime="20201110 08:38:33.016"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.039" endtime="20201110 08:38:33.058"></status>
</kw>
<msg timestamp="20201110 08:38:33.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.035" endtime="20201110 08:38:33.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.062" endtime="20201110 08:38:33.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.068" endtime="20201110 08:38:33.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.028" endtime="20201110 08:38:33.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.022" endtime="20201110 08:38:33.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.091" endtime="20201110 08:38:33.435"></status>
</kw>
<msg timestamp="20201110 08:38:33.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042278125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.088" endtime="20201110 08:38:33.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042189125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042278125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.445" endtime="20201110 08:38:33.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.464" endtime="20201110 08:38:33.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.081" endtime="20201110 08:38:33.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.076" endtime="20201110 08:38:33.470"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.481" level="INFO">${RESULT} = [{'time': 0.042278125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.89999999999988e-05, 'source_diff': 8.89999999999988e-05}, {'time': 0.042397375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:33.472" endtime="20201110 08:38:33.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.512" level="INFO">${ACCURACY} = {'source_diff': [8.89999999999988e-05, 9.043100000000193e-05, 8.961099999999639e-05, 8.91670000000011e-05, 9.025000000000005e-05, 8.963900000000247e-05, 8.898600000000617e-05, 9.061099999999739e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:38:33.483" endtime="20201110 08:38:33.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.523" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.520" endtime="20201110 08:38:33.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.528" level="INFO">VALUE: [8.89999999999988e-05, 9.043100000000193e-05, 8.961099999999639e-05, 8.91670000000011e-05, 9.025000000000005e-05, 8.963900000000247e-05, 8.898600000000617e-05, 9.061099999999739e-05, 8.976399999999912e-05, 8.89999999999988e-05, 8.972200000000041e-05, 8.87920000000042e-05, 8.934700000000351e-05, 8.918100000000068e-05, 8.912499999999546e-05, 9.027799999999919e-05, 9.056899999999868e-05, 8.948599999999973e-05, 9.018100000000168e-05, 8.96670000000016e-05, 8.901399999999837e-05, 9.044499999999456e-05, 8.934699999999657e-05, 9.029199999999876e-05, 8.948599999999973e-05, 9.027799999999919e-05, 9.011099999999689e-05, 9.038900000000322e-05, 8.952799999999844e-05, 8.969400000000127e-05, 8.919400000000077e-05, 9.062499999999696e-05, 8.959699999999682e-05, 9.011100000000383e-05, 8.968100000000118e-05, 8.997200000000066e-05, 8.919400000000077e-05, 8.936100000000308e-05, 8.898599999999923e-05, 8.881899999999693e-05, 8.959699999999682e-05, 8.966600000000213e-05, 8.952799999999844e-05, 9.047199999999422e-05, 9.025000000000005e-05, 8.979199999999826e-05, 8.977699999999922e-05, 8.963899999999553e-05, 8.96800000000017e-05, 8.912499999999546e-05]</msg>
<status status="PASS" starttime="20201110 08:38:33.525" endtime="20201110 08:38:33.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.513" endtime="20201110 08:38:33.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.541" endtime="20201110 08:38:33.544"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.550" endtime="20201110 08:38:33.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.545" endtime="20201110 08:38:33.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.535" endtime="20201110 08:38:33.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.018" endtime="20201110 08:38:33.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.016" endtime="20201110 08:38:33.576"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.601" endtime="20201110 08:38:33.620"></status>
</kw>
<msg timestamp="20201110 08:38:33.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.597" endtime="20201110 08:38:33.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.624" endtime="20201110 08:38:33.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.630" endtime="20201110 08:38:33.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.590" endtime="20201110 08:38:33.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.582" endtime="20201110 08:38:33.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.654" endtime="20201110 08:38:33.987"></status>
</kw>
<msg timestamp="20201110 08:38:33.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042544431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042634764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.650" endtime="20201110 08:38:33.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042544431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042634764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.996" endtime="20201110 08:38:34.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.015" endtime="20201110 08:38:34.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.643" endtime="20201110 08:38:34.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.638" endtime="20201110 08:38:34.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.033" level="INFO">${RESULT} = [{'time': 0.042634764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.0332999999998e-05, 'source_diff': 9.0332999999998e-05}, {'time': 0.042752986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201110 08:38:34.023" endtime="20201110 08:38:34.033"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.063" level="INFO">${ACCURACY} = {'source_diff': [9.0332999999998e-05, 8.997200000000066e-05, 9.084799999999754e-05, 9.14450000000025e-05, 9.072300000000089e-05, 9.124999999999411e-05, 9.081899999999893e-05, 9.01529999999956e-05, 9.0...</msg>
<status status="PASS" starttime="20201110 08:38:34.035" endtime="20201110 08:38:34.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.074" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.072" endtime="20201110 08:38:34.075"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.079" level="INFO">VALUE: [9.0332999999998e-05, 8.997200000000066e-05, 9.084799999999754e-05, 9.14450000000025e-05, 9.072300000000089e-05, 9.124999999999411e-05, 9.081899999999893e-05, 9.01529999999956e-05, 9.011099999999689e-05, 9.115200000000406e-05, 9.155500000000011e-05, 9.127800000000019e-05, 9.075000000000055e-05, 9.101400000000037e-05, 9.120800000000234e-05, 9.108299999999875e-05, 9.140199999999737e-05, 9.122199999999497e-05, 9.051399999999987e-05, 9.066699999999567e-05, 9.015300000000254e-05, 9.087499999999721e-05, 9.118100000000268e-05, 9.156999999999915e-05, 9.120800000000234e-05, 8.998600000000023e-05, 9.143000000000345e-05, 9.127700000000072e-05, 8.979199999999826e-05, 8.980499999999836e-05, 9.155500000000011e-05, 9.04870000000002e-05, 9.152800000000044e-05, 8.97920000000052e-05, 9.015300000000254e-05, 9.159699999999882e-05, 9.015300000000254e-05, 9.070800000000184e-05, 9.101400000000037e-05, 9.044400000000202e-05, 9.026399999999962e-05, 9.101400000000037e-05, 9.122200000000191e-05, 9.123699999999402e-05, 9.091600000000338e-05, 9.076400000000012e-05, 9.048600000000073e-05, 8.98199999999974e-05, 9.097200000000166e-05, 9.143099999999599e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.076" endtime="20201110 08:38:34.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.065" endtime="20201110 08:38:34.083"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.089" endtime="20201110 08:38:34.092"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.097" endtime="20201110 08:38:34.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.093" endtime="20201110 08:38:34.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.084" endtime="20201110 08:38:34.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.578" endtime="20201110 08:38:34.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.577" endtime="20201110 08:38:34.123"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.146" endtime="20201110 08:38:34.167"></status>
</kw>
<msg timestamp="20201110 08:38:34.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.142" endtime="20201110 08:38:34.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.170" endtime="20201110 08:38:34.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.177" endtime="20201110 08:38:34.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.135" endtime="20201110 08:38:34.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.130" endtime="20201110 08:38:34.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.202" endtime="20201110 08:38:34.543"></status>
</kw>
<msg timestamp="20201110 08:38:34.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040572861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.198" endtime="20201110 08:38:34.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040482028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040572861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.552" endtime="20201110 08:38:34.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.571" endtime="20201110 08:38:34.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.191" endtime="20201110 08:38:34.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.186" endtime="20201110 08:38:34.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.588" level="INFO">${RESULT} = [{'time': 0.040572861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.08329999999985e-05, 'source_diff': 9.08329999999985e-05}, {'time': 0.040693083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:34.579" endtime="20201110 08:38:34.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.619" level="INFO">${ACCURACY} = {'source_diff': [9.08329999999985e-05, 9.173599999999504e-05, 9.09729999999942e-05, 9.224999999999511e-05, 9.240299999999785e-05, 9.092999999999601e-05, 9.15130000000014e-05, 9.204200000000051e-05, 9....</msg>
<status status="PASS" starttime="20201110 08:38:34.590" endtime="20201110 08:38:34.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.630" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.627" endtime="20201110 08:38:34.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.635" level="INFO">VALUE: [9.08329999999985e-05, 9.173599999999504e-05, 9.09729999999942e-05, 9.224999999999511e-05, 9.240299999999785e-05, 9.092999999999601e-05, 9.15130000000014e-05, 9.204200000000051e-05, 9.097200000000166e-05, 9.238899999999828e-05, 9.077799999999969e-05, 9.076400000000012e-05, 9.222300000000239e-05, 9.077799999999969e-05, 9.231900000000043e-05, 9.09729999999942e-05, 9.202800000000094e-05, 9.079099999999979e-05, 9.240299999999785e-05, 9.140299999999685e-05, 9.112499999999746e-05, 9.13199999999989e-05, 9.094400000000252e-05, 9.188899999999778e-05, 9.109799999999779e-05, 9.151400000000087e-05, 9.125000000000105e-05, 9.219399999999683e-05, 9.125000000000105e-05, 9.083399999999797e-05, 9.198600000000223e-05, 9.227800000000119e-05, 9.173600000000198e-05, 9.255600000000058e-05, 9.162499999999796e-05, 9.186099999999864e-05, 9.224999999999511e-05, 9.120900000000182e-05, 9.113899999999703e-05, 9.161099999999839e-05, 9.13199999999989e-05, 9.213900000000497e-05, 9.188900000000472e-05, 9.238899999999828e-05, 9.095800000000209e-05, 9.225000000000205e-05, 9.129100000000029e-05, 9.13199999999989e-05, 9.255600000000058e-05, 9.256900000000068e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.632" endtime="20201110 08:38:34.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.621" endtime="20201110 08:38:34.638"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.645" endtime="20201110 08:38:34.647"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.653" endtime="20201110 08:38:34.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.649" endtime="20201110 08:38:34.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.640" endtime="20201110 08:38:34.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.125" endtime="20201110 08:38:34.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.124" endtime="20201110 08:38:34.679"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.702" endtime="20201110 08:38:34.722"></status>
</kw>
<msg timestamp="20201110 08:38:34.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.698" endtime="20201110 08:38:34.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.725" endtime="20201110 08:38:34.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.731" endtime="20201110 08:38:34.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.691" endtime="20201110 08:38:34.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.685" endtime="20201110 08:38:34.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.756" endtime="20201110 08:38:35.090"></status>
</kw>
<msg timestamp="20201110 08:38:35.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:34.753" endtime="20201110 08:38:35.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.116" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040488, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040581569, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:35.100" endtime="20201110 08:38:35.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.118" endtime="20201110 08:38:35.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.744" endtime="20201110 08:38:35.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.739" endtime="20201110 08:38:35.125"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.136" level="INFO">${RESULT} = [{'time': 0.040581569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.356899999999474e-05, 'source_diff': 9.356899999999474e-05}, {'time': 0.040701778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:35.127" endtime="20201110 08:38:35.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.168" level="INFO">${ACCURACY} = {'source_diff': [9.356899999999474e-05, 9.226400000000162e-05, 9.32079999999974e-05, 9.326400000000262e-05, 9.216699999999717e-05, 9.355600000000158e-05, 9.251400000000187e-05, 9.286099999999964e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:35.138" endtime="20201110 08:38:35.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.179" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.177" endtime="20201110 08:38:35.180"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.185" level="INFO">VALUE: [9.356899999999474e-05, 9.226400000000162e-05, 9.32079999999974e-05, 9.326400000000262e-05, 9.216699999999717e-05, 9.355600000000158e-05, 9.251400000000187e-05, 9.286099999999964e-05, 9.330600000000133e-05, 9.309700000000032e-05, 9.212499999999846e-05, 9.23199999999999e-05, 9.31529999999986e-05, 9.245800000000359e-05, 9.356900000000168e-05, 9.269500000000375e-05, 9.188899999999778e-05, 9.197200000000266e-05, 9.219400000000377e-05, 9.234699999999957e-05, 9.337499999999971e-05, 9.305499999999467e-05, 9.26529999999981e-05, 9.184699999999907e-05, 9.24450000000035e-05, 9.315199999999912e-05, 9.342999999999851e-05, 9.217999999999726e-05, 9.227800000000119e-05, 9.219500000000325e-05, 9.319499999999731e-05, 9.199999999999486e-05, 9.247199999999622e-05, 9.215300000000454e-05, 9.179100000000079e-05, 9.306900000000118e-05, 9.25130000000024e-05, 9.35279999999955e-05, 9.295899999999663e-05, 9.234799999999904e-05, 9.26250000000059e-05, 9.223600000000248e-05, 9.198600000000223e-05, 9.243099999999699e-05, 9.338899999999928e-05, 9.263899999999853e-05, 9.21670000000041e-05, 9.26529999999981e-05, 9.324999999999611e-05, 9.213899999999803e-05]</msg>
<status status="PASS" starttime="20201110 08:38:35.182" endtime="20201110 08:38:35.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.170" endtime="20201110 08:38:35.188"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.194" endtime="20201110 08:38:35.197"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.203" endtime="20201110 08:38:35.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.198" endtime="20201110 08:38:35.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.190" endtime="20201110 08:38:35.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.681" endtime="20201110 08:38:35.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.680" endtime="20201110 08:38:35.229"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.251" endtime="20201110 08:38:35.271"></status>
</kw>
<msg timestamp="20201110 08:38:35.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.248" endtime="20201110 08:38:35.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.275" endtime="20201110 08:38:35.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.281" endtime="20201110 08:38:35.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.241" endtime="20201110 08:38:35.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.235" endtime="20201110 08:38:35.288"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.305" endtime="20201110 08:38:35.642"></status>
</kw>
<msg timestamp="20201110 08:38:35.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040561736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.301" endtime="20201110 08:38:35.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040468611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040561736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.652" endtime="20201110 08:38:35.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.671" endtime="20201110 08:38:35.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.294" endtime="20201110 08:38:35.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.289" endtime="20201110 08:38:35.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.688" level="INFO">${RESULT} = [{'time': 0.040561736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.312499999999946e-05, 'source_diff': 9.312499999999946e-05}, {'time': 0.040683958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:35.679" endtime="20201110 08:38:35.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.719" level="INFO">${ACCURACY} = {'source_diff': [9.312499999999946e-05, 9.362499999999996e-05, 9.327700000000272e-05, 9.425000000000405e-05, 9.288899999999878e-05, 9.427699999999678e-05, 9.345900000000407e-05, 9.330600000000133e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:35.690" endtime="20201110 08:38:35.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.730" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.727" endtime="20201110 08:38:35.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.735" level="INFO">VALUE: [9.312499999999946e-05, 9.362499999999996e-05, 9.327700000000272e-05, 9.425000000000405e-05, 9.288899999999878e-05, 9.427699999999678e-05, 9.345900000000407e-05, 9.330600000000133e-05, 9.462500000000096e-05, 9.445800000000559e-05, 9.351400000000287e-05, 9.426399999999668e-05, 9.348600000000373e-05, 9.423599999999754e-05, 9.459800000000129e-05, 9.369499999999781e-05, 9.419500000000525e-05, 9.477700000000422e-05, 9.393099999999849e-05, 9.467999999999976e-05, 9.392999999999901e-05, 9.404200000000251e-05, 9.361100000000039e-05, 9.477799999999675e-05, 9.367999999999876e-05, 9.449999999999736e-05, 9.35000000000033e-05, 9.33609999999932e-05, 9.276400000000212e-05, 9.302700000000247e-05, 9.29859999999963e-05, 9.36659999999992e-05, 9.284700000000007e-05, 9.462500000000096e-05, 9.302800000000194e-05, 9.366699999999867e-05, 9.349999999999636e-05, 9.352800000000244e-05, 9.426399999999668e-05, 9.322200000000391e-05, 9.29859999999963e-05, 9.458300000000225e-05, 9.423599999999754e-05, 9.373599999999704e-05, 9.336100000000014e-05, 9.297199999999672e-05, 9.376400000000312e-05, 9.440299999999985e-05, 9.4027999999996e-05, 9.334700000000057e-05]</msg>
<status status="PASS" starttime="20201110 08:38:35.732" endtime="20201110 08:38:35.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.721" endtime="20201110 08:38:35.743"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.750" endtime="20201110 08:38:35.753"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.758" endtime="20201110 08:38:35.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.754" endtime="20201110 08:38:35.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.745" endtime="20201110 08:38:35.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.231" endtime="20201110 08:38:35.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.230" endtime="20201110 08:38:35.784"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.807" endtime="20201110 08:38:35.827"></status>
</kw>
<msg timestamp="20201110 08:38:35.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.804" endtime="20201110 08:38:35.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.831" endtime="20201110 08:38:35.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.837" endtime="20201110 08:38:35.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.797" endtime="20201110 08:38:35.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.791" endtime="20201110 08:38:35.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.860" endtime="20201110 08:38:36.197"></status>
</kw>
<msg timestamp="20201110 08:38:36.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040784583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.857" endtime="20201110 08:38:36.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040690278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040784583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.206" endtime="20201110 08:38:36.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.225" endtime="20201110 08:38:36.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.850" endtime="20201110 08:38:36.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.845" endtime="20201110 08:38:36.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.243" level="INFO">${RESULT} = [{'time': 0.040784583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.430499999999592e-05, 'source_diff': 9.430499999999592e-05}, {'time': 0.040909819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.234" endtime="20201110 08:38:36.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.273" level="INFO">${ACCURACY} = {'source_diff': [9.430499999999592e-05, 9.41659999999997e-05, 9.41659999999997e-05, 9.419499999999831e-05, 9.395899999999763e-05, 9.469499999999881e-05, 9.491699999999992e-05, 9.472199999999847e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:38:36.245" endtime="20201110 08:38:36.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.284" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.282" endtime="20201110 08:38:36.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.290" level="INFO">VALUE: [9.430499999999592e-05, 9.41659999999997e-05, 9.41659999999997e-05, 9.419499999999831e-05, 9.395899999999763e-05, 9.469499999999881e-05, 9.491699999999992e-05, 9.472199999999847e-05, 9.476400000000412e-05, 9.399999999999686e-05, 9.519499999999931e-05, 9.462500000000096e-05, 9.469499999999881e-05, 9.527799999999725e-05, 9.449999999999736e-05, 9.561100000000239e-05, 9.466699999999967e-05, 9.508300000000275e-05, 9.436100000000114e-05, 9.438900000000028e-05, 9.436100000000114e-05, 9.470899999999838e-05, 9.48880000000013e-05, 9.447300000000464e-05, 9.445799999999865e-05, 9.554100000000454e-05, 9.412500000000046e-05, 9.427799999999625e-05, 9.552800000000444e-05, 9.479200000000326e-05, 9.433299999999506e-05, 9.508299999999581e-05, 9.50409999999971e-05, 9.511100000000189e-05, 9.486100000000164e-05, 9.559800000000229e-05, 9.41659999999997e-05, 9.474999999999761e-05, 9.530499999999692e-05, 9.434800000000104e-05, 9.488900000000078e-05, 9.524999999999811e-05, 9.556900000000368e-05, 9.423599999999754e-05, 9.473699999999752e-05, 9.41529999999996e-05, 9.490300000000035e-05, 9.522199999999897e-05, 9.491699999999992e-05, 9.41529999999996e-05]</msg>
<status status="PASS" starttime="20201110 08:38:36.286" endtime="20201110 08:38:36.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.275" endtime="20201110 08:38:36.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.299" endtime="20201110 08:38:36.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.307" endtime="20201110 08:38:36.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.303" endtime="20201110 08:38:36.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.295" endtime="20201110 08:38:36.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.786" endtime="20201110 08:38:36.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.785" endtime="20201110 08:38:36.334"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.358" endtime="20201110 08:38:36.378"></status>
</kw>
<msg timestamp="20201110 08:38:36.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.354" endtime="20201110 08:38:36.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.381" endtime="20201110 08:38:36.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.388" endtime="20201110 08:38:36.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.347" endtime="20201110 08:38:36.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.341" endtime="20201110 08:38:36.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.411" endtime="20201110 08:38:36.748"></status>
</kw>
<msg timestamp="20201110 08:38:36.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042525667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.408" endtime="20201110 08:38:36.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042525667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.757" endtime="20201110 08:38:36.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.776" endtime="20201110 08:38:36.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.401" endtime="20201110 08:38:36.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.396" endtime="20201110 08:38:36.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.795" level="INFO">${RESULT} = [{'time': 0.042525667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.484800000000154e-05, 'source_diff': 9.484800000000154e-05}, {'time': 0.042649889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.786" endtime="20201110 08:38:36.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.825" level="INFO">${ACCURACY} = {'source_diff': [9.484800000000154e-05, 9.551400000000487e-05, 9.55279999999975e-05, 9.619400000000083e-05, 9.642999999999458e-05, 9.62080000000004e-05, 9.531899999999649e-05, 9.547199999999922e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:38:36.797" endtime="20201110 08:38:36.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.836" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.834" endtime="20201110 08:38:36.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.842" level="INFO">VALUE: [9.484800000000154e-05, 9.551400000000487e-05, 9.55279999999975e-05, 9.619400000000083e-05, 9.642999999999458e-05, 9.62080000000004e-05, 9.531899999999649e-05, 9.547199999999922e-05, 9.49859999999983e-05, 9.613900000000203e-05, 9.65000000000063e-05, 9.530600000000333e-05, 9.561100000000239e-05, 9.530500000000386e-05, 9.529100000000429e-05, 9.605600000000408e-05, 9.501399999999743e-05, 9.638900000000228e-05, 9.613800000000255e-05, 9.551400000000487e-05, 9.48330000000025e-05, 9.672200000000047e-05, 9.484800000000154e-05, 9.49859999999983e-05, 9.538900000000128e-05, 9.480499999999642e-05, 9.669500000000081e-05, 9.630499999999792e-05, 9.59729999999992e-05, 9.526400000000462e-05, 9.604199999999757e-05, 9.48330000000025e-05, 9.48330000000025e-05, 9.48609999999947e-05, 9.62080000000004e-05, 9.49859999999983e-05, 9.562499999999502e-05, 9.655600000000458e-05, 9.494499999999906e-05, 9.49859999999983e-05, 9.480600000000283e-05, 9.579199999999732e-05, 9.573599999999904e-05, 9.674999999999961e-05, 9.547199999999922e-05, 9.577799999999775e-05, 9.529199999999682e-05, 9.640300000000185e-05, 9.554199999999707e-05, 9.49859999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:38:36.839" endtime="20201110 08:38:36.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.827" endtime="20201110 08:38:36.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.851" endtime="20201110 08:38:36.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.860" endtime="20201110 08:38:36.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.855" endtime="20201110 08:38:36.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.847" endtime="20201110 08:38:36.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.336" endtime="20201110 08:38:36.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.335" endtime="20201110 08:38:36.886"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.908" endtime="20201110 08:38:36.928"></status>
</kw>
<msg timestamp="20201110 08:38:36.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.905" endtime="20201110 08:38:36.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.932" endtime="20201110 08:38:36.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.938" endtime="20201110 08:38:36.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.898" endtime="20201110 08:38:36.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.892" endtime="20201110 08:38:36.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.962" endtime="20201110 08:38:37.297"></status>
</kw>
<msg timestamp="20201110 08:38:37.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04053225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040629361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:36.958" endtime="20201110 08:38:37.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04053225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040629361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:37.307" endtime="20201110 08:38:37.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.326" endtime="20201110 08:38:37.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.951" endtime="20201110 08:38:37.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.946" endtime="20201110 08:38:37.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.345" level="INFO">${RESULT} = [{'time': 0.040629361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.711100000000389e-05, 'source_diff': 9.711100000000389e-05}, {'time': 0.040759611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:37.336" endtime="20201110 08:38:37.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.378" level="INFO">${ACCURACY} = {'source_diff': [9.711100000000389e-05, 9.66530000000021e-05, 9.677799999999875e-05, 9.765299999999616e-05, 9.697200000000072e-05, 9.586200000000211e-05, 9.754199999999907e-05, 9.665200000000262e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:37.347" endtime="20201110 08:38:37.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.389" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.387" endtime="20201110 08:38:37.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.395" level="INFO">VALUE: [9.711100000000389e-05, 9.66530000000021e-05, 9.677799999999875e-05, 9.765299999999616e-05, 9.697200000000072e-05, 9.586200000000211e-05, 9.754199999999907e-05, 9.665200000000262e-05, 9.773600000000104e-05, 9.77080000000019e-05, 9.768000000000276e-05, 9.706900000000518e-05, 9.69159999999955e-05, 9.599999999999886e-05, 9.726399999999968e-05, 9.663900000000253e-05, 9.583399999999603e-05, 9.759799999999735e-05, 9.590300000000135e-05, 9.584699999999613e-05, 9.66530000000021e-05, 9.676399999999918e-05, 9.684700000000407e-05, 9.58200000000034e-05, 9.616700000000117e-05, 9.773600000000104e-05, 9.688899999999584e-05, 9.709699999999738e-05, 9.581999999999646e-05, 9.681900000000493e-05, 9.605499999999767e-05, 9.59859999999993e-05, 9.729099999999935e-05, 9.711099999999695e-05, 9.677799999999875e-05, 9.768000000000276e-05, 9.651399999999893e-05, 9.762500000000396e-05, 9.641699999999448e-05, 9.77080000000019e-05, 9.693000000000201e-05, 9.747199999999429e-05, 9.733399999999753e-05, 9.681899999999799e-05, 9.593100000000049e-05, 9.691700000000192e-05, 9.593100000000049e-05, 9.647200000000022e-05, 9.636100000000314e-05, 9.69159999999955e-05]</msg>
<status status="PASS" starttime="20201110 08:38:37.392" endtime="20201110 08:38:37.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.380" endtime="20201110 08:38:37.398"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.405" endtime="20201110 08:38:37.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.413" endtime="20201110 08:38:37.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.409" endtime="20201110 08:38:37.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.400" endtime="20201110 08:38:37.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.888" endtime="20201110 08:38:37.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.887" endtime="20201110 08:38:37.439"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.462" endtime="20201110 08:38:37.483"></status>
</kw>
<msg timestamp="20201110 08:38:37.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.459" endtime="20201110 08:38:37.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.486" endtime="20201110 08:38:37.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.492" endtime="20201110 08:38:37.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.452" endtime="20201110 08:38:37.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.446" endtime="20201110 08:38:37.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.516" endtime="20201110 08:38:37.851"></status>
</kw>
<msg timestamp="20201110 08:38:37.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04092575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041024472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:37.512" endtime="20201110 08:38:37.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04092575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041024472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:37.861" endtime="20201110 08:38:37.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.880" endtime="20201110 08:38:37.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.505" endtime="20201110 08:38:37.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.500" endtime="20201110 08:38:37.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.897" level="INFO">${RESULT} = [{'time': 0.041024472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.872200000000247e-05, 'source_diff': 9.872200000000247e-05}, {'time': 0.041155778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:37.888" endtime="20201110 08:38:37.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.929" level="INFO">${ACCURACY} = {'source_diff': [9.872200000000247e-05, 9.808399999999828e-05, 9.737499999999677e-05, 9.733399999999753e-05, 9.77080000000019e-05, 9.712500000000346e-05, 9.777799999999975e-05, 9.795899999999469e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:37.899" endtime="20201110 08:38:37.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.940" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.938" endtime="20201110 08:38:37.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.946" level="INFO">VALUE: [9.872200000000247e-05, 9.808399999999828e-05, 9.737499999999677e-05, 9.733399999999753e-05, 9.77080000000019e-05, 9.712500000000346e-05, 9.777799999999975e-05, 9.795899999999469e-05, 9.859699999999888e-05, 9.694400000000158e-05, 9.808299999999881e-05, 9.773600000000104e-05, 9.7027999999999e-05, 9.862500000000496e-05, 9.736100000000414e-05, 9.8028e-05, 9.68609999999967e-05, 9.705599999999814e-05, 9.863799999999812e-05, 9.701399999999943e-05, 9.73609999999972e-05, 9.848599999999486e-05, 9.808299999999881e-05, 9.859699999999888e-05, 9.773700000000052e-05, 9.686100000000364e-05, 9.734700000000457e-05, 9.784699999999813e-05, 9.84860000000018e-05, 9.699999999999986e-05, 9.861100000000539e-05, 9.78059999999989e-05, 9.687499999999627e-05, 9.86530000000041e-05, 9.74860000000008e-05, 9.811099999999795e-05, 9.844500000000256e-05, 9.807000000000565e-05, 9.76660000000032e-05, 9.790199999999694e-05, 9.858299999999931e-05, 9.763899999999659e-05, 9.769500000000181e-05, 9.733399999999753e-05, 9.843099999999605e-05, 9.791700000000292e-05, 9.694399999999465e-05, 9.736199999999667e-05, 9.809700000000532e-05, 9.788900000000378e-05]</msg>
<status status="PASS" starttime="20201110 08:38:37.943" endtime="20201110 08:38:37.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.931" endtime="20201110 08:38:37.949"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.955" endtime="20201110 08:38:37.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.964" endtime="20201110 08:38:37.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.959" endtime="20201110 08:38:37.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.951" endtime="20201110 08:38:37.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.441" endtime="20201110 08:38:37.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.440" endtime="20201110 08:38:37.989"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.012" endtime="20201110 08:38:38.033"></status>
</kw>
<msg timestamp="20201110 08:38:38.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.009" endtime="20201110 08:38:38.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.036" endtime="20201110 08:38:38.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.042" endtime="20201110 08:38:38.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.002" endtime="20201110 08:38:38.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.996" endtime="20201110 08:38:38.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.066" endtime="20201110 08:38:38.402"></status>
</kw>
<msg timestamp="20201110 08:38:38.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040567597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040665833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.062" endtime="20201110 08:38:38.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040567597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040665833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.412" endtime="20201110 08:38:38.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.432" endtime="20201110 08:38:38.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.055" endtime="20201110 08:38:38.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.050" endtime="20201110 08:38:38.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.450" level="INFO">${RESULT} = [{'time': 0.040665833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.823600000000154e-05, 'source_diff': 9.823600000000154e-05}, {'time': 0.040797097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.440" endtime="20201110 08:38:38.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.481" level="INFO">${ACCURACY} = {'source_diff': [9.823600000000154e-05, 9.92359999999956e-05, 9.961099999999945e-05, 9.873699999999458e-05, 9.787500000000421e-05, 9.963899999999859e-05, 9.941700000000442e-05, 9.947199999999629e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:38.452" endtime="20201110 08:38:38.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.492" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.490" endtime="20201110 08:38:38.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.498" level="INFO">VALUE: [9.823600000000154e-05, 9.92359999999956e-05, 9.961099999999945e-05, 9.873699999999458e-05, 9.787500000000421e-05, 9.963899999999859e-05, 9.941700000000442e-05, 9.947199999999629e-05, 9.94860000000028e-05, 9.911099999999895e-05, 9.924999999999518e-05, 9.877799999999382e-05, 9.908299999999981e-05, 9.788899999999684e-05, 9.801400000000043e-05, 9.854200000000007e-05, 9.783400000000497e-05, 9.944399999999715e-05, 9.83609999999982e-05, 9.86939999999964e-05, 9.972200000000347e-05, 9.876299999999477e-05, 9.975000000000261e-05, 9.866700000000367e-05, 9.80410000000001e-05, 9.894500000000306e-05, 9.783400000000497e-05, 9.945800000000365e-05, 9.784699999999813e-05, 9.893100000000349e-05, 9.816599999999676e-05, 9.881999999999946e-05, 9.788900000000378e-05, 9.895800000000315e-05, 9.959799999999935e-05, 9.927800000000125e-05, 9.895900000000263e-05, 9.976400000000218e-05, 9.850000000000136e-05, 9.931900000000049e-05, 9.88059999999999e-05, 9.948599999999586e-05, 9.877700000000128e-05, 9.927800000000125e-05, 9.840299999999691e-05, 9.88059999999999e-05, 9.892999999999708e-05, 9.855599999999964e-05, 9.870799999999597e-05, 9.833299999999906e-05]</msg>
<status status="PASS" starttime="20201110 08:38:38.495" endtime="20201110 08:38:38.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.483" endtime="20201110 08:38:38.501"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.507" endtime="20201110 08:38:38.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.516" endtime="20201110 08:38:38.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.511" endtime="20201110 08:38:38.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.503" endtime="20201110 08:38:38.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.992" endtime="20201110 08:38:38.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.990" endtime="20201110 08:38:38.542"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.565" endtime="20201110 08:38:38.585"></status>
</kw>
<msg timestamp="20201110 08:38:38.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.561" endtime="20201110 08:38:38.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.588" endtime="20201110 08:38:38.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.594" endtime="20201110 08:38:38.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.554" endtime="20201110 08:38:38.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.548" endtime="20201110 08:38:38.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.618" endtime="20201110 08:38:38.954"></status>
</kw>
<msg timestamp="20201110 08:38:38.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040620514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.614" endtime="20201110 08:38:38.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040520833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040620514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.964" endtime="20201110 08:38:38.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.982" endtime="20201110 08:38:38.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.607" endtime="20201110 08:38:38.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.602" endtime="20201110 08:38:38.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.000" level="INFO">${RESULT} = [{'time': 0.040620514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.968100000000424e-05, 'source_diff': 9.968100000000424e-05}, {'time': 0.040751778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.991" endtime="20201110 08:38:39.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.031" level="INFO">${ACCURACY} = {'source_diff': [9.968100000000424e-05, 0.00010057000000000121, 0.00010009699999999344, 0.00010023600000000354, 0.00010029200000000182, 9.947200000000322e-05, 9.894499999999612e-05, 0.0001005829999999...</msg>
<status status="PASS" starttime="20201110 08:38:39.002" endtime="20201110 08:38:39.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.042" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.040" endtime="20201110 08:38:39.043"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.048" level="INFO">VALUE: [9.968100000000424e-05, 0.00010057000000000121, 0.00010009699999999344, 0.00010023600000000354, 0.00010029200000000182, 9.947200000000322e-05, 9.894499999999612e-05, 0.00010058299999999437, 9.943099999999705e-05, 0.00010007000000000071, 9.92080000000034e-05, 9.955500000000117e-05, 9.887499999999827e-05, 9.933399999999953e-05, 9.915299999999766e-05, 9.898700000000177e-05, 0.00010008300000000081, 0.00010033300000000106, 9.879100000000085e-05, 9.976399999999525e-05, 9.972300000000295e-05, 9.976399999999525e-05, 0.00010040299999999891, 0.00010062500000000002, 9.93609999999992e-05, 9.899999999999493e-05, 9.918100000000374e-05, 9.949999999999543e-05, 9.975000000000261e-05, 9.930500000000092e-05, 9.884699999999913e-05, 9.977700000000228e-05, 0.00010025000000000311, 0.00010023600000000354, 9.944500000000356e-05, 9.929200000000082e-05, 9.904200000000057e-05, 0.00010062500000000002, 9.940199999999844e-05, 0.00010077799999999582, 0.00010009700000000038, 9.934699999999963e-05, 9.954200000000107e-05, 9.994500000000406e-05, 9.916700000000417e-05, 9.938900000000528e-05, 9.900000000000186e-05, 9.9028000000001e-05, 0.0001002359999999966, 0.00010044500000000456]</msg>
<status status="PASS" starttime="20201110 08:38:39.045" endtime="20201110 08:38:39.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.033" endtime="20201110 08:38:39.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.057" endtime="20201110 08:38:39.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.066" endtime="20201110 08:38:39.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.061" endtime="20201110 08:38:39.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.053" endtime="20201110 08:38:39.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.544" endtime="20201110 08:38:39.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.543" endtime="20201110 08:38:39.092"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.114" endtime="20201110 08:38:39.135"></status>
</kw>
<msg timestamp="20201110 08:38:39.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.111" endtime="20201110 08:38:39.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.138" endtime="20201110 08:38:39.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.144" endtime="20201110 08:38:39.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.104" endtime="20201110 08:38:39.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.098" endtime="20201110 08:38:39.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.167" endtime="20201110 08:38:39.507"></status>
</kw>
<msg timestamp="20201110 08:38:39.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040356097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040456097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.164" endtime="20201110 08:38:39.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040356097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040456097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.517" endtime="20201110 08:38:39.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.535" endtime="20201110 08:38:39.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.157" endtime="20201110 08:38:39.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.152" endtime="20201110 08:38:39.542"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.553" level="INFO">${RESULT} = [{'time': 0.040456097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010000000000000286, 'source_diff': 0.00010000000000000286}, {'time': 0.040587347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:39.544" endtime="20201110 08:38:39.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.589" level="INFO">${ACCURACY} = {'source_diff': [0.00010000000000000286, 0.00010161100000000145, 0.00010108300000000181, 0.00010070799999999797, 0.0001012359999999976, 0.00010048599999999686, 9.990300000000535e-05, 0.000101555999999...</msg>
<status status="PASS" starttime="20201110 08:38:39.556" endtime="20201110 08:38:39.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.600" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.597" endtime="20201110 08:38:39.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.605" level="INFO">VALUE: [0.00010000000000000286, 0.00010161100000000145, 0.00010108300000000181, 0.00010070799999999797, 0.0001012359999999976, 0.00010048599999999686, 9.990300000000535e-05, 0.0001015559999999957, 0.00010143100000000599, 0.00010159800000000135, 0.00010111100000000095, 0.00010108300000000181, 0.00010001400000000243, 0.00010020799999999747, 9.999999999999593e-05, 0.00010013899999999909, 0.00010070799999999797, 0.00010047200000000422, 0.00010016699999999823, 9.983400000000003e-05, 0.00010013799999999962, 9.999999999999593e-05, 0.00010054099999999566, 0.00010019499999999737, 0.00010041699999999848, 0.00010144399999999915, 0.0001009860000000043, 0.00010069499999999787, 0.00010012499999999952, 0.00010037499999999977, 9.982000000000046e-05, 0.00010098599999999736, 0.0001006939999999984, 0.00010155500000000317, 0.000101416, 0.00010002700000000253, 0.00010062500000000002, 0.00010001400000000243, 0.00010034700000000063, 0.00010018000000000526, 0.00010158300000000231, 0.0001007080000000049, 9.997200000000372e-05, 0.00010091699999999898, 0.00010102799999999607, 0.00010143099999999905, 0.00010106900000000224, 0.0001007359999999971, 9.98609999999997e-05, 0.00010090199999999994]</msg>
<status status="PASS" starttime="20201110 08:38:39.602" endtime="20201110 08:38:39.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.591" endtime="20201110 08:38:39.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.615" endtime="20201110 08:38:39.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.623" endtime="20201110 08:38:39.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.619" endtime="20201110 08:38:39.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.610" endtime="20201110 08:38:39.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.094" endtime="20201110 08:38:39.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.092" endtime="20201110 08:38:39.649"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.672" endtime="20201110 08:38:39.692"></status>
</kw>
<msg timestamp="20201110 08:38:39.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.669" endtime="20201110 08:38:39.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.696" endtime="20201110 08:38:39.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.702" endtime="20201110 08:38:39.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.661" endtime="20201110 08:38:39.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.656" endtime="20201110 08:38:39.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.725" endtime="20201110 08:38:40.061"></status>
</kw>
<msg timestamp="20201110 08:38:40.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040563486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040664333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.722" endtime="20201110 08:38:40.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040563486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040664333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.071" endtime="20201110 08:38:40.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.089" endtime="20201110 08:38:40.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.715" endtime="20201110 08:38:40.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.710" endtime="20201110 08:38:40.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.106" level="INFO">${RESULT} = [{'time': 0.040664333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010084699999999419, 'source_diff': 0.00010084699999999419}, {'time': 0.040798625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:40.097" endtime="20201110 08:38:40.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.137" level="INFO">${ACCURACY} = {'source_diff': [0.00010084699999999419, 0.00010144399999999915, 0.0001010559999999952, 0.00010174999999999768, 0.00010211099999999501, 0.00010181899999999605, 0.0001008610000000007, 0.000101028000000...</msg>
<status status="PASS" starttime="20201110 08:38:40.108" endtime="20201110 08:38:40.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.149" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.145" endtime="20201110 08:38:40.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.154" level="INFO">VALUE: [0.00010084699999999419, 0.00010144399999999915, 0.0001010559999999952, 0.00010174999999999768, 0.00010211099999999501, 0.00010181899999999605, 0.0001008610000000007, 0.000101028000000003, 0.00010213900000000109, 0.00010102799999999607, 0.0001017359999999981, 0.00010137500000000077, 0.00010108299999999487, 0.00010215200000000119, 0.00010118100000000574, 0.00010198599999999836, 0.00010120799999999847, 0.00010162500000000102, 0.00010247199999999929, 0.00010194499999999912, 0.00010198599999999836, 0.00010263800000000212, 0.00010087500000000027, 0.000101513999999997, 0.0001016939999999994, 0.00010229199999999689, 0.00010226400000000468, 0.000101028000000003, 0.00010194499999999912, 0.00010088800000000037, 0.00010195799999999922, 0.00010193099999999955, 0.00010105500000000267, 0.00010177799999999682, 0.00010090299999999941, 0.00010177699999999734, 0.00010155500000000317, 0.00010226399999999775, 0.00010174999999999768, 0.00010258300000000331, 0.00010218000000000033, 0.00010211100000000195, 0.00010247299999999876, 0.0001017359999999981, 0.00010230599999999646, 0.00010243000000000058, 0.00010116599999999976, 0.00010247199999999929, 0.00010183300000000256, 0.00010227799999999732]</msg>
<status status="PASS" starttime="20201110 08:38:40.151" endtime="20201110 08:38:40.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.139" endtime="20201110 08:38:40.157"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.164" endtime="20201110 08:38:40.166"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.172" endtime="20201110 08:38:40.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.168" endtime="20201110 08:38:40.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.159" endtime="20201110 08:38:40.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.651" endtime="20201110 08:38:40.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.650" endtime="20201110 08:38:40.198"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.221" endtime="20201110 08:38:40.241"></status>
</kw>
<msg timestamp="20201110 08:38:40.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.218" endtime="20201110 08:38:40.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.245" endtime="20201110 08:38:40.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.251" endtime="20201110 08:38:40.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.210" endtime="20201110 08:38:40.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.204" endtime="20201110 08:38:40.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.274" endtime="20201110 08:38:40.609"></status>
</kw>
<msg timestamp="20201110 08:38:40.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04060175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:40.271" endtime="20201110 08:38:40.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04060175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704472, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:40.618" endtime="20201110 08:38:40.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.636" endtime="20201110 08:38:40.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.264" endtime="20201110 08:38:40.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.259" endtime="20201110 08:38:40.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.654" level="INFO">${RESULT} = [{'time': 0.040704472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010272199999999954, 'source_diff': 0.00010272199999999954}, {'time': 0.040836722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:40.645" endtime="20201110 08:38:40.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.684" level="INFO">${ACCURACY} = {'source_diff': [0.00010272199999999954, 0.00010268000000000083, 0.00010181899999999605, 0.00010345800000000072, 0.00010358300000000431, 0.00010277799999999782, 0.00010194399999999965, 0.0001032639999...</msg>
<status status="PASS" starttime="20201110 08:38:40.656" endtime="20201110 08:38:40.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.695" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.693" endtime="20201110 08:38:40.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.701" level="INFO">VALUE: [0.00010272199999999954, 0.00010268000000000083, 0.00010181899999999605, 0.00010345800000000072, 0.00010358300000000431, 0.00010277799999999782, 0.00010194399999999965, 0.00010326399999999875, 0.00010312499999999558, 0.00010266700000000073, 0.00010249999999999843, 0.00010311200000000242, 0.00010199999999999793, 0.00010266599999999432, 0.00010205499999999673, 0.00010358299999999737, 0.00010233299999999612, 0.00010266700000000073, 0.00010268000000000083, 0.00010251299999999852, 0.00010376400000000618, 0.00010215300000000066, 0.0001023480000000021, 0.00010182000000000246, 0.00010188799999999443, 0.00010312500000000252, 0.00010294500000000012, 0.0001031810000000008, 0.00010317999999999439, 0.00010184700000000213, 0.00010337500000000277, 0.00010348599999999986, 0.00010306900000000424, 0.0001020139999999975, 0.00010372200000000054, 0.00010243000000000058, 0.00010344500000000062, 0.0001027359999999991, 0.00010199999999999793, 0.00010344500000000062, 0.00010324999999999918, 0.00010231900000000349, 0.00010231899999999655, 0.00010368099999999436, 0.00010290299999999447, 0.00010194499999999912, 0.00010309699999999644, 0.00010188900000000084, 0.00010358299999999737, 0.0001030689999999973]</msg>
<status status="PASS" starttime="20201110 08:38:40.698" endtime="20201110 08:38:40.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.686" endtime="20201110 08:38:40.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.712" endtime="20201110 08:38:40.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.720" endtime="20201110 08:38:40.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.715" endtime="20201110 08:38:40.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.707" endtime="20201110 08:38:40.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.200" endtime="20201110 08:38:40.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.199" endtime="20201110 08:38:40.746"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.768" endtime="20201110 08:38:40.789"></status>
</kw>
<msg timestamp="20201110 08:38:40.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.765" endtime="20201110 08:38:40.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.792" endtime="20201110 08:38:40.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.799" endtime="20201110 08:38:40.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.758" endtime="20201110 08:38:40.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.752" endtime="20201110 08:38:40.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.822" endtime="20201110 08:38:41.158"></status>
</kw>
<msg timestamp="20201110 08:38:41.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040543806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04064775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:40.819" endtime="20201110 08:38:41.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040543806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04064775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:41.168" endtime="20201110 08:38:41.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.186" endtime="20201110 08:38:41.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.811" endtime="20201110 08:38:41.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.807" endtime="20201110 08:38:41.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.203" level="INFO">${RESULT} = [{'time': 0.04064775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010394400000000165, 'source_diff': 0.00010394400000000165}, {'time': 0.040785014, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:41.195" endtime="20201110 08:38:41.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:41.234" level="INFO">${ACCURACY} = {'source_diff': [0.00010394400000000165, 0.00010333300000000406, 0.00010376399999999925, 0.00010295800000000022, 0.00010327799999999832, 0.00010458399999999785, 0.00010445899999999425, 0.0001028060000...</msg>
<status status="PASS" starttime="20201110 08:38:41.205" endtime="20201110 08:38:41.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.245" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:38:41.242" endtime="20201110 08:38:41.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.250" level="INFO">VALUE: [0.00010394400000000165, 0.00010333300000000406, 0.00010376399999999925, 0.00010295800000000022, 0.00010327799999999832, 0.00010458399999999785, 0.00010445899999999425, 0.0001028060000000039, 0.00010395900000000069, 0.0001028339999999961, 0.00010413900000000309, 0.00010462499999999708, 0.00010293100000000055, 0.00010402799999999907, 0.00010426399999999975, 0.0001030139999999985, 0.00010437499999999683, 0.00010455499999999923, 0.0001043889999999964, 0.00010349999999999943, 0.00010376399999999925, 0.00010345900000000019, 0.00010349999999999943, 0.00010477799999999982, 0.00010377799999999882, 0.00010315299999999472, 0.00010394400000000165, 0.0001031940000000009, 0.00010425000000000018, 0.00010283299999999662, 0.00010412499999999658, 0.00010479200000000632, 0.00010295800000000022, 0.00010337500000000277, 0.00010298599999999936, 0.00010298599999999936, 0.00010299999999999893, 0.00010399999999999993, 0.00010354199999999814, 0.00010456999999999828, 0.00010374999999999968, 0.00010363900000000259, 0.000103513999999999, 0.0001033060000000044, 0.0001042360000000006, 0.00010283400000000303, 0.00010472200000000154, 0.00010332000000000396, 0.00010422200000000104, 0.00010358299999999737]</msg>
<status status="PASS" starttime="20201110 08:38:41.247" endtime="20201110 08:38:41.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.236" endtime="20201110 08:38:41.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.260" endtime="20201110 08:38:41.264"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.269" endtime="20201110 08:38:41.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.265" endtime="20201110 08:38:41.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.255" endtime="20201110 08:38:41.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.748" endtime="20201110 08:38:41.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.747" endtime="20201110 08:38:41.295"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.318" endtime="20201110 08:38:41.338"></status>
</kw>
<msg timestamp="20201110 08:38:41.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.315" endtime="20201110 08:38:41.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.342" endtime="20201110 08:38:41.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.348" endtime="20201110 08:38:41.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.307" endtime="20201110 08:38:41.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.302" endtime="20201110 08:38:41.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.372" endtime="20201110 08:38:41.707"></status>
</kw>
<msg timestamp="20201110 08:38:41.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040546083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040650875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.368" endtime="20201110 08:38:41.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040546083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040650875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.717" endtime="20201110 08:38:41.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.735" endtime="20201110 08:38:41.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.361" endtime="20201110 08:38:41.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.356" endtime="20201110 08:38:41.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.752" level="INFO">${RESULT} = [{'time': 0.040650875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010479200000000632, 'source_diff': 0.00010479200000000632}, {'time': 0.040785153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:41.744" endtime="20201110 08:38:41.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:41.782" level="INFO">${ACCURACY} = {'source_diff': [0.00010479200000000632, 0.00010495899999999475, 0.00010547200000000229, 0.0001040139999999995, 0.00010508299999999887, 0.00010419499999999443, 0.0001042360000000006, 0.000104527999999...</msg>
<status status="PASS" starttime="20201110 08:38:41.754" endtime="20201110 08:38:41.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.793" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:38:41.791" endtime="20201110 08:38:41.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.798" level="INFO">VALUE: [0.00010479200000000632, 0.00010495899999999475, 0.00010547200000000229, 0.0001040139999999995, 0.00010508299999999887, 0.00010419499999999443, 0.0001042360000000006, 0.00010452799999999957, 0.0001045559999999987, 0.00010493100000000255, 0.00010476400000000025, 0.00010562499999999808, 0.00010468099999999536, 0.00010558299999999937, 0.00010542999999999664, 0.00010436099999999726, 0.00010527800000000032, 0.00010430599999999846, 0.00010511099999999801, 0.00010468000000000283, 0.00010544400000000315, 0.00010479199999999939, 0.00010484799999999767, 0.00010526400000000075, 0.00010574999999999474, 0.00010545800000000272, 0.00010497200000000179, 0.00010386099999999676, 0.0001050689999999993, 0.00010536099999999826, 0.00010472200000000154, 0.00010455499999999923, 0.00010502800000000007, 0.0001038610000000037, 0.0001052219999999951, 0.0001057219999999956, 0.00010543100000000305, 0.00010529199999999989, 0.00010450000000000043, 0.00010384799999999667, 0.00010454099999999966, 0.0001050689999999993, 0.00010450000000000043, 0.00010476400000000025, 0.00010469500000000187, 0.00010382000000000446, 0.00010438800000000387, 0.00010484700000000513, 0.00010562500000000502, 0.00010415300000000266]</msg>
<status status="PASS" starttime="20201110 08:38:41.796" endtime="20201110 08:38:41.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.784" endtime="20201110 08:38:41.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.808" endtime="20201110 08:38:41.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.816" endtime="20201110 08:38:41.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.812" endtime="20201110 08:38:41.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.804" endtime="20201110 08:38:41.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.297" endtime="20201110 08:38:41.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.296" endtime="20201110 08:38:41.846"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.869" endtime="20201110 08:38:41.889"></status>
</kw>
<msg timestamp="20201110 08:38:41.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.865" endtime="20201110 08:38:41.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.892" endtime="20201110 08:38:41.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.899" endtime="20201110 08:38:41.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.858" endtime="20201110 08:38:41.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.852" endtime="20201110 08:38:41.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.922" endtime="20201110 08:38:42.258"></status>
</kw>
<msg timestamp="20201110 08:38:42.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040739208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040845458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.919" endtime="20201110 08:38:42.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040739208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040845458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.267" endtime="20201110 08:38:42.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.286" endtime="20201110 08:38:42.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.911" endtime="20201110 08:38:42.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.907" endtime="20201110 08:38:42.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.303" level="INFO">${RESULT} = [{'time': 0.040845458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010625000000000218, 'source_diff': 0.00010625000000000218}, {'time': 0.040980708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:42.294" endtime="20201110 08:38:42.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.333" level="INFO">${ACCURACY} = {'source_diff': [0.00010625000000000218, 0.00010613899999999815, 0.00010504199999999964, 0.00010606999999999978, 0.00010608399999999935, 0.00010608399999999935, 0.0001055689999999998, 0.00010631900000...</msg>
<status status="PASS" starttime="20201110 08:38:42.305" endtime="20201110 08:38:42.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.344" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.342" endtime="20201110 08:38:42.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.349" level="INFO">VALUE: [0.00010625000000000218, 0.00010613899999999815, 0.00010504199999999964, 0.00010606999999999978, 0.00010608399999999935, 0.00010608399999999935, 0.0001055689999999998, 0.00010631900000000055, 0.00010605499999999379, 0.00010570800000000297, 0.00010629100000000141, 0.00010648600000000286, 0.00010595800000000322, 0.00010634699999999969, 0.00010498600000000136, 0.00010609699999999944, 0.00010487499999999733, 0.00010481999999999853, 0.00010516699999999629, 0.00010609799999999892, 0.00010538900000000434, 0.00010534699999999869, 0.00010661099999999951, 0.0001053610000000052, 0.00010640300000000491, 0.0001053610000000052, 0.00010556999999999928, 0.00010576400000000125, 0.00010542999999999664, 0.00010576400000000125, 0.00010532000000000596, 0.00010594400000000365, 0.00010565200000000469, 0.0001060690000000003, 0.00010608399999999935, 0.00010591699999999704, 0.00010491699999999604, 0.00010537499999999783, 0.0001053339999999986, 0.00010481900000000599, 0.0001057360000000021, 0.00010643099999999711, 0.00010516700000000323, 0.00010566700000000373, 0.00010659799999999942, 0.00010661200000000592, 0.00010625000000000218, 0.00010516700000000323, 0.0001056810000000033, 0.00010530599999999946]</msg>
<status status="PASS" starttime="20201110 08:38:42.346" endtime="20201110 08:38:42.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.335" endtime="20201110 08:38:42.352"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.359" endtime="20201110 08:38:42.361"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.367" endtime="20201110 08:38:42.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.363" endtime="20201110 08:38:42.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.354" endtime="20201110 08:38:42.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.848" endtime="20201110 08:38:42.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.847" endtime="20201110 08:38:42.393"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.417" endtime="20201110 08:38:42.438"></status>
</kw>
<msg timestamp="20201110 08:38:42.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.414" endtime="20201110 08:38:42.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.441" endtime="20201110 08:38:42.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.448" endtime="20201110 08:38:42.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.407" endtime="20201110 08:38:42.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.399" endtime="20201110 08:38:42.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.471" endtime="20201110 08:38:42.811"></status>
</kw>
<msg timestamp="20201110 08:38:42.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042232722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042338986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.468" endtime="20201110 08:38:42.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042232722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042338986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.820" endtime="20201110 08:38:42.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.838" endtime="20201110 08:38:42.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.461" endtime="20201110 08:38:42.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.456" endtime="20201110 08:38:42.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.855" level="INFO">${RESULT} = [{'time': 0.042338986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010626400000000175, 'source_diff': 0.00010626400000000175}, {'time': 0.042476222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:42.847" endtime="20201110 08:38:42.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.886" level="INFO">${ACCURACY} = {'source_diff': [0.00010626400000000175, 0.00010666599999999832, 0.00010712499999999958, 0.0001070690000000013, 0.00010697299999999632, 0.00010613899999999815, 0.00010763899999999965, 0.00010586099999...</msg>
<status status="PASS" starttime="20201110 08:38:42.858" endtime="20201110 08:38:42.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.897" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.894" endtime="20201110 08:38:42.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.902" level="INFO">VALUE: [0.00010626400000000175, 0.00010666599999999832, 0.00010712499999999958, 0.0001070690000000013, 0.00010697299999999632, 0.00010613899999999815, 0.00010763899999999965, 0.00010586099999999876, 0.00010586099999999876, 0.00010675000000000268, 0.00010652800000000157, 0.00010584699999999919, 0.00010680600000000096, 0.00010634799999999917, 0.00010741699999999854, 0.00010586099999999876, 0.00010586099999999876, 0.00010584699999999919, 0.00010637499999999883, 0.00010747199999999735, 0.00010636099999999926, 0.0001073889999999994, 0.00010587499999999833, 0.00010576400000000125, 0.0001062360000000026, 0.00010758300000000137, 0.00010630600000000046, 0.000106514000000002, 0.00010647300000000276, 0.00010759800000000042, 0.00010690299999999847, 0.00010597199999999585, 0.00010683300000000062, 0.00010598599999999542, 0.0001072360000000036, 0.00010737499999999983, 0.00010587500000000527, 0.00010676400000000225, 0.00010666599999999832, 0.0001063610000000062, 0.00010726399999999581, 0.00010727800000000232, 0.00010697199999999685, 0.00010741700000000548, 0.00010709700000000044, 0.00010711199999999949, 0.00010586099999999876, 0.00010680600000000096, 0.00010731900000000155, 0.00010647299999999582]</msg>
<status status="PASS" starttime="20201110 08:38:42.899" endtime="20201110 08:38:42.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.887" endtime="20201110 08:38:42.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.912" endtime="20201110 08:38:42.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.920" endtime="20201110 08:38:42.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.916" endtime="20201110 08:38:42.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.907" endtime="20201110 08:38:42.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.395" endtime="20201110 08:38:42.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.394" endtime="20201110 08:38:42.946"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.969" endtime="20201110 08:38:42.989"></status>
</kw>
<msg timestamp="20201110 08:38:42.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.965" endtime="20201110 08:38:42.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.993" endtime="20201110 08:38:42.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.999" endtime="20201110 08:38:43.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.958" endtime="20201110 08:38:43.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.952" endtime="20201110 08:38:43.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.024" endtime="20201110 08:38:43.358"></status>
</kw>
<msg timestamp="20201110 08:38:43.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040663431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.021" endtime="20201110 08:38:43.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040555903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040663431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.368" endtime="20201110 08:38:43.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.386" endtime="20201110 08:38:43.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.014" endtime="20201110 08:38:43.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.009" endtime="20201110 08:38:43.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.403" level="INFO">${RESULT} = [{'time': 0.040663431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010752800000000257, 'source_diff': 0.00010752800000000257}, {'time': 0.040802667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:43.394" endtime="20201110 08:38:43.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:43.433" level="INFO">${ACCURACY} = {'source_diff': [0.00010752800000000257, 0.00010736100000000026, 0.00010755599999999477, 0.00010777799999999588, 0.00010724999999999624, 0.00010809700000000144, 0.00010875000000000468, 0.0001082779999...</msg>
<status status="PASS" starttime="20201110 08:38:43.405" endtime="20201110 08:38:43.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.444" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:38:43.442" endtime="20201110 08:38:43.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.449" level="INFO">VALUE: [0.00010752800000000257, 0.00010736100000000026, 0.00010755599999999477, 0.00010777799999999588, 0.00010724999999999624, 0.00010809700000000144, 0.00010875000000000468, 0.00010827799999999638, 0.00010733300000000112, 0.0001077219999999976, 0.00010708300000000087, 0.00010798599999999742, 0.00010713899999999915, 0.00010718099999999786, 0.00010752699999999615, 0.00010772300000000401, 0.00010713900000000609, 0.0001068340000000001, 0.00010773599999999717, 0.00010763899999999965, 0.00010687499999999933, 0.00010809700000000144, 0.00010769399999999846, 0.00010729099999999547, 0.00010806899999999536, 0.0001075419999999952, 0.00010695900000000369, 0.00010769500000000487, 0.00010755599999999477, 0.00010766699999999879, 0.00010826399999999681, 0.00010830599999999552, 0.00010876399999999731, 0.0001070419999999947, 0.000107514000000003, 0.00010861100000000151, 0.00010701399999999556, 0.0001070560000000012, 0.00010791599999999957, 0.00010824999999999724, 0.0001077219999999976, 0.000107514000000003, 0.00010765299999999922, 0.00010794499999999818, 0.00010808400000000135, 0.00010725000000000318, 0.00010750000000000343, 0.00010737499999999983, 0.0001082360000000046, 0.00010734800000000017]</msg>
<status status="PASS" starttime="20201110 08:38:43.446" endtime="20201110 08:38:43.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.435" endtime="20201110 08:38:43.453"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.459" endtime="20201110 08:38:43.462"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:43.467" endtime="20201110 08:38:43.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.463" endtime="20201110 08:38:43.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.454" endtime="20201110 08:38:43.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.948" endtime="20201110 08:38:43.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.947" endtime="20201110 08:38:43.493"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.516" endtime="20201110 08:38:43.536"></status>
</kw>
<msg timestamp="20201110 08:38:43.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.513" endtime="20201110 08:38:43.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.540" endtime="20201110 08:38:43.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.546" endtime="20201110 08:38:43.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.505" endtime="20201110 08:38:43.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.500" endtime="20201110 08:38:43.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.572" endtime="20201110 08:38:43.908"></status>
</kw>
<msg timestamp="20201110 08:38:43.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.568" endtime="20201110 08:38:43.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040332833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040441764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.917" endtime="20201110 08:38:43.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.935" endtime="20201110 08:38:43.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.559" endtime="20201110 08:38:43.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.554" endtime="20201110 08:38:43.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.953" level="INFO">${RESULT} = [{'time': 0.040441764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010893099999999961, 'source_diff': 0.00010893099999999961}, {'time': 0.040580042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:43.944" endtime="20201110 08:38:43.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:43.983" level="INFO">${ACCURACY} = {'source_diff': [0.00010893099999999961, 0.00010894499999999918, 0.00010962500000000208, 0.00010815200000000025, 0.00010872299999999807, 0.00010800000000000393, 0.00010786100000000076, 0.0001089170000...</msg>
<status status="PASS" starttime="20201110 08:38:43.955" endtime="20201110 08:38:43.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.994" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:38:43.992" endtime="20201110 08:38:43.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.999" level="INFO">VALUE: [0.00010893099999999961, 0.00010894499999999918, 0.00010962500000000208, 0.00010815200000000025, 0.00010872299999999807, 0.00010800000000000393, 0.00010786100000000076, 0.00010891700000000004, 0.00010856899999999586, 0.000109514000000005, 0.000109596999999996, 0.00010920799999999953, 0.00010893099999999961, 0.00010834800000000117, 0.00010873599999999817, 0.00010962500000000208, 0.00010880500000000348, 0.00010854100000000366, 0.00010909700000000244, 0.00010909700000000244, 0.00010893099999999961, 0.00010927800000000432, 0.00010893000000000014, 0.00010862500000000108, 0.0001085549999999963, 0.00010802799999999613, 0.00010783299999999468, 0.0001088890000000009, 0.00010961099999999557, 0.00010836100000000126, 0.00010877799999999688, 0.00010911099999999507, 0.00010875000000000468, 0.00010943100000000011, 0.00010819399999999896, 0.00010795799999999828, 0.00010831899999999561, 0.00010912500000000158, 0.00010819399999999896, 0.00010923599999999867, 0.00010837500000000083, 0.00010802800000000307, 0.00010886099999999482, 0.00010863900000000065, 0.00010909700000000244, 0.00010869399999999946, 0.00010959799999999548, 0.00010845899999999825, 0.0001093890000000014, 0.00010787500000000033]</msg>
<status status="PASS" starttime="20201110 08:38:43.996" endtime="20201110 08:38:44.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.985" endtime="20201110 08:38:44.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.009" endtime="20201110 08:38:44.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.017" endtime="20201110 08:38:44.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.013" endtime="20201110 08:38:44.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.004" endtime="20201110 08:38:44.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.495" endtime="20201110 08:38:44.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.494" endtime="20201110 08:38:44.043"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.066" endtime="20201110 08:38:44.086"></status>
</kw>
<msg timestamp="20201110 08:38:44.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.062" endtime="20201110 08:38:44.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.090" endtime="20201110 08:38:44.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.096" endtime="20201110 08:38:44.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.055" endtime="20201110 08:38:44.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.049" endtime="20201110 08:38:44.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.119" endtime="20201110 08:38:44.458"></status>
</kw>
<msg timestamp="20201110 08:38:44.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040355278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040464625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.116" endtime="20201110 08:38:44.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040355278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040464625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.467" endtime="20201110 08:38:44.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.487" endtime="20201110 08:38:44.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.109" endtime="20201110 08:38:44.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.104" endtime="20201110 08:38:44.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.504" level="INFO">${RESULT} = [{'time': 0.040464625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010934699999999575, 'source_diff': 0.00010934699999999575}, {'time': 0.040605861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:44.495" endtime="20201110 08:38:44.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:44.534" level="INFO">${ACCURACY} = {'source_diff': [0.00010934699999999575, 0.00010918000000000039, 0.00010962500000000208, 0.0001093890000000014, 0.00010995800000000028, 0.00011023599999999967, 0.00010905500000000373, 0.00010883299999...</msg>
<status status="PASS" starttime="20201110 08:38:44.506" endtime="20201110 08:38:44.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.545" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:38:44.542" endtime="20201110 08:38:44.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.550" level="INFO">VALUE: [0.00010934699999999575, 0.00010918000000000039, 0.00010962500000000208, 0.0001093890000000014, 0.00010995800000000028, 0.00011023599999999967, 0.00010905500000000373, 0.00010883299999999568, 0.00011054099999999872, 0.00010913900000000115, 0.00010965300000000122, 0.00011044500000000068, 0.00010918099999999986, 0.00010924999999999824, 0.00010918099999999986, 0.0001097219999999996, 0.00010916700000000029, 0.00010881899999999611, 0.00010976399999999831, 0.00011011100000000301, 0.000109514000000005, 0.00010947199999999935, 0.00011059700000000394, 0.0001107220000000006, 0.00010968100000000036, 0.00011044500000000068, 0.00010902699999999765, 0.0001100560000000042, 0.00010945899999999925, 0.00010976400000000525, 0.00010933300000000312, 0.00010944499999999968, 0.00010957000000000328, 0.00011056999999999734, 0.00011011099999999607, 0.00010979099999999797, 0.00010987500000000233, 0.00011006899999999736, 0.00010936099999999532, 0.00011062499999999614, 0.00011045900000000025, 0.00011029099999999847, 0.00010990300000000147, 0.00010932000000000303, 0.00011033300000000412, 0.0001097089999999995, 0.00010961100000000251, 0.00010991700000000104, 0.00011031900000000455, 0.00010881900000000305]</msg>
<status status="PASS" starttime="20201110 08:38:44.547" endtime="20201110 08:38:44.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.536" endtime="20201110 08:38:44.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.560" endtime="20201110 08:38:44.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.568" endtime="20201110 08:38:44.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.564" endtime="20201110 08:38:44.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.555" endtime="20201110 08:38:44.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.045" endtime="20201110 08:38:44.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.044" endtime="20201110 08:38:44.594"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.618" endtime="20201110 08:38:44.639"></status>
</kw>
<msg timestamp="20201110 08:38:44.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.615" endtime="20201110 08:38:44.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.643" endtime="20201110 08:38:44.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.649" endtime="20201110 08:38:44.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.607" endtime="20201110 08:38:44.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.601" endtime="20201110 08:38:44.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.673" endtime="20201110 08:38:45.013"></status>
</kw>
<msg timestamp="20201110 08:38:45.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042429944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.670" endtime="20201110 08:38:45.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042429944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.022" endtime="20201110 08:38:45.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.041" endtime="20201110 08:38:45.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.662" endtime="20201110 08:38:45.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.657" endtime="20201110 08:38:45.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.058" level="INFO">${RESULT} = [{'time': 0.042429944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001109299999999952, 'source_diff': 0.0001109299999999952}, {'time': 0.042572181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:45.049" endtime="20201110 08:38:45.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:45.088" level="INFO">${ACCURACY} = {'source_diff': [0.0001109299999999952, 0.00011156999999999834, 0.0001107769999999994, 0.00011115299999999578, 0.00011051399999999906, 0.00011147200000000135, 0.00010979099999999797, 0.000110638999999...</msg>
<status status="PASS" starttime="20201110 08:38:45.060" endtime="20201110 08:38:45.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.099" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:38:45.097" endtime="20201110 08:38:45.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.104" level="INFO">VALUE: [0.0001109299999999952, 0.00011156999999999834, 0.0001107769999999994, 0.00011115299999999578, 0.00011051399999999906, 0.00011147200000000135, 0.00010979099999999797, 0.00011063899999999571, 0.00011144400000000221, 0.00011131899999999861, 0.00011105500000000573, 0.00011111099999999707, 0.00011113899999999621, 0.00011036100000000326, 0.0001105419999999982, 0.00010986100000000276, 0.00011068099999999442, 0.00011129099999999947, 0.00010983399999999616, 0.00011049999999999949, 0.00011097200000000085, 0.00010980500000000448, 0.0001115549999999993, 0.0001108890000000029, 0.0001103890000000024, 0.00011126399999999981, 0.00011156899999999886, 0.00011144500000000168, 0.00011019500000000043, 0.00011159800000000442, 0.00011074999999999974, 0.00011131899999999861, 0.00011070800000000103, 0.00011030599999999752, 0.00011155599999999877, 0.00011002799999999813, 0.00011130499999999904, 0.00011001399999999856, 0.00011076399999999931, 0.00011068000000000189, 0.00010986099999999582, 0.0001105419999999982, 0.00011069500000000093, 0.00011159800000000442, 0.00010987499999999539, 0.00011019400000000096, 0.00011047299999999982, 0.00011173700000000064, 0.00011004099999999822, 0.00011091599999999563]</msg>
<status status="PASS" starttime="20201110 08:38:45.101" endtime="20201110 08:38:45.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.090" endtime="20201110 08:38:45.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.114" endtime="20201110 08:38:45.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:45.122" endtime="20201110 08:38:45.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.118" endtime="20201110 08:38:45.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.109" endtime="20201110 08:38:45.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.597" endtime="20201110 08:38:45.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.595" endtime="20201110 08:38:45.148"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.171" endtime="20201110 08:38:45.192"></status>
</kw>
<msg timestamp="20201110 08:38:45.193" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.168" endtime="20201110 08:38:45.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.195" endtime="20201110 08:38:45.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.202" endtime="20201110 08:38:45.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.160" endtime="20201110 08:38:45.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.155" endtime="20201110 08:38:45.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.225" endtime="20201110 08:38:45.562"></status>
</kw>
<msg timestamp="20201110 08:38:45.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040665097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04077625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:45.222" endtime="20201110 08:38:45.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040665097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04077625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:45.571" endtime="20201110 08:38:45.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.593" endtime="20201110 08:38:45.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.214" endtime="20201110 08:38:45.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.210" endtime="20201110 08:38:45.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.612" level="INFO">${RESULT} = [{'time': 0.04077625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011115300000000272, 'source_diff': 0.00011115300000000272}, {'time': 0.040920528, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:45.603" endtime="20201110 08:38:45.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:45.642" level="INFO">${ACCURACY} = {'source_diff': [0.00011115300000000272, 0.00011179199999999945, 0.00011081999999999759, 0.00011259799999999848, 0.0001123049999999931, 0.00011190299999999653, 0.00011195800000000228, 0.00011244500000...</msg>
<status status="PASS" starttime="20201110 08:38:45.614" endtime="20201110 08:38:45.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.653" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:38:45.651" endtime="20201110 08:38:45.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.659" level="INFO">VALUE: [0.00011115300000000272, 0.00011179199999999945, 0.00011081999999999759, 0.00011259799999999848, 0.0001123049999999931, 0.00011190299999999653, 0.00011195800000000228, 0.00011244500000000268, 0.00011261099999999857, 0.00011120899999999406, 0.00011131899999999861, 0.00011213899999999721, 0.00011082000000000453, 0.00011136200000000374, 0.00011229100000000047, 0.0001122770000000009, 0.00011230500000000004, 0.00011241700000000354, 0.00011243100000000311, 0.00011166699999999585, 0.00011244399999999627, 0.00011244400000000321, 0.00011122199999999416, 0.00011145900000000125, 0.00011094500000000118, 0.00011179099999999997, 0.0001119169999999961, 0.0001115419999999992, 0.00011154099999999972, 0.00011098600000000042, 0.00011152799999999963, 0.00011076399999999931, 0.00011166599999999638, 0.00011129099999999947, 0.00011152799999999963, 0.00011115299999999578, 0.00011187499999999739, 0.00011220800000000253, 0.00011229199999999995, 0.00011215300000000372, 0.00011141700000000254, 0.00011156899999999886, 0.00011118000000000239, 0.00011230599999999952, 0.00011168000000000289, 0.00011084700000000419, 0.00011150000000000049, 0.00011231999999999909, 0.00011099999999999999, 0.00011111099999999707]</msg>
<status status="PASS" starttime="20201110 08:38:45.656" endtime="20201110 08:38:45.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.644" endtime="20201110 08:38:45.662"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.669" endtime="20201110 08:38:45.671"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:45.677" endtime="20201110 08:38:45.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.673" endtime="20201110 08:38:45.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.664" endtime="20201110 08:38:45.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.150" endtime="20201110 08:38:45.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.149" endtime="20201110 08:38:45.703"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.726" endtime="20201110 08:38:45.747"></status>
</kw>
<msg timestamp="20201110 08:38:45.748" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.723" endtime="20201110 08:38:45.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.751" endtime="20201110 08:38:45.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.757" endtime="20201110 08:38:45.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.715" endtime="20201110 08:38:45.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.709" endtime="20201110 08:38:45.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.780" endtime="20201110 08:38:46.116"></status>
</kw>
<msg timestamp="20201110 08:38:46.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040981417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04109475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:45.777" endtime="20201110 08:38:46.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040981417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04109475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:46.126" endtime="20201110 08:38:46.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.144" endtime="20201110 08:38:46.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.770" endtime="20201110 08:38:46.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.765" endtime="20201110 08:38:46.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.163" level="INFO">${RESULT} = [{'time': 0.04109475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011333300000000018, 'source_diff': 0.00011333300000000018}, {'time': 0.041238111, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:46.154" endtime="20201110 08:38:46.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.193" level="INFO">${ACCURACY} = {'source_diff': [0.00011333300000000018, 0.00011229199999999995, 0.00011329100000000147, 0.00011216700000000329, 0.0001127220000000026, 0.00011329100000000147, 0.00011273700000000164, 0.00011186100000...</msg>
<status status="PASS" starttime="20201110 08:38:46.165" endtime="20201110 08:38:46.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.204" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.201" endtime="20201110 08:38:46.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.209" level="INFO">VALUE: [0.00011333300000000018, 0.00011229199999999995, 0.00011329100000000147, 0.00011216700000000329, 0.0001127220000000026, 0.00011329100000000147, 0.00011273700000000164, 0.00011186100000000476, 0.00011369400000000446, 0.00011363899999999871, 0.0001125420000000002, 0.00011332000000000009, 0.00011198600000000142, 0.00011368099999999742, 0.0001123749999999979, 0.00011254100000000072, 0.00011251400000000106, 0.00011193000000000314, 0.0001122220000000021, 0.00011184699999999825, 0.00011347199999999641, 0.00011330600000000052, 0.00011233399999999866, 0.00011216599999999688, 0.0001120419999999997, 0.0001129169999999971, 0.00011356899999999392, 0.00011330600000000052, 0.00011357000000000034, 0.00011237500000000483, 0.00011251400000000106, 0.00011184700000000519, 0.00011208300000000587, 0.00011236099999999832, 0.00011250000000000149, 0.00011306900000000036, 0.00011234700000000569, 0.00011345799999999684, 0.00011256999999999934, 0.0001135829999999935, 0.00011252800000000063, 0.00011344499999999674, 0.00011297199999999591, 0.00011315300000000472, 0.00011352799999999469, 0.0001127220000000026, 0.00011316599999999788, 0.00011347200000000335, 0.00011236100000000526, 0.00011326399999999487]</msg>
<status status="PASS" starttime="20201110 08:38:46.206" endtime="20201110 08:38:46.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.195" endtime="20201110 08:38:46.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.219" endtime="20201110 08:38:46.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.227" endtime="20201110 08:38:46.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.223" endtime="20201110 08:38:46.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.214" endtime="20201110 08:38:46.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.705" endtime="20201110 08:38:46.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.704" endtime="20201110 08:38:46.253"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.276" endtime="20201110 08:38:46.297"></status>
</kw>
<msg timestamp="20201110 08:38:46.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.273" endtime="20201110 08:38:46.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.300" endtime="20201110 08:38:46.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.306" endtime="20201110 08:38:46.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.265" endtime="20201110 08:38:46.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.260" endtime="20201110 08:38:46.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.330" endtime="20201110 08:38:46.666"></status>
</kw>
<msg timestamp="20201110 08:38:46.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040526375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040640833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.326" endtime="20201110 08:38:46.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040526375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040640833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.675" endtime="20201110 08:38:46.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.694" endtime="20201110 08:38:46.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.319" endtime="20201110 08:38:46.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.314" endtime="20201110 08:38:46.704"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.715" level="INFO">${RESULT} = [{'time': 0.040640833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011445799999999784, 'source_diff': 0.00011445799999999784}, {'time': 0.040787139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:46.706" endtime="20201110 08:38:46.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.745" level="INFO">${ACCURACY} = {'source_diff': [0.00011445799999999784, 0.00011290299999999753, 0.00011338899999999846, 0.0001135420000000012, 0.00011311099999999907, 0.00011343099999999717, 0.00011355600000000077, 0.00011358300000...</msg>
<status status="PASS" starttime="20201110 08:38:46.717" endtime="20201110 08:38:46.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.755" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.753" endtime="20201110 08:38:46.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.761" level="INFO">VALUE: [0.00011445799999999784, 0.00011290299999999753, 0.00011338899999999846, 0.0001135420000000012, 0.00011311099999999907, 0.00011343099999999717, 0.00011355600000000077, 0.00011358300000000043, 0.0001135420000000012, 0.00011369399999999752, 0.00011358399999999991, 0.00011468000000000589, 0.00011413899999999921, 0.00011320800000000353, 0.00011479200000000245, 0.00011369399999999752, 0.00011444499999999774, 0.00011338899999999846, 0.00011463899999999971, 0.0001132499999999953, 0.00011322199999999616, 0.00011320799999999659, 0.00011322299999999563, 0.00011463899999999971, 0.00011383400000000016, 0.00011480600000000202, 0.00011370799999999709, 0.00011431900000000161, 0.00011451399999999612, 0.00011338899999999846, 0.00011395800000000428, 0.00011429199999999501, 0.00011466699999999885, 0.00011377800000000188, 0.00011479200000000245, 0.0001139299999999982, 0.00011404199999999476, 0.00011395800000000428, 0.00011348600000000292, 0.00011434800000000023, 0.00011341599999999813, 0.00011402800000000213, 0.00011394400000000471, 0.0001128749999999984, 0.00011462500000000014, 0.00011448600000000392, 0.00011354099999999478, 0.00011298599999999548, 0.00011354099999999478, 0.00011476400000000331]</msg>
<status status="PASS" starttime="20201110 08:38:46.758" endtime="20201110 08:38:46.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.746" endtime="20201110 08:38:46.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.775" endtime="20201110 08:38:46.778"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.783" endtime="20201110 08:38:46.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.779" endtime="20201110 08:38:46.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.770" endtime="20201110 08:38:46.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.255" endtime="20201110 08:38:46.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.254" endtime="20201110 08:38:46.809"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.832" endtime="20201110 08:38:46.853"></status>
</kw>
<msg timestamp="20201110 08:38:46.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.828" endtime="20201110 08:38:46.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.856" endtime="20201110 08:38:46.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.862" endtime="20201110 08:38:46.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.821" endtime="20201110 08:38:46.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.815" endtime="20201110 08:38:46.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.886" endtime="20201110 08:38:47.221"></status>
</kw>
<msg timestamp="20201110 08:38:47.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040497236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.882" endtime="20201110 08:38:47.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040383028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040497236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.230" endtime="20201110 08:38:47.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.249" endtime="20201110 08:38:47.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.875" endtime="20201110 08:38:47.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.871" endtime="20201110 08:38:47.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.267" level="INFO">${RESULT} = [{'time': 0.040497236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011420799999999759, 'source_diff': 0.00011420799999999759}, {'time': 0.040644528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:47.259" endtime="20201110 08:38:47.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.297" level="INFO">${ACCURACY} = {'source_diff': [0.00011420799999999759, 0.00011419499999999749, 0.00011544399999999927, 0.0001143749999999999, 0.0001150550000000028, 0.00011508300000000193, 0.00011511100000000107, 0.000115291000000...</msg>
<status status="PASS" starttime="20201110 08:38:47.269" endtime="20201110 08:38:47.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.308" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.306" endtime="20201110 08:38:47.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.314" level="INFO">VALUE: [0.00011420799999999759, 0.00011419499999999749, 0.00011544399999999927, 0.0001143749999999999, 0.0001150550000000028, 0.00011508300000000193, 0.00011511100000000107, 0.00011529100000000347, 0.00011479199999999551, 0.00011452799999999569, 0.00011440199999999956, 0.00011404100000000222, 0.00011501399999999662, 0.00011479200000000245, 0.00011515299999999978, 0.00011468000000000589, 0.00011561100000000157, 0.00011398599999999648, 0.00011481899999999517, 0.00011480600000000202, 0.0001142499999999963, 0.0001150699999999949, 0.00011529200000000295, 0.00011380600000000102, 0.00011400000000000299, 0.00011511099999999413, 0.0001157090000000055, 0.00011549999999999755, 0.0001155699999999954, 0.0001143749999999999, 0.00011500000000000399, 0.00011413899999999921, 0.00011523600000000467, 0.00011545799999999884, 0.00011418100000000486, 0.000115082999999995, 0.0001143749999999999, 0.00011512500000000064, 0.00011462500000000014, 0.00011467999999999895, 0.00011506899999999542, 0.00011540300000000003, 0.00011480500000000254, 0.0001138619999999993, 0.0001140420000000017, 0.00011513900000000021, 0.00011509699999999456, 0.00011466699999999885, 0.00011418099999999792, 0.00011456900000000186]</msg>
<status status="PASS" starttime="20201110 08:38:47.311" endtime="20201110 08:38:47.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.299" endtime="20201110 08:38:47.317"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.323" endtime="20201110 08:38:47.326"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.331" endtime="20201110 08:38:47.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.327" endtime="20201110 08:38:47.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.318" endtime="20201110 08:38:47.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.811" endtime="20201110 08:38:47.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.810" endtime="20201110 08:38:47.357"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.384" endtime="20201110 08:38:47.407"></status>
</kw>
<msg timestamp="20201110 08:38:47.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.380" endtime="20201110 08:38:47.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.411" endtime="20201110 08:38:47.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.418" endtime="20201110 08:38:47.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.370" endtime="20201110 08:38:47.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.364" endtime="20201110 08:38:47.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.442" endtime="20201110 08:38:47.782"></status>
</kw>
<msg timestamp="20201110 08:38:47.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045523972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045639042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.439" endtime="20201110 08:38:47.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045523972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045639042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.791" endtime="20201110 08:38:47.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.809" endtime="20201110 08:38:47.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.431" endtime="20201110 08:38:47.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.426" endtime="20201110 08:38:47.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.828" level="INFO">${RESULT} = [{'time': 0.045639042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001150699999999949, 'source_diff': 0.0001150699999999949}, {'time': 0.045786389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:47.820" endtime="20201110 08:38:47.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.858" level="INFO">${ACCURACY} = {'source_diff': [0.0001150699999999949, 0.00011581999999999565, 0.00011663800000000224, 0.00011661100000000257, 0.00011668000000000095, 0.00011604199999999676, 0.00011620899999999906, 0.00011505600000...</msg>
<status status="PASS" starttime="20201110 08:38:47.830" endtime="20201110 08:38:47.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.869" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.867" endtime="20201110 08:38:47.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.874" level="INFO">VALUE: [0.0001150699999999949, 0.00011581999999999565, 0.00011663800000000224, 0.00011661100000000257, 0.00011668000000000095, 0.00011604199999999676, 0.00011620899999999906, 0.00011505600000000227, 0.00011579199999999651, 0.00011599999999999805, 0.0001149299999999992, 0.00011538900000000046, 0.00011676399999999837, 0.00011573600000000517, 0.0001158750000000014, 0.00011486100000000082, 0.0001156249999999942, 0.00011580600000000302, 0.00011502799999999619, 0.00011637499999999495, 0.00011647199999999941, 0.00011601399999999762, 0.0001163750000000019, 0.00011631999999999615, 0.00011638900000000146, 0.00011618099999999992, 0.00011599999999999805, 0.00011567999999999995, 0.00011611100000000207, 0.00011638800000000199, 0.00011613900000000121, 0.00011557000000000234, 0.00011661100000000257, 0.00011558400000000191, 0.00011601299999999815, 0.00011645799999999984, 0.00011673599999999923, 0.00011570799999999909, 0.0001152499999999973, 0.00011505600000000227, 0.00011558300000000243, 0.0001157369999999977, 0.00011631999999999615, 0.00011648599999999898, 0.00011626399999999787, 0.00011556900000000286, 0.00011518100000000586, 0.00011508300000000193, 0.00011551399999999712, 0.00011486100000000082]</msg>
<status status="PASS" starttime="20201110 08:38:47.871" endtime="20201110 08:38:47.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.860" endtime="20201110 08:38:47.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.884" endtime="20201110 08:38:47.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.892" endtime="20201110 08:38:47.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.888" endtime="20201110 08:38:47.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.879" endtime="20201110 08:38:47.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.359" endtime="20201110 08:38:47.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.358" endtime="20201110 08:38:47.918"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.941" endtime="20201110 08:38:47.964"></status>
</kw>
<msg timestamp="20201110 08:38:47.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.938" endtime="20201110 08:38:47.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.967" endtime="20201110 08:38:47.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.974" endtime="20201110 08:38:47.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.931" endtime="20201110 08:38:47.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.925" endtime="20201110 08:38:47.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.997" endtime="20201110 08:38:48.346"></status>
</kw>
<msg timestamp="20201110 08:38:48.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040939, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041056139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:47.994" endtime="20201110 08:38:48.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040939, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041056139, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:48.355" endtime="20201110 08:38:48.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.373" endtime="20201110 08:38:48.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.987" endtime="20201110 08:38:48.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.982" endtime="20201110 08:38:48.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.392" level="INFO">${RESULT} = [{'time': 0.041056139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011713899999999527, 'source_diff': 0.00011713899999999527}, {'time': 0.041201417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:48.383" endtime="20201110 08:38:48.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:48.422" level="INFO">${ACCURACY} = {'source_diff': [0.00011713899999999527, 0.00011637499999999495, 0.00011673600000000617, 0.00011587499999999445, 0.00011665300000000128, 0.00011586099999999488, 0.0001159029999999936, 0.00011602800000...</msg>
<status status="PASS" starttime="20201110 08:38:48.394" endtime="20201110 08:38:48.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.433" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:48.431" endtime="20201110 08:38:48.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.439" level="INFO">VALUE: [0.00011713899999999527, 0.00011637499999999495, 0.00011673600000000617, 0.00011587499999999445, 0.00011665300000000128, 0.00011586099999999488, 0.0001159029999999936, 0.00011602800000000413, 0.00011616599999999394, 0.00011636100000000232, 0.00011584800000000173, 0.0001165550000000043, 0.0001164170000000006, 0.0001173049999999981, 0.00011684699999999631, 0.00011763900000000271, 0.0001163750000000019, 0.00011723599999999973, 0.0001170970000000035, 0.0001164029999999941, 0.00011636100000000232, 0.00011763900000000271, 0.00011641600000000113, 0.00011762500000000314, 0.00011679100000000497, 0.0001164170000000006, 0.0001169170000000011, 0.00011761199999999611, 0.00011677800000000488, 0.00011745900000000031, 0.00011606900000000336, 0.00011731899999999768, 0.00011636100000000232, 0.000117082999999997, 0.00011607000000000284, 0.00011590199999999412, 0.00011731999999999715, 0.0001158750000000014, 0.00011762500000000314, 0.00011712500000000264, 0.00011605599999999633, 0.0001173049999999981, 0.00011594499999999924, 0.00011620899999999906, 0.00011706900000000436, 0.00011732000000000409, 0.00011593099999999967, 0.00011668000000000095, 0.00011761099999999663, 0.0001167499999999988]</msg>
<status status="PASS" starttime="20201110 08:38:48.436" endtime="20201110 08:38:48.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.424" endtime="20201110 08:38:48.442"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.448" endtime="20201110 08:38:48.451"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.457" endtime="20201110 08:38:48.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.452" endtime="20201110 08:38:48.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.444" endtime="20201110 08:38:48.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.921" endtime="20201110 08:38:48.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.919" endtime="20201110 08:38:48.483"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.506" endtime="20201110 08:38:48.528"></status>
</kw>
<msg timestamp="20201110 08:38:48.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.502" endtime="20201110 08:38:48.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.532" endtime="20201110 08:38:48.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.538" endtime="20201110 08:38:48.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.495" endtime="20201110 08:38:48.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.489" endtime="20201110 08:38:48.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.561" endtime="20201110 08:38:48.912"></status>
</kw>
<msg timestamp="20201110 08:38:48.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040820639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040937889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.558" endtime="20201110 08:38:48.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040820639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040937889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.921" endtime="20201110 08:38:48.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.940" endtime="20201110 08:38:48.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.551" endtime="20201110 08:38:48.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.546" endtime="20201110 08:38:48.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.960" level="INFO">${RESULT} = [{'time': 0.040937889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001172499999999993, 'source_diff': 0.0001172499999999993}, {'time': 0.041083208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:48.952" endtime="20201110 08:38:48.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:48.990" level="INFO">${ACCURACY} = {'source_diff': [0.0001172499999999993, 0.0001172770000000059, 0.0001168750000000024, 0.00011745800000000084, 0.00011817999999999551, 0.00011847300000000088, 0.00011833299999999825, 0.0001181249999999...</msg>
<status status="PASS" starttime="20201110 08:38:48.962" endtime="20201110 08:38:48.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.001" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:48.999" endtime="20201110 08:38:49.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.007" level="INFO">VALUE: [0.0001172499999999993, 0.0001172770000000059, 0.0001168750000000024, 0.00011745800000000084, 0.00011817999999999551, 0.00011847300000000088, 0.00011833299999999825, 0.0001181249999999967, 0.0001173750000000029, 0.00011723599999999973, 0.00011819399999999508, 0.00011693100000000067, 0.00011748599999999998, 0.00011744500000000074, 0.00011758399999999697, 0.00011777799999999894, 0.00011702799999999819, 0.00011863900000000371, 0.00011769400000000152, 0.00011859699999999807, 0.00011713900000000221, 0.00011845800000000184, 0.00011708399999999647, 0.00011813899999999627, 0.00011854099999999979, 0.00011722299999999963, 0.00011781899999999818, 0.00011833299999999825, 0.00011722200000000016, 0.00011752699999999922, 0.00011798600000000048, 0.00011682000000000359, 0.00011755599999999783, 0.00011863900000000371, 0.00011845900000000131, 0.00011738900000000246, 0.00011686099999999588, 0.0001174300000000017, 0.00011784800000000373, 0.0001177499999999998, 0.00011731899999999768, 0.00011794500000000124, 0.00011741600000000213, 0.00011788900000000296, 0.00011794400000000177, 0.0001181249999999967, 0.00011866600000000338, 0.0001174300000000017, 0.00011776399999999937, 0.00011863899999999677]</msg>
<status status="PASS" starttime="20201110 08:38:49.004" endtime="20201110 08:38:49.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.992" endtime="20201110 08:38:49.010"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.016" endtime="20201110 08:38:49.019"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.025" endtime="20201110 08:38:49.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.020" endtime="20201110 08:38:49.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.012" endtime="20201110 08:38:49.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.485" endtime="20201110 08:38:49.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.484" endtime="20201110 08:38:49.051"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.074" endtime="20201110 08:38:49.096"></status>
</kw>
<msg timestamp="20201110 08:38:49.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.070" endtime="20201110 08:38:49.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.100" endtime="20201110 08:38:49.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.106" endtime="20201110 08:38:49.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.063" endtime="20201110 08:38:49.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.057" endtime="20201110 08:38:49.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.129" endtime="20201110 08:38:49.476"></status>
</kw>
<msg timestamp="20201110 08:38:49.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040647181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040765736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.126" endtime="20201110 08:38:49.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040647181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040765736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.486" endtime="20201110 08:38:49.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.504" endtime="20201110 08:38:49.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.119" endtime="20201110 08:38:49.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.114" endtime="20201110 08:38:49.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.522" level="INFO">${RESULT} = [{'time': 0.040765736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011855499999999936, 'source_diff': 0.00011855499999999936}, {'time': 0.040914014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:49.514" endtime="20201110 08:38:49.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:49.552" level="INFO">${ACCURACY} = {'source_diff': [0.00011855499999999936, 0.00011836099999999738, 0.00011907000000000584, 0.00011850000000000055, 0.00011876400000000037, 0.00011929200000000001, 0.00011822200000000116, 0.0001183609999...</msg>
<status status="PASS" starttime="20201110 08:38:49.524" endtime="20201110 08:38:49.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.563" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:49.560" endtime="20201110 08:38:49.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.568" level="INFO">VALUE: [0.00011855499999999936, 0.00011836099999999738, 0.00011907000000000584, 0.00011850000000000055, 0.00011876400000000037, 0.00011929200000000001, 0.00011822200000000116, 0.00011836099999999738, 0.0001187500000000008, 0.000119082999999999, 0.00011877799999999994, 0.00011818100000000192, 0.0001183750000000039, 0.0001194029999999971, 0.00011900000000000105, 0.00011870800000000209, 0.00011787499999999645, 0.00011926400000000087, 0.00011855599999999883, 0.00011883299999999875, 0.00011908300000000593, 0.00011873600000000123, 0.00011854099999999979, 0.00011834699999999782, 0.00011802700000000665, 0.00011927700000000097, 0.00011879199999999951, 0.00011820899999999412, 0.00011873600000000123, 0.00011820900000000106, 0.00011836099999999738, 0.0001192500000000013, 0.00011967999999999701, 0.0001187500000000008, 0.00011902800000000019, 0.00011794400000000177, 0.00011933299999999925, 0.00011876400000000037, 0.0001184029999999961, 0.00011788899999999602, 0.0001178750000000034, 0.0001182370000000002, 0.00011931899999999968, 0.00011854199999999926, 0.0001189170000000031, 0.00011959699999999907, 0.00011863900000000371, 0.0001196249999999982, 0.00011930599999999958, 0.000118695000000002]</msg>
<status status="PASS" starttime="20201110 08:38:49.565" endtime="20201110 08:38:49.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.554" endtime="20201110 08:38:49.571"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.577" endtime="20201110 08:38:49.580"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.585" endtime="20201110 08:38:49.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.581" endtime="20201110 08:38:49.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.573" endtime="20201110 08:38:49.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.053" endtime="20201110 08:38:49.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.052" endtime="20201110 08:38:49.611"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.634" endtime="20201110 08:38:49.654"></status>
</kw>
<msg timestamp="20201110 08:38:49.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.630" endtime="20201110 08:38:49.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.658" endtime="20201110 08:38:49.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.664" endtime="20201110 08:38:49.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.623" endtime="20201110 08:38:49.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.617" endtime="20201110 08:38:49.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.687" endtime="20201110 08:38:50.034"></status>
</kw>
<msg timestamp="20201110 08:38:50.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.684" endtime="20201110 08:38:50.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040028222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040148208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.043" endtime="20201110 08:38:50.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.062" endtime="20201110 08:38:50.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.676" endtime="20201110 08:38:50.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.672" endtime="20201110 08:38:50.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.081" level="INFO">${RESULT} = [{'time': 0.040148208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011998599999999554, 'source_diff': 0.00011998599999999554}, {'time': 0.040299486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:50.072" endtime="20201110 08:38:50.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:50.111" level="INFO">${ACCURACY} = {'source_diff': [0.00011998599999999554, 0.00012063900000000571, 0.00011998599999999554, 0.00012069499999999705, 0.00012059700000000007, 0.00011918100000000292, 0.0001204579999999969, 0.00011980500000...</msg>
<status status="PASS" starttime="20201110 08:38:50.083" endtime="20201110 08:38:50.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.122" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:50.119" endtime="20201110 08:38:50.122"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.127" level="INFO">VALUE: [0.00011998599999999554, 0.00012063900000000571, 0.00011998599999999554, 0.00012069499999999705, 0.00012059700000000007, 0.00011918100000000292, 0.0001204579999999969, 0.0001198050000000006, 0.00011904199999999976, 0.00011894399999999583, 0.00012000000000000205, 0.00011891600000000363, 0.00012079200000000151, 0.00011918099999999598, 0.00011902700000000072, 0.000120777999999995, 0.00011905599999999933, 0.00012000000000000205, 0.00011980499999999367, 0.0001201249999999987, 0.00011888899999999702, 0.00011943099999999623, 0.0001194300000000037, 0.00011970799999999615, 0.0001195829999999995, 0.00011937499999999795, 0.00011970800000000309, 0.00011954100000000079, 0.0001199449999999963, 0.00011952800000000069, 0.00011940200000000456, 0.0001194029999999971, 0.0001191249999999977, 0.00011959799999999854, 0.00012033300000000025, 0.00011941599999999719, 0.0001194029999999971, 0.00011941599999999719, 0.00012063899999999877, 0.00011942999999999676, 0.00012008399999999947, 0.00011970800000000309, 0.00011941600000000413, 0.00012011099999999914, 0.00012040300000000503, 0.00011887499999999745, 0.00012045800000000384, 0.00012031900000000068, 0.00011886099999999789, 0.00011943100000000317]</msg>
<status status="PASS" starttime="20201110 08:38:50.124" endtime="20201110 08:38:50.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.113" endtime="20201110 08:38:50.130"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.136" endtime="20201110 08:38:50.139"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.145" endtime="20201110 08:38:50.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.140" endtime="20201110 08:38:50.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.132" endtime="20201110 08:38:50.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.613" endtime="20201110 08:38:50.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.612" endtime="20201110 08:38:50.171"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.196" endtime="20201110 08:38:50.218"></status>
</kw>
<msg timestamp="20201110 08:38:50.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.192" endtime="20201110 08:38:50.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.222" endtime="20201110 08:38:50.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.228" endtime="20201110 08:38:50.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.184" endtime="20201110 08:38:50.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.177" endtime="20201110 08:38:50.235"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.252" endtime="20201110 08:38:50.600"></status>
</kw>
<msg timestamp="20201110 08:38:50.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042552361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042672611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.248" endtime="20201110 08:38:50.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042552361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042672611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.609" endtime="20201110 08:38:50.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.627" endtime="20201110 08:38:50.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.241" endtime="20201110 08:38:50.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.236" endtime="20201110 08:38:50.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.646" level="INFO">${RESULT} = [{'time': 0.042672611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001202500000000023, 'source_diff': 0.0001202500000000023}, {'time': 0.042823903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:50.637" endtime="20201110 08:38:50.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:50.676" level="INFO">${ACCURACY} = {'source_diff': [0.0001202500000000023, 0.00012111100000000014, 0.0001216250000000002, 0.0001212500000000033, 0.00012098599999999654, 0.00012038900000000546, 0.00011984699999999932, 0.0001209579999999...</msg>
<status status="PASS" starttime="20201110 08:38:50.648" endtime="20201110 08:38:50.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.687" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:50.685" endtime="20201110 08:38:50.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.692" level="INFO">VALUE: [0.0001202500000000023, 0.00012111100000000014, 0.0001216250000000002, 0.0001212500000000033, 0.00012098599999999654, 0.00012038900000000546, 0.00011984699999999932, 0.0001209579999999974, 0.00011984699999999932, 0.0001202500000000023, 0.00012006900000000043, 0.00012074999999999586, 0.0001216250000000002, 0.00012067999999999801, 0.00012159800000000054, 0.0001214579999999979, 0.00012048700000000245, 0.0001206249999999992, 0.00012045899999999637, 0.00012163899999999978, 0.00012018099999999698, 0.00012111100000000014, 0.00012176400000000337, 0.00012098599999999654, 0.00012129100000000254, 0.0001214579999999979, 0.00012020800000000359, 0.00012109700000000057, 0.0001199029999999976, 0.00012108400000000047, 0.0001209579999999974, 0.00012041699999999766, 0.0001216250000000002, 0.00012109800000000004, 0.0001207909999999951, 0.00012050000000000255, 0.0001215979999999936, 0.0001214579999999979, 0.000120695000000004, 0.00012006900000000043, 0.0001216250000000002, 0.00011993100000000367, 0.00012126400000000287, 0.00012130600000000158, 0.0001205830000000005, 0.00012055600000000083, 0.00012077800000000194, 0.0001216250000000002, 0.00012005499999999392, 0.00012074999999999586]</msg>
<status status="PASS" starttime="20201110 08:38:50.689" endtime="20201110 08:38:50.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.678" endtime="20201110 08:38:50.695"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.702" endtime="20201110 08:38:50.704"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.710" endtime="20201110 08:38:50.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.706" endtime="20201110 08:38:50.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.697" endtime="20201110 08:38:50.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.173" endtime="20201110 08:38:50.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.172" endtime="20201110 08:38:50.736"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.759" endtime="20201110 08:38:50.782"></status>
</kw>
<msg timestamp="20201110 08:38:50.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.756" endtime="20201110 08:38:50.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.785" endtime="20201110 08:38:50.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.792" endtime="20201110 08:38:50.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.749" endtime="20201110 08:38:50.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.743" endtime="20201110 08:38:50.799"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.817" endtime="20201110 08:38:51.167"></status>
</kw>
<msg timestamp="20201110 08:38:51.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040914708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041035597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.813" endtime="20201110 08:38:51.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040914708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041035597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.176" endtime="20201110 08:38:51.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.194" endtime="20201110 08:38:51.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.806" endtime="20201110 08:38:51.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.801" endtime="20201110 08:38:51.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.215" level="INFO">${RESULT} = [{'time': 0.041035597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012088899999999903, 'source_diff': 0.00012088899999999903}, {'time': 0.041187903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:51.206" endtime="20201110 08:38:51.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.245" level="INFO">${ACCURACY} = {'source_diff': [0.00012088899999999903, 0.00012088899999999903, 0.00012199999999999711, 0.00012237500000000096, 0.00012218099999999898, 0.00012218099999999898, 0.00012183300000000175, 0.0001217919999...</msg>
<status status="PASS" starttime="20201110 08:38:51.217" endtime="20201110 08:38:51.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.256" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.254" endtime="20201110 08:38:51.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.261" level="INFO">VALUE: [0.00012088899999999903, 0.00012088899999999903, 0.00012199999999999711, 0.00012237500000000096, 0.00012218099999999898, 0.00012218099999999898, 0.00012183300000000175, 0.00012179199999999557, 0.00012100000000000305, 0.00012086099999999989, 0.00012229100000000354, 0.00012105600000000133, 0.00012238900000000053, 0.00012161100000000064, 0.00012261100000000164, 0.00012166699999999891, 0.00012258299999999556, 0.00012136199999999986, 0.00012195800000000534, 0.0001227630000000049, 0.00012237500000000096, 0.00012127800000000244, 0.00012119499999999755, 0.00012183300000000175, 0.00012154200000000226, 0.00012138800000000005, 0.00012209700000000157, 0.00012101400000000262, 0.00012102800000000219, 0.0001212229999999967, 0.0001209029999999986, 0.00012141599999999919, 0.00012104199999999482, 0.00012230599999999564, 0.0001226109999999947, 0.00012186099999999395, 0.00012233300000000225, 0.00012140199999999962, 0.00012137499999999996, 0.0001217370000000037, 0.0001215830000000015, 0.0001222370000000042, 0.00012176400000000337, 0.0001226250000000012, 0.0001224999999999976, 0.00012181899999999524, 0.00012213900000000028, 0.00012266699999999991, 0.00012199999999999711, 0.00012276399999999743]</msg>
<status status="PASS" starttime="20201110 08:38:51.258" endtime="20201110 08:38:51.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.247" endtime="20201110 08:38:51.264"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.271" endtime="20201110 08:38:51.273"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.279" endtime="20201110 08:38:51.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.275" endtime="20201110 08:38:51.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.266" endtime="20201110 08:38:51.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.738" endtime="20201110 08:38:51.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.737" endtime="20201110 08:38:51.305"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.328" endtime="20201110 08:38:51.351"></status>
</kw>
<msg timestamp="20201110 08:38:51.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.325" endtime="20201110 08:38:51.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.354" endtime="20201110 08:38:51.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.360" endtime="20201110 08:38:51.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.317" endtime="20201110 08:38:51.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.312" endtime="20201110 08:38:51.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.384" endtime="20201110 08:38:51.732"></status>
</kw>
<msg timestamp="20201110 08:38:51.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040635917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.380" endtime="20201110 08:38:51.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040635917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.742" endtime="20201110 08:38:51.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.761" endtime="20201110 08:38:51.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.373" endtime="20201110 08:38:51.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.368" endtime="20201110 08:38:51.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.780" level="INFO">${RESULT} = [{'time': 0.040758069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012215200000000037, 'source_diff': 0.00012215200000000037}, {'time': 0.040914403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:51.771" endtime="20201110 08:38:51.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.810" level="INFO">${ACCURACY} = {'source_diff': [0.00012215200000000037, 0.00012318099999999998, 0.00012186100000000089, 0.00012336100000000239, 0.0001228199999999957, 0.00012204100000000329, 0.0001237920000000045, 0.000123112000000...</msg>
<status status="PASS" starttime="20201110 08:38:51.782" endtime="20201110 08:38:51.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.821" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.819" endtime="20201110 08:38:51.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.827" level="INFO">VALUE: [0.00012215200000000037, 0.00012318099999999998, 0.00012186100000000089, 0.00012336100000000239, 0.0001228199999999957, 0.00012204100000000329, 0.0001237920000000045, 0.0001231120000000016, 0.00012186100000000089, 0.0001219029999999996, 0.00012298599999999854, 0.0001224030000000001, 0.0001231250000000017, 0.00012309700000000257, 0.00012252799999999675, 0.00012230600000000258, 0.00012183300000000175, 0.00012237500000000096, 0.0001226109999999947, 0.00012233300000000225, 0.00012281900000000318, 0.00012205500000000286, 0.00012345899999999937, 0.00012187500000000046, 0.00012255600000000283, 0.00012256999999999546, 0.00012311100000000214, 0.00012333400000000272, 0.00012333300000000325, 0.0001231250000000017, 0.00012224999999999736, 0.00012205600000000233, 0.0001235700000000034, 0.0001225280000000037, 0.0001222359999999978, 0.00012197199999999797, 0.00012236200000000086, 0.00012363900000000178, 0.00012279199999999657, 0.0001231250000000017, 0.00012205600000000233, 0.00012270899999999862, 0.0001227909999999971, 0.00012254199999999632, 0.00012283399999999528, 0.00012224999999999736, 0.0001234030000000011, 0.0001227359999999983, 0.00012336100000000239, 0.00012222199999999822]</msg>
<status status="PASS" starttime="20201110 08:38:51.824" endtime="20201110 08:38:51.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.812" endtime="20201110 08:38:51.835"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.842" endtime="20201110 08:38:51.845"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.851" endtime="20201110 08:38:51.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.846" endtime="20201110 08:38:51.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.837" endtime="20201110 08:38:51.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.307" endtime="20201110 08:38:51.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.306" endtime="20201110 08:38:51.878"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.901" endtime="20201110 08:38:51.925"></status>
</kw>
<msg timestamp="20201110 08:38:51.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.898" endtime="20201110 08:38:51.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.928" endtime="20201110 08:38:51.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.934" endtime="20201110 08:38:51.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.890" endtime="20201110 08:38:51.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.884" endtime="20201110 08:38:51.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.958" endtime="20201110 08:38:52.304"></status>
</kw>
<msg timestamp="20201110 08:38:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041726542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041850264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.955" endtime="20201110 08:38:52.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041726542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041850264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.314" endtime="20201110 08:38:52.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.332" endtime="20201110 08:38:52.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.948" endtime="20201110 08:38:52.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.943" endtime="20201110 08:38:52.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.352" level="INFO">${RESULT} = [{'time': 0.041850264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012372199999999972, 'source_diff': 0.00012372199999999972}, {'time': 0.042003583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:52.342" endtime="20201110 08:38:52.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:52.382" level="INFO">${ACCURACY} = {'source_diff': [0.00012372199999999972, 0.00012324999999999836, 0.0001243199999999972, 0.00012384699999999638, 0.00012469400000000158, 0.00012369400000000058, 0.00012381899999999724, 0.00012409699999...</msg>
<status status="PASS" starttime="20201110 08:38:52.354" endtime="20201110 08:38:52.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.393" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:52.391" endtime="20201110 08:38:52.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.399" level="INFO">VALUE: [0.00012372199999999972, 0.00012324999999999836, 0.0001243199999999972, 0.00012384699999999638, 0.00012469400000000158, 0.00012369400000000058, 0.00012381899999999724, 0.00012409699999999663, 0.0001234030000000011, 0.0001234999999999986, 0.000124777999999999, 0.00012317999999999357, 0.0001244999999999996, 0.00012419500000000055, 0.00012358400000000297, 0.00012476400000000637, 0.00012316700000000042, 0.0001247909999999991, 0.00012379199999999757, 0.00012320799999999965, 0.00012316600000000094, 0.00012333300000000325, 0.0001229030000000006, 0.00012382000000000365, 0.00012447200000000047, 0.00012430499999999817, 0.00012304199999999682, 0.00012434700000000382, 0.00012437500000000296, 0.00012374999999999886, 0.000123568999999997, 0.00012294399999999983, 0.00012413900000000228, 0.00012337500000000196, 0.00012337499999999502, 0.00012286099999999495, 0.00012434700000000382, 0.00012336100000000239, 0.00012341700000000067, 0.00012355499999999742, 0.0001234449999999998, 0.0001241250000000027, 0.0001237359999999993, 0.00012369400000000058, 0.00012426399999999893, 0.00012430599999999764, 0.00012379100000000504, 0.00012393100000000074, 0.00012351399999999818, 0.0001231800000000005]</msg>
<status status="PASS" starttime="20201110 08:38:52.395" endtime="20201110 08:38:52.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.384" endtime="20201110 08:38:52.402"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.408" endtime="20201110 08:38:52.411"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.417" endtime="20201110 08:38:52.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.412" endtime="20201110 08:38:52.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.404" endtime="20201110 08:38:52.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.880" endtime="20201110 08:38:52.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.878" endtime="20201110 08:38:52.443"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.466" endtime="20201110 08:38:52.490"></status>
</kw>
<msg timestamp="20201110 08:38:52.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.463" endtime="20201110 08:38:52.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.493" endtime="20201110 08:38:52.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.500" endtime="20201110 08:38:52.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.456" endtime="20201110 08:38:52.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.450" endtime="20201110 08:38:52.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.524" endtime="20201110 08:38:52.869"></status>
</kw>
<msg timestamp="20201110 08:38:52.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041440847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041565194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.521" endtime="20201110 08:38:52.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041440847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041565194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.879" endtime="20201110 08:38:52.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.898" endtime="20201110 08:38:52.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.513" endtime="20201110 08:38:52.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.508" endtime="20201110 08:38:52.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.917" level="INFO">${RESULT} = [{'time': 0.041565194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012434699999999688, 'source_diff': 0.00012434699999999688}, {'time': 0.041721514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:52.908" endtime="20201110 08:38:52.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:52.948" level="INFO">${ACCURACY} = {'source_diff': [0.00012434699999999688, 0.00012409700000000357, 0.00012455500000000536, 0.00012384700000000332, 0.0001256380000000043, 0.00012393100000000074, 0.00012458299999999756, 0.00012566600000...</msg>
<status status="PASS" starttime="20201110 08:38:52.919" endtime="20201110 08:38:52.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.959" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:52.957" endtime="20201110 08:38:52.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.964" level="INFO">VALUE: [0.00012434699999999688, 0.00012409700000000357, 0.00012455500000000536, 0.00012384700000000332, 0.0001256380000000043, 0.00012393100000000074, 0.00012458299999999756, 0.00012566600000000344, 0.00012406900000000443, 0.00012501399999999968, 0.00012563900000000378, 0.00012497200000000097, 0.00012388900000000203, 0.0001249580000000014, 0.00012409699999999663, 0.00012454200000000526, 0.00012547200000000147, 0.00012563899999999684, 0.0001255000000000006, 0.00012456900000000493, 0.00012494499999999437, 0.00012402799999999825, 0.0001247360000000003, 0.00012455500000000536, 0.00012383300000000375, 0.0001241800000000015, 0.00012512499999999677, 0.0001253889999999966, 0.0001242359999999998, 0.00012474999999999986, 0.00012387499999999552, 0.00012437500000000296, 0.00012530499999999917, 0.0001239030000000016, 0.00012394400000000083, 0.00012566600000000344, 0.00012408400000000347, 0.0001238879999999956, 0.00012445900000000037, 0.00012566699999999598, 0.00012531899999999874, 0.00012552799999999975, 0.00012451399999999918, 0.00012566699999999598, 0.00012493000000000226, 0.00012579199999999957, 0.00012568100000000249, 0.00012437499999999602, 0.00012562499999999727, 0.00012454199999999832]</msg>
<status status="PASS" starttime="20201110 08:38:52.961" endtime="20201110 08:38:52.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.950" endtime="20201110 08:38:52.968"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.974" endtime="20201110 08:38:52.977"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.983" endtime="20201110 08:38:53.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.978" endtime="20201110 08:38:53.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.969" endtime="20201110 08:38:53.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.445" endtime="20201110 08:38:53.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.444" endtime="20201110 08:38:53.009"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.032" endtime="20201110 08:38:53.056"></status>
</kw>
<msg timestamp="20201110 08:38:53.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.029" endtime="20201110 08:38:53.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.060" endtime="20201110 08:38:53.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.066" endtime="20201110 08:38:53.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.021" endtime="20201110 08:38:53.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.016" endtime="20201110 08:38:53.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.090" endtime="20201110 08:38:53.436"></status>
</kw>
<msg timestamp="20201110 08:38:53.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041455889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041581097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.086" endtime="20201110 08:38:53.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041455889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041581097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.446" endtime="20201110 08:38:53.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.464" endtime="20201110 08:38:53.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.079" endtime="20201110 08:38:53.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.074" endtime="20201110 08:38:53.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.486" level="INFO">${RESULT} = [{'time': 0.041581097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001252079999999947, 'source_diff': 0.0001252079999999947}, {'time': 0.041733403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:53.477" endtime="20201110 08:38:53.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:53.516" level="INFO">${ACCURACY} = {'source_diff': [0.0001252079999999947, 0.00012486100000000389, 0.0001259439999999959, 0.00012488900000000303, 0.00012663899999999784, 0.0001253889999999966, 0.0001257360000000013, 0.00012670800000000...</msg>
<status status="PASS" starttime="20201110 08:38:53.488" endtime="20201110 08:38:53.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.527" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:53.525" endtime="20201110 08:38:53.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.533" level="INFO">VALUE: [0.0001252079999999947, 0.00012486100000000389, 0.0001259439999999959, 0.00012488900000000303, 0.00012663899999999784, 0.0001253889999999966, 0.0001257360000000013, 0.00012670800000000315, 0.00012555499999999942, 0.00012629200000000007, 0.00012520900000000112, 0.00012498600000000054, 0.00012558399999999803, 0.00012654200000000032, 0.00012580499999999967, 0.00012583399999999828, 0.00012658299999999956, 0.0001263199999999992, 0.00012576400000000043, 0.00012526399999999993, 0.00012666700000000392, 0.0001257079999999952, 0.0001255559999999989, 0.0001263329999999993, 0.00012543100000000224, 0.00012572200000000172, 0.00012666699999999698, 0.00012669400000000358, 0.00012516699999999548, 0.0001265000000000016, 0.0001253889999999966, 0.00012542999999999582, 0.00012667999999999707, 0.00012559699999999813, 0.00012615300000000385, 0.00012666700000000392, 0.00012637499999999802, 0.00012525000000000036, 0.00012613900000000428, 0.00012661100000000564, 0.00012645799999999596, 0.00012519499999999462, 0.00012525000000000036, 0.0001248889999999961, 0.00012555499999999942, 0.00012570900000000162, 0.00012641699999999673, 0.0001261109999999982, 0.00012594499999999537, 0.00012545900000000137]</msg>
<status status="PASS" starttime="20201110 08:38:53.530" endtime="20201110 08:38:53.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.518" endtime="20201110 08:38:53.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.543" endtime="20201110 08:38:53.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.551" endtime="20201110 08:38:53.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.547" endtime="20201110 08:38:53.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.538" endtime="20201110 08:38:53.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.011" endtime="20201110 08:38:53.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.010" endtime="20201110 08:38:53.577"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.601" endtime="20201110 08:38:53.624"></status>
</kw>
<msg timestamp="20201110 08:38:53.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.597" endtime="20201110 08:38:53.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.628" endtime="20201110 08:38:53.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.634" endtime="20201110 08:38:53.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.590" endtime="20201110 08:38:53.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.584" endtime="20201110 08:38:53.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.658" endtime="20201110 08:38:54.005"></status>
</kw>
<msg timestamp="20201110 08:38:54.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041401556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.655" endtime="20201110 08:38:54.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041401556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041527903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.015" endtime="20201110 08:38:54.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.034" endtime="20201110 08:38:54.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.647" endtime="20201110 08:38:54.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.643" endtime="20201110 08:38:54.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.053" level="INFO">${RESULT} = [{'time': 0.041527903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012634699999999888, 'source_diff': 0.00012634699999999888}, {'time': 0.04168725, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:54.044" endtime="20201110 08:38:54.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:54.083" level="INFO">${ACCURACY} = {'source_diff': [0.00012634699999999888, 0.00012688900000000503, 0.00012694400000000383, 0.0001267360000000023, 0.00012691699999999723, 0.00012758300000000056, 0.00012602800000000025, 0.00012633400000...</msg>
<status status="PASS" starttime="20201110 08:38:54.055" endtime="20201110 08:38:54.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.094" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:54.092" endtime="20201110 08:38:54.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.100" level="INFO">VALUE: [0.00012634699999999888, 0.00012688900000000503, 0.00012694400000000383, 0.0001267360000000023, 0.00012691699999999723, 0.00012758300000000056, 0.00012602800000000025, 0.00012633400000000572, 0.0001263889999999976, 0.00012586100000000489, 0.00012648600000000204, 0.00012619500000000256, 0.00012666699999999698, 0.00012740299999999816, 0.0001275979999999996, 0.00012670800000000315, 0.00012680500000000067, 0.00012633399999999878, 0.00012663899999999784, 0.0001271109999999992, 0.0001267079999999962, 0.00012587500000000446, 0.00012692999999999732, 0.0001258889999999971, 0.00012706999999999996, 0.00012711100000000614, 0.00012747200000000347, 0.00012655500000000042, 0.00012652800000000075, 0.00012757000000000046, 0.00012602800000000025, 0.00012618100000000299, 0.00012617999999999657, 0.00012725000000000236, 0.00012726400000000193, 0.00012637499999999802, 0.0001260559999999994, 0.00012631899999999974, 0.00012743000000000476, 0.00012631900000000668, 0.00012758300000000056, 0.0001272780000000015, 0.00012634699999999888, 0.00012758400000000003, 0.00012727700000000203, 0.0001276109999999997, 0.00012726400000000193, 0.00012587500000000446, 0.0001275000000000026, 0.0001276109999999997]</msg>
<status status="PASS" starttime="20201110 08:38:54.097" endtime="20201110 08:38:54.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.085" endtime="20201110 08:38:54.103"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.110" endtime="20201110 08:38:54.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.118" endtime="20201110 08:38:54.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.114" endtime="20201110 08:38:54.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.105" endtime="20201110 08:38:54.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.580" endtime="20201110 08:38:54.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.578" endtime="20201110 08:38:54.144"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.167" endtime="20201110 08:38:54.191"></status>
</kw>
<msg timestamp="20201110 08:38:54.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.164" endtime="20201110 08:38:54.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.195" endtime="20201110 08:38:54.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.201" endtime="20201110 08:38:54.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.157" endtime="20201110 08:38:54.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.151" endtime="20201110 08:38:54.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.225" endtime="20201110 08:38:54.570"></status>
</kw>
<msg timestamp="20201110 08:38:54.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041425486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.222" endtime="20201110 08:38:54.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041297722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041425486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.580" endtime="20201110 08:38:54.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.598" endtime="20201110 08:38:54.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.214" endtime="20201110 08:38:54.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.210" endtime="20201110 08:38:54.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.620" level="INFO">${RESULT} = [{'time': 0.041425486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001277639999999955, 'source_diff': 0.0001277639999999955}, {'time': 0.041585806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:54.610" endtime="20201110 08:38:54.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:54.650" level="INFO">${ACCURACY} = {'source_diff': [0.0001277639999999955, 0.00012706999999999996, 0.00012736100000000639, 0.00012765199999999893, 0.000128472999999997, 0.00012754200000000132, 0.00012779200000000157, 0.0001284590000000...</msg>
<status status="PASS" starttime="20201110 08:38:54.622" endtime="20201110 08:38:54.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.662" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:54.660" endtime="20201110 08:38:54.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.667" level="INFO">VALUE: [0.0001277639999999955, 0.00012706999999999996, 0.00012736100000000639, 0.00012765199999999893, 0.000128472999999997, 0.00012754200000000132, 0.00012779200000000157, 0.00012845900000000438, 0.0001270000000000021, 0.00012734699999999988, 0.00012813799999999986, 0.00012829099999999566, 0.00012722199999999628, 0.0001286110000000007, 0.00012738900000000553, 0.00012783400000000028, 0.00012847200000000447, 0.00012768099999999755, 0.0001282780000000025, 0.00012862500000000027, 0.00012754199999999438, 0.00012769500000000406, 0.00012690299999999766, 0.00012718099999999705, 0.00012863899999999984, 0.0001280000000000031, 0.00012740299999999816, 0.00012866699999999898, 0.00012688900000000503, 0.00012747199999999653, 0.0001270560000000004, 0.0001268199999999997, 0.00012854199999999538, 0.00012826300000000346, 0.00012795799999999746, 0.00012691699999999723, 0.00012726400000000193, 0.00012851400000000318, 0.00012833400000000078, 0.00012798600000000354, 0.0001283189999999948, 0.00012866699999999898, 0.00012770900000000363, 0.00012737499999999902, 0.00012769400000000458, 0.00012715199999999843, 0.0001280980000000001, 0.0001270130000000022, 0.0001286529999999994, 0.00012749999999999567]</msg>
<status status="PASS" starttime="20201110 08:38:54.664" endtime="20201110 08:38:54.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.653" endtime="20201110 08:38:54.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.677" endtime="20201110 08:38:54.680"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.685" endtime="20201110 08:38:54.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.681" endtime="20201110 08:38:54.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.672" endtime="20201110 08:38:54.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.146" endtime="20201110 08:38:54.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.145" endtime="20201110 08:38:54.712"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.735" endtime="20201110 08:38:54.759"></status>
</kw>
<msg timestamp="20201110 08:38:54.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.732" endtime="20201110 08:38:54.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.762" endtime="20201110 08:38:54.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.768" endtime="20201110 08:38:54.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.724" endtime="20201110 08:38:54.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.718" endtime="20201110 08:38:54.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.792" endtime="20201110 08:38:55.140"></status>
</kw>
<msg timestamp="20201110 08:38:55.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041262542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041390375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.789" endtime="20201110 08:38:55.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041262542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041390375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.150" endtime="20201110 08:38:55.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.168" endtime="20201110 08:38:55.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.781" endtime="20201110 08:38:55.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.777" endtime="20201110 08:38:55.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.187" level="INFO">${RESULT} = [{'time': 0.041390375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001278330000000008, 'source_diff': 0.0001278330000000008}, {'time': 0.041551653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:55.179" endtime="20201110 08:38:55.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:55.218" level="INFO">${ACCURACY} = {'source_diff': [0.0001278330000000008, 0.00012870899999999769, 0.00012818099999999805, 0.00012901399999999674, 0.00012819499999999762, 0.00012909700000000163, 0.00012954200000000332, 0.00012883300000...</msg>
<status status="PASS" starttime="20201110 08:38:55.190" endtime="20201110 08:38:55.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.229" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:55.227" endtime="20201110 08:38:55.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.235" level="INFO">VALUE: [0.0001278330000000008, 0.00012870899999999769, 0.00012818099999999805, 0.00012901399999999674, 0.00012819499999999762, 0.00012909700000000163, 0.00012954200000000332, 0.0001288330000000018, 0.00012869499999999812, 0.00012849999999999667, 0.00012819399999999814, 0.0001287079999999982, 0.00012897199999999803, 0.00012929200000000307, 0.00012874999999999692, 0.00012858400000000103, 0.000129166, 0.00012874999999999692, 0.00012854100000000285, 0.0001287360000000043, 0.00012780600000000114, 0.0001289859999999976, 0.00012942999999999982, 0.0001281110000000002, 0.00012897199999999803, 0.0001291110000000012, 0.00012858299999999462, 0.0001288330000000018, 0.00012801399999999574, 0.0001287360000000043, 0.00012934700000000188, 0.00012880600000000214, 0.00012819500000000456, 0.0001289859999999976, 0.00012926400000000393, 0.00012840299999999916, 0.000129263999999997, 0.00012875000000000386, 0.0001278889999999991, 0.0001297639999999975, 0.00012959700000000213, 0.000129166, 0.00012819400000000508, 0.00012816699999999848, 0.0001278330000000008, 0.00012963900000000084, 0.00012858299999999462, 0.00012919399999999914, 0.0001279859999999966, 0.00012786199999999942]</msg>
<status status="PASS" starttime="20201110 08:38:55.232" endtime="20201110 08:38:55.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.220" endtime="20201110 08:38:55.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.245" endtime="20201110 08:38:55.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.253" endtime="20201110 08:38:55.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.249" endtime="20201110 08:38:55.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.240" endtime="20201110 08:38:55.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.714" endtime="20201110 08:38:55.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.713" endtime="20201110 08:38:55.280"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.303" endtime="20201110 08:38:55.328"></status>
</kw>
<msg timestamp="20201110 08:38:55.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.300" endtime="20201110 08:38:55.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.331" endtime="20201110 08:38:55.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.337" endtime="20201110 08:38:55.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.292" endtime="20201110 08:38:55.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.286" endtime="20201110 08:38:55.344"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.362" endtime="20201110 08:38:55.708"></status>
</kw>
<msg timestamp="20201110 08:38:55.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041630653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04176125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:55.358" endtime="20201110 08:38:55.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041630653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04176125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:55.717" endtime="20201110 08:38:55.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.735" endtime="20201110 08:38:55.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.351" endtime="20201110 08:38:55.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.346" endtime="20201110 08:38:55.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.757" level="INFO">${RESULT} = [{'time': 0.04176125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013059700000000313, 'source_diff': 0.00013059700000000313}, {'time': 0.041925528, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:55.748" endtime="20201110 08:38:55.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:55.787" level="INFO">${ACCURACY} = {'source_diff': [0.00013059700000000313, 0.000130263999999998, 0.00013029199999999713, 0.00012916700000000642, 0.0001306110000000027, 0.0001300690000000035, 0.00012963900000000084, 0.00012993099999999...</msg>
<status status="PASS" starttime="20201110 08:38:55.759" endtime="20201110 08:38:55.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.798" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:55.796" endtime="20201110 08:38:55.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.804" level="INFO">VALUE: [0.00013059700000000313, 0.000130263999999998, 0.00013029199999999713, 0.00012916700000000642, 0.0001306110000000027, 0.0001300690000000035, 0.00012963900000000084, 0.0001299309999999998, 0.00013018100000000005, 0.0001296660000000005, 0.00013040300000000116, 0.00013076400000000543, 0.0001299859999999986, 0.00012962500000000127, 0.00013067999999999413, 0.0001293890000000006, 0.00012972199999999878, 0.0001305969999999962, 0.0001289859999999976, 0.00013019499999999962, 0.00013037499999999508, 0.00012887500000000052, 0.0001297360000000053, 0.00012936100000000145, 0.00013062500000000227, 0.00012890299999999966, 0.00012933299999999537, 0.0001291529999999999, 0.00013033299999999637, 0.0001305969999999962, 0.0001301110000000022, 0.00013041700000000073, 0.00012916699999999948, 0.0001305969999999962, 0.0001293189999999958, 0.00012955500000000342, 0.00012949999999999767, 0.0001304440000000004, 0.00013058300000000356, 0.00012972199999999878, 0.0001292079999999987, 0.00012986200000000142, 0.0001304310000000003, 0.0001306110000000027, 0.00012986100000000195, 0.00013069400000000064, 0.00013056899999999705, 0.00012934700000000188, 0.00012981999999999577, 0.00012923599999999785]</msg>
<status status="PASS" starttime="20201110 08:38:55.801" endtime="20201110 08:38:55.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.789" endtime="20201110 08:38:55.807"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.814" endtime="20201110 08:38:55.816"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.822" endtime="20201110 08:38:55.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.817" endtime="20201110 08:38:55.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.809" endtime="20201110 08:38:55.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.282" endtime="20201110 08:38:55.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.281" endtime="20201110 08:38:55.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.564" endtime="20201110 08:38:55.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.858" endtime="20201110 08:38:55.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.854" endtime="20201110 08:38:55.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.851" endtime="20201110 08:38:55.883"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:59.436" endtime="20201110 08:38:55.883" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.900" endtime="20201110 08:38:55.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.897" endtime="20201110 08:38:55.924"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.960" endtime="20201110 08:38:55.980"></status>
</kw>
<msg timestamp="20201110 08:38:55.981" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.954" endtime="20201110 08:38:55.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.988" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.983" endtime="20201110 08:38:55.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.995" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:55.991" endtime="20201110 08:38:55.995"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:55.947" endtime="20201110 08:38:55.997"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:55.940" endtime="20201110 08:38:55.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.938" endtime="20201110 08:38:56.000"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:56.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:56.007" endtime="20201110 08:38:56.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.002" endtime="20201110 08:38:56.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.936" endtime="20201110 08:38:56.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.934" endtime="20201110 08:38:56.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.012" endtime="20201110 08:38:56.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.930" endtime="20201110 08:38:56.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.926" endtime="20201110 08:38:56.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.894" endtime="20201110 08:38:56.019"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.045" endtime="20201110 08:38:56.065"></status>
</kw>
<msg timestamp="20201110 08:38:56.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.041" endtime="20201110 08:38:56.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.073" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.068" endtime="20201110 08:38:56.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.075" endtime="20201110 08:38:56.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.033" endtime="20201110 08:38:56.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.027" endtime="20201110 08:38:56.082"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.098" endtime="20201110 08:38:56.452"></status>
</kw>
<msg timestamp="20201110 08:38:56.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136426542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136497014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.095" endtime="20201110 08:38:56.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136426542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136497014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.461" endtime="20201110 08:38:56.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.480" endtime="20201110 08:38:56.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.088" endtime="20201110 08:38:56.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.083" endtime="20201110 08:38:56.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.498" level="INFO">${RESULT} = [{'time': 0.136497014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.04719999999881e-05, 'source_diff': 7.04719999999881e-05}, {'time': 0.136576097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:56.488" endtime="20201110 08:38:56.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:56.530" level="INFO">${ACCURACY} = {'source_diff': [7.04719999999881e-05, 7.073600000001568e-05, 7.209799999999267e-05, 7.126399999998756e-05, 7.147299999998857e-05, 7.126400000001532e-05, 7.090300000001104e-05, 7.123700000000177e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:56.500" endtime="20201110 08:38:56.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.541" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:38:56.538" endtime="20201110 08:38:56.541"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.546" level="INFO">VALUE: [7.04719999999881e-05, 7.073600000001568e-05, 7.209799999999267e-05, 7.126399999998756e-05, 7.147299999998857e-05, 7.126400000001532e-05, 7.090300000001104e-05, 7.123700000000177e-05, 7.215299999999147e-05, 7.17919999999872e-05, 7.1846999999986e-05, 7.144499999997556e-05, 7.086100000000539e-05, 7.215299999999147e-05, 7.093100000002406e-05, 7.127800000000795e-05, 7.040199999999719e-05, 7.179100000001548e-05, 7.198599999999611e-05, 7.038800000000456e-05, 7.225000000002368e-05, 7.195799999998309e-05, 7.127800000000795e-05, 7.04169999999893e-05, 7.195900000001032e-05, 7.06950000000095e-05, 7.081899999999974e-05, 7.072199999999529e-05, 7.16109999999992e-05, 7.081899999999974e-05, 7.177799999999457e-05, 7.059800000000505e-05, 7.04169999999893e-05, 7.06109999999982e-05, 7.126299999998809e-05, 7.195799999998309e-05, 7.122200000000967e-05, 7.081899999999974e-05, 7.2151999999992e-05, 7.106900000000693e-05, 7.11669999999831e-05, 7.158299999998619e-05, 7.144400000000384e-05, 7.129200000000058e-05, 7.209700000002095e-05, 7.076400000000094e-05, 7.050000000000112e-05, 7.05269999999869e-05, 7.195799999998309e-05, 7.211099999998583e-05]</msg>
<status status="PASS" starttime="20201110 08:38:56.543" endtime="20201110 08:38:56.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.532" endtime="20201110 08:38:56.548"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.555" endtime="20201110 08:38:56.557"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.563" endtime="20201110 08:38:56.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.559" endtime="20201110 08:38:56.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.550" endtime="20201110 08:38:56.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.023" endtime="20201110 08:38:56.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.022" endtime="20201110 08:38:56.589"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.613" endtime="20201110 08:38:56.630"></status>
</kw>
<msg timestamp="20201110 08:38:56.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.609" endtime="20201110 08:38:56.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.633" endtime="20201110 08:38:56.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.640" endtime="20201110 08:38:56.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.602" endtime="20201110 08:38:56.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.596" endtime="20201110 08:38:56.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.663" endtime="20201110 08:38:57.005"></status>
</kw>
<msg timestamp="20201110 08:38:57.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.660" endtime="20201110 08:38:57.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041256236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041326875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.016" endtime="20201110 08:38:57.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.039" endtime="20201110 08:38:57.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.652" endtime="20201110 08:38:57.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.648" endtime="20201110 08:38:57.046"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.056" level="INFO">${RESULT} = [{'time': 0.041326875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.063899999999734e-05, 'source_diff': 7.063899999999734e-05}, {'time': 0.041405944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:57.047" endtime="20201110 08:38:57.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.088" level="INFO">${ACCURACY} = {'source_diff': [7.063899999999734e-05, 7.122200000000273e-05, 7.108399999999904e-05, 7.149999999999518e-05, 7.125000000000187e-05, 7.142999999999733e-05, 7.068099999999605e-05, 7.048600000000155e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:57.058" endtime="20201110 08:38:57.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.099" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.097" endtime="20201110 08:38:57.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.104" level="INFO">VALUE: [7.063899999999734e-05, 7.122200000000273e-05, 7.108399999999904e-05, 7.149999999999518e-05, 7.125000000000187e-05, 7.142999999999733e-05, 7.068099999999605e-05, 7.048600000000155e-05, 7.215299999999841e-05, 7.047199999999504e-05, 7.051300000000121e-05, 7.050000000000112e-05, 7.043100000000274e-05, 7.144499999999637e-05, 7.213899999999884e-05, 7.232000000000072e-05, 7.10559999999999e-05, 7.197299999999601e-05, 7.151400000000169e-05, 7.199999999999568e-05, 7.209700000000013e-05, 7.048599999999461e-05, 7.044400000000284e-05, 7.072200000000223e-05, 7.201399999999525e-05, 7.18189999999938e-05, 7.0583000000006e-05, 7.080599999999965e-05, 7.045899999999494e-05, 7.075000000000137e-05, 7.148600000000255e-05, 7.125000000000187e-05, 7.126400000000144e-05, 7.127800000000101e-05, 7.058299999999906e-05, 7.177799999999457e-05, 7.16109999999992e-05, 7.045899999999494e-05, 7.120799999999622e-05, 7.033300000000575e-05, 7.050000000000112e-05, 7.116700000000392e-05, 7.236099999999995e-05, 7.177800000000151e-05, 7.043100000000274e-05, 7.194499999999687e-05, 7.093000000000377e-05, 7.093100000000324e-05, 7.217999999999808e-05, 7.122200000000273e-05]</msg>
<status status="PASS" starttime="20201110 08:38:57.101" endtime="20201110 08:38:57.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.090" endtime="20201110 08:38:57.107"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.113" endtime="20201110 08:38:57.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.146" endtime="20201110 08:38:57.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.141" endtime="20201110 08:38:57.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.108" endtime="20201110 08:38:57.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.592" endtime="20201110 08:38:57.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.591" endtime="20201110 08:38:57.172"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.194" endtime="20201110 08:38:57.211"></status>
</kw>
<msg timestamp="20201110 08:38:57.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.191" endtime="20201110 08:38:57.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.215" endtime="20201110 08:38:57.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.221" endtime="20201110 08:38:57.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.183" endtime="20201110 08:38:57.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.178" endtime="20201110 08:38:57.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.245" endtime="20201110 08:38:57.585"></status>
</kw>
<msg timestamp="20201110 08:38:57.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039959764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040031222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.242" endtime="20201110 08:38:57.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039959764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040031222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.595" endtime="20201110 08:38:57.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.614" endtime="20201110 08:38:57.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.235" endtime="20201110 08:38:57.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.230" endtime="20201110 08:38:57.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.637" level="INFO">${RESULT} = [{'time': 0.040031222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.145799999999647e-05, 'source_diff': 7.145799999999647e-05}, {'time': 0.040108361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:57.625" endtime="20201110 08:38:57.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.673" level="INFO">${ACCURACY} = {'source_diff': [7.145799999999647e-05, 7.047200000000198e-05, 7.169399999999715e-05, 7.045800000000241e-05, 7.123599999999536e-05, 7.1069e-05, 7.138900000000503e-05, 7.072199999999529e-05, 7.15830000...</msg>
<status status="PASS" starttime="20201110 08:38:57.640" endtime="20201110 08:38:57.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.688" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.682" endtime="20201110 08:38:57.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.694" level="INFO">VALUE: [7.145799999999647e-05, 7.047200000000198e-05, 7.169399999999715e-05, 7.045800000000241e-05, 7.123599999999536e-05, 7.1069e-05, 7.138900000000503e-05, 7.072199999999529e-05, 7.158300000000006e-05, 7.099999999999468e-05, 7.07360000000018e-05, 7.209799999999961e-05, 7.229200000000158e-05, 7.177799999999457e-05, 7.125000000000187e-05, 7.159699999999963e-05, 7.145899999999594e-05, 7.075000000000137e-05, 7.145900000000288e-05, 7.034699999999838e-05, 7.12230000000022e-05, 7.175000000000237e-05, 7.215299999999841e-05, 7.126400000000144e-05, 7.126299999999502e-05, 7.091599999999726e-05, 7.234700000000038e-05, 7.179099999999466e-05, 7.144400000000384e-05, 7.197300000000295e-05, 7.076400000000094e-05, 7.195799999999697e-05, 7.122199999999579e-05, 7.133399999999929e-05, 7.097200000000248e-05, 7.152800000000126e-05, 7.12769999999946e-05, 7.059699999999863e-05, 7.141700000000417e-05, 7.21109999999997e-05, 7.16109999999992e-05, 7.229200000000158e-05, 7.230600000000115e-05, 7.16109999999992e-05, 7.108299999999956e-05, 7.115299999999741e-05, 7.108399999999904e-05, 7.19439999999974e-05, 7.097199999999554e-05, 7.21109999999997e-05]</msg>
<status status="PASS" starttime="20201110 08:38:57.691" endtime="20201110 08:38:57.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.675" endtime="20201110 08:38:57.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.703" endtime="20201110 08:38:57.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.712" endtime="20201110 08:38:57.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.707" endtime="20201110 08:38:57.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.699" endtime="20201110 08:38:57.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.174" endtime="20201110 08:38:57.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.172" endtime="20201110 08:38:57.737"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.760" endtime="20201110 08:38:57.779"></status>
</kw>
<msg timestamp="20201110 08:38:57.780" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.757" endtime="20201110 08:38:57.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.782" endtime="20201110 08:38:57.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.788" endtime="20201110 08:38:57.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.749" endtime="20201110 08:38:57.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.744" endtime="20201110 08:38:57.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.811" endtime="20201110 08:38:58.167"></status>
</kw>
<msg timestamp="20201110 08:38:58.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040088653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040159042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.808" endtime="20201110 08:38:58.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040088653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040159042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.176" endtime="20201110 08:38:58.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.195" endtime="20201110 08:38:58.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.801" endtime="20201110 08:38:58.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.796" endtime="20201110 08:38:58.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.212" level="INFO">${RESULT} = [{'time': 0.040159042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.038899999999709e-05, 'source_diff': 7.038899999999709e-05}, {'time': 0.040235222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:58.203" endtime="20201110 08:38:58.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:58.244" level="INFO">${ACCURACY} = {'source_diff': [7.038899999999709e-05, 7.058299999999906e-05, 7.181900000000074e-05, 7.145799999999647e-05, 7.165199999999844e-05, 7.043000000000327e-05, 7.193100000000424e-05, 7.084699999999888e-05,...</msg>
<status status="PASS" starttime="20201110 08:38:58.214" endtime="20201110 08:38:58.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.258" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:38:58.255" endtime="20201110 08:38:58.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.265" level="INFO">VALUE: [7.038899999999709e-05, 7.058299999999906e-05, 7.181900000000074e-05, 7.145799999999647e-05, 7.165199999999844e-05, 7.043000000000327e-05, 7.193100000000424e-05, 7.084699999999888e-05, 7.144400000000384e-05, 7.068100000000299e-05, 7.130600000000015e-05, 7.177700000000203e-05, 7.159699999999963e-05, 7.131900000000024e-05, 7.172199999999629e-05, 7.073599999999486e-05, 7.097300000000195e-05, 7.126400000000144e-05, 7.163899999999834e-05, 7.213899999999884e-05, 7.037500000000446e-05, 7.10559999999999e-05, 7.10559999999999e-05, 7.12639999999945e-05, 7.04030000000036e-05, 7.20560000000009e-05, 7.21109999999997e-05, 7.065300000000385e-05, 7.097199999999554e-05, 7.208400000000004e-05, 7.180600000000065e-05, 7.14439999999969e-05, 7.166699999999748e-05, 7.177700000000203e-05, 7.115200000000488e-05, 7.21109999999997e-05, 7.212499999999927e-05, 7.112499999999827e-05, 7.145900000000288e-05, 7.197199999999654e-05, 7.063900000000428e-05, 7.2069000000001e-05, 7.081999999999922e-05, 7.05689999999995e-05, 7.180600000000065e-05, 7.215299999999841e-05, 7.12910000000011e-05, 7.145800000000341e-05, 7.193100000000424e-05, 7.051400000000069e-05]</msg>
<status status="PASS" starttime="20201110 08:38:58.261" endtime="20201110 08:38:58.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.247" endtime="20201110 08:38:58.269"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.277" endtime="20201110 08:38:58.280"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.289" endtime="20201110 08:38:58.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.282" endtime="20201110 08:38:58.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.271" endtime="20201110 08:38:58.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.739" endtime="20201110 08:38:58.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.738" endtime="20201110 08:38:58.317"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.347" endtime="20201110 08:38:58.367"></status>
</kw>
<msg timestamp="20201110 08:38:58.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.343" endtime="20201110 08:38:58.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.371" endtime="20201110 08:38:58.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.379" endtime="20201110 08:38:58.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.333" endtime="20201110 08:38:58.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.325" endtime="20201110 08:38:58.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.409" endtime="20201110 08:38:58.745"></status>
</kw>
<msg timestamp="20201110 08:38:58.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051401444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051473389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.405" endtime="20201110 08:38:58.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051401444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051473389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.755" endtime="20201110 08:38:58.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.774" endtime="20201110 08:38:58.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.396" endtime="20201110 08:38:58.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.390" endtime="20201110 08:38:58.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.791" level="INFO">${RESULT} = [{'time': 0.051473389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.194500000000381e-05, 'source_diff': 7.194500000000381e-05}, {'time': 0.051550528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:58.782" endtime="20201110 08:38:58.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:58.822" level="INFO">${ACCURACY} = {'source_diff': [7.194500000000381e-05, 7.137499999999852e-05, 7.177700000000203e-05, 7.075000000000137e-05, 7.04160000000037e-05, 7.181900000000074e-05, 7.162499999999877e-05, 7.131900000000024e-05, ...</msg>
<status status="PASS" starttime="20201110 08:38:58.793" endtime="20201110 08:38:58.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.833" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:38:58.830" endtime="20201110 08:38:58.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.838" level="INFO">VALUE: [7.194500000000381e-05, 7.137499999999852e-05, 7.177700000000203e-05, 7.075000000000137e-05, 7.04160000000037e-05, 7.181900000000074e-05, 7.162499999999877e-05, 7.131900000000024e-05, 7.125000000000187e-05, 7.150000000000212e-05, 7.112499999999827e-05, 7.123599999999536e-05, 7.062499999999777e-05, 7.126400000000144e-05, 7.191599999999826e-05, 7.159699999999963e-05, 7.230500000000167e-05, 7.145800000000341e-05, 7.194499999999687e-05, 7.198699999999558e-05, 7.14309999999968e-05, 7.113900000000478e-05, 7.083299999999931e-05, 7.126400000000144e-05, 7.063900000000428e-05, 7.129200000000058e-05, 7.076300000000146e-05, 7.109699999999913e-05, 7.125000000000187e-05, 7.215299999999841e-05, 7.063899999999734e-05, 7.125000000000187e-05, 7.056999999999897e-05, 7.104200000000033e-05, 7.041700000000317e-05, 7.141599999999776e-05, 7.116699999999698e-05, 7.195799999999697e-05, 7.076400000000094e-05, 7.125000000000187e-05, 7.2069000000001e-05, 7.097200000000248e-05, 7.163899999999834e-05, 7.19309999999973e-05, 7.147200000000298e-05, 7.043100000000274e-05, 7.129200000000058e-05, 7.23189999999943e-05, 7.075000000000137e-05, 7.076400000000094e-05]</msg>
<status status="PASS" starttime="20201110 08:38:58.835" endtime="20201110 08:38:58.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.824" endtime="20201110 08:38:58.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.847" endtime="20201110 08:38:58.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.856" endtime="20201110 08:38:58.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.851" endtime="20201110 08:38:58.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.843" endtime="20201110 08:38:58.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.320" endtime="20201110 08:38:58.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.318" endtime="20201110 08:38:58.882"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.906" endtime="20201110 08:38:58.924"></status>
</kw>
<msg timestamp="20201110 08:38:58.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.903" endtime="20201110 08:38:58.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.927" endtime="20201110 08:38:58.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.933" endtime="20201110 08:38:58.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.895" endtime="20201110 08:38:58.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.888" endtime="20201110 08:38:58.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.957" endtime="20201110 08:38:59.299"></status>
</kw>
<msg timestamp="20201110 08:38:59.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042184264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042255903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.953" endtime="20201110 08:38:59.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042184264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042255903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.309" endtime="20201110 08:38:59.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.327" endtime="20201110 08:38:59.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.946" endtime="20201110 08:38:59.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.941" endtime="20201110 08:38:59.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.345" level="INFO">${RESULT} = [{'time': 0.042255903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.163899999999834e-05, 'source_diff': 7.163899999999834e-05}, {'time': 0.042334028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:59.336" endtime="20201110 08:38:59.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:59.376" level="INFO">${ACCURACY} = {'source_diff': [7.163899999999834e-05, 7.177800000000151e-05, 7.10700000000064e-05, 7.048599999999461e-05, 7.14439999999969e-05, 7.195899999999644e-05, 7.212499999999927e-05, 7.041599999999676e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:38:59.347" endtime="20201110 08:38:59.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.387" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:38:59.384" endtime="20201110 08:38:59.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.392" level="INFO">VALUE: [7.163899999999834e-05, 7.177800000000151e-05, 7.10700000000064e-05, 7.048599999999461e-05, 7.14439999999969e-05, 7.195899999999644e-05, 7.212499999999927e-05, 7.041599999999676e-05, 7.126400000000144e-05, 7.213899999999884e-05, 7.211199999999918e-05, 7.109699999999913e-05, 7.112499999999827e-05, 7.12360000000023e-05, 7.197200000000348e-05, 7.195799999999697e-05, 7.194499999999687e-05, 7.180500000000117e-05, 7.142999999999733e-05, 7.232000000000072e-05, 7.232000000000072e-05, 7.123700000000177e-05, 7.2069000000001e-05, 7.109700000000607e-05, 7.073700000000127e-05, 7.093100000000324e-05, 7.21109999999997e-05, 7.087500000000496e-05, 7.145899999999594e-05, 7.152799999999432e-05, 7.145800000000341e-05, 7.145900000000288e-05, 7.055499999999992e-05, 7.179099999999466e-05, 7.075000000000137e-05, 7.230600000000115e-05, 7.186099999999945e-05, 7.194500000000381e-05, 7.23189999999943e-05, 7.142999999999733e-05, 7.098600000000205e-05, 7.145900000000288e-05, 7.092999999999683e-05, 7.126400000000144e-05, 7.09160000000042e-05, 7.212499999999927e-05, 7.191599999999826e-05, 7.108399999999904e-05, 7.106999999999947e-05, 7.108299999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:38:59.389" endtime="20201110 08:38:59.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.377" endtime="20201110 08:38:59.395"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.402" endtime="20201110 08:38:59.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:59.410" endtime="20201110 08:38:59.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.406" endtime="20201110 08:38:59.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.397" endtime="20201110 08:38:59.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.884" endtime="20201110 08:38:59.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.883" endtime="20201110 08:38:59.436"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.459" endtime="20201110 08:38:59.478"></status>
</kw>
<msg timestamp="20201110 08:38:59.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:59.455" endtime="20201110 08:38:59.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:59.481" endtime="20201110 08:38:59.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.487" endtime="20201110 08:38:59.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.448" endtime="20201110 08:38:59.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.442" endtime="20201110 08:38:59.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.511" endtime="20201110 08:38:59.848"></status>
</kw>
<msg timestamp="20201110 08:38:59.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041997944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:59.507" endtime="20201110 08:38:59.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041997944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042069, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:59.858" endtime="20201110 08:38:59.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.876" endtime="20201110 08:38:59.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.500" endtime="20201110 08:38:59.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.496" endtime="20201110 08:38:59.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.894" level="INFO">${RESULT} = [{'time': 0.042069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.10559999999999e-05, 'source_diff': 7.10559999999999e-05}, {'time': 0.042149139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7....</msg>
<status status="PASS" starttime="20201110 08:38:59.885" endtime="20201110 08:38:59.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:59.924" level="INFO">${ACCURACY} = {'source_diff': [7.10559999999999e-05, 7.159699999999963e-05, 7.10979999999986e-05, 7.216699999999798e-05, 7.059699999999863e-05, 7.177800000000151e-05, 7.124999999999493e-05, 7.125000000000187e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:38:59.896" endtime="20201110 08:38:59.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.935" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:38:59.933" endtime="20201110 08:38:59.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.941" level="INFO">VALUE: [7.10559999999999e-05, 7.159699999999963e-05, 7.10979999999986e-05, 7.216699999999798e-05, 7.059699999999863e-05, 7.177800000000151e-05, 7.124999999999493e-05, 7.125000000000187e-05, 7.159699999999963e-05, 7.065300000000385e-05, 7.209700000000013e-05, 7.044500000000231e-05, 7.195799999999697e-05, 7.12910000000011e-05, 7.09309999999963e-05, 7.099999999999468e-05, 7.119500000000306e-05, 7.055499999999992e-05, 7.194500000000381e-05, 7.200000000000262e-05, 7.076299999999452e-05, 7.126400000000144e-05, 7.069399999999615e-05, 7.145799999999647e-05, 7.145800000000341e-05, 7.09309999999963e-05, 7.192999999999783e-05, 7.113899999999784e-05, 7.212499999999927e-05, 7.1763999999995e-05, 7.106999999999947e-05, 7.052700000000078e-05, 7.094500000000281e-05, 7.04030000000036e-05, 7.051399999999375e-05, 7.09160000000042e-05, 7.09309999999963e-05, 7.077800000000051e-05, 7.127700000000153e-05, 7.197199999999654e-05, 7.127800000000101e-05, 7.198699999999558e-05, 7.163899999999834e-05, 7.06109999999982e-05, 7.070799999999572e-05, 7.041700000000317e-05, 7.112499999999827e-05, 7.127800000000101e-05, 7.05979999999981e-05, 7.14439999999969e-05]</msg>
<status status="PASS" starttime="20201110 08:38:59.938" endtime="20201110 08:38:59.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.926" endtime="20201110 08:38:59.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.950" endtime="20201110 08:38:59.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:59.959" endtime="20201110 08:38:59.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.954" endtime="20201110 08:38:59.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.946" endtime="20201110 08:38:59.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.438" endtime="20201110 08:38:59.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.437" endtime="20201110 08:38:59.985"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.007" endtime="20201110 08:39:00.025"></status>
</kw>
<msg timestamp="20201110 08:39:00.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.004" endtime="20201110 08:39:00.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.033" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.029" endtime="20201110 08:39:00.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.035" endtime="20201110 08:39:00.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.997" endtime="20201110 08:39:00.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.991" endtime="20201110 08:39:00.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.062" endtime="20201110 08:39:00.399"></status>
</kw>
<msg timestamp="20201110 08:39:00.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040725125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.058" endtime="20201110 08:39:00.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040725125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040796208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.408" endtime="20201110 08:39:00.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.427" endtime="20201110 08:39:00.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.048" endtime="20201110 08:39:00.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.043" endtime="20201110 08:39:00.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:00.445" level="INFO">${RESULT} = [{'time': 0.040796208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.108299999999956e-05, 'source_diff': 7.108299999999956e-05}, {'time': 0.040877333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:00.436" endtime="20201110 08:39:00.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:00.475" level="INFO">${ACCURACY} = {'source_diff': [7.108299999999956e-05, 7.195800000000391e-05, 7.048600000000155e-05, 7.181900000000074e-05, 7.199999999999568e-05, 7.198599999999611e-05, 7.075000000000137e-05, 7.066700000000342e-05,...</msg>
<status status="PASS" starttime="20201110 08:39:00.447" endtime="20201110 08:39:00.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.486" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:39:00.484" endtime="20201110 08:39:00.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.491" level="INFO">VALUE: [7.108299999999956e-05, 7.195800000000391e-05, 7.048600000000155e-05, 7.181900000000074e-05, 7.199999999999568e-05, 7.198599999999611e-05, 7.075000000000137e-05, 7.066700000000342e-05, 7.16109999999992e-05, 7.04439999999959e-05, 7.12910000000011e-05, 7.212499999999927e-05, 7.127800000000101e-05, 7.080500000000017e-05, 7.12360000000023e-05, 7.180600000000065e-05, 7.058400000000548e-05, 7.125000000000187e-05, 7.21109999999997e-05, 7.126400000000144e-05, 7.197199999999654e-05, 7.163899999999834e-05, 7.150000000000212e-05, 7.09160000000042e-05, 7.115200000000488e-05, 7.116700000000392e-05, 7.045900000000188e-05, 7.14309999999968e-05, 7.180600000000065e-05, 7.115299999999741e-05, 7.118000000000402e-05, 7.209799999999961e-05, 7.036099999999795e-05, 7.088899999999759e-05, 7.037500000000446e-05, 7.148599999999561e-05, 7.177799999999457e-05, 7.061199999999768e-05, 7.058299999999906e-05, 7.163899999999834e-05, 7.145900000000288e-05, 7.12910000000011e-05, 7.177799999999457e-05, 7.090199999999769e-05, 7.158300000000006e-05, 7.12910000000011e-05, 7.151400000000169e-05, 7.131999999999972e-05, 7.21109999999997e-05, 7.163899999999834e-05]</msg>
<status status="PASS" starttime="20201110 08:39:00.488" endtime="20201110 08:39:00.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.477" endtime="20201110 08:39:00.494"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.501" endtime="20201110 08:39:00.504"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:00.509" endtime="20201110 08:39:00.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.505" endtime="20201110 08:39:00.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.496" endtime="20201110 08:39:00.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.987" endtime="20201110 08:39:00.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.986" endtime="20201110 08:39:00.535"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.558" endtime="20201110 08:39:00.576"></status>
</kw>
<msg timestamp="20201110 08:39:00.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.555" endtime="20201110 08:39:00.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.579" endtime="20201110 08:39:00.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.587" endtime="20201110 08:39:00.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.547" endtime="20201110 08:39:00.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.542" endtime="20201110 08:39:00.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.615" endtime="20201110 08:39:00.954"></status>
</kw>
<msg timestamp="20201110 08:39:00.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040633944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.611" endtime="20201110 08:39:00.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040633944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040704347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.964" endtime="20201110 08:39:00.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.982" endtime="20201110 08:39:00.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.603" endtime="20201110 08:39:00.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.597" endtime="20201110 08:39:00.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.000" level="INFO">${RESULT} = [{'time': 0.040704347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.04030000000036e-05, 'source_diff': 7.04030000000036e-05}, {'time': 0.040781639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:00.991" endtime="20201110 08:39:01.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:01.030" level="INFO">${ACCURACY} = {'source_diff': [7.04030000000036e-05, 7.229200000000158e-05, 7.075000000000137e-05, 7.1069e-05, 7.177700000000203e-05, 7.176400000000194e-05, 7.163799999999887e-05, 7.04030000000036e-05, 7.1403000000...</msg>
<status status="PASS" starttime="20201110 08:39:01.002" endtime="20201110 08:39:01.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.041" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:39:01.039" endtime="20201110 08:39:01.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.047" level="INFO">VALUE: [7.04030000000036e-05, 7.229200000000158e-05, 7.075000000000137e-05, 7.1069e-05, 7.177700000000203e-05, 7.176400000000194e-05, 7.163799999999887e-05, 7.04030000000036e-05, 7.14030000000046e-05, 7.229200000000158e-05, 7.125000000000187e-05, 7.072200000000223e-05, 7.131999999999972e-05, 7.048599999999461e-05, 7.063899999999734e-05, 7.055499999999992e-05, 7.1069e-05, 7.059699999999863e-05, 7.147300000000245e-05, 7.076400000000094e-05, 7.067999999999658e-05, 7.159699999999963e-05, 7.162499999999877e-05, 7.190299999999816e-05, 7.194500000000381e-05, 7.194500000000381e-05, 7.141699999999723e-05, 7.209700000000013e-05, 7.230500000000167e-05, 7.197199999999654e-05, 7.045800000000241e-05, 7.16109999999992e-05, 7.129200000000058e-05, 7.212499999999927e-05, 7.10559999999999e-05, 7.176400000000194e-05, 7.14030000000046e-05, 7.111100000000564e-05, 7.180500000000117e-05, 7.090200000000463e-05, 7.12360000000023e-05, 7.075000000000137e-05, 7.119399999999665e-05, 7.213799999999937e-05, 7.127799999999407e-05, 7.144400000000384e-05, 7.038899999999709e-05, 7.084799999999836e-05, 7.126299999999502e-05, 7.212499999999927e-05]</msg>
<status status="PASS" starttime="20201110 08:39:01.044" endtime="20201110 08:39:01.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.032" endtime="20201110 08:39:01.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.057" endtime="20201110 08:39:01.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.065" endtime="20201110 08:39:01.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.060" endtime="20201110 08:39:01.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.052" endtime="20201110 08:39:01.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.537" endtime="20201110 08:39:01.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.536" endtime="20201110 08:39:01.091"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.113" endtime="20201110 08:39:01.133"></status>
</kw>
<msg timestamp="20201110 08:39:01.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.110" endtime="20201110 08:39:01.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.136" endtime="20201110 08:39:01.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.143" endtime="20201110 08:39:01.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.103" endtime="20201110 08:39:01.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.097" endtime="20201110 08:39:01.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.168" endtime="20201110 08:39:01.518"></status>
</kw>
<msg timestamp="20201110 08:39:01.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040541903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040612819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.164" endtime="20201110 08:39:01.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040541903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040612819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.529" endtime="20201110 08:39:01.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.553" endtime="20201110 08:39:01.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.157" endtime="20201110 08:39:01.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.152" endtime="20201110 08:39:01.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.575" level="INFO">${RESULT} = [{'time': 0.040612819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.09160000000042e-05, 'source_diff': 7.09160000000042e-05}, {'time': 0.040692958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:01.565" endtime="20201110 08:39:01.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:01.606" level="INFO">${ACCURACY} = {'source_diff': [7.09160000000042e-05, 7.213899999999884e-05, 7.130600000000015e-05, 7.231900000000124e-05, 7.076400000000094e-05, 7.16109999999992e-05, 7.213899999999884e-05, 7.209700000000013e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:39:01.577" endtime="20201110 08:39:01.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.617" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:39:01.615" endtime="20201110 08:39:01.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.622" level="INFO">VALUE: [7.09160000000042e-05, 7.213899999999884e-05, 7.130600000000015e-05, 7.231900000000124e-05, 7.076400000000094e-05, 7.16109999999992e-05, 7.213899999999884e-05, 7.209700000000013e-05, 7.131900000000024e-05, 7.106999999999947e-05, 7.199999999999568e-05, 7.212499999999927e-05, 7.197199999999654e-05, 7.056999999999897e-05, 7.126400000000144e-05, 7.17769999999951e-05, 7.088900000000453e-05, 7.109699999999913e-05, 7.10979999999986e-05, 7.073699999999433e-05, 7.058299999999906e-05, 7.180500000000117e-05, 7.074999999999443e-05, 7.124999999999493e-05, 7.108299999999956e-05, 7.21109999999997e-05, 7.184799999999936e-05, 7.125000000000187e-05, 7.174999999999543e-05, 7.042999999999633e-05, 7.081999999999922e-05, 7.116699999999698e-05, 7.212499999999927e-05, 7.091699999999673e-05, 7.213899999999884e-05, 7.048700000000102e-05, 7.047199999999504e-05, 7.212499999999927e-05, 7.058299999999906e-05, 7.180599999999371e-05, 7.079200000000008e-05, 7.063799999999787e-05, 7.202700000000228e-05, 7.041699999999623e-05, 7.125000000000187e-05, 7.177799999999457e-05, 7.170799999999672e-05, 7.181900000000074e-05, 7.172199999999629e-05, 7.045799999999547e-05]</msg>
<status status="PASS" starttime="20201110 08:39:01.619" endtime="20201110 08:39:01.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.608" endtime="20201110 08:39:01.626"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.632" endtime="20201110 08:39:01.635"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.640" endtime="20201110 08:39:01.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.636" endtime="20201110 08:39:01.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.627" endtime="20201110 08:39:01.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.093" endtime="20201110 08:39:01.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.092" endtime="20201110 08:39:01.666"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.689" endtime="20201110 08:39:01.709"></status>
</kw>
<msg timestamp="20201110 08:39:01.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.686" endtime="20201110 08:39:01.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.712" endtime="20201110 08:39:01.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.719" endtime="20201110 08:39:01.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.679" endtime="20201110 08:39:01.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.673" endtime="20201110 08:39:01.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.742" endtime="20201110 08:39:02.094"></status>
</kw>
<msg timestamp="20201110 08:39:02.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.739" endtime="20201110 08:39:02.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.103" endtime="20201110 08:39:02.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.121" endtime="20201110 08:39:02.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.732" endtime="20201110 08:39:02.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.727" endtime="20201110 08:39:02.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.140" level="INFO">${RESULT} = [{'time': 0.041000903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.591700000000173e-05, 'source_diff': 7.591700000000173e-05}, {'time': 0.041083042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:02.132" endtime="20201110 08:39:02.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:02.171" level="INFO">${ACCURACY} = {'source_diff': [7.591700000000173e-05, 7.695900000000144e-05, 7.4763999999998e-05, 7.60560000000049e-05, 7.508300000000356e-05, 7.527800000000501e-05, 7.561099999999626e-05, 7.593000000000183e-05, 7....</msg>
<status status="PASS" starttime="20201110 08:39:02.143" endtime="20201110 08:39:02.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.183" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:39:02.180" endtime="20201110 08:39:02.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.188" level="INFO">VALUE: [7.591700000000173e-05, 7.695900000000144e-05, 7.4763999999998e-05, 7.60560000000049e-05, 7.508300000000356e-05, 7.527800000000501e-05, 7.561099999999626e-05, 7.593000000000183e-05, 7.558299999999712e-05, 7.594500000000087e-05, 7.573599999999986e-05, 7.490300000000116e-05, 7.577799999999857e-05, 7.4763999999998e-05, 7.558299999999712e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.62639999999995e-05, 7.491700000000073e-05, 7.420799999999922e-05, 7.545899999999994e-05, 7.570800000000072e-05, 7.511099999999576e-05, 7.524999999999893e-05, 7.423700000000477e-05, 7.644500000000137e-05, 7.66110000000042e-05, 7.579200000000508e-05, 7.44439999999999e-05, 7.658299999999812e-05, 7.444499999999937e-05, 7.480599999999671e-05, 7.524999999999893e-05, 7.57769999999991e-05, 7.580500000000517e-05, 7.49310000000003e-05, 7.577799999999857e-05, 7.67770000000001e-05, 7.59169999999948e-05, 7.424999999999793e-05, 7.591599999999532e-05, 7.593000000000183e-05, 7.54310000000008e-05, 7.519400000000065e-05, 7.527799999999807e-05, 7.545800000000047e-05, 7.64169999999953e-05, 7.674999999999349e-05, 7.524999999999893e-05, 7.690300000000316e-05]</msg>
<status status="PASS" starttime="20201110 08:39:02.185" endtime="20201110 08:39:02.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.173" endtime="20201110 08:39:02.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.204" endtime="20201110 08:39:02.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.213" endtime="20201110 08:39:02.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.208" endtime="20201110 08:39:02.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.200" endtime="20201110 08:39:02.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.669" endtime="20201110 08:39:02.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.667" endtime="20201110 08:39:02.239"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.262" endtime="20201110 08:39:02.280"></status>
</kw>
<msg timestamp="20201110 08:39:02.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.258" endtime="20201110 08:39:02.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.283" endtime="20201110 08:39:02.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.290" endtime="20201110 08:39:02.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.251" endtime="20201110 08:39:02.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.245" endtime="20201110 08:39:02.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.313" endtime="20201110 08:39:02.649"></status>
</kw>
<msg timestamp="20201110 08:39:02.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.309" endtime="20201110 08:39:02.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040924847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041000111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.659" endtime="20201110 08:39:02.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.680" endtime="20201110 08:39:02.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.302" endtime="20201110 08:39:02.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.298" endtime="20201110 08:39:02.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.703" level="INFO">${RESULT} = [{'time': 0.041000111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.52639999999985e-05, 'source_diff': 7.52639999999985e-05}, {'time': 0.041085139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:02.694" endtime="20201110 08:39:02.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:02.733" level="INFO">${ACCURACY} = {'source_diff': [7.52639999999985e-05, 7.69310000000023e-05, 7.52639999999985e-05, 7.508400000000304e-05, 7.556899999999755e-05, 7.691599999999632e-05, 7.61110000000037e-05, 7.541600000000176e-05, 7.5...</msg>
<status status="PASS" starttime="20201110 08:39:02.705" endtime="20201110 08:39:02.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.744" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:39:02.742" endtime="20201110 08:39:02.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.749" level="INFO">VALUE: [7.52639999999985e-05, 7.69310000000023e-05, 7.52639999999985e-05, 7.508400000000304e-05, 7.556899999999755e-05, 7.691599999999632e-05, 7.61110000000037e-05, 7.541600000000176e-05, 7.558299999999712e-05, 7.573599999999986e-05, 7.512500000000227e-05, 7.422299999999826e-05, 7.559799999999617e-05, 7.497299999999901e-05, 7.540299999999472e-05, 7.602799999999882e-05, 7.425000000000487e-05, 7.558299999999712e-05, 7.538800000000262e-05, 7.5069000000004e-05, 7.59169999999948e-05, 7.572200000000029e-05, 7.602799999999882e-05, 7.55839999999966e-05, 7.522199999999979e-05, 7.525000000000587e-05, 7.652799999999932e-05, 7.50839999999961e-05, 7.648700000000008e-05, 7.59310000000013e-05, 7.591700000000173e-05, 7.433299999999587e-05, 7.520800000000022e-05, 7.508400000000304e-05, 7.523599999999936e-05, 7.540300000000166e-05, 7.53890000000021e-05, 7.555599999999746e-05, 7.506899999999705e-05, 7.508299999999662e-05, 7.506999999999653e-05, 7.59169999999948e-05, 7.440300000000066e-05, 7.556899999999755e-05, 7.4763999999998e-05, 7.615299999999547e-05, 7.558400000000354e-05, 7.572200000000029e-05, 7.505599999999696e-05, 7.559700000000363e-05]</msg>
<status status="PASS" starttime="20201110 08:39:02.746" endtime="20201110 08:39:02.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.735" endtime="20201110 08:39:02.752"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.759" endtime="20201110 08:39:02.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.767" endtime="20201110 08:39:02.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.763" endtime="20201110 08:39:02.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.754" endtime="20201110 08:39:02.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.241" endtime="20201110 08:39:02.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.240" endtime="20201110 08:39:02.793"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.815" endtime="20201110 08:39:02.833"></status>
</kw>
<msg timestamp="20201110 08:39:02.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.812" endtime="20201110 08:39:02.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.837" endtime="20201110 08:39:02.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.843" endtime="20201110 08:39:02.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.805" endtime="20201110 08:39:02.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.799" endtime="20201110 08:39:02.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.866" endtime="20201110 08:39:03.204"></status>
</kw>
<msg timestamp="20201110 08:39:03.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040510208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040585931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.863" endtime="20201110 08:39:03.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040510208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040585931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.213" endtime="20201110 08:39:03.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.232" endtime="20201110 08:39:03.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.856" endtime="20201110 08:39:03.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.851" endtime="20201110 08:39:03.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.251" level="INFO">${RESULT} = [{'time': 0.040585931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.572299999999976e-05, 'source_diff': 7.572299999999976e-05}, {'time': 0.040671097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:03.243" endtime="20201110 08:39:03.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:03.282" level="INFO">${ACCURACY} = {'source_diff': [7.572299999999976e-05, 7.42360000000053e-05, 7.42639999999975e-05, 7.524999999999893e-05, 7.558400000000354e-05, 7.611099999999676e-05, 7.520899999999969e-05, 7.490300000000116e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:39:03.254" endtime="20201110 08:39:03.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.293" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:39:03.291" endtime="20201110 08:39:03.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.298" level="INFO">VALUE: [7.572299999999976e-05, 7.42360000000053e-05, 7.42639999999975e-05, 7.524999999999893e-05, 7.558400000000354e-05, 7.611099999999676e-05, 7.520899999999969e-05, 7.490300000000116e-05, 7.55969999999967e-05, 7.524999999999893e-05, 7.444499999999937e-05, 7.574999999999943e-05, 7.49440000000004e-05, 7.558400000000354e-05, 7.438900000000109e-05, 7.441600000000076e-05, 7.524999999999893e-05, 7.625000000000687e-05, 7.547200000000004e-05, 7.505599999999696e-05, 7.593099999999436e-05, 7.693099999999536e-05, 7.524999999999893e-05, 7.691600000000326e-05, 7.544500000000037e-05, 7.54310000000008e-05, 7.54310000000008e-05, 7.444499999999937e-05, 7.541600000000176e-05, 7.690300000000316e-05, 7.522299999999926e-05, 7.508300000000356e-05, 7.647200000000104e-05, 7.591700000000173e-05, 7.424999999999793e-05, 7.544500000000037e-05, 7.59440000000014e-05, 7.441700000000023e-05, 7.463900000000134e-05, 7.541600000000176e-05, 7.526400000000544e-05, 7.526400000000544e-05, 7.65969999999977e-05, 7.525000000000587e-05, 7.590300000000216e-05, 7.612499999999633e-05, 7.509700000000313e-05, 7.643099999999486e-05, 7.611099999999676e-05, 7.56110000000032e-05]</msg>
<status status="PASS" starttime="20201110 08:39:03.295" endtime="20201110 08:39:03.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.284" endtime="20201110 08:39:03.302"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.308" endtime="20201110 08:39:03.311"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.316" endtime="20201110 08:39:03.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.312" endtime="20201110 08:39:03.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.303" endtime="20201110 08:39:03.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.795" endtime="20201110 08:39:03.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.794" endtime="20201110 08:39:03.342"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.365" endtime="20201110 08:39:03.385"></status>
</kw>
<msg timestamp="20201110 08:39:03.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.362" endtime="20201110 08:39:03.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.388" endtime="20201110 08:39:03.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.394" endtime="20201110 08:39:03.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.355" endtime="20201110 08:39:03.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.349" endtime="20201110 08:39:03.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.418" endtime="20201110 08:39:03.767"></status>
</kw>
<msg timestamp="20201110 08:39:03.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040786917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040862347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.414" endtime="20201110 08:39:03.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040786917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040862347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.776" endtime="20201110 08:39:03.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.795" endtime="20201110 08:39:03.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.407" endtime="20201110 08:39:03.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.402" endtime="20201110 08:39:03.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.814" level="INFO">${RESULT} = [{'time': 0.040862347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.543000000000133e-05, 'source_diff': 7.543000000000133e-05}, {'time': 0.040945542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:03.805" endtime="20201110 08:39:03.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:03.844" level="INFO">${ACCURACY} = {'source_diff': [7.543000000000133e-05, 7.524999999999893e-05, 7.52639999999985e-05, 8.255599999999752e-05, 7.545800000000047e-05, 8.288900000000265e-05, 7.54310000000008e-05, 7.599999999999968e-05, 7...</msg>
<status status="PASS" starttime="20201110 08:39:03.816" endtime="20201110 08:39:03.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.855" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:39:03.853" endtime="20201110 08:39:03.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.861" level="INFO">VALUE: [7.543000000000133e-05, 7.524999999999893e-05, 7.52639999999985e-05, 8.255599999999752e-05, 7.545800000000047e-05, 8.288900000000265e-05, 7.54310000000008e-05, 7.599999999999968e-05, 7.426400000000444e-05, 7.54310000000008e-05, 7.511099999999576e-05, 7.679099999999967e-05, 7.491600000000126e-05, 7.44439999999999e-05, 7.473599999999886e-05, 8.288900000000265e-05, 7.513900000000184e-05, 7.52639999999985e-05, 7.574999999999943e-05, 7.524999999999893e-05, 7.542999999999439e-05, 7.527799999999807e-05, 7.552799999999832e-05, 7.488900000000159e-05, 8.268100000000111e-05, 7.423599999999836e-05, 7.50839999999961e-05, 7.541700000000123e-05, 7.5763999999999e-05, 7.57769999999991e-05, 7.473699999999833e-05, 7.472199999999929e-05, 7.545800000000047e-05, 7.673600000000086e-05, 8.29170000000018e-05, 7.42360000000053e-05, 7.440300000000066e-05, 7.522199999999979e-05, 7.458300000000306e-05, 7.580499999999823e-05, 7.5763999999999e-05, 7.55969999999967e-05, 7.532000000000372e-05, 7.566700000000148e-05, 7.548599999999961e-05, 7.609800000000361e-05, 8.216600000000157e-05, 7.42639999999975e-05, 7.609700000000413e-05, 7.44309999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:39:03.857" endtime="20201110 08:39:03.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.846" endtime="20201110 08:39:03.864"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.870" endtime="20201110 08:39:03.873"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.878" endtime="20201110 08:39:03.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.874" endtime="20201110 08:39:03.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.865" endtime="20201110 08:39:03.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.344" endtime="20201110 08:39:03.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.343" endtime="20201110 08:39:03.904"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.927" endtime="20201110 08:39:03.945"></status>
</kw>
<msg timestamp="20201110 08:39:03.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.924" endtime="20201110 08:39:03.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.949" endtime="20201110 08:39:03.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.955" endtime="20201110 08:39:03.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.916" endtime="20201110 08:39:03.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.911" endtime="20201110 08:39:03.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.979" endtime="20201110 08:39:04.372"></status>
</kw>
<msg timestamp="20201110 08:39:04.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040562972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040647389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.975" endtime="20201110 08:39:04.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040562972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040647389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.381" endtime="20201110 08:39:04.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.400" endtime="20201110 08:39:04.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.968" endtime="20201110 08:39:04.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.963" endtime="20201110 08:39:04.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.418" level="INFO">${RESULT} = [{'time': 0.040647389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.441699999999636e-05, 'source_diff': 8.441699999999636e-05}, {'time': 0.040736472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:04.410" endtime="20201110 08:39:04.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:04.449" level="INFO">${ACCURACY} = {'source_diff': [8.441699999999636e-05, 8.412500000000434e-05, 8.401400000000031e-05, 8.488900000000466e-05, 8.33049999999988e-05, 8.405599999999902e-05, 8.475000000000149e-05, 8.386099999999758e-05, ...</msg>
<status status="PASS" starttime="20201110 08:39:04.420" endtime="20201110 08:39:04.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.460" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:39:04.458" endtime="20201110 08:39:04.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.465" level="INFO">VALUE: [8.441699999999636e-05, 8.412500000000434e-05, 8.401400000000031e-05, 8.488900000000466e-05, 8.33049999999988e-05, 8.405599999999902e-05, 8.475000000000149e-05, 8.386099999999758e-05, 8.33190000000053e-05, 8.459699999999876e-05, 8.454199999999995e-05, 8.44449999999955e-05, 8.456999999999909e-05, 8.469399999999627e-05, 8.45970000000057e-05, 8.488899999999772e-05, 8.309800000000367e-05, 8.476400000000106e-05, 8.498600000000217e-05, 8.404199999999945e-05, 8.494400000000346e-05, 8.33469999999975e-05, 8.36669999999956e-05, 8.327799999999913e-05, 8.343100000000186e-05, 8.441599999999688e-05, 8.502800000000088e-05, 8.318100000000161e-05, 8.376400000000006e-05, 8.376400000000006e-05, 8.438900000000416e-05, 8.456999999999909e-05, 8.400000000000074e-05, 8.46249999999979e-05, 8.319400000000171e-05, 8.350000000000024e-05, 8.361100000000427e-05, 8.456899999999962e-05, 8.405599999999902e-05, 8.442999999999645e-05, 8.448600000000167e-05, 8.425000000000099e-05, 8.492999999999695e-05, 8.505600000000002e-05, 8.345799999999459e-05, 8.452700000000091e-05, 8.33049999999988e-05, 8.319500000000118e-05, 8.336100000000402e-05, 8.44170000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:39:04.462" endtime="20201110 08:39:04.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.450" endtime="20201110 08:39:04.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.475" endtime="20201110 08:39:04.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.483" endtime="20201110 08:39:04.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.479" endtime="20201110 08:39:04.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.470" endtime="20201110 08:39:04.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.906" endtime="20201110 08:39:04.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.905" endtime="20201110 08:39:04.509"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.532" endtime="20201110 08:39:04.553"></status>
</kw>
<msg timestamp="20201110 08:39:04.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.528" endtime="20201110 08:39:04.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.557" endtime="20201110 08:39:04.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.563" endtime="20201110 08:39:04.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.521" endtime="20201110 08:39:04.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.516" endtime="20201110 08:39:04.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.586" endtime="20201110 08:39:04.932"></status>
</kw>
<msg timestamp="20201110 08:39:04.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040646792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040731931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.583" endtime="20201110 08:39:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040646792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040731931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.942" endtime="20201110 08:39:04.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.961" endtime="20201110 08:39:04.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.576" endtime="20201110 08:39:04.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.571" endtime="20201110 08:39:04.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.982" level="INFO">${RESULT} = [{'time': 0.040731931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513899999999797e-05, 'source_diff': 8.513899999999797e-05}, {'time': 0.040827069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:04.973" endtime="20201110 08:39:04.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:05.013" level="INFO">${ACCURACY} = {'source_diff': [8.513899999999797e-05, 8.541599999999788e-05, 8.51249999999984e-05, 8.431899999999937e-05, 8.483399999999891e-05, 8.580499999999436e-05, 8.563899999999847e-05, 8.419499999999525e-05, ...</msg>
<status status="PASS" starttime="20201110 08:39:04.984" endtime="20201110 08:39:05.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.025" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:39:05.022" endtime="20201110 08:39:05.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.030" level="INFO">VALUE: [8.513899999999797e-05, 8.541599999999788e-05, 8.51249999999984e-05, 8.431899999999937e-05, 8.483399999999891e-05, 8.580499999999436e-05, 8.563899999999847e-05, 8.419499999999525e-05, 8.490299999999729e-05, 8.469500000000268e-05, 8.498600000000217e-05, 8.523600000000242e-05, 8.563899999999847e-05, 8.420800000000228e-05, 8.565299999999804e-05, 8.440300000000373e-05, 8.487500000000509e-05, 8.465299999999704e-05, 8.415199999999706e-05, 8.575000000000249e-05, 8.611099999999983e-05, 8.413799999999749e-05, 8.472200000000235e-05, 8.505499999999361e-05, 8.582000000000034e-05, 8.441600000000382e-05, 8.606900000000112e-05, 8.522200000000285e-05, 8.502800000000088e-05, 8.480599999999977e-05, 8.513899999999797e-05, 8.538899999999822e-05, 8.409799999999773e-05, 8.57920000000012e-05, 8.511099999999883e-05, 8.494400000000346e-05, 8.472300000000182e-05, 8.593099999999743e-05, 8.433399999999841e-05, 8.431899999999937e-05, 8.44720000000021e-05, 8.454100000000048e-05, 8.46390000000044e-05, 8.495799999999609e-05, 8.416700000000304e-05, 8.530600000000027e-05, 8.490299999999729e-05, 8.604200000000145e-05, 8.454199999999995e-05, 8.43469999999985e-05]</msg>
<status status="PASS" starttime="20201110 08:39:05.027" endtime="20201110 08:39:05.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.015" endtime="20201110 08:39:05.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.040" endtime="20201110 08:39:05.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.048" endtime="20201110 08:39:05.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.044" endtime="20201110 08:39:05.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.035" endtime="20201110 08:39:05.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.511" endtime="20201110 08:39:05.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.510" endtime="20201110 08:39:05.074"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.097" endtime="20201110 08:39:05.117"></status>
</kw>
<msg timestamp="20201110 08:39:05.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.094" endtime="20201110 08:39:05.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.121" endtime="20201110 08:39:05.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.127" endtime="20201110 08:39:05.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.086" endtime="20201110 08:39:05.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.081" endtime="20201110 08:39:05.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.150" endtime="20201110 08:39:05.501"></status>
</kw>
<msg timestamp="20201110 08:39:05.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040668167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040753319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.147" endtime="20201110 08:39:05.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040668167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040753319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.511" endtime="20201110 08:39:05.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.530" endtime="20201110 08:39:05.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.140" endtime="20201110 08:39:05.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.135" endtime="20201110 08:39:05.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:05.549" level="INFO">${RESULT} = [{'time': 0.040753319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.5152000000005e-05, 'source_diff': 8.5152000000005e-05}, {'time': 0.040846667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8...</msg>
<status status="PASS" starttime="20201110 08:39:05.540" endtime="20201110 08:39:05.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:05.579" level="INFO">${ACCURACY} = {'source_diff': [8.5152000000005e-05, 8.594500000000393e-05, 8.692999999999895e-05, 8.640299999999879e-05, 8.533299999999994e-05, 8.674999999999655e-05, 8.652799999999544e-05, 8.708300000000169e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:39:05.551" endtime="20201110 08:39:05.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.593" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:39:05.587" endtime="20201110 08:39:05.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.602" level="INFO">VALUE: [8.5152000000005e-05, 8.594500000000393e-05, 8.692999999999895e-05, 8.640299999999879e-05, 8.533299999999994e-05, 8.674999999999655e-05, 8.652799999999544e-05, 8.708300000000169e-05, 8.688899999999972e-05, 8.548599999999573e-05, 8.595899999999657e-05, 8.650000000000324e-05, 8.605600000000102e-05, 8.655500000000205e-05, 8.608300000000069e-05, 8.634799999999998e-05, 8.609700000000026e-05, 8.652800000000238e-05, 8.529100000000123e-05, 8.590299999999829e-05, 8.609700000000026e-05, 8.638899999999922e-05, 8.654099999999554e-05, 8.595800000000403e-05, 8.515300000000448e-05, 8.551399999999487e-05, 8.648599999999673e-05, 8.526400000000156e-05, 8.545799999999659e-05, 8.545799999999659e-05, 8.52920000000007e-05, 8.561200000000574e-05, 8.638899999999922e-05, 8.690299999999929e-05, 8.687500000000015e-05, 8.655499999999511e-05, 8.620900000000375e-05, 8.691699999999886e-05, 8.583300000000044e-05, 8.633400000000041e-05, 8.52920000000007e-05, 8.577800000000163e-05, 8.655600000000152e-05, 8.608300000000069e-05, 8.686100000000058e-05, 8.636199999999955e-05, 8.669500000000468e-05, 8.633300000000094e-05, 8.638899999999922e-05, 8.595799999999709e-05]</msg>
<status status="PASS" starttime="20201110 08:39:05.598" endtime="20201110 08:39:05.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.581" endtime="20201110 08:39:05.607"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.615" endtime="20201110 08:39:05.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.626" endtime="20201110 08:39:05.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.621" endtime="20201110 08:39:05.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.609" endtime="20201110 08:39:05.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.076" endtime="20201110 08:39:05.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.075" endtime="20201110 08:39:05.653"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.675" endtime="20201110 08:39:05.694"></status>
</kw>
<msg timestamp="20201110 08:39:05.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.672" endtime="20201110 08:39:05.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.697" endtime="20201110 08:39:05.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.703" endtime="20201110 08:39:05.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.665" endtime="20201110 08:39:05.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.659" endtime="20201110 08:39:05.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.726" endtime="20201110 08:39:06.057"></status>
</kw>
<msg timestamp="20201110 08:39:06.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040485236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.723" endtime="20201110 08:39:06.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040485236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.066" endtime="20201110 08:39:06.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.084" endtime="20201110 08:39:06.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.716" endtime="20201110 08:39:06.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.711" endtime="20201110 08:39:06.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.103" level="INFO">${RESULT} = [{'time': 0.040485236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.761100000000133e-05, 'source_diff': 8.761100000000133e-05}, {'time': 0.040580458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:06.094" endtime="20201110 08:39:06.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:06.133" level="INFO">${ACCURACY} = {'source_diff': [8.761100000000133e-05, 8.794399999999952e-05, 8.637499999999965e-05, 8.711100000000083e-05, 8.738900000000022e-05, 8.727799999999619e-05, 8.715299999999954e-05, 8.770799999999884e-05,...</msg>
<status status="PASS" starttime="20201110 08:39:06.105" endtime="20201110 08:39:06.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.144" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:39:06.142" endtime="20201110 08:39:06.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.149" level="INFO">VALUE: [8.761100000000133e-05, 8.794399999999952e-05, 8.637499999999965e-05, 8.711100000000083e-05, 8.738900000000022e-05, 8.727799999999619e-05, 8.715299999999954e-05, 8.770799999999884e-05, 8.737500000000065e-05, 8.759700000000176e-05, 8.666700000000555e-05, 8.726399999999662e-05, 8.686100000000058e-05, 8.711100000000083e-05, 8.757000000000209e-05, 8.631899999999443e-05, 8.743099999999893e-05, 8.759700000000176e-05, 8.777799999999669e-05, 8.763900000000047e-05, 8.61119999999993e-05, 8.722199999999791e-05, 8.636100000000008e-05, 8.741699999999936e-05, 8.726400000000356e-05, 8.632000000000084e-05, 8.711100000000083e-05, 8.727799999999619e-05, 8.741699999999936e-05, 8.615299999999854e-05, 8.741699999999936e-05, 8.779100000000373e-05, 8.795799999999909e-05, 8.777799999999669e-05, 8.697299999999714e-05, 8.67920000000022e-05, 8.704199999999551e-05, 8.766600000000013e-05, 8.706900000000212e-05, 8.759700000000176e-05, 8.636100000000008e-05, 8.748599999999773e-05, 8.726400000000356e-05, 8.702800000000288e-05, 8.645800000000453e-05, 8.709700000000126e-05, 8.647300000000357e-05, 8.726400000000356e-05, 8.794399999999952e-05, 8.708399999999422e-05]</msg>
<status status="PASS" starttime="20201110 08:39:06.146" endtime="20201110 08:39:06.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.135" endtime="20201110 08:39:06.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.159" endtime="20201110 08:39:06.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.167" endtime="20201110 08:39:06.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.163" endtime="20201110 08:39:06.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.154" endtime="20201110 08:39:06.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.655" endtime="20201110 08:39:06.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.654" endtime="20201110 08:39:06.193"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.215" endtime="20201110 08:39:06.234"></status>
</kw>
<msg timestamp="20201110 08:39:06.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.212" endtime="20201110 08:39:06.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.237" endtime="20201110 08:39:06.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.243" endtime="20201110 08:39:06.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.205" endtime="20201110 08:39:06.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.199" endtime="20201110 08:39:06.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.266" endtime="20201110 08:39:06.613"></status>
</kw>
<msg timestamp="20201110 08:39:06.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0402495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040338597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:06.263" endtime="20201110 08:39:06.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0402495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040338597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:06.624" endtime="20201110 08:39:06.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.642" endtime="20201110 08:39:06.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.256" endtime="20201110 08:39:06.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.251" endtime="20201110 08:39:06.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.666" level="INFO">${RESULT} = [{'time': 0.040338597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.909699999999632e-05, 'source_diff': 8.909699999999632e-05}, {'time': 0.040436931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:06.656" endtime="20201110 08:39:06.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:06.696" level="INFO">${ACCURACY} = {'source_diff': [8.909699999999632e-05, 8.793099999999943e-05, 8.830599999999633e-05, 8.940300000000179e-05, 8.886100000000258e-05, 8.79590000000055e-05, 9.011100000000383e-05, 8.84999999999983e-05, 8...</msg>
<status status="PASS" starttime="20201110 08:39:06.668" endtime="20201110 08:39:06.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.707" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:39:06.705" endtime="20201110 08:39:06.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.713" level="INFO">VALUE: [8.909699999999632e-05, 8.793099999999943e-05, 8.830599999999633e-05, 8.940300000000179e-05, 8.886100000000258e-05, 8.79590000000055e-05, 9.011100000000383e-05, 8.84999999999983e-05, 8.991599999999544e-05, 8.809700000000226e-05, 8.905599999999708e-05, 8.89999999999988e-05, 8.912499999999546e-05, 8.777799999999669e-05, 8.977799999999869e-05, 8.762499999999396e-05, 8.89720000000066e-05, 8.884699999999607e-05, 8.758300000000219e-05, 8.745800000000553e-05, 8.944400000000102e-05, 8.750000000000424e-05, 8.977799999999869e-05, 8.845799999999959e-05, 8.809700000000226e-05, 8.830599999999633e-05, 8.986099999999664e-05, 8.729100000000323e-05, 8.938900000000222e-05, 8.86250000000019e-05, 8.954200000000495e-05, 8.841700000000036e-05, 8.865300000000104e-05, 8.815300000000054e-05, 8.972299999999989e-05, 8.913900000000197e-05, 8.726400000000356e-05, 8.987500000000315e-05, 8.779199999999626e-05, 8.86670000000006e-05, 8.770799999999884e-05, 8.986099999999664e-05, 9.005600000000502e-05, 8.759699999999482e-05, 8.863900000000147e-05, 8.909699999999632e-05, 8.808300000000269e-05, 8.926400000000556e-05, 8.830599999999633e-05, 8.988899999999578e-05]</msg>
<status status="PASS" starttime="20201110 08:39:06.709" endtime="20201110 08:39:06.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.698" endtime="20201110 08:39:06.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.722" endtime="20201110 08:39:06.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.730" endtime="20201110 08:39:06.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.726" endtime="20201110 08:39:06.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.717" endtime="20201110 08:39:06.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.195" endtime="20201110 08:39:06.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.194" endtime="20201110 08:39:06.757"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.779" endtime="20201110 08:39:06.798"></status>
</kw>
<msg timestamp="20201110 08:39:06.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.776" endtime="20201110 08:39:06.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.802" endtime="20201110 08:39:06.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.808" endtime="20201110 08:39:06.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.769" endtime="20201110 08:39:06.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.763" endtime="20201110 08:39:06.815"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.832" endtime="20201110 08:39:07.172"></status>
</kw>
<msg timestamp="20201110 08:39:07.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040963278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041054278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.829" endtime="20201110 08:39:07.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040963278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041054278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.181" endtime="20201110 08:39:07.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.200" endtime="20201110 08:39:07.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.822" endtime="20201110 08:39:07.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.816" endtime="20201110 08:39:07.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.221" level="INFO">${RESULT} = [{'time': 0.041054278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.10000000000008e-05, 'source_diff': 9.10000000000008e-05}, {'time': 0.041149486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:07.212" endtime="20201110 08:39:07.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:07.251" level="INFO">${ACCURACY} = {'source_diff': [9.10000000000008e-05, 9.055499999999911e-05, 8.977799999999869e-05, 9.068100000000218e-05, 8.972200000000041e-05, 9.027800000000613e-05, 8.943000000000145e-05, 8.974999999999955e-05, ...</msg>
<status status="PASS" starttime="20201110 08:39:07.223" endtime="20201110 08:39:07.251"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.262" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:39:07.259" endtime="20201110 08:39:07.262"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.267" level="INFO">VALUE: [9.10000000000008e-05, 9.055499999999911e-05, 8.977799999999869e-05, 9.068100000000218e-05, 8.972200000000041e-05, 9.027800000000613e-05, 8.943000000000145e-05, 8.974999999999955e-05, 9.070900000000132e-05, 8.930600000000427e-05, 8.924999999999905e-05, 9.104199999999951e-05, 9.084699999999807e-05, 8.923599999999948e-05, 9.108299999999875e-05, 8.997200000000066e-05, 8.919500000000025e-05, 9.090300000000329e-05, 9.025000000000005e-05, 8.955500000000505e-05, 9.079199999999926e-05, 9.029199999999876e-05, 8.961100000000333e-05, 9.101400000000037e-05, 9.069399999999533e-05, 8.998600000000023e-05, 9.008300000000469e-05, 8.96250000000029e-05, 9.087499999999721e-05, 8.959799999999629e-05, 8.994400000000152e-05, 8.955599999999758e-05, 9.098600000000123e-05, 8.97079999999939e-05, 8.991600000000238e-05, 8.955600000000452e-05, 8.958300000000419e-05, 9.084799999999754e-05, 8.993100000000143e-05, 9.015300000000254e-05, 9.015300000000254e-05, 8.972200000000041e-05, 9.01800000000022e-05, 9.111099999999789e-05, 8.96529999999951e-05, 9.033400000000441e-05, 8.954099999999854e-05, 8.969500000000075e-05, 8.980499999999836e-05, 9.054199999999901e-05]</msg>
<status status="PASS" starttime="20201110 08:39:07.264" endtime="20201110 08:39:07.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.253" endtime="20201110 08:39:07.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.281" endtime="20201110 08:39:07.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.289" endtime="20201110 08:39:07.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.285" endtime="20201110 08:39:07.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.276" endtime="20201110 08:39:07.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.759" endtime="20201110 08:39:07.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.758" endtime="20201110 08:39:07.315"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.338" endtime="20201110 08:39:07.359"></status>
</kw>
<msg timestamp="20201110 08:39:07.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.335" endtime="20201110 08:39:07.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.363" endtime="20201110 08:39:07.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.369" endtime="20201110 08:39:07.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.327" endtime="20201110 08:39:07.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.322" endtime="20201110 08:39:07.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.392" endtime="20201110 08:39:07.733"></status>
</kw>
<msg timestamp="20201110 08:39:07.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041258917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041350556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.389" endtime="20201110 08:39:07.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041258917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041350556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.742" endtime="20201110 08:39:07.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.761" endtime="20201110 08:39:07.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.382" endtime="20201110 08:39:07.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.377" endtime="20201110 08:39:07.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.779" level="INFO">${RESULT} = [{'time': 0.041350556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.163899999999753e-05, 'source_diff': 9.163899999999753e-05}, {'time': 0.041450764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:07.771" endtime="20201110 08:39:07.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:07.809" level="INFO">${ACCURACY} = {'source_diff': [9.163899999999753e-05, 9.105599999999908e-05, 9.179200000000026e-05, 9.173600000000198e-05, 9.069400000000227e-05, 9.056899999999868e-05, 9.144399999999608e-05, 9.18879999999983e-05, ...</msg>
<status status="PASS" starttime="20201110 08:39:07.781" endtime="20201110 08:39:07.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.820" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:39:07.818" endtime="20201110 08:39:07.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.825" level="INFO">VALUE: [9.163899999999753e-05, 9.105599999999908e-05, 9.179200000000026e-05, 9.173600000000198e-05, 9.069400000000227e-05, 9.056899999999868e-05, 9.144399999999608e-05, 9.18879999999983e-05, 9.10000000000008e-05, 9.195800000000309e-05, 9.143100000000293e-05, 9.133399999999847e-05, 9.16670000000036e-05, 9.075000000000055e-05, 9.055599999999858e-05, 9.113899999999703e-05, 9.019500000000125e-05, 9.026399999999962e-05, 9.148600000000173e-05, 9.025000000000005e-05, 9.19729999999952e-05, 9.138899999999728e-05, 9.127800000000019e-05, 9.037500000000365e-05, 9.086200000000405e-05, 9.095800000000209e-05, 9.131899999999943e-05, 9.069500000000175e-05, 9.113899999999703e-05, 9.102700000000047e-05, 9.111099999999789e-05, 9.023600000000048e-05, 9.016600000000263e-05, 9.177799999999375e-05, 9.175000000000155e-05, 9.130599999999933e-05, 9.161100000000533e-05, 9.168099999999624e-05, 9.113899999999703e-05, 9.208399999999922e-05, 9.16529999999971e-05, 9.020800000000134e-05, 9.054199999999901e-05, 9.087499999999721e-05, 9.052799999999944e-05, 9.147200000000216e-05, 9.1332999999999e-05, 9.01670000000021e-05, 9.10000000000008e-05, 9.125000000000105e-05]</msg>
<status status="PASS" starttime="20201110 08:39:07.822" endtime="20201110 08:39:07.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.811" endtime="20201110 08:39:07.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.835" endtime="20201110 08:39:07.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.843" endtime="20201110 08:39:07.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.839" endtime="20201110 08:39:07.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.830" endtime="20201110 08:39:07.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.317" endtime="20201110 08:39:07.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.316" endtime="20201110 08:39:07.869"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.891" endtime="20201110 08:39:07.910"></status>
</kw>
<msg timestamp="20201110 08:39:07.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.888" endtime="20201110 08:39:07.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.913" endtime="20201110 08:39:07.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.919" endtime="20201110 08:39:07.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.881" endtime="20201110 08:39:07.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.875" endtime="20201110 08:39:07.926"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.942" endtime="20201110 08:39:08.273"></status>
</kw>
<msg timestamp="20201110 08:39:08.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040179597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.939" endtime="20201110 08:39:08.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040179597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040272153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.283" endtime="20201110 08:39:08.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.302" endtime="20201110 08:39:08.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.932" endtime="20201110 08:39:08.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.927" endtime="20201110 08:39:08.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.321" level="INFO">${RESULT} = [{'time': 0.040272153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.255600000000058e-05, 'source_diff': 9.255600000000058e-05}, {'time': 0.040371361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:08.312" endtime="20201110 08:39:08.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:08.351" level="INFO">${ACCURACY} = {'source_diff': [9.255600000000058e-05, 9.288899999999878e-05, 9.18199999999994e-05, 9.21250000000054e-05, 9.237499999999871e-05, 9.272300000000289e-05, 9.180599999999983e-05, 9.290299999999835e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:39:08.323" endtime="20201110 08:39:08.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.361" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:39:08.359" endtime="20201110 08:39:08.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.375" level="INFO">VALUE: [9.255600000000058e-05, 9.288899999999878e-05, 9.18199999999994e-05, 9.21250000000054e-05, 9.237499999999871e-05, 9.272300000000289e-05, 9.180599999999983e-05, 9.290299999999835e-05, 9.18329999999995e-05, 9.272199999999647e-05, 9.308400000000022e-05, 9.284700000000007e-05, 9.26659999999982e-05, 9.24859999999958e-05, 9.305600000000108e-05, 9.225000000000205e-05, 9.181899999999993e-05, 9.223700000000196e-05, 9.161100000000533e-05, 9.216699999999717e-05, 9.238899999999828e-05, 9.130499999999986e-05, 9.2333e-05, 9.209699999999932e-05, 9.212499999999846e-05, 9.262499999999896e-05, 9.138900000000422e-05, 9.158299999999925e-05, 9.286099999999964e-05, 9.305600000000108e-05, 9.240300000000479e-05, 9.290200000000581e-05, 9.218099999999674e-05, 9.130599999999933e-05, 9.133300000000594e-05, 9.147300000000164e-05, 9.141700000000336e-05, 9.126400000000062e-05, 9.288899999999878e-05, 9.194400000000352e-05, 9.258300000000025e-05, 9.147200000000216e-05, 9.194399999999658e-05, 9.161099999999839e-05, 9.156999999999915e-05, 9.305500000000161e-05, 9.16250000000049e-05, 9.307000000000065e-05, 9.208299999999975e-05, 9.255499999999417e-05]</msg>
<status status="PASS" starttime="20201110 08:39:08.372" endtime="20201110 08:39:08.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.352" endtime="20201110 08:39:08.378"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.385" endtime="20201110 08:39:08.388"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.394" endtime="20201110 08:39:08.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.389" endtime="20201110 08:39:08.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.380" endtime="20201110 08:39:08.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.871" endtime="20201110 08:39:08.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.870" endtime="20201110 08:39:08.420"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.443" endtime="20201110 08:39:08.461"></status>
</kw>
<msg timestamp="20201110 08:39:08.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.439" endtime="20201110 08:39:08.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.465" endtime="20201110 08:39:08.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.471" endtime="20201110 08:39:08.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.432" endtime="20201110 08:39:08.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.426" endtime="20201110 08:39:08.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.494" endtime="20201110 08:39:08.827"></status>
</kw>
<msg timestamp="20201110 08:39:08.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040625389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.490" endtime="20201110 08:39:08.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040625389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040718222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.836" endtime="20201110 08:39:08.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.855" endtime="20201110 08:39:08.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.483" endtime="20201110 08:39:08.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.479" endtime="20201110 08:39:08.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.874" level="INFO">${RESULT} = [{'time': 0.040718222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.28330000000005e-05, 'source_diff': 9.28330000000005e-05}, {'time': 0.040816444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:08.865" endtime="20201110 08:39:08.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:08.904" level="INFO">${ACCURACY} = {'source_diff': [9.28330000000005e-05, 9.302700000000247e-05, 9.266699999999767e-05, 9.356900000000168e-05, 9.29859999999963e-05, 9.36529999999991e-05, 9.39729999999972e-05, 9.359699999999388e-05, 9.3...</msg>
<status status="PASS" starttime="20201110 08:39:08.876" endtime="20201110 08:39:08.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.915" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:39:08.912" endtime="20201110 08:39:08.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.920" level="INFO">VALUE: [9.28330000000005e-05, 9.302700000000247e-05, 9.266699999999767e-05, 9.356900000000168e-05, 9.29859999999963e-05, 9.36529999999991e-05, 9.39729999999972e-05, 9.359699999999388e-05, 9.326399999999568e-05, 9.311099999999989e-05, 9.355500000000211e-05, 9.397300000000414e-05, 9.345900000000407e-05, 9.347200000000416e-05, 9.356900000000168e-05, 9.340299999999885e-05, 9.220800000000334e-05, 9.362499999999996e-05, 9.340299999999885e-05, 9.302800000000194e-05, 9.326400000000262e-05, 9.38330000000015e-05, 9.379199999999532e-05, 9.266700000000461e-05, 9.234800000000598e-05, 9.240299999999785e-05, 9.330500000000186e-05, 9.236099999999914e-05, 9.331900000000143e-05, 9.301400000000237e-05, 9.409800000000079e-05, 9.309699999999338e-05, 9.344499999999756e-05, 9.263899999999853e-05, 9.315199999999912e-05, 9.390299999999935e-05, 9.26659999999982e-05, 9.25000000000023e-05, 9.341699999999842e-05, 9.330600000000133e-05, 9.365199999999962e-05, 9.255600000000058e-05, 9.345800000000459e-05, 9.373599999999704e-05, 9.255600000000058e-05, 9.373599999999704e-05, 9.268099999999724e-05, 9.311099999999989e-05, 9.266699999999767e-05, 9.30000000000028e-05]</msg>
<status status="PASS" starttime="20201110 08:39:08.917" endtime="20201110 08:39:08.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.906" endtime="20201110 08:39:08.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.929" endtime="20201110 08:39:08.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.938" endtime="20201110 08:39:08.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.933" endtime="20201110 08:39:08.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.925" endtime="20201110 08:39:08.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.422" endtime="20201110 08:39:08.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.421" endtime="20201110 08:39:08.963"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.986" endtime="20201110 08:39:09.004"></status>
</kw>
<msg timestamp="20201110 08:39:09.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.982" endtime="20201110 08:39:09.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:09.008" endtime="20201110 08:39:09.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.014" endtime="20201110 08:39:09.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.975" endtime="20201110 08:39:09.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.970" endtime="20201110 08:39:09.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.037" endtime="20201110 08:39:09.369"></status>
</kw>
<msg timestamp="20201110 08:39:09.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.034" endtime="20201110 08:39:09.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040030708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040125806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.378" endtime="20201110 08:39:09.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.397" endtime="20201110 08:39:09.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.027" endtime="20201110 08:39:09.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.022" endtime="20201110 08:39:09.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:09.418" level="INFO">${RESULT} = [{'time': 0.040125806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.509800000000179e-05, 'source_diff': 9.509800000000179e-05}, {'time': 0.040226028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:09.409" endtime="20201110 08:39:09.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:09.449" level="INFO">${ACCURACY} = {'source_diff': [9.509800000000179e-05, 9.501399999999743e-05, 9.404199999999557e-05, 9.408299999999481e-05, 9.501399999999743e-05, 9.501399999999743e-05, 9.407000000000165e-05, 9.338899999999928e-05,...</msg>
<status status="PASS" starttime="20201110 08:39:09.421" endtime="20201110 08:39:09.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.460" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:39:09.457" endtime="20201110 08:39:09.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.465" level="INFO">VALUE: [9.509800000000179e-05, 9.501399999999743e-05, 9.404199999999557e-05, 9.408299999999481e-05, 9.501399999999743e-05, 9.501399999999743e-05, 9.407000000000165e-05, 9.338899999999928e-05, 9.324999999999611e-05, 9.362499999999996e-05, 9.323700000000296e-05, 9.352800000000244e-05, 9.497199999999872e-05, 9.354200000000201e-05, 9.355599999999464e-05, 9.404199999999557e-05, 9.469499999999881e-05, 9.513900000000103e-05, 9.497200000000566e-05, 9.338899999999928e-05, 9.322199999999697e-05, 9.48200000000024e-05, 9.359700000000082e-05, 9.397200000000466e-05, 9.483400000000197e-05, 9.345800000000459e-05, 9.479200000000326e-05, 9.358300000000125e-05, 9.323599999999654e-05, 9.351399999999593e-05, 9.345800000000459e-05, 9.43200000000019e-05, 9.420899999999788e-05, 9.361100000000039e-05, 9.511200000000136e-05, 9.406900000000218e-05, 9.367999999999876e-05, 9.391600000000638e-05, 9.324999999999611e-05, 9.337499999999971e-05, 9.465200000000062e-05, 9.479200000000326e-05, 9.35409999999956e-05, 9.354200000000201e-05, 9.427799999999625e-05, 9.384800000000054e-05, 9.362499999999996e-05, 9.370800000000484e-05, 9.41659999999997e-05, 9.354199999999507e-05]</msg>
<status status="PASS" starttime="20201110 08:39:09.462" endtime="20201110 08:39:09.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.451" endtime="20201110 08:39:09.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.475" endtime="20201110 08:39:09.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:09.483" endtime="20201110 08:39:09.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.478" endtime="20201110 08:39:09.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.470" endtime="20201110 08:39:09.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.965" endtime="20201110 08:39:09.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.964" endtime="20201110 08:39:09.508"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.531" endtime="20201110 08:39:09.550"></status>
</kw>
<msg timestamp="20201110 08:39:09.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:09.528" endtime="20201110 08:39:09.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:09.553" endtime="20201110 08:39:09.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.559" endtime="20201110 08:39:09.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.521" endtime="20201110 08:39:09.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.515" endtime="20201110 08:39:09.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.582" endtime="20201110 08:39:09.935"></status>
</kw>
<msg timestamp="20201110 08:39:09.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040184556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.579" endtime="20201110 08:39:09.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040089167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040184556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.944" endtime="20201110 08:39:09.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.963" endtime="20201110 08:39:09.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.572" endtime="20201110 08:39:09.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.567" endtime="20201110 08:39:09.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:09.982" level="INFO">${RESULT} = [{'time': 0.040184556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.538900000000128e-05, 'source_diff': 9.538900000000128e-05}, {'time': 0.040289708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:09.973" endtime="20201110 08:39:09.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:10.013" level="INFO">${ACCURACY} = {'source_diff': [9.538900000000128e-05, 9.426400000000362e-05, 9.462500000000096e-05, 9.45000000000043e-05, 9.461200000000086e-05, 9.588900000000178e-05, 9.445799999999865e-05, 9.591700000000092e-05, ...</msg>
<status status="PASS" starttime="20201110 08:39:09.985" endtime="20201110 08:39:10.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.025" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:39:10.022" endtime="20201110 08:39:10.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.030" level="INFO">VALUE: [9.538900000000128e-05, 9.426400000000362e-05, 9.462500000000096e-05, 9.45000000000043e-05, 9.461200000000086e-05, 9.588900000000178e-05, 9.445799999999865e-05, 9.591700000000092e-05, 9.558399999999578e-05, 9.461100000000139e-05, 9.58609999999957e-05, 9.6027999999998e-05, 9.540300000000085e-05, 9.516700000000017e-05, 9.451400000000387e-05, 9.442999999999951e-05, 9.497199999999872e-05, 9.615299999999466e-05, 9.577799999999775e-05, 9.429099999999635e-05, 9.558400000000272e-05, 9.425000000000405e-05, 9.522299999999845e-05, 9.538900000000128e-05, 9.44859999999978e-05, 9.480500000000336e-05, 9.554199999999707e-05, 9.45000000000043e-05, 9.552699999999803e-05, 9.555599999999664e-05, 9.449999999999736e-05, 9.590200000000187e-05, 9.427799999999625e-05, 9.509700000000232e-05, 9.497199999999872e-05, 9.448699999999727e-05, 9.429199999999582e-05, 9.522299999999845e-05, 9.601400000000537e-05, 9.590299999999441e-05, 9.52079999999994e-05, 9.573599999999904e-05, 9.586100000000264e-05, 9.52079999999994e-05, 9.49859999999983e-05, 9.429100000000329e-05, 9.605600000000408e-05, 9.59859999999993e-05, 9.455499999999617e-05, 9.463900000000053e-05]</msg>
<status status="PASS" starttime="20201110 08:39:10.027" endtime="20201110 08:39:10.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.015" endtime="20201110 08:39:10.034"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.040" endtime="20201110 08:39:10.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:10.048" endtime="20201110 08:39:10.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.044" endtime="20201110 08:39:10.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.035" endtime="20201110 08:39:10.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.511" endtime="20201110 08:39:10.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.509" endtime="20201110 08:39:10.075"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.098" endtime="20201110 08:39:10.119"></status>
</kw>
<msg timestamp="20201110 08:39:10.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.094" endtime="20201110 08:39:10.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.122" endtime="20201110 08:39:10.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.129" endtime="20201110 08:39:10.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.087" endtime="20201110 08:39:10.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.081" endtime="20201110 08:39:10.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.152" endtime="20201110 08:39:10.505"></status>
</kw>
<msg timestamp="20201110 08:39:10.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041370042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.149" endtime="20201110 08:39:10.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041370042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041466903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.514" endtime="20201110 08:39:10.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.533" endtime="20201110 08:39:10.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.142" endtime="20201110 08:39:10.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.137" endtime="20201110 08:39:10.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:10.552" level="INFO">${RESULT} = [{'time': 0.041466903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.68609999999967e-05, 'source_diff': 9.68609999999967e-05}, {'time': 0.041574097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:10.543" endtime="20201110 08:39:10.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:10.582" level="INFO">${ACCURACY} = {'source_diff': [9.68609999999967e-05, 9.666599999999526e-05, 9.658399999999678e-05, 9.674999999999961e-05, 9.61530000000016e-05, 9.658299999999731e-05, 9.676299999999971e-05, 9.551400000000487e-05, 9...</msg>
<status status="PASS" starttime="20201110 08:39:10.554" endtime="20201110 08:39:10.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.593" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:39:10.591" endtime="20201110 08:39:10.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.599" level="INFO">VALUE: [9.68609999999967e-05, 9.666599999999526e-05, 9.658399999999678e-05, 9.674999999999961e-05, 9.61530000000016e-05, 9.658299999999731e-05, 9.676299999999971e-05, 9.551400000000487e-05, 9.551299999999846e-05, 9.583399999999603e-05, 9.608300000000375e-05, 9.693100000000149e-05, 9.64870000000062e-05, 9.622199999999997e-05, 9.586200000000211e-05, 9.694500000000106e-05, 9.57079999999999e-05, 9.626399999999868e-05, 9.56530000000011e-05, 9.605499999999767e-05, 9.520899999999888e-05, 9.640300000000185e-05, 9.704199999999857e-05, 9.672200000000047e-05, 9.515199999999419e-05, 9.665299999999516e-05, 9.587500000000221e-05, 9.568100000000024e-05, 9.551400000000487e-05, 9.555500000000411e-05, 9.515200000000112e-05, 9.609699999999638e-05, 9.568000000000076e-05, 9.569400000000033e-05, 9.576399999999818e-05, 9.625000000000605e-05, 9.626399999999868e-05, 9.627799999999825e-05, 9.659700000000382e-05, 9.56530000000011e-05, 9.665200000000262e-05, 9.594400000000058e-05, 9.694400000000158e-05, 9.59859999999993e-05, 9.644400000000108e-05, 9.594400000000058e-05, 9.599999999999886e-05, 9.655499999999817e-05, 9.629200000000476e-05, 9.566700000000067e-05]</msg>
<status status="PASS" starttime="20201110 08:39:10.595" endtime="20201110 08:39:10.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.584" endtime="20201110 08:39:10.602"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.608" endtime="20201110 08:39:10.611"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:10.616" endtime="20201110 08:39:10.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.612" endtime="20201110 08:39:10.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.604" endtime="20201110 08:39:10.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.077" endtime="20201110 08:39:10.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.076" endtime="20201110 08:39:10.642"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.665" endtime="20201110 08:39:10.684"></status>
</kw>
<msg timestamp="20201110 08:39:10.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.662" endtime="20201110 08:39:10.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.687" endtime="20201110 08:39:10.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.694" endtime="20201110 08:39:10.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.655" endtime="20201110 08:39:10.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.649" endtime="20201110 08:39:10.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.717" endtime="20201110 08:39:11.055"></status>
</kw>
<msg timestamp="20201110 08:39:11.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040736639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:10.714" endtime="20201110 08:39:11.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040736639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0408335, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:11.064" endtime="20201110 08:39:11.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.082" endtime="20201110 08:39:11.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.707" endtime="20201110 08:39:11.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.702" endtime="20201110 08:39:11.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.101" level="INFO">${RESULT} = [{'time': 0.0408335, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.686100000000364e-05, 'source_diff': 9.686100000000364e-05}, {'time': 0.040938722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:11.092" endtime="20201110 08:39:11.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:11.131" level="INFO">${ACCURACY} = {'source_diff': [9.686100000000364e-05, 9.638899999999534e-05, 9.741700000000242e-05, 9.636100000000314e-05, 9.773600000000104e-05, 9.688899999999584e-05, 9.812500000000446e-05, 9.705599999999814e-05,...</msg>
<status status="PASS" starttime="20201110 08:39:11.103" endtime="20201110 08:39:11.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.142" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:39:11.140" endtime="20201110 08:39:11.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.147" level="INFO">VALUE: [9.686100000000364e-05, 9.638899999999534e-05, 9.741700000000242e-05, 9.636100000000314e-05, 9.773600000000104e-05, 9.688899999999584e-05, 9.812500000000446e-05, 9.705599999999814e-05, 9.666700000000167e-05, 9.649999999999936e-05, 9.626399999999868e-05, 9.706900000000518e-05, 9.68609999999967e-05, 9.793100000000249e-05, 9.775000000000061e-05, 9.71530000000026e-05, 9.643100000000099e-05, 9.79730000000012e-05, 9.643000000000151e-05, 9.78479999999976e-05, 9.66809999999943e-05, 9.669500000000081e-05, 9.624999999999911e-05, 9.659700000000382e-05, 9.754199999999907e-05, 9.73059999999984e-05, 9.726399999999968e-05, 9.618100000000074e-05, 9.784700000000507e-05, 9.797200000000172e-05, 9.619500000000031e-05, 9.701399999999943e-05, 9.768100000000224e-05, 9.677800000000569e-05, 9.623599999999954e-05, 9.631899999999749e-05, 9.79860000000013e-05, 9.744500000000156e-05, 9.690300000000235e-05, 9.761099999999745e-05, 9.636100000000314e-05, 9.701399999999943e-05, 9.693000000000201e-05, 9.690300000000235e-05, 9.656999999999721e-05, 9.747199999999429e-05, 9.713899999999609e-05, 9.78479999999976e-05, 9.718100000000174e-05, 9.656900000000468e-05]</msg>
<status status="PASS" starttime="20201110 08:39:11.144" endtime="20201110 08:39:11.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.133" endtime="20201110 08:39:11.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.157" endtime="20201110 08:39:11.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.165" endtime="20201110 08:39:11.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.161" endtime="20201110 08:39:11.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.152" endtime="20201110 08:39:11.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.644" endtime="20201110 08:39:11.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.643" endtime="20201110 08:39:11.191"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.214" endtime="20201110 08:39:11.235"></status>
</kw>
<msg timestamp="20201110 08:39:11.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.211" endtime="20201110 08:39:11.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.238" endtime="20201110 08:39:11.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.244" endtime="20201110 08:39:11.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.203" endtime="20201110 08:39:11.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.197" endtime="20201110 08:39:11.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.267" endtime="20201110 08:39:11.611"></status>
</kw>
<msg timestamp="20201110 08:39:11.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04097375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:11.264" endtime="20201110 08:39:11.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040875306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04097375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:11.620" endtime="20201110 08:39:11.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.638" endtime="20201110 08:39:11.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.257" endtime="20201110 08:39:11.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.252" endtime="20201110 08:39:11.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.659" level="INFO">${RESULT} = [{'time': 0.04097375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.844400000000308e-05, 'source_diff': 9.844400000000308e-05}, {'time': 0.041079944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:39:11.650" endtime="20201110 08:39:11.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:11.688" level="INFO">${ACCURACY} = {'source_diff': [9.844400000000308e-05, 9.808299999999881e-05, 9.90139999999945e-05, 9.806899999999924e-05, 9.8028e-05, 9.893099999999655e-05, 9.726399999999968e-05, 9.84860000000018e-05, 9.8457999999...</msg>
<status status="PASS" starttime="20201110 08:39:11.661" endtime="20201110 08:39:11.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.699" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:39:11.697" endtime="20201110 08:39:11.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.705" level="INFO">VALUE: [9.844400000000308e-05, 9.808299999999881e-05, 9.90139999999945e-05, 9.806899999999924e-05, 9.8028e-05, 9.893099999999655e-05, 9.726399999999968e-05, 9.84860000000018e-05, 9.845799999999572e-05, 9.772199999999454e-05, 9.744500000000156e-05, 9.738900000000328e-05, 9.85280000000005e-05, 9.8028e-05, 9.812499999999752e-05, 9.75409999999996e-05, 9.813899999999709e-05, 9.869500000000281e-05, 9.865299999999716e-05, 9.879099999999391e-05, 9.793100000000249e-05, 9.881999999999946e-05, 9.861099999999845e-05, 9.806899999999924e-05, 9.884699999999913e-05, 9.841699999999648e-05, 9.737499999999677e-05, 9.915299999999766e-05, 9.761200000000386e-05, 9.740200000000337e-05, 9.820799999999547e-05, 9.89860000000023e-05, 9.804199999999957e-05, 9.875000000000161e-05, 9.758300000000525e-05, 9.742999999999558e-05, 9.790299999999641e-05, 9.888900000000478e-05, 9.855599999999964e-05, 9.831999999999896e-05, 9.888900000000478e-05, 9.731999999999796e-05, 9.89730000000022e-05, 9.887500000000521e-05, 9.756899999999874e-05, 9.915299999999766e-05, 9.8028e-05, 9.836200000000461e-05, 9.738899999999634e-05, 9.725000000000011e-05]</msg>
<status status="PASS" starttime="20201110 08:39:11.702" endtime="20201110 08:39:11.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.690" endtime="20201110 08:39:11.708"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.714" endtime="20201110 08:39:11.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.723" endtime="20201110 08:39:11.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.718" endtime="20201110 08:39:11.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.710" endtime="20201110 08:39:11.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.193" endtime="20201110 08:39:11.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.192" endtime="20201110 08:39:11.749"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.771" endtime="20201110 08:39:11.792"></status>
</kw>
<msg timestamp="20201110 08:39:11.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.768" endtime="20201110 08:39:11.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.795" endtime="20201110 08:39:11.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.801" endtime="20201110 08:39:11.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.761" endtime="20201110 08:39:11.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.755" endtime="20201110 08:39:11.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.824" endtime="20201110 08:39:12.168"></status>
</kw>
<msg timestamp="20201110 08:39:12.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040489792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040588417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.821" endtime="20201110 08:39:12.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040489792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040588417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.177" endtime="20201110 08:39:12.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.195" endtime="20201110 08:39:12.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.814" endtime="20201110 08:39:12.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.809" endtime="20201110 08:39:12.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.215" level="INFO">${RESULT} = [{'time': 0.040588417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.862500000000496e-05, 'source_diff': 9.862500000000496e-05}, {'time': 0.040693625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:12.206" endtime="20201110 08:39:12.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:12.245" level="INFO">${ACCURACY} = {'source_diff': [9.862500000000496e-05, 9.970799999999697e-05, 9.951400000000193e-05, 9.963900000000553e-05, 0.00010001400000000243, 0.00010011099999999995, 0.00010005499999999473, 9.837499999999777e-...</msg>
<status status="PASS" starttime="20201110 08:39:12.217" endtime="20201110 08:39:12.245"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.256" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:39:12.253" endtime="20201110 08:39:12.256"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.261" level="INFO">VALUE: [9.862500000000496e-05, 9.970799999999697e-05, 9.951400000000193e-05, 9.963900000000553e-05, 0.00010001400000000243, 0.00010011099999999995, 0.00010005499999999473, 9.837499999999777e-05, 9.922200000000297e-05, 9.854200000000007e-05, 9.844499999999562e-05, 9.866700000000367e-05, 9.95280000000015e-05, 9.915299999999766e-05, 9.88609999999987e-05, 0.00010000000000000286, 9.940299999999791e-05, 9.847200000000222e-05, 9.956900000000074e-05, 9.874999999999468e-05, 9.988899999999884e-05, 9.82080000000024e-05, 9.937499999999877e-05, 9.848700000000127e-05, 9.861099999999845e-05, 9.96939999999974e-05, 9.96530000000051e-05, 9.856999999999921e-05, 9.91809999999968e-05, 9.84860000000018e-05, 9.86809999999963e-05, 9.95280000000015e-05, 9.925000000000211e-05, 9.922199999999604e-05, 9.975000000000261e-05, 9.872199999999554e-05, 9.912499999999852e-05, 9.931900000000049e-05, 9.859699999999888e-05, 9.955500000000117e-05, 9.98880000000063e-05, 9.919500000000331e-05, 9.912499999999852e-05, 0.00010005500000000167, 9.877800000000075e-05, 9.875000000000161e-05, 9.938899999999834e-05, 9.823600000000154e-05, 9.987499999999927e-05, 9.913900000000503e-05]</msg>
<status status="PASS" starttime="20201110 08:39:12.258" endtime="20201110 08:39:12.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.246" endtime="20201110 08:39:12.268"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.275" endtime="20201110 08:39:12.277"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:12.283" endtime="20201110 08:39:12.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.279" endtime="20201110 08:39:12.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.270" endtime="20201110 08:39:12.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.751" endtime="20201110 08:39:12.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.750" endtime="20201110 08:39:12.309"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.331" endtime="20201110 08:39:12.352"></status>
</kw>
<msg timestamp="20201110 08:39:12.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.328" endtime="20201110 08:39:12.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.356" endtime="20201110 08:39:12.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.362" endtime="20201110 08:39:12.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.321" endtime="20201110 08:39:12.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.315" endtime="20201110 08:39:12.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.385" endtime="20201110 08:39:12.736"></status>
</kw>
<msg timestamp="20201110 08:39:12.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040541306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040641667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.382" endtime="20201110 08:39:12.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040541306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040641667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.745" endtime="20201110 08:39:12.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.763" endtime="20201110 08:39:12.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.374" endtime="20201110 08:39:12.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.370" endtime="20201110 08:39:12.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.782" level="INFO">${RESULT} = [{'time': 0.040641667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001003610000000002, 'source_diff': 0.0001003610000000002}, {'time': 0.040751931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:12.774" endtime="20201110 08:39:12.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:12.812" level="INFO">${ACCURACY} = {'source_diff': [0.0001003610000000002, 0.00010119499999999837, 0.00010112500000000052, 0.00010109700000000138, 0.00010000000000000286, 0.00010020799999999747, 9.951300000000246e-05, 9.977799999999482...</msg>
<status status="PASS" starttime="20201110 08:39:12.785" endtime="20201110 08:39:12.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.825" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:39:12.822" endtime="20201110 08:39:12.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.830" level="INFO">VALUE: [0.0001003610000000002, 0.00010119499999999837, 0.00010112500000000052, 0.00010109700000000138, 0.00010000000000000286, 0.00010020799999999747, 9.951300000000246e-05, 9.977799999999482e-05, 0.00010020799999999747, 0.00010037499999999977, 0.0001000410000000021, 0.00010013899999999909, 0.0001005410000000026, 0.00010079200000000232, 0.00010100000000000386, 0.00010011099999999995, 9.940299999999791e-05, 0.00010041699999999848, 9.944400000000408e-05, 0.00010083300000000156, 9.929099999999441e-05, 0.00010059700000000088, 0.00010044499999999762, 9.944500000000356e-05, 0.00010052799999999557, 9.963899999999859e-05, 9.940299999999791e-05, 9.961099999999945e-05, 9.937499999999877e-05, 9.979200000000132e-05, 9.959699999999988e-05, 9.93060000000004e-05, 0.00010111100000000095, 0.00010059700000000088, 9.98609999999997e-05, 9.945800000000365e-05, 0.00010065199999999969, 9.937500000000571e-05, 9.984700000000013e-05, 9.976399999999525e-05, 0.00010107000000000171, 9.923600000000254e-05, 9.948599999999586e-05, 0.00010063899999999959, 9.994499999999712e-05, 0.00010073699999999658, 0.00010023600000000354, 9.927799999999432e-05, 9.962500000000596e-05, 0.00010091699999999898]</msg>
<status status="PASS" starttime="20201110 08:39:12.827" endtime="20201110 08:39:12.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.814" endtime="20201110 08:39:12.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.840" endtime="20201110 08:39:12.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:12.848" endtime="20201110 08:39:12.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.843" endtime="20201110 08:39:12.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.835" endtime="20201110 08:39:12.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.311" endtime="20201110 08:39:12.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.310" endtime="20201110 08:39:12.874"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.896" endtime="20201110 08:39:12.916"></status>
</kw>
<msg timestamp="20201110 08:39:12.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.893" endtime="20201110 08:39:12.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.923" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.919" endtime="20201110 08:39:12.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.925" endtime="20201110 08:39:12.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.886" endtime="20201110 08:39:12.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.880" endtime="20201110 08:39:12.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.948" endtime="20201110 08:39:13.283"></status>
</kw>
<msg timestamp="20201110 08:39:13.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040752972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.945" endtime="20201110 08:39:13.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040651847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040752972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.292" endtime="20201110 08:39:13.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.310" endtime="20201110 08:39:13.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.938" endtime="20201110 08:39:13.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.933" endtime="20201110 08:39:13.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.328" level="INFO">${RESULT} = [{'time': 0.040752972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010112500000000052, 'source_diff': 0.00010112500000000052}, {'time': 0.040862292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:13.320" endtime="20201110 08:39:13.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:13.358" level="INFO">${ACCURACY} = {'source_diff': [0.00010112500000000052, 0.00010063899999999959, 0.00010142999999999958, 0.0001004860000000038, 0.00010102799999999607, 0.0001013060000000024, 0.0001005689999999948, 0.0001006949999999...</msg>
<status status="PASS" starttime="20201110 08:39:13.330" endtime="20201110 08:39:13.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.368" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:39:13.366" endtime="20201110 08:39:13.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.374" level="INFO">VALUE: [0.00010112500000000052, 0.00010063899999999959, 0.00010142999999999958, 0.0001004860000000038, 0.00010102799999999607, 0.0001013060000000024, 0.0001005689999999948, 0.00010069499999999787, 0.00010083400000000103, 0.00010037499999999977, 0.00010198699999999783, 0.00010220799999999947, 0.00010181899999999605, 0.00010032000000000096, 0.00010141699999999948, 0.00010115299999999966, 0.00010207000000000271, 0.00010133299999999512, 0.00010030500000000192, 0.00010063899999999959, 0.00010161100000000145, 0.00010099999999999693, 0.000101416, 0.00010147199999999829, 0.0001013060000000024, 0.00010049999999999643, 0.00010058299999999437, 0.00010131900000000249, 0.00010140299999999991, 0.0001022359999999986, 0.00010116699999999923, 0.00010148599999999786, 0.00010172199999999854, 0.00010126400000000368, 0.00010163900000000059, 0.00010155600000000264, 0.00010040299999999891, 0.0001017359999999981, 0.00010180499999999648, 0.0001011939999999989, 0.00010208299999999587, 0.00010174999999999768, 0.0001008610000000007, 0.0001003610000000002, 0.00010015199999999919, 0.00010195799999999922, 0.0001018889999999939, 0.00010194399999999965, 0.00010184700000000213, 0.00010045900000000413]</msg>
<status status="PASS" starttime="20201110 08:39:13.371" endtime="20201110 08:39:13.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.359" endtime="20201110 08:39:13.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.383" endtime="20201110 08:39:13.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:13.391" endtime="20201110 08:39:13.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.387" endtime="20201110 08:39:13.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.378" endtime="20201110 08:39:13.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.876" endtime="20201110 08:39:13.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.875" endtime="20201110 08:39:13.417"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.440" endtime="20201110 08:39:13.461"></status>
</kw>
<msg timestamp="20201110 08:39:13.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.437" endtime="20201110 08:39:13.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.464" endtime="20201110 08:39:13.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.470" endtime="20201110 08:39:13.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.429" endtime="20201110 08:39:13.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.424" endtime="20201110 08:39:13.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.493" endtime="20201110 08:39:13.832"></status>
</kw>
<msg timestamp="20201110 08:39:13.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040741042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.490" endtime="20201110 08:39:13.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040638278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040741042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.841" endtime="20201110 08:39:13.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.858" endtime="20201110 08:39:13.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.483" endtime="20201110 08:39:13.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.478" endtime="20201110 08:39:13.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.879" level="INFO">${RESULT} = [{'time': 0.040741042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010276399999999825, 'source_diff': 0.00010276399999999825}, {'time': 0.040849306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:13.871" endtime="20201110 08:39:13.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:13.908" level="INFO">${ACCURACY} = {'source_diff': [0.00010276399999999825, 0.00010172300000000495, 0.00010226399999999775, 0.00010279199999999739, 0.00010240200000000144, 0.00010151400000000393, 0.0001018060000000029, 0.00010227699999...</msg>
<status status="PASS" starttime="20201110 08:39:13.881" endtime="20201110 08:39:13.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.919" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:39:13.917" endtime="20201110 08:39:13.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.924" level="INFO">VALUE: [0.00010276399999999825, 0.00010172300000000495, 0.00010226399999999775, 0.00010279199999999739, 0.00010240200000000144, 0.00010151400000000393, 0.0001018060000000029, 0.00010227699999999784, 0.00010308299999999687, 0.00010115299999999966, 0.0001028610000000027, 0.00010243000000000058, 0.00010270799999999997, 0.0001022359999999986, 0.00010206999999999578, 0.00010195799999999922, 0.00010238900000000134, 0.00010276299999999877, 0.00010225000000000511, 0.00010291700000000098, 0.00010126399999999675, 0.00010307000000000371, 0.00010113900000000009, 0.00010287500000000227, 0.00010125000000000411, 0.00010255499999999723, 0.00010184700000000213, 0.00010311100000000295, 0.0001029160000000015, 0.00010311200000000242, 0.00010232000000000296, 0.00010166699999999973, 0.00010205600000000314, 0.0001028060000000039, 0.00010245799999999972, 0.00010256900000000374, 0.00010265300000000116, 0.00010166600000000026, 0.00010277800000000475, 0.00010170900000000538, 0.00010286099999999576, 0.00010172199999999854, 0.00010197199999999879, 0.00010162500000000102, 0.0001027359999999991, 0.00010277799999999782, 0.00010216700000000023, 0.00010270799999999997, 0.00010288799999999543, 0.00010163900000000059]</msg>
<status status="PASS" starttime="20201110 08:39:13.921" endtime="20201110 08:39:13.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.910" endtime="20201110 08:39:13.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.934" endtime="20201110 08:39:13.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:13.942" endtime="20201110 08:39:13.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.938" endtime="20201110 08:39:13.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.929" endtime="20201110 08:39:13.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.419" endtime="20201110 08:39:13.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.418" endtime="20201110 08:39:13.968"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.990" endtime="20201110 08:39:14.012"></status>
</kw>
<msg timestamp="20201110 08:39:14.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.987" endtime="20201110 08:39:14.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.015" endtime="20201110 08:39:14.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.021" endtime="20201110 08:39:14.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.980" endtime="20201110 08:39:14.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.974" endtime="20201110 08:39:14.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.044" endtime="20201110 08:39:14.387"></status>
</kw>
<msg timestamp="20201110 08:39:14.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040163153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040266944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.041" endtime="20201110 08:39:14.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040163153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040266944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.396" endtime="20201110 08:39:14.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.414" endtime="20201110 08:39:14.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.034" endtime="20201110 08:39:14.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.029" endtime="20201110 08:39:14.422"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:14.433" level="INFO">${RESULT} = [{'time': 0.040266944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010379099999999891, 'source_diff': 0.00010379099999999891}, {'time': 0.040375139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:14.424" endtime="20201110 08:39:14.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:14.462" level="INFO">${ACCURACY} = {'source_diff': [0.00010379099999999891, 0.00010374999999999968, 0.00010358299999999737, 0.0001021809999999998, 0.00010326399999999875, 0.00010231899999999655, 0.00010249999999999843, 0.00010218099999...</msg>
<status status="PASS" starttime="20201110 08:39:14.435" endtime="20201110 08:39:14.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.473" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:39:14.471" endtime="20201110 08:39:14.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.478" level="INFO">VALUE: [0.00010379099999999891, 0.00010374999999999968, 0.00010358299999999737, 0.0001021809999999998, 0.00010326399999999875, 0.00010231899999999655, 0.00010249999999999843, 0.0001021809999999998, 0.00010255600000000364, 0.00010361099999999651, 0.00010293100000000055, 0.00010281999999999653, 0.00010255600000000364, 0.00010238900000000134, 0.00010324999999999918, 0.00010234700000000263, 0.0001026810000000003, 0.00010379199999999839, 0.00010363899999999565, 0.00010284699999999619, 0.00010398600000000036, 0.00010331899999999755, 0.00010231900000000349, 0.0001038480000000036, 0.00010397200000000079, 0.00010286099999999576, 0.0001025689999999968, 0.00010248700000000527, 0.00010340300000000191, 0.00010365300000000216, 0.0001037360000000001, 0.00010279199999999739, 0.00010341700000000148, 0.00010266700000000073, 0.00010358299999999737, 0.0001021939999999999, 0.0001023610000000022, 0.00010288900000000184, 0.00010222200000000597, 0.00010252799999999757, 0.00010315300000000166, 0.00010344500000000062, 0.00010337500000000277, 0.00010290299999999447, 0.0001034019999999955, 0.00010341700000000148, 0.00010234699999999569, 0.0001035689999999978, 0.00010324999999999918, 0.00010376399999999925]</msg>
<status status="PASS" starttime="20201110 08:39:14.475" endtime="20201110 08:39:14.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.464" endtime="20201110 08:39:14.481"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.488" endtime="20201110 08:39:14.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:14.496" endtime="20201110 08:39:14.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.491" endtime="20201110 08:39:14.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.483" endtime="20201110 08:39:14.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.970" endtime="20201110 08:39:14.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.969" endtime="20201110 08:39:14.522"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.544" endtime="20201110 08:39:14.565"></status>
</kw>
<msg timestamp="20201110 08:39:14.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.541" endtime="20201110 08:39:14.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.572" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.568" endtime="20201110 08:39:14.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.574" endtime="20201110 08:39:14.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.534" endtime="20201110 08:39:14.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.528" endtime="20201110 08:39:14.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.598" endtime="20201110 08:39:14.942"></status>
</kw>
<msg timestamp="20201110 08:39:14.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040147139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040251319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.595" endtime="20201110 08:39:14.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040147139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040251319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.952" endtime="20201110 08:39:14.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.970" endtime="20201110 08:39:14.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.588" endtime="20201110 08:39:14.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.583" endtime="20201110 08:39:14.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:14.988" level="INFO">${RESULT} = [{'time': 0.040251319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010418000000000233, 'source_diff': 0.00010418000000000233}, {'time': 0.040361569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:14.980" endtime="20201110 08:39:14.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:15.018" level="INFO">${ACCURACY} = {'source_diff': [0.00010418000000000233, 0.00010433299999999812, 0.000103901999999996, 0.00010498600000000136, 0.00010459799999999742, 0.00010494399999999571, 0.00010357000000000421, 0.000104693999999...</msg>
<status status="PASS" starttime="20201110 08:39:14.990" endtime="20201110 08:39:15.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.029" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:39:15.027" endtime="20201110 08:39:15.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.034" level="INFO">VALUE: [0.00010418000000000233, 0.00010433299999999812, 0.000103901999999996, 0.00010498600000000136, 0.00010459799999999742, 0.00010494399999999571, 0.00010357000000000421, 0.00010469399999999546, 0.00010391599999999557, 0.00010326399999999875, 0.00010497200000000179, 0.00010465299999999622, 0.00010338900000000234, 0.00010394399999999471, 0.00010374999999999968, 0.00010370800000000097, 0.00010386200000000317, 0.00010455499999999923, 0.00010459800000000435, 0.0001036940000000014, 0.0001050140000000005, 0.00010445800000000172, 0.00010479199999999939, 0.00010395800000000122, 0.00010336200000000267, 0.00010417999999999539, 0.00010337499999999583, 0.00010392999999999514, 0.00010374999999999968, 0.00010436099999999726, 0.00010387499999999633, 0.00010415300000000266, 0.00010357000000000421, 0.00010315200000000219, 0.00010480499999999948, 0.00010462500000000402, 0.00010341599999999507, 0.00010397200000000079, 0.00010440200000000344, 0.00010497300000000126, 0.00010482000000000546, 0.0001043060000000054, 0.0001031940000000009, 0.00010447200000000129, 0.00010494500000000212, 0.00010352799999999857, 0.00010479199999999939, 0.00010448600000000086, 0.00010316600000000176, 0.00010397200000000079]</msg>
<status status="PASS" starttime="20201110 08:39:15.031" endtime="20201110 08:39:15.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.020" endtime="20201110 08:39:15.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.043" endtime="20201110 08:39:15.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:15.052" endtime="20201110 08:39:15.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.047" endtime="20201110 08:39:15.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.039" endtime="20201110 08:39:15.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.524" endtime="20201110 08:39:15.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.523" endtime="20201110 08:39:15.078"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.100" endtime="20201110 08:39:15.121"></status>
</kw>
<msg timestamp="20201110 08:39:15.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.097" endtime="20201110 08:39:15.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.124" endtime="20201110 08:39:15.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.130" endtime="20201110 08:39:15.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.090" endtime="20201110 08:39:15.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.084" endtime="20201110 08:39:15.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.153" endtime="20201110 08:39:15.499"></status>
</kw>
<msg timestamp="20201110 08:39:15.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04030025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:15.150" endtime="20201110 08:39:15.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040194431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04030025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:15.508" endtime="20201110 08:39:15.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.526" endtime="20201110 08:39:15.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.143" endtime="20201110 08:39:15.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.138" endtime="20201110 08:39:15.535"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:15.545" level="INFO">${RESULT} = [{'time': 0.04030025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010581900000000005, 'source_diff': 0.00010581900000000005}, {'time': 0.040411528, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:39:15.536" endtime="20201110 08:39:15.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:15.574" level="INFO">${ACCURACY} = {'source_diff': [0.00010581900000000005, 0.00010587500000000527, 0.00010565299999999722, 0.00010475000000000068, 0.00010565299999999722, 0.00010494400000000265, 0.00010422200000000104, 0.0001051249999...</msg>
<status status="PASS" starttime="20201110 08:39:15.547" endtime="20201110 08:39:15.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.585" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:39:15.583" endtime="20201110 08:39:15.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.590" level="INFO">VALUE: [0.00010581900000000005, 0.00010587500000000527, 0.00010565299999999722, 0.00010475000000000068, 0.00010565299999999722, 0.00010494400000000265, 0.00010422200000000104, 0.00010512499999999758, 0.00010462499999999708, 0.00010600000000000193, 0.0001047360000000011, 0.00010475000000000068, 0.00010487500000000427, 0.0001051810000000028, 0.0001050559999999992, 0.00010427799999999932, 0.00010559699999999894, 0.00010533299999999912, 0.00010487499999999733, 0.00010513900000000409, 0.00010599999999999499, 0.00010566599999999732, 0.0001058610000000057, 0.00010612499999999858, 0.00010576400000000125, 0.00010459699999999794, 0.00010530599999999946, 0.00010420800000000147, 0.00010494399999999571, 0.00010476400000000025, 0.0001045689999999988, 0.00010475000000000068, 0.00010420800000000147, 0.0001048889999999969, 0.00010462499999999708, 0.00010488900000000384, 0.00010490300000000341, 0.0001043889999999964, 0.00010519500000000237, 0.00010443100000000205, 0.00010429199999999889, 0.00010534699999999869, 0.00010454099999999966, 0.00010425000000000018, 0.00010469500000000187, 0.00010504199999999964, 0.00010513899999999715, 0.0001050140000000005, 0.00010461100000000445, 0.00010469499999999493]</msg>
<status status="PASS" starttime="20201110 08:39:15.587" endtime="20201110 08:39:15.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.576" endtime="20201110 08:39:15.593"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.599" endtime="20201110 08:39:15.602"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:15.608" endtime="20201110 08:39:15.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.603" endtime="20201110 08:39:15.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.595" endtime="20201110 08:39:15.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.080" endtime="20201110 08:39:15.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.078" endtime="20201110 08:39:15.634"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.657" endtime="20201110 08:39:15.679"></status>
</kw>
<msg timestamp="20201110 08:39:15.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.654" endtime="20201110 08:39:15.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.683" endtime="20201110 08:39:15.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.690" endtime="20201110 08:39:15.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.647" endtime="20201110 08:39:15.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.641" endtime="20201110 08:39:15.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.714" endtime="20201110 08:39:16.061"></status>
</kw>
<msg timestamp="20201110 08:39:16.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041788264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041894194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.710" endtime="20201110 08:39:16.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041788264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041894194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.070" endtime="20201110 08:39:16.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.089" endtime="20201110 08:39:16.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.703" endtime="20201110 08:39:16.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.698" endtime="20201110 08:39:16.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.110" level="INFO">${RESULT} = [{'time': 0.041894194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010593000000000408, 'source_diff': 0.00010593000000000408}, {'time': 0.042010347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:16.101" endtime="20201110 08:39:16.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:16.139" level="INFO">${ACCURACY} = {'source_diff': [0.00010593000000000408, 0.00010584700000000613, 0.00010632000000000003, 0.00010575000000000168, 0.00010611099999999901, 0.00010661199999999899, 0.0001053889999999974, 0.00010533299999...</msg>
<status status="PASS" starttime="20201110 08:39:16.112" endtime="20201110 08:39:16.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.150" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:39:16.147" endtime="20201110 08:39:16.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.155" level="INFO">VALUE: [0.00010593000000000408, 0.00010584700000000613, 0.00010632000000000003, 0.00010575000000000168, 0.00010611099999999901, 0.00010661199999999899, 0.0001053889999999974, 0.00010533299999999912, 0.0001052360000000016, 0.00010675000000000268, 0.0001055689999999998, 0.0001051810000000028, 0.00010561099999999851, 0.00010549999999999449, 0.00010629199999999395, 0.00010620799999999653, 0.00010569500000000287, 0.00010679200000000139, 0.00010651399999999506, 0.00010636099999999926, 0.00010632000000000003, 0.00010636099999999926, 0.00010591700000000398, 0.00010525000000000118, 0.00010650000000000243, 0.00010556999999999928, 0.00010537499999999783, 0.00010516600000000376, 0.00010563899999999765, 0.00010651399999999506, 0.00010533299999999912, 0.00010666699999999779, 0.00010645800000000372, 0.00010641700000000448, 0.00010615199999999825, 0.0001053889999999974, 0.00010618099999999686, 0.00010562499999999808, 0.00010587499999999833, 0.00010615199999999825, 0.00010558299999999937, 0.00010680500000000148, 0.00010569500000000287, 0.00010536199999999774, 0.00010615199999999825, 0.00010612499999999858, 0.00010698600000000336, 0.00010647199999999635, 0.00010526400000000075, 0.00010613899999999815]</msg>
<status status="PASS" starttime="20201110 08:39:16.152" endtime="20201110 08:39:16.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.141" endtime="20201110 08:39:16.159"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.165" endtime="20201110 08:39:16.168"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:16.173" endtime="20201110 08:39:16.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.169" endtime="20201110 08:39:16.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.160" endtime="20201110 08:39:16.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.636" endtime="20201110 08:39:16.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.635" endtime="20201110 08:39:16.199"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.222" endtime="20201110 08:39:16.241"></status>
</kw>
<msg timestamp="20201110 08:39:16.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.218" endtime="20201110 08:39:16.242"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.244" endtime="20201110 08:39:16.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.250" endtime="20201110 08:39:16.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.211" endtime="20201110 08:39:16.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.205" endtime="20201110 08:39:16.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.273" endtime="20201110 08:39:16.603"></status>
</kw>
<msg timestamp="20201110 08:39:16.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040443806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040550056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.270" endtime="20201110 08:39:16.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040443806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040550056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.612" endtime="20201110 08:39:16.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.630" endtime="20201110 08:39:16.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.263" endtime="20201110 08:39:16.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.258" endtime="20201110 08:39:16.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.655" level="INFO">${RESULT} = [{'time': 0.040550056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010625000000000218, 'source_diff': 0.00010625000000000218}, {'time': 0.04066325, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:39:16.640" endtime="20201110 08:39:16.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:16.685" level="INFO">${ACCURACY} = {'source_diff': [0.00010625000000000218, 0.00010709700000000044, 0.00010720799999999753, 0.00010636099999999926, 0.00010730600000000146, 0.00010765299999999922, 0.00010715299999999872, 0.0001066949999...</msg>
<status status="PASS" starttime="20201110 08:39:16.657" endtime="20201110 08:39:16.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.696" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:39:16.694" endtime="20201110 08:39:16.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.701" level="INFO">VALUE: [0.00010625000000000218, 0.00010709700000000044, 0.00010720799999999753, 0.00010636099999999926, 0.00010730600000000146, 0.00010765299999999922, 0.00010715299999999872, 0.00010669499999999693, 0.00010662499999999908, 0.00010711100000000001, 0.00010791599999999957, 0.00010744500000000462, 0.00010801399999999656, 0.00010704200000000164, 0.00010648599999999592, 0.00010715299999999872, 0.00010805599999999527, 0.00010726299999999633, 0.00010808299999999493, 0.0001062360000000026, 0.00010659699999999994, 0.00010652800000000157, 0.00010690300000000541, 0.00010654200000000114, 0.0001078340000000011, 0.00010673599999999617, 0.00010731900000000155, 0.00010777800000000282, 0.00010719399999999796, 0.00010645799999999678, 0.00010793099999999861, 0.00010799999999999699, 0.00010754100000000266, 0.00010797200000000479, 0.00010658300000000037, 0.00010672300000000301, 0.000107514000000003, 0.00010780499999999554, 0.0001073889999999994, 0.00010665299999999822, 0.00010626399999999481, 0.0001070969999999935, 0.00010640300000000491, 0.00010620800000000347, 0.00010759700000000094, 0.0001068889999999989, 0.00010642999999999764, 0.00010766599999999932, 0.00010809700000000144, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201110 08:39:16.698" endtime="20201110 08:39:16.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.687" endtime="20201110 08:39:16.705"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.711" endtime="20201110 08:39:16.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:16.719" endtime="20201110 08:39:16.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.715" endtime="20201110 08:39:16.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.706" endtime="20201110 08:39:16.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.201" endtime="20201110 08:39:16.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.200" endtime="20201110 08:39:16.745"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.768" endtime="20201110 08:39:16.788"></status>
</kw>
<msg timestamp="20201110 08:39:16.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.765" endtime="20201110 08:39:16.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.795" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.791" endtime="20201110 08:39:16.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.797" endtime="20201110 08:39:16.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.758" endtime="20201110 08:39:16.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.752" endtime="20201110 08:39:16.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.822" endtime="20201110 08:39:17.158"></status>
</kw>
<msg timestamp="20201110 08:39:17.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.818" endtime="20201110 08:39:17.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040823222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040931639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.167" endtime="20201110 08:39:17.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.185" endtime="20201110 08:39:17.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.810" endtime="20201110 08:39:17.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.806" endtime="20201110 08:39:17.194"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:17.204" level="INFO">${RESULT} = [{'time': 0.040931639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010841699999999954, 'source_diff': 0.00010841699999999954}, {'time': 0.041043792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:17.195" endtime="20201110 08:39:17.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:17.233" level="INFO">${ACCURACY} = {'source_diff': [0.00010841699999999954, 0.00010775000000000368, 0.0001083890000000004, 0.00010812500000000058, 0.00010887500000000133, 0.00010737499999999983, 0.000108514000000004, 0.0001085139999999...</msg>
<status status="PASS" starttime="20201110 08:39:17.206" endtime="20201110 08:39:17.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.244" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:39:17.242" endtime="20201110 08:39:17.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.249" level="INFO">VALUE: [0.00010841699999999954, 0.00010775000000000368, 0.0001083890000000004, 0.00010812500000000058, 0.00010887500000000133, 0.00010737499999999983, 0.000108514000000004, 0.00010851399999999706, 0.00010884700000000219, 0.00010725000000000318, 0.00010773599999999717, 0.00010902700000000459, 0.00010904100000000416, 0.00010791699999999904, 0.00010744500000000462, 0.00010729200000000189, 0.00010908400000000235, 0.00010776399999999631, 0.00010868099999999936, 0.00010886100000000176, 0.00010758300000000137, 0.00010722300000000351, 0.00010829200000000289, 0.00010745799999999778, 0.00010884700000000219, 0.00010902700000000459, 0.00010777799999999588, 0.00010730600000000146, 0.00010912499999999464, 0.00010745800000000472, 0.00010852700000000409, 0.00010893000000000014, 0.00010848600000000486, 0.00010779200000000239, 0.00010745800000000472, 0.00010905500000000373, 0.00010724999999999624, 0.00010745800000000472, 0.0001073889999999994, 0.0001075690000000018, 0.00010898599999999842, 0.00010827800000000332, 0.00010870799999999903, 0.00010812499999999364, 0.00010842999999999964, 0.00010819499999999843, 0.00010902799999999713, 0.00010776400000000325, 0.0001076810000000053, 0.00010865199999999381]</msg>
<status status="PASS" starttime="20201110 08:39:17.246" endtime="20201110 08:39:17.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.235" endtime="20201110 08:39:17.253"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.259" endtime="20201110 08:39:17.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:17.267" endtime="20201110 08:39:17.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.263" endtime="20201110 08:39:17.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.254" endtime="20201110 08:39:17.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.748" endtime="20201110 08:39:17.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.746" endtime="20201110 08:39:17.293"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.315" endtime="20201110 08:39:17.335"></status>
</kw>
<msg timestamp="20201110 08:39:17.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.312" endtime="20201110 08:39:17.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.338" endtime="20201110 08:39:17.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.344" endtime="20201110 08:39:17.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.305" endtime="20201110 08:39:17.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.299" endtime="20201110 08:39:17.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.368" endtime="20201110 08:39:17.698"></status>
</kw>
<msg timestamp="20201110 08:39:17.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040348986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.364" endtime="20201110 08:39:17.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040239056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040348986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.708" endtime="20201110 08:39:17.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.726" endtime="20201110 08:39:17.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.357" endtime="20201110 08:39:17.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.352" endtime="20201110 08:39:17.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:17.744" level="INFO">${RESULT} = [{'time': 0.040348986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010993000000000114, 'source_diff': 0.00010993000000000114}, {'time': 0.040468264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:17.736" endtime="20201110 08:39:17.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:17.774" level="INFO">${ACCURACY} = {'source_diff': [0.00010993000000000114, 0.0001092219999999991, 0.00010924999999999824, 0.00010911100000000201, 0.00010983300000000362, 0.00010966700000000079, 0.00010922200000000604, 0.00010879100000...</msg>
<status status="PASS" starttime="20201110 08:39:17.746" endtime="20201110 08:39:17.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.785" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:39:17.782" endtime="20201110 08:39:17.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.790" level="INFO">VALUE: [0.00010993000000000114, 0.0001092219999999991, 0.00010924999999999824, 0.00010911100000000201, 0.00010983300000000362, 0.00010966700000000079, 0.00010922200000000604, 0.00010879100000000391, 0.0001100560000000042, 0.00010849999999999749, 0.00010845799999999878, 0.000110209, 0.00010883399999999516, 0.00010945799999999978, 0.00010912499999999464, 0.00011004100000000516, 0.00010968000000000089, 0.00010927799999999738, 0.00010986099999999582, 0.0001093890000000014, 0.00010877799999999688, 0.00010955599999999677, 0.00010937499999999489, 0.00010909700000000244, 0.00010832000000000203, 0.00010883300000000262, 0.00010920800000000647, 0.00010924999999999824, 0.00010883299999999568, 0.00010886100000000176, 0.00010988899999999496, 0.00010863900000000065, 0.00010902800000000407, 0.00010863899999999371, 0.00010893000000000014, 0.00010918099999999986, 0.00011004200000000464, 0.00010863900000000065, 0.000108596999999995, 0.00010909700000000244, 0.00010997199999999985, 0.00010887499999999439, 0.00010897199999999885, 0.00010858299999999543, 0.00010842999999999964, 0.00011012500000000258, 0.00010936100000000226, 0.00010998599999999942, 0.00010984699999999625, 0.00010984700000000319]</msg>
<status status="PASS" starttime="20201110 08:39:17.787" endtime="20201110 08:39:17.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.776" endtime="20201110 08:39:17.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.804" endtime="20201110 08:39:17.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:17.812" endtime="20201110 08:39:17.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.808" endtime="20201110 08:39:17.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.799" endtime="20201110 08:39:17.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.295" endtime="20201110 08:39:17.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.294" endtime="20201110 08:39:17.838"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.860" endtime="20201110 08:39:17.880"></status>
</kw>
<msg timestamp="20201110 08:39:17.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.857" endtime="20201110 08:39:17.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.883" endtime="20201110 08:39:17.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.889" endtime="20201110 08:39:17.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.850" endtime="20201110 08:39:17.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.844" endtime="20201110 08:39:17.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.912" endtime="20201110 08:39:18.241"></status>
</kw>
<msg timestamp="20201110 08:39:18.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040150486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040259792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.909" endtime="20201110 08:39:18.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040150486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040259792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.250" endtime="20201110 08:39:18.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.268" endtime="20201110 08:39:18.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.902" endtime="20201110 08:39:18.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.897" endtime="20201110 08:39:18.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:18.289" level="INFO">${RESULT} = [{'time': 0.040259792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010930600000000346, 'source_diff': 0.00010930600000000346}, {'time': 0.040380042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:18.280" endtime="20201110 08:39:18.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:18.318" level="INFO">${ACCURACY} = {'source_diff': [0.00010930600000000346, 0.00010981999999999659, 0.0001098890000000019, 0.00010944400000000021, 0.00010941700000000054, 0.00010947300000000576, 0.00010952799999999763, 0.00010997299999...</msg>
<status status="PASS" starttime="20201110 08:39:18.291" endtime="20201110 08:39:18.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.329" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:39:18.327" endtime="20201110 08:39:18.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.335" level="INFO">VALUE: [0.00010930600000000346, 0.00010981999999999659, 0.0001098890000000019, 0.00010944400000000021, 0.00010941700000000054, 0.00010947300000000576, 0.00010952799999999763, 0.00010997299999999932, 0.0001110419999999987, 0.00011076399999999931, 0.00010930499999999704, 0.0001102220000000001, 0.0001107090000000005, 0.00010924999999999824, 0.00011048599999999992, 0.00011029199999999795, 0.00011007000000000378, 0.00011065299999999528, 0.00010997299999999932, 0.00010994500000000018, 0.00010924999999999824, 0.00010991700000000104, 0.00010962500000000208, 0.00010945899999999925, 0.00011059799999999648, 0.00011015300000000172, 0.00011001399999999856, 0.00011080599999999802, 0.00011058300000000437, 0.00010952799999999763, 0.00011088899999999596, 0.0001103890000000024, 0.00010961100000000251, 0.00010993100000000061, 0.00010936099999999532, 0.00011093100000000161, 0.00011019400000000096, 0.00011029199999999795, 0.00011056899999999786, 0.00011055500000000523, 0.00011061099999999657, 0.0001105419999999982, 0.00011008299999999693, 0.00010951399999999806, 0.00010930600000000346, 0.00011093099999999467, 0.0001105549999999983, 0.00010965299999999428, 0.00010980599999999702, 0.00011041600000000207]</msg>
<status status="PASS" starttime="20201110 08:39:18.332" endtime="20201110 08:39:18.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.320" endtime="20201110 08:39:18.338"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.344" endtime="20201110 08:39:18.347"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:18.352" endtime="20201110 08:39:18.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.348" endtime="20201110 08:39:18.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.340" endtime="20201110 08:39:18.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.840" endtime="20201110 08:39:18.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.839" endtime="20201110 08:39:18.378"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.400" endtime="20201110 08:39:18.420"></status>
</kw>
<msg timestamp="20201110 08:39:18.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.397" endtime="20201110 08:39:18.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.423" endtime="20201110 08:39:18.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.429" endtime="20201110 08:39:18.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.390" endtime="20201110 08:39:18.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.384" endtime="20201110 08:39:18.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.453" endtime="20201110 08:39:18.786"></status>
</kw>
<msg timestamp="20201110 08:39:18.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040005083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040116861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.449" endtime="20201110 08:39:18.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040005083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040116861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.795" endtime="20201110 08:39:18.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.813" endtime="20201110 08:39:18.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.442" endtime="20201110 08:39:18.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.437" endtime="20201110 08:39:18.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:18.832" level="INFO">${RESULT} = [{'time': 0.040116861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011177799999999988, 'source_diff': 0.00011177799999999988}, {'time': 0.040239069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:18.823" endtime="20201110 08:39:18.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:18.861" level="INFO">${ACCURACY} = {'source_diff': [0.00011177799999999988, 0.000111902000000004, 0.00011173600000000117, 0.00011082000000000453, 0.00011123700000000014, 0.00011130599999999852, 0.0001114169999999956, 0.0001103200000000...</msg>
<status status="PASS" starttime="20201110 08:39:18.834" endtime="20201110 08:39:18.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.872" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:39:18.870" endtime="20201110 08:39:18.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.877" level="INFO">VALUE: [0.00011177799999999988, 0.000111902000000004, 0.00011173600000000117, 0.00011082000000000453, 0.00011123700000000014, 0.00011130599999999852, 0.0001114169999999956, 0.00011032000000000403, 0.00011063900000000265, 0.0001114020000000035, 0.00011034799999999623, 0.00011051399999999906, 0.00011206999999999884, 0.00011112500000000358, 0.00011140199999999656, 0.00011188899999999696, 0.00011065300000000222, 0.00011156899999999886, 0.0001118890000000039, 0.00011123599999999373, 0.00011113900000000315, 0.00011068100000000136, 0.00011155599999999877, 0.00011080499999999854, 0.00011211099999999807, 0.00011208299999999893, 0.00011054100000000566, 0.00011095900000000075, 0.00011154099999999972, 0.00011173599999999423, 0.00011143099999999517, 0.00011094400000000171, 0.00011120799999999459, 0.00011069500000000093, 0.00011079199999999845, 0.000111596999999998, 0.00011051399999999906, 0.00011115299999999578, 0.00011065300000000222, 0.00011158300000000537, 0.00011111100000000401, 0.00011137499999999689, 0.00011190299999999653, 0.00011169400000000246, 0.00011125000000000024, 0.00011168000000000289, 0.00011095800000000128, 0.00011097200000000085, 0.00011165200000000375, 0.00011112499999999664]</msg>
<status status="PASS" starttime="20201110 08:39:18.875" endtime="20201110 08:39:18.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.863" endtime="20201110 08:39:18.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.887" endtime="20201110 08:39:18.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:18.895" endtime="20201110 08:39:18.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.891" endtime="20201110 08:39:18.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.882" endtime="20201110 08:39:18.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.380" endtime="20201110 08:39:18.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.379" endtime="20201110 08:39:18.921"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.943" endtime="20201110 08:39:18.963"></status>
</kw>
<msg timestamp="20201110 08:39:18.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.940" endtime="20201110 08:39:18.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.966" endtime="20201110 08:39:18.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.973" endtime="20201110 08:39:18.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.933" endtime="20201110 08:39:18.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.927" endtime="20201110 08:39:18.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.995" endtime="20201110 08:39:19.328"></status>
</kw>
<msg timestamp="20201110 08:39:19.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040372278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.992" endtime="20201110 08:39:19.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040260597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040372278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.337" endtime="20201110 08:39:19.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.355" endtime="20201110 08:39:19.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.985" endtime="20201110 08:39:19.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.981" endtime="20201110 08:39:19.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.373" level="INFO">${RESULT} = [{'time': 0.040372278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011168099999999542, 'source_diff': 0.00011168099999999542}, {'time': 0.040490556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:19.365" endtime="20201110 08:39:19.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:19.402" level="INFO">${ACCURACY} = {'source_diff': [0.00011168099999999542, 0.00011213899999999721, 0.00011243099999999617, 0.00011198600000000142, 0.0001120969999999985, 0.00011147300000000082, 0.00011279100000000097, 0.00011216699999...</msg>
<status status="PASS" starttime="20201110 08:39:19.375" endtime="20201110 08:39:19.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.413" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:39:19.411" endtime="20201110 08:39:19.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.418" level="INFO">VALUE: [0.00011168099999999542, 0.00011213899999999721, 0.00011243099999999617, 0.00011198600000000142, 0.0001120969999999985, 0.00011147300000000082, 0.00011279100000000097, 0.00011216699999999635, 0.00011145800000000178, 0.00011293100000000361, 0.00011273599999999523, 0.00011166700000000279, 0.00011180499999999954, 0.00011275000000000174, 0.00011181899999999911, 0.00011130499999999904, 0.00011215200000000425, 0.00011258299999999943, 0.00011131999999999809, 0.00011291700000000404, 0.00011166700000000279, 0.00011163900000000365, 0.00011166700000000279, 0.00011255599999999977, 0.00011245899999999531, 0.00011197200000000185, 0.00011197300000000132, 0.0001125420000000002, 0.00011179199999999945, 0.0001118619999999973, 0.00011193100000000261, 0.00011236100000000526, 0.00011212499999999764, 0.00011162500000000408, 0.00011227799999999344, 0.0001124169999999966, 0.0001115419999999992, 0.0001123749999999979, 0.00011151400000000006, 0.00011198600000000142, 0.0001123749999999979, 0.00011176400000000031, 0.00011198599999999448, 0.0001129169999999971, 0.00011301400000000156, 0.00011275000000000174, 0.0001125420000000002, 0.00011148600000000092, 0.00011308399999999941, 0.00011212499999999764]</msg>
<status status="PASS" starttime="20201110 08:39:19.415" endtime="20201110 08:39:19.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.404" endtime="20201110 08:39:19.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.428" endtime="20201110 08:39:19.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:19.436" endtime="20201110 08:39:19.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.432" endtime="20201110 08:39:19.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.424" endtime="20201110 08:39:19.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.923" endtime="20201110 08:39:19.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.922" endtime="20201110 08:39:19.462"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.485" endtime="20201110 08:39:19.504"></status>
</kw>
<msg timestamp="20201110 08:39:19.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:19.481" endtime="20201110 08:39:19.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:19.507" endtime="20201110 08:39:19.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.514" endtime="20201110 08:39:19.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.474" endtime="20201110 08:39:19.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.468" endtime="20201110 08:39:19.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.537" endtime="20201110 08:39:19.889"></status>
</kw>
<msg timestamp="20201110 08:39:19.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040407403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.534" endtime="20201110 08:39:19.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040294944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040407403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.899" endtime="20201110 08:39:19.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.917" endtime="20201110 08:39:19.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.526" endtime="20201110 08:39:19.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.522" endtime="20201110 08:39:19.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.936" level="INFO">${RESULT} = [{'time': 0.040407403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011245900000000225, 'source_diff': 0.00011245900000000225}, {'time': 0.040525653, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:19.928" endtime="20201110 08:39:19.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:19.967" level="INFO">${ACCURACY} = {'source_diff': [0.00011245900000000225, 0.00011384700000000025, 0.00011284799999999873, 0.00011365300000000522, 0.00011380600000000102, 0.00011407000000000084, 0.00011344500000000368, 0.0001126669999...</msg>
<status status="PASS" starttime="20201110 08:39:19.939" endtime="20201110 08:39:19.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.978" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:39:19.976" endtime="20201110 08:39:19.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.983" level="INFO">VALUE: [0.00011245900000000225, 0.00011384700000000025, 0.00011284799999999873, 0.00011365300000000522, 0.00011380600000000102, 0.00011407000000000084, 0.00011344500000000368, 0.00011266699999999685, 0.00011390199999999906, 0.00011416600000000582, 0.00011347200000000335, 0.00011281900000000011, 0.00011240299999999703, 0.00011397199999999691, 0.00011358300000000043, 0.0001140550000000018, 0.00011234699999999875, 0.00011251400000000106, 0.00011400000000000299, 0.00011376400000000231, 0.00011298599999999548, 0.00011261099999999857, 0.00011409799999999998, 0.00011376400000000231, 0.00011345799999999684, 0.00011408399999999347, 0.00011308399999999941, 0.0001140550000000018, 0.0001140970000000005, 0.00011330500000000104, 0.00011413899999999921, 0.0001140970000000005, 0.00011412499999999964, 0.00011252700000000115, 0.00011426400000000281, 0.00011273600000000217, 0.00011375000000000274, 0.00011240299999999703, 0.00011338899999999846, 0.00011279100000000097, 0.00011236099999999832, 0.0001137090000000035, 0.00011280600000000002, 0.0001128749999999984, 0.0001140970000000005, 0.00011290199999999806, 0.0001122770000000009, 0.00011400000000000299, 0.00011361099999999957, 0.00011320799999999659]</msg>
<status status="PASS" starttime="20201110 08:39:19.980" endtime="20201110 08:39:19.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.969" endtime="20201110 08:39:19.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.993" endtime="20201110 08:39:19.996"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:20.002" endtime="20201110 08:39:20.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.997" endtime="20201110 08:39:20.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.988" endtime="20201110 08:39:20.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.464" endtime="20201110 08:39:20.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.463" endtime="20201110 08:39:20.028"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.051" endtime="20201110 08:39:20.073"></status>
</kw>
<msg timestamp="20201110 08:39:20.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.048" endtime="20201110 08:39:20.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.076" endtime="20201110 08:39:20.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.083" endtime="20201110 08:39:20.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.040" endtime="20201110 08:39:20.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.034" endtime="20201110 08:39:20.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.107" endtime="20201110 08:39:20.452"></status>
</kw>
<msg timestamp="20201110 08:39:20.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041472097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.103" endtime="20201110 08:39:20.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041357694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041472097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.461" endtime="20201110 08:39:20.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.479" endtime="20201110 08:39:20.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.096" endtime="20201110 08:39:20.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.091" endtime="20201110 08:39:20.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:20.501" level="INFO">${RESULT} = [{'time': 0.041472097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011440299999999903, 'source_diff': 0.00011440299999999903}, {'time': 0.041592389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:20.492" endtime="20201110 08:39:20.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:20.531" level="INFO">${ACCURACY} = {'source_diff': [0.00011440299999999903, 0.00011384700000000025, 0.00011369500000000393, 0.00011462500000000014, 0.00011512500000000064, 0.0001139299999999982, 0.00011384700000000025, 0.00011405600000...</msg>
<status status="PASS" starttime="20201110 08:39:20.503" endtime="20201110 08:39:20.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.542" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:39:20.540" endtime="20201110 08:39:20.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.547" level="INFO">VALUE: [0.00011440299999999903, 0.00011384700000000025, 0.00011369500000000393, 0.00011462500000000014, 0.00011512500000000064, 0.0001139299999999982, 0.00011384700000000025, 0.00011405600000000127, 0.00011369499999999699, 0.00011426400000000281, 0.00011345900000000325, 0.00011494399999999877, 0.00011465300000000622, 0.0001149169999999991, 0.00011340299999999803, 0.00011344499999999674, 0.00011445800000000478, 0.00011379200000000145, 0.00011386099999999982, 0.00011451299999999665, 0.00011343000000000464, 0.0001145829999999945, 0.00011522199999999816, 0.00011418099999999792, 0.00011419499999999749, 0.0001139299999999982, 0.00011456900000000186, 0.00011336099999999932, 0.00011511099999999413, 0.00011438899999999946, 0.00011509699999999456, 0.00011336099999999932, 0.00011472199999999766, 0.00011362499999999914, 0.00011476399999999637, 0.0001147499999999968, 0.00011522199999999816, 0.00011466599999999938, 0.00011420800000000453, 0.00011351400000000206, 0.00011327799999999444, 0.00011505499999999586, 0.00011333300000000018, 0.00011426399999999587, 0.00011470799999999809, 0.00011423599999999673, 0.0001147220000000046, 0.00011336099999999932, 0.00011512500000000064, 0.0001147499999999968]</msg>
<status status="PASS" starttime="20201110 08:39:20.544" endtime="20201110 08:39:20.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.533" endtime="20201110 08:39:20.551"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.557" endtime="20201110 08:39:20.560"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:20.566" endtime="20201110 08:39:20.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.561" endtime="20201110 08:39:20.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.552" endtime="20201110 08:39:20.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.030" endtime="20201110 08:39:20.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.029" endtime="20201110 08:39:20.592"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.615" endtime="20201110 08:39:20.637"></status>
</kw>
<msg timestamp="20201110 08:39:20.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.611" endtime="20201110 08:39:20.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.640" endtime="20201110 08:39:20.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.647" endtime="20201110 08:39:20.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.604" endtime="20201110 08:39:20.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.598" endtime="20201110 08:39:20.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.670" endtime="20201110 08:39:21.016"></status>
</kw>
<msg timestamp="20201110 08:39:21.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041253347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.667" endtime="20201110 08:39:21.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041138806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041253347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.025" endtime="20201110 08:39:21.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.044" endtime="20201110 08:39:21.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.660" endtime="20201110 08:39:21.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.655" endtime="20201110 08:39:21.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.063" level="INFO">${RESULT} = [{'time': 0.041253347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011454100000000272, 'source_diff': 0.00011454100000000272}, {'time': 0.041378583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:21.054" endtime="20201110 08:39:21.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:21.093" level="INFO">${ACCURACY} = {'source_diff': [0.00011454100000000272, 0.00011555499999999636, 0.00011469399999999852, 0.00011544399999999927, 0.00011502700000000365, 0.00011517999999999945, 0.00011544399999999927, 0.0001155829999...</msg>
<status status="PASS" starttime="20201110 08:39:21.065" endtime="20201110 08:39:21.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.104" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:39:21.102" endtime="20201110 08:39:21.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.110" level="INFO">VALUE: [0.00011454100000000272, 0.00011555499999999636, 0.00011469399999999852, 0.00011544399999999927, 0.00011502700000000365, 0.00011517999999999945, 0.00011544399999999927, 0.0001155829999999955, 0.00011447199999999741, 0.00011576400000000431, 0.00011590300000000053, 0.00011480600000000202, 0.00011504199999999576, 0.00011543099999999917, 0.00011448600000000392, 0.00011590300000000053, 0.00011607000000000284, 0.00011611100000000207, 0.00011444499999999774, 0.00011577799999999694, 0.0001155550000000033, 0.00011590300000000053, 0.00011465299999999928, 0.00011545799999999884, 0.00011454100000000272, 0.0001160550000000038, 0.00011569499999999899, 0.00011468000000000589, 0.00011565300000000028, 0.0001162369999999982, 0.00011515299999999978, 0.00011611200000000155, 0.00011529199999999601, 0.00011438799999999999, 0.00011448600000000392, 0.00011572199999999866, 0.00011455499999999535, 0.00011554099999999679, 0.0001155550000000033, 0.00011518099999999892, 0.00011462500000000014, 0.00011526399999999687, 0.00011448599999999698, 0.00011481900000000211, 0.00011575000000000474, 0.00011573599999999823, 0.00011465299999999928, 0.0001159300000000002, 0.00011452799999999569, 0.00011551399999999712]</msg>
<status status="PASS" starttime="20201110 08:39:21.107" endtime="20201110 08:39:21.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.095" endtime="20201110 08:39:21.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.119" endtime="20201110 08:39:21.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:21.128" endtime="20201110 08:39:21.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.124" endtime="20201110 08:39:21.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.115" endtime="20201110 08:39:21.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.594" endtime="20201110 08:39:21.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.593" endtime="20201110 08:39:21.154"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.177" endtime="20201110 08:39:21.200"></status>
</kw>
<msg timestamp="20201110 08:39:21.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:21.174" endtime="20201110 08:39:21.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:21.203" endtime="20201110 08:39:21.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.210" endtime="20201110 08:39:21.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.167" endtime="20201110 08:39:21.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.161" endtime="20201110 08:39:21.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.234" endtime="20201110 08:39:21.578"></status>
</kw>
<msg timestamp="20201110 08:39:21.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041533097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.230" endtime="20201110 08:39:21.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041533097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041649875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.587" endtime="20201110 08:39:21.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.606" endtime="20201110 08:39:21.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.223" endtime="20201110 08:39:21.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.218" endtime="20201110 08:39:21.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.625" level="INFO">${RESULT} = [{'time': 0.041649875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011677800000000488, 'source_diff': 0.00011677800000000488}, {'time': 0.041774111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:21.616" endtime="20201110 08:39:21.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:21.655" level="INFO">${ACCURACY} = {'source_diff': [0.00011677800000000488, 0.00011548600000000492, 0.00011567999999999995, 0.00011652799999999769, 0.00011579200000000345, 0.00011588900000000096, 0.00011529200000000295, 0.0001167919999...</msg>
<status status="PASS" starttime="20201110 08:39:21.627" endtime="20201110 08:39:21.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.666" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:39:21.664" endtime="20201110 08:39:21.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.672" level="INFO">VALUE: [0.00011677800000000488, 0.00011548600000000492, 0.00011567999999999995, 0.00011652799999999769, 0.00011579200000000345, 0.00011588900000000096, 0.00011529200000000295, 0.00011679199999999751, 0.00011672199999999966, 0.00011551399999999712, 0.00011623600000000567, 0.00011597199999999891, 0.00011569399999999952, 0.00011582000000000259, 0.00011548599999999798, 0.00011669499999999999, 0.00011708300000000393, 0.00011529199999999601, 0.00011569500000000593, 0.00011675000000000574, 0.00011677799999999794, 0.00011723599999999973, 0.00011691599999999469, 0.00011584699999999531, 0.00011563900000000071, 0.00011672199999999966, 0.00011663899999999477, 0.00011583299999999574, 0.00011690199999999512, 0.00011669499999999999, 0.00011652799999999769, 0.00011594499999999924, 0.0001170420000000047, 0.00011586099999999488, 0.0001155550000000033, 0.00011670899999999956, 0.00011693100000000067, 0.00011548700000000439, 0.00011533299999999524, 0.0001164300000000007, 0.00011595799999999934, 0.00011558400000000191, 0.00011638900000000146, 0.0001168750000000024, 0.00011582000000000259, 0.00011705499999999786, 0.00011658400000000291, 0.00011616599999999394, 0.0001167629999999989, 0.00011623599999999873]</msg>
<status status="PASS" starttime="20201110 08:39:21.669" endtime="20201110 08:39:21.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.657" endtime="20201110 08:39:21.675"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.682" endtime="20201110 08:39:21.684"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:21.690" endtime="20201110 08:39:21.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.686" endtime="20201110 08:39:21.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.677" endtime="20201110 08:39:21.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.156" endtime="20201110 08:39:21.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.155" endtime="20201110 08:39:21.718"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.741" endtime="20201110 08:39:21.763"></status>
</kw>
<msg timestamp="20201110 08:39:21.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:21.737" endtime="20201110 08:39:21.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:21.767" endtime="20201110 08:39:21.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.773" endtime="20201110 08:39:21.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.730" endtime="20201110 08:39:21.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.724" endtime="20201110 08:39:21.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.797" endtime="20201110 08:39:22.143"></status>
</kw>
<msg timestamp="20201110 08:39:22.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042706375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042823486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.794" endtime="20201110 08:39:22.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042706375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042823486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.152" endtime="20201110 08:39:22.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.171" endtime="20201110 08:39:22.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.786" endtime="20201110 08:39:22.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.782" endtime="20201110 08:39:22.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:22.190" level="INFO">${RESULT} = [{'time': 0.042823486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011711100000000307, 'source_diff': 0.00011711100000000307}, {'time': 0.042951708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:22.181" endtime="20201110 08:39:22.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:22.223" level="INFO">${ACCURACY} = {'source_diff': [0.00011711100000000307, 0.00011738899999999552, 0.00011699999999999905, 0.00011770800000000109, 0.00011808399999999747, 0.0001176249999999962, 0.0001169300000000012, 0.000118236000000...</msg>
<status status="PASS" starttime="20201110 08:39:22.192" endtime="20201110 08:39:22.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.234" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:39:22.232" endtime="20201110 08:39:22.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.240" level="INFO">VALUE: [0.00011711100000000307, 0.00011738899999999552, 0.00011699999999999905, 0.00011770800000000109, 0.00011808399999999747, 0.0001176249999999962, 0.0001169300000000012, 0.00011823600000000073, 0.00011726399999999887, 0.00011665300000000128, 0.00011663900000000171, 0.00011794399999999483, 0.0001172499999999993, 0.00011755599999999783, 0.0001177499999999998, 0.00011651399999999812, 0.00011794500000000124, 0.00011749999999999955, 0.00011666600000000138, 0.00011761099999999663, 0.00011802799999999919, 0.00011812500000000364, 0.00011650000000000549, 0.00011744400000000127, 0.00011649999999999855, 0.00011719500000000049, 0.00011702700000000565, 0.00011740300000000203, 0.00011706900000000436, 0.00011686100000000282, 0.00011805499999999886, 0.00011793099999999473, 0.0001171249999999957, 0.00011756899999999793, 0.00011729199999999801, 0.0001172499999999993, 0.00011769499999999405, 0.00011663899999999477, 0.0001181249999999967, 0.00011722200000000016, 0.0001179170000000021, 0.0001172499999999993, 0.000118082999999998, 0.00011649999999999855, 0.00011688900000000196, 0.00011790300000000253, 0.00011816700000000235, 0.00011752799999999869, 0.0001171249999999957, 0.00011634699999999581]</msg>
<status status="PASS" starttime="20201110 08:39:22.237" endtime="20201110 08:39:22.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.225" endtime="20201110 08:39:22.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.249" endtime="20201110 08:39:22.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:22.258" endtime="20201110 08:39:22.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.253" endtime="20201110 08:39:22.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.245" endtime="20201110 08:39:22.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.720" endtime="20201110 08:39:22.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.718" endtime="20201110 08:39:22.284"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.307" endtime="20201110 08:39:22.330"></status>
</kw>
<msg timestamp="20201110 08:39:22.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.304" endtime="20201110 08:39:22.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.333" endtime="20201110 08:39:22.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.339" endtime="20201110 08:39:22.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.297" endtime="20201110 08:39:22.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.291" endtime="20201110 08:39:22.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.363" endtime="20201110 08:39:22.709"></status>
</kw>
<msg timestamp="20201110 08:39:22.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041339806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.360" endtime="20201110 08:39:22.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041339806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041458403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.718" endtime="20201110 08:39:22.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.736" endtime="20201110 08:39:22.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.352" endtime="20201110 08:39:22.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.348" endtime="20201110 08:39:22.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:22.757" level="INFO">${RESULT} = [{'time': 0.041458403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011859699999999807, 'source_diff': 0.00011859699999999807}, {'time': 0.041586597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:22.749" endtime="20201110 08:39:22.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:22.788" level="INFO">${ACCURACY} = {'source_diff': [0.00011859699999999807, 0.00011749999999999955, 0.00011837499999999695, 0.00011805600000000527, 0.00011784700000000425, 0.00011733299999999725, 0.00011815299999999584, 0.0001180690000...</msg>
<status status="PASS" starttime="20201110 08:39:22.760" endtime="20201110 08:39:22.788"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.799" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:39:22.796" endtime="20201110 08:39:22.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.804" level="INFO">VALUE: [0.00011859699999999807, 0.00011749999999999955, 0.00011837499999999695, 0.00011805600000000527, 0.00011784700000000425, 0.00011733299999999725, 0.00011815299999999584, 0.00011806900000000536, 0.00011786100000000382, 0.00011876400000000037, 0.0001184300000000027, 0.00011833300000000518, 0.00011770900000000056, 0.00011766699999999491, 0.00011826399999999987, 0.0001186379999999973, 0.00011804100000000622, 0.00011890200000000406, 0.00011747200000000041, 0.00011879100000000004, 0.00011883299999999875, 0.00011822300000000063, 0.00011895900000000181, 0.00011836099999999738, 0.00011926400000000087, 0.00011816699999999541, 0.00011872200000000166, 0.0001184029999999961, 0.00011800000000000005, 0.00011734699999999681, 0.00011743100000000117, 0.00011766700000000185, 0.00011731899999999768, 0.00011898600000000148, 0.00011862500000000414, 0.00011877700000000047, 0.00011752800000000563, 0.00011748599999999998, 0.00011830599999999858, 0.00011748700000000639, 0.00011784699999999732, 0.00011920800000000259, 0.00011755499999999836, 0.0001175420000000052, 0.00011858300000000543, 0.00011897200000000191, 0.00011781999999999765, 0.0001173750000000029, 0.00011749999999999955, 0.0001185829999999985]</msg>
<status status="PASS" starttime="20201110 08:39:22.801" endtime="20201110 08:39:22.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.789" endtime="20201110 08:39:22.812"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.819" endtime="20201110 08:39:22.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:22.827" endtime="20201110 08:39:22.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.823" endtime="20201110 08:39:22.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.814" endtime="20201110 08:39:22.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.286" endtime="20201110 08:39:22.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.285" endtime="20201110 08:39:22.854"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.878" endtime="20201110 08:39:22.901"></status>
</kw>
<msg timestamp="20201110 08:39:22.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.875" endtime="20201110 08:39:22.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.904" endtime="20201110 08:39:22.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.910" endtime="20201110 08:39:22.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.867" endtime="20201110 08:39:22.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.861" endtime="20201110 08:39:22.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.934" endtime="20201110 08:39:23.283"></status>
</kw>
<msg timestamp="20201110 08:39:23.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043004889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.931" endtime="20201110 08:39:23.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043004889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043124389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.292" endtime="20201110 08:39:23.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.311" endtime="20201110 08:39:23.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.923" endtime="20201110 08:39:23.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.919" endtime="20201110 08:39:23.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:23.330" level="INFO">${RESULT} = [{'time': 0.043124389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011950000000000155, 'source_diff': 0.00011950000000000155}, {'time': 0.043251708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:23.321" endtime="20201110 08:39:23.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:23.360" level="INFO">${ACCURACY} = {'source_diff': [0.00011950000000000155, 0.00011854099999999979, 0.00011836099999999738, 0.0001183620000000038, 0.00012004200000000076, 0.00011913899999999727, 0.00011927800000000044, 0.00011954200000...</msg>
<status status="PASS" starttime="20201110 08:39:23.332" endtime="20201110 08:39:23.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.371" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:39:23.369" endtime="20201110 08:39:23.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.377" level="INFO">VALUE: [0.00011950000000000155, 0.00011854099999999979, 0.00011836099999999738, 0.0001183620000000038, 0.00012004200000000076, 0.00011913899999999727, 0.00011927800000000044, 0.00011954200000000026, 0.00011986099999999889, 0.00011913900000000421, 0.00011943100000000317, 0.00011956899999999993, 0.00011898600000000148, 0.00011959699999999907, 0.00011938899999999752, 0.00011890300000000353, 0.0001197500000000018, 0.0001188049999999996, 0.00011995800000000334, 0.00011993100000000367, 0.00011830599999999858, 0.00011900000000000105, 0.00011901400000000062, 0.00011959699999999907, 0.00011847300000000088, 0.00011915300000000378, 0.00011882000000000559, 0.00011897199999999497, 0.00011988899999999802, 0.00011873600000000123, 0.00011924999999999436, 0.00011943099999999623, 0.00011973600000000223, 0.00011977800000000094, 0.00011897200000000191, 0.00011912500000000464, 0.00011955599999999983, 0.00011840200000000356, 0.00011923599999999479, 0.00011904199999999976, 0.00011940300000000403, 0.00011902800000000019, 0.00011881899999999918, 0.00011936099999999839, 0.00011943100000000317, 0.00011832000000000509, 0.000118695000000002, 0.00011872200000000166, 0.00011865299999999634, 0.00011888899999999702]</msg>
<status status="PASS" starttime="20201110 08:39:23.374" endtime="20201110 08:39:23.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.362" endtime="20201110 08:39:23.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.386" endtime="20201110 08:39:23.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.395" endtime="20201110 08:39:23.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.390" endtime="20201110 08:39:23.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.382" endtime="20201110 08:39:23.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.856" endtime="20201110 08:39:23.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.855" endtime="20201110 08:39:23.421"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.444" endtime="20201110 08:39:23.467"></status>
</kw>
<msg timestamp="20201110 08:39:23.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:23.441" endtime="20201110 08:39:23.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:23.471" endtime="20201110 08:39:23.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.477" endtime="20201110 08:39:23.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.434" endtime="20201110 08:39:23.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.428" endtime="20201110 08:39:23.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.501" endtime="20201110 08:39:23.845"></status>
</kw>
<msg timestamp="20201110 08:39:23.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041751931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.497" endtime="20201110 08:39:23.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041631514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041751931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.855" endtime="20201110 08:39:23.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.873" endtime="20201110 08:39:23.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.490" endtime="20201110 08:39:23.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.485" endtime="20201110 08:39:23.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:23.893" level="INFO">${RESULT} = [{'time': 0.041751931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012041699999999766, 'source_diff': 0.00012041699999999766}, {'time': 0.041882264, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:23.884" endtime="20201110 08:39:23.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:23.924" level="INFO">${ACCURACY} = {'source_diff': [0.00012041699999999766, 0.00012086099999999989, 0.00012031900000000068, 0.00011938899999999752, 0.00011952800000000069, 0.0001191950000000025, 0.00012005600000000033, 0.00012020799999...</msg>
<status status="PASS" starttime="20201110 08:39:23.896" endtime="20201110 08:39:23.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.935" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:39:23.933" endtime="20201110 08:39:23.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.941" level="INFO">VALUE: [0.00012041699999999766, 0.00012086099999999989, 0.00012031900000000068, 0.00011938899999999752, 0.00011952800000000069, 0.0001191950000000025, 0.00012005600000000033, 0.00012020799999999665, 0.00011973599999999529, 0.00012109700000000057, 0.00011973600000000223, 0.00012008399999999947, 0.00012080600000000108, 0.00011938900000000446, 0.00012101399999999568, 0.0001205830000000005, 0.00012024999999999536, 0.00012102700000000272, 0.00011958399999999897, 0.00012004200000000076, 0.00012018100000000392, 0.00012032000000000015, 0.00012013899999999827, 0.00012033300000000025, 0.00012002800000000119, 0.00012015200000000531, 0.00012111100000000014, 0.00011956899999999993, 0.0001200699999999999, 0.00012092999999999826, 0.00011937499999999795, 0.0001201249999999987, 0.00011943099999999623, 0.00011937499999999795, 0.00012004200000000076, 0.00011972200000000266, 0.00012099999999999611, 0.00011992999999999726, 0.00011959699999999907, 0.00011984699999999932, 0.00012040300000000503, 0.00012076400000000237, 0.00012092999999999826, 0.00012118099999999798, 0.00011950000000000155, 0.00011948600000000198, 0.00011955500000000036, 0.00012088899999999903, 0.0001207370000000027, 0.00011920800000000259]</msg>
<status status="PASS" starttime="20201110 08:39:23.938" endtime="20201110 08:39:23.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.926" endtime="20201110 08:39:23.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.951" endtime="20201110 08:39:23.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.959" endtime="20201110 08:39:23.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.955" endtime="20201110 08:39:23.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.946" endtime="20201110 08:39:23.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.423" endtime="20201110 08:39:23.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.422" endtime="20201110 08:39:23.985"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.009" endtime="20201110 08:39:24.031"></status>
</kw>
<msg timestamp="20201110 08:39:24.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:24.005" endtime="20201110 08:39:24.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:24.035" endtime="20201110 08:39:24.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.041" endtime="20201110 08:39:24.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.998" endtime="20201110 08:39:24.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.992" endtime="20201110 08:39:24.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.065" endtime="20201110 08:39:24.415"></status>
</kw>
<msg timestamp="20201110 08:39:24.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041477917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04159875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:24.061" endtime="20201110 08:39:24.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041477917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04159875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:24.425" endtime="20201110 08:39:24.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.443" endtime="20201110 08:39:24.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.054" endtime="20201110 08:39:24.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.049" endtime="20201110 08:39:24.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:24.463" level="INFO">${RESULT} = [{'time': 0.04159875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001208329999999938, 'source_diff': 0.0001208329999999938}, {'time': 0.041726986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:39:24.454" endtime="20201110 08:39:24.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:24.493" level="INFO">${ACCURACY} = {'source_diff': [0.0001208329999999938, 0.0001209579999999974, 0.00012099999999999611, 0.00012048600000000298, 0.00012032000000000015, 0.00012219400000000602, 0.0001215830000000015, 0.0001220690000000...</msg>
<status status="PASS" starttime="20201110 08:39:24.465" endtime="20201110 08:39:24.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.504" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:39:24.502" endtime="20201110 08:39:24.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.510" level="INFO">VALUE: [0.0001208329999999938, 0.0001209579999999974, 0.00012099999999999611, 0.00012048600000000298, 0.00012032000000000015, 0.00012219400000000602, 0.0001215830000000015, 0.00012206900000000243, 0.00012123600000000373, 0.00012052800000000169, 0.00012059799999999954, 0.0001219300000000062, 0.00012197199999999797, 0.00012056899999999399, 0.00012097199999999697, 0.00012055600000000083, 0.00012173600000000423, 0.00012147199999999747, 0.00012069499999999705, 0.00012088899999999903, 0.00012151400000000312, 0.00012133300000000125, 0.00012144400000000527, 0.00012055600000000083, 0.00012041599999999819, 0.00012131900000000168, 0.00012038899999999852, 0.00012104199999999482, 0.00012068100000000442, 0.00012213900000000028, 0.00012123600000000373, 0.00012033399999999972, 0.00012197199999999797, 0.00012174999999999686, 0.00012087499999999946, 0.00012109700000000057, 0.00012197199999999797, 0.00012143100000000517, 0.00012101400000000262, 0.00012109700000000057, 0.00012041599999999819, 0.00012191699999999916, 0.00012115300000000578, 0.0001218050000000026, 0.0001214170000000056, 0.0001219579999999984, 0.00012169399999999858, 0.00012142999999999876, 0.0001215700000000014, 0.00012211100000000114]</msg>
<status status="PASS" starttime="20201110 08:39:24.507" endtime="20201110 08:39:24.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.495" endtime="20201110 08:39:24.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.520" endtime="20201110 08:39:24.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:24.528" endtime="20201110 08:39:24.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.524" endtime="20201110 08:39:24.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.515" endtime="20201110 08:39:24.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.987" endtime="20201110 08:39:24.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.986" endtime="20201110 08:39:24.554"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.578" endtime="20201110 08:39:24.600"></status>
</kw>
<msg timestamp="20201110 08:39:24.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:24.574" endtime="20201110 08:39:24.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:24.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:24.605" endtime="20201110 08:39:24.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.613" endtime="20201110 08:39:24.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.567" endtime="20201110 08:39:24.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.561" endtime="20201110 08:39:24.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:24.639" endtime="20201110 08:39:24.987"></status>
</kw>
<msg timestamp="20201110 08:39:24.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04154175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:24.635" endtime="20201110 08:39:24.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041420028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04154175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:24.996" endtime="20201110 08:39:25.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.015" endtime="20201110 08:39:25.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.628" endtime="20201110 08:39:25.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.623" endtime="20201110 08:39:25.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:25.039" level="INFO">${RESULT} = [{'time': 0.04154175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012172200000000466, 'source_diff': 0.00012172200000000466}, {'time': 0.041672056, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:39:25.029" endtime="20201110 08:39:25.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:25.070" level="INFO">${ACCURACY} = {'source_diff': [0.00012172200000000466, 0.00012186200000000036, 0.00012301399999999768, 0.0001231250000000017, 0.00012243099999999923, 0.0001230979999999951, 0.00012229199999999607, 0.000122166999999...</msg>
<status status="PASS" starttime="20201110 08:39:25.042" endtime="20201110 08:39:25.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.081" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:39:25.079" endtime="20201110 08:39:25.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.086" level="INFO">VALUE: [0.00012172200000000466, 0.00012186200000000036, 0.00012301399999999768, 0.0001231250000000017, 0.00012243099999999923, 0.0001230979999999951, 0.00012229199999999607, 0.00012216699999999941, 0.00012219400000000602, 0.0001221799999999995, 0.00012293000000000026, 0.0001226250000000012, 0.00012250000000000455, 0.00012161100000000064, 0.0001227500000000048, 0.00012201400000000362, 0.00012294399999999983, 0.0001224579999999989, 0.00012291700000000017, 0.00012158400000000097, 0.0001228050000000036, 0.00012294399999999983, 0.00012273600000000523, 0.00012176400000000337, 0.00012186100000000089, 0.00012274999999999786, 0.0001216250000000002, 0.00012141699999999866, 0.00012137499999999996, 0.00012169399999999858, 0.00012263900000000078, 0.00012152799999999575, 0.00012269499999999905, 0.00012188900000000003, 0.00012263900000000078, 0.0001212229999999967, 0.000122083000000002, 0.00012193099999999873, 0.00012173599999999729, 0.00012270799999999915, 0.00012184800000000079, 0.00012266600000000044, 0.00012149999999999661, 0.00012191599999999969, 0.00012188900000000003, 0.0001222229999999977, 0.00012136099999999345, 0.00012134700000000082, 0.00012234700000000182, 0.00012209700000000157]</msg>
<status status="PASS" starttime="20201110 08:39:25.083" endtime="20201110 08:39:25.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.072" endtime="20201110 08:39:25.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.096" endtime="20201110 08:39:25.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:25.105" endtime="20201110 08:39:25.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.100" endtime="20201110 08:39:25.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.092" endtime="20201110 08:39:25.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.557" endtime="20201110 08:39:25.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:24.555" endtime="20201110 08:39:25.131"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.154" endtime="20201110 08:39:25.177"></status>
</kw>
<msg timestamp="20201110 08:39:25.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:25.151" endtime="20201110 08:39:25.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:25.180" endtime="20201110 08:39:25.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.186" endtime="20201110 08:39:25.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.143" endtime="20201110 08:39:25.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.137" endtime="20201110 08:39:25.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.210" endtime="20201110 08:39:25.556"></status>
</kw>
<msg timestamp="20201110 08:39:25.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041654986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:25.207" endtime="20201110 08:39:25.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041654986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:25.565" endtime="20201110 08:39:25.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.584" endtime="20201110 08:39:25.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.200" endtime="20201110 08:39:25.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.195" endtime="20201110 08:39:25.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:25.603" level="INFO">${RESULT} = [{'time': 0.041777875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012288900000000103, 'source_diff': 0.00012288900000000103}, {'time': 0.041908278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:25.594" endtime="20201110 08:39:25.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:25.633" level="INFO">${ACCURACY} = {'source_diff': [0.00012288900000000103, 0.00012395899999999987, 0.00012329199999999707, 0.00012272199999999872, 0.00012258299999999556, 0.00012320899999999912, 0.00012363900000000178, 0.0001230279999...</msg>
<status status="PASS" starttime="20201110 08:39:25.605" endtime="20201110 08:39:25.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.644" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:39:25.642" endtime="20201110 08:39:25.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.649" level="INFO">VALUE: [0.00012288900000000103, 0.00012395899999999987, 0.00012329199999999707, 0.00012272199999999872, 0.00012258299999999556, 0.00012320899999999912, 0.00012363900000000178, 0.00012302799999999725, 0.0001225559999999959, 0.00012276400000000437, 0.00012380499999999767, 0.00012391700000000117, 0.00012268, 0.0001226109999999947, 0.00012355499999999742, 0.000123292000000004, 0.00012363899999999484, 0.00012269499999999905, 0.00012255499999999642, 0.00012237500000000096, 0.00012343100000000023, 0.0001239450000000003, 0.00012222199999999822, 0.00012254100000000379, 0.00012270799999999915, 0.000123083000000003, 0.00012361100000000264, 0.00012411100000000314, 0.00012237500000000096, 0.00012411100000000314, 0.00012274999999999786, 0.00012366600000000144, 0.0001237909999999981, 0.00012268, 0.0001228329999999958, 0.00012382000000000365, 0.00012236099999999445, 0.00012362499999999527, 0.00012327800000000444, 0.00012252799999999675, 0.00012286100000000189, 0.00012347199999999947, 0.00012345899999999937, 0.00012365200000000187, 0.00012277800000000394, 0.00012233400000000172, 0.00012329199999999707, 0.00012404099999999835, 0.00012222199999999822, 0.0001241109999999962]</msg>
<status status="PASS" starttime="20201110 08:39:25.646" endtime="20201110 08:39:25.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.635" endtime="20201110 08:39:25.653"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.659" endtime="20201110 08:39:25.662"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:25.668" endtime="20201110 08:39:25.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.663" endtime="20201110 08:39:25.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.655" endtime="20201110 08:39:25.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.133" endtime="20201110 08:39:25.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.132" endtime="20201110 08:39:25.694"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.717" endtime="20201110 08:39:25.740"></status>
</kw>
<msg timestamp="20201110 08:39:25.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:25.714" endtime="20201110 08:39:25.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:25.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:25.743" endtime="20201110 08:39:25.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.750" endtime="20201110 08:39:25.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.706" endtime="20201110 08:39:25.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.700" endtime="20201110 08:39:25.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:25.774" endtime="20201110 08:39:26.121"></status>
</kw>
<msg timestamp="20201110 08:39:26.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041522833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:25.770" endtime="20201110 08:39:26.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041397625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041522833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.130" endtime="20201110 08:39:26.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.149" endtime="20201110 08:39:26.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.763" endtime="20201110 08:39:26.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.758" endtime="20201110 08:39:26.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.168" level="INFO">${RESULT} = [{'time': 0.041522833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012520800000000165, 'source_diff': 0.00012520800000000165}, {'time': 0.041656014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:26.159" endtime="20201110 08:39:26.168"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:26.198" level="INFO">${ACCURACY} = {'source_diff': [0.00012520800000000165, 0.00012412499999999577, 0.00012387500000000246, 0.00012343100000000023, 0.00012381899999999724, 0.00012369400000000058, 0.0001244999999999996, 0.00012352799999...</msg>
<status status="PASS" starttime="20201110 08:39:26.170" endtime="20201110 08:39:26.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.210" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:39:26.207" endtime="20201110 08:39:26.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.215" level="INFO">VALUE: [0.00012520800000000165, 0.00012412499999999577, 0.00012387500000000246, 0.00012343100000000023, 0.00012381899999999724, 0.00012369400000000058, 0.0001244999999999996, 0.00012352799999999775, 0.00012376399999999843, 0.00012386100000000289, 0.00012426399999999893, 0.00012374999999999886, 0.00012493000000000226, 0.00012454199999999832, 0.00012324999999999836, 0.00012438900000000253, 0.00012373600000000623, 0.00012465199999999593, 0.00012354200000000426, 0.00012441700000000167, 0.00012498600000000054, 0.00012315199999999443, 0.00012493100000000174, 0.00012481900000000518, 0.00012334700000000282, 0.0001248199999999977, 0.0001234999999999986, 0.00012348599999999904, 0.00012369500000000005, 0.0001250000000000001, 0.0001240559999999974, 0.00012348599999999904, 0.00012494400000000183, 0.00012480599999999814, 0.00012370899999999962, 0.0001247920000000055, 0.00012426399999999893, 0.0001242359999999998, 0.00012369400000000058, 0.0001246109999999967, 0.00012352799999999775, 0.0001241800000000015, 0.0001246109999999967, 0.0001240689999999975, 0.0001244030000000021, 0.00012416699999999448, 0.00012377800000000494, 0.00012445900000000037, 0.00012330599999999664, 0.00012501399999999968]</msg>
<status status="PASS" starttime="20201110 08:39:26.212" endtime="20201110 08:39:26.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.200" endtime="20201110 08:39:26.218"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.225" endtime="20201110 08:39:26.228"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:26.234" endtime="20201110 08:39:26.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.229" endtime="20201110 08:39:26.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.220" endtime="20201110 08:39:26.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.696" endtime="20201110 08:39:26.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:25.695" endtime="20201110 08:39:26.260"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.283" endtime="20201110 08:39:26.306"></status>
</kw>
<msg timestamp="20201110 08:39:26.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.280" endtime="20201110 08:39:26.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.310" endtime="20201110 08:39:26.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.316" endtime="20201110 08:39:26.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.273" endtime="20201110 08:39:26.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.267" endtime="20201110 08:39:26.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.340" endtime="20201110 08:39:26.686"></status>
</kw>
<msg timestamp="20201110 08:39:26.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041569903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.337" endtime="20201110 08:39:26.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041444278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041569903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.695" endtime="20201110 08:39:26.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.713" endtime="20201110 08:39:26.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.329" endtime="20201110 08:39:26.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.324" endtime="20201110 08:39:26.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:26.733" level="INFO">${RESULT} = [{'time': 0.041569903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012562499999999727, 'source_diff': 0.00012562499999999727}, {'time': 0.041705403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:26.724" endtime="20201110 08:39:26.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:26.763" level="INFO">${ACCURACY} = {'source_diff': [0.00012562499999999727, 0.00012497200000000097, 0.0001256109999999977, 0.00012545799999999496, 0.00012591699999999623, 0.0001259580000000024, 0.0001249580000000014, 0.0001259589999999...</msg>
<status status="PASS" starttime="20201110 08:39:26.735" endtime="20201110 08:39:26.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.774" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:39:26.772" endtime="20201110 08:39:26.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.779" level="INFO">VALUE: [0.00012562499999999727, 0.00012497200000000097, 0.0001256109999999977, 0.00012545799999999496, 0.00012591699999999623, 0.0001259580000000024, 0.0001249580000000014, 0.00012595899999999494, 0.00012580599999999914, 0.00012484699999999738, 0.00012486099999999695, 0.0001252909999999996, 0.00012520900000000112, 0.0001261109999999982, 0.00012508299999999806, 0.0001250559999999984, 0.0001251109999999972, 0.000125778, 0.00012472200000000072, 0.000126165999999997, 0.00012430600000000458, 0.00012534699999999788, 0.00012522200000000122, 0.00012462499999999627, 0.00012419400000000108, 0.00012543100000000224, 0.00012608399999999853, 0.0001254580000000019, 0.00012451399999999918, 0.00012465300000000235, 0.00012545799999999496, 0.0001244030000000021, 0.00012541700000000267, 0.00012604199999999982, 0.0001259580000000024, 0.00012605499999999992, 0.0001262360000000018, 0.0001252779999999995, 0.0001255000000000006, 0.0001261109999999982, 0.0001243480000000033, 0.00012601400000000068, 0.00012509700000000457, 0.00012498700000000001, 0.00012508299999999806, 0.000124680000000002, 0.00012591599999999675, 0.00012516700000000242, 0.0001251800000000025, 0.00012466600000000244]</msg>
<status status="PASS" starttime="20201110 08:39:26.776" endtime="20201110 08:39:26.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.765" endtime="20201110 08:39:26.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.789" endtime="20201110 08:39:26.792"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:26.797" endtime="20201110 08:39:26.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.793" endtime="20201110 08:39:26.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.784" endtime="20201110 08:39:26.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.262" endtime="20201110 08:39:26.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.261" endtime="20201110 08:39:26.824"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.847" endtime="20201110 08:39:26.870"></status>
</kw>
<msg timestamp="20201110 08:39:26.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.844" endtime="20201110 08:39:26.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:26.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:26.873" endtime="20201110 08:39:26.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.879" endtime="20201110 08:39:26.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.836" endtime="20201110 08:39:26.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.830" endtime="20201110 08:39:26.886"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:26.903" endtime="20201110 08:39:27.249"></status>
</kw>
<msg timestamp="20201110 08:39:27.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041597278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041723333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:26.900" endtime="20201110 08:39:27.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041597278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041723333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:27.258" endtime="20201110 08:39:27.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.276" endtime="20201110 08:39:27.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.892" endtime="20201110 08:39:27.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.888" endtime="20201110 08:39:27.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:27.297" level="INFO">${RESULT} = [{'time': 0.041723333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012605499999999992, 'source_diff': 0.00012605499999999992}, {'time': 0.041860778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:27.288" endtime="20201110 08:39:27.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:27.327" level="INFO">${ACCURACY} = {'source_diff': [0.00012605499999999992, 0.00012651400000000118, 0.00012579199999999957, 0.00012715199999999843, 0.00012586100000000489, 0.0001260559999999994, 0.00012537499999999702, 0.00012683399999...</msg>
<status status="PASS" starttime="20201110 08:39:27.300" endtime="20201110 08:39:27.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.339" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:39:27.336" endtime="20201110 08:39:27.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.344" level="INFO">VALUE: [0.00012605499999999992, 0.00012651400000000118, 0.00012579199999999957, 0.00012715199999999843, 0.00012586100000000489, 0.0001260559999999994, 0.00012537499999999702, 0.00012683399999999928, 0.00012629200000000007, 0.00012677700000000153, 0.00012676400000000143, 0.0001260689999999995, 0.00012647199999999553, 0.0001265979999999986, 0.000126778000000001, 0.00012702800000000125, 0.00012647200000000247, 0.00012540199999999668, 0.00012672200000000272, 0.0001262780000000005, 0.00012709699999999963, 0.0001254030000000031, 0.00012555499999999942, 0.00012651400000000118, 0.00012623700000000126, 0.00012591700000000317, 0.00012554199999999932, 0.00012586100000000489, 0.00012608299999999906, 0.00012647300000000194, 0.00012587499999999752, 0.00012606999999999896, 0.00012587499999999752, 0.0001260689999999995, 0.00012590299999999666, 0.00012726400000000193, 0.0001268889999999981, 0.00012715199999999843, 0.0001256659999999965, 0.00012606999999999896, 0.0001268199999999997, 0.0001264859999999951, 0.00012663900000000478, 0.00012679200000000057, 0.00012555499999999942, 0.0001256380000000043, 0.00012677700000000153, 0.0001264580000000029, 0.0001253889999999966, 0.0001258889999999971]</msg>
<status status="PASS" starttime="20201110 08:39:27.341" endtime="20201110 08:39:27.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.329" endtime="20201110 08:39:27.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.354" endtime="20201110 08:39:27.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:27.362" endtime="20201110 08:39:27.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.358" endtime="20201110 08:39:27.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.349" endtime="20201110 08:39:27.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.826" endtime="20201110 08:39:27.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:26.825" endtime="20201110 08:39:27.388"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.412" endtime="20201110 08:39:27.434"></status>
</kw>
<msg timestamp="20201110 08:39:27.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.408" endtime="20201110 08:39:27.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.442" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.438" endtime="20201110 08:39:27.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.444" endtime="20201110 08:39:27.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.401" endtime="20201110 08:39:27.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.395" endtime="20201110 08:39:27.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.468" endtime="20201110 08:39:27.814"></status>
</kw>
<msg timestamp="20201110 08:39:27.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:27.465" endtime="20201110 08:39:27.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041250556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041377347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:27.824" endtime="20201110 08:39:27.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.842" endtime="20201110 08:39:27.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.457" endtime="20201110 08:39:27.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.453" endtime="20201110 08:39:27.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:27.862" level="INFO">${RESULT} = [{'time': 0.041377347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001267910000000011, 'source_diff': 0.0001267910000000011}, {'time': 0.041512861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:27.853" endtime="20201110 08:39:27.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:27.892" level="INFO">${ACCURACY} = {'source_diff': [0.0001267910000000011, 0.00012645799999999596, 0.0001271250000000057, 0.00012694499999999637, 0.00012672299999999526, 0.00012695899999999594, 0.00012640199999999768, 0.000127179999999...</msg>
<status status="PASS" starttime="20201110 08:39:27.864" endtime="20201110 08:39:27.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.903" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:39:27.901" endtime="20201110 08:39:27.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.909" level="INFO">VALUE: [0.0001267910000000011, 0.00012645799999999596, 0.0001271250000000057, 0.00012694499999999637, 0.00012672299999999526, 0.00012695899999999594, 0.00012640199999999768, 0.00012717999999999757, 0.00012676400000000143, 0.00012819399999999814, 0.00012655500000000042, 0.00012815300000000585, 0.00012667999999999707, 0.00012747200000000347, 0.00012704100000000135, 0.00012690299999999766, 0.00012801399999999574, 0.00012813899999999934, 0.00012691599999999775, 0.00012651400000000118, 0.00012779200000000157, 0.0001270560000000004, 0.00012652700000000128, 0.00012655500000000042, 0.00012672200000000272, 0.0001276109999999997, 0.00012747200000000347, 0.0001274309999999973, 0.0001271800000000045, 0.0001266109999999987, 0.00012770900000000363, 0.00012654200000000032, 0.00012718099999999705, 0.00012737499999999902, 0.00012734699999999988, 0.00012669399999999664, 0.00012734699999999988, 0.00012637499999999802, 0.00012637499999999802, 0.00012673599999999535, 0.00012776400000000243, 0.0001270409999999944, 0.00012687499999999852, 0.00012813899999999934, 0.00012780499999999473, 0.0001280560000000014, 0.00012792999999999832, 0.00012687499999999852, 0.00012812499999999977, 0.0001274859999999961]</msg>
<status status="PASS" starttime="20201110 08:39:27.906" endtime="20201110 08:39:27.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.894" endtime="20201110 08:39:27.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.940" endtime="20201110 08:39:27.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:27.948" endtime="20201110 08:39:27.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.944" endtime="20201110 08:39:27.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.935" endtime="20201110 08:39:27.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.391" endtime="20201110 08:39:27.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.389" endtime="20201110 08:39:27.975"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.998" endtime="20201110 08:39:28.021"></status>
</kw>
<msg timestamp="20201110 08:39:28.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.994" endtime="20201110 08:39:28.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:28.025" endtime="20201110 08:39:28.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.032" endtime="20201110 08:39:28.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.987" endtime="20201110 08:39:28.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.981" endtime="20201110 08:39:28.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.056" endtime="20201110 08:39:28.401"></status>
</kw>
<msg timestamp="20201110 08:39:28.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041508972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:28.053" endtime="20201110 08:39:28.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041508972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041636875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:28.410" endtime="20201110 08:39:28.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.429" endtime="20201110 08:39:28.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.045" endtime="20201110 08:39:28.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.040" endtime="20201110 08:39:28.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:28.448" level="INFO">${RESULT} = [{'time': 0.041636875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012790299999999866, 'source_diff': 0.00012790299999999866}, {'time': 0.041770333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:28.439" endtime="20201110 08:39:28.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:28.478" level="INFO">${ACCURACY} = {'source_diff': [0.00012790299999999866, 0.00012859700000000113, 0.00012929199999999613, 0.0001274450000000038, 0.00012809700000000063, 0.00012899999999999717, 0.0001274439999999974, 0.000127416999999...</msg>
<status status="PASS" starttime="20201110 08:39:28.450" endtime="20201110 08:39:28.479"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.490" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:39:28.487" endtime="20201110 08:39:28.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.495" level="INFO">VALUE: [0.00012790299999999866, 0.00012859700000000113, 0.00012929199999999613, 0.0001274450000000038, 0.00012809700000000063, 0.00012899999999999717, 0.0001274439999999974, 0.00012741699999999773, 0.00012855499999999548, 0.0001278200000000007, 0.00012912500000000077, 0.00012848600000000404, 0.0001283330000000013, 0.0001275560000000009, 0.0001272360000000028, 0.00012745900000000338, 0.00012776300000000296, 0.0001290560000000024, 0.0001289309999999988, 0.00012798699999999608, 0.00012897199999999803, 0.00012793100000000474, 0.0001274309999999973, 0.00012845899999999744, 0.00012916699999999948, 0.00012868100000000549, 0.00012818099999999805, 0.00012830600000000164, 0.000127569000000001, 0.000128165999999999, 0.00012772299999999626, 0.00012767999999999807, 0.00012826400000000293, 0.00012893100000000574, 0.00012758300000000056, 0.00012859700000000113, 0.0001289859999999976, 0.00012841699999999873, 0.00012904200000000282, 0.0001282780000000025, 0.0001279030000000056, 0.00012818099999999805, 0.00012908300000000206, 0.00012798600000000354, 0.00012740299999999816, 0.00012862500000000027, 0.00012912500000000077, 0.00012913900000000034, 0.00012840299999999916, 0.00012797200000000397]</msg>
<status status="PASS" starttime="20201110 08:39:28.492" endtime="20201110 08:39:28.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.480" endtime="20201110 08:39:28.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.505" endtime="20201110 08:39:28.508"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:28.513" endtime="20201110 08:39:28.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.509" endtime="20201110 08:39:28.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.500" endtime="20201110 08:39:28.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.977" endtime="20201110 08:39:28.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.975" endtime="20201110 08:39:28.540"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.563" endtime="20201110 08:39:28.586"></status>
</kw>
<msg timestamp="20201110 08:39:28.587" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:28.559" endtime="20201110 08:39:28.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.593" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:28.589" endtime="20201110 08:39:28.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.596" endtime="20201110 08:39:28.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.552" endtime="20201110 08:39:28.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.546" endtime="20201110 08:39:28.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.619" endtime="20201110 08:39:28.963"></status>
</kw>
<msg timestamp="20201110 08:39:28.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041263528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:28.616" endtime="20201110 08:39:28.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:28.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041263528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041393292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:28.972" endtime="20201110 08:39:28.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:28.991" endtime="20201110 08:39:28.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.608" endtime="20201110 08:39:28.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.604" endtime="20201110 08:39:29.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:29.010" level="INFO">${RESULT} = [{'time': 0.041393292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001297639999999975, 'source_diff': 0.0001297639999999975}, {'time': 0.041528597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:29.001" endtime="20201110 08:39:29.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:29.041" level="INFO">${ACCURACY} = {'source_diff': [0.0001297639999999975, 0.00012905500000000292, 0.00012958300000000256, 0.0001300000000000051, 0.0001292780000000035, 0.00012837500000000002, 0.00012983400000000228, 0.0001297639999999...</msg>
<status status="PASS" starttime="20201110 08:39:29.012" endtime="20201110 08:39:29.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.052" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:39:29.050" endtime="20201110 08:39:29.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.058" level="INFO">VALUE: [0.0001297639999999975, 0.00012905500000000292, 0.00012958300000000256, 0.0001300000000000051, 0.0001292780000000035, 0.00012837500000000002, 0.00012983400000000228, 0.0001297639999999975, 0.00012972299999999826, 0.00012944499999999887, 0.0001293059999999957, 0.00012837500000000002, 0.0001285130000000037, 0.00013009700000000263, 0.00012956899999999605, 0.0001296660000000005, 0.0001281529999999989, 0.0001295560000000029, 0.00012895899999999794, 0.00012901400000000368, 0.0001297769999999976, 0.00012949999999999767, 0.0001298330000000028, 0.00012969500000000606, 0.00012909700000000163, 0.00012968099999999955, 0.00012837500000000002, 0.00013009700000000263, 0.000129166, 0.0001283330000000013, 0.00013027799999999756, 0.00012880600000000214, 0.00012958400000000203, 0.0001298890000000011, 0.0001293059999999957, 0.00012912500000000077, 0.00012925000000000436, 0.00012849999999999667, 0.00012955599999999595, 0.00012977799999999706, 0.000129472999999998, 0.00012818099999999805, 0.0001285560000000019, 0.00012947300000000495, 0.0001294439999999994, 0.00012993000000000032, 0.0001299439999999999, 0.00012841599999999925, 0.00012965200000000093, 0.00012999999999999817]</msg>
<status status="PASS" starttime="20201110 08:39:29.055" endtime="20201110 08:39:29.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.043" endtime="20201110 08:39:29.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.068" endtime="20201110 08:39:29.071"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:29.077" endtime="20201110 08:39:29.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.073" endtime="20201110 08:39:29.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.064" endtime="20201110 08:39:29.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.542" endtime="20201110 08:39:29.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:28.541" endtime="20201110 08:39:29.103"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.127" endtime="20201110 08:39:29.150"></status>
</kw>
<msg timestamp="20201110 08:39:29.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:29.123" endtime="20201110 08:39:29.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:29.153" endtime="20201110 08:39:29.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.159" endtime="20201110 08:39:29.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.116" endtime="20201110 08:39:29.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.110" endtime="20201110 08:39:29.166"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.183" endtime="20201110 08:39:29.528"></status>
</kw>
<msg timestamp="20201110 08:39:29.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041471361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041601042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:29.180" endtime="20201110 08:39:29.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041471361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041601042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:29.537" endtime="20201110 08:39:29.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.556" endtime="20201110 08:39:29.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.172" endtime="20201110 08:39:29.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.168" endtime="20201110 08:39:29.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:29.577" level="INFO">${RESULT} = [{'time': 0.041601042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00012968099999999955, 'source_diff': 0.00012968099999999955}, {'time': 0.041740319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:29.568" endtime="20201110 08:39:29.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:29.607" level="INFO">${ACCURACY} = {'source_diff': [0.00012968099999999955, 0.00013023599999999885, 0.00012990199999999424, 0.00012967999999999313, 0.0001304859999999991, 0.00012919499999999862, 0.00012987500000000152, 0.00012954099999...</msg>
<status status="PASS" starttime="20201110 08:39:29.579" endtime="20201110 08:39:29.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.618" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:39:29.616" endtime="20201110 08:39:29.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.624" level="INFO">VALUE: [0.00012968099999999955, 0.00013023599999999885, 0.00012990199999999424, 0.00012967999999999313, 0.0001304859999999991, 0.00012919499999999862, 0.00012987500000000152, 0.0001295409999999969, 0.00012968099999999955, 0.00012976299999999802, 0.00012990300000000066, 0.00013073599999999935, 0.0001306530000000014, 0.0001307360000000063, 0.00012966699999999998, 0.00012972199999999878, 0.00012951399999999724, 0.00013034700000000288, 0.00012981900000000324, 0.00013051399999999824, 0.00013095800000000046, 0.0001306660000000015, 0.00013022199999999928, 0.0001302079999999997, 0.0001306389999999949, 0.00013051400000000518, 0.00013101399999999874, 0.00013063900000000184, 0.00013029200000000407, 0.00012969399999999964, 0.00013025000000000536, 0.00013130600000000464, 0.00013013900000000134, 0.00013063900000000184, 0.00013084700000000338, 0.00013029200000000407, 0.00013063900000000184, 0.0001294859999999981, 0.00013079199999999763, 0.00012987500000000152, 0.00012994499999999937, 0.000131166000000002, 0.00013019400000000014, 0.00012941699999999973, 0.0001307080000000002, 0.00013040300000000116, 0.000130263999999998, 0.00013086100000000295, 0.00012995799999999946, 0.00013066700000000098]</msg>
<status status="PASS" starttime="20201110 08:39:29.620" endtime="20201110 08:39:29.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.609" endtime="20201110 08:39:29.627"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.633" endtime="20201110 08:39:29.636"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:29.642" endtime="20201110 08:39:29.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.638" endtime="20201110 08:39:29.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.629" endtime="20201110 08:39:29.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.106" endtime="20201110 08:39:29.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.104" endtime="20201110 08:39:29.668"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.691" endtime="20201110 08:39:29.714"></status>
</kw>
<msg timestamp="20201110 08:39:29.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:29.688" endtime="20201110 08:39:29.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:29.717" endtime="20201110 08:39:29.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.724" endtime="20201110 08:39:29.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.681" endtime="20201110 08:39:29.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.675" endtime="20201110 08:39:29.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.748" endtime="20201110 08:39:30.135"></status>
</kw>
<msg timestamp="20201110 08:39:30.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041257431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0413885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:29.745" endtime="20201110 08:39:30.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041257431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0413885, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:30.146" endtime="20201110 08:39:30.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.169" endtime="20201110 08:39:30.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.737" endtime="20201110 08:39:30.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.733" endtime="20201110 08:39:30.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:30.195" level="INFO">${RESULT} = [{'time': 0.0413885, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001310690000000045, 'source_diff': 0.0001310690000000045}, {'time': 0.041524778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:30.184" endtime="20201110 08:39:30.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:30.231" level="INFO">${ACCURACY} = {'source_diff': [0.0001310690000000045, 0.00013044499999999987, 0.00013040300000000116, 0.0001303609999999955, 0.00013122200000000028, 0.0001302360000000058, 0.00013149999999999967, 0.0001315139999999...</msg>
<status status="PASS" starttime="20201110 08:39:30.198" endtime="20201110 08:39:30.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.242" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:39:30.240" endtime="20201110 08:39:30.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.248" level="INFO">VALUE: [0.0001310690000000045, 0.00013044499999999987, 0.00013040300000000116, 0.0001303609999999955, 0.00013122200000000028, 0.0001302360000000058, 0.00013149999999999967, 0.00013151399999999924, 0.000131860999999997, 0.00013059700000000313, 0.00013177799999999906, 0.00013051299999999877, 0.00013061099999999576, 0.0001315279999999988, 0.0001306660000000015, 0.000130263999999998, 0.0001308890000000021, 0.00013163900000000284, 0.0001307080000000002, 0.00013183299999999787, 0.00013123599999999985, 0.0001316110000000037, 0.0001309859999999996, 0.00013057000000000346, 0.00013149999999999967, 0.00013045799999999996, 0.00013027799999999756, 0.00013054200000000432, 0.00013166699999999504, 0.0001309440000000009, 0.00013105599999999745, 0.00013148699999999958, 0.0001305969999999962, 0.00013157000000000446, 0.00013049999999999867, 0.00013201399999999974, 0.00013108300000000406, 0.0001307089999999997, 0.00013149999999999967, 0.0001319440000000019, 0.00013061099999999576, 0.00013200000000000017, 0.000130263999999998, 0.00013104199999999788, 0.00013143000000000182, 0.00013105599999999745, 0.00013123599999999985, 0.0001314440000000014, 0.00013054199999999738, 0.0001313609999999965]</msg>
<status status="PASS" starttime="20201110 08:39:30.245" endtime="20201110 08:39:30.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.233" endtime="20201110 08:39:30.251"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.258" endtime="20201110 08:39:30.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:30.266" endtime="20201110 08:39:30.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.262" endtime="20201110 08:39:30.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.253" endtime="20201110 08:39:30.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.670" endtime="20201110 08:39:30.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.669" endtime="20201110 08:39:30.292"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.315" endtime="20201110 08:39:30.338"></status>
</kw>
<msg timestamp="20201110 08:39:30.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:30.312" endtime="20201110 08:39:30.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:30.342" endtime="20201110 08:39:30.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.348" endtime="20201110 08:39:30.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.305" endtime="20201110 08:39:30.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.299" endtime="20201110 08:39:30.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.372" endtime="20201110 08:39:30.716"></status>
</kw>
<msg timestamp="20201110 08:39:30.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041219667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041352097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:30.368" endtime="20201110 08:39:30.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041219667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041352097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:30.725" endtime="20201110 08:39:30.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.746" endtime="20201110 08:39:30.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.361" endtime="20201110 08:39:30.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.356" endtime="20201110 08:39:30.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:30.765" level="INFO">${RESULT} = [{'time': 0.041352097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013242999999999588, 'source_diff': 0.00013242999999999588}, {'time': 0.04148925, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:39:30.756" endtime="20201110 08:39:30.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:30.795" level="INFO">${ACCURACY} = {'source_diff': [0.00013242999999999588, 0.0001324860000000011, 0.00013195800000000146, 0.00013209700000000463, 0.00013137500000000302, 0.00013225000000000042, 0.00013329200000000013, 0.00013156999999...</msg>
<status status="PASS" starttime="20201110 08:39:30.767" endtime="20201110 08:39:30.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.807" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:39:30.804" endtime="20201110 08:39:30.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.812" level="INFO">VALUE: [0.00013242999999999588, 0.0001324860000000011, 0.00013195800000000146, 0.00013209700000000463, 0.00013137500000000302, 0.00013225000000000042, 0.00013329200000000013, 0.00013156999999999752, 0.00013250000000000067, 0.00013252700000000034, 0.0001320279999999993, 0.00013231999999999827, 0.00013122200000000028, 0.00013213900000000334, 0.00013279199999999963, 0.00013186100000000395, 0.00013191700000000223, 0.00013222200000000128, 0.0001313609999999965, 0.00013159700000000413, 0.00013266699999999604, 0.00013158299999999762, 0.000132166000000003, 0.0001313890000000026, 0.0001323059999999987, 0.00013211099999999726, 0.00013125000000000636, 0.00013201399999999974, 0.00013204199999999888, 0.0001315560000000049, 0.00013124999999999942, 0.00013250000000000067, 0.00013151399999999924, 0.000132860999999998, 0.00013244399999999545, 0.00013212500000000377, 0.00013301400000000074, 0.00013283299999999887, 0.00013318000000000357, 0.0001326110000000047, 0.000132166000000003, 0.00013275000000000092, 0.00013220899999999425, 0.00013122200000000028, 0.00013244500000000187, 0.00013204199999999888, 0.00013259799999999766, 0.00013155500000000542, 0.00013125000000000636, 0.00013151299999999977]</msg>
<status status="PASS" starttime="20201110 08:39:30.809" endtime="20201110 08:39:30.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.797" endtime="20201110 08:39:30.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.822" endtime="20201110 08:39:30.825"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:30.830" endtime="20201110 08:39:30.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.826" endtime="20201110 08:39:30.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.817" endtime="20201110 08:39:30.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.295" endtime="20201110 08:39:30.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.293" endtime="20201110 08:39:30.857"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.880" endtime="20201110 08:39:30.903"></status>
</kw>
<msg timestamp="20201110 08:39:30.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:30.876" endtime="20201110 08:39:30.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:30.906" endtime="20201110 08:39:30.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.913" endtime="20201110 08:39:30.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.869" endtime="20201110 08:39:30.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.863" endtime="20201110 08:39:30.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.937" endtime="20201110 08:39:31.287"></status>
</kw>
<msg timestamp="20201110 08:39:31.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041474972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041608944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:30.933" endtime="20201110 08:39:31.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041474972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041608944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:31.296" endtime="20201110 08:39:31.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.315" endtime="20201110 08:39:31.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.926" endtime="20201110 08:39:31.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.921" endtime="20201110 08:39:31.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:31.334" level="INFO">${RESULT} = [{'time': 0.041608944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013397200000000303, 'source_diff': 0.00013397200000000303}, {'time': 0.041747431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:31.325" endtime="20201110 08:39:31.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:31.364" level="INFO">${ACCURACY} = {'source_diff': [0.00013397200000000303, 0.0001330839999999986, 0.0001329730000000015, 0.00013316700000000348, 0.00013255500000000642, 0.00013333399999999884, 0.000133860999999999, 0.00013227799999999...</msg>
<status status="PASS" starttime="20201110 08:39:31.336" endtime="20201110 08:39:31.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.375" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:39:31.373" endtime="20201110 08:39:31.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.381" level="INFO">VALUE: [0.00013397200000000303, 0.0001330839999999986, 0.0001329730000000015, 0.00013316700000000348, 0.00013255500000000642, 0.00013333399999999884, 0.000133860999999999, 0.00013227799999999956, 0.0001331530000000039, 0.0001323609999999975, 0.00013419499999999668, 0.0001329860000000016, 0.00013298599999999466, 0.00013363799999999842, 0.00013399999999999523, 0.00013334699999999894, 0.0001329310000000028, 0.0001323059999999987, 0.00013274999999999398, 0.00013290300000000366, 0.00013300000000000117, 0.00013383299999999987, 0.0001335280000000008, 0.00013245900000000144, 0.00013362499999999833, 0.0001335280000000008, 0.00013415299999999797, 0.00013273600000000135, 0.00013401300000000227, 0.00013337499999999808, 0.0001324860000000011, 0.00013263800000000436, 0.0001333189999999998, 0.00013255599999999895, 0.0001341530000000049, 0.0001335280000000008, 0.0001327640000000005, 0.00013343000000000382, 0.00013354200000000038, 0.0001337080000000032, 0.0001329719999999951, 0.00013341700000000373, 0.00013404200000000088, 0.00013233299999999837, 0.0001333049999999933, 0.000133860999999999, 0.0001343479999999994, 0.00013399999999999523, 0.00013361099999999876, 0.00013223600000000085]</msg>
<status status="PASS" starttime="20201110 08:39:31.378" endtime="20201110 08:39:31.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.366" endtime="20201110 08:39:31.384"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.391" endtime="20201110 08:39:31.393"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:31.399" endtime="20201110 08:39:31.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.394" endtime="20201110 08:39:31.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.386" endtime="20201110 08:39:31.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.859" endtime="20201110 08:39:31.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.858" endtime="20201110 08:39:31.425"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.449" endtime="20201110 08:39:31.472"></status>
</kw>
<msg timestamp="20201110 08:39:31.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:31.445" endtime="20201110 08:39:31.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.480" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:31.476" endtime="20201110 08:39:31.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.482" endtime="20201110 08:39:31.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.438" endtime="20201110 08:39:31.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.432" endtime="20201110 08:39:31.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.506" endtime="20201110 08:39:31.849"></status>
</kw>
<msg timestamp="20201110 08:39:31.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041807222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04194225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:31.502" endtime="20201110 08:39:31.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041807222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04194225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:31.859" endtime="20201110 08:39:31.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.877" endtime="20201110 08:39:31.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.495" endtime="20201110 08:39:31.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.490" endtime="20201110 08:39:31.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:31.899" level="INFO">${RESULT} = [{'time': 0.04194225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001350280000000023, 'source_diff': 0.0001350280000000023}, {'time': 0.042082667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:39:31.890" endtime="20201110 08:39:31.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:31.929" level="INFO">${ACCURACY} = {'source_diff': [0.0001350280000000023, 0.00013354200000000038, 0.00013487499999999958, 0.0001339169999999973, 0.00013373600000000235, 0.00013344399999999645, 0.00013472199999999684, 0.000134083000000...</msg>
<status status="PASS" starttime="20201110 08:39:31.901" endtime="20201110 08:39:31.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.940" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:39:31.938" endtime="20201110 08:39:31.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:31.945" level="INFO">VALUE: [0.0001350280000000023, 0.00013354200000000038, 0.00013487499999999958, 0.0001339169999999973, 0.00013373600000000235, 0.00013344399999999645, 0.00013472199999999684, 0.00013408300000000012, 0.00013388899999999815, 0.00013455500000000148, 0.00013390199999999824, 0.00013515299999999897, 0.00013450000000000267, 0.00013340300000000416, 0.00013505500000000198, 0.0001333609999999985, 0.00013456900000000105, 0.00013440299999999822, 0.000133264000000001, 0.00013470799999999727, 0.00013461099999999976, 0.00013411099999999926, 0.00013501400000000274, 0.00013337499999999808, 0.00013413900000000534, 0.0001339169999999973, 0.00013434699999999994, 0.00013381999999999977, 0.00013345900000000244, 0.00013366700000000398, 0.00013450000000000267, 0.00013411099999999926, 0.00013434699999999994, 0.00013338899999999765, 0.00013454200000000138, 0.00013448599999999616, 0.00013422199999999634, 0.00013337499999999808, 0.00013448700000000258, 0.00013505599999999451, 0.00013438899999999865, 0.00013505499999999504, 0.00013465299999999847, 0.00013327800000000056, 0.00013433299999999343, 0.00013429200000000113, 0.00013487499999999958, 0.00013450000000000267, 0.00013376300000000202, 0.00013325000000000142]</msg>
<status status="PASS" starttime="20201110 08:39:31.942" endtime="20201110 08:39:31.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.931" endtime="20201110 08:39:31.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:31.955" endtime="20201110 08:39:31.958"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:31.964" endtime="20201110 08:39:31.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.959" endtime="20201110 08:39:31.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.950" endtime="20201110 08:39:31.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.428" endtime="20201110 08:39:31.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.426" endtime="20201110 08:39:31.990"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.013" endtime="20201110 08:39:32.036"></status>
</kw>
<msg timestamp="20201110 08:39:32.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:32.010" endtime="20201110 08:39:32.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:32.040" endtime="20201110 08:39:32.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.046" endtime="20201110 08:39:32.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.002" endtime="20201110 08:39:32.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.996" endtime="20201110 08:39:32.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.070" endtime="20201110 08:39:32.415"></status>
</kw>
<msg timestamp="20201110 08:39:32.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041442014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041576819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.066" endtime="20201110 08:39:32.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041442014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041576819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.424" endtime="20201110 08:39:32.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.443" endtime="20201110 08:39:32.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.059" endtime="20201110 08:39:32.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.054" endtime="20201110 08:39:32.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:32.462" level="INFO">${RESULT} = [{'time': 0.041576819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013480500000000173, 'source_diff': 0.00013480500000000173}, {'time': 0.041720139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:32.453" endtime="20201110 08:39:32.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:32.492" level="INFO">${ACCURACY} = {'source_diff': [0.00013480500000000173, 0.00013605600000000245, 0.00013604199999999594, 0.00013583299999999493, 0.0001360689999999956, 0.00013448599999999616, 0.00013572199999999784, 0.00013452700000...</msg>
<status status="PASS" starttime="20201110 08:39:32.464" endtime="20201110 08:39:32.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.503" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:39:32.501" endtime="20201110 08:39:32.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.509" level="INFO">VALUE: [0.00013480500000000173, 0.00013605600000000245, 0.00013604199999999594, 0.00013583299999999493, 0.0001360689999999956, 0.00013448599999999616, 0.00013572199999999784, 0.00013452700000000234, 0.00013515299999999897, 0.00013562500000000033, 0.00013532000000000127, 0.00013482000000000077, 0.00013557000000000152, 0.0001356809999999986, 0.00013542999999999888, 0.00013601299999999733, 0.0001360280000000033, 0.00013518100000000505, 0.00013479200000000163, 0.0001351389999999994, 0.0001345840000000001, 0.00013479100000000216, 0.00013609800000000116, 0.0001350139999999958, 0.0001360280000000033, 0.0001355840000000011, 0.00013465299999999847, 0.00013488899999999915, 0.00013524999999999648, 0.00013462499999999933, 0.0001352080000000047, 0.0001351389999999994, 0.00013586200000000048, 0.00013445800000000396, 0.0001346530000000054, 0.00013593099999999886, 0.0001360280000000033, 0.00013482000000000077, 0.000135861000000001, 0.0001355840000000011, 0.00013493000000000532, 0.0001347919999999947, 0.0001355280000000028, 0.00013494399999999795, 0.00013462499999999933, 0.00013479200000000163, 0.00013584799999999397, 0.0001346939999999977, 0.00013469499999999718, 0.00013516700000000548]</msg>
<status status="PASS" starttime="20201110 08:39:32.506" endtime="20201110 08:39:32.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.494" endtime="20201110 08:39:32.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.518" endtime="20201110 08:39:32.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:32.527" endtime="20201110 08:39:32.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.523" endtime="20201110 08:39:32.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.514" endtime="20201110 08:39:32.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.992" endtime="20201110 08:39:32.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:31.991" endtime="20201110 08:39:32.553"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.576" endtime="20201110 08:39:32.599"></status>
</kw>
<msg timestamp="20201110 08:39:32.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:32.573" endtime="20201110 08:39:32.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:32.603" endtime="20201110 08:39:32.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.609" endtime="20201110 08:39:32.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.565" endtime="20201110 08:39:32.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.559" endtime="20201110 08:39:32.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.633" endtime="20201110 08:39:32.977"></status>
</kw>
<msg timestamp="20201110 08:39:32.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041139639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.630" endtime="20201110 08:39:32.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041139639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041275097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.988" endtime="20201110 08:39:33.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.006" endtime="20201110 08:39:33.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.622" endtime="20201110 08:39:33.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.617" endtime="20201110 08:39:33.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:33.025" level="INFO">${RESULT} = [{'time': 0.041275097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013545799999999802, 'source_diff': 0.00013545799999999802}, {'time': 0.041422528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:33.016" endtime="20201110 08:39:33.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:33.056" level="INFO">${ACCURACY} = {'source_diff': [0.00013545799999999802, 0.0001368060000000032, 0.00013569400000000564, 0.00013541700000000573, 0.00013683400000000234, 0.00013520799999999777, 0.00013672200000000578, 0.00013544399999...</msg>
<status status="PASS" starttime="20201110 08:39:33.028" endtime="20201110 08:39:33.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.067" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:39:33.065" endtime="20201110 08:39:33.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.072" level="INFO">VALUE: [0.00013545799999999802, 0.0001368060000000032, 0.00013569400000000564, 0.00013541700000000573, 0.00013683400000000234, 0.00013520799999999777, 0.00013672200000000578, 0.00013544399999999845, 0.0001354440000000054, 0.00013699999999999823, 0.00013616600000000006, 0.0001354169999999988, 0.00013636099999999457, 0.00013698599999999866, 0.00013540299999999922, 0.00013640200000000074, 0.00013590299999999972, 0.00013687500000000158, 0.00013622200000000528, 0.00013672199999999884, 0.00013690300000000072, 0.00013540199999999974, 0.00013597299999999757, 0.00013694399999999995, 0.0001355410000000029, 0.00013548699999999664, 0.00013681899999999636, 0.0001361390000000004, 0.00013622200000000528, 0.0001365280000000038, 0.00013574999999999698, 0.00013611099999999432, 0.00013607000000000202, 0.00013617999999999963, 0.0001366809999999996, 0.00013608300000000212, 0.00013597299999999757, 0.00013541599999999931, 0.00013576399999999655, 0.0001358469999999945, 0.00013676399999999755, 0.00013649999999999773, 0.0001367080000000062, 0.00013711100000000226, 0.00013616600000000006, 0.00013679200000000363, 0.00013592999999999938, 0.00013611100000000126, 0.0001356389999999999, 0.0001367090000000057]</msg>
<status status="PASS" starttime="20201110 08:39:33.069" endtime="20201110 08:39:33.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.058" endtime="20201110 08:39:33.076"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.082" endtime="20201110 08:39:33.085"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:33.090" endtime="20201110 08:39:33.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.086" endtime="20201110 08:39:33.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.077" endtime="20201110 08:39:33.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.555" endtime="20201110 08:39:33.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.554" endtime="20201110 08:39:33.117"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.140" endtime="20201110 08:39:33.163"></status>
</kw>
<msg timestamp="20201110 08:39:33.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:33.136" endtime="20201110 08:39:33.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:33.167" endtime="20201110 08:39:33.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.173" endtime="20201110 08:39:33.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.129" endtime="20201110 08:39:33.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.123" endtime="20201110 08:39:33.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.198" endtime="20201110 08:39:33.549"></status>
</kw>
<msg timestamp="20201110 08:39:33.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041589542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:33.195" endtime="20201110 08:39:33.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041452875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041589542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:33.559" endtime="20201110 08:39:33.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.577" endtime="20201110 08:39:33.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.187" endtime="20201110 08:39:33.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.182" endtime="20201110 08:39:33.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:33.596" level="INFO">${RESULT} = [{'time': 0.041589542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013666700000000004, 'source_diff': 0.00013666700000000004}, {'time': 0.041734847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:33.587" endtime="20201110 08:39:33.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:33.626" level="INFO">${ACCURACY} = {'source_diff': [0.00013666700000000004, 0.00013658299999999568, 0.00013749999999999873, 0.00013706900000000355, 0.00013679200000000363, 0.00013694499999999943, 0.0001377369999999989, 0.00013661100000...</msg>
<status status="PASS" starttime="20201110 08:39:33.598" endtime="20201110 08:39:33.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.638" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:39:33.635" endtime="20201110 08:39:33.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.643" level="INFO">VALUE: [0.00013666700000000004, 0.00013658299999999568, 0.00013749999999999873, 0.00013706900000000355, 0.00013679200000000363, 0.00013694499999999943, 0.0001377369999999989, 0.00013661100000000176, 0.0001369860000000056, 0.00013680599999999626, 0.00013750000000000567, 0.0001375410000000049, 0.0001373610000000025, 0.00013787499999999564, 0.00013819399999999427, 0.00013737500000000208, 0.00013754200000000438, 0.00013676399999999755, 0.00013770800000000027, 0.0001368049999999968, 0.00013740200000000174, 0.00013726399999999805, 0.00013640300000000022, 0.0001374589999999995, 0.00013786200000000248, 0.00013768000000000113, 0.00013769500000000018, 0.0001366249999999944, 0.00013772199999999984, 0.00013629200000000313, 0.00013630500000000323, 0.0001364719999999986, 0.00013805599999999751, 0.0001369170000000003, 0.00013737499999999514, 0.00013644399999999945, 0.00013716700000000054, 0.00013786099999999607, 0.00013647299999999807, 0.0001373339999999959, 0.0001367919999999967, 0.00013798599999999966, 0.00013690300000000072, 0.00013676399999999755, 0.00013665300000000047, 0.00013804200000000488, 0.0001367919999999967, 0.00013820800000000077, 0.00013706999999999608, 0.00013691600000000081]</msg>
<status status="PASS" starttime="20201110 08:39:33.640" endtime="20201110 08:39:33.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.628" endtime="20201110 08:39:33.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.653" endtime="20201110 08:39:33.655"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:33.661" endtime="20201110 08:39:33.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.657" endtime="20201110 08:39:33.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.648" endtime="20201110 08:39:33.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.119" endtime="20201110 08:39:33.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.118" endtime="20201110 08:39:33.687"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.711" endtime="20201110 08:39:33.734"></status>
</kw>
<msg timestamp="20201110 08:39:33.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:33.707" endtime="20201110 08:39:33.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:33.737" endtime="20201110 08:39:33.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.745" endtime="20201110 08:39:33.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.700" endtime="20201110 08:39:33.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.694" endtime="20201110 08:39:33.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.770" endtime="20201110 08:39:34.115"></status>
</kw>
<msg timestamp="20201110 08:39:34.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041477889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041615847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:33.767" endtime="20201110 08:39:34.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041477889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041615847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:34.124" endtime="20201110 08:39:34.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.142" endtime="20201110 08:39:34.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.759" endtime="20201110 08:39:34.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.755" endtime="20201110 08:39:34.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:34.163" level="INFO">${RESULT} = [{'time': 0.041615847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00013795800000000052, 'source_diff': 0.00013795800000000052}, {'time': 0.041764167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:34.155" endtime="20201110 08:39:34.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:34.194" level="INFO">${ACCURACY} = {'source_diff': [0.00013795800000000052, 0.00013905599999999851, 0.00013858399999999715, 0.00013720799999999977, 0.00013740300000000122, 0.00013836099999999657, 0.00013743100000000036, 0.0001390279999...</msg>
<status status="PASS" starttime="20201110 08:39:34.165" endtime="20201110 08:39:34.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.205" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:39:34.202" endtime="20201110 08:39:34.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.210" level="INFO">VALUE: [0.00013795800000000052, 0.00013905599999999851, 0.00013858399999999715, 0.00013720799999999977, 0.00013740300000000122, 0.00013836099999999657, 0.00013743100000000036, 0.00013902799999999937, 0.00013729100000000466, 0.00013856900000000505, 0.00013781999999999683, 0.00013840300000000222, 0.00013848600000000016, 0.00013837500000000308, 0.00013905599999999851, 0.00013776399999999855, 0.00013852700000000634, 0.00013732000000000327, 0.0001391940000000022, 0.00013805499999999804, 0.0001381810000000011, 0.00013902799999999937, 0.00013745800000000002, 0.00013923600000000091, 0.0001376249999999954, 0.00013834700000000394, 0.00013870800000000127, 0.00013844400000000145, 0.00013744400000000045, 0.00013744400000000045, 0.00013777800000000506, 0.00013855599999999801, 0.00013733300000000337, 0.0001376669999999941, 0.00013744400000000045, 0.00013724999999999848, 0.0001390139999999998, 0.00013765300000000147, 0.00013873600000000041, 0.00013834700000000394, 0.00013795800000000052, 0.00013855599999999801, 0.0001391390000000034, 0.00013861200000000323, 0.00013758299999999668, 0.00013888799999999674, 0.00013745800000000002, 0.00013726299999999858, 0.00013758300000000362, 0.00013722299999999882]</msg>
<status status="PASS" starttime="20201110 08:39:34.207" endtime="20201110 08:39:34.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.195" endtime="20201110 08:39:34.214"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.221" endtime="20201110 08:39:34.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:34.230" endtime="20201110 08:39:34.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.225" endtime="20201110 08:39:34.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.216" endtime="20201110 08:39:34.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.689" endtime="20201110 08:39:34.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.688" endtime="20201110 08:39:34.256"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.280" endtime="20201110 08:39:34.303"></status>
</kw>
<msg timestamp="20201110 08:39:34.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:34.276" endtime="20201110 08:39:34.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:34.306" endtime="20201110 08:39:34.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.313" endtime="20201110 08:39:34.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.269" endtime="20201110 08:39:34.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.263" endtime="20201110 08:39:34.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.337" endtime="20201110 08:39:34.682"></status>
</kw>
<msg timestamp="20201110 08:39:34.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:34.333" endtime="20201110 08:39:34.689"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041753931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418935, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:34.691" endtime="20201110 08:39:34.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.710" endtime="20201110 08:39:34.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.326" endtime="20201110 08:39:34.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.321" endtime="20201110 08:39:34.718"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:34.729" level="INFO">${RESULT} = [{'time': 0.0418935, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001395689999999991, 'source_diff': 0.0001395689999999991}, {'time': 0.042043986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:34.720" endtime="20201110 08:39:34.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:34.759" level="INFO">${ACCURACY} = {'source_diff': [0.0001395689999999991, 0.0001401669999999966, 0.00013843100000000136, 0.00013827800000000556, 0.0001389720000000011, 0.00013841699999999485, 0.00013827699999999915, 0.0001391659999999...</msg>
<status status="PASS" starttime="20201110 08:39:34.731" endtime="20201110 08:39:34.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.770" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:39:34.768" endtime="20201110 08:39:34.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.776" level="INFO">VALUE: [0.0001395689999999991, 0.0001401669999999966, 0.00013843100000000136, 0.00013827800000000556, 0.0001389720000000011, 0.00013841699999999485, 0.00013827699999999915, 0.00013916599999999613, 0.0001391249999999969, 0.00013968099999999567, 0.00013829100000000566, 0.00013879200000000563, 0.00013948600000000116, 0.00013906999999999808, 0.00013955599999999901, 0.0001391940000000022, 0.00013920900000000125, 0.00014008299999999918, 0.00013884700000000444, 0.00013950000000000073, 0.0001390269999999999, 0.00013991699999999635, 0.00013937499999999714, 0.00013948600000000116, 0.00013929100000000666, 0.00013881899999999836, 0.00013958399999999815, 0.00013830599999999776, 0.00013861099999999682, 0.000138444999999994, 0.00013847300000000007, 0.00013865300000000247, 0.00013950000000000073, 0.0001390269999999999, 0.00013980599999999926, 0.00013843100000000136, 0.00013824999999999948, 0.00014000000000000123, 0.0001397089999999948, 0.00013958299999999868, 0.00013919500000000168, 0.00013997199999999516, 0.00013955599999999901, 0.00013973600000000141, 0.0001398889999999972, 0.00014004199999999994, 0.0001388480000000039, 0.00013925000000000048, 0.00013900000000000023, 0.00013954199999999944]</msg>
<status status="PASS" starttime="20201110 08:39:34.773" endtime="20201110 08:39:34.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.761" endtime="20201110 08:39:34.779"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.785" endtime="20201110 08:39:34.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:34.794" endtime="20201110 08:39:34.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.789" endtime="20201110 08:39:34.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.781" endtime="20201110 08:39:34.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.258" endtime="20201110 08:39:34.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.257" endtime="20201110 08:39:34.820"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.843" endtime="20201110 08:39:34.866"></status>
</kw>
<msg timestamp="20201110 08:39:34.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:34.840" endtime="20201110 08:39:34.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:34.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:34.870" endtime="20201110 08:39:34.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.876" endtime="20201110 08:39:34.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.832" endtime="20201110 08:39:34.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.826" endtime="20201110 08:39:34.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:34.900" endtime="20201110 08:39:35.246"></status>
</kw>
<msg timestamp="20201110 08:39:35.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041254389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041395278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:34.897" endtime="20201110 08:39:35.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041254389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041395278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:35.256" endtime="20201110 08:39:35.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.275" endtime="20201110 08:39:35.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.889" endtime="20201110 08:39:35.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.884" endtime="20201110 08:39:35.283"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:35.294" level="INFO">${RESULT} = [{'time': 0.041395278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001408889999999982, 'source_diff': 0.0001408889999999982}, {'time': 0.041546569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:35.285" endtime="20201110 08:39:35.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:35.324" level="INFO">${ACCURACY} = {'source_diff': [0.0001408889999999982, 0.00014036099999999857, 0.0001397919999999997, 0.00013976400000000055, 0.00013965300000000347, 0.0001404019999999978, 0.0001399869999999942, 0.00014091699999999...</msg>
<status status="PASS" starttime="20201110 08:39:35.296" endtime="20201110 08:39:35.325"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.335" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:39:35.333" endtime="20201110 08:39:35.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.341" level="INFO">VALUE: [0.0001408889999999982, 0.00014036099999999857, 0.0001397919999999997, 0.00013976400000000055, 0.00013965300000000347, 0.0001404019999999978, 0.0001399869999999942, 0.00014091699999999735, 0.00013958299999999868, 0.00013961200000000423, 0.00013948600000000116, 0.0001402219999999954, 0.00013950000000000073, 0.00014033299999999943, 0.0001398889999999972, 0.00013995800000000252, 0.00013933299999999843, 0.00014102800000000137, 0.00014102800000000137, 0.0001393889999999967, 0.00013927799999999962, 0.0001406249999999984, 0.0001408469999999995, 0.00013927799999999962, 0.00014104100000000147, 0.00014023699999999445, 0.00014131900000000086, 0.00014011100000000526, 0.00014020799999999584, 0.00014037499999999814, 0.00013954099999999997, 0.00014129199999999426, 0.00014087500000000558, 0.00014101399999999487, 0.00014083299999999993, 0.00014055500000000054, 0.00014012500000000483, 0.00014054200000000044, 0.00014087499999999864, 0.00014102800000000137, 0.00014050000000000173, 0.00013942999999999595, 0.00014115299999999803, 0.00014016700000000354, 0.00014072200000000284, 0.00013995799999999559, 0.00014081999999999983, 0.0001406669999999971, 0.000140959000000003, 0.00013988900000000415]</msg>
<status status="PASS" starttime="20201110 08:39:35.338" endtime="20201110 08:39:35.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.326" endtime="20201110 08:39:35.344"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.350" endtime="20201110 08:39:35.353"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:35.359" endtime="20201110 08:39:35.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.354" endtime="20201110 08:39:35.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.346" endtime="20201110 08:39:35.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.822" endtime="20201110 08:39:35.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:34.821" endtime="20201110 08:39:35.385"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.408" endtime="20201110 08:39:35.432"></status>
</kw>
<msg timestamp="20201110 08:39:35.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:35.405" endtime="20201110 08:39:35.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:35.435" endtime="20201110 08:39:35.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.442" endtime="20201110 08:39:35.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.397" endtime="20201110 08:39:35.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.392" endtime="20201110 08:39:35.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.466" endtime="20201110 08:39:35.812"></status>
</kw>
<msg timestamp="20201110 08:39:35.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04143525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041577181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:35.462" endtime="20201110 08:39:35.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04143525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041577181, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:35.821" endtime="20201110 08:39:35.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.840" endtime="20201110 08:39:35.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.455" endtime="20201110 08:39:35.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.450" endtime="20201110 08:39:35.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:35.859" level="INFO">${RESULT} = [{'time': 0.041577181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014193099999999792, 'source_diff': 0.00014193099999999792}, {'time': 0.041724458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:35.850" endtime="20201110 08:39:35.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:35.889" level="INFO">${ACCURACY} = {'source_diff': [0.00014193099999999792, 0.00014041599999999738, 0.00014137499999999914, 0.0001421249999999999, 0.00014073600000000241, 0.0001413889999999987, 0.00014136199999999904, 0.000142084000000...</msg>
<status status="PASS" starttime="20201110 08:39:35.861" endtime="20201110 08:39:35.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.900" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:39:35.898" endtime="20201110 08:39:35.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.906" level="INFO">VALUE: [0.00014193099999999792, 0.00014041599999999738, 0.00014137499999999914, 0.0001421249999999999, 0.00014073600000000241, 0.0001413889999999987, 0.00014136199999999904, 0.00014208400000000065, 0.00014154200000000144, 0.00014065199999999806, 0.00014132000000000033, 0.0001402920000000002, 0.00014042999999999695, 0.00014152800000000187, 0.0001404170000000038, 0.00014122200000000334, 0.00014075000000000198, 0.00014207000000000108, 0.00014090200000000525, 0.0001415140000000023, 0.00014047199999999566, 0.00014100000000000223, 0.00014168099999999767, 0.0001407920000000007, 0.00014140299999999828, 0.00014109699999999975, 0.0001416940000000047, 0.00014202799999999544, 0.0001416799999999982, 0.00014033300000000637, 0.00014081999999999983, 0.0001410690000000006, 0.00014023599999999498, 0.0001419999999999963, 0.0001406249999999984, 0.00014115299999999803, 0.00014025000000000148, 0.00014080600000000026, 0.0001416390000000059, 0.00014055500000000054, 0.00014136099999999957, 0.00014043099999999642, 0.0001412219999999964, 0.0001411669999999976, 0.00014073600000000241, 0.00014065199999999806, 0.0001411799999999977, 0.0001411249999999989, 0.0001413050000000013, 0.00014148599999999623]</msg>
<status status="PASS" starttime="20201110 08:39:35.903" endtime="20201110 08:39:35.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.891" endtime="20201110 08:39:35.909"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.916" endtime="20201110 08:39:35.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:35.924" endtime="20201110 08:39:35.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.920" endtime="20201110 08:39:35.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.911" endtime="20201110 08:39:35.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.387" endtime="20201110 08:39:35.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.386" endtime="20201110 08:39:35.950"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.974" endtime="20201110 08:39:35.997"></status>
</kw>
<msg timestamp="20201110 08:39:35.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:35.970" endtime="20201110 08:39:35.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:36.001" endtime="20201110 08:39:36.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.007" endtime="20201110 08:39:36.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.963" endtime="20201110 08:39:36.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.957" endtime="20201110 08:39:36.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.031" endtime="20201110 08:39:36.376"></status>
</kw>
<msg timestamp="20201110 08:39:36.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:36.028" endtime="20201110 08:39:36.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041311903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041454236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:36.385" endtime="20201110 08:39:36.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.403" endtime="20201110 08:39:36.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.020" endtime="20201110 08:39:36.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.015" endtime="20201110 08:39:36.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:36.424" level="INFO">${RESULT} = [{'time': 0.041454236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014233300000000143, 'source_diff': 0.00014233300000000143}, {'time': 0.041607542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:36.415" endtime="20201110 08:39:36.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:36.529" level="INFO">${ACCURACY} = {'source_diff': [0.00014233300000000143, 0.00014237500000000014, 0.00014231900000000186, 0.0001416249999999994, 0.00014298599999999773, 0.00014242999999999895, 0.00014316600000000013, 0.00014258299999...</msg>
<status status="PASS" starttime="20201110 08:39:36.426" endtime="20201110 08:39:36.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.542" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:39:36.538" endtime="20201110 08:39:36.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.549" level="INFO">VALUE: [0.00014233300000000143, 0.00014237500000000014, 0.00014231900000000186, 0.0001416249999999994, 0.00014298599999999773, 0.00014242999999999895, 0.00014316600000000013, 0.00014258299999999474, 0.0001430140000000038, 0.00014180600000000126, 0.00014254100000000297, 0.00014209800000000022, 0.00014208300000000118, 0.0001428890000000002, 0.0001421799999999987, 0.0001421249999999999, 0.00014204100000000247, 0.00014281900000000236, 0.0001416119999999993, 0.00014213899999999946, 0.00014205600000000151, 0.0001425140000000033, 0.00014286200000000054, 0.00014287500000000064, 0.00014174999999999605, 0.00014268099999999867, 0.0001421520000000065, 0.00014233300000000143, 0.00014176400000000255, 0.0001427089999999978, 0.00014223600000000391, 0.00014204200000000194, 0.00014232000000000133, 0.00014176399999999562, 0.00014287500000000064, 0.00014277799999999619, 0.00014159700000000025, 0.00014216700000000554, 0.0001413889999999987, 0.0001415690000000011, 0.0001417920000000017, 0.00014152800000000187, 0.0001415270000000024, 0.00014179100000000222, 0.00014301399999999687, 0.00014283300000000193, 0.00014177799999999519, 0.00014259800000000072, 0.00014186100000000007, 0.00014176400000000255]</msg>
<status status="PASS" starttime="20201110 08:39:36.545" endtime="20201110 08:39:36.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.531" endtime="20201110 08:39:36.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.562" endtime="20201110 08:39:36.566"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:36.574" endtime="20201110 08:39:36.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.568" endtime="20201110 08:39:36.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.556" endtime="20201110 08:39:36.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.952" endtime="20201110 08:39:36.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.951" endtime="20201110 08:39:36.601"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.625" endtime="20201110 08:39:36.649"></status>
</kw>
<msg timestamp="20201110 08:39:36.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:36.621" endtime="20201110 08:39:36.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:36.652" endtime="20201110 08:39:36.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.659" endtime="20201110 08:39:36.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.613" endtime="20201110 08:39:36.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.607" endtime="20201110 08:39:36.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.682" endtime="20201110 08:39:37.027"></status>
</kw>
<msg timestamp="20201110 08:39:37.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042992361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:36.679" endtime="20201110 08:39:37.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042992361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043136375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.036" endtime="20201110 08:39:37.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.055" endtime="20201110 08:39:37.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.672" endtime="20201110 08:39:37.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.667" endtime="20201110 08:39:37.062"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:37.073" level="INFO">${RESULT} = [{'time': 0.043136375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014401399999999787, 'source_diff': 0.00014401399999999787}, {'time': 0.043287694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:37.064" endtime="20201110 08:39:37.073"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:37.103" level="INFO">${ACCURACY} = {'source_diff': [0.00014401399999999787, 0.00014351300000000483, 0.00014350000000000473, 0.00014276399999999662, 0.00014390199999999437, 0.0001424999999999968, 0.00014281900000000236, 0.00014404199999...</msg>
<status status="PASS" starttime="20201110 08:39:37.075" endtime="20201110 08:39:37.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.114" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:39:37.112" endtime="20201110 08:39:37.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.120" level="INFO">VALUE: [0.00014401399999999787, 0.00014351300000000483, 0.00014350000000000473, 0.00014276399999999662, 0.00014390199999999437, 0.0001424999999999968, 0.00014281900000000236, 0.000144041999999997, 0.00014352799999999694, 0.00014316600000000013, 0.000143347000000002, 0.0001437219999999989, 0.00014351399999999737, 0.00014331900000000286, 0.00014319500000000568, 0.0001435140000000043, 0.0001426250000000004, 0.00014298600000000466, 0.0001434020000000008, 0.0001437219999999989, 0.00014241599999999938, 0.0001424590000000045, 0.0001431799999999997, 0.00014259700000000125, 0.00014390300000000078, 0.00014322300000000482, 0.0001434999999999978, 0.00014333399999999497, 0.00014276399999999662, 0.0001428890000000002, 0.00014337500000000114, 0.00014370799999999934, 0.0001439999999999983, 0.0001438749999999947, 0.00014373699999999795, 0.00014334699999999506, 0.00014275000000000398, 0.00014356899999999617, 0.00014323599999999798, 0.00014320799999999884, 0.00014404099999999753, 0.0001426120000000003, 0.00014408400000000265, 0.00014259700000000125, 0.0001426669999999991, 0.00014387500000000164, 0.00014377799999999719, 0.00014404099999999753, 0.0001426250000000004, 0.00014359700000000225]</msg>
<status status="PASS" starttime="20201110 08:39:37.117" endtime="20201110 08:39:37.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.105" endtime="20201110 08:39:37.123"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.129" endtime="20201110 08:39:37.132"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:37.138" endtime="20201110 08:39:37.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.133" endtime="20201110 08:39:37.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.125" endtime="20201110 08:39:37.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.603" endtime="20201110 08:39:37.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.602" endtime="20201110 08:39:37.164"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.187" endtime="20201110 08:39:37.212"></status>
</kw>
<msg timestamp="20201110 08:39:37.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:37.183" endtime="20201110 08:39:37.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:37.215" endtime="20201110 08:39:37.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.222" endtime="20201110 08:39:37.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.176" endtime="20201110 08:39:37.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.170" endtime="20201110 08:39:37.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.246" endtime="20201110 08:39:37.587"></status>
</kw>
<msg timestamp="20201110 08:39:37.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042666111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042811167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.242" endtime="20201110 08:39:37.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042666111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042811167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.597" endtime="20201110 08:39:37.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.615" endtime="20201110 08:39:37.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.235" endtime="20201110 08:39:37.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.230" endtime="20201110 08:39:37.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:37.633" level="INFO">${RESULT} = [{'time': 0.042811167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014505599999999758, 'source_diff': 0.00014505599999999758}, {'time': 0.042962514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:37.624" endtime="20201110 08:39:37.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:37.663" level="INFO">${ACCURACY} = {'source_diff': [0.00014505599999999758, 0.00014365300000000053, 0.00014491700000000135, 0.00014359700000000225, 0.00014405500000000404, 0.00014365300000000053, 0.00014511099999999638, 0.0001451949999...</msg>
<status status="PASS" starttime="20201110 08:39:37.635" endtime="20201110 08:39:37.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.674" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:39:37.672" endtime="20201110 08:39:37.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.680" level="INFO">VALUE: [0.00014505599999999758, 0.00014365300000000053, 0.00014491700000000135, 0.00014359700000000225, 0.00014405500000000404, 0.00014365300000000053, 0.00014511099999999638, 0.0001451949999999938, 0.00014486100000000307, 0.00014440299999999434, 0.00014361100000000182, 0.00014470800000000034, 0.00014452699999999846, 0.00014368099999999967, 0.00014518100000000117, 0.00014426399999999812, 0.0001441250000000019, 0.00014345899999999856, 0.00014493000000000145, 0.0001436670000000001, 0.00014441700000000085, 0.00014455600000000401, 0.0001445690000000041, 0.00014386100000000207, 0.00014348599999999823, 0.00014474999999999905, 0.00014505600000000451, 0.00014506899999999767, 0.00014447199999999966, 0.00014333300000000243, 0.00014426399999999812, 0.0001434999999999978, 0.0001447219999999999, 0.00014352800000000387, 0.000143444999999999, 0.00014415300000000103, 0.00014447199999999966, 0.00014412499999999495, 0.00014505600000000451, 0.00014395799999999959, 0.00014456899999999717, 0.0001448619999999956, 0.00014457000000000358, 0.00014373599999999848, 0.0001445270000000054, 0.0001439449999999995, 0.00014411099999999538, 0.00014501399999999887, 0.00014454100000000497, 0.00014370799999999934]</msg>
<status status="PASS" starttime="20201110 08:39:37.677" endtime="20201110 08:39:37.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.665" endtime="20201110 08:39:37.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.689" endtime="20201110 08:39:37.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:37.698" endtime="20201110 08:39:37.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.693" endtime="20201110 08:39:37.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.685" endtime="20201110 08:39:37.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.166" endtime="20201110 08:39:37.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.165" endtime="20201110 08:39:37.724"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.747" endtime="20201110 08:39:37.771"></status>
</kw>
<msg timestamp="20201110 08:39:37.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:37.744" endtime="20201110 08:39:37.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:37.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:37.774" endtime="20201110 08:39:37.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.780" endtime="20201110 08:39:37.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.736" endtime="20201110 08:39:37.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.730" endtime="20201110 08:39:37.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:37.806" endtime="20201110 08:39:38.150"></status>
</kw>
<msg timestamp="20201110 08:39:38.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041305417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041451153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:37.803" endtime="20201110 08:39:38.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041305417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041451153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.160" endtime="20201110 08:39:38.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.178" endtime="20201110 08:39:38.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.793" endtime="20201110 08:39:38.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.789" endtime="20201110 08:39:38.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:38.196" level="INFO">${RESULT} = [{'time': 0.041451153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014573600000000048, 'source_diff': 0.00014573600000000048}, {'time': 0.041602528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:38.187" endtime="20201110 08:39:38.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:38.226" level="INFO">${ACCURACY} = {'source_diff': [0.00014573600000000048, 0.00014608399999999772, 0.00014466600000000163, 0.0001451250000000029, 0.00014556899999999817, 0.00014469400000000077, 0.0001449450000000005, 0.000144541999999...</msg>
<status status="PASS" starttime="20201110 08:39:38.198" endtime="20201110 08:39:38.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.237" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:39:38.235" endtime="20201110 08:39:38.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.243" level="INFO">VALUE: [0.00014573600000000048, 0.00014608399999999772, 0.00014466600000000163, 0.0001451250000000029, 0.00014556899999999817, 0.00014469400000000077, 0.0001449450000000005, 0.0001445419999999975, 0.00014447299999999913, 0.0001450690000000046, 0.0001458340000000044, 0.00014498599999999973, 0.00014458399999999622, 0.00014480499999999785, 0.0001456800000000022, 0.00014458399999999622, 0.0001453329999999975, 0.0001446800000000012, 0.00014547200000000066, 0.00014576399999999962, 0.00014488899999999527, 0.000144832999999997, 0.00014452799999999794, 0.00014577799999999919, 0.00014437500000000214, 0.00014497200000000016, 0.0001446250000000024, 0.00014462499999999545, 0.0001450969999999968, 0.00014498599999999973, 0.00014541700000000185, 0.00014551399999999937, 0.0001452090000000003, 0.0001458890000000032, 0.0001452090000000003, 0.00014466699999999416, 0.00014483300000000393, 0.000144832999999997, 0.000146041999999999, 0.00014591700000000235, 0.00014556999999999765, 0.00014465300000000153, 0.00014495800000000059, 0.00014495800000000059, 0.00014511100000000332, 0.00014465200000000206, 0.00014498599999999973, 0.0001450140000000058, 0.00014555599999999808, 0.0001446800000000012]</msg>
<status status="PASS" starttime="20201110 08:39:38.240" endtime="20201110 08:39:38.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.228" endtime="20201110 08:39:38.250"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.257" endtime="20201110 08:39:38.260"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:38.266" endtime="20201110 08:39:38.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.261" endtime="20201110 08:39:38.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.252" endtime="20201110 08:39:38.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.726" endtime="20201110 08:39:38.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:37.725" endtime="20201110 08:39:38.292"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.315" endtime="20201110 08:39:38.339"></status>
</kw>
<msg timestamp="20201110 08:39:38.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:38.312" endtime="20201110 08:39:38.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:38.342" endtime="20201110 08:39:38.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.349" endtime="20201110 08:39:38.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.304" endtime="20201110 08:39:38.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.298" endtime="20201110 08:39:38.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.374" endtime="20201110 08:39:38.719"></status>
</kw>
<msg timestamp="20201110 08:39:38.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041362472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041507847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.371" endtime="20201110 08:39:38.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041362472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041507847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.729" endtime="20201110 08:39:38.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.747" endtime="20201110 08:39:38.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.363" endtime="20201110 08:39:38.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.358" endtime="20201110 08:39:38.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:38.765" level="INFO">${RESULT} = [{'time': 0.041507847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014537500000000314, 'source_diff': 0.00014537500000000314}, {'time': 0.041659181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:38.756" endtime="20201110 08:39:38.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:38.797" level="INFO">${ACCURACY} = {'source_diff': [0.00014537500000000314, 0.0001452370000000064, 0.00014547199999999372, 0.0001470409999999936, 0.00014561199999999636, 0.0001467220000000019, 0.00014529099999999878, 0.0001462360000000...</msg>
<status status="PASS" starttime="20201110 08:39:38.767" endtime="20201110 08:39:38.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.808" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:39:38.806" endtime="20201110 08:39:38.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.814" level="INFO">VALUE: [0.00014537500000000314, 0.0001452370000000064, 0.00014547199999999372, 0.0001470409999999936, 0.00014561199999999636, 0.0001467220000000019, 0.00014529099999999878, 0.00014623600000000098, 0.0001458340000000044, 0.0001461529999999961, 0.00014694399999999608, 0.00014575000000000005, 0.0001462220000000014, 0.00014613900000000346, 0.00014702700000000096, 0.00014651400000000037, 0.00014676400000000062, 0.0001466670000000031, 0.00014543000000000195, 0.00014540300000000228, 0.00014684699999999856, 0.0001455969999999973, 0.0001469859999999948, 0.00014711099999999838, 0.00014670899999999487, 0.0001465969999999983, 0.00014529199999999826, 0.00014688899999999727, 0.00014547200000000066, 0.0001468890000000042, 0.00014634800000000447, 0.00014625000000000055, 0.00014690299999999684, 0.00014532000000000433, 0.00014704100000000053, 0.0001462220000000014, 0.00014548600000000023, 0.00014652799999999994, 0.00014611100000000432, 0.00014706899999999967, 0.00014548600000000023, 0.000146445000000002, 0.00014606899999999867, 0.00014613899999999652, 0.00014643100000000242, 0.00014581900000000536, 0.0001467220000000019, 0.00014715199999999762, 0.00014575000000000005, 0.0001463749999999972]</msg>
<status status="PASS" starttime="20201110 08:39:38.811" endtime="20201110 08:39:38.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.799" endtime="20201110 08:39:38.817"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.824" endtime="20201110 08:39:38.827"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:38.832" endtime="20201110 08:39:38.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.828" endtime="20201110 08:39:38.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.819" endtime="20201110 08:39:38.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.294" endtime="20201110 08:39:38.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.293" endtime="20201110 08:39:38.859"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.882" endtime="20201110 08:39:38.906"></status>
</kw>
<msg timestamp="20201110 08:39:38.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:38.878" endtime="20201110 08:39:38.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:38.909" endtime="20201110 08:39:38.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.915" endtime="20201110 08:39:38.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.871" endtime="20201110 08:39:38.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.865" endtime="20201110 08:39:38.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.939" endtime="20201110 08:39:39.283"></status>
</kw>
<msg timestamp="20201110 08:39:39.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041540653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041687736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.936" endtime="20201110 08:39:39.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041540653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041687736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:39.292" endtime="20201110 08:39:39.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.311" endtime="20201110 08:39:39.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.928" endtime="20201110 08:39:39.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.924" endtime="20201110 08:39:39.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:39.330" level="INFO">${RESULT} = [{'time': 0.041687736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014708300000000618, 'source_diff': 0.00014708300000000618}, {'time': 0.041843069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:39.321" endtime="20201110 08:39:39.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:39.360" level="INFO">${ACCURACY} = {'source_diff': [0.00014708300000000618, 0.0001473879999999983, 0.00014630599999999883, 0.00014786099999999913, 0.000148042000000001, 0.00014686099999999813, 0.0001473329999999995, 0.00014720900000000...</msg>
<status status="PASS" starttime="20201110 08:39:39.332" endtime="20201110 08:39:39.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.371" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:39:39.369" endtime="20201110 08:39:39.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.377" level="INFO">VALUE: [0.00014708300000000618, 0.0001473879999999983, 0.00014630599999999883, 0.00014786099999999913, 0.000148042000000001, 0.00014686099999999813, 0.0001473329999999995, 0.0001472090000000023, 0.00014786099999999913, 0.00014644400000000252, 0.00014627799999999969, 0.0001467079999999954, 0.00014797199999999622, 0.00014645900000000156, 0.0001469580000000026, 0.00014741700000000385, 0.00014766699999999716, 0.00014783399999999947, 0.00014752800000000094, 0.0001473749999999982, 0.0001468890000000042, 0.0001476659999999977, 0.00014712499999999795, 0.00014662499999999745, 0.00014661099999999788, 0.00014769399999999683, 0.00014658299999999874, 0.00014745900000000256, 0.00014661099999999788, 0.0001470000000000013, 0.00014693099999999598, 0.0001473890000000047, 0.0001464580000000021, 0.00014697200000000216, 0.00014712499999999795, 0.0001469580000000026, 0.00014644400000000252, 0.00014806900000000067, 0.00014802800000000144, 0.00014752800000000094, 0.0001470969999999988, 0.00014720800000000284, 0.0001481250000000059, 0.00014790300000000478, 0.0001473199999999994, 0.0001468470000000055, 0.00014690300000000378, 0.00014738899999999777, 0.0001468199999999989, 0.00014791599999999794]</msg>
<status status="PASS" starttime="20201110 08:39:39.374" endtime="20201110 08:39:39.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.362" endtime="20201110 08:39:39.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.387" endtime="20201110 08:39:39.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:39.396" endtime="20201110 08:39:39.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.392" endtime="20201110 08:39:39.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.383" endtime="20201110 08:39:39.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.861" endtime="20201110 08:39:39.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.860" endtime="20201110 08:39:39.423"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.446" endtime="20201110 08:39:39.470"></status>
</kw>
<msg timestamp="20201110 08:39:39.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:39.443" endtime="20201110 08:39:39.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:39.473" endtime="20201110 08:39:39.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.480" endtime="20201110 08:39:39.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.435" endtime="20201110 08:39:39.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.430" endtime="20201110 08:39:39.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.503" endtime="20201110 08:39:39.848"></status>
</kw>
<msg timestamp="20201110 08:39:39.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041706778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041855694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:39.500" endtime="20201110 08:39:39.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041706778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041855694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:39.858" endtime="20201110 08:39:39.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.877" endtime="20201110 08:39:39.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.493" endtime="20201110 08:39:39.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.488" endtime="20201110 08:39:39.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:39.896" level="INFO">${RESULT} = [{'time': 0.041855694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00014891599999999894, 'source_diff': 0.00014891599999999894}, {'time': 0.042008986, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:39.887" endtime="20201110 08:39:39.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:39.926" level="INFO">${ACCURACY} = {'source_diff': [0.00014891599999999894, 0.00014758299999999974, 0.0001473329999999995, 0.00014794399999999708, 0.00014790300000000478, 0.00014876400000000262, 0.0001487499999999961, 0.000148957999999...</msg>
<status status="PASS" starttime="20201110 08:39:39.898" endtime="20201110 08:39:39.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.937" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:39:39.935" endtime="20201110 08:39:39.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:39.942" level="INFO">VALUE: [0.00014891599999999894, 0.00014758299999999974, 0.0001473329999999995, 0.00014794399999999708, 0.00014790300000000478, 0.00014876400000000262, 0.0001487499999999961, 0.00014895799999999765, 0.0001491949999999978, 0.00014858300000000074, 0.00014838899999999877, 0.0001487499999999961, 0.0001474169999999969, 0.0001490970000000008, 0.00014736100000000557, 0.0001476250000000054, 0.0001486659999999987, 0.0001479859999999958, 0.000148833000000001, 0.0001477770000000017, 0.00014883299999999405, 0.0001473329999999995, 0.0001476529999999976, 0.00014798600000000273, 0.00014863899999999902, 0.00014845899999999662, 0.00014780500000000085, 0.00014729100000000078, 0.0001479169999999974, 0.00014780600000000033, 0.00014880600000000133, 0.00014795799999999665, 0.00014820899999999637, 0.00014905600000000158, 0.00014829200000000126, 0.00014823600000000298, 0.0001485970000000003, 0.0001489450000000045, 0.0001473879999999983, 0.00014876400000000262, 0.00014731899999999992, 0.0001481250000000059, 0.00014823599999999604, 0.00014762499999999845, 0.00014844499999999705, 0.00014756900000000017, 0.00014851400000000237, 0.00014729200000000026, 0.00014816600000000513, 0.00014857000000000065]</msg>
<status status="PASS" starttime="20201110 08:39:39.939" endtime="20201110 08:39:39.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.928" endtime="20201110 08:39:39.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:39.952" endtime="20201110 08:39:39.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:39.961" endtime="20201110 08:39:39.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.956" endtime="20201110 08:39:39.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.947" endtime="20201110 08:39:39.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.425" endtime="20201110 08:39:39.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.424" endtime="20201110 08:39:39.987"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.010" endtime="20201110 08:39:40.034"></status>
</kw>
<msg timestamp="20201110 08:39:40.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:40.006" endtime="20201110 08:39:40.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:40.037" endtime="20201110 08:39:40.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.044" endtime="20201110 08:39:40.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.999" endtime="20201110 08:39:40.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.993" endtime="20201110 08:39:40.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.067" endtime="20201110 08:39:40.413"></status>
</kw>
<msg timestamp="20201110 08:39:40.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041442528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:40.064" endtime="20201110 08:39:40.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041292778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041442528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:40.423" endtime="20201110 08:39:40.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.442" endtime="20201110 08:39:40.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.057" endtime="20201110 08:39:40.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.052" endtime="20201110 08:39:40.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:40.461" level="INFO">${RESULT} = [{'time': 0.041442528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001497499999999971, 'source_diff': 0.0001497499999999971}, {'time': 0.041602875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:40.453" endtime="20201110 08:39:40.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:40.492" level="INFO">${ACCURACY} = {'source_diff': [0.0001497499999999971, 0.00014962500000000045, 0.00014836200000000604, 0.0001486529999999986, 0.00014894399999999808, 0.00014957000000000165, 0.0001484580000000041, 0.0001496939999999...</msg>
<status status="PASS" starttime="20201110 08:39:40.464" endtime="20201110 08:39:40.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.503" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:39:40.501" endtime="20201110 08:39:40.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.508" level="INFO">VALUE: [0.0001497499999999971, 0.00014962500000000045, 0.00014836200000000604, 0.0001486529999999986, 0.00014894399999999808, 0.00014957000000000165, 0.0001484580000000041, 0.00014969399999999883, 0.00014876399999999568, 0.00014893100000000492, 0.00014987499999999376, 0.00014862499999999945, 0.00014879200000000176, 0.0001498750000000007, 0.0001493750000000002, 0.00015022199999999847, 0.0001484169999999979, 0.00014834700000000006, 0.00014831900000000092, 0.00014969399999999883, 0.0001491949999999978, 0.00014897200000000416, 0.00014934700000000106, 0.00014858300000000074, 0.00014861099999999988, 0.0001493330000000015, 0.00015006899999999573, 0.00014848600000000323, 0.00015008300000000224, 0.00014969399999999883, 0.00014899999999999636, 0.00015002700000000396, 0.00014958399999999428, 0.00014938899999999977, 0.00014880600000000133, 0.00014875000000000305, 0.00014954100000000303, 0.00015005499999999616, 0.0001496800000000062, 0.00014863899999999902, 0.0001488200000000009, 0.00014913899999999952, 0.000148445000000004, 0.0001494729999999972, 0.0001499580000000056, 0.00014895799999999765, 0.00015005599999999564, 0.00014861199999999936, 0.00014851400000000237, 0.00014848600000000323]</msg>
<status status="PASS" starttime="20201110 08:39:40.505" endtime="20201110 08:39:40.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.494" endtime="20201110 08:39:40.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.518" endtime="20201110 08:39:40.521"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:40.527" endtime="20201110 08:39:40.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.522" endtime="20201110 08:39:40.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.513" endtime="20201110 08:39:40.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.989" endtime="20201110 08:39:40.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:39.988" endtime="20201110 08:39:40.553"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.576" endtime="20201110 08:39:40.600"></status>
</kw>
<msg timestamp="20201110 08:39:40.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:40.572" endtime="20201110 08:39:40.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:40.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:40.603" endtime="20201110 08:39:40.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.609" endtime="20201110 08:39:40.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.565" endtime="20201110 08:39:40.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.559" endtime="20201110 08:39:40.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:40.633" endtime="20201110 08:39:40.978"></status>
</kw>
<msg timestamp="20201110 08:39:40.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041176903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041327847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:40.630" endtime="20201110 08:39:40.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041176903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041327847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:40.987" endtime="20201110 08:39:41.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.006" endtime="20201110 08:39:41.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.622" endtime="20201110 08:39:41.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.618" endtime="20201110 08:39:41.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.025" level="INFO">${RESULT} = [{'time': 0.041327847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015094400000000008, 'source_diff': 0.00015094400000000008}, {'time': 0.041488167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:41.016" endtime="20201110 08:39:41.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:41.058" level="INFO">${ACCURACY} = {'source_diff': [0.00015094400000000008, 0.0001495420000000025, 0.00015027699999999727, 0.0001493200000000014, 0.00015076400000000462, 0.0001503750000000012, 0.000151042000000004, 0.000149957999999998...</msg>
<status status="PASS" starttime="20201110 08:39:41.027" endtime="20201110 08:39:41.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.069" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:39:41.066" endtime="20201110 08:39:41.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.074" level="INFO">VALUE: [0.00015094400000000008, 0.0001495420000000025, 0.00015027699999999727, 0.0001493200000000014, 0.00015076400000000462, 0.0001503750000000012, 0.000151042000000004, 0.00014995799999999865, 0.0001495970000000013, 0.00014986100000000113, 0.0001509450000000065, 0.0001494859999999973, 0.000149527999999996, 0.00014951399999999643, 0.00015072199999999897, 0.00014952800000000294, 0.00014966699999999916, 0.0001502499999999976, 0.0001508609999999952, 0.00015013900000000052, 0.00015106899999999673, 0.00014931900000000192, 0.00015043099999999948, 0.0001498750000000007, 0.00015051400000000437, 0.00015073600000000548, 0.00014979200000000276, 0.00015001399999999693, 0.00015076399999999768, 0.00015065299999999365, 0.00015030600000000283, 0.00015044399999999958, 0.00015122199999999947, 0.00014967999999999926, 0.00015077799999999725, 0.00015084800000000204, 0.0001493330000000015, 0.00015058300000000274, 0.00014947200000000466, 0.00014961100000000088, 0.0001495000000000038, 0.00015023600000000498, 0.00015088900000000127, 0.0001503750000000012, 0.00015043, 0.00015084700000000256, 0.00015070899999999887, 0.00014966699999999916, 0.0001495000000000038, 0.00014936100000000063]</msg>
<status status="PASS" starttime="20201110 08:39:41.071" endtime="20201110 08:39:41.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.060" endtime="20201110 08:39:41.077"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.084" endtime="20201110 08:39:41.086"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:41.092" endtime="20201110 08:39:41.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.088" endtime="20201110 08:39:41.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.079" endtime="20201110 08:39:41.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.555" endtime="20201110 08:39:41.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:40.554" endtime="20201110 08:39:41.118"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.141" endtime="20201110 08:39:41.165"></status>
</kw>
<msg timestamp="20201110 08:39:41.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.138" endtime="20201110 08:39:41.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.169" endtime="20201110 08:39:41.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.175" endtime="20201110 08:39:41.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.131" endtime="20201110 08:39:41.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.125" endtime="20201110 08:39:41.182"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.199" endtime="20201110 08:39:41.544"></status>
</kw>
<msg timestamp="20201110 08:39:41.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041249917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041400667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.195" endtime="20201110 08:39:41.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041249917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041400667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.554" endtime="20201110 08:39:41.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.572" endtime="20201110 08:39:41.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.188" endtime="20201110 08:39:41.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.183" endtime="20201110 08:39:41.579"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.590" level="INFO">${RESULT} = [{'time': 0.041400667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015075000000000505, 'source_diff': 0.00015075000000000505}, {'time': 0.041558875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:41.581" endtime="20201110 08:39:41.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:41.622" level="INFO">${ACCURACY} = {'source_diff': [0.00015075000000000505, 0.0001511530000000011, 0.00015047199999999872, 0.000152042000000005, 0.00015201399999999893, 0.00015125000000000555, 0.00015066700000000016, 0.0001512359999999...</msg>
<status status="PASS" starttime="20201110 08:39:41.592" endtime="20201110 08:39:41.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.633" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:39:41.630" endtime="20201110 08:39:41.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.638" level="INFO">VALUE: [0.00015075000000000505, 0.0001511530000000011, 0.00015047199999999872, 0.000152042000000005, 0.00015201399999999893, 0.00015125000000000555, 0.00015066700000000016, 0.00015123599999999904, 0.0001519859999999998, 0.0001513200000000034, 0.0001510970000000028, 0.00015126399999999818, 0.0001513059999999969, 0.0001515550000000046, 0.00015056899999999623, 0.00015080499999999691, 0.00015107000000000315, 0.0001514170000000009, 0.00015156900000000417, 0.0001509729999999987, 0.00015043, 0.00015138900000000177, 0.0001520699999999972, 0.0001512079999999999, 0.000151833000000004, 0.0001506249999999945, 0.00015044499999999905, 0.00015023599999999804, 0.00015205599999999764, 0.00015173599999999954, 0.00015094499999999955, 0.00015097199999999922, 0.0001515699999999967, 0.00015109699999999587, 0.00015191600000000194, 0.0001507780000000042, 0.00015051400000000437, 0.0001509170000000004, 0.0001507499999999981, 0.00015030600000000283, 0.00015166700000000116, 0.00015155599999999714, 0.00015176399999999868, 0.0001514170000000009, 0.00015140300000000134, 0.00015199999999999936, 0.0001513750000000022, 0.00015047199999999872, 0.00015025000000000455, 0.00015112500000000195]</msg>
<status status="PASS" starttime="20201110 08:39:41.635" endtime="20201110 08:39:41.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.624" endtime="20201110 08:39:41.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.648" endtime="20201110 08:39:41.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:41.656" endtime="20201110 08:39:41.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.652" endtime="20201110 08:39:41.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.643" endtime="20201110 08:39:41.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.120" endtime="20201110 08:39:41.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.119" endtime="20201110 08:39:41.683"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.706" endtime="20201110 08:39:41.730"></status>
</kw>
<msg timestamp="20201110 08:39:41.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.702" endtime="20201110 08:39:41.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:41.733" endtime="20201110 08:39:41.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.740" endtime="20201110 08:39:41.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.695" endtime="20201110 08:39:41.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.689" endtime="20201110 08:39:41.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.763" endtime="20201110 08:39:42.107"></status>
</kw>
<msg timestamp="20201110 08:39:42.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041235736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.760" endtime="20201110 08:39:42.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041235736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041388139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.117" endtime="20201110 08:39:42.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.135" endtime="20201110 08:39:42.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.753" endtime="20201110 08:39:42.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.748" endtime="20201110 08:39:42.143"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:42.153" level="INFO">${RESULT} = [{'time': 0.041388139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001524029999999954, 'source_diff': 0.0001524029999999954}, {'time': 0.041549389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:42.144" endtime="20201110 08:39:42.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:42.185" level="INFO">${ACCURACY} = {'source_diff': [0.0001524029999999954, 0.00015281999999999796, 0.00015302700000000002, 0.0001514859999999993, 0.0001520970000000038, 0.00015304199999999907, 0.00015149999999999886, 0.0001523190000000...</msg>
<status status="PASS" starttime="20201110 08:39:42.155" endtime="20201110 08:39:42.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.196" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:39:42.194" endtime="20201110 08:39:42.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.202" level="INFO">VALUE: [0.0001524029999999954, 0.00015281999999999796, 0.00015302700000000002, 0.0001514859999999993, 0.0001520970000000038, 0.00015304199999999907, 0.00015149999999999886, 0.00015231900000000492, 0.0001530829999999983, 0.0001528750000000037, 0.00015223600000000004, 0.00015145899999999962, 0.00015145899999999962, 0.0001517499999999991, 0.00015270900000000087, 0.00015249999999999986, 0.0001530279999999995, 0.00015212500000000295, 0.00015131999999999646, 0.00015145899999999962, 0.00015251399999999943, 0.00015270900000000087, 0.0001530279999999995, 0.00015255499999999866, 0.00015306899999999873, 0.0001527080000000014, 0.0001528620000000036, 0.00015179199999999782, 0.0001513330000000035, 0.00015163900000000202, 0.000151833000000004, 0.00015213900000000252, 0.0001520970000000038, 0.00015131899999999698, 0.0001529730000000007, 0.00015313899999999658, 0.00015144400000000058, 0.00015161099999999594, 0.0001526530000000026, 0.00015258400000000422, 0.00015259699999999737, 0.00015133299999999655, 0.0001521530000000021, 0.00015197200000000022, 0.00015161100000000288, 0.0001527500000000001, 0.00015151399999999843, 0.0001525829999999978, 0.0001519859999999998, 0.00015193100000000098]</msg>
<status status="PASS" starttime="20201110 08:39:42.199" endtime="20201110 08:39:42.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.187" endtime="20201110 08:39:42.205"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.212" endtime="20201110 08:39:42.214"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:42.220" endtime="20201110 08:39:42.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.215" endtime="20201110 08:39:42.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.207" endtime="20201110 08:39:42.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.685" endtime="20201110 08:39:42.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.683" endtime="20201110 08:39:42.246"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.269" endtime="20201110 08:39:42.293"></status>
</kw>
<msg timestamp="20201110 08:39:42.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:42.266" endtime="20201110 08:39:42.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:42.297" endtime="20201110 08:39:42.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.303" endtime="20201110 08:39:42.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.258" endtime="20201110 08:39:42.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.253" endtime="20201110 08:39:42.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.327" endtime="20201110 08:39:42.671"></status>
</kw>
<msg timestamp="20201110 08:39:42.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041170611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.323" endtime="20201110 08:39:42.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041170611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041323069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.680" endtime="20201110 08:39:42.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.699" endtime="20201110 08:39:42.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.316" endtime="20201110 08:39:42.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.311" endtime="20201110 08:39:42.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:42.716" level="INFO">${RESULT} = [{'time': 0.041323069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001524579999999942, 'source_diff': 0.0001524579999999942}, {'time': 0.041482389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:42.707" endtime="20201110 08:39:42.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:42.748" level="INFO">${ACCURACY} = {'source_diff': [0.0001524579999999942, 0.00015333299999999855, 0.0001529860000000008, 0.00015315200000000362, 0.00015330499999999941, 0.00015261099999999694, 0.00015266699999999522, 0.000152874999999...</msg>
<status status="PASS" starttime="20201110 08:39:42.718" endtime="20201110 08:39:42.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.759" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:39:42.757" endtime="20201110 08:39:42.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.765" level="INFO">VALUE: [0.0001524579999999942, 0.00015333299999999855, 0.0001529860000000008, 0.00015315200000000362, 0.00015330499999999941, 0.00015261099999999694, 0.00015266699999999522, 0.00015287499999999676, 0.0001537500000000011, 0.00015379100000000034, 0.00015381899999999948, 0.00015405500000000016, 0.00015262500000000345, 0.0001539029999999969, 0.00015301399999999993, 0.00015316599999999625, 0.00015327799999999975, 0.00015334700000000506, 0.0001524860000000003, 0.0001540829999999993, 0.00015281999999999796, 0.00015251399999999943, 0.00015268100000000173, 0.00015251399999999943, 0.0001529029999999959, 0.0001523750000000032, 0.00015409699999999887, 0.00015293100000000198, 0.0001534170000000029, 0.00015316699999999572, 0.00015387499999999776, 0.00015244400000000158, 0.00015412499999999801, 0.00015261100000000388, 0.0001524579999999942, 0.00015247200000000072, 0.0001524170000000019, 0.00015261100000000388, 0.00015338899999999683, 0.00015263899999999608, 0.0001537630000000012, 0.0001528479999999971, 0.00015397199999999528, 0.00015376400000000068, 0.000153124999999997, 0.00015249999999999986, 0.00015365199999999718, 0.00015301399999999993, 0.0001523750000000032, 0.00015263899999999608]</msg>
<status status="PASS" starttime="20201110 08:39:42.762" endtime="20201110 08:39:42.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.750" endtime="20201110 08:39:42.768"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.776" endtime="20201110 08:39:42.779"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:42.785" endtime="20201110 08:39:42.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.781" endtime="20201110 08:39:42.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.770" endtime="20201110 08:39:42.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.248" endtime="20201110 08:39:42.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.247" endtime="20201110 08:39:42.812"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.835" endtime="20201110 08:39:42.859"></status>
</kw>
<msg timestamp="20201110 08:39:42.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:42.831" endtime="20201110 08:39:42.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:42.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:42.863" endtime="20201110 08:39:42.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.869" endtime="20201110 08:39:42.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.824" endtime="20201110 08:39:42.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.818" endtime="20201110 08:39:42.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:42.893" endtime="20201110 08:39:43.237"></status>
</kw>
<msg timestamp="20201110 08:39:43.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041455069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041609819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:42.889" endtime="20201110 08:39:43.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041455069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041609819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:43.247" endtime="20201110 08:39:43.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.265" endtime="20201110 08:39:43.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.882" endtime="20201110 08:39:43.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.877" endtime="20201110 08:39:43.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:43.283" level="INFO">${RESULT} = [{'time': 0.041609819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001547500000000021, 'source_diff': 0.0001547500000000021}, {'time': 0.041771125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:43.274" endtime="20201110 08:39:43.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:43.316" level="INFO">${ACCURACY} = {'source_diff': [0.0001547500000000021, 0.00015383299999999905, 0.00015368000000000326, 0.00015341699999999597, 0.0001547500000000021, 0.0001534860000000013, 0.00015449999999999492, 0.0001543749999999...</msg>
<status status="PASS" starttime="20201110 08:39:43.285" endtime="20201110 08:39:43.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.327" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:39:43.325" endtime="20201110 08:39:43.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.333" level="INFO">VALUE: [0.0001547500000000021, 0.00015383299999999905, 0.00015368000000000326, 0.00015341699999999597, 0.0001547500000000021, 0.0001534860000000013, 0.00015449999999999492, 0.00015437499999999826, 0.00015500000000000236, 0.00015452799999999406, 0.0001540280000000005, 0.00015442999999999707, 0.00015420799999999596, 0.0001541530000000041, 0.0001545410000000011, 0.00015427700000000127, 0.00015347200000000172, 0.00015456900000000023, 0.00015509699999999987, 0.00015361199999999742, 0.0001535829999999988, 0.00015456900000000023, 0.00015474999999999517, 0.00015493099999999704, 0.00015411199999999792, 0.00015401400000000093, 0.00015386199999999767, 0.00015440199999999793, 0.00015326400000000018, 0.00015341699999999597, 0.00015327700000000027, 0.00015474999999999517, 0.0001543750000000052, 0.00015400000000000136, 0.00015376400000000068, 0.00015444399999999664, 0.0001539730000000017, 0.00015405500000000016, 0.00015526400000000218, 0.00015361199999999742, 0.00015413900000000452, 0.00015422199999999553, 0.00015519499999999686, 0.0001547500000000021, 0.00015437499999999826, 0.0001532500000000006, 0.00015411200000000486, 0.00015393100000000298, 0.000154528000000001, 0.00015381999999999896]</msg>
<status status="PASS" starttime="20201110 08:39:43.330" endtime="20201110 08:39:43.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.318" endtime="20201110 08:39:43.340"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.347" endtime="20201110 08:39:43.350"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:43.355" endtime="20201110 08:39:43.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.351" endtime="20201110 08:39:43.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.342" endtime="20201110 08:39:43.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.814" endtime="20201110 08:39:43.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:42.812" endtime="20201110 08:39:43.381"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.404" endtime="20201110 08:39:43.429"></status>
</kw>
<msg timestamp="20201110 08:39:43.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:43.401" endtime="20201110 08:39:43.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:43.432" endtime="20201110 08:39:43.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.438" endtime="20201110 08:39:43.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.394" endtime="20201110 08:39:43.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.388" endtime="20201110 08:39:43.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.462" endtime="20201110 08:39:43.807"></status>
</kw>
<msg timestamp="20201110 08:39:43.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041080361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041235222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:43.459" endtime="20201110 08:39:43.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041080361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041235222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:43.816" endtime="20201110 08:39:43.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.835" endtime="20201110 08:39:43.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.451" endtime="20201110 08:39:43.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.447" endtime="20201110 08:39:43.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:43.853" level="INFO">${RESULT} = [{'time': 0.041235222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001548609999999992, 'source_diff': 0.0001548609999999992}, {'time': 0.041397542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:43.844" endtime="20201110 08:39:43.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:43.884" level="INFO">${ACCURACY} = {'source_diff': [0.0001548609999999992, 0.0001553479999999996, 0.00015588799999999986, 0.0001561530000000061, 0.00015447199999999578, 0.00015554200000000157, 0.00015547200000000372, 0.0001554169999999...</msg>
<status status="PASS" starttime="20201110 08:39:43.855" endtime="20201110 08:39:43.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.896" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:39:43.893" endtime="20201110 08:39:43.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.902" level="INFO">VALUE: [0.0001548609999999992, 0.0001553479999999996, 0.00015588799999999986, 0.0001561530000000061, 0.00015447199999999578, 0.00015554200000000157, 0.00015547200000000372, 0.00015541699999999797, 0.00015559700000000037, 0.00015594399999999814, 0.00015444400000000358, 0.00015554200000000157, 0.0001560410000000026, 0.00015433399999999903, 0.00015488899999999833, 0.00015527800000000175, 0.00015451400000000143, 0.00015462499999999851, 0.00015555500000000166, 0.00015580500000000191, 0.0001546939999999969, 0.000155528000000002, 0.00015449999999999492, 0.00015462499999999851, 0.00015501400000000193, 0.00015570799999999746, 0.00015608400000000078, 0.00015522199999999653, 0.00015600000000000336, 0.00015492999999999757, 0.00015463900000000502, 0.00015612500000000001, 0.00015520799999999696, 0.00015456900000000023, 0.00015594399999999814, 0.00015574999999999617, 0.0001554579999999972, 0.00015609700000000087, 0.00015433399999999903, 0.00015480500000000091, 0.00015594500000000455, 0.00015463899999999808, 0.00015598700000000326, 0.0001559579999999977, 0.00015559700000000037, 0.0001543330000000065, 0.00015498599999999585, 0.00015588899999999933, 0.0001561939999999984, 0.0001560410000000026]</msg>
<status status="PASS" starttime="20201110 08:39:43.899" endtime="20201110 08:39:43.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.886" endtime="20201110 08:39:43.905"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.912" endtime="20201110 08:39:43.914"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:43.920" endtime="20201110 08:39:43.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.915" endtime="20201110 08:39:43.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.907" endtime="20201110 08:39:43.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.384" endtime="20201110 08:39:43.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.382" endtime="20201110 08:39:43.946"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.969" endtime="20201110 08:39:43.993"></status>
</kw>
<msg timestamp="20201110 08:39:43.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:43.966" endtime="20201110 08:39:43.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:43.997" endtime="20201110 08:39:44.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.003" endtime="20201110 08:39:44.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.958" endtime="20201110 08:39:44.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.953" endtime="20201110 08:39:44.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.027" endtime="20201110 08:39:44.372"></status>
</kw>
<msg timestamp="20201110 08:39:44.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041434542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.024" endtime="20201110 08:39:44.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041278278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041434542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.381" endtime="20201110 08:39:44.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.400" endtime="20201110 08:39:44.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.016" endtime="20201110 08:39:44.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.012" endtime="20201110 08:39:44.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:44.417" level="INFO">${RESULT} = [{'time': 0.041434542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015626399999999624, 'source_diff': 0.00015626399999999624}, {'time': 0.041599903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:44.408" endtime="20201110 08:39:44.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:44.448" level="INFO">${ACCURACY} = {'source_diff': [0.00015626399999999624, 0.00015570900000000387, 0.00015562499999999951, 0.00015563899999999908, 0.00015688900000000033, 0.00015729199999999638, 0.00015584700000000062, 0.0001554730000...</msg>
<status status="PASS" starttime="20201110 08:39:44.420" endtime="20201110 08:39:44.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.459" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:39:44.457" endtime="20201110 08:39:44.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.465" level="INFO">VALUE: [0.00015626399999999624, 0.00015570900000000387, 0.00015562499999999951, 0.00015563899999999908, 0.00015688900000000033, 0.00015729199999999638, 0.00015584700000000062, 0.0001554730000000032, 0.00015545900000000362, 0.00015658299999999487, 0.00015545800000000415, 0.00015679200000000282, 0.000156013999999996, 0.00015674999999999717, 0.00015626400000000318, 0.00015708299999999537, 0.00015655500000000266, 0.000155528000000002, 0.0001555410000000021, 0.00015551400000000243, 0.00015672200000000497, 0.00015619400000000533, 0.00015532000000000046, 0.00015643099999999854, 0.00015638899999999983, 0.00015688900000000033, 0.00015584700000000062, 0.00015569499999999736, 0.0001560830000000013, 0.0001570559999999957, 0.00015599999999999642, 0.0001556660000000057, 0.00015555500000000166, 0.00015647199999999778, 0.00015580499999999498, 0.00015572200000000397, 0.00015670799999999846, 0.00015611199999999992, 0.0001572359999999981, 0.0001568060000000024, 0.000156610999999994, 0.0001558480000000001, 0.00015580500000000191, 0.000156013999999996, 0.00015588899999999933, 0.00015693099999999904, 0.00015658400000000128, 0.00015715300000000015, 0.00015698599999999785, 0.00015568000000000526]</msg>
<status status="PASS" starttime="20201110 08:39:44.462" endtime="20201110 08:39:44.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.450" endtime="20201110 08:39:44.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.476" endtime="20201110 08:39:44.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:44.484" endtime="20201110 08:39:44.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.480" endtime="20201110 08:39:44.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.471" endtime="20201110 08:39:44.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.948" endtime="20201110 08:39:44.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.947" endtime="20201110 08:39:44.511"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.534" endtime="20201110 08:39:44.560"></status>
</kw>
<msg timestamp="20201110 08:39:44.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:44.530" endtime="20201110 08:39:44.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:44.564" endtime="20201110 08:39:44.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.572" endtime="20201110 08:39:44.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.523" endtime="20201110 08:39:44.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.517" endtime="20201110 08:39:44.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.602" endtime="20201110 08:39:44.949"></status>
</kw>
<msg timestamp="20201110 08:39:44.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041745833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.598" endtime="20201110 08:39:44.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041745833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.958" endtime="20201110 08:39:44.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.977" endtime="20201110 08:39:44.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.590" endtime="20201110 08:39:44.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.584" endtime="20201110 08:39:44.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:44.995" level="INFO">${RESULT} = [{'time': 0.041902167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001563339999999941, 'source_diff': 0.0001563339999999941}, {'time': 0.042067514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:44.986" endtime="20201110 08:39:44.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:45.026" level="INFO">${ACCURACY} = {'source_diff': [0.0001563339999999941, 0.0001580700000000032, 0.0001579030000000009, 0.00015738900000000083, 0.00015748599999999835, 0.00015717999999999982, 0.0001571950000000058, 0.00015647200000000...</msg>
<status status="PASS" starttime="20201110 08:39:44.997" endtime="20201110 08:39:45.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.037" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:39:45.035" endtime="20201110 08:39:45.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.042" level="INFO">VALUE: [0.0001563339999999941, 0.0001580700000000032, 0.0001579030000000009, 0.00015738900000000083, 0.00015748599999999835, 0.00015717999999999982, 0.0001571950000000058, 0.00015647200000000472, 0.00015631899999999505, 0.00015713900000000058, 0.00015655600000000214, 0.0001564029999999994, 0.0001581950000000068, 0.0001574030000000004, 0.00015808400000000278, 0.00015647199999999778, 0.00015683299999999512, 0.00015777699999999784, 0.00015759800000000185, 0.00015634699999999419, 0.0001570559999999957, 0.00015805500000000416, 0.00015637500000000026, 0.00015666699999999922, 0.0001566380000000006, 0.00015726400000000418, 0.00015670799999999846, 0.00015687500000000076, 0.00015813900000000158, 0.00015682000000000196, 0.00015804200000000407, 0.0001574449999999991, 0.00015811100000000244, 0.00015743000000000007, 0.00015684700000000162, 0.0001572779999999968, 0.00015669400000000583, 0.00015772199999999903, 0.00015777699999999784, 0.0001563480000000006, 0.00015726399999999724, 0.0001571939999999994, 0.00015733300000000255, 0.00015626400000000318, 0.00015631900000000198, 0.00015801400000000493, 0.00015667999999999932, 0.0001568610000000012, 0.00015659700000000137, 0.00015634700000000112]</msg>
<status status="PASS" starttime="20201110 08:39:45.039" endtime="20201110 08:39:45.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.028" endtime="20201110 08:39:45.046"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.052" endtime="20201110 08:39:45.056"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:45.062" endtime="20201110 08:39:45.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.057" endtime="20201110 08:39:45.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.047" endtime="20201110 08:39:45.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.513" endtime="20201110 08:39:45.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.512" endtime="20201110 08:39:45.089"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.115" endtime="20201110 08:39:45.140"></status>
</kw>
<msg timestamp="20201110 08:39:45.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:45.112" endtime="20201110 08:39:45.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:45.143" endtime="20201110 08:39:45.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.149" endtime="20201110 08:39:45.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.104" endtime="20201110 08:39:45.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.097" endtime="20201110 08:39:45.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.173" endtime="20201110 08:39:45.517"></status>
</kw>
<msg timestamp="20201110 08:39:45.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045197542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045355278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:45.170" endtime="20201110 08:39:45.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045197542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045355278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:45.526" endtime="20201110 08:39:45.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.545" endtime="20201110 08:39:45.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.162" endtime="20201110 08:39:45.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.158" endtime="20201110 08:39:45.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:45.563" level="INFO">${RESULT} = [{'time': 0.045355278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001577359999999986, 'source_diff': 0.0001577359999999986}, {'time': 0.045518597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:45.554" endtime="20201110 08:39:45.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:45.596" level="INFO">${ACCURACY} = {'source_diff': [0.0001577359999999986, 0.00015822199999999953, 0.00015916700000000172, 0.000158222999999999, 0.00015730599999999595, 0.00015732000000000246, 0.00015797199999999928, 0.0001577909999999...</msg>
<status status="PASS" starttime="20201110 08:39:45.565" endtime="20201110 08:39:45.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.607" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:39:45.605" endtime="20201110 08:39:45.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.613" level="INFO">VALUE: [0.0001577359999999986, 0.00015822199999999953, 0.00015916700000000172, 0.000158222999999999, 0.00015730599999999595, 0.00015732000000000246, 0.00015797199999999928, 0.0001577909999999974, 0.00015812500000000201, 0.00015763900000000108, 0.0001575830000000028, 0.00015911100000000344, 0.0001584450000000001, 0.00015820899999999943, 0.00015732000000000246, 0.00015874999999999917, 0.00015897299999999975, 0.0001591940000000014, 0.00015780499999999698, 0.00015912499999999608, 0.00015738900000000083, 0.00015826399999999824, 0.00015731900000000298, 0.00015874999999999917, 0.00015818000000000082, 0.00015899999999999942, 0.00015798599999999885, 0.00015790200000000143, 0.00015892999999999463, 0.00015909700000000387, 0.00015874999999999917, 0.00015861100000000294, 0.00015733299999999562, 0.00015891700000000147, 0.00015859699999999644, 0.00015818000000000082, 0.0001576939999999999, 0.00015826400000000518, 0.0001578610000000022, 0.00015909700000000387, 0.00015737500000000126, 0.00015897200000000028, 0.00015802799999999756, 0.0001576809999999998, 0.00015809700000000287, 0.00015861100000000294, 0.00015880499999999798, 0.00015749999999999792, 0.0001589439999999942, 0.00015791700000000047]</msg>
<status status="PASS" starttime="20201110 08:39:45.610" endtime="20201110 08:39:45.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.598" endtime="20201110 08:39:45.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.623" endtime="20201110 08:39:45.626"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:45.632" endtime="20201110 08:39:45.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.627" endtime="20201110 08:39:45.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.618" endtime="20201110 08:39:45.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.092" endtime="20201110 08:39:45.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.090" endtime="20201110 08:39:45.660"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.683" endtime="20201110 08:39:45.707"></status>
</kw>
<msg timestamp="20201110 08:39:45.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:45.679" endtime="20201110 08:39:45.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:45.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:45.711" endtime="20201110 08:39:45.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.717" endtime="20201110 08:39:45.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.672" endtime="20201110 08:39:45.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.666" endtime="20201110 08:39:45.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:45.741" endtime="20201110 08:39:46.088"></status>
</kw>
<msg timestamp="20201110 08:39:46.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04277125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:45.737" endtime="20201110 08:39:46.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042611625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04277125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:46.097" endtime="20201110 08:39:46.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.116" endtime="20201110 08:39:46.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.730" endtime="20201110 08:39:46.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.725" endtime="20201110 08:39:46.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:46.133" level="INFO">${RESULT} = [{'time': 0.04277125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00015962499999999658, 'source_diff': 0.00015962499999999658}, {'time': 0.042937667, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:39:46.124" endtime="20201110 08:39:46.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:46.164" level="INFO">${ACCURACY} = {'source_diff': [0.00015962499999999658, 0.00015841700000000097, 0.00015884700000000362, 0.00015993100000000204, 0.00015997200000000128, 0.0001589019999999955, 0.00015852799999999806, 0.00015973600000...</msg>
<status status="PASS" starttime="20201110 08:39:46.135" endtime="20201110 08:39:46.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.175" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:39:46.173" endtime="20201110 08:39:46.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.181" level="INFO">VALUE: [0.00015962499999999658, 0.00015841700000000097, 0.00015884700000000362, 0.00015993100000000204, 0.00015997200000000128, 0.0001589019999999955, 0.00015852799999999806, 0.0001597360000000006, 0.00016009699999999794, 0.00015931899999999805, 0.00015880499999999798, 0.00015886099999999626, 0.000159013999999999, 0.00015838900000000183, 0.00015884699999999669, 0.0001585700000000037, 0.0001585689999999973, 0.0001597360000000006, 0.00015859699999999644, 0.00015898599999999985, 0.00015880599999999745, 0.0001598889999999964, 0.00015870800000000046, 0.00015919500000000086, 0.00015865300000000165, 0.00015943100000000154, 0.00015941700000000197, 0.00015979200000000582, 0.00015841700000000097, 0.0001585139999999985, 0.00016019399999999545, 0.00015938900000000283, 0.00015924999999999967, 0.00015993100000000204, 0.00015938900000000283, 0.00015943000000000207, 0.00015922200000000053, 0.0001587909999999984, 0.00015984699999999769, 0.00015872200000000003, 0.00015912500000000301, 0.00015941599999999556, 0.00015949999999999992, 0.00015899999999999942, 0.00015941700000000197, 0.00015926399999999924, 0.00015993000000000257, 0.0001584450000000001, 0.00016005499999999923, 0.00015902799999999856]</msg>
<status status="PASS" starttime="20201110 08:39:46.178" endtime="20201110 08:39:46.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.166" endtime="20201110 08:39:46.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.191" endtime="20201110 08:39:46.193"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:46.199" endtime="20201110 08:39:46.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.195" endtime="20201110 08:39:46.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.186" endtime="20201110 08:39:46.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.662" endtime="20201110 08:39:46.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:45.661" endtime="20201110 08:39:46.225"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.250" endtime="20201110 08:39:46.274"></status>
</kw>
<msg timestamp="20201110 08:39:46.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:46.247" endtime="20201110 08:39:46.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:46.278" endtime="20201110 08:39:46.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.284" endtime="20201110 08:39:46.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.239" endtime="20201110 08:39:46.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.232" endtime="20201110 08:39:46.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.308" endtime="20201110 08:39:46.652"></status>
</kw>
<msg timestamp="20201110 08:39:46.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042973542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043133694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:46.305" endtime="20201110 08:39:46.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042973542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043133694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:46.662" endtime="20201110 08:39:46.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.681" endtime="20201110 08:39:46.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.297" endtime="20201110 08:39:46.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.293" endtime="20201110 08:39:46.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:46.698" level="INFO">${RESULT} = [{'time': 0.043133694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016015199999999674, 'source_diff': 0.00016015199999999674}, {'time': 0.043300014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:46.689" endtime="20201110 08:39:46.699"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:46.729" level="INFO">${ACCURACY} = {'source_diff': [0.00016015199999999674, 0.00015965299999999572, 0.00016054199999999963, 0.00015954199999999863, 0.000161223000000002, 0.00016080599999999945, 0.0001610559999999997, 0.0001600419999999...</msg>
<status status="PASS" starttime="20201110 08:39:46.700" endtime="20201110 08:39:46.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.740" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:39:46.738" endtime="20201110 08:39:46.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.745" level="INFO">VALUE: [0.00016015199999999674, 0.00015965299999999572, 0.00016054199999999963, 0.00015954199999999863, 0.000161223000000002, 0.00016080599999999945, 0.0001610559999999997, 0.00016004199999999913, 0.00015981900000000548, 0.00016040299999999647, 0.00016047200000000178, 0.00015970799999999452, 0.0001592909999999989, 0.00016059699999999844, 0.00015968000000000232, 0.00016022200000000153, 0.00015934700000000412, 0.00016072200000000203, 0.00016097200000000228, 0.00016018099999999535, 0.00015948600000000035, 0.00016018000000000282, 0.00015965200000000318, 0.0001605559999999992, 0.00016076400000000074, 0.0001603610000000047, 0.0001607219999999951, 0.00015969399999999495, 0.00015970800000000146, 0.00015963900000000308, 0.00015949999999999992, 0.00015994499999999467, 0.00016120800000000296, 0.00015963899999999615, 0.00015951300000000002, 0.00015962500000000351, 0.0001599019999999965, 0.00016079199999999988, 0.00016112500000000501, 0.00015934700000000412, 0.0001610559999999997, 0.00016048600000000135, 0.0001592909999999989, 0.00016080499999999998, 0.00016023700000000057, 0.00016030599999999895, 0.00016108299999999937, 0.0001594439999999947, 0.00016011199999999698, 0.00016056999999999877]</msg>
<status status="PASS" starttime="20201110 08:39:46.742" endtime="20201110 08:39:46.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.731" endtime="20201110 08:39:46.749"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.755" endtime="20201110 08:39:46.758"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:46.764" endtime="20201110 08:39:46.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.759" endtime="20201110 08:39:46.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.750" endtime="20201110 08:39:46.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.227" endtime="20201110 08:39:46.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.226" endtime="20201110 08:39:46.790"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.813" endtime="20201110 08:39:46.837"></status>
</kw>
<msg timestamp="20201110 08:39:46.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:46.809" endtime="20201110 08:39:46.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:46.841" endtime="20201110 08:39:46.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.847" endtime="20201110 08:39:46.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.802" endtime="20201110 08:39:46.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.796" endtime="20201110 08:39:46.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.873" endtime="20201110 08:39:47.216"></status>
</kw>
<msg timestamp="20201110 08:39:47.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041227542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041389153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:46.870" endtime="20201110 08:39:47.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041227542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041389153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.226" endtime="20201110 08:39:47.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.245" endtime="20201110 08:39:47.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.862" endtime="20201110 08:39:47.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.857" endtime="20201110 08:39:47.252"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.262" level="INFO">${RESULT} = [{'time': 0.041389153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000161610999999999, 'source_diff': 0.000161610999999999}, {'time': 0.041555556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:47.253" endtime="20201110 08:39:47.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:47.293" level="INFO">${ACCURACY} = {'source_diff': [0.000161610999999999, 0.00016131999999999952, 0.0001619859999999959, 0.00016119499999999592, 0.00016066699999999629, 0.0001607360000000016, 0.00016058399999999834, 0.00016073600000000...</msg>
<status status="PASS" starttime="20201110 08:39:47.264" endtime="20201110 08:39:47.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.304" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:39:47.302" endtime="20201110 08:39:47.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.309" level="INFO">VALUE: [0.000161610999999999, 0.00016131999999999952, 0.0001619859999999959, 0.00016119499999999592, 0.00016066699999999629, 0.0001607360000000016, 0.00016058399999999834, 0.0001607360000000016, 0.00016216699999999779, 0.00016176400000000174, 0.00016050000000000092, 0.0001619859999999959, 0.00016087499999999783, 0.0001612780000000008, 0.00016081899999999955, 0.000162014000000002, 0.00016047200000000178, 0.00016182000000000002, 0.00016088900000000433, 0.0001603610000000047, 0.00016162499999999858, 0.00016052800000000006, 0.00016112499999999808, 0.00016181900000000055, 0.00016087500000000476, 0.00016195799999999677, 0.00016087500000000476, 0.00016131999999999952, 0.0001614439999999967, 0.0001607910000000004, 0.00016173599999999566, 0.0001612780000000008, 0.0001609030000000039, 0.00016044400000000264, 0.00016038800000000436, 0.00016147200000000278, 0.00016130599999999995, 0.00016131999999999952, 0.0001619030000000049, 0.00016131900000000005, 0.00016084699999999869, 0.00016052800000000006, 0.00016090299999999697, 0.00016044400000000264, 0.00016034700000000512, 0.00016097199999999534, 0.0001618339999999996, 0.0001621109999999995, 0.00016075000000000117, 0.0001607360000000016]</msg>
<status status="PASS" starttime="20201110 08:39:47.306" endtime="20201110 08:39:47.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.295" endtime="20201110 08:39:47.312"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.319" endtime="20201110 08:39:47.322"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:47.327" endtime="20201110 08:39:47.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.323" endtime="20201110 08:39:47.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.314" endtime="20201110 08:39:47.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.792" endtime="20201110 08:39:47.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.791" endtime="20201110 08:39:47.353"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.376" endtime="20201110 08:39:47.401"></status>
</kw>
<msg timestamp="20201110 08:39:47.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:47.373" endtime="20201110 08:39:47.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:47.405" endtime="20201110 08:39:47.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.411" endtime="20201110 08:39:47.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.366" endtime="20201110 08:39:47.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.360" endtime="20201110 08:39:47.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.436" endtime="20201110 08:39:47.780"></status>
</kw>
<msg timestamp="20201110 08:39:47.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041195653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041358792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.433" endtime="20201110 08:39:47.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041195653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041358792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.789" endtime="20201110 08:39:47.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.808" endtime="20201110 08:39:47.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.424" endtime="20201110 08:39:47.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.419" endtime="20201110 08:39:47.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.826" level="INFO">${RESULT} = [{'time': 0.041358792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016313899999999965, 'source_diff': 0.00016313899999999965}, {'time': 0.041527236, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:47.816" endtime="20201110 08:39:47.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:47.858" level="INFO">${ACCURACY} = {'source_diff': [0.00016313899999999965, 0.0001621109999999995, 0.00016262499999999958, 0.0001615140000000015, 0.00016187499999999883, 0.00016308300000000137, 0.00016212499999999908, 0.000162902999999...</msg>
<status status="PASS" starttime="20201110 08:39:47.828" endtime="20201110 08:39:47.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.870" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:39:47.867" endtime="20201110 08:39:47.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.875" level="INFO">VALUE: [0.00016313899999999965, 0.0001621109999999995, 0.00016262499999999958, 0.0001615140000000015, 0.00016187499999999883, 0.00016308300000000137, 0.00016212499999999908, 0.00016290299999999897, 0.00016309700000000094, 0.00016154200000000063, 0.0001623889999999989, 0.00016309700000000094, 0.00016154100000000116, 0.00016186099999999926, 0.0001622780000000018, 0.00016262499999999958, 0.00016169500000000336, 0.00016163899999999815, 0.00016163900000000508, 0.00016226400000000224, 0.0001630980000000004, 0.00016240299999999847, 0.00016213899999999865, 0.00016220900000000343, 0.0001627780000000023, 0.00016241599999999856, 0.00016312500000000008, 0.00016163899999999815, 0.00016279099999999547, 0.00016133299999999962, 0.0001630549999999953, 0.00016131999999999952, 0.0001615560000000002, 0.00016280600000000145, 0.0001622910000000019, 0.00016191699999999754, 0.0001628340000000006, 0.00016163899999999815, 0.00016187499999999883, 0.00016158399999999934, 0.0001621940000000044, 0.00016230500000000148, 0.0001620560000000007, 0.00016241699999999804, 0.00016133299999999962, 0.00016308400000000084, 0.0001632769999999964, 0.0001612639999999943, 0.0001625560000000012, 0.0001627780000000023]</msg>
<status status="PASS" starttime="20201110 08:39:47.872" endtime="20201110 08:39:47.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.860" endtime="20201110 08:39:47.878"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.885" endtime="20201110 08:39:47.887"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:47.893" endtime="20201110 08:39:47.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.889" endtime="20201110 08:39:47.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.880" endtime="20201110 08:39:47.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.356" endtime="20201110 08:39:47.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.354" endtime="20201110 08:39:47.919"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.942" endtime="20201110 08:39:47.967"></status>
</kw>
<msg timestamp="20201110 08:39:47.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:47.939" endtime="20201110 08:39:47.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:47.970" endtime="20201110 08:39:47.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.977" endtime="20201110 08:39:47.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.932" endtime="20201110 08:39:47.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.926" endtime="20201110 08:39:47.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.000" endtime="20201110 08:39:48.349"></status>
</kw>
<msg timestamp="20201110 08:39:48.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:47.997" endtime="20201110 08:39:48.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:48.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041097819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041261444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:48.358" endtime="20201110 08:39:48.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.377" endtime="20201110 08:39:48.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.990" endtime="20201110 08:39:48.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.985" endtime="20201110 08:39:48.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:48.394" level="INFO">${RESULT} = [{'time': 0.041261444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016362500000000058, 'source_diff': 0.00016362500000000058}, {'time': 0.041431847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:48.385" endtime="20201110 08:39:48.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:48.424" level="INFO">${ACCURACY} = {'source_diff': [0.00016362500000000058, 0.00016284700000000069, 0.00016350000000000392, 0.0001628889999999994, 0.00016286100000000026, 0.00016273699999999613, 0.00016299999999999648, 0.00016381900000...</msg>
<status status="PASS" starttime="20201110 08:39:48.396" endtime="20201110 08:39:48.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:48.435" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:39:48.433" endtime="20201110 08:39:48.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:48.441" level="INFO">VALUE: [0.00016362500000000058, 0.00016284700000000069, 0.00016350000000000392, 0.0001628889999999994, 0.00016286100000000026, 0.00016273699999999613, 0.00016299999999999648, 0.00016381900000000255, 0.0001631110000000005, 0.00016269399999999795, 0.0001625140000000025, 0.0001635839999999944, 0.00016408400000000184, 0.00016394499999999868, 0.0001627219999999971, 0.00016341699999999904, 0.00016340299999999947, 0.00016392999999999963, 0.00016290299999999897, 0.00016327799999999587, 0.00016351399999999655, 0.00016323599999999716, 0.00016395799999999877, 0.00016326300000000377, 0.0001631659999999993, 0.00016420800000000596, 0.000163402, 0.00016395799999999877, 0.0001635140000000035, 0.00016383300000000212, 0.00016319399999999845, 0.00016377799999999637, 0.00016412500000000108, 0.00016286100000000026, 0.0001625140000000025, 0.00016320799999999802, 0.00016291699999999854, 0.00016418099999999936, 0.00016301399999999605, 0.00016341699999999904, 0.00016234799999999966, 0.0001632089999999975, 0.00016319500000000486, 0.0001640839999999949, 0.0001637639999999968, 0.00016398700000000432, 0.00016319399999999845, 0.00016330499999999554, 0.00016361099999999407, 0.00016307000000000127]</msg>
<status status="PASS" starttime="20201110 08:39:48.438" endtime="20201110 08:39:48.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.426" endtime="20201110 08:39:48.449"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.456" endtime="20201110 08:39:48.458"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:48.464" endtime="20201110 08:39:48.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.460" endtime="20201110 08:39:48.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.451" endtime="20201110 08:39:48.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.921" endtime="20201110 08:39:48.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.920" endtime="20201110 08:39:48.490"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.513" endtime="20201110 08:39:48.538"></status>
</kw>
<msg timestamp="20201110 08:39:48.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:48.510" endtime="20201110 08:39:48.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:48.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:48.541" endtime="20201110 08:39:48.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.548" endtime="20201110 08:39:48.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.503" endtime="20201110 08:39:48.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.497" endtime="20201110 08:39:48.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.572" endtime="20201110 08:39:48.919"></status>
</kw>
<msg timestamp="20201110 08:39:48.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041373097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:48.568" endtime="20201110 08:39:48.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:48.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041208639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041373097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:48.929" endtime="20201110 08:39:48.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:48.948" endtime="20201110 08:39:48.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.561" endtime="20201110 08:39:48.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.556" endtime="20201110 08:39:48.955"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:48.965" level="INFO">${RESULT} = [{'time': 0.041373097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016445799999999927, 'source_diff': 0.00016445799999999927}, {'time': 0.041545431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:48.956" endtime="20201110 08:39:48.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:48.996" level="INFO">${ACCURACY} = {'source_diff': [0.00016445799999999927, 0.00016447299999999831, 0.0001637219999999981, 0.00016512500000000208, 0.00016480600000000345, 0.0001634859999999974, 0.0001637219999999981, 0.0001650000000000...</msg>
<status status="PASS" starttime="20201110 08:39:48.967" endtime="20201110 08:39:48.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.007" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:39:49.005" endtime="20201110 08:39:49.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.012" level="INFO">VALUE: [0.00016445799999999927, 0.00016447299999999831, 0.0001637219999999981, 0.00016512500000000208, 0.00016480600000000345, 0.0001634859999999974, 0.0001637219999999981, 0.00016500000000000542, 0.0001644439999999997, 0.00016477799999999737, 0.00016420799999999902, 0.00016387500000000083, 0.00016334700000000119, 0.0001633340000000011, 0.00016508300000000337, 0.00016469500000000636, 0.00016347199999999784, 0.00016495799999999977, 0.00016445799999999927, 0.00016333300000000162, 0.00016513900000000165, 0.00016355599999999526, 0.000163708999999998, 0.00016373599999999766, 0.00016337500000000033, 0.00016455599999999626, 0.00016336100000000076, 0.00016408300000000237, 0.00016329199999999544, 0.00016491700000000054, 0.00016359700000000144, 0.00016408300000000237, 0.00016383300000000212, 0.00016426299999999783, 0.00016336200000000023, 0.0001640419999999962, 0.00016350000000000392, 0.00016445799999999927, 0.00016425000000000467, 0.00016497199999999934, 0.00016506999999999633, 0.00016475000000000517, 0.00016386099999999432, 0.00016384700000000169, 0.00016495799999999977, 0.00016367999999999938, 0.0001650549999999973, 0.00016419399999999945, 0.0001647639999999978, 0.00016399999999999748]</msg>
<status status="PASS" starttime="20201110 08:39:49.009" endtime="20201110 08:39:49.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.998" endtime="20201110 08:39:49.016"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.022" endtime="20201110 08:39:49.025"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:49.031" endtime="20201110 08:39:49.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.026" endtime="20201110 08:39:49.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.017" endtime="20201110 08:39:49.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.492" endtime="20201110 08:39:49.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:48.491" endtime="20201110 08:39:49.057"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.080" endtime="20201110 08:39:49.105"></status>
</kw>
<msg timestamp="20201110 08:39:49.106" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:49.077" endtime="20201110 08:39:49.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:49.108" endtime="20201110 08:39:49.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.114" endtime="20201110 08:39:49.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.069" endtime="20201110 08:39:49.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.063" endtime="20201110 08:39:49.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.138" endtime="20201110 08:39:49.483"></status>
</kw>
<msg timestamp="20201110 08:39:49.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041426889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041592458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.135" endtime="20201110 08:39:49.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041426889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041592458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.493" endtime="20201110 08:39:49.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.511" endtime="20201110 08:39:49.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.127" endtime="20201110 08:39:49.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.123" endtime="20201110 08:39:49.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:49.530" level="INFO">${RESULT} = [{'time': 0.041592458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016556899999999736, 'source_diff': 0.00016556899999999736}, {'time': 0.041762819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:49.521" endtime="20201110 08:39:49.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:49.561" level="INFO">${ACCURACY} = {'source_diff': [0.00016556899999999736, 0.00016454099999999722, 0.00016520800000000002, 0.0001653189999999971, 0.0001647219999999991, 0.00016504200000000413, 0.0001658890000000024, 0.0001645140000000...</msg>
<status status="PASS" starttime="20201110 08:39:49.532" endtime="20201110 08:39:49.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.572" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:39:49.569" endtime="20201110 08:39:49.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.577" level="INFO">VALUE: [0.00016556899999999736, 0.00016454099999999722, 0.00016520800000000002, 0.0001653189999999971, 0.0001647219999999991, 0.00016504200000000413, 0.0001658890000000024, 0.0001645140000000045, 0.000165305999999997, 0.00016455500000000373, 0.00016502800000000456, 0.00016486200000000173, 0.00016550000000000592, 0.00016543000000000113, 0.00016487500000000183, 0.0001652639999999983, 0.00016497299999999882, 0.00016606899999999786, 0.00016452699999999765, 0.00016577799999999837, 0.0001652089999999995, 0.00016612499999999614, 0.00016530600000000395, 0.00016473599999999866, 0.0001658059999999975, 0.00016615300000000222, 0.00016486100000000226, 0.00016434700000000219, 0.000165305999999997, 0.00016540300000000147, 0.00016502799999999762, 0.00016487500000000183, 0.0001655839999999964, 0.00016523599999999916, 0.0001645419999999967, 0.0001654859999999994, 0.0001643890000000009, 0.00016465300000000072, 0.00016565200000000224, 0.00016545800000000027, 0.00016618100000000136, 0.000164708999999999, 0.00016591600000000206, 0.00016451399999999755, 0.00016584800000000316, 0.00016505500000000423, 0.00016495799999999977, 0.0001652219999999996, 0.0001654310000000006, 0.000166096999999997]</msg>
<status status="PASS" starttime="20201110 08:39:49.574" endtime="20201110 08:39:49.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.562" endtime="20201110 08:39:49.580"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.587" endtime="20201110 08:39:49.590"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:49.595" endtime="20201110 08:39:49.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.591" endtime="20201110 08:39:49.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.582" endtime="20201110 08:39:49.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.059" endtime="20201110 08:39:49.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.058" endtime="20201110 08:39:49.621"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.645" endtime="20201110 08:39:49.669"></status>
</kw>
<msg timestamp="20201110 08:39:49.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:49.641" endtime="20201110 08:39:49.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:49.673" endtime="20201110 08:39:49.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.679" endtime="20201110 08:39:49.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.634" endtime="20201110 08:39:49.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.628" endtime="20201110 08:39:49.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.703" endtime="20201110 08:39:50.050"></status>
</kw>
<msg timestamp="20201110 08:39:50.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041290153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041457111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.699" endtime="20201110 08:39:50.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041290153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041457111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:50.059" endtime="20201110 08:39:50.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.078" endtime="20201110 08:39:50.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.692" endtime="20201110 08:39:50.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.687" endtime="20201110 08:39:50.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:50.097" level="INFO">${RESULT} = [{'time': 0.041457111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016695799999999483, 'source_diff': 0.00016695799999999483}, {'time': 0.041628444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:50.088" endtime="20201110 08:39:50.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:50.130" level="INFO">${ACCURACY} = {'source_diff': [0.00016695799999999483, 0.00016656899999999836, 0.0001660419999999982, 0.00016708299999999843, 0.0001658749999999959, 0.00016688899999999646, 0.00016656899999999836, 0.000166083999999...</msg>
<status status="PASS" starttime="20201110 08:39:50.099" endtime="20201110 08:39:50.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.141" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:39:50.139" endtime="20201110 08:39:50.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.146" level="INFO">VALUE: [0.00016695799999999483, 0.00016656899999999836, 0.0001660419999999982, 0.00016708299999999843, 0.0001658749999999959, 0.00016688899999999646, 0.00016656899999999836, 0.0001660839999999969, 0.00016691599999999612, 0.0001660419999999982, 0.00016605599999999776, 0.00016566700000000129, 0.00016675000000000023, 0.0001652910000000049, 0.00016711099999999757, 0.00016550000000000592, 0.0001667769999999999, 0.00016620799999999408, 0.00016709700000000494, 0.00016680499999999904, 0.00016601399999999905, 0.00016645900000000075, 0.00016679199999999894, 0.00016708299999999843, 0.0001667639999999998, 0.00016584700000000369, 0.00016711099999999757, 0.000165611000000003, 0.00016663900000000315, 0.0001669310000000021, 0.00016584699999999675, 0.00016712500000000408, 0.00016661099999999707, 0.00016647200000000084, 0.00016602699999999915, 0.00016597200000000034, 0.0001661660000000023, 0.0001653340000000031, 0.00016562499999999564, 0.00016622300000000007, 0.0001664440000000017, 0.00016618100000000136, 0.00016563900000000215, 0.0001668890000000034, 0.00016566699999999435, 0.0001662220000000006, 0.00016601399999999905, 0.00016690299999999603, 0.00016536099999999582, 0.0001666389999999962]</msg>
<status status="PASS" starttime="20201110 08:39:50.144" endtime="20201110 08:39:50.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.132" endtime="20201110 08:39:50.150"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.156" endtime="20201110 08:39:50.159"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:50.165" endtime="20201110 08:39:50.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.160" endtime="20201110 08:39:50.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.152" endtime="20201110 08:39:50.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.624" endtime="20201110 08:39:50.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.622" endtime="20201110 08:39:50.191"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.214" endtime="20201110 08:39:50.239"></status>
</kw>
<msg timestamp="20201110 08:39:50.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:50.211" endtime="20201110 08:39:50.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:50.242" endtime="20201110 08:39:50.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.249" endtime="20201110 08:39:50.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.203" endtime="20201110 08:39:50.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.197" endtime="20201110 08:39:50.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.272" endtime="20201110 08:39:50.616"></status>
</kw>
<msg timestamp="20201110 08:39:50.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041237986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041404389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:50.269" endtime="20201110 08:39:50.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041237986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041404389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:50.626" endtime="20201110 08:39:50.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.645" endtime="20201110 08:39:50.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.262" endtime="20201110 08:39:50.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.257" endtime="20201110 08:39:50.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:50.662" level="INFO">${RESULT} = [{'time': 0.041404389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016640300000000247, 'source_diff': 0.00016640300000000247}, {'time': 0.041577722, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:50.654" endtime="20201110 08:39:50.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:50.694" level="INFO">${ACCURACY} = {'source_diff': [0.00016640300000000247, 0.00016761099999999807, 0.00016797200000000234, 0.00016633399999999715, 0.0001677640000000008, 0.00016704200000000613, 0.00016784699999999875, 0.00016702700000...</msg>
<status status="PASS" starttime="20201110 08:39:50.665" endtime="20201110 08:39:50.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.705" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:39:50.703" endtime="20201110 08:39:50.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.711" level="INFO">VALUE: [0.00016640300000000247, 0.00016761099999999807, 0.00016797200000000234, 0.00016633399999999715, 0.0001677640000000008, 0.00016704200000000613, 0.00016784699999999875, 0.00016702700000000015, 0.0001674719999999949, 0.00016644399999999476, 0.00016701400000000005, 0.00016776300000000133, 0.00016797299999999488, 0.00016668099999999492, 0.00016763900000000415, 0.00016706899999999886, 0.00016683299999999818, 0.0001667220000000011, 0.00016637500000000333, 0.0001677640000000008, 0.00016716699999999585, 0.00016629199999999844, 0.00016797300000000182, 0.00016758299999999893, 0.0001672220000000016, 0.0001681660000000043, 0.0001674299999999962, 0.00016827800000000087, 0.00016656899999999836, 0.00016781999999999908, 0.00016669500000000143, 0.00016765299999999678, 0.00016743099999999567, 0.00016688800000000392, 0.00016729199999999944, 0.00016634799999999672, 0.00016762499999999764, 0.0001682090000000025, 0.00016744399999999576, 0.00016706999999999833, 0.00016743099999999567, 0.00016781999999999908, 0.00016718100000000236, 0.00016802800000000062, 0.00016759700000000544, 0.0001663890000000029, 0.00016758299999999893, 0.00016709799999999747, 0.0001665560000000052, 0.00016731999999999858]</msg>
<status status="PASS" starttime="20201110 08:39:50.708" endtime="20201110 08:39:50.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.696" endtime="20201110 08:39:50.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.721" endtime="20201110 08:39:50.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:50.729" endtime="20201110 08:39:50.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.725" endtime="20201110 08:39:50.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.716" endtime="20201110 08:39:50.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.193" endtime="20201110 08:39:50.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.192" endtime="20201110 08:39:50.756"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.780" endtime="20201110 08:39:50.805"></status>
</kw>
<msg timestamp="20201110 08:39:50.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:50.777" endtime="20201110 08:39:50.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:50.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:50.809" endtime="20201110 08:39:50.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.815" endtime="20201110 08:39:50.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.769" endtime="20201110 08:39:50.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.763" endtime="20201110 08:39:50.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:50.839" endtime="20201110 08:39:51.184"></status>
</kw>
<msg timestamp="20201110 08:39:51.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043279028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043447306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:50.836" endtime="20201110 08:39:51.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043279028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043447306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:51.194" endtime="20201110 08:39:51.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.212" endtime="20201110 08:39:51.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.828" endtime="20201110 08:39:51.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.823" endtime="20201110 08:39:51.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:51.230" level="INFO">${RESULT} = [{'time': 0.043447306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016827800000000087, 'source_diff': 0.00016827800000000087}, {'time': 0.043622611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:51.221" endtime="20201110 08:39:51.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:51.262" level="INFO">${ACCURACY} = {'source_diff': [0.00016827800000000087, 0.00016912499999999914, 0.00016898599999999597, 0.00016756999999999883, 0.00016872199999999615, 0.00016819400000000345, 0.00016888899999999846, 0.0001675969999...</msg>
<status status="PASS" starttime="20201110 08:39:51.232" endtime="20201110 08:39:51.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.273" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:39:51.271" endtime="20201110 08:39:51.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.278" level="INFO">VALUE: [0.00016827800000000087, 0.00016912499999999914, 0.00016898599999999597, 0.00016756999999999883, 0.00016872199999999615, 0.00016819400000000345, 0.00016888899999999846, 0.0001675969999999985, 0.000168096999999999, 0.00016773599999999472, 0.00016883399999999965, 0.00016850000000000198, 0.0001682220000000026, 0.00016734699999999825, 0.00016766700000000329, 0.0001688749999999989, 0.00016845900000000275, 0.0001685420000000007, 0.0001680420000000002, 0.00016751400000000055, 0.00016850000000000198, 0.00016772199999999515, 0.00016791600000000406, 0.00016865300000000472, 0.00016786099999999832, 0.00016833399999999915, 0.00016805599999999976, 0.0001682220000000026, 0.00016894500000000368, 0.00016752800000000012, 0.00016900000000000248, 0.00016769500000000243, 0.000168096999999999, 0.00016865300000000472, 0.0001688749999999989, 0.00016915299999999828, 0.00016895799999999683, 0.00016855599999999332, 0.0001678059999999995, 0.00016829200000000044, 0.00016750000000000098, 0.00016906900000000086, 0.00016901400000000205, 0.00016877799999999443, 0.000168611000000006, 0.0001688060000000005, 0.00016884699999999975, 0.000168096999999999, 0.0001691389999999987, 0.0001685420000000007]</msg>
<status status="PASS" starttime="20201110 08:39:51.275" endtime="20201110 08:39:51.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.264" endtime="20201110 08:39:51.282"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.288" endtime="20201110 08:39:51.291"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:51.296" endtime="20201110 08:39:51.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.292" endtime="20201110 08:39:51.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.283" endtime="20201110 08:39:51.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.758" endtime="20201110 08:39:51.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:50.757" endtime="20201110 08:39:51.323"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.345" endtime="20201110 08:39:51.371"></status>
</kw>
<msg timestamp="20201110 08:39:51.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:51.342" endtime="20201110 08:39:51.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:51.374" endtime="20201110 08:39:51.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.380" endtime="20201110 08:39:51.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.335" endtime="20201110 08:39:51.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.329" endtime="20201110 08:39:51.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.404" endtime="20201110 08:39:51.749"></status>
</kw>
<msg timestamp="20201110 08:39:51.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041132653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:51.401" endtime="20201110 08:39:51.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041132653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041302056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:51.759" endtime="20201110 08:39:51.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.777" endtime="20201110 08:39:51.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.393" endtime="20201110 08:39:51.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.389" endtime="20201110 08:39:51.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:51.796" level="INFO">${RESULT} = [{'time': 0.041302056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016940299999999853, 'source_diff': 0.00016940299999999853}, {'time': 0.041482403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:51.787" endtime="20201110 08:39:51.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:51.830" level="INFO">${ACCURACY} = {'source_diff': [0.00016940299999999853, 0.0001694169999999981, 0.00016862499999999864, 0.00017022299999999713, 0.00016829100000000097, 0.00016865300000000472, 0.000170097000000001, 0.0001694719999999...</msg>
<status status="PASS" starttime="20201110 08:39:51.798" endtime="20201110 08:39:51.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.841" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:39:51.839" endtime="20201110 08:39:51.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.846" level="INFO">VALUE: [0.00016940299999999853, 0.0001694169999999981, 0.00016862499999999864, 0.00017022299999999713, 0.00016829100000000097, 0.00016865300000000472, 0.000170097000000001, 0.0001694719999999969, 0.00017008300000000143, 0.00016915300000000522, 0.00017011200000000004, 0.000169194999999997, 0.00016887500000000583, 0.00016865299999999778, 0.00016993099999999817, 0.00016831999999999958, 0.00016990299999999903, 0.0001694310000000046, 0.0001694310000000046, 0.00016976399999999586, 0.00016880500000000104, 0.00016991599999999912, 0.00016863900000000515, 0.0001688190000000006, 0.00016973599999999672, 0.0001683749999999984, 0.00016979100000000247, 0.0001694299999999982, 0.0001684299999999972, 0.00016995800000000477, 0.00016883399999999965, 0.00016984799999999328, 0.00016861099999999907, 0.00017011100000000057, 0.00016901400000000205, 0.00016840299999999753, 0.00016899999999999554, 0.00016840199999999805, 0.00016883399999999965, 0.00016980500000000204, 0.00016959799999999997, 0.00016916599999999837, 0.00016962499999999964, 0.0001695970000000005, 0.00016886099999999932, 0.00016840300000000447, 0.00016956900000000136, 0.00017011100000000057, 0.0001697499999999963, 0.00016979200000000194]</msg>
<status status="PASS" starttime="20201110 08:39:51.843" endtime="20201110 08:39:51.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.832" endtime="20201110 08:39:51.850"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.856" endtime="20201110 08:39:51.859"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:51.865" endtime="20201110 08:39:51.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.861" endtime="20201110 08:39:51.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.852" endtime="20201110 08:39:51.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.325" endtime="20201110 08:39:51.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.323" endtime="20201110 08:39:51.891"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.914" endtime="20201110 08:39:51.940"></status>
</kw>
<msg timestamp="20201110 08:39:51.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:51.911" endtime="20201110 08:39:51.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:51.943" endtime="20201110 08:39:51.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.949" endtime="20201110 08:39:51.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.904" endtime="20201110 08:39:51.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.898" endtime="20201110 08:39:51.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.973" endtime="20201110 08:39:52.318"></status>
</kw>
<msg timestamp="20201110 08:39:52.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041566278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:51.970" endtime="20201110 08:39:52.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041396556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041566278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:52.327" endtime="20201110 08:39:52.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.346" endtime="20201110 08:39:52.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.962" endtime="20201110 08:39:52.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.958" endtime="20201110 08:39:52.353"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:52.364" level="INFO">${RESULT} = [{'time': 0.041566278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00016972199999999715, 'source_diff': 0.00016972199999999715}, {'time': 0.041745708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:52.355" endtime="20201110 08:39:52.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:52.397" level="INFO">${ACCURACY} = {'source_diff': [0.00016972199999999715, 0.00017098599999999797, 0.00017025000000000373, 0.00016969400000000495, 0.000170097000000001, 0.00016938899999999896, 0.0001699169999999986, 0.0001696950000000...</msg>
<status status="PASS" starttime="20201110 08:39:52.366" endtime="20201110 08:39:52.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.408" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:39:52.406" endtime="20201110 08:39:52.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.413" level="INFO">VALUE: [0.00016972199999999715, 0.00017098599999999797, 0.00017025000000000373, 0.00016969400000000495, 0.000170097000000001, 0.00016938899999999896, 0.0001699169999999986, 0.00016969500000000443, 0.0001702499999999968, 0.00017048599999999747, 0.00016961199999999954, 0.00016972300000000357, 0.000169693999999998, 0.00016970799999999758, 0.00017111100000000157, 0.00016977800000000237, 0.0001697369999999962, 0.0001695970000000005, 0.00016934700000000025, 0.00017006900000000186, 0.0001708190000000026, 0.00017094499999999874, 0.0001696389999999992, 0.00017011100000000057, 0.00016990299999999903, 0.0001695420000000017, 0.00017115300000000028, 0.0001697640000000028, 0.00017084800000000122, 0.00017062500000000064, 0.00016944499999999724, 0.00017070799999999858, 0.00017129200000000344, 0.0001711249999999942, 0.00017008300000000143, 0.00017082000000000208, 0.00017094399999999926, 0.00017048599999999747, 0.00017102799999999668, 0.00017116699999999985, 0.0001698749999999999, 0.00017045800000000527, 0.0001702090000000045, 0.00017058399999999446, 0.00016958300000000093, 0.0001699719999999974, 0.00016988899999999946, 0.00017061100000000107, 0.00017058300000000193, 0.00016999999999999654]</msg>
<status status="PASS" starttime="20201110 08:39:52.410" endtime="20201110 08:39:52.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.398" endtime="20201110 08:39:52.416"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.423" endtime="20201110 08:39:52.426"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:52.432" endtime="20201110 08:39:52.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.427" endtime="20201110 08:39:52.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.418" endtime="20201110 08:39:52.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.893" endtime="20201110 08:39:52.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.892" endtime="20201110 08:39:52.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.020" endtime="20201110 08:39:52.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:52.468" endtime="20201110 08:39:52.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.463" endtime="20201110 08:39:52.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.461" endtime="20201110 08:39:52.492"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:55.888" endtime="20201110 08:39:52.493" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:56.806" endtime="20201110 08:39:52.502"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.642" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:39:52.658" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:54.636" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:39:52.638" endtime="20201110 08:39:54.637"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.643" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201110 08:39:54.640" endtime="20201110 08:39:54.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.635" endtime="20201110 08:39:54.645"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:54.650" endtime="20201110 08:39:55.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.647" endtime="20201110 08:39:55.005"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.035" endtime="20201110 08:39:55.054"></status>
</kw>
<msg timestamp="20201110 08:39:55.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:55.032" endtime="20201110 08:39:55.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:55.057" endtime="20201110 08:39:55.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.068" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:55.064" endtime="20201110 08:39:55.069"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:55.025" endtime="20201110 08:39:55.071"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:55.020" endtime="20201110 08:39:55.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.017" endtime="20201110 08:39:55.073"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:55.081" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:55.080" endtime="20201110 08:39:55.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.075" endtime="20201110 08:39:55.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.015" endtime="20201110 08:39:55.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.013" endtime="20201110 08:39:55.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.087" endtime="20201110 08:39:55.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.010" endtime="20201110 08:39:55.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.094" endtime="20201110 08:39:55.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.007" endtime="20201110 08:39:55.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.633" endtime="20201110 08:39:55.100"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:55.115" endtime="20201110 08:39:55.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.111" endtime="20201110 08:39:55.138"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.172" endtime="20201110 08:39:55.192"></status>
</kw>
<msg timestamp="20201110 08:39:55.193" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:55.169" endtime="20201110 08:39:55.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['samr21-xpro', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:55.195" endtime="20201110 08:39:55.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.206" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:55.202" endtime="20201110 08:39:55.207"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:55.161" endtime="20201110 08:39:55.209"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:55.155" endtime="20201110 08:39:55.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.152" endtime="20201110 08:39:55.211"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:55.221" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:55.219" endtime="20201110 08:39:55.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.213" endtime="20201110 08:39:55.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.150" endtime="20201110 08:39:55.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.149" endtime="20201110 08:39:55.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.226" endtime="20201110 08:39:55.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.144" endtime="20201110 08:39:55.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.140" endtime="20201110 08:39:55.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.108" endtime="20201110 08:39:55.238"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:55.249" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.281" endtime="20201110 08:39:57.434"></status>
</kw>
<msg timestamp="20201110 08:39:57.435" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 718542, 'start-iter': 1, 'wakeups': [728590, 738591, 748591, 758591, 7...</msg>
<status status="PASS" starttime="20201110 08:39:55.278" endtime="20201110 08:39:57.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.444" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 718542, 'start-iter': 1, 'wakeups': [728590, 738591, 748591, 758591, 7...</msg>
<status status="PASS" starttime="20201110 08:39:57.438" endtime="20201110 08:39:57.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.447" endtime="20201110 08:39:57.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.266" endtime="20201110 08:39:57.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.257" endtime="20201110 08:39:57.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.461" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [728590, 738591, 748591, 758591, 768591, 778591, 788591, 798591, 808591, 818591, 828591, 838591, 848591, 858591, 868591, 878591, 888591, 898591, 908591, 918591, 928591, 9...</msg>
<status status="PASS" starttime="20201110 08:39:57.456" endtime="20201110 08:39:57.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.471" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:57.469" endtime="20201110 08:39:57.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.475" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:57.473" endtime="20201110 08:39:57.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.462" endtime="20201110 08:39:57.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.488" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:57.486" endtime="20201110 08:39:57.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.493" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:57.491" endtime="20201110 08:39:57.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.479" endtime="20201110 08:39:57.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.505" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.503" endtime="20201110 08:39:57.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.510" level="INFO">VALUE: 718542</msg>
<status status="PASS" starttime="20201110 08:39:57.508" endtime="20201110 08:39:57.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.496" endtime="20201110 08:39:57.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.522" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:57.520" endtime="20201110 08:39:57.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.527" level="INFO">VALUE: [728590, 738591, 748591, 758591, 768591, 778591, 788591, 798591, 808591, 818591, 828591, 838591, 848591, 858591, 868591, 878591, 888591, 898591, 908591, 918591, 928591, 938591, 948591, 958591, 968591, 978591, 988591, 998591, 1008591, 1018591, 1028591, 1038591, 1048591, 1058591, 1068591, 1078591, 1088591, 1098591, 1108591, 1118591, 1128591, 1138591, 1148591, 1158591, 1168591, 1178591, 1188591, 1198591, 1208591, 1218591, 1228591, 1238591, 1248591, 1258591, 1268591, 1278591, 1288591, 1298591, 1308591, 1318591, 1328591, 1338591, 1348591, 1358591, 1368591, 1378591, 1388591, 1398591, 1408591, 1418591, 1428591, 1438591, 1448591, 1458591, 1468591, 1478591, 1488591, 1498591, 1508591, 1518591, 1528591, 1538591, 1548591, 1558591, 1568591, 1578591, 1588591, 1598591, 1608591, 1618591, 1628591, 1638591, 1648591, 1658591, 1668591, 1678591, 1688591, 1698591, 1708591, 1718591]</msg>
<status status="PASS" starttime="20201110 08:39:57.525" endtime="20201110 08:39:57.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.514" endtime="20201110 08:39:57.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.547" endtime="20201110 08:39:57.909"></status>
</kw>
<msg timestamp="20201110 08:39:57.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.157092653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167164972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.543" endtime="20201110 08:39:57.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.157092653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.167164972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.917" endtime="20201110 08:39:57.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.935" endtime="20201110 08:39:57.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.536" endtime="20201110 08:39:57.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.531" endtime="20201110 08:39:57.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:58.001" level="INFO">${RESULT} = {'source_diff': [0, 0.010072318999999996, 0.010024986000000013, 0.010024874999999989, 0.010024139000000015, 0.010024888999999981, 0.010024332999999996, 0.010025653000000023, 0.010024985999999986, 0.01...</msg>
<status status="PASS" starttime="20201110 08:39:57.944" endtime="20201110 08:39:58.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:58.012" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:58.010" endtime="20201110 08:39:58.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:58.017" level="INFO">VALUE: 0.157092653</msg>
<status status="PASS" starttime="20201110 08:39:58.014" endtime="20201110 08:39:58.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.003" endtime="20201110 08:39:58.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:58.031" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:58.028" endtime="20201110 08:39:58.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:58.035" level="INFO">VALUE: [0.167164972, 0.177189958, 0.187214833, 0.197238972, 0.207263861, 0.217288194, 0.227313847, 0.237338833, 0.247363917, 0.257389611, 0.267415611, 0.277440514, 0.287467472, 0.297493514, 0.307519139, 0.317544403, 0.327570028, 0.337596639, 0.347623819, 0.357649986, 0.367676264, 0.377702181, 0.387727292, 0.397751556, 0.407776556, 0.417801361, 0.427826583, 0.437851389, 0.447877653, 0.457904042, 0.467929722, 0.477955444, 0.487980972, 0.4980055, 0.508030819, 0.518055278, 0.528080083, 0.538104528, 0.548129417, 0.558153611, 0.568177694, 0.578201389, 0.588227111, 0.598251125, 0.608276958, 0.618300264, 0.628325028, 0.638348125, 0.648373014, 0.658397542, 0.668421708, 0.678446194, 0.688470653, 0.698494264, 0.708518222, 0.718542389, 0.728567542, 0.73859225, 0.748616958, 0.7586415, 0.768666944, 0.778691042, 0.788716222, 0.798741639, 0.808767028, 0.818789639, 0.828814028, 0.838838, 0.848861361, 0.858884861, 0.8689085, 0.878931583, 0.888953903, 0.898977486, 0.909001542, 0.919025042, 0.929048778, 0.939072417, 0.949096292, 0.959119972, 0.969144875, 0.979170333, 0.989196611, 0.999222389, 1.009248681, 1.019273528, 1.029298444, 1.039322167, 1.049346597, 1.059370361, 1.069392986, 1.079416236, 1.089439486, 1.099461542, 1.109485222, 1.119508653, 1.129533347, 1.139557306, 1.149581278, 1.159605125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:58.033" endtime="20201110 08:39:58.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.021" endtime="20201110 08:39:58.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:58.044" endtime="20201110 08:39:58.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:58.052" endtime="20201110 08:39:58.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.048" endtime="20201110 08:39:58.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.039" endtime="20201110 08:39:58.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.251" endtime="20201110 08:39:58.083"></status>
</kw>
<msg timestamp="20201110 08:39:58.083" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:58.116" endtime="20201110 08:40:00.267"></status>
</kw>
<msg timestamp="20201110 08:40:00.268" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3547697, 'start-iter': 1, 'wakeups': [3557745, 3567746, 3577746, 35877...</msg>
<status status="PASS" starttime="20201110 08:39:58.112" endtime="20201110 08:40:00.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.275" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3547697, 'start-iter': 1, 'wakeups': [3557745, 3567746, 3577746, 35877...</msg>
<status status="PASS" starttime="20201110 08:40:00.270" endtime="20201110 08:40:00.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.277" endtime="20201110 08:40:00.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.100" endtime="20201110 08:40:00.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.093" endtime="20201110 08:40:00.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.290" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [3557745, 3567746, 3577746, 3587746, 3597746, 3607746, 3617746, 3627746, 3637746, 3647746, 3657746, 3667746, 3677746, 3687746, 3697746, 3707746, 3717746, 3727746, 3737746...</msg>
<status status="PASS" starttime="20201110 08:40:00.286" endtime="20201110 08:40:00.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.301" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:00.298" endtime="20201110 08:40:00.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.305" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:00.303" endtime="20201110 08:40:00.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.292" endtime="20201110 08:40:00.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.319" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:00.315" endtime="20201110 08:40:00.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.324" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:00.322" endtime="20201110 08:40:00.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.309" endtime="20201110 08:40:00.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.336" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.334" endtime="20201110 08:40:00.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.341" level="INFO">VALUE: 3547697</msg>
<status status="PASS" starttime="20201110 08:40:00.338" endtime="20201110 08:40:00.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.327" endtime="20201110 08:40:00.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.353" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.350" endtime="20201110 08:40:00.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.357" level="INFO">VALUE: [3557745, 3567746, 3577746, 3587746, 3597746, 3607746, 3617746, 3627746, 3637746, 3647746, 3657746, 3667746, 3677746, 3687746, 3697746, 3707746, 3717746, 3727746, 3737746, 3747746, 3757746, 3767746, 3777746, 3787746, 3797746, 3807746, 3817746, 3827746, 3837746, 3847746, 3857746, 3867746, 3877746, 3887746, 3897746, 3907746, 3917746, 3927746, 3937746, 3947746, 3957746, 3967746, 3977746, 3987746, 3997746, 4007746, 4017746, 4027746, 4037746, 4047746, 4057746, 4067746, 4077746, 4087746, 4097746, 4107746, 4117746, 4127746, 4137746, 4147746, 4157746, 4167746, 4177746, 4187746, 4197746, 4207746, 4217746, 4227746, 4237746, 4247746, 4257746, 4267746, 4277746, 4287746, 4297746, 4307746, 4317746, 4327746, 4337746, 4347746, 4357746, 4367746, 4377746, 4387746, 4397746, 4407746, 4417746, 4427746, 4437746, 4447746, 4457746, 4467746, 4477746, 4487746, 4497746, 4507746, 4517746, 4527746, 4537746, 4547746]</msg>
<status status="PASS" starttime="20201110 08:40:00.355" endtime="20201110 08:40:00.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.344" endtime="20201110 08:40:00.360"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.376" endtime="20201110 08:40:00.714"></status>
</kw>
<msg timestamp="20201110 08:40:00.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055673125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065745833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.373" endtime="20201110 08:40:00.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055673125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.065745833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.722" endtime="20201110 08:40:00.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.740" endtime="20201110 08:40:00.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.366" endtime="20201110 08:40:00.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.361" endtime="20201110 08:40:00.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.803" level="INFO">${RESULT} = {'source_diff': [0, 0.010072708000000007, 0.010023820000000003, 0.010024471999999993, 0.010024041999999997, 0.010024555000000004, 0.010025320000000004, 0.010024763999999992, 0.01002383300000001, 0.010...</msg>
<status status="PASS" starttime="20201110 08:40:00.748" endtime="20201110 08:40:00.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.813" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.811" endtime="20201110 08:40:00.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.817" level="INFO">VALUE: 0.055673125</msg>
<status status="PASS" starttime="20201110 08:40:00.815" endtime="20201110 08:40:00.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.804" endtime="20201110 08:40:00.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.833" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.831" endtime="20201110 08:40:00.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.840" level="INFO">VALUE: [0.065745833, 0.075769653, 0.085794125, 0.095818167, 0.105842722, 0.115868042, 0.125892806, 0.135916639, 0.145941222, 0.155966542, 0.165992125, 0.176015847, 0.186040417, 0.196065, 0.206089153, 0.216112722, 0.226138681, 0.236164125, 0.2461895, 0.256214139, 0.266239417, 0.276264194, 0.286290153, 0.296315972, 0.306341694, 0.316365944, 0.326391014, 0.336415403, 0.346440097, 0.356466194, 0.366492653, 0.376518153, 0.386543625, 0.396567889, 0.406592486, 0.416618375, 0.426644236, 0.436668903, 0.446693403, 0.456717292, 0.466741972, 0.476766333, 0.486791778, 0.496816347, 0.506841597, 0.516865917, 0.526890764, 0.536915806, 0.546940986, 0.556965583, 0.566990403, 0.577015736, 0.587041111, 0.597065431, 0.607090236, 0.617113319, 0.627138611, 0.637164472, 0.647189653, 0.657214958, 0.6672395, 0.677263653, 0.687287597, 0.697310014, 0.707334431, 0.717358222, 0.727382806, 0.737406014, 0.747429917, 0.75745375, 0.767477931, 0.777501417, 0.787524403, 0.797548153, 0.807572583, 0.817596333, 0.827621319, 0.837644528, 0.847668542, 0.8576925, 0.867716389, 0.877740903, 0.887765917, 0.897790347, 0.907815208, 0.917839833, 0.927863847, 0.937888486, 0.947913778, 0.957938931, 0.967965, 0.977990236, 0.988015542, 0.998040361, 1.008064667, 1.018089083, 1.028114736, 1.038138014, 1.048162278, 1.058186486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:00.837" endtime="20201110 08:40:00.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.822" endtime="20201110 08:40:00.843"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.850" endtime="20201110 08:40:00.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:00.858" endtime="20201110 08:40:00.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.854" endtime="20201110 08:40:00.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.845" endtime="20201110 08:40:00.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.085" endtime="20201110 08:40:00.884"></status>
</kw>
<msg timestamp="20201110 08:40:00.884" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.905" endtime="20201110 08:40:03.048"></status>
</kw>
<msg timestamp="20201110 08:40:03.049" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6328762, 'start-iter': 1, 'wakeups': [6338810, 6348811, 6358811, 63688...</msg>
<status status="PASS" starttime="20201110 08:40:00.901" endtime="20201110 08:40:03.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.056" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6328762, 'start-iter': 1, 'wakeups': [6338810, 6348811, 6358811, 63688...</msg>
<status status="PASS" starttime="20201110 08:40:03.051" endtime="20201110 08:40:03.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.058" endtime="20201110 08:40:03.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.894" endtime="20201110 08:40:03.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.889" endtime="20201110 08:40:03.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:03.071" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [6338810, 6348811, 6358811, 6368811, 6378811, 6388811, 6398811, 6408811, 6418811, 6428811, 6438811, 6448811, 6458811, 6468811, 6478811, 6488811, 6498811, 6508811, 6518811...</msg>
<status status="PASS" starttime="20201110 08:40:03.066" endtime="20201110 08:40:03.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.081" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:03.079" endtime="20201110 08:40:03.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.086" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:03.083" endtime="20201110 08:40:03.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.073" endtime="20201110 08:40:03.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.098" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:03.095" endtime="20201110 08:40:03.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.102" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:03.100" endtime="20201110 08:40:03.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.089" endtime="20201110 08:40:03.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.115" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:40:03.113" endtime="20201110 08:40:03.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.119" level="INFO">VALUE: 6328762</msg>
<status status="PASS" starttime="20201110 08:40:03.117" endtime="20201110 08:40:03.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.106" endtime="20201110 08:40:03.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.132" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:03.129" endtime="20201110 08:40:03.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.136" level="INFO">VALUE: [6338810, 6348811, 6358811, 6368811, 6378811, 6388811, 6398811, 6408811, 6418811, 6428811, 6438811, 6448811, 6458811, 6468811, 6478811, 6488811, 6498811, 6508811, 6518811, 6528811, 6538811, 6548811, 6558811, 6568811, 6578811, 6588811, 6598811, 6608811, 6618811, 6628811, 6638811, 6648811, 6658811, 6668811, 6678811, 6688811, 6698811, 6708811, 6718811, 6728811, 6738811, 6748811, 6758811, 6768811, 6778811, 6788811, 6798811, 6808811, 6818811, 6828811, 6838811, 6848811, 6858811, 6868811, 6878811, 6888811, 6898811, 6908811, 6918811, 6928811, 6938811, 6948811, 6958811, 6968811, 6978811, 6988811, 6998811, 7008811, 7018811, 7028811, 7038811, 7048811, 7058811, 7068811, 7078811, 7088811, 7098811, 7108811, 7118811, 7128811, 7138811, 7148811, 7158811, 7168811, 7178811, 7188811, 7198811, 7208811, 7218811, 7228811, 7238811, 7248811, 7258811, 7268811, 7278811, 7288811, 7298811, 7308811, 7318811, 7328811]</msg>
<status status="PASS" starttime="20201110 08:40:03.134" endtime="20201110 08:40:03.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.123" endtime="20201110 08:40:03.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.157" endtime="20201110 08:40:03.505"></status>
</kw>
<msg timestamp="20201110 08:40:03.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037449403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047521653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:03.152" endtime="20201110 08:40:03.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037449403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047521653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:03.514" endtime="20201110 08:40:03.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.531" endtime="20201110 08:40:03.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.145" endtime="20201110 08:40:03.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.140" endtime="20201110 08:40:03.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:03.592" level="INFO">${RESULT} = {'source_diff': [0, 0.010072249999999998, 0.01002443, 0.010023222999999998, 0.01002380500000001, 0.01002525, 0.010023695, 0.010024540999999998, 0.010023971999999992, 0.010023292000000017, 0.0100230829...</msg>
<status status="PASS" starttime="20201110 08:40:03.540" endtime="20201110 08:40:03.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.603" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:40:03.601" endtime="20201110 08:40:03.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.607" level="INFO">VALUE: 0.037449403</msg>
<status status="PASS" starttime="20201110 08:40:03.605" endtime="20201110 08:40:03.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.594" endtime="20201110 08:40:03.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.621" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:03.619" endtime="20201110 08:40:03.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.625" level="INFO">VALUE: [0.047521653, 0.057546083, 0.067569306, 0.077593111, 0.087618361, 0.097642056, 0.107666597, 0.117690569, 0.127713861, 0.137736944, 0.147761958, 0.157785264, 0.167809597, 0.177833764, 0.187857736, 0.197881333, 0.207905153, 0.217929389, 0.227954069, 0.237978139, 0.248003236, 0.258027389, 0.268051806, 0.278078764, 0.288104639, 0.298129264, 0.308154194, 0.318179069, 0.328204486, 0.338229111, 0.348254333, 0.358279264, 0.368304917, 0.378328542, 0.388352194, 0.398375458, 0.408399792, 0.418423806, 0.42844725, 0.438470333, 0.448494472, 0.458517444, 0.468540819, 0.478563431, 0.488586792, 0.498611222, 0.508635514, 0.518659944, 0.52868475, 0.538709681, 0.548734847, 0.558759083, 0.568782833, 0.578806778, 0.588831611, 0.598855653, 0.608880403, 0.618904153, 0.628927736, 0.638951694, 0.648977153, 0.659003056, 0.669027333, 0.679051875, 0.689077014, 0.699101556, 0.709127569, 0.719153486, 0.729179514, 0.739204917, 0.749229903, 0.759253972, 0.769278083, 0.779302125, 0.789326306, 0.799350389, 0.809375528, 0.819399917, 0.829424292, 0.839448722, 0.849473472, 0.859498028, 0.869522611, 0.879546375, 0.889569236, 0.899593264, 0.909618778, 0.919643417, 0.929668431, 0.939692944, 0.949716625, 0.959740944, 0.969766139, 0.979789417, 0.989812181, 0.999834931, 1.009858583, 1.019882028, 1.029905931, 1.0399295] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:03.623" endtime="20201110 08:40:03.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.611" endtime="20201110 08:40:03.628"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.635" endtime="20201110 08:40:03.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:03.643" endtime="20201110 08:40:03.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.639" endtime="20201110 08:40:03.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.630" endtime="20201110 08:40:03.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.885" endtime="20201110 08:40:03.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.244" endtime="20201110 08:40:03.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.241" endtime="20201110 08:40:03.670"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:03.675" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.698" endtime="20201110 08:40:05.860"></status>
</kw>
<msg timestamp="20201110 08:40:05.861" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9115437, 'start-iter': 1, 'wakeups': [9125510, 9135508, 9145508, 91555...</msg>
<status status="PASS" starttime="20201110 08:40:03.693" endtime="20201110 08:40:05.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.868" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 9115437, 'start-iter': 1, 'wakeups': [9125510, 9135508, 9145508, 91555...</msg>
<status status="PASS" starttime="20201110 08:40:05.864" endtime="20201110 08:40:05.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.871" endtime="20201110 08:40:05.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.686" endtime="20201110 08:40:05.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.680" endtime="20201110 08:40:05.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:05.884" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [9125510, 9135508, 9145508, 9155508, 9165508, 9175508, 9185508, 9195508, 9205508, 9215508, 9225508, 9235508, 9245508, 9255508, 9265508, 9275508, 9285508, 9295508, 9305508...</msg>
<status status="PASS" starttime="20201110 08:40:05.879" endtime="20201110 08:40:05.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.894" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:05.892" endtime="20201110 08:40:05.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.899" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:05.897" endtime="20201110 08:40:05.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.886" endtime="20201110 08:40:05.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.911" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:05.909" endtime="20201110 08:40:05.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.915" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:05.913" endtime="20201110 08:40:05.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.902" endtime="20201110 08:40:05.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.928" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:40:05.925" endtime="20201110 08:40:05.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.932" level="INFO">VALUE: 9115437</msg>
<status status="PASS" starttime="20201110 08:40:05.930" endtime="20201110 08:40:05.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.919" endtime="20201110 08:40:05.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.945" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:05.942" endtime="20201110 08:40:05.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.950" level="INFO">VALUE: [9125510, 9135508, 9145508, 9155508, 9165508, 9175508, 9185508, 9195508, 9205508, 9215508, 9225508, 9235508, 9245508, 9255508, 9265508, 9275508, 9285508, 9295508, 9305508, 9315508, 9325508, 9335508, 9345508, 9355508, 9365508, 9375508, 9385508, 9395508, 9405508, 9415508, 9425508, 9435508, 9445508, 9455508, 9465508, 9475508, 9485508, 9495508, 9505508, 9515508, 9525508, 9535508, 9545508, 9555508, 9565508, 9575508, 9585508, 9595508, 9605508, 9615508, 9625508, 9635508, 9645508, 9655508, 9665508, 9675508, 9685508, 9695508, 9705508, 9715508, 9725508, 9735508, 9745508, 9755508, 9765508, 9775508, 9785508, 9795508, 9805508, 9815508, 9825508, 9835508, 9845508, 9855508, 9865508, 9875508, 9885508, 9895508, 9905508, 9915508, 9925508, 9935508, 9945508, 9955508, 9965508, 9975508, 9985508, 9995508, 10005508, 10015508, 10025508, 10035508, 10045508, 10055508, 10065508, 10075508, 10085508, 10095508, 10105508, 10115508]</msg>
<status status="PASS" starttime="20201110 08:40:05.947" endtime="20201110 08:40:05.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.936" endtime="20201110 08:40:05.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.969" endtime="20201110 08:40:06.320"></status>
</kw>
<msg timestamp="20201110 08:40:06.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045598181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055696792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.966" endtime="20201110 08:40:06.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045598181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055696792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:06.328" endtime="20201110 08:40:06.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.346" endtime="20201110 08:40:06.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.959" endtime="20201110 08:40:06.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.954" endtime="20201110 08:40:06.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:06.411" level="INFO">${RESULT} = {'source_diff': [0, 0.010098611, 0.010023444, 0.010026111000000004, 0.010026305999999999, 0.010026068999999999, 0.010025347000000004, 0.010025722999999986, 0.010024916000000009, 0.010025124999999996, ...</msg>
<status status="PASS" starttime="20201110 08:40:06.354" endtime="20201110 08:40:06.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.422" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:40:06.420" endtime="20201110 08:40:06.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.426" level="INFO">VALUE: 0.045598181</msg>
<status status="PASS" starttime="20201110 08:40:06.424" endtime="20201110 08:40:06.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.413" endtime="20201110 08:40:06.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.440" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:06.437" endtime="20201110 08:40:06.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.444" level="INFO">VALUE: [0.055696792, 0.065720236, 0.075746347, 0.085772653, 0.095798722, 0.105824069, 0.115849792, 0.125874708, 0.135899833, 0.145925347, 0.155952125, 0.165978139, 0.176003722, 0.186029194, 0.196054389, 0.206080486, 0.216106333, 0.226132792, 0.236159542, 0.246186069, 0.256212306, 0.266238097, 0.276264847, 0.286291486, 0.296318097, 0.306344569, 0.316369792, 0.326395069, 0.336421653, 0.346448375, 0.356474611, 0.366501597, 0.376528431, 0.386554458, 0.396581153, 0.406607444, 0.416633347, 0.426660361, 0.436686236, 0.446712083, 0.456737653, 0.466762917, 0.476788292, 0.486814194, 0.496841778, 0.50686875, 0.516894736, 0.526920819, 0.536947444, 0.546973806, 0.557000181, 0.567025833, 0.577052528, 0.587078778, 0.597105319, 0.607131083, 0.617158097, 0.627185319, 0.637213083, 0.647239222, 0.657264833, 0.667289028, 0.677314181, 0.687340181, 0.697366722, 0.707393389, 0.717420236, 0.727446931, 0.737473681, 0.747499792, 0.757527097, 0.767553319, 0.777579431, 0.787606028, 0.797632569, 0.807657958, 0.817684694, 0.827709194, 0.837734375, 0.847760653, 0.857787556, 0.867814194, 0.877840139, 0.8878655, 0.897892097, 0.907918903, 0.917945806, 0.927972986, 0.937997708, 0.948020542, 0.958043972, 0.968067444, 0.97809425, 0.988120847, 0.998147153, 1.008174375, 1.018203, 1.028230736, 1.038257861, 1.048284167] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:06.442" endtime="20201110 08:40:06.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.430" endtime="20201110 08:40:06.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.453" endtime="20201110 08:40:06.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:06.461" endtime="20201110 08:40:06.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.457" endtime="20201110 08:40:06.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.449" endtime="20201110 08:40:06.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.677" endtime="20201110 08:40:06.488"></status>
</kw>
<msg timestamp="20201110 08:40:06.488" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.510" endtime="20201110 08:40:08.621"></status>
</kw>
<msg timestamp="20201110 08:40:08.623" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11920249, 'start-iter': 1, 'wakeups': [11930321, 11940320, 11950320, 1...</msg>
<status status="PASS" starttime="20201110 08:40:06.506" endtime="20201110 08:40:08.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.630" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11920249, 'start-iter': 1, 'wakeups': [11930321, 11940320, 11950320, 1...</msg>
<status status="PASS" starttime="20201110 08:40:08.625" endtime="20201110 08:40:08.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.632" endtime="20201110 08:40:08.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.499" endtime="20201110 08:40:08.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.494" endtime="20201110 08:40:08.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:08.645" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [11930321, 11940320, 11950320, 11960320, 11970320, 11980320, 11990320, 12000320, 12010320, 12020320, 12030320, 12040320, 12050320, 12060320, 12070320, 12080320, 12090320,...</msg>
<status status="PASS" starttime="20201110 08:40:08.640" endtime="20201110 08:40:08.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.655" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:08.653" endtime="20201110 08:40:08.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.660" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:08.657" endtime="20201110 08:40:08.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.647" endtime="20201110 08:40:08.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.672" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:08.670" endtime="20201110 08:40:08.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.678" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:08.674" endtime="20201110 08:40:08.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.663" endtime="20201110 08:40:08.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.691" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:40:08.688" endtime="20201110 08:40:08.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.695" level="INFO">VALUE: 11920249</msg>
<status status="PASS" starttime="20201110 08:40:08.693" endtime="20201110 08:40:08.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.682" endtime="20201110 08:40:08.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.707" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:08.705" endtime="20201110 08:40:08.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.712" level="INFO">VALUE: [11930321, 11940320, 11950320, 11960320, 11970320, 11980320, 11990320, 12000320, 12010320, 12020320, 12030320, 12040320, 12050320, 12060320, 12070320, 12080320, 12090320, 12100320, 12110320, 12120320, 12130320, 12140320, 12150320, 12160320, 12170320, 12180320, 12190320, 12200320, 12210320, 12220320, 12230320, 12240320, 12250320, 12260320, 12270320, 12280320, 12290320, 12300320, 12310320, 12320320, 12330320, 12340320, 12350320, 12360320, 12370320, 12380320, 12390320, 12400320, 12410320, 12420320, 12430320, 12440320, 12450320, 12460320, 12470320, 12480320, 12490320, 12500320, 12510320, 12520320, 12530320, 12540320, 12550320, 12560320, 12570320, 12580320, 12590320, 12600320, 12610320, 12620320, 12630320, 12640320, 12650320, 12660320, 12670320, 12680320, 12690320, 12700320, 12710320, 12720320, 12730320, 12740320, 12750320, 12760320, 12770320, 12780320, 12790320, 12800320, 12810320, 12820320, 12830320, 12840320, 12850320, 12860320, 12870320, 12880320, 12890320, 12900320, 12910320, 12920320]</msg>
<status status="PASS" starttime="20201110 08:40:08.710" endtime="20201110 08:40:08.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.699" endtime="20201110 08:40:08.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.732" endtime="20201110 08:40:09.074"></status>
</kw>
<msg timestamp="20201110 08:40:09.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039095597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049194278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.729" endtime="20201110 08:40:09.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039095597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049194278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:09.083" endtime="20201110 08:40:09.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.100" endtime="20201110 08:40:09.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.721" endtime="20201110 08:40:09.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.716" endtime="20201110 08:40:09.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:09.162" level="INFO">${RESULT} = {'source_diff': [0, 0.010098680999999998, 0.01002443, 0.010024778000000005, 0.010024874999999989, 0.010025611000000004, 0.010025736000000007, 0.010025263999999992, 0.010024639000000002, 0.010026152999...</msg>
<status status="PASS" starttime="20201110 08:40:09.109" endtime="20201110 08:40:09.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.172" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:40:09.170" endtime="20201110 08:40:09.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.177" level="INFO">VALUE: 0.039095597</msg>
<status status="PASS" starttime="20201110 08:40:09.175" endtime="20201110 08:40:09.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.163" endtime="20201110 08:40:09.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.191" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:09.189" endtime="20201110 08:40:09.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.196" level="INFO">VALUE: [0.049194278, 0.059218708, 0.069243486, 0.079268361, 0.089293972, 0.099319708, 0.109344972, 0.119369611, 0.129395764, 0.139420556, 0.149446403, 0.159472014, 0.169497139, 0.179521792, 0.189546889, 0.199571625, 0.209597278, 0.219622806, 0.229647986, 0.239674014, 0.249700597, 0.259726861, 0.269752542, 0.279778361, 0.289804486, 0.299828778, 0.309855069, 0.319879819, 0.329906, 0.339931806, 0.349958861, 0.359985611, 0.370011542, 0.380037069, 0.390061694, 0.400086694, 0.410111611, 0.420138681, 0.430165778, 0.440190361, 0.450216278, 0.460241542, 0.470267194, 0.480292458, 0.490317194, 0.500342083, 0.510367319, 0.520391292, 0.53041625, 0.540439931, 0.550464458, 0.560490083, 0.570514722, 0.580538139, 0.590561708, 0.60058575, 0.610610819, 0.620635028, 0.63065975, 0.640684222, 0.650709167, 0.660732583, 0.670755917, 0.680779778, 0.690804347, 0.700829403, 0.710854958, 0.720880111, 0.730905708, 0.740930444, 0.750955347, 0.760980097, 0.771004736, 0.781028764, 0.791053833, 0.801077639, 0.811102403, 0.821127097, 0.831150972, 0.841176597, 0.851202181, 0.861227139, 0.871251764, 0.881276583, 0.891301069, 0.901324458, 0.9113485, 0.921371875, 0.931397125, 0.941421889, 0.951447194, 0.961472194, 0.971498264, 0.981523583, 0.99154825, 1.001573375, 1.011598278, 1.02162225, 1.031646111, 1.041668819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:09.194" endtime="20201110 08:40:09.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.182" endtime="20201110 08:40:09.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.205" endtime="20201110 08:40:09.208"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:09.213" endtime="20201110 08:40:09.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.209" endtime="20201110 08:40:09.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.200" endtime="20201110 08:40:09.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.490" endtime="20201110 08:40:09.239"></status>
</kw>
<msg timestamp="20201110 08:40:09.239" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.260" endtime="20201110 08:40:11.372"></status>
</kw>
<msg timestamp="20201110 08:40:11.373" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14664400, 'start-iter': 1, 'wakeups': [14674473, 14684471, 14694471, 1...</msg>
<status status="PASS" starttime="20201110 08:40:09.257" endtime="20201110 08:40:11.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.386" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14664400, 'start-iter': 1, 'wakeups': [14674473, 14684471, 14694471, 1...</msg>
<status status="PASS" starttime="20201110 08:40:11.381" endtime="20201110 08:40:11.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.388" endtime="20201110 08:40:11.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.250" endtime="20201110 08:40:11.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.244" endtime="20201110 08:40:11.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:11.401" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [14674473, 14684471, 14694471, 14704471, 14714471, 14724471, 14734471, 14744471, 14754471, 14764471, 14774471, 14784471, 14794471, 14804471, 14814471, 14824471, 14834471,...</msg>
<status status="PASS" starttime="20201110 08:40:11.397" endtime="20201110 08:40:11.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.412" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:11.409" endtime="20201110 08:40:11.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.416" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:11.414" endtime="20201110 08:40:11.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.403" endtime="20201110 08:40:11.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.433" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:11.430" endtime="20201110 08:40:11.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.438" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:11.435" endtime="20201110 08:40:11.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.420" endtime="20201110 08:40:11.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.450" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:40:11.448" endtime="20201110 08:40:11.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.455" level="INFO">VALUE: 14664400</msg>
<status status="PASS" starttime="20201110 08:40:11.453" endtime="20201110 08:40:11.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.441" endtime="20201110 08:40:11.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.468" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:11.466" endtime="20201110 08:40:11.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.473" level="INFO">VALUE: [14674473, 14684471, 14694471, 14704471, 14714471, 14724471, 14734471, 14744471, 14754471, 14764471, 14774471, 14784471, 14794471, 14804471, 14814471, 14824471, 14834471, 14844471, 14854471, 14864471, 14874471, 14884471, 14894471, 14904471, 14914471, 14924471, 14934471, 14944471, 14954471, 14964471, 14974471, 14984471, 14994471, 15004471, 15014471, 15024471, 15034471, 15044471, 15054471, 15064471, 15074471, 15084471, 15094471, 15104471, 15114471, 15124471, 15134471, 15144471, 15154471, 15164471, 15174471, 15184471, 15194471, 15204471, 15214471, 15224471, 15234471, 15244471, 15254471, 15264471, 15274471, 15284471, 15294471, 15304471, 15314471, 15324471, 15334471, 15344471, 15354471, 15364471, 15374471, 15384471, 15394471, 15404471, 15414471, 15424471, 15434471, 15444471, 15454471, 15464471, 15474471, 15484471, 15494471, 15504471, 15514471, 15524471, 15534471, 15544471, 15554471, 15564471, 15574471, 15584471, 15594471, 15604471, 15614471, 15624471, 15634471, 15644471, 15654471, 15664471]</msg>
<status status="PASS" starttime="20201110 08:40:11.470" endtime="20201110 08:40:11.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.459" endtime="20201110 08:40:11.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.493" endtime="20201110 08:40:11.831"></status>
</kw>
<msg timestamp="20201110 08:40:11.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037817417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047915056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.490" endtime="20201110 08:40:11.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037817417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047915056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.840" endtime="20201110 08:40:11.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.858" endtime="20201110 08:40:11.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.481" endtime="20201110 08:40:11.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.476" endtime="20201110 08:40:11.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:11.919" level="INFO">${RESULT} = {'source_diff': [0, 0.010097638999999999, 0.010021986000000004, 0.010024125000000002, 0.010023749999999998, 0.010024402000000002, 0.010023833999999995, 0.010025180000000009, 0.010025097999999996, 0.01...</msg>
<status status="PASS" starttime="20201110 08:40:11.866" endtime="20201110 08:40:11.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.930" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:40:11.927" endtime="20201110 08:40:11.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.934" level="INFO">VALUE: 0.037817417</msg>
<status status="PASS" starttime="20201110 08:40:11.932" endtime="20201110 08:40:11.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.921" endtime="20201110 08:40:11.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.947" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:11.945" endtime="20201110 08:40:11.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.952" level="INFO">VALUE: [0.047915056, 0.057937042, 0.067961167, 0.077984917, 0.088009319, 0.098033153, 0.108058333, 0.118083431, 0.128108931, 0.138133847, 0.148160125, 0.158185764, 0.168210889, 0.178233972, 0.188255806, 0.198278208, 0.208301861, 0.218325847, 0.228350097, 0.238373514, 0.248396486, 0.258419333, 0.268442333, 0.278464792, 0.288487653, 0.29851025, 0.308533653, 0.318557542, 0.328581833, 0.338604847, 0.348628556, 0.358651333, 0.368674569, 0.378696264, 0.388718875, 0.398741153, 0.408764681, 0.418787611, 0.428811194, 0.438835153, 0.448859431, 0.458882806, 0.468906889, 0.478930639, 0.488954472, 0.498978792, 0.509002764, 0.519025875, 0.529051028, 0.539075458, 0.549100167, 0.559123861, 0.569148111, 0.57917175, 0.589195889, 0.599220167, 0.609244958, 0.61926925, 0.629293861, 0.639317708, 0.649341417, 0.659365139, 0.669389125, 0.679412458, 0.689435764, 0.699459944, 0.709483431, 0.719506347, 0.7295295, 0.739552597, 0.749576014, 0.759598667, 0.769622278, 0.779645569, 0.789669028, 0.799692847, 0.809716611, 0.819739569, 0.829763958, 0.839788486, 0.849813208, 0.859837806, 0.869862528, 0.879886292, 0.889910917, 0.899935069, 0.909958236, 0.919981486, 0.930004597, 0.940027792, 0.950051847, 0.960075097, 0.970099, 0.980122403, 0.990147125, 1.000171847, 1.010196042, 1.020218736, 1.030243125, 1.040265944] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:11.949" endtime="20201110 08:40:11.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.937" endtime="20201110 08:40:11.954"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.960" endtime="20201110 08:40:11.963"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:11.968" endtime="20201110 08:40:11.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.964" endtime="20201110 08:40:11.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.956" endtime="20201110 08:40:11.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.241" endtime="20201110 08:40:11.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.672" endtime="20201110 08:40:11.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.671" endtime="20201110 08:40:11.995"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:12.000" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:12.023" endtime="20201110 08:40:14.134"></status>
</kw>
<msg timestamp="20201110 08:40:14.135" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17420521, 'start-iter': 1, 'wakeups': [17430619, 17440618, 17450619, 1...</msg>
<status status="PASS" starttime="20201110 08:40:12.019" endtime="20201110 08:40:14.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.142" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 17420521, 'start-iter': 1, 'wakeups': [17430619, 17440618, 17450619, 1...</msg>
<status status="PASS" starttime="20201110 08:40:14.137" endtime="20201110 08:40:14.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.144" endtime="20201110 08:40:14.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.011" endtime="20201110 08:40:14.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.005" endtime="20201110 08:40:14.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:14.158" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [17430619, 17440618, 17450619, 17460619, 17470618, 17480618, 17490618, 17500618, 17510619, 17520618, 17530618, 17540618, 17550618, 17560618, 17570618, 17580618, 17590618,...</msg>
<status status="PASS" starttime="20201110 08:40:14.153" endtime="20201110 08:40:14.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.168" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:14.166" endtime="20201110 08:40:14.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.172" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:14.170" endtime="20201110 08:40:14.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.160" endtime="20201110 08:40:14.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.184" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:14.182" endtime="20201110 08:40:14.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.189" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:14.186" endtime="20201110 08:40:14.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.176" endtime="20201110 08:40:14.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.201" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:40:14.198" endtime="20201110 08:40:14.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.205" level="INFO">VALUE: 17420521</msg>
<status status="PASS" starttime="20201110 08:40:14.203" endtime="20201110 08:40:14.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.192" endtime="20201110 08:40:14.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.217" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:14.215" endtime="20201110 08:40:14.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.222" level="INFO">VALUE: [17430619, 17440618, 17450619, 17460619, 17470618, 17480618, 17490618, 17500618, 17510619, 17520618, 17530618, 17540618, 17550618, 17560618, 17570618, 17580618, 17590618, 17600618, 17610618, 17620618, 17630618, 17640619, 17650618, 17660619, 17670618, 17680619, 17690619, 17700619, 17710619, 17720618, 17730618, 17740619, 17750618, 17760619, 17770618, 17780619, 17790618, 17800618, 17810618, 17820619, 17830618, 17840618, 17850618, 17860619, 17870618, 17880619, 17890618, 17900619, 17910618, 17920619, 17930619, 17940619, 17950619, 17960619, 17970618, 17980619, 17990618, 18000619, 18010618, 18020618, 18030618, 18040619, 18050618, 18060619, 18070618, 18080619, 18090619, 18100618, 18110618, 18120618, 18130618, 18140619, 18150618, 18160619, 18170618, 18180618, 18190619, 18200618, 18210618, 18220618, 18230619, 18240618, 18250618, 18260618, 18270618, 18280619, 18290618, 18300619, 18310618, 18320619, 18330618, 18340619, 18350619, 18360619, 18370618, 18380618, 18390618, 18400618, 18410619, 18420619]</msg>
<status status="PASS" starttime="20201110 08:40:14.220" endtime="20201110 08:40:14.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.209" endtime="20201110 08:40:14.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.241" endtime="20201110 08:40:14.579"></status>
</kw>
<msg timestamp="20201110 08:40:14.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044947431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055068389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:14.238" endtime="20201110 08:40:14.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044947431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055068389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:14.587" endtime="20201110 08:40:14.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.604" endtime="20201110 08:40:14.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.231" endtime="20201110 08:40:14.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.226" endtime="20201110 08:40:14.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:14.666" level="INFO">${RESULT} = {'source_diff': [0, 0.010120958, 0.010020430000000004, 0.010023139, 0.010021430999999997, 0.01002117999999999, 0.010021598000000007, 0.010023013999999997, 0.010022457999999998, 0.010024179999999994, 0...</msg>
<status status="PASS" starttime="20201110 08:40:14.613" endtime="20201110 08:40:14.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.677" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:40:14.675" endtime="20201110 08:40:14.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.681" level="INFO">VALUE: 0.044947431</msg>
<status status="PASS" starttime="20201110 08:40:14.679" endtime="20201110 08:40:14.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.668" endtime="20201110 08:40:14.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.694" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:14.692" endtime="20201110 08:40:14.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.699" level="INFO">VALUE: [0.055068389, 0.065088819, 0.075111958, 0.085133389, 0.095154569, 0.105176167, 0.115199181, 0.125221639, 0.135245819, 0.145267292, 0.155290583, 0.165314306, 0.175337347, 0.185358931, 0.195379625, 0.205399625, 0.215420667, 0.225441889, 0.235462431, 0.245483347, 0.255505153, 0.265527403, 0.275548833, 0.285572194, 0.295593292, 0.305616528, 0.315639639, 0.325662556, 0.33568475, 0.3457045, 0.355726931, 0.365750028, 0.375772583, 0.385798361, 0.395819722, 0.405842014, 0.415862833, 0.425884472, 0.435907306, 0.445931431, 0.455952264, 0.465974194, 0.475997431, 0.4860205, 0.496041986, 0.506064819, 0.516085917, 0.5261095, 0.536131972, 0.546156319, 0.556178944, 0.566201694, 0.576223486, 0.586245028, 0.596266569, 0.606289389, 0.616311431, 0.626335167, 0.636357333, 0.646379639, 0.656402667, 0.666425958, 0.6764475, 0.686470569, 0.696491514, 0.706515, 0.716537528, 0.726559514, 0.736583694, 0.746606403, 0.756629653, 0.766652569, 0.776674028, 0.786698056, 0.796720403, 0.806743597, 0.816768181, 0.826789556, 0.836811667, 0.846833861, 0.856857569, 0.866878861, 0.876901389, 0.886922722, 0.896944097, 0.906967486, 0.916989292, 0.927012278, 0.93703425, 0.947057625, 0.957078917, 0.967103931, 0.977128708, 0.987151931, 0.997176111, 1.007201472, 1.017226292, 1.027250653, 1.037275167, 1.047298764] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:14.697" endtime="20201110 08:40:14.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.685" endtime="20201110 08:40:14.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.708" endtime="20201110 08:40:14.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:14.716" endtime="20201110 08:40:14.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.712" endtime="20201110 08:40:14.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.703" endtime="20201110 08:40:14.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:12.002" endtime="20201110 08:40:14.741"></status>
</kw>
<msg timestamp="20201110 08:40:14.742" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.762" endtime="20201110 08:40:16.873"></status>
</kw>
<msg timestamp="20201110 08:40:16.875" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20154314, 'start-iter': 1, 'wakeups': [20164412, 20174412, 20184411, 2...</msg>
<status status="PASS" starttime="20201110 08:40:14.759" endtime="20201110 08:40:16.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.882" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20154314, 'start-iter': 1, 'wakeups': [20164412, 20174412, 20184411, 2...</msg>
<status status="PASS" starttime="20201110 08:40:16.877" endtime="20201110 08:40:16.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.884" endtime="20201110 08:40:16.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.752" endtime="20201110 08:40:16.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.747" endtime="20201110 08:40:16.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:16.897" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [20164412, 20174412, 20184411, 20194411, 20204411, 20214411, 20224411, 20234412, 20244411, 20254411, 20264411, 20274411, 20284412, 20294411, 20304411, 20314411, 20324411,...</msg>
<status status="PASS" starttime="20201110 08:40:16.892" endtime="20201110 08:40:16.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.907" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:16.905" endtime="20201110 08:40:16.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.911" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:16.909" endtime="20201110 08:40:16.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.899" endtime="20201110 08:40:16.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.931" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:16.929" endtime="20201110 08:40:16.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.935" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:16.933" endtime="20201110 08:40:16.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.922" endtime="20201110 08:40:16.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.949" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:40:16.947" endtime="20201110 08:40:16.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.954" level="INFO">VALUE: 20154314</msg>
<status status="PASS" starttime="20201110 08:40:16.952" endtime="20201110 08:40:16.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.939" endtime="20201110 08:40:16.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.967" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:16.964" endtime="20201110 08:40:16.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.971" level="INFO">VALUE: [20164412, 20174412, 20184411, 20194411, 20204411, 20214411, 20224411, 20234412, 20244411, 20254411, 20264411, 20274411, 20284412, 20294411, 20304411, 20314411, 20324411, 20334411, 20344412, 20354412, 20364412, 20374412, 20384411, 20394412, 20404411, 20414412, 20424411, 20434411, 20444411, 20454412, 20464411, 20474412, 20484411, 20494412, 20504411, 20514412, 20524411, 20534412, 20544411, 20554411, 20564411, 20574412, 20584411, 20594411, 20604411, 20614412, 20624411, 20634411, 20644412, 20654412, 20664411, 20674411, 20684411, 20694411, 20704411, 20714412, 20724411, 20734412, 20744411, 20754411, 20764411, 20774412, 20784411, 20794411, 20804412, 20814412, 20824411, 20834411, 20844411, 20854412, 20864411, 20874412, 20884412, 20894411, 20904411, 20914411, 20924412, 20934412, 20944412, 20954412, 20964411, 20974411, 20984411, 20994411, 21004411, 21014412, 21024411, 21034411, 21044411, 21054411, 21064411, 21074412, 21084412, 21094412, 21104411, 21114412, 21124411, 21134412, 21144411, 21154412]</msg>
<status status="PASS" starttime="20201110 08:40:16.969" endtime="20201110 08:40:16.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.957" endtime="20201110 08:40:16.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.990" endtime="20201110 08:40:17.328"></status>
</kw>
<msg timestamp="20201110 08:40:17.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037298958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047418736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:16.987" endtime="20201110 08:40:17.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037298958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047418736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:17.337" endtime="20201110 08:40:17.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.353" endtime="20201110 08:40:17.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.980" endtime="20201110 08:40:17.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.975" endtime="20201110 08:40:17.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:17.415" level="INFO">${RESULT} = {'source_diff': [0, 0.010119778000000003, 0.010020833, 0.010020819999999993, 0.010022028000000002, 0.010021805000000009, 0.01002141699999999, 0.010020653000000004, 0.010021332999999993, 0.010019486000...</msg>
<status status="PASS" starttime="20201110 08:40:17.362" endtime="20201110 08:40:17.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.425" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:40:17.423" endtime="20201110 08:40:17.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.430" level="INFO">VALUE: 0.037298958</msg>
<status status="PASS" starttime="20201110 08:40:17.428" endtime="20201110 08:40:17.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.417" endtime="20201110 08:40:17.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.444" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:17.441" endtime="20201110 08:40:17.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.448" level="INFO">VALUE: [0.047418736, 0.057439569, 0.067460389, 0.077482417, 0.087504222, 0.097525639, 0.107546292, 0.117567625, 0.127587111, 0.137608931, 0.147631625, 0.157654556, 0.167678319, 0.177699667, 0.187721875, 0.197743486, 0.207764931, 0.217786236, 0.227809069, 0.237831306, 0.247853361, 0.257875472, 0.267896861, 0.277920667, 0.287943, 0.297965875, 0.307986972, 0.31800875, 0.328030694, 0.338053917, 0.348075806, 0.358099014, 0.368120528, 0.378142917, 0.388164278, 0.398187458, 0.408209264, 0.418233528, 0.428255514, 0.438278306, 0.448300833, 0.458323708, 0.468345611, 0.478367806, 0.488391181, 0.498414583, 0.508436194, 0.518458167, 0.528482181, 0.538504528, 0.548525917, 0.558547722, 0.568568875, 0.578590528, 0.588611833, 0.598633389, 0.608653625, 0.618677014, 0.628699542, 0.638722042, 0.648745528, 0.658768847, 0.668790236, 0.678812611, 0.688837194, 0.698860764, 0.708882903, 0.718904514, 0.728927181, 0.738950486, 0.748972167, 0.758994694, 0.769017389, 0.779040889, 0.789066125, 0.799090139, 0.809116125, 0.819140569, 0.829161875, 0.839183222, 0.849203125, 0.859224361, 0.869248361, 0.879271583, 0.889294583, 0.899317361, 0.909339097, 0.919364319, 0.929387444, 0.939410111, 0.949432153, 0.959454486, 0.969475764, 0.979495639, 0.989515125, 0.999536903, 1.009557389, 1.01958, 1.029599639, 1.039621889] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:17.446" endtime="20201110 08:40:17.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.433" endtime="20201110 08:40:17.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.458" endtime="20201110 08:40:17.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:17.466" endtime="20201110 08:40:17.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.462" endtime="20201110 08:40:17.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.454" endtime="20201110 08:40:17.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.743" endtime="20201110 08:40:17.492"></status>
</kw>
<msg timestamp="20201110 08:40:17.492" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.513" endtime="20201110 08:40:19.624"></status>
</kw>
<msg timestamp="20201110 08:40:19.625" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22898648, 'start-iter': 1, 'wakeups': [22908746, 22918746, 22928745, 2...</msg>
<status status="PASS" starttime="20201110 08:40:17.509" endtime="20201110 08:40:19.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.632" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22898648, 'start-iter': 1, 'wakeups': [22908746, 22918746, 22928745, 2...</msg>
<status status="PASS" starttime="20201110 08:40:19.628" endtime="20201110 08:40:19.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.635" endtime="20201110 08:40:19.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.502" endtime="20201110 08:40:19.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.497" endtime="20201110 08:40:19.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:19.647" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [22908746, 22918746, 22928745, 22938746, 22948746, 22958745, 22968745, 22978746, 22988745, 22998745, 23008745, 23018745, 23028745, 23038746, 23048745, 23058746, 23068745,...</msg>
<status status="PASS" starttime="20201110 08:40:19.643" endtime="20201110 08:40:19.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.657" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:19.655" endtime="20201110 08:40:19.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.662" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:19.660" endtime="20201110 08:40:19.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.649" endtime="20201110 08:40:19.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.674" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:19.672" endtime="20201110 08:40:19.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.678" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:19.676" endtime="20201110 08:40:19.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.665" endtime="20201110 08:40:19.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.691" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:40:19.688" endtime="20201110 08:40:19.692"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.696" level="INFO">VALUE: 22898648</msg>
<status status="PASS" starttime="20201110 08:40:19.693" endtime="20201110 08:40:19.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.682" endtime="20201110 08:40:19.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.708" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:19.706" endtime="20201110 08:40:19.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.714" level="INFO">VALUE: [22908746, 22918746, 22928745, 22938746, 22948746, 22958745, 22968745, 22978746, 22988745, 22998745, 23008745, 23018745, 23028745, 23038746, 23048745, 23058746, 23068745, 23078745, 23088746, 23098745, 23108745, 23118745, 23128745, 23138745, 23148745, 23158746, 23168746, 23178745, 23188745, 23198745, 23208745, 23218745, 23228746, 23238745, 23248745, 23258746, 23268746, 23278746, 23288745, 23298745, 23308745, 23318745, 23328745, 23338746, 23348745, 23358746, 23368746, 23378745, 23388745, 23398745, 23408746, 23418745, 23428746, 23438746, 23448746, 23458745, 23468745, 23478746, 23488745, 23498745, 23508746, 23518745, 23528745, 23538745, 23548745, 23558745, 23568745, 23578746, 23588745, 23598746, 23608745, 23618746, 23628745, 23638745, 23648745, 23658746, 23668745, 23678746, 23688745, 23698746, 23708745, 23718745, 23728746, 23738745, 23748745, 23758746, 23768746, 23778745, 23788746, 23798746, 23808746, 23818746, 23828746, 23838745, 23848745, 23858746, 23868745, 23878746, 23888745, 23898745]</msg>
<status status="PASS" starttime="20201110 08:40:19.711" endtime="20201110 08:40:19.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.700" endtime="20201110 08:40:19.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.735" endtime="20201110 08:40:20.088"></status>
</kw>
<msg timestamp="20201110 08:40:20.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037117514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047239111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:19.730" endtime="20201110 08:40:20.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037117514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047239111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:20.096" endtime="20201110 08:40:20.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.114" endtime="20201110 08:40:20.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.723" endtime="20201110 08:40:20.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.718" endtime="20201110 08:40:20.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:20.176" level="INFO">${RESULT} = {'source_diff': [0, 0.010121597000000003, 0.010021556000000001, 0.010020901999999998, 0.010023820000000003, 0.010023068999999996, 0.010023361000000008, 0.010023736999999991, 0.010024111000000002, 0.01...</msg>
<status status="PASS" starttime="20201110 08:40:20.122" endtime="20201110 08:40:20.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.187" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:40:20.185" endtime="20201110 08:40:20.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.191" level="INFO">VALUE: 0.037117514</msg>
<status status="PASS" starttime="20201110 08:40:20.189" endtime="20201110 08:40:20.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.178" endtime="20201110 08:40:20.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.205" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:20.203" endtime="20201110 08:40:20.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:20.210" level="INFO">VALUE: [0.047239111, 0.057260667, 0.067281569, 0.077305389, 0.087328458, 0.097351819, 0.107375556, 0.117399667, 0.127423056, 0.137446403, 0.147470014, 0.157493153, 0.167516181, 0.177541111, 0.187564306, 0.19758825, 0.207610708, 0.217633417, 0.22765775, 0.237678875, 0.24770175, 0.257724708, 0.267747917, 0.277771444, 0.287795181, 0.29781975, 0.307843319, 0.317866944, 0.327891194, 0.337914569, 0.347938181, 0.357961361, 0.367987042, 0.378010625, 0.388034375, 0.398058264, 0.408080681, 0.418102986, 0.428125167, 0.438148208, 0.448171306, 0.458193931, 0.468216875, 0.478240903, 0.488264389, 0.498289833, 0.508314597, 0.518336819, 0.528359444, 0.538382306, 0.548406153, 0.558427847, 0.568451069, 0.578473431, 0.588496708, 0.598518514, 0.608541736, 0.618565583, 0.628587014, 0.638608736, 0.648632861, 0.658654681, 0.668677583, 0.67869975, 0.688722708, 0.698745806, 0.708768917, 0.7187925, 0.728813972, 0.738837431, 0.748859153, 0.758883889, 0.768907125, 0.77893075, 0.788954431, 0.798979764, 0.809003944, 0.819029597, 0.829052722, 0.839076694, 0.849099556, 0.859124042, 0.869149458, 0.879173292, 0.889197389, 0.899221306, 0.90924525, 0.919268819, 0.9292935, 0.939316708, 0.949339847, 0.959363361, 0.969386319, 0.979407722, 0.989431444, 0.999454875, 1.009477917, 1.019502931, 1.029526611, 1.039550125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:20.207" endtime="20201110 08:40:20.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.195" endtime="20201110 08:40:20.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.219" endtime="20201110 08:40:20.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:20.228" endtime="20201110 08:40:20.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.223" endtime="20201110 08:40:20.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.215" endtime="20201110 08:40:20.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.493" endtime="20201110 08:40:20.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.997" endtime="20201110 08:40:20.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.996" endtime="20201110 08:40:20.254"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:20.260" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:20.283" endtime="20201110 08:40:22.396"></status>
</kw>
<msg timestamp="20201110 08:40:22.397" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25662668, 'start-iter': 1, 'wakeups': [25672793, 25682792, 25692792, 2...</msg>
<status status="PASS" starttime="20201110 08:40:20.278" endtime="20201110 08:40:22.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 25662668, 'start-iter': 1, 'wakeups': [25672793, 25682792, 25692792, 2...</msg>
<status status="PASS" starttime="20201110 08:40:22.400" endtime="20201110 08:40:22.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.407" endtime="20201110 08:40:22.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.271" endtime="20201110 08:40:22.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.265" endtime="20201110 08:40:22.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.420" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [25672793, 25682792, 25692792, 25702792, 25712792, 25722792, 25732792, 25742792, 25752792, 25762792, 25772792, 25782792, 25792792, 25802792, 25812792, 25822792, 25832792,...</msg>
<status status="PASS" starttime="20201110 08:40:22.415" endtime="20201110 08:40:22.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.430" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:22.428" endtime="20201110 08:40:22.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.435" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:22.433" endtime="20201110 08:40:22.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.422" endtime="20201110 08:40:22.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.447" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:22.445" endtime="20201110 08:40:22.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.452" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:22.450" endtime="20201110 08:40:22.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.438" endtime="20201110 08:40:22.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.465" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:22.462" endtime="20201110 08:40:22.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.469" level="INFO">VALUE: 25662668</msg>
<status status="PASS" starttime="20201110 08:40:22.467" endtime="20201110 08:40:22.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.456" endtime="20201110 08:40:22.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.482" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:22.479" endtime="20201110 08:40:22.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.492" level="INFO">VALUE: [25672793, 25682792, 25692792, 25702792, 25712792, 25722792, 25732792, 25742792, 25752792, 25762792, 25772792, 25782792, 25792792, 25802792, 25812792, 25822792, 25832792, 25842792, 25852792, 25862792, 25872792, 25882792, 25892792, 25902792, 25912792, 25922792, 25932792, 25942792, 25952792, 25962792, 25972792, 25982792, 25992792, 26002792, 26012792, 26022792, 26032792, 26042792, 26052792, 26062792, 26072792, 26082792, 26092792, 26102792, 26112792, 26122792, 26132792, 26142792, 26152792, 26162792, 26172792, 26182792, 26192792, 26202792, 26212792, 26222792, 26232792, 26242792, 26252792, 26262792, 26272792, 26282792, 26292792, 26302792, 26312792, 26322792, 26332792, 26342792, 26352792, 26362792, 26372792, 26382792, 26392792, 26402792, 26412792, 26422792, 26432792, 26442792, 26452792, 26462792, 26472792, 26482792, 26492792, 26502792, 26512792, 26522792, 26532792, 26542792, 26552792, 26562792, 26572792, 26582792, 26592792, 26602792, 26612792, 26622792, 26632792, 26642792, 26652792, 26662792]</msg>
<status status="PASS" starttime="20201110 08:40:22.484" endtime="20201110 08:40:22.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.473" endtime="20201110 08:40:22.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.512" endtime="20201110 08:40:22.872"></status>
</kw>
<msg timestamp="20201110 08:40:22.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046109542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056261403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.508" endtime="20201110 08:40:22.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046109542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056261403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.881" endtime="20201110 08:40:22.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.898" endtime="20201110 08:40:22.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.501" endtime="20201110 08:40:22.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.496" endtime="20201110 08:40:22.905"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.962" level="INFO">${RESULT} = {'source_diff': [0, 0.010151860999999998, 0.010024124999999995, 0.010024958, 0.010024125000000009, 0.01002408299999999, 0.010024542000000011, 0.010024874999999989, 0.010024777999999998, 0.010024139000...</msg>
<status status="PASS" starttime="20201110 08:40:22.906" endtime="20201110 08:40:22.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.973" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:22.970" endtime="20201110 08:40:22.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.977" level="INFO">VALUE: 0.046109542</msg>
<status status="PASS" starttime="20201110 08:40:22.975" endtime="20201110 08:40:22.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.964" endtime="20201110 08:40:22.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.991" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:22.988" endtime="20201110 08:40:22.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.995" level="INFO">VALUE: [0.056261403, 0.066285528, 0.076310486, 0.086334611, 0.096358694, 0.106383236, 0.116408111, 0.126432889, 0.136457028, 0.146481056, 0.156506306, 0.166531042, 0.176555722, 0.186579083, 0.196602917, 0.206626236, 0.2166505, 0.226674819, 0.236699875, 0.246725375, 0.256751139, 0.266777361, 0.276804, 0.286831194, 0.296857986, 0.306885125, 0.316910875, 0.326935528, 0.33696075, 0.346985181, 0.357009778, 0.367033486, 0.377057958, 0.387082597, 0.397107889, 0.407133069, 0.41715825, 0.427183903, 0.437208722, 0.447232931, 0.457257847, 0.467282639, 0.477306875, 0.487330306, 0.497355208, 0.507379486, 0.517404042, 0.527428153, 0.53745325, 0.547477125, 0.5575015, 0.567526889, 0.577552417, 0.587577056, 0.597602847, 0.607627347, 0.617651583, 0.627675819, 0.637700778, 0.647725847, 0.657750319, 0.667774583, 0.677799403, 0.687823111, 0.697847722, 0.707871514, 0.717895014, 0.727919514, 0.737944792, 0.747968806, 0.757993403, 0.768017806, 0.778041958, 0.788066222, 0.798092597, 0.808119153, 0.818145653, 0.828169583, 0.838194236, 0.848217444, 0.858240944, 0.868264083, 0.878289389, 0.888312972, 0.898336569, 0.908360069, 0.918384236, 0.928407889, 0.938431722, 0.948455792, 0.958479667, 0.968504014, 0.978528708, 0.988553556, 0.998578222, 1.008603458, 1.018628903, 1.028654972, 1.038680722, 1.048705917] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:22.993" endtime="20201110 08:40:22.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.981" endtime="20201110 08:40:22.998"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.004" endtime="20201110 08:40:23.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:23.012" endtime="20201110 08:40:23.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.008" endtime="20201110 08:40:23.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.999" endtime="20201110 08:40:23.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.262" endtime="20201110 08:40:23.039"></status>
</kw>
<msg timestamp="20201110 08:40:23.039" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:23.060" endtime="20201110 08:40:25.172"></status>
</kw>
<msg timestamp="20201110 08:40:25.174" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28433648, 'start-iter': 1, 'wakeups': [28443774, 28453772, 28463772, 2...</msg>
<status status="PASS" starttime="20201110 08:40:23.057" endtime="20201110 08:40:25.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.180" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28433648, 'start-iter': 1, 'wakeups': [28443774, 28453772, 28463772, 2...</msg>
<status status="PASS" starttime="20201110 08:40:25.176" endtime="20201110 08:40:25.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.183" endtime="20201110 08:40:25.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.050" endtime="20201110 08:40:25.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.044" endtime="20201110 08:40:25.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:25.196" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [28443774, 28453772, 28463772, 28473772, 28483772, 28493772, 28503772, 28513772, 28523772, 28533772, 28543772, 28553772, 28563772, 28573772, 28583772, 28593772, 28603772,...</msg>
<status status="PASS" starttime="20201110 08:40:25.191" endtime="20201110 08:40:25.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.206" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:25.204" endtime="20201110 08:40:25.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.211" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:25.208" endtime="20201110 08:40:25.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.198" endtime="20201110 08:40:25.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.223" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:25.221" endtime="20201110 08:40:25.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.230" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:25.225" endtime="20201110 08:40:25.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.214" endtime="20201110 08:40:25.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.242" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:25.240" endtime="20201110 08:40:25.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.247" level="INFO">VALUE: 28433648</msg>
<status status="PASS" starttime="20201110 08:40:25.244" endtime="20201110 08:40:25.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.233" endtime="20201110 08:40:25.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.259" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:25.257" endtime="20201110 08:40:25.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.264" level="INFO">VALUE: [28443774, 28453772, 28463772, 28473772, 28483772, 28493772, 28503772, 28513772, 28523772, 28533772, 28543772, 28553772, 28563772, 28573772, 28583772, 28593772, 28603772, 28613772, 28623772, 28633772, 28643772, 28653772, 28663772, 28673772, 28683772, 28693772, 28703772, 28713772, 28723772, 28733772, 28743772, 28753772, 28763772, 28773772, 28783772, 28793772, 28803772, 28813772, 28823772, 28833772, 28843772, 28853772, 28863772, 28873772, 28883772, 28893772, 28903772, 28913772, 28923772, 28933772, 28943772, 28953772, 28963772, 28973772, 28983772, 28993772, 29003772, 29013772, 29023772, 29033772, 29043772, 29053772, 29063772, 29073772, 29083772, 29093772, 29103772, 29113772, 29123772, 29133772, 29143772, 29153772, 29163772, 29173772, 29183772, 29193772, 29203772, 29213772, 29223772, 29233772, 29243772, 29253772, 29263772, 29273772, 29283772, 29293772, 29303772, 29313772, 29323772, 29333772, 29343772, 29353772, 29363772, 29373772, 29383772, 29393772, 29403772, 29413772, 29423772, 29433772]</msg>
<status status="PASS" starttime="20201110 08:40:25.261" endtime="20201110 08:40:25.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.250" endtime="20201110 08:40:25.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.283" endtime="20201110 08:40:25.627"></status>
</kw>
<msg timestamp="20201110 08:40:25.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038828778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048979056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:25.280" endtime="20201110 08:40:25.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038828778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048979056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:25.636" endtime="20201110 08:40:25.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.653" endtime="20201110 08:40:25.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.273" endtime="20201110 08:40:25.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.267" endtime="20201110 08:40:25.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:25.714" level="INFO">${RESULT} = {'source_diff': [0, 0.010150277999999999, 0.010023347000000002, 0.010026193999999995, 0.010024639000000002, 0.010024777999999998, 0.010025777999999999, 0.010024513999999998, 0.010022944000000006, 0.01...</msg>
<status status="PASS" starttime="20201110 08:40:25.661" endtime="20201110 08:40:25.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.725" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:25.723" endtime="20201110 08:40:25.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.730" level="INFO">VALUE: 0.038828778</msg>
<status status="PASS" starttime="20201110 08:40:25.727" endtime="20201110 08:40:25.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.716" endtime="20201110 08:40:25.733"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.744" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:25.742" endtime="20201110 08:40:25.745"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.749" level="INFO">VALUE: [0.048979056, 0.059002403, 0.069028597, 0.079053236, 0.089078014, 0.099103792, 0.109128306, 0.11915125, 0.129175403, 0.139199153, 0.149222819, 0.159245917, 0.169269944, 0.179293181, 0.189317514, 0.199340333, 0.209364292, 0.219387694, 0.229411722, 0.239437486, 0.249463583, 0.259488361, 0.269512042, 0.279533139, 0.289556597, 0.299579347, 0.309602236, 0.319624944, 0.329648431, 0.339671069, 0.349694083, 0.359716542, 0.369739306, 0.379761653, 0.389783819, 0.399805875, 0.409829486, 0.419852583, 0.429875347, 0.439896889, 0.449920236, 0.459942625, 0.469965597, 0.479988333, 0.490010847, 0.500033861, 0.510057819, 0.520081444, 0.530104875, 0.540127722, 0.550150347, 0.560173556, 0.570196972, 0.580220167, 0.590244042, 0.600267444, 0.610291444, 0.620315097, 0.630340167, 0.640364431, 0.650389917, 0.660415792, 0.670439542, 0.680462778, 0.690487722, 0.700512694, 0.710538181, 0.720561111, 0.730585472, 0.740609458, 0.750632333, 0.76065475, 0.770676944, 0.780699028, 0.790720819, 0.800743417, 0.810766542, 0.820788986, 0.830812764, 0.840835833, 0.850859694, 0.860883444, 0.870907347, 0.880929625, 0.890951736, 0.900975028, 0.910999569, 0.921023222, 0.931047556, 0.941071778, 0.951096, 0.961119556, 0.971143181, 0.981165736, 0.991189597, 1.001212278, 1.011236569, 1.021260931, 1.031286653, 1.041311458] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:25.746" endtime="20201110 08:40:25.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.734" endtime="20201110 08:40:25.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.757" endtime="20201110 08:40:25.760"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:25.766" endtime="20201110 08:40:25.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.761" endtime="20201110 08:40:25.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.753" endtime="20201110 08:40:25.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:23.041" endtime="20201110 08:40:25.791"></status>
</kw>
<msg timestamp="20201110 08:40:25.792" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.813" endtime="20201110 08:40:27.924"></status>
</kw>
<msg timestamp="20201110 08:40:27.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31179722, 'start-iter': 1, 'wakeups': [31189847, 31199846, 31209846, 3...</msg>
<status status="PASS" starttime="20201110 08:40:25.810" endtime="20201110 08:40:27.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.943" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31179722, 'start-iter': 1, 'wakeups': [31189847, 31199846, 31209846, 3...</msg>
<status status="PASS" starttime="20201110 08:40:27.938" endtime="20201110 08:40:27.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.945" endtime="20201110 08:40:27.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.802" endtime="20201110 08:40:27.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.797" endtime="20201110 08:40:27.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:27.959" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [31189847, 31199846, 31209846, 31219846, 31229846, 31239846, 31249846, 31259846, 31269846, 31279846, 31289846, 31299846, 31309846, 31319846, 31329846, 31339846, 31349846,...</msg>
<status status="PASS" starttime="20201110 08:40:27.954" endtime="20201110 08:40:27.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.975" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:27.973" endtime="20201110 08:40:27.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.980" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:27.978" endtime="20201110 08:40:27.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.961" endtime="20201110 08:40:27.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.993" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:27.991" endtime="20201110 08:40:27.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.998" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:27.996" endtime="20201110 08:40:27.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.984" endtime="20201110 08:40:28.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.011" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:28.009" endtime="20201110 08:40:28.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.016" level="INFO">VALUE: 31179722</msg>
<status status="PASS" starttime="20201110 08:40:28.013" endtime="20201110 08:40:28.016"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.002" endtime="20201110 08:40:28.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.028" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:28.026" endtime="20201110 08:40:28.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.033" level="INFO">VALUE: [31189847, 31199846, 31209846, 31219846, 31229846, 31239846, 31249846, 31259846, 31269846, 31279846, 31289846, 31299846, 31309846, 31319846, 31329846, 31339846, 31349846, 31359846, 31369846, 31379846, 31389846, 31399846, 31409846, 31419846, 31429846, 31439846, 31449846, 31459846, 31469846, 31479846, 31489846, 31499846, 31509846, 31519846, 31529846, 31539846, 31549846, 31559846, 31569846, 31579846, 31589846, 31599846, 31609846, 31619846, 31629846, 31639846, 31649846, 31659846, 31669846, 31679846, 31689846, 31699846, 31709846, 31719846, 31729846, 31739846, 31749846, 31759846, 31769846, 31779846, 31789846, 31799846, 31809846, 31819846, 31829846, 31839846, 31849846, 31859846, 31869846, 31879846, 31889846, 31899846, 31909846, 31919846, 31929846, 31939846, 31949846, 31959846, 31969846, 31979846, 31989846, 31999846, 32009846, 32019846, 32029846, 32039846, 32049846, 32059846, 32069846, 32079846, 32089846, 32099846, 32109846, 32119846, 32129846, 32139846, 32149846, 32159846, 32169846, 32179846]</msg>
<status status="PASS" starttime="20201110 08:40:28.031" endtime="20201110 08:40:28.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.019" endtime="20201110 08:40:28.036"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.054" endtime="20201110 08:40:28.413"></status>
</kw>
<msg timestamp="20201110 08:40:28.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037901958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048050639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:28.051" endtime="20201110 08:40:28.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037901958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048050639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:28.422" endtime="20201110 08:40:28.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.440" endtime="20201110 08:40:28.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.042" endtime="20201110 08:40:28.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.037" endtime="20201110 08:40:28.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:28.502" level="INFO">${RESULT} = {'source_diff': [0, 0.010148681, 0.010020722000000003, 0.010023777999999997, 0.010022417000000006, 0.010022540999999996, 0.010023028000000003, 0.010023360999999995, 0.010022056000000001, 0.01002280499...</msg>
<status status="PASS" starttime="20201110 08:40:28.448" endtime="20201110 08:40:28.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.513" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:28.510" endtime="20201110 08:40:28.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.517" level="INFO">VALUE: 0.037901958</msg>
<status status="PASS" starttime="20201110 08:40:28.515" endtime="20201110 08:40:28.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.504" endtime="20201110 08:40:28.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.531" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:28.529" endtime="20201110 08:40:28.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.536" level="INFO">VALUE: [0.048050639, 0.058071361, 0.068095139, 0.078117556, 0.088140097, 0.098163125, 0.108186486, 0.118208542, 0.128231347, 0.138254222, 0.148278375, 0.158302042, 0.168324958, 0.178347847, 0.188371833, 0.198395472, 0.208420111, 0.218443194, 0.228467736, 0.238491167, 0.248514764, 0.25853825, 0.268561375, 0.278584306, 0.288607694, 0.298631125, 0.308654931, 0.318677486, 0.328700917, 0.338724264, 0.348747111, 0.358770333, 0.368793833, 0.378817667, 0.388841528, 0.398865972, 0.408889583, 0.418912917, 0.428937472, 0.438961083, 0.448986403, 0.459010653, 0.469034681, 0.479058903, 0.489082458, 0.499105653, 0.509130069, 0.519153833, 0.529177889, 0.5392025, 0.549226875, 0.559251333, 0.569276958, 0.579302208, 0.589327028, 0.599349861, 0.609372403, 0.619395292, 0.629418, 0.63944, 0.649462542, 0.659484347, 0.669506708, 0.679529028, 0.689552319, 0.699575736, 0.709599167, 0.719622097, 0.729646278, 0.739670556, 0.749693875, 0.75971675, 0.769741111, 0.779765222, 0.789788375, 0.799812431, 0.809835931, 0.819859153, 0.829882931, 0.839906778, 0.849930708, 0.859952931, 0.869977389, 0.880001111, 0.890025028, 0.900049278, 0.910073806, 0.920096, 0.930118514, 0.940141069, 0.950163681, 0.960186597, 0.970208431, 0.980229722, 0.990251014, 1.000272069, 1.010293611, 1.020315486, 1.030338292, 1.0403605] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:28.533" endtime="20201110 08:40:28.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.521" endtime="20201110 08:40:28.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.545" endtime="20201110 08:40:28.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:28.553" endtime="20201110 08:40:28.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.549" endtime="20201110 08:40:28.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.540" endtime="20201110 08:40:28.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.793" endtime="20201110 08:40:28.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.257" endtime="20201110 08:40:28.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:20.255" endtime="20201110 08:40:28.580"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:28.585" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.610" endtime="20201110 08:40:30.723"></status>
</kw>
<msg timestamp="20201110 08:40:30.724" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33970610, 'start-iter': 1, 'wakeups': [33980765, 33990763, 34000763, 3...</msg>
<status status="PASS" starttime="20201110 08:40:28.606" endtime="20201110 08:40:30.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.731" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 33970610, 'start-iter': 1, 'wakeups': [33980765, 33990763, 34000763, 3...</msg>
<status status="PASS" starttime="20201110 08:40:30.727" endtime="20201110 08:40:30.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.734" endtime="20201110 08:40:30.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.596" endtime="20201110 08:40:30.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.591" endtime="20201110 08:40:30.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:30.748" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [33980765, 33990763, 34000763, 34010763, 34020762, 34030763, 34040763, 34050763, 34060763, 34070763, 34080762, 34090763, 34100763, 34110763, 34120763, 34130763, 34140763,...</msg>
<status status="PASS" starttime="20201110 08:40:30.743" endtime="20201110 08:40:30.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.758" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:30.756" endtime="20201110 08:40:30.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.763" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:30.760" endtime="20201110 08:40:30.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.750" endtime="20201110 08:40:30.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.775" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:30.773" endtime="20201110 08:40:30.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.780" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:30.777" endtime="20201110 08:40:30.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.766" endtime="20201110 08:40:30.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.792" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:30.790" endtime="20201110 08:40:30.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.797" level="INFO">VALUE: 33970610</msg>
<status status="PASS" starttime="20201110 08:40:30.795" endtime="20201110 08:40:30.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.783" endtime="20201110 08:40:30.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.809" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:30.807" endtime="20201110 08:40:30.810"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.814" level="INFO">VALUE: [33980765, 33990763, 34000763, 34010763, 34020762, 34030763, 34040763, 34050763, 34060763, 34070763, 34080762, 34090763, 34100763, 34110763, 34120763, 34130763, 34140763, 34150763, 34160763, 34170763, 34180763, 34190763, 34200763, 34210762, 34220763, 34230763, 34240763, 34250763, 34260762, 34270763, 34280762, 34290763, 34300763, 34310763, 34320762, 34330762, 34340763, 34350763, 34360763, 34370763, 34380762, 34390763, 34400763, 34410763, 34420762, 34430763, 34440763, 34450763, 34460762, 34470763, 34480763, 34490763, 34500763, 34510763, 34520763, 34530763, 34540762, 34550763, 34560763, 34570762, 34580762, 34590763, 34600763, 34610763, 34620762, 34630762, 34640763, 34650763, 34660762, 34670763, 34680763, 34690763, 34700763, 34710763, 34720762, 34730762, 34740763, 34750763, 34760763, 34770762, 34780763, 34790763, 34800762, 34810762, 34820763, 34830763, 34840763, 34850763, 34860762, 34870763, 34880763, 34890763, 34900762, 34910763, 34920763, 34930763, 34940763, 34950763, 34960762, 34970763]</msg>
<status status="PASS" starttime="20201110 08:40:30.812" endtime="20201110 08:40:30.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.801" endtime="20201110 08:40:30.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.833" endtime="20201110 08:40:31.191"></status>
</kw>
<msg timestamp="20201110 08:40:31.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047723958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057901139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.830" endtime="20201110 08:40:31.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047723958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057901139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:31.200" endtime="20201110 08:40:31.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.217" endtime="20201110 08:40:31.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.823" endtime="20201110 08:40:31.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.818" endtime="20201110 08:40:31.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:31.278" level="INFO">${RESULT} = {'source_diff': [0, 0.010177181, 0.010019679999999996, 0.010021500000000003, 0.010021764000000002, 0.010022056000000001, 0.010023667, 0.010023485999999998, 0.010022708000000005, 0.010023721999999985, ...</msg>
<status status="PASS" starttime="20201110 08:40:31.225" endtime="20201110 08:40:31.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.290" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:31.287" endtime="20201110 08:40:31.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.294" level="INFO">VALUE: 0.047723958</msg>
<status status="PASS" starttime="20201110 08:40:31.292" endtime="20201110 08:40:31.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.281" endtime="20201110 08:40:31.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.307" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:31.305" endtime="20201110 08:40:31.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:31.312" level="INFO">VALUE: [0.057901139, 0.067920819, 0.077942319, 0.087964083, 0.097986139, 0.108009806, 0.118033292, 0.128056, 0.138079722, 0.148102167, 0.158124167, 0.168148514, 0.178172458, 0.18819625, 0.198220347, 0.208244778, 0.218269264, 0.228292722, 0.238316861, 0.248341681, 0.258365556, 0.268389639, 0.278413833, 0.288436167, 0.298461181, 0.308484778, 0.318507403, 0.328530097, 0.338552319, 0.348575556, 0.358597583, 0.368622028, 0.378644694, 0.388666958, 0.398688847, 0.408711833, 0.418736472, 0.428759472, 0.438783042, 0.448807167, 0.458830014, 0.468855069, 0.478879208, 0.488903028, 0.498925931, 0.508950597, 0.518974903, 0.528999236, 0.539022097, 0.549046806, 0.559071486, 0.569094917, 0.579118708, 0.589141569, 0.599164722, 0.609188014, 0.619210444, 0.629234417, 0.639257431, 0.649279972, 0.659304194, 0.669327833, 0.679349708, 0.689370889, 0.699392431, 0.709414389, 0.71943775, 0.729459389, 0.739479653, 0.749502722, 0.759525278, 0.769547625, 0.779569375, 0.789591403, 0.799612194, 0.809634028, 0.819658931, 0.829682972, 0.839706833, 0.849729889, 0.859754333, 0.86977775, 0.879801389, 0.889824903, 0.899849292, 0.909872847, 0.919897514, 0.929921944, 0.939945014, 0.949970153, 0.959993569, 0.970016944, 0.980039097, 0.990064903, 1.0000895, 1.010112583, 1.0201355, 1.030158569, 1.040182264, 1.050207736] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:31.310" endtime="20201110 08:40:31.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.298" endtime="20201110 08:40:31.314"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.320" endtime="20201110 08:40:31.323"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:31.329" endtime="20201110 08:40:31.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.324" endtime="20201110 08:40:31.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.316" endtime="20201110 08:40:31.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.587" endtime="20201110 08:40:31.354"></status>
</kw>
<msg timestamp="20201110 08:40:31.354" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:31.375" endtime="20201110 08:40:33.487"></status>
</kw>
<msg timestamp="20201110 08:40:33.488" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36729366, 'start-iter': 1, 'wakeups': [36739520, 36749519, 36759518, 3...</msg>
<status status="PASS" starttime="20201110 08:40:31.372" endtime="20201110 08:40:33.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.495" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36729366, 'start-iter': 1, 'wakeups': [36739520, 36749519, 36759518, 3...</msg>
<status status="PASS" starttime="20201110 08:40:33.490" endtime="20201110 08:40:33.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.497" endtime="20201110 08:40:33.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.365" endtime="20201110 08:40:33.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.360" endtime="20201110 08:40:33.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:33.510" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [36739520, 36749519, 36759518, 36769519, 36779519, 36789518, 36799518, 36809519, 36819519, 36829519, 36839519, 36849519, 36859519, 36869519, 36879519, 36889518, 36899518,...</msg>
<status status="PASS" starttime="20201110 08:40:33.506" endtime="20201110 08:40:33.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.520" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:33.518" endtime="20201110 08:40:33.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.524" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:33.522" endtime="20201110 08:40:33.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.512" endtime="20201110 08:40:33.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.543" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:33.540" endtime="20201110 08:40:33.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.547" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:33.545" endtime="20201110 08:40:33.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.534" endtime="20201110 08:40:33.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.562" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:33.559" endtime="20201110 08:40:33.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.566" level="INFO">VALUE: 36729366</msg>
<status status="PASS" starttime="20201110 08:40:33.564" endtime="20201110 08:40:33.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.551" endtime="20201110 08:40:33.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.579" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:33.576" endtime="20201110 08:40:33.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.584" level="INFO">VALUE: [36739520, 36749519, 36759518, 36769519, 36779519, 36789518, 36799518, 36809519, 36819519, 36829519, 36839519, 36849519, 36859519, 36869519, 36879519, 36889518, 36899518, 36909519, 36919518, 36929519, 36939519, 36949519, 36959518, 36969518, 36979519, 36989519, 36999519, 37009519, 37019519, 37029519, 37039519, 37049518, 37059518, 37069519, 37079518, 37089519, 37099518, 37109518, 37119518, 37129519, 37139519, 37149519, 37159519, 37169519, 37179519, 37189518, 37199518, 37209519, 37219519, 37229519, 37239519, 37249519, 37259519, 37269518, 37279518, 37289519, 37299518, 37309519, 37319518, 37329519, 37339519, 37349518, 37359519, 37369519, 37379518, 37389518, 37399518, 37409519, 37419519, 37429519, 37439518, 37449519, 37459519, 37469519, 37479519, 37489519, 37499519, 37509519, 37519519, 37529518, 37539519, 37549519, 37559519, 37569519, 37579519, 37589519, 37599519, 37609519, 37619519, 37629519, 37639519, 37649519, 37659519, 37669519, 37679519, 37689519, 37699519, 37709519, 37719518, 37729519]</msg>
<status status="PASS" starttime="20201110 08:40:33.581" endtime="20201110 08:40:33.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.570" endtime="20201110 08:40:33.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.603" endtime="20201110 08:40:33.968"></status>
</kw>
<msg timestamp="20201110 08:40:33.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037205875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047383653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.600" endtime="20201110 08:40:33.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037205875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047383653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.976" endtime="20201110 08:40:33.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.994" endtime="20201110 08:40:33.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.592" endtime="20201110 08:40:34.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.587" endtime="20201110 08:40:34.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:34.057" level="INFO">${RESULT} = {'source_diff': [0, 0.010177777999999998, 0.010022180000000006, 0.010023611000000002, 0.010025305999999998, 0.010024180999999993, 0.010022333000000008, 0.010025832999999998, 0.010026235999999994, 0.01...</msg>
<status status="PASS" starttime="20201110 08:40:34.003" endtime="20201110 08:40:34.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.068" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:34.066" endtime="20201110 08:40:34.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.072" level="INFO">VALUE: 0.037205875</msg>
<status status="PASS" starttime="20201110 08:40:34.070" endtime="20201110 08:40:34.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.059" endtime="20201110 08:40:34.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.087" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:34.084" endtime="20201110 08:40:34.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:34.093" level="INFO">VALUE: [0.047383653, 0.057405833, 0.067429444, 0.07745475, 0.087478931, 0.097501264, 0.107527097, 0.117553333, 0.127578958, 0.137603569, 0.147627625, 0.157651653, 0.167674986, 0.177698222, 0.187721417, 0.197742736, 0.207766403, 0.217790569, 0.227813125, 0.237837597, 0.247862542, 0.2578865, 0.267909847, 0.277935514, 0.287962458, 0.297987486, 0.308011986, 0.318037181, 0.328062306, 0.338087056, 0.348111292, 0.358134778, 0.368160375, 0.378186083, 0.388209403, 0.398235181, 0.408258458, 0.418282806, 0.428307903, 0.438333361, 0.448358403, 0.458382917, 0.468408667, 0.478434306, 0.488458583, 0.498481681, 0.508505986, 0.518531431, 0.528555542, 0.538578472, 0.548603208, 0.558627986, 0.568653278, 0.578678236, 0.588704472, 0.598731236, 0.608755778, 0.618780944, 0.628804153, 0.638829681, 0.648855125, 0.65888075, 0.668909431, 0.678935472, 0.688960583, 0.698985444, 0.709010903, 0.719037208, 0.729062722, 0.739087722, 0.749111444, 0.759138, 0.769163208, 0.779188306, 0.789214306, 0.79923975, 0.809264611, 0.819288833, 0.829314944, 0.839338583, 0.849365722, 0.859392083, 0.869418333, 0.8794445, 0.889470875, 0.899496222, 0.909520708, 0.919544694, 0.929569903, 0.939595083, 0.949621403, 0.959648417, 0.969674361, 0.979699569, 0.989726486, 0.999752944, 1.009778583, 1.019803583, 1.029826972, 1.039853403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:34.089" endtime="20201110 08:40:34.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.076" endtime="20201110 08:40:34.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.102" endtime="20201110 08:40:34.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:34.110" endtime="20201110 08:40:34.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.106" endtime="20201110 08:40:34.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.097" endtime="20201110 08:40:34.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:31.356" endtime="20201110 08:40:34.136"></status>
</kw>
<msg timestamp="20201110 08:40:34.137" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:34.158" endtime="20201110 08:40:36.270"></status>
</kw>
<msg timestamp="20201110 08:40:36.272" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39505865, 'start-iter': 1, 'wakeups': [39516020, 39526018, 39536018, 3...</msg>
<status status="PASS" starttime="20201110 08:40:34.155" endtime="20201110 08:40:36.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.279" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39505865, 'start-iter': 1, 'wakeups': [39516020, 39526018, 39536018, 3...</msg>
<status status="PASS" starttime="20201110 08:40:36.274" endtime="20201110 08:40:36.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.281" endtime="20201110 08:40:36.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.147" endtime="20201110 08:40:36.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.142" endtime="20201110 08:40:36.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:36.295" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [39516020, 39526018, 39536018, 39546018, 39556018, 39566018, 39576018, 39586018, 39596018, 39606018, 39616018, 39626018, 39636018, 39646018, 39656018, 39666018, 39676018,...</msg>
<status status="PASS" starttime="20201110 08:40:36.290" endtime="20201110 08:40:36.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.305" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:36.303" endtime="20201110 08:40:36.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.309" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:36.307" endtime="20201110 08:40:36.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.297" endtime="20201110 08:40:36.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.322" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:36.320" endtime="20201110 08:40:36.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.326" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:36.324" endtime="20201110 08:40:36.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.313" endtime="20201110 08:40:36.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.339" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:36.336" endtime="20201110 08:40:36.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.344" level="INFO">VALUE: 39505865</msg>
<status status="PASS" starttime="20201110 08:40:36.342" endtime="20201110 08:40:36.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.330" endtime="20201110 08:40:36.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.356" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:36.354" endtime="20201110 08:40:36.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.361" level="INFO">VALUE: [39516020, 39526018, 39536018, 39546018, 39556018, 39566018, 39576018, 39586018, 39596018, 39606018, 39616018, 39626018, 39636018, 39646018, 39656018, 39666018, 39676018, 39686018, 39696018, 39706018, 39716018, 39726017, 39736018, 39746018, 39756018, 39766018, 39776018, 39786018, 39796018, 39806018, 39816018, 39826018, 39836017, 39846018, 39856018, 39866018, 39876018, 39886018, 39896018, 39906018, 39916018, 39926018, 39936018, 39946017, 39956017, 39966018, 39976018, 39986018, 39996018, 40006018, 40016018, 40026018, 40036018, 40046018, 40056017, 40066018, 40076018, 40086018, 40096017, 40106018, 40116018, 40126018, 40136018, 40146018, 40156017, 40166017, 40176017, 40186018, 40196018, 40206018, 40216018, 40226018, 40236018, 40246018, 40256018, 40266017, 40276017, 40286017, 40296018, 40306018, 40316017, 40326018, 40336018, 40346018, 40356017, 40366018, 40376018, 40386017, 40396018, 40406018, 40416017, 40426018, 40436018, 40446018, 40456017, 40466017, 40476018, 40486018, 40496018, 40506018]</msg>
<status status="PASS" starttime="20201110 08:40:36.359" endtime="20201110 08:40:36.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.348" endtime="20201110 08:40:36.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.383" endtime="20201110 08:40:36.728"></status>
</kw>
<msg timestamp="20201110 08:40:36.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038641347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048823319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.377" endtime="20201110 08:40:36.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038641347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048823319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.737" endtime="20201110 08:40:36.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.755" endtime="20201110 08:40:36.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.370" endtime="20201110 08:40:36.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.365" endtime="20201110 08:40:36.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:36.816" level="INFO">${RESULT} = {'source_diff': [0, 0.010181971999999997, 0.010024945, 0.010026832999999999, 0.01002565300000001, 0.010025693999999988, 0.010026764000000007, 0.010023944999999992, 0.010022847000000001, 0.010023028000...</msg>
<status status="PASS" starttime="20201110 08:40:36.763" endtime="20201110 08:40:36.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.826" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:36.824" endtime="20201110 08:40:36.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.831" level="INFO">VALUE: 0.038641347</msg>
<status status="PASS" starttime="20201110 08:40:36.829" endtime="20201110 08:40:36.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.818" endtime="20201110 08:40:36.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.844" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:36.842" endtime="20201110 08:40:36.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.849" level="INFO">VALUE: [0.048823319, 0.058848264, 0.068875097, 0.07890075, 0.088926444, 0.098953208, 0.108977153, 0.119, 0.129023028, 0.139046694, 0.149070917, 0.159094889, 0.169118958, 0.179143028, 0.189166306, 0.19919025, 0.209214028, 0.219237736, 0.229262181, 0.239286431, 0.249311028, 0.259334181, 0.269359, 0.279382222, 0.289406125, 0.299430069, 0.309454125, 0.319477903, 0.329503125, 0.339527861, 0.349552653, 0.359577611, 0.369602014, 0.379628972, 0.389655264, 0.399679681, 0.409704708, 0.419729042, 0.429754736, 0.439779944, 0.449805903, 0.459831542, 0.469857736, 0.479883847, 0.489910528, 0.499938236, 0.509964958, 0.519989333, 0.5300135, 0.540036903, 0.550061264, 0.560085153, 0.570110069, 0.580134056, 0.590157736, 0.600183986, 0.610209625, 0.620233847, 0.630257458, 0.640283292, 0.650307361, 0.660331139, 0.670356667, 0.680381778, 0.690405764, 0.700429181, 0.710452639, 0.720477736, 0.730502097, 0.740526083, 0.750550236, 0.760574458, 0.770599542, 0.780622889, 0.790647014, 0.800671222, 0.810696194, 0.820720542, 0.830746611, 0.840770986, 0.850794861, 0.860819792, 0.870843681, 0.880867764, 0.890890958, 0.900916111, 0.910940153, 0.920962208, 0.930987972, 0.941011472, 0.951034389, 0.961058833, 0.971082375, 0.981104736, 0.991126833, 1.001151167, 1.011176861, 1.021200153, 1.031223486, 1.041247222] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:36.847" endtime="20201110 08:40:36.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.835" endtime="20201110 08:40:36.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.858" endtime="20201110 08:40:36.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:36.867" endtime="20201110 08:40:36.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.862" endtime="20201110 08:40:36.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.854" endtime="20201110 08:40:36.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:34.138" endtime="20201110 08:40:36.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.582" endtime="20201110 08:40:36.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.581" endtime="20201110 08:40:36.893"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:36.899" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.921" endtime="20201110 08:40:39.033"></status>
</kw>
<msg timestamp="20201110 08:40:39.035" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42262698, 'start-iter': 1, 'wakeups': [42272880, 42282879, 42292879, 4...</msg>
<status status="PASS" starttime="20201110 08:40:36.916" endtime="20201110 08:40:39.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.042" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 42262698, 'start-iter': 1, 'wakeups': [42272880, 42282879, 42292879, 4...</msg>
<status status="PASS" starttime="20201110 08:40:39.037" endtime="20201110 08:40:39.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.044" endtime="20201110 08:40:39.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.909" endtime="20201110 08:40:39.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.904" endtime="20201110 08:40:39.051"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:39.057" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [42272880, 42282879, 42292879, 42302879, 42312879, 42322879, 42332879, 42342879, 42352879, 42362879, 42372879, 42382879, 42392879, 42402879, 42412879, 42422879, 42432879,...</msg>
<status status="PASS" starttime="20201110 08:40:39.052" endtime="20201110 08:40:39.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.067" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:39.065" endtime="20201110 08:40:39.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.072" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:39.069" endtime="20201110 08:40:39.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.059" endtime="20201110 08:40:39.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.084" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:39.082" endtime="20201110 08:40:39.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.088" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:39.086" endtime="20201110 08:40:39.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.075" endtime="20201110 08:40:39.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.101" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:39.098" endtime="20201110 08:40:39.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.105" level="INFO">VALUE: 42262698</msg>
<status status="PASS" starttime="20201110 08:40:39.103" endtime="20201110 08:40:39.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.092" endtime="20201110 08:40:39.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.117" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:39.115" endtime="20201110 08:40:39.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.123" level="INFO">VALUE: [42272880, 42282879, 42292879, 42302879, 42312879, 42322879, 42332879, 42342879, 42352879, 42362879, 42372879, 42382879, 42392879, 42402879, 42412879, 42422879, 42432879, 42442879, 42452879, 42462879, 42472879, 42482879, 42492879, 42502879, 42512879, 42522879, 42532879, 42542879, 42552879, 42562879, 42572879, 42582879, 42592879, 42602879, 42612879, 42622879, 42632879, 42642879, 42652879, 42662879, 42672879, 42682879, 42692879, 42702879, 42712879, 42722879, 42732879, 42742879, 42752879, 42762879, 42772879, 42782879, 42792879, 42802879, 42812879, 42822879, 42832879, 42842879, 42852879, 42862879, 42872879, 42882879, 42892879, 42902879, 42912879, 42922879, 42932879, 42942879, 42952879, 42962879, 42972879, 42982879, 42992879, 43002879, 43012879, 43022879, 43032879, 43042879, 43052879, 43062879, 43072879, 43082879, 43092879, 43102879, 43112879, 43122879, 43132879, 43142879, 43152879, 43162879, 43172879, 43182879, 43192879, 43202879, 43212879, 43222879, 43232879, 43242879, 43252879, 43262879]</msg>
<status status="PASS" starttime="20201110 08:40:39.120" endtime="20201110 08:40:39.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.109" endtime="20201110 08:40:39.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.142" endtime="20201110 08:40:39.486"></status>
</kw>
<msg timestamp="20201110 08:40:39.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045513694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055720139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.139" endtime="20201110 08:40:39.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045513694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055720139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:39.494" endtime="20201110 08:40:39.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.512" endtime="20201110 08:40:39.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.132" endtime="20201110 08:40:39.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.127" endtime="20201110 08:40:39.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:39.574" level="INFO">${RESULT} = {'source_diff': [0, 0.010206445000000001, 0.010023555000000003, 0.01002505599999999, 0.010024375000000002, 0.010024236000000006, 0.010023624999999994, 0.010025096999999997, 0.010024249999999998, 0.010...</msg>
<status status="PASS" starttime="20201110 08:40:39.520" endtime="20201110 08:40:39.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.585" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:39.583" endtime="20201110 08:40:39.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.590" level="INFO">VALUE: 0.045513694</msg>
<status status="PASS" starttime="20201110 08:40:39.587" endtime="20201110 08:40:39.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.576" endtime="20201110 08:40:39.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.603" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:39.601" endtime="20201110 08:40:39.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.607" level="INFO">VALUE: [0.055720139, 0.065743694, 0.07576875, 0.085793125, 0.095817361, 0.105840986, 0.115866083, 0.125890333, 0.135914069, 0.145937139, 0.155960917, 0.165984083, 0.176006931, 0.18602925, 0.196055083, 0.206081264, 0.216106569, 0.226130625, 0.236154917, 0.246177681, 0.256202083, 0.266226194, 0.276250722, 0.286274139, 0.296298, 0.306320069, 0.316343111, 0.326366861, 0.336390583, 0.346415194, 0.356440208, 0.366464681, 0.376489972, 0.386515208, 0.396540472, 0.406565472, 0.416590861, 0.426615069, 0.436639194, 0.446662889, 0.456687222, 0.466710167, 0.476733583, 0.486757583, 0.496782625, 0.506806792, 0.516830292, 0.526855, 0.536879556, 0.546903, 0.556926889, 0.566949917, 0.576973611, 0.586996819, 0.597020694, 0.607043264, 0.617066583, 0.627090708, 0.637114361, 0.647136736, 0.657159736, 0.667182167, 0.677205542, 0.687229014, 0.697251153, 0.707273167, 0.717295139, 0.727317333, 0.737340139, 0.747363125, 0.757385569, 0.767407083, 0.777428931, 0.787451556, 0.797474722, 0.807496736, 0.817519347, 0.827541917, 0.837564444, 0.847587764, 0.857610333, 0.8676335, 0.877657514, 0.887680597, 0.897703847, 0.907726944, 0.917750917, 0.927773875, 0.937797653, 0.947821472, 0.957845917, 0.967871056, 0.977897708, 0.987923764, 0.997949944, 1.007975278, 1.018000875, 1.028025069, 1.038049306, 1.048072861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:39.605" endtime="20201110 08:40:39.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.593" endtime="20201110 08:40:39.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.616" endtime="20201110 08:40:39.619"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:39.625" endtime="20201110 08:40:39.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.620" endtime="20201110 08:40:39.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.612" endtime="20201110 08:40:39.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.900" endtime="20201110 08:40:39.651"></status>
</kw>
<msg timestamp="20201110 08:40:39.651" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.672" endtime="20201110 08:40:41.784"></status>
</kw>
<msg timestamp="20201110 08:40:41.785" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45007224, 'start-iter': 1, 'wakeups': [45017406, 45027405, 45037405, 4...</msg>
<status status="PASS" starttime="20201110 08:40:39.669" endtime="20201110 08:40:41.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.792" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45007224, 'start-iter': 1, 'wakeups': [45017406, 45027405, 45037405, 4...</msg>
<status status="PASS" starttime="20201110 08:40:41.788" endtime="20201110 08:40:41.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.795" endtime="20201110 08:40:41.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.662" endtime="20201110 08:40:41.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.656" endtime="20201110 08:40:41.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:41.808" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [45017406, 45027405, 45037405, 45047405, 45057405, 45067405, 45077405, 45087405, 45097405, 45107405, 45117405, 45127405, 45137405, 45147405, 45157405, 45167405, 45177405,...</msg>
<status status="PASS" starttime="20201110 08:40:41.803" endtime="20201110 08:40:41.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.818" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:41.815" endtime="20201110 08:40:41.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.822" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:41.820" endtime="20201110 08:40:41.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.809" endtime="20201110 08:40:41.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.835" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:41.832" endtime="20201110 08:40:41.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.841" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:41.837" endtime="20201110 08:40:41.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.826" endtime="20201110 08:40:41.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.854" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:41.851" endtime="20201110 08:40:41.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.858" level="INFO">VALUE: 45007224</msg>
<status status="PASS" starttime="20201110 08:40:41.856" endtime="20201110 08:40:41.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.845" endtime="20201110 08:40:41.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.870" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:41.868" endtime="20201110 08:40:41.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.875" level="INFO">VALUE: [45017406, 45027405, 45037405, 45047405, 45057405, 45067405, 45077405, 45087405, 45097405, 45107405, 45117405, 45127405, 45137405, 45147405, 45157405, 45167405, 45177405, 45187405, 45197405, 45207405, 45217405, 45227405, 45237405, 45247405, 45257405, 45267405, 45277405, 45287405, 45297405, 45307405, 45317405, 45327405, 45337405, 45347405, 45357405, 45367405, 45377405, 45387405, 45397405, 45407405, 45417405, 45427405, 45437405, 45447405, 45457405, 45467405, 45477405, 45487405, 45497405, 45507405, 45517405, 45527405, 45537405, 45547405, 45557405, 45567405, 45577405, 45587405, 45597405, 45607405, 45617405, 45627405, 45637405, 45647405, 45657405, 45667405, 45677405, 45687405, 45697405, 45707405, 45717405, 45727405, 45737405, 45747405, 45757405, 45767405, 45777405, 45787405, 45797405, 45807405, 45817405, 45827405, 45837405, 45847405, 45857405, 45867405, 45877405, 45887405, 45897405, 45907405, 45917405, 45927405, 45937405, 45947405, 45957405, 45967405, 45977405, 45987405, 45997405, 46007405]</msg>
<status status="PASS" starttime="20201110 08:40:41.873" endtime="20201110 08:40:41.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.862" endtime="20201110 08:40:41.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.895" endtime="20201110 08:40:42.238"></status>
</kw>
<msg timestamp="20201110 08:40:42.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038500736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048707069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.891" endtime="20201110 08:40:42.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038500736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048707069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:42.247" endtime="20201110 08:40:42.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.264" endtime="20201110 08:40:42.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.884" endtime="20201110 08:40:42.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.879" endtime="20201110 08:40:42.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:42.326" level="INFO">${RESULT} = {'source_diff': [0, 0.010206332999999998, 0.010022195000000005, 0.010023596999999995, 0.010022639, 0.010023028000000003, 0.010023471999999992, 0.010022611, 0.01002225000000001, 0.010022666999999999, 0...</msg>
<status status="PASS" starttime="20201110 08:40:42.273" endtime="20201110 08:40:42.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.337" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:42.334" endtime="20201110 08:40:42.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.341" level="INFO">VALUE: 0.038500736</msg>
<status status="PASS" starttime="20201110 08:40:42.339" endtime="20201110 08:40:42.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.328" endtime="20201110 08:40:42.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.356" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:42.354" endtime="20201110 08:40:42.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:42.360" level="INFO">VALUE: [0.048707069, 0.058729264, 0.068752861, 0.0787755, 0.088798528, 0.098822, 0.108844611, 0.118866861, 0.128889528, 0.138910681, 0.148932667, 0.158955556, 0.168979417, 0.179002431, 0.189025778, 0.199048806, 0.209071792, 0.219094625, 0.229116847, 0.239139125, 0.249161444, 0.259183778, 0.269206944, 0.279231417, 0.289255486, 0.299279431, 0.309304583, 0.319328403, 0.329351722, 0.339374431, 0.349397833, 0.359420806, 0.369444667, 0.379467556, 0.389491833, 0.399515, 0.409538847, 0.419561917, 0.4295855, 0.439609778, 0.449632917, 0.4596555, 0.469678514, 0.479701278, 0.489724347, 0.499747028, 0.509770875, 0.519794667, 0.529819444, 0.539842986, 0.549867028, 0.559890292, 0.569913361, 0.579936861, 0.589960514, 0.599983861, 0.610007889, 0.620031847, 0.630055806, 0.640079569, 0.650103875, 0.660127806, 0.670151417, 0.680174833, 0.690198194, 0.700221722, 0.710247028, 0.720271889, 0.730297528, 0.740320486, 0.750343056, 0.760365917, 0.770389125, 0.780411278, 0.790433514, 0.800455694, 0.810479819, 0.820502458, 0.830525181, 0.840550375, 0.850575931, 0.860601139, 0.870624083, 0.880647569, 0.890672181, 0.900696722, 0.910721056, 0.920746333, 0.930771444, 0.940795417, 0.950819806, 0.960842764, 0.970867389, 0.980892847, 0.990917861, 1.000941889, 1.010967861, 1.020993375, 1.031018139, 1.041042583] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:42.358" endtime="20201110 08:40:42.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.346" endtime="20201110 08:40:42.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.369" endtime="20201110 08:40:42.372"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:42.377" endtime="20201110 08:40:42.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.373" endtime="20201110 08:40:42.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.365" endtime="20201110 08:40:42.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.653" endtime="20201110 08:40:42.403"></status>
</kw>
<msg timestamp="20201110 08:40:42.403" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:42.424" endtime="20201110 08:40:44.535"></status>
</kw>
<msg timestamp="20201110 08:40:44.537" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47752856, 'start-iter': 1, 'wakeups': [47763038, 47773037, 47783037, 4...</msg>
<status status="PASS" starttime="20201110 08:40:42.421" endtime="20201110 08:40:44.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.549" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47752856, 'start-iter': 1, 'wakeups': [47763038, 47773037, 47783037, 4...</msg>
<status status="PASS" starttime="20201110 08:40:44.544" endtime="20201110 08:40:44.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.552" endtime="20201110 08:40:44.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.414" endtime="20201110 08:40:44.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.408" endtime="20201110 08:40:44.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:44.565" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [47763038, 47773037, 47783037, 47793037, 47803037, 47813037, 47823037, 47833037, 47843037, 47853037, 47863037, 47873037, 47883037, 47893037, 47903037, 47913037, 47923037,...</msg>
<status status="PASS" starttime="20201110 08:40:44.561" endtime="20201110 08:40:44.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.576" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:44.574" endtime="20201110 08:40:44.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.581" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:44.579" endtime="20201110 08:40:44.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.567" endtime="20201110 08:40:44.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.594" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:44.592" endtime="20201110 08:40:44.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.598" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:44.596" endtime="20201110 08:40:44.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.585" endtime="20201110 08:40:44.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.611" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:44.608" endtime="20201110 08:40:44.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.615" level="INFO">VALUE: 47752856</msg>
<status status="PASS" starttime="20201110 08:40:44.613" endtime="20201110 08:40:44.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.602" endtime="20201110 08:40:44.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.627" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:44.625" endtime="20201110 08:40:44.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.633" level="INFO">VALUE: [47763038, 47773037, 47783037, 47793037, 47803037, 47813037, 47823037, 47833037, 47843037, 47853037, 47863037, 47873037, 47883037, 47893037, 47903037, 47913037, 47923037, 47933037, 47943037, 47953037, 47963037, 47973037, 47983037, 47993037, 48003037, 48013037, 48023037, 48033037, 48043037, 48053037, 48063037, 48073037, 48083037, 48093037, 48103037, 48113037, 48123037, 48133037, 48143037, 48153037, 48163037, 48173037, 48183037, 48193037, 48203037, 48213037, 48223037, 48233037, 48243037, 48253037, 48263037, 48273037, 48283037, 48293037, 48303037, 48313037, 48323037, 48333037, 48343037, 48353037, 48363037, 48373037, 48383037, 48393037, 48403037, 48413037, 48423037, 48433037, 48443037, 48453037, 48463037, 48473037, 48483037, 48493037, 48503037, 48513037, 48523037, 48533037, 48543037, 48553037, 48563037, 48573037, 48583037, 48593037, 48603037, 48613037, 48623037, 48633037, 48643037, 48653037, 48663037, 48673037, 48683037, 48693037, 48703037, 48713037, 48723037, 48733037, 48743037, 48753037]</msg>
<status status="PASS" starttime="20201110 08:40:44.630" endtime="20201110 08:40:44.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.619" endtime="20201110 08:40:44.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.653" endtime="20201110 08:40:45.014"></status>
</kw>
<msg timestamp="20201110 08:40:45.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047782375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:44.650" endtime="20201110 08:40:45.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:45.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037577597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047782375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:45.023" endtime="20201110 08:40:45.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:45.041" endtime="20201110 08:40:45.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.641" endtime="20201110 08:40:45.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.636" endtime="20201110 08:40:45.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:45.104" level="INFO">${RESULT} = {'source_diff': [0, 0.010204778000000005, 0.010020999999999995, 0.010021806000000001, 0.010022291000000003, 0.010023209000000005, 0.010021749999999996, 0.010021415999999991, 0.010022084, 0.01002154099...</msg>
<status status="PASS" starttime="20201110 08:40:45.050" endtime="20201110 08:40:45.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:45.117" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:45.114" endtime="20201110 08:40:45.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:45.122" level="INFO">VALUE: 0.037577597</msg>
<status status="PASS" starttime="20201110 08:40:45.119" endtime="20201110 08:40:45.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.106" endtime="20201110 08:40:45.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:45.136" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:45.133" endtime="20201110 08:40:45.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:45.140" level="INFO">VALUE: [0.047782375, 0.057803375, 0.067825181, 0.077847472, 0.087870681, 0.097892431, 0.107913847, 0.117935931, 0.127957472, 0.137978278, 0.148000292, 0.158021542, 0.168043333, 0.178065986, 0.188087944, 0.198110153, 0.208132764, 0.218155681, 0.228178222, 0.238200611, 0.248223625, 0.258245681, 0.268267764, 0.278288625, 0.288309569, 0.298331806, 0.308354792, 0.318375444, 0.328397125, 0.338419139, 0.348441792, 0.358463472, 0.368487069, 0.378510556, 0.388532764, 0.398554056, 0.408574625, 0.418594944, 0.428617181, 0.438638167, 0.448659833, 0.458681306, 0.468703792, 0.478725361, 0.488745847, 0.498766944, 0.508787069, 0.518808181, 0.528831208, 0.538853861, 0.548876333, 0.558898931, 0.568921153, 0.578942819, 0.588964833, 0.598986667, 0.609008569, 0.619031236, 0.629054111, 0.639076306, 0.649098569, 0.6591205, 0.669142861, 0.679165361, 0.689188556, 0.69921025, 0.709231458, 0.719252889, 0.729276278, 0.739299208, 0.749323083, 0.759345819, 0.769368778, 0.779391583, 0.789415542, 0.799437903, 0.809460944, 0.819484806, 0.829508625, 0.839530167, 0.849552792, 0.859575097, 0.869598236, 0.879621333, 0.889646139, 0.899670264, 0.909694444, 0.919717903, 0.929742056, 0.939765958, 0.94979175, 0.959815486, 0.969839708, 0.979863361, 0.989886722, 0.999910125, 1.009934403, 1.019958306, 1.029982028, 1.040006764] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:45.138" endtime="20201110 08:40:45.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.126" endtime="20201110 08:40:45.143"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:45.149" endtime="20201110 08:40:45.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:45.158" endtime="20201110 08:40:45.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.153" endtime="20201110 08:40:45.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.145" endtime="20201110 08:40:45.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:42.405" endtime="20201110 08:40:45.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.896" endtime="20201110 08:40:45.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.894" endtime="20201110 08:40:45.185"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:45.191" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:45.214" endtime="20201110 08:40:47.327"></status>
</kw>
<msg timestamp="20201110 08:40:47.329" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50536778, 'start-iter': 1, 'wakeups': [50546991, 50556990, 50566990, 5...</msg>
<status status="PASS" starttime="20201110 08:40:45.210" endtime="20201110 08:40:47.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.336" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 50536778, 'start-iter': 1, 'wakeups': [50546991, 50556990, 50566990, 5...</msg>
<status status="PASS" starttime="20201110 08:40:47.331" endtime="20201110 08:40:47.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.338" endtime="20201110 08:40:47.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.201" endtime="20201110 08:40:47.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.196" endtime="20201110 08:40:47.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:47.352" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [50546991, 50556990, 50566990, 50576990, 50586990, 50596990, 50606990, 50616990, 50626990, 50636990, 50646990, 50656990, 50666990, 50676990, 50686990, 50696990, 50706990,...</msg>
<status status="PASS" starttime="20201110 08:40:47.347" endtime="20201110 08:40:47.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.363" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:47.360" endtime="20201110 08:40:47.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.367" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:47.365" endtime="20201110 08:40:47.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.354" endtime="20201110 08:40:47.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.380" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:47.377" endtime="20201110 08:40:47.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.384" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:47.382" endtime="20201110 08:40:47.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.371" endtime="20201110 08:40:47.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.397" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:47.394" endtime="20201110 08:40:47.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.401" level="INFO">VALUE: 50536778</msg>
<status status="PASS" starttime="20201110 08:40:47.399" endtime="20201110 08:40:47.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.388" endtime="20201110 08:40:47.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.414" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:47.412" endtime="20201110 08:40:47.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.419" level="INFO">VALUE: [50546991, 50556990, 50566990, 50576990, 50586990, 50596990, 50606990, 50616990, 50626990, 50636990, 50646990, 50656990, 50666990, 50676990, 50686990, 50696990, 50706990, 50716990, 50726990, 50736990, 50746990, 50756990, 50766990, 50776990, 50786990, 50796990, 50806990, 50816990, 50826990, 50836990, 50846990, 50856990, 50866990, 50876990, 50886990, 50896990, 50906990, 50916990, 50926990, 50936990, 50946990, 50956990, 50966990, 50976990, 50986990, 50996990, 51006990, 51016990, 51026990, 51036990, 51046990, 51056990, 51066990, 51076990, 51086990, 51096990, 51106990, 51116990, 51126990, 51136990, 51146990, 51156990, 51166990, 51176990, 51186990, 51196990, 51206990, 51216990, 51226990, 51236990, 51246990, 51256990, 51266990, 51276990, 51286990, 51296990, 51306990, 51316990, 51326990, 51336990, 51346990, 51356990, 51366990, 51376990, 51386990, 51396990, 51406990, 51416990, 51426990, 51436990, 51446990, 51456990, 51466990, 51476990, 51486990, 51496990, 51506990, 51516990, 51526990, 51536990]</msg>
<status status="PASS" starttime="20201110 08:40:47.416" endtime="20201110 08:40:47.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.405" endtime="20201110 08:40:47.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.438" endtime="20201110 08:40:47.789"></status>
</kw>
<msg timestamp="20201110 08:40:47.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046915736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057154528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:47.435" endtime="20201110 08:40:47.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046915736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057154528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:47.798" endtime="20201110 08:40:47.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.815" endtime="20201110 08:40:47.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.427" endtime="20201110 08:40:47.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.422" endtime="20201110 08:40:47.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:47.879" level="INFO">${RESULT} = {'source_diff': [0, 0.010238792000000004, 0.010023471999999999, 0.010025096999999997, 0.010025667000000002, 0.010025611000000004, 0.010025152999999995, 0.010025652999999995, 0.01002565200000001, 0.010...</msg>
<status status="PASS" starttime="20201110 08:40:47.824" endtime="20201110 08:40:47.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.890" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:47.888" endtime="20201110 08:40:47.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.895" level="INFO">VALUE: 0.046915736</msg>
<status status="PASS" starttime="20201110 08:40:47.893" endtime="20201110 08:40:47.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.882" endtime="20201110 08:40:47.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.908" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:47.906" endtime="20201110 08:40:47.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.913" level="INFO">VALUE: [0.057154528, 0.067178, 0.077203097, 0.087228764, 0.097254375, 0.107279528, 0.117305181, 0.127330833, 0.137356389, 0.147382208, 0.157408403, 0.167433861, 0.177460278, 0.187486792, 0.197513167, 0.207538694, 0.217565722, 0.227592389, 0.237619514, 0.247646958, 0.257674639, 0.267701236, 0.277726875, 0.287752764, 0.297779444, 0.307806222, 0.317834514, 0.327861958, 0.337889722, 0.347918083, 0.357947458, 0.367976542, 0.378004444, 0.388032514, 0.398058792, 0.408084778, 0.418111417, 0.428137306, 0.438163667, 0.448189139, 0.458215167, 0.468241139, 0.478268444, 0.488295819, 0.498323417, 0.508349889, 0.518376708, 0.528402542, 0.538429903, 0.548457, 0.558483625, 0.568509167, 0.578535042, 0.588560417, 0.598586972, 0.608612694, 0.618638347, 0.628665042, 0.638691389, 0.648717958, 0.658744417, 0.668769944, 0.678795958, 0.688820889, 0.698846028, 0.708870597, 0.718897667, 0.728923347, 0.738949806, 0.748975819, 0.759001569, 0.769027472, 0.779053083, 0.78907875, 0.799104653, 0.809130167, 0.819155528, 0.829180569, 0.839206125, 0.849230194, 0.859254639, 0.869280861, 0.879305694, 0.889331139, 0.899355764, 0.909381403, 0.919407167, 0.929432431, 0.939457681, 0.949483097, 0.959509028, 0.969534, 0.979558611, 0.98958275, 0.999607069, 1.009631014, 1.019655458, 1.029679944, 1.039703958, 1.049727958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:47.911" endtime="20201110 08:40:47.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.898" endtime="20201110 08:40:47.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.922" endtime="20201110 08:40:47.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:47.930" endtime="20201110 08:40:47.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.926" endtime="20201110 08:40:47.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.917" endtime="20201110 08:40:47.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.192" endtime="20201110 08:40:47.956"></status>
</kw>
<msg timestamp="20201110 08:40:47.957" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.978" endtime="20201110 08:40:50.090"></status>
</kw>
<msg timestamp="20201110 08:40:50.092" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53294084, 'start-iter': 1, 'wakeups': [53304297, 53314296, 53324296, 5...</msg>
<status status="PASS" starttime="20201110 08:40:47.975" endtime="20201110 08:40:50.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.098" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53294084, 'start-iter': 1, 'wakeups': [53304297, 53314296, 53324296, 5...</msg>
<status status="PASS" starttime="20201110 08:40:50.094" endtime="20201110 08:40:50.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.101" endtime="20201110 08:40:50.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.967" endtime="20201110 08:40:50.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.962" endtime="20201110 08:40:50.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:50.114" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [53304297, 53314296, 53324296, 53334296, 53344296, 53354296, 53364296, 53374296, 53384296, 53394296, 53404296, 53414296, 53424296, 53434296, 53444296, 53454296, 53464296,...</msg>
<status status="PASS" starttime="20201110 08:40:50.109" endtime="20201110 08:40:50.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.124" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:50.122" endtime="20201110 08:40:50.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.128" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:50.126" endtime="20201110 08:40:50.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.116" endtime="20201110 08:40:50.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.150" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:50.147" endtime="20201110 08:40:50.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.154" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:50.152" endtime="20201110 08:40:50.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.139" endtime="20201110 08:40:50.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.166" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:50.164" endtime="20201110 08:40:50.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.171" level="INFO">VALUE: 53294084</msg>
<status status="PASS" starttime="20201110 08:40:50.169" endtime="20201110 08:40:50.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.158" endtime="20201110 08:40:50.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.183" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:50.181" endtime="20201110 08:40:50.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.188" level="INFO">VALUE: [53304297, 53314296, 53324296, 53334296, 53344296, 53354296, 53364296, 53374296, 53384296, 53394296, 53404296, 53414296, 53424296, 53434296, 53444296, 53454296, 53464296, 53474296, 53484296, 53494296, 53504296, 53514296, 53524296, 53534296, 53544296, 53554296, 53564296, 53574296, 53584296, 53594296, 53604296, 53614296, 53624296, 53634296, 53644296, 53654296, 53664296, 53674296, 53684296, 53694296, 53704296, 53714296, 53724296, 53734296, 53744296, 53754296, 53764296, 53774296, 53784296, 53794296, 53804296, 53814296, 53824296, 53834296, 53844296, 53854296, 53864296, 53874296, 53884296, 53894296, 53904296, 53914296, 53924296, 53934296, 53944296, 53954296, 53964296, 53974296, 53984296, 53994296, 54004296, 54014296, 54024296, 54034296, 54044296, 54054296, 54064296, 54074296, 54084296, 54094296, 54104296, 54114296, 54124296, 54134296, 54144296, 54154296, 54164296, 54174296, 54184296, 54194296, 54204296, 54214296, 54224296, 54234296, 54244296, 54254296, 54264296, 54274296, 54284296, 54294296]</msg>
<status status="PASS" starttime="20201110 08:40:50.185" endtime="20201110 08:40:50.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.174" endtime="20201110 08:40:50.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.207" endtime="20201110 08:40:50.547"></status>
</kw>
<msg timestamp="20201110 08:40:50.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038766486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049005042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.204" endtime="20201110 08:40:50.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038766486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049005042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:50.556" endtime="20201110 08:40:50.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.573" endtime="20201110 08:40:50.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.196" endtime="20201110 08:40:50.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.192" endtime="20201110 08:40:50.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:50.634" level="INFO">${RESULT} = {'source_diff': [0, 0.010238555999999996, 0.010024597000000003, 0.010026138999999996, 0.010025915999999996, 0.010026500000000008, 0.010026195000000002, 0.01002479199999999, 0.010025333000000011, 0.010...</msg>
<status status="PASS" starttime="20201110 08:40:50.582" endtime="20201110 08:40:50.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.646" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:50.643" endtime="20201110 08:40:50.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.651" level="INFO">VALUE: 0.038766486</msg>
<status status="PASS" starttime="20201110 08:40:50.649" endtime="20201110 08:40:50.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.636" endtime="20201110 08:40:50.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.665" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:50.662" endtime="20201110 08:40:50.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.670" level="INFO">VALUE: [0.049005042, 0.059029639, 0.069055778, 0.079081694, 0.089108194, 0.099134389, 0.109159181, 0.119184514, 0.129210042, 0.139234667, 0.149259625, 0.159283347, 0.169309667, 0.179334667, 0.189360694, 0.199385833, 0.2094115, 0.219435833, 0.229460069, 0.239484542, 0.24950925, 0.259533333, 0.269558306, 0.279583278, 0.289609097, 0.299634639, 0.309659847, 0.319684153, 0.329708306, 0.339730653, 0.349755083, 0.359778583, 0.369802569, 0.379826347, 0.389853, 0.399878167, 0.409903111, 0.419928972, 0.429956889, 0.439983625, 0.450008542, 0.460034208, 0.470060375, 0.480086153, 0.490111389, 0.500137028, 0.510161958, 0.5201875, 0.530213819, 0.540239194, 0.550265875, 0.560291639, 0.570317431, 0.580343167, 0.590369056, 0.600394611, 0.610418944, 0.620445208, 0.630472681, 0.640498583, 0.650523333, 0.660549444, 0.670576556, 0.680603028, 0.690627806, 0.700651597, 0.710675083, 0.720697694, 0.730721889, 0.740746319, 0.750771472, 0.760797278, 0.770823736, 0.780848694, 0.790873917, 0.800898333, 0.810924778, 0.820950139, 0.830975944, 0.841000736, 0.851026597, 0.861052014, 0.871077417, 0.881102264, 0.891126931, 0.901151514, 0.911176833, 0.921201958, 0.931227194, 0.941251681, 0.951275958, 0.961299222, 0.971324042, 0.981347875, 0.991372569, 1.001396278, 1.011420264, 1.021443986, 1.031467861, 1.041492] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:50.667" endtime="20201110 08:40:50.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.654" endtime="20201110 08:40:50.672"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.678" endtime="20201110 08:40:50.681"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:50.687" endtime="20201110 08:40:50.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.682" endtime="20201110 08:40:50.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.674" endtime="20201110 08:40:50.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.958" endtime="20201110 08:40:50.712"></status>
</kw>
<msg timestamp="20201110 08:40:50.713" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.734" endtime="20201110 08:40:52.845"></status>
</kw>
<msg timestamp="20201110 08:40:52.847" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 56043159, 'start-iter': 1, 'wakeups': [56053372, 56063371, 56073371, 5...</msg>
<status status="PASS" starttime="20201110 08:40:50.730" endtime="20201110 08:40:52.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 56043159, 'start-iter': 1, 'wakeups': [56053372, 56063371, 56073371, 5...</msg>
<status status="PASS" starttime="20201110 08:40:52.849" endtime="20201110 08:40:52.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.857" endtime="20201110 08:40:52.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.723" endtime="20201110 08:40:52.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.718" endtime="20201110 08:40:52.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:52.870" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [56053372, 56063371, 56073371, 56083371, 56093371, 56103371, 56113371, 56123371, 56133371, 56143371, 56153371, 56163371, 56173371, 56183371, 56193371, 56203371, 56213371,...</msg>
<status status="PASS" starttime="20201110 08:40:52.866" endtime="20201110 08:40:52.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.880" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:52.878" endtime="20201110 08:40:52.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.885" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:52.883" endtime="20201110 08:40:52.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.872" endtime="20201110 08:40:52.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.897" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:52.895" endtime="20201110 08:40:52.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.902" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:52.900" endtime="20201110 08:40:52.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.888" endtime="20201110 08:40:52.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.915" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:52.912" endtime="20201110 08:40:52.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.919" level="INFO">VALUE: 56043159</msg>
<status status="PASS" starttime="20201110 08:40:52.917" endtime="20201110 08:40:52.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.905" endtime="20201110 08:40:52.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.932" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:52.929" endtime="20201110 08:40:52.933"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:52.936" level="INFO">VALUE: [56053372, 56063371, 56073371, 56083371, 56093371, 56103371, 56113371, 56123371, 56133371, 56143371, 56153371, 56163371, 56173371, 56183371, 56193371, 56203371, 56213371, 56223371, 56233371, 56243371, 56253371, 56263371, 56273371, 56283371, 56293371, 56303371, 56313371, 56323371, 56333371, 56343371, 56353371, 56363371, 56373371, 56383371, 56393371, 56403371, 56413371, 56423371, 56433371, 56443371, 56453371, 56463371, 56473371, 56483371, 56493371, 56503371, 56513371, 56523371, 56533371, 56543371, 56553371, 56563371, 56573371, 56583371, 56593371, 56603371, 56613371, 56623371, 56633371, 56643371, 56653371, 56663371, 56673371, 56683371, 56693371, 56703371, 56713371, 56723371, 56733371, 56743371, 56753371, 56763371, 56773371, 56783371, 56793371, 56803371, 56813371, 56823371, 56833371, 56843371, 56853371, 56863371, 56873371, 56883371, 56893371, 56903371, 56913371, 56923371, 56933371, 56943371, 56953371, 56963371, 56973371, 56983371, 56993371, 57003371, 57013371, 57023371, 57033371, 57043371]</msg>
<status status="PASS" starttime="20201110 08:40:52.934" endtime="20201110 08:40:52.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.923" endtime="20201110 08:40:52.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:52.957" endtime="20201110 08:40:53.299"></status>
</kw>
<msg timestamp="20201110 08:40:53.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048053083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:52.954" endtime="20201110 08:40:53.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037816097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048053083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:53.308" endtime="20201110 08:40:53.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.325" endtime="20201110 08:40:53.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.947" endtime="20201110 08:40:53.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:52.940" endtime="20201110 08:40:53.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:53.387" level="INFO">${RESULT} = {'source_diff': [0, 0.010236986000000003, 0.010023097999999994, 0.010022694000000006, 0.010022792000000003, 0.010022915999999993, 0.010021985999999997, 0.01002222300000001, 0.010022749999999997, 0.010...</msg>
<status status="PASS" starttime="20201110 08:40:53.333" endtime="20201110 08:40:53.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.398" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:53.396" endtime="20201110 08:40:53.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.403" level="INFO">VALUE: 0.037816097</msg>
<status status="PASS" starttime="20201110 08:40:53.400" endtime="20201110 08:40:53.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.389" endtime="20201110 08:40:53.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.416" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:53.414" endtime="20201110 08:40:53.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:53.421" level="INFO">VALUE: [0.048053083, 0.058076181, 0.068098875, 0.078121667, 0.088144583, 0.098166569, 0.108188792, 0.118211542, 0.128234319, 0.138255722, 0.148277222, 0.158299014, 0.168321778, 0.178343986, 0.188366097, 0.1983895, 0.208413069, 0.218435611, 0.228458514, 0.238481833, 0.248506111, 0.258530333, 0.268554319, 0.278576889, 0.288600667, 0.298623389, 0.308645819, 0.318669375, 0.328693, 0.338715236, 0.348739764, 0.358765653, 0.368790694, 0.378814542, 0.388838819, 0.398862653, 0.408887653, 0.418912111, 0.428936222, 0.438960097, 0.44898525, 0.459008681, 0.469032694, 0.479055361, 0.4890775, 0.499099917, 0.509124125, 0.519147278, 0.529170681, 0.539192361, 0.549213417, 0.55923525, 0.569257333, 0.579278903, 0.589302333, 0.599325319, 0.609349111, 0.619372083, 0.629394194, 0.639416833, 0.649441653, 0.659466931, 0.669492722, 0.679516264, 0.68954, 0.699563222, 0.709587625, 0.719611278, 0.729635042, 0.739659, 0.749683139, 0.759706222, 0.769729236, 0.779752611, 0.789775361, 0.799798153, 0.809821958, 0.819845833, 0.829870458, 0.839894306, 0.849918528, 0.859941792, 0.869965167, 0.879986625, 0.890009181, 0.900033292, 0.910057431, 0.920080986, 0.930105111, 0.940129069, 0.950153167, 0.960176917, 0.970201528, 0.980225264, 0.990250722, 1.000275625, 1.010299889, 1.020323708, 1.030347, 1.040370917] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:53.418" endtime="20201110 08:40:53.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.406" endtime="20201110 08:40:53.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.430" endtime="20201110 08:40:53.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:53.438" endtime="20201110 08:40:53.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.434" endtime="20201110 08:40:53.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.426" endtime="20201110 08:40:53.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.714" endtime="20201110 08:40:53.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.187" endtime="20201110 08:40:53.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:45.186" endtime="20201110 08:40:53.465"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:53.470" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:53.493" endtime="20201110 08:40:55.605"></status>
</kw>
<msg timestamp="20201110 08:40:55.606" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58796340, 'start-iter': 1, 'wakeups': [58806584, 58816583, 58826582, 5...</msg>
<status status="PASS" starttime="20201110 08:40:53.490" endtime="20201110 08:40:55.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.613" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 58796340, 'start-iter': 1, 'wakeups': [58806584, 58816583, 58826582, 5...</msg>
<status status="PASS" starttime="20201110 08:40:55.608" endtime="20201110 08:40:55.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.616" endtime="20201110 08:40:55.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.481" endtime="20201110 08:40:55.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.476" endtime="20201110 08:40:55.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:55.629" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [58806584, 58816583, 58826582, 58836583, 58846583, 58856583, 58866583, 58876583, 58886583, 58896583, 58906583, 58916583, 58926583, 58936583, 58946583, 58956583, 58966583,...</msg>
<status status="PASS" starttime="20201110 08:40:55.624" endtime="20201110 08:40:55.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.639" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:55.636" endtime="20201110 08:40:55.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.643" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:55.641" endtime="20201110 08:40:55.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.630" endtime="20201110 08:40:55.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.656" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:55.653" endtime="20201110 08:40:55.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.660" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:55.658" endtime="20201110 08:40:55.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.647" endtime="20201110 08:40:55.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.673" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:55.670" endtime="20201110 08:40:55.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.677" level="INFO">VALUE: 58796340</msg>
<status status="PASS" starttime="20201110 08:40:55.675" endtime="20201110 08:40:55.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.664" endtime="20201110 08:40:55.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.689" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:55.687" endtime="20201110 08:40:55.690"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:55.699" level="INFO">VALUE: [58806584, 58816583, 58826582, 58836583, 58846583, 58856583, 58866583, 58876583, 58886583, 58896583, 58906583, 58916583, 58926583, 58936583, 58946583, 58956583, 58966583, 58976583, 58986583, 58996583, 59006583, 59016583, 59026583, 59036583, 59046583, 59056583, 59066583, 59076583, 59086583, 59096583, 59106583, 59116583, 59126583, 59136583, 59146583, 59156583, 59166583, 59176583, 59186583, 59196583, 59206583, 59216583, 59226583, 59236583, 59246583, 59256583, 59266583, 59276583, 59286583, 59296583, 59306583, 59316583, 59326583, 59336583, 59346583, 59356583, 59366583, 59376583, 59386583, 59396583, 59406583, 59416583, 59426583, 59436583, 59446583, 59456583, 59466583, 59476583, 59486583, 59496583, 59506583, 59516583, 59526582, 59536583, 59546583, 59556583, 59566583, 59576583, 59586583, 59596583, 59606583, 59616583, 59626583, 59636583, 59646583, 59656583, 59666583, 59676583, 59686583, 59696583, 59706583, 59716583, 59726583, 59736583, 59746583, 59756583, 59766583, 59776583, 59786582, 59796583]</msg>
<status status="PASS" starttime="20201110 08:40:55.692" endtime="20201110 08:40:55.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.681" endtime="20201110 08:40:55.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:55.718" endtime="20201110 08:40:56.061"></status>
</kw>
<msg timestamp="20201110 08:40:56.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045504347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055772611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:55.715" endtime="20201110 08:40:56.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045504347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055772611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:56.069" endtime="20201110 08:40:56.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.086" endtime="20201110 08:40:56.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.708" endtime="20201110 08:40:56.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:55.703" endtime="20201110 08:40:56.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:56.148" level="INFO">${RESULT} = {'source_diff': [0, 0.010268264, 0.010022611, 0.010023167, 0.010024013999999998, 0.010023403, 0.010023527000000004, 0.010023028000000003, 0.010021985999999997, 0.010023708999999992, 0.0100234439999999...</msg>
<status status="PASS" starttime="20201110 08:40:56.095" endtime="20201110 08:40:56.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.159" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:56.157" endtime="20201110 08:40:56.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.164" level="INFO">VALUE: 0.045504347</msg>
<status status="PASS" starttime="20201110 08:40:56.162" endtime="20201110 08:40:56.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.150" endtime="20201110 08:40:56.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.177" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:56.175" endtime="20201110 08:40:56.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:56.182" level="INFO">VALUE: [0.055772611, 0.065795222, 0.075818389, 0.085842403, 0.095865806, 0.105889333, 0.115912361, 0.125934347, 0.135958056, 0.1459815, 0.156005222, 0.166026986, 0.176050792, 0.186074333, 0.196097194, 0.206121292, 0.216144444, 0.226166986, 0.236192028, 0.246216056, 0.256238403, 0.266260319, 0.276282069, 0.286304625, 0.29632775, 0.306350514, 0.316373653, 0.326396861, 0.336419931, 0.346443139, 0.3564675, 0.36649125, 0.376515681, 0.386539556, 0.396565097, 0.406589611, 0.416614472, 0.426639431, 0.436664139, 0.446688667, 0.456714097, 0.466738986, 0.476763319, 0.486787708, 0.496812347, 0.506836236, 0.516861639, 0.526886583, 0.536910819, 0.546934556, 0.556959111, 0.566983833, 0.577007792, 0.587031778, 0.597055903, 0.607079736, 0.617104819, 0.627128931, 0.637153056, 0.647176431, 0.6571995, 0.66722325, 0.677248333, 0.687272861, 0.697298014, 0.707322764, 0.717347625, 0.727371389, 0.737395417, 0.747419097, 0.757444139, 0.767468833, 0.777493125, 0.787520653, 0.797547597, 0.807572708, 0.817598278, 0.827622514, 0.837647444, 0.847672431, 0.857697833, 0.867722639, 0.877748042, 0.8877725, 0.897796667, 0.907821389, 0.917846111, 0.927870778, 0.937894764, 0.947919403, 0.957944875, 0.96797, 0.977996389, 0.988021389, 0.998046444, 1.008071681, 1.018096403, 1.028121319, 1.038146, 1.048170431] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:56.180" endtime="20201110 08:40:56.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.167" endtime="20201110 08:40:56.184"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.191" endtime="20201110 08:40:56.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:56.199" endtime="20201110 08:40:56.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.195" endtime="20201110 08:40:56.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.186" endtime="20201110 08:40:56.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.472" endtime="20201110 08:40:56.225"></status>
</kw>
<msg timestamp="20201110 08:40:56.226" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:56.247" endtime="20201110 08:40:58.359"></status>
</kw>
<msg timestamp="20201110 08:40:58.360" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61543985, 'start-iter': 1, 'wakeups': [61554229, 61564228, 61574228, 6...</msg>
<status status="PASS" starttime="20201110 08:40:56.244" endtime="20201110 08:40:58.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.367" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61543985, 'start-iter': 1, 'wakeups': [61554229, 61564228, 61574228, 6...</msg>
<status status="PASS" starttime="20201110 08:40:58.363" endtime="20201110 08:40:58.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.369" endtime="20201110 08:40:58.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.236" endtime="20201110 08:40:58.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.231" endtime="20201110 08:40:58.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:58.383" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [61554229, 61564228, 61574228, 61584228, 61594228, 61604228, 61614228, 61624228, 61634228, 61644228, 61654228, 61664228, 61674228, 61684228, 61694228, 61704228, 61714228,...</msg>
<status status="PASS" starttime="20201110 08:40:58.378" endtime="20201110 08:40:58.383"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.393" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:58.391" endtime="20201110 08:40:58.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.397" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:58.395" endtime="20201110 08:40:58.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.384" endtime="20201110 08:40:58.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.410" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:58.407" endtime="20201110 08:40:58.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.414" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:58.412" endtime="20201110 08:40:58.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.401" endtime="20201110 08:40:58.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.428" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:58.426" endtime="20201110 08:40:58.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.433" level="INFO">VALUE: 61543985</msg>
<status status="PASS" starttime="20201110 08:40:58.431" endtime="20201110 08:40:58.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.418" endtime="20201110 08:40:58.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.445" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:58.443" endtime="20201110 08:40:58.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.450" level="INFO">VALUE: [61554229, 61564228, 61574228, 61584228, 61594228, 61604228, 61614228, 61624228, 61634228, 61644228, 61654228, 61664228, 61674228, 61684228, 61694228, 61704228, 61714228, 61724228, 61734228, 61744228, 61754228, 61764228, 61774228, 61784228, 61794228, 61804228, 61814228, 61824228, 61834227, 61844228, 61854228, 61864228, 61874228, 61884228, 61894228, 61904228, 61914228, 61924228, 61934228, 61944228, 61954228, 61964228, 61974228, 61984228, 61994228, 62004228, 62014228, 62024228, 62034228, 62044228, 62054228, 62064228, 62074228, 62084228, 62094228, 62104228, 62114228, 62124228, 62134228, 62144228, 62154228, 62164228, 62174228, 62184228, 62194228, 62204228, 62214228, 62224228, 62234228, 62244228, 62254228, 62264228, 62274228, 62284228, 62294228, 62304228, 62314228, 62324228, 62334228, 62344228, 62354228, 62364228, 62374228, 62384228, 62394228, 62404228, 62414228, 62424228, 62434228, 62444228, 62454228, 62464228, 62474228, 62484228, 62494228, 62504228, 62514228, 62524228, 62534228, 62544228]</msg>
<status status="PASS" starttime="20201110 08:40:58.447" endtime="20201110 08:40:58.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.436" endtime="20201110 08:40:58.453"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.470" endtime="20201110 08:40:58.815"></status>
</kw>
<msg timestamp="20201110 08:40:58.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038595222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048865819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.466" endtime="20201110 08:40:58.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038595222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048865819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:58.824" endtime="20201110 08:40:58.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.841" endtime="20201110 08:40:58.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.459" endtime="20201110 08:40:58.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.454" endtime="20201110 08:40:58.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:58.903" level="INFO">${RESULT} = {'source_diff': [0, 0.010270597, 0.010023681, 0.010024986, 0.010024972000000007, 0.010025291999999991, 0.010025041999999998, 0.010025194000000001, 0.010024431, 0.010024444000000007, 0.0100239859999999...</msg>
<status status="PASS" starttime="20201110 08:40:58.849" endtime="20201110 08:40:58.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.914" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:58.912" endtime="20201110 08:40:58.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.918" level="INFO">VALUE: 0.038595222</msg>
<status status="PASS" starttime="20201110 08:40:58.916" endtime="20201110 08:40:58.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.905" endtime="20201110 08:40:58.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.932" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:58.929" endtime="20201110 08:40:58.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:58.936" level="INFO">VALUE: [0.048865819, 0.0588895, 0.068914486, 0.078939458, 0.08896475, 0.098989792, 0.109014986, 0.119039417, 0.129063861, 0.139087847, 0.149112694, 0.159137556, 0.169161194, 0.179185722, 0.189208625, 0.199231931, 0.209257097, 0.219282569, 0.229307861, 0.239332625, 0.249358694, 0.259382792, 0.269407125, 0.279431694, 0.289456375, 0.299481042, 0.309506972, 0.319531583, 0.329555903, 0.339582042, 0.349607653, 0.359633389, 0.369660167, 0.379684056, 0.389707681, 0.399731514, 0.409755667, 0.419778361, 0.429802278, 0.439827264, 0.449851764, 0.459876389, 0.469901278, 0.479925958, 0.489949875, 0.499973833, 0.509998028, 0.520022153, 0.530046028, 0.54006925, 0.550093181, 0.560117458, 0.570141917, 0.580166708, 0.590191111, 0.600214972, 0.610239028, 0.620264194, 0.630288472, 0.640313222, 0.650337958, 0.660361083, 0.670385875, 0.680409681, 0.690433583, 0.700457375, 0.710480972, 0.720503736, 0.730527986, 0.740551083, 0.750573917, 0.760596375, 0.770619556, 0.780641778, 0.790664181, 0.800686528, 0.810710167, 0.820734222, 0.830757597, 0.840780222, 0.85080325, 0.860826278, 0.870848931, 0.880872028, 0.890895639, 0.900919694, 0.910943903, 0.920967403, 0.930992069, 0.941015069, 0.951037722, 0.961060542, 0.971085, 0.981109236, 0.991134014, 1.001157681, 1.011181222, 1.021204875, 1.031230264, 1.041255292] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:58.934" endtime="20201110 08:40:58.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.922" endtime="20201110 08:40:58.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:58.946" endtime="20201110 08:40:58.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:58.955" endtime="20201110 08:40:58.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.950" endtime="20201110 08:40:58.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.942" endtime="20201110 08:40:58.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:56.227" endtime="20201110 08:40:58.980"></status>
</kw>
<msg timestamp="20201110 08:40:58.981" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:59.002" endtime="20201110 08:41:01.117"></status>
</kw>
<msg timestamp="20201110 08:41:01.119" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64292776, 'start-iter': 1, 'wakeups': [64303019, 64313019, 64323019, 6...</msg>
<status status="PASS" starttime="20201110 08:40:58.998" endtime="20201110 08:41:01.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.130" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64292776, 'start-iter': 1, 'wakeups': [64303019, 64313019, 64323019, 6...</msg>
<status status="PASS" starttime="20201110 08:41:01.123" endtime="20201110 08:41:01.131"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.134" endtime="20201110 08:41:01.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.991" endtime="20201110 08:41:01.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.986" endtime="20201110 08:41:01.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:01.151" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [64303019, 64313019, 64323019, 64333019, 64343019, 64353019, 64363019, 64373019, 64383019, 64393019, 64403019, 64413019, 64423019, 64433019, 64443019, 64453019, 64463019,...</msg>
<status status="PASS" starttime="20201110 08:41:01.145" endtime="20201110 08:41:01.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.164" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:01.160" endtime="20201110 08:41:01.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.169" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:01.167" endtime="20201110 08:41:01.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.153" endtime="20201110 08:41:01.172"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.184" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:01.182" endtime="20201110 08:41:01.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.193" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:01.188" endtime="20201110 08:41:01.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.174" endtime="20201110 08:41:01.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.206" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:41:01.203" endtime="20201110 08:41:01.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.210" level="INFO">VALUE: 64292776</msg>
<status status="PASS" starttime="20201110 08:41:01.208" endtime="20201110 08:41:01.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.197" endtime="20201110 08:41:01.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.223" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:01.220" endtime="20201110 08:41:01.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.227" level="INFO">VALUE: [64303019, 64313019, 64323019, 64333019, 64343019, 64353019, 64363019, 64373019, 64383019, 64393019, 64403019, 64413019, 64423019, 64433019, 64443019, 64453019, 64463019, 64473019, 64483019, 64493019, 64503019, 64513019, 64523019, 64533019, 64543019, 64553019, 64563019, 64573019, 64583019, 64593019, 64603019, 64613019, 64623019, 64633019, 64643019, 64653019, 64663018, 64673019, 64683019, 64693019, 64703019, 64713019, 64723019, 64733019, 64743019, 64753019, 64763019, 64773019, 64783019, 64793019, 64803019, 64813019, 64823019, 64833019, 64843019, 64853019, 64863019, 64873019, 64883019, 64893019, 64903019, 64913019, 64923019, 64933019, 64943019, 64953019, 64963019, 64973019, 64983019, 64993019, 65003019, 65013019, 65023019, 65033019, 65043019, 65053019, 65063019, 65073019, 65083019, 65093019, 65103019, 65113019, 65123019, 65133019, 65143019, 65153019, 65163019, 65173019, 65183019, 65193019, 65203019, 65213019, 65223019, 65233019, 65243019, 65253019, 65263019, 65273019, 65283019, 65293019]</msg>
<status status="PASS" starttime="20201110 08:41:01.225" endtime="20201110 08:41:01.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.214" endtime="20201110 08:41:01.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.248" endtime="20201110 08:41:01.588"></status>
</kw>
<msg timestamp="20201110 08:41:01.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048393819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.243" endtime="20201110 08:41:01.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038126361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048393819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:01.597" endtime="20201110 08:41:01.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.615" endtime="20201110 08:41:01.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.236" endtime="20201110 08:41:01.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.231" endtime="20201110 08:41:01.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:01.675" level="INFO">${RESULT} = {'source_diff': [0, 0.010267458, 0.010023375000000001, 0.010024209, 0.010024111000000002, 0.010022860999999994, 0.01002354200000001, 0.010023471999999992, 0.010023721999999999, 0.010023458000000013, 0...</msg>
<status status="PASS" starttime="20201110 08:41:01.623" endtime="20201110 08:41:01.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.686" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:41:01.683" endtime="20201110 08:41:01.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.690" level="INFO">VALUE: 0.038126361</msg>
<status status="PASS" starttime="20201110 08:41:01.688" endtime="20201110 08:41:01.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.677" endtime="20201110 08:41:01.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.703" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:01.701" endtime="20201110 08:41:01.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:01.708" level="INFO">VALUE: [0.048393819, 0.058417194, 0.068441403, 0.078465514, 0.088488375, 0.098511917, 0.108535389, 0.118559111, 0.128582569, 0.138605972, 0.148629625, 0.158652931, 0.168677208, 0.178700236, 0.188723458, 0.198747042, 0.208769958, 0.218793417, 0.228817556, 0.238841292, 0.248865208, 0.258888944, 0.268914319, 0.278937736, 0.288962042, 0.298986042, 0.3090105, 0.319033139, 0.329057028, 0.339080486, 0.349104556, 0.359127542, 0.369151681, 0.379175833, 0.389201111, 0.399224806, 0.409247611, 0.41927375, 0.429300194, 0.439323847, 0.449347681, 0.459371583, 0.469397194, 0.479421958, 0.489446597, 0.499471306, 0.509496222, 0.519520861, 0.529545431, 0.539569208, 0.549593931, 0.559617986, 0.569642736, 0.579667889, 0.589692764, 0.599717347, 0.609743347, 0.619769583, 0.629794458, 0.639818653, 0.649845236, 0.659870944, 0.669894958, 0.679918778, 0.689941694, 0.699964014, 0.709987486, 0.720011306, 0.730035194, 0.740058472, 0.750082889, 0.760105944, 0.770129444, 0.780152847, 0.790175319, 0.800198431, 0.810222639, 0.820245194, 0.830268139, 0.840290806, 0.850315556, 0.860339292, 0.870363792, 0.880387333, 0.890411542, 0.900435972, 0.910460583, 0.920485194, 0.930509806, 0.940533514, 0.950557792, 0.960581472, 0.970606153, 0.98063075, 0.990654319, 1.000677556, 1.010701292, 1.020726778, 1.030751778, 1.040776597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:01.706" endtime="20201110 08:41:01.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.694" endtime="20201110 08:41:01.710"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.716" endtime="20201110 08:41:01.719"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:01.725" endtime="20201110 08:41:01.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.720" endtime="20201110 08:41:01.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.712" endtime="20201110 08:41:01.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:58.982" endtime="20201110 08:41:01.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.467" endtime="20201110 08:41:01.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:53.466" endtime="20201110 08:41:01.751"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:41:01.756" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:01.778" endtime="20201110 08:41:03.890"></status>
</kw>
<msg timestamp="20201110 08:41:03.892" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67063028, 'start-iter': 1, 'wakeups': [67073303, 67083302, 67093302, 6...</msg>
<status status="PASS" starttime="20201110 08:41:01.774" endtime="20201110 08:41:03.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.898" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 67063028, 'start-iter': 1, 'wakeups': [67073303, 67083302, 67093302, 6...</msg>
<status status="PASS" starttime="20201110 08:41:03.894" endtime="20201110 08:41:03.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:03.901" endtime="20201110 08:41:03.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.767" endtime="20201110 08:41:03.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.761" endtime="20201110 08:41:03.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:03.914" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [67073303, 67083302, 67093302, 67103302, 67113302, 67123302, 67133302, 67143302, 67153302, 67163302, 67173302, 67183302, 67193302, 67203302, 67213302, 67223302, 67233302,...</msg>
<status status="PASS" starttime="20201110 08:41:03.910" endtime="20201110 08:41:03.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.925" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:03.922" endtime="20201110 08:41:03.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.930" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:03.928" endtime="20201110 08:41:03.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.916" endtime="20201110 08:41:03.933"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.947" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:03.944" endtime="20201110 08:41:03.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.953" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:03.950" endtime="20201110 08:41:03.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.935" endtime="20201110 08:41:03.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.968" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:41:03.966" endtime="20201110 08:41:03.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.974" level="INFO">VALUE: 67063028</msg>
<status status="PASS" starttime="20201110 08:41:03.971" endtime="20201110 08:41:03.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.958" endtime="20201110 08:41:03.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.990" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:03.988" endtime="20201110 08:41:03.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:03.995" level="INFO">VALUE: [67073303, 67083302, 67093302, 67103302, 67113302, 67123302, 67133302, 67143302, 67153302, 67163302, 67173302, 67183302, 67193302, 67203302, 67213302, 67223302, 67233302, 67243302, 67253302, 67263302, 67273302, 67283302, 67293302, 67303302, 67313302, 67323302, 67333302, 67343302, 67353302, 67363302, 67373302, 67383302, 67393302, 67403302, 67413302, 67423302, 67433302, 67443302, 67453302, 67463302, 67473302, 67483302, 67493302, 67503302, 67513302, 67523302, 67533302, 67543302, 67553302, 67563302, 67573302, 67583302, 67593302, 67603302, 67613302, 67623302, 67633302, 67643302, 67653302, 67663302, 67673302, 67683302, 67693302, 67703302, 67713302, 67723302, 67733302, 67743302, 67753302, 67763302, 67773302, 67783302, 67793302, 67803302, 67813302, 67823302, 67833302, 67843302, 67853302, 67863302, 67873302, 67883302, 67893302, 67903302, 67913302, 67923302, 67933302, 67943302, 67953302, 67963302, 67973302, 67983302, 67993302, 68003302, 68013302, 68023302, 68033302, 68043302, 68053302, 68063302]</msg>
<status status="PASS" starttime="20201110 08:41:03.993" endtime="20201110 08:41:03.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.979" endtime="20201110 08:41:03.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.014" endtime="20201110 08:41:04.355"></status>
</kw>
<msg timestamp="20201110 08:41:04.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044856792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055156431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.011" endtime="20201110 08:41:04.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044856792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055156431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:04.364" endtime="20201110 08:41:04.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.381" endtime="20201110 08:41:04.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.004" endtime="20201110 08:41:04.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:03.999" endtime="20201110 08:41:04.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:04.445" level="INFO">${RESULT} = {'source_diff': [0, 0.010299639, 0.010022971999999998, 0.010023958, 0.010023639, 0.010022139, 0.010021417000000005, 0.010023000000000004, 0.010021943999999991, 0.010023235999999991, 0.0100243060000000...</msg>
<status status="PASS" starttime="20201110 08:41:04.390" endtime="20201110 08:41:04.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.456" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:41:04.454" endtime="20201110 08:41:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.460" level="INFO">VALUE: 0.044856792</msg>
<status status="PASS" starttime="20201110 08:41:04.458" endtime="20201110 08:41:04.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.447" endtime="20201110 08:41:04.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.473" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:04.471" endtime="20201110 08:41:04.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:04.478" level="INFO">VALUE: [0.055156431, 0.065179403, 0.075203361, 0.085227, 0.095249139, 0.105270556, 0.115293556, 0.1253155, 0.135338736, 0.145363042, 0.155386736, 0.165410389, 0.1754345, 0.185457264, 0.195481181, 0.205504472, 0.215528625, 0.225552208, 0.235576861, 0.245600806, 0.255623861, 0.26564675, 0.275670736, 0.285695764, 0.295721403, 0.305744125, 0.315767097, 0.325790167, 0.335813472, 0.345836931, 0.355860319, 0.365883653, 0.375907667, 0.385931583, 0.395955069, 0.405978167, 0.416001222, 0.426024125, 0.436046153, 0.4460685, 0.456091403, 0.466112986, 0.476135958, 0.486159083, 0.496182347, 0.506204361, 0.516229889, 0.526255667, 0.53628025, 0.546305208, 0.556329, 0.566351833, 0.576374417, 0.586396167, 0.596418917, 0.606441125, 0.616462278, 0.626483, 0.636503889, 0.646524542, 0.656545778, 0.666568, 0.676590097, 0.686612181, 0.696635639, 0.706658986, 0.71668125, 0.726701764, 0.736723806, 0.746745431, 0.756767583, 0.766789444, 0.776812111, 0.786833778, 0.796856556, 0.806878611, 0.816902417, 0.82692625, 0.836950208, 0.846973708, 0.856997556, 0.867020208, 0.877043347, 0.887067056, 0.897091125, 0.907114069, 0.917137931, 0.927161389, 0.937185722, 0.947209542, 0.957232875, 0.967256292, 0.977280667, 0.987306625, 0.997333, 1.007357736, 1.017381792, 1.027405639, 1.037431042, 1.047455347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:04.476" endtime="20201110 08:41:04.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.464" endtime="20201110 08:41:04.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.487" endtime="20201110 08:41:04.489"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:04.495" endtime="20201110 08:41:04.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.490" endtime="20201110 08:41:04.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.482" endtime="20201110 08:41:04.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.758" endtime="20201110 08:41:04.520"></status>
</kw>
<msg timestamp="20201110 08:41:04.521" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:04.541" endtime="20201110 08:41:06.653"></status>
</kw>
<msg timestamp="20201110 08:41:06.655" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69819411, 'start-iter': 1, 'wakeups': [69829686, 69839685, 69849685, 6...</msg>
<status status="PASS" starttime="20201110 08:41:04.538" endtime="20201110 08:41:06.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.661" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69819411, 'start-iter': 1, 'wakeups': [69829686, 69839685, 69849685, 6...</msg>
<status status="PASS" starttime="20201110 08:41:06.657" endtime="20201110 08:41:06.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.664" endtime="20201110 08:41:06.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.531" endtime="20201110 08:41:06.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.526" endtime="20201110 08:41:06.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:06.676" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [69829686, 69839685, 69849685, 69859685, 69869685, 69879685, 69889685, 69899685, 69909685, 69919685, 69929685, 69939685, 69949685, 69959685, 69969685, 69979685, 69989685,...</msg>
<status status="PASS" starttime="20201110 08:41:06.672" endtime="20201110 08:41:06.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.686" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:06.684" endtime="20201110 08:41:06.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.691" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:06.689" endtime="20201110 08:41:06.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.678" endtime="20201110 08:41:06.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.710" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:06.708" endtime="20201110 08:41:06.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.717" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:06.713" endtime="20201110 08:41:06.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.702" endtime="20201110 08:41:06.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.729" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:41:06.727" endtime="20201110 08:41:06.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.733" level="INFO">VALUE: 69819411</msg>
<status status="PASS" starttime="20201110 08:41:06.731" endtime="20201110 08:41:06.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.720" endtime="20201110 08:41:06.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.745" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:06.743" endtime="20201110 08:41:06.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:06.750" level="INFO">VALUE: [69829686, 69839685, 69849685, 69859685, 69869685, 69879685, 69889685, 69899685, 69909685, 69919685, 69929685, 69939685, 69949685, 69959685, 69969685, 69979685, 69989685, 69999685, 70009685, 70019685, 70029685, 70039685, 70049685, 70059685, 70069685, 70079685, 70089685, 70099685, 70109685, 70119685, 70129685, 70139685, 70149685, 70159685, 70169685, 70179685, 70189685, 70199685, 70209685, 70219685, 70229685, 70239685, 70249685, 70259685, 70269685, 70279685, 70289685, 70299685, 70309685, 70319685, 70329685, 70339685, 70349685, 70359685, 70369685, 70379685, 70389685, 70399685, 70409685, 70419685, 70429685, 70439685, 70449685, 70459685, 70469685, 70479685, 70489685, 70499685, 70509685, 70519685, 70529685, 70539685, 70549685, 70559685, 70569685, 70579685, 70589685, 70599685, 70609685, 70619685, 70629685, 70639685, 70649685, 70659685, 70669685, 70679685, 70689685, 70699685, 70709685, 70719685, 70729685, 70739685, 70749685, 70759685, 70769685, 70779685, 70789685, 70799685, 70809685, 70819685]</msg>
<status status="PASS" starttime="20201110 08:41:06.748" endtime="20201110 08:41:06.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.737" endtime="20201110 08:41:06.753"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:06.769" endtime="20201110 08:41:07.115"></status>
</kw>
<msg timestamp="20201110 08:41:07.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037400611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047701806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:06.766" endtime="20201110 08:41:07.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037400611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047701806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:07.123" endtime="20201110 08:41:07.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.140" endtime="20201110 08:41:07.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.758" endtime="20201110 08:41:07.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:06.754" endtime="20201110 08:41:07.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:07.202" level="INFO">${RESULT} = {'source_diff': [0, 0.010301194999999999, 0.010024625000000002, 0.010025527, 0.010024472999999992, 0.010024305000000011, 0.010023639, 0.010024860999999996, 0.010024124999999995, 0.010024014000000012, ...</msg>
<status status="PASS" starttime="20201110 08:41:07.149" endtime="20201110 08:41:07.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.213" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:41:07.210" endtime="20201110 08:41:07.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.217" level="INFO">VALUE: 0.037400611</msg>
<status status="PASS" starttime="20201110 08:41:07.215" endtime="20201110 08:41:07.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.203" endtime="20201110 08:41:07.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.232" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:07.229" endtime="20201110 08:41:07.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:07.237" level="INFO">VALUE: [0.047701806, 0.057726431, 0.067751958, 0.077776431, 0.087800736, 0.097824375, 0.107849236, 0.117873361, 0.127897375, 0.137921139, 0.147946375, 0.157970819, 0.167996278, 0.178021056, 0.188045375, 0.198069639, 0.208094417, 0.218118653, 0.228142278, 0.238167125, 0.248192403, 0.258215958, 0.268240153, 0.278263153, 0.288287264, 0.298311347, 0.308335722, 0.318359472, 0.328382583, 0.338405972, 0.348429292, 0.358452444, 0.368475042, 0.378497736, 0.38852025, 0.398543028, 0.408567139, 0.418591569, 0.428616097, 0.438640736, 0.448664653, 0.458688431, 0.468712417, 0.478736236, 0.488760931, 0.498786056, 0.508811653, 0.518836514, 0.528862181, 0.538887139, 0.548912556, 0.558938083, 0.568962778, 0.578987222, 0.589012569, 0.599037944, 0.609063778, 0.619087653, 0.629112542, 0.639137153, 0.649162083, 0.659185736, 0.669209833, 0.679233597, 0.689258639, 0.699283792, 0.709309278, 0.719334444, 0.729359597, 0.739383056, 0.749406694, 0.759430222, 0.769454083, 0.779477597, 0.789501542, 0.799524875, 0.809547083, 0.819569167, 0.829590639, 0.839613306, 0.849636681, 0.859659194, 0.869682083, 0.879706153, 0.889729875, 0.899753333, 0.909777125, 0.919801056, 0.929826181, 0.939850806, 0.949875014, 0.959899764, 0.969923917, 0.979947028, 0.989970514, 0.999993361, 1.010017347, 1.020041264, 1.030065681, 1.040090361] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:07.234" endtime="20201110 08:41:07.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.222" endtime="20201110 08:41:07.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.245" endtime="20201110 08:41:07.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:07.254" endtime="20201110 08:41:07.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.250" endtime="20201110 08:41:07.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.241" endtime="20201110 08:41:07.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:04.522" endtime="20201110 08:41:07.279"></status>
</kw>
<msg timestamp="20201110 08:41:07.280" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:07.301" endtime="20201110 08:41:09.413"></status>
</kw>
<msg timestamp="20201110 08:41:09.414" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72572433, 'start-iter': 1, 'wakeups': [72582708, 72592707, 72602707, 7...</msg>
<status status="PASS" starttime="20201110 08:41:07.297" endtime="20201110 08:41:09.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.421" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72572433, 'start-iter': 1, 'wakeups': [72582708, 72592707, 72602707, 7...</msg>
<status status="PASS" starttime="20201110 08:41:09.417" endtime="20201110 08:41:09.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.424" endtime="20201110 08:41:09.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.290" endtime="20201110 08:41:09.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.285" endtime="20201110 08:41:09.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:09.437" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [72582708, 72592707, 72602707, 72612707, 72622707, 72632707, 72642707, 72652707, 72662707, 72672707, 72682707, 72692707, 72702707, 72712707, 72722707, 72732707, 72742707,...</msg>
<status status="PASS" starttime="20201110 08:41:09.433" endtime="20201110 08:41:09.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.448" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:09.445" endtime="20201110 08:41:09.448"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.453" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:09.450" endtime="20201110 08:41:09.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.439" endtime="20201110 08:41:09.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.465" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:09.463" endtime="20201110 08:41:09.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.469" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:09.467" endtime="20201110 08:41:09.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.456" endtime="20201110 08:41:09.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.482" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:41:09.479" endtime="20201110 08:41:09.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.487" level="INFO">VALUE: 72572433</msg>
<status status="PASS" starttime="20201110 08:41:09.484" endtime="20201110 08:41:09.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.473" endtime="20201110 08:41:09.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.499" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:09.496" endtime="20201110 08:41:09.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.504" level="INFO">VALUE: [72582708, 72592707, 72602707, 72612707, 72622707, 72632707, 72642707, 72652707, 72662707, 72672707, 72682707, 72692707, 72702707, 72712707, 72722707, 72732707, 72742707, 72752707, 72762707, 72772707, 72782707, 72792707, 72802707, 72812707, 72822707, 72832707, 72842707, 72852707, 72862707, 72872707, 72882707, 72892707, 72902707, 72912707, 72922707, 72932707, 72942707, 72952707, 72962707, 72972707, 72982707, 72992707, 73002707, 73012707, 73022707, 73032707, 73042707, 73052707, 73062707, 73072707, 73082707, 73092707, 73102707, 73112707, 73122707, 73132707, 73142707, 73152707, 73162707, 73172707, 73182707, 73192707, 73202707, 73212707, 73222707, 73232707, 73242707, 73252707, 73262707, 73272707, 73282707, 73292707, 73302707, 73312707, 73322707, 73332707, 73342707, 73352707, 73362707, 73372707, 73382707, 73392707, 73402707, 73412707, 73422707, 73432707, 73442707, 73452707, 73462707, 73472707, 73482707, 73492707, 73502707, 73512707, 73522707, 73532707, 73542707, 73552707, 73562707, 73572707]</msg>
<status status="PASS" starttime="20201110 08:41:09.501" endtime="20201110 08:41:09.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.490" endtime="20201110 08:41:09.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.524" endtime="20201110 08:41:09.863"></status>
</kw>
<msg timestamp="20201110 08:41:09.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037956097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048256278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.521" endtime="20201110 08:41:09.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037956097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048256278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:09.871" endtime="20201110 08:41:09.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.888" endtime="20201110 08:41:09.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.512" endtime="20201110 08:41:09.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.507" endtime="20201110 08:41:09.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:09.950" level="INFO">${RESULT} = {'source_diff': [0, 0.010300180999999999, 0.010023540999999997, 0.010024249999999998, 0.010022987000000011, 0.010023679999999993, 0.010023457999999999, 0.010024875000000003, 0.010025403000000002, 0.01...</msg>
<status status="PASS" starttime="20201110 08:41:09.896" endtime="20201110 08:41:09.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.961" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:41:09.958" endtime="20201110 08:41:09.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.965" level="INFO">VALUE: 0.037956097</msg>
<status status="PASS" starttime="20201110 08:41:09.963" endtime="20201110 08:41:09.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.952" endtime="20201110 08:41:09.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.978" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:09.976" endtime="20201110 08:41:09.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:09.983" level="INFO">VALUE: [0.048256278, 0.058279819, 0.068304069, 0.078327056, 0.088350736, 0.098374194, 0.108399069, 0.118424472, 0.128451236, 0.138477778, 0.148503819, 0.158528792, 0.168553778, 0.178579125, 0.188605708, 0.198631444, 0.208656889, 0.218681736, 0.228709542, 0.238736069, 0.248762583, 0.258787958, 0.268813278, 0.278839792, 0.288865667, 0.298891528, 0.308915639, 0.318938917, 0.328963611, 0.338987958, 0.349011389, 0.359034319, 0.369058319, 0.379082958, 0.389107722, 0.399131083, 0.409155375, 0.419180361, 0.429205389, 0.439229722, 0.449253903, 0.459278653, 0.469303667, 0.479328653, 0.489353097, 0.499377542, 0.509403708, 0.519428333, 0.529453708, 0.539479208, 0.549504931, 0.559529708, 0.569553556, 0.579579597, 0.589605931, 0.599631056, 0.609657292, 0.619683181, 0.629709889, 0.639736264, 0.649762139, 0.659788639, 0.669815264, 0.679842778, 0.689870028, 0.699896958, 0.709923792, 0.719950319, 0.729977083, 0.740003333, 0.75002975, 0.760056056, 0.770081542, 0.780105931, 0.790131764, 0.800157111, 0.810182444, 0.820207958, 0.830232778, 0.840256361, 0.850280861, 0.860304347, 0.870329528, 0.880354194, 0.890378972, 0.900403167, 0.910426986, 0.920451514, 0.930477181, 0.940502625, 0.950527792, 0.960553375, 0.970577181, 0.980601208, 0.990626097, 1.000651181, 1.010676278, 1.020700389, 1.03072525, 1.040749653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:09.980" endtime="20201110 08:41:09.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.969" endtime="20201110 08:41:09.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:09.992" endtime="20201110 08:41:09.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:10.000" endtime="20201110 08:41:10.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.996" endtime="20201110 08:41:10.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:09.988" endtime="20201110 08:41:10.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:07.281" endtime="20201110 08:41:10.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.753" endtime="20201110 08:41:10.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:01.752" endtime="20201110 08:41:10.027"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:41:10.032" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:10.055" endtime="20201110 08:41:12.167"></status>
</kw>
<msg timestamp="20201110 08:41:12.168" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75319744, 'start-iter': 1, 'wakeups': [75330053, 75340052, 75350052,...</msg>
<status status="PASS" starttime="20201110 08:41:10.051" endtime="20201110 08:41:12.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.175" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 75319744, 'start-iter': 1, 'wakeups': [75330053, 75340052, 75350052,...</msg>
<status status="PASS" starttime="20201110 08:41:12.170" endtime="20201110 08:41:12.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.177" endtime="20201110 08:41:12.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.042" endtime="20201110 08:41:12.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.037" endtime="20201110 08:41:12.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:12.191" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [75330053, 75340052, 75350052, 75360052, 75370052, 75380052, 75390052, 75400052, 75410053, 75420052, 75430052, 75440052, 75450052, 75460053, 75470052, 75480052, 75490052...</msg>
<status status="PASS" starttime="20201110 08:41:12.186" endtime="20201110 08:41:12.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.201" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:12.198" endtime="20201110 08:41:12.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.205" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:12.203" endtime="20201110 08:41:12.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.193" endtime="20201110 08:41:12.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.218" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:12.216" endtime="20201110 08:41:12.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.222" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:12.220" endtime="20201110 08:41:12.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.209" endtime="20201110 08:41:12.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.234" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:41:12.232" endtime="20201110 08:41:12.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.239" level="INFO">VALUE: 75319744</msg>
<status status="PASS" starttime="20201110 08:41:12.237" endtime="20201110 08:41:12.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.226" endtime="20201110 08:41:12.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.251" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:12.249" endtime="20201110 08:41:12.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.256" level="INFO">VALUE: [75330053, 75340052, 75350052, 75360052, 75370052, 75380052, 75390052, 75400052, 75410053, 75420052, 75430052, 75440052, 75450052, 75460053, 75470052, 75480052, 75490052, 75500052, 75510052, 75520052, 75530052, 75540052, 75550052, 75560052, 75570052, 75580052, 75590053, 75600052, 75610052, 75620053, 75630052, 75640052, 75650052, 75660052, 75670052, 75680053, 75690053, 75700053, 75710053, 75720052, 75730052, 75740052, 75750052, 75760053, 75770052, 75780052, 75790052, 75800052, 75810052, 75820052, 75830052, 75840052, 75850053, 75860052, 75870052, 75880053, 75890052, 75900053, 75910052, 75920052, 75930052, 75940052, 75950052, 75960052, 75970052, 75980052, 75990052, 76000052, 76010053, 76020053, 76030052, 76040052, 76050052, 76060053, 76070052, 76080052, 76090052, 76100053, 76110052, 76120052, 76130052, 76140053, 76150052, 76160053, 76170052, 76180052, 76190052, 76200052, 76210052, 76220052, 76230052, 76240052, 76250052, 76260052, 76270052, 76280052, 76290052, 76300052, 76310052, 76320052]</msg>
<status status="PASS" starttime="20201110 08:41:12.253" endtime="20201110 08:41:12.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.242" endtime="20201110 08:41:12.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.275" endtime="20201110 08:41:12.614"></status>
</kw>
<msg timestamp="20201110 08:41:12.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055475903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:12.272" endtime="20201110 08:41:12.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045141431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055475903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:12.622" endtime="20201110 08:41:12.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.639" endtime="20201110 08:41:12.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.265" endtime="20201110 08:41:12.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.260" endtime="20201110 08:41:12.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:12.701" level="INFO">${RESULT} = {'source_diff': [0, 0.010334471999999997, 0.010023971999999999, 0.010026194000000002, 0.010026278, 0.010025514, 0.010024971999999993, 0.01002483400000001, 0.010024943999999994, 0.01002534699999999, 0....</msg>
<status status="PASS" starttime="20201110 08:41:12.647" endtime="20201110 08:41:12.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.712" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:41:12.710" endtime="20201110 08:41:12.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.716" level="INFO">VALUE: 0.045141431</msg>
<status status="PASS" starttime="20201110 08:41:12.714" endtime="20201110 08:41:12.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.703" endtime="20201110 08:41:12.718"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.729" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:12.727" endtime="20201110 08:41:12.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:12.734" level="INFO">VALUE: [0.055475903, 0.065499875, 0.075526069, 0.085552347, 0.095577861, 0.105602833, 0.115627667, 0.125652611, 0.135677958, 0.145700625, 0.155725736, 0.165748986, 0.175773042, 0.185797486, 0.195821292, 0.205845681, 0.215870278, 0.225894986, 0.235920319, 0.245944556, 0.255968528, 0.265992181, 0.276016347, 0.286040472, 0.296064056, 0.306086542, 0.316110208, 0.326132722, 0.336157333, 0.346181472, 0.356204319, 0.366227333, 0.376250694, 0.386273347, 0.396296444, 0.406319153, 0.416340681, 0.426361944, 0.436383819, 0.446406472, 0.456430917, 0.466454375, 0.476477375, 0.486500458, 0.496522278, 0.506544417, 0.516566014, 0.526589181, 0.536612972, 0.546638361, 0.556663069, 0.566687097, 0.576711583, 0.586734819, 0.596759319, 0.606784125, 0.616806833, 0.626831333, 0.636853708, 0.646875694, 0.656899125, 0.66692275, 0.676946972, 0.68697075, 0.696994861, 0.707018944, 0.717043319, 0.727066764, 0.737090222, 0.747113014, 0.757136542, 0.767160278, 0.777184139, 0.787208597, 0.797231111, 0.807254236, 0.817277986, 0.827303236, 0.837327569, 0.847352389, 0.857376139, 0.867400806, 0.877424653, 0.887450903, 0.89747625, 0.907502417, 0.917528583, 0.927555028, 0.937580792, 0.947606861, 0.957633361, 0.967658889, 0.977683819, 0.987707875, 0.997732194, 1.00775675, 1.017781778, 1.02780725, 1.037833903, 1.047861458] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:12.732" endtime="20201110 08:41:12.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.720" endtime="20201110 08:41:12.736"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.743" endtime="20201110 08:41:12.745"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:12.751" endtime="20201110 08:41:12.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.746" endtime="20201110 08:41:12.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.738" endtime="20201110 08:41:12.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.034" endtime="20201110 08:41:12.777"></status>
</kw>
<msg timestamp="20201110 08:41:12.777" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:12.798" endtime="20201110 08:41:14.911"></status>
</kw>
<msg timestamp="20201110 08:41:14.912" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78056859, 'start-iter': 1, 'wakeups': [78067166, 78077168, 78087167,...</msg>
<status status="PASS" starttime="20201110 08:41:12.795" endtime="20201110 08:41:14.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 78056859, 'start-iter': 1, 'wakeups': [78067166, 78077168, 78087167,...</msg>
<status status="PASS" starttime="20201110 08:41:14.914" endtime="20201110 08:41:14.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:14.921" endtime="20201110 08:41:14.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.788" endtime="20201110 08:41:14.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.782" endtime="20201110 08:41:14.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:14.934" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [78067166, 78077168, 78087167, 78097167, 78107168, 78117168, 78127167, 78137167, 78147167, 78157168, 78167167, 78177167, 78187167, 78197167, 78207168, 78217167, 78227167...</msg>
<status status="PASS" starttime="20201110 08:41:14.929" endtime="20201110 08:41:14.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.944" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:14.942" endtime="20201110 08:41:14.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.948" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:14.946" endtime="20201110 08:41:14.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.936" endtime="20201110 08:41:14.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.961" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:14.958" endtime="20201110 08:41:14.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.965" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:14.963" endtime="20201110 08:41:14.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.952" endtime="20201110 08:41:14.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.979" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:41:14.977" endtime="20201110 08:41:14.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.984" level="INFO">VALUE: 78056859</msg>
<status status="PASS" starttime="20201110 08:41:14.982" endtime="20201110 08:41:14.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.969" endtime="20201110 08:41:14.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:14.996" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:14.994" endtime="20201110 08:41:14.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.001" level="INFO">VALUE: [78067166, 78077168, 78087167, 78097167, 78107168, 78117168, 78127167, 78137167, 78147167, 78157168, 78167167, 78177167, 78187167, 78197167, 78207168, 78217167, 78227167, 78237167, 78247167, 78257168, 78267167, 78277168, 78287167, 78297167, 78307167, 78317167, 78327167, 78337167, 78347167, 78357168, 78367168, 78377167, 78387167, 78397167, 78407168, 78417167, 78427167, 78437168, 78447167, 78457167, 78467168, 78477168, 78487167, 78497168, 78507168, 78517167, 78527167, 78537167, 78547167, 78557167, 78567167, 78577168, 78587167, 78597167, 78607167, 78617168, 78627167, 78637167, 78647167, 78657167, 78667167, 78677168, 78687167, 78697167, 78707167, 78717167, 78727168, 78737167, 78747167, 78757167, 78767167, 78777168, 78787167, 78797168, 78807167, 78817167, 78827167, 78837167, 78847167, 78857167, 78867167, 78877167, 78887167, 78897167, 78907167, 78917168, 78927167, 78937167, 78947167, 78957167, 78967167, 78977168, 78987167, 78997167, 79007167, 79017167, 79027167, 79037168, 79047167, 79057168]</msg>
<status status="PASS" starttime="20201110 08:41:14.998" endtime="20201110 08:41:15.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:14.987" endtime="20201110 08:41:15.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.021" endtime="20201110 08:41:15.360"></status>
</kw>
<msg timestamp="20201110 08:41:15.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038432625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048764722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.017" endtime="20201110 08:41:15.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038432625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048764722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:15.369" endtime="20201110 08:41:15.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.386" endtime="20201110 08:41:15.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.010" endtime="20201110 08:41:15.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.004" endtime="20201110 08:41:15.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:15.446" level="INFO">${RESULT} = {'source_diff': [0, 0.010332097000000005, 0.010028208999999996, 0.010026249999999994, 0.01002670800000001, 0.010028222000000003, 0.010025902999999989, 0.010025194000000001, 0.010025417000000009, 0.010...</msg>
<status status="PASS" starttime="20201110 08:41:15.394" endtime="20201110 08:41:15.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.457" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:41:15.455" endtime="20201110 08:41:15.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.462" level="INFO">VALUE: 0.038432625</msg>
<status status="PASS" starttime="20201110 08:41:15.459" endtime="20201110 08:41:15.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.448" endtime="20201110 08:41:15.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.475" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:15.473" endtime="20201110 08:41:15.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:15.482" level="INFO">VALUE: [0.048764722, 0.058792931, 0.068819181, 0.078845889, 0.088874111, 0.098900014, 0.108925208, 0.118950625, 0.128976167, 0.139001819, 0.149027167, 0.159051458, 0.169076444, 0.179101944, 0.189127722, 0.199150792, 0.209176153, 0.219201792, 0.229227153, 0.239251042, 0.249272542, 0.259297194, 0.269320083, 0.279343708, 0.289367236, 0.299390986, 0.309414528, 0.319437139, 0.329461625, 0.339486764, 0.349511861, 0.359536, 0.369560667, 0.37958475, 0.389610861, 0.399633389, 0.40965725, 0.419683153, 0.429707722, 0.4397325, 0.449759292, 0.459785569, 0.4698105, 0.479837389, 0.4898635, 0.499887847, 0.509913097, 0.519939292, 0.52996425, 0.539988708, 0.550013639, 0.560040528, 0.570065181, 0.580090389, 0.590116708, 0.6001435, 0.610169069, 0.620194653, 0.630218889, 0.640243931, 0.650269403, 0.660295569, 0.670319861, 0.680344792, 0.690369861, 0.700394125, 0.710420597, 0.720444125, 0.73047, 0.740494653, 0.750520236, 0.760546944, 0.770572514, 0.780598806, 0.790624417, 0.800649681, 0.810674528, 0.820698889, 0.830724167, 0.840747833, 0.850772917, 0.860796528, 0.870820833, 0.880846014, 0.890872056, 0.900898889, 0.9109235, 0.920948806, 0.930975514, 0.941001403, 0.951027194, 0.961053236, 0.971077361, 0.98110225, 0.991126472, 1.001150931, 1.011176278, 1.021202222, 1.031226014, 1.041250431] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:15.477" endtime="20201110 08:41:15.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.465" endtime="20201110 08:41:15.484"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.491" endtime="20201110 08:41:15.493"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:15.499" endtime="20201110 08:41:15.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.495" endtime="20201110 08:41:15.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.486" endtime="20201110 08:41:15.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:12.779" endtime="20201110 08:41:15.524"></status>
</kw>
<msg timestamp="20201110 08:41:15.525" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:15.545" endtime="20201110 08:41:17.657"></status>
</kw>
<msg timestamp="20201110 08:41:17.659" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80797302, 'start-iter': 1, 'wakeups': [80807609, 80817610, 80827610,...</msg>
<status status="PASS" starttime="20201110 08:41:15.542" endtime="20201110 08:41:17.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80797302, 'start-iter': 1, 'wakeups': [80807609, 80817610, 80827610,...</msg>
<status status="PASS" starttime="20201110 08:41:17.668" endtime="20201110 08:41:17.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.675" endtime="20201110 08:41:17.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.535" endtime="20201110 08:41:17.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.530" endtime="20201110 08:41:17.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:17.689" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [80807609, 80817610, 80827610, 80837611, 80847611, 80857611, 80867610, 80877611, 80887611, 80897610, 80907610, 80917610, 80927611, 80937610, 80947610, 80957611, 80967610...</msg>
<status status="PASS" starttime="20201110 08:41:17.684" endtime="20201110 08:41:17.689"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.699" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:41:17.697" endtime="20201110 08:41:17.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.704" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:41:17.702" endtime="20201110 08:41:17.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.691" endtime="20201110 08:41:17.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.717" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:41:17.715" endtime="20201110 08:41:17.718"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.722" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:41:17.720" endtime="20201110 08:41:17.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.708" endtime="20201110 08:41:17.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.735" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:41:17.732" endtime="20201110 08:41:17.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.741" level="INFO">VALUE: 80797302</msg>
<status status="PASS" starttime="20201110 08:41:17.738" endtime="20201110 08:41:17.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.726" endtime="20201110 08:41:17.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.756" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:17.753" endtime="20201110 08:41:17.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:17.762" level="INFO">VALUE: [80807609, 80817610, 80827610, 80837611, 80847611, 80857611, 80867610, 80877611, 80887611, 80897610, 80907610, 80917610, 80927611, 80937610, 80947610, 80957611, 80967610, 80977610, 80987611, 80997610, 81007610, 81017610, 81027610, 81037610, 81047610, 81057610, 81067610, 81077610, 81087611, 81097610, 81107610, 81117610, 81127610, 81137611, 81147611, 81157610, 81167610, 81177610, 81187610, 81197611, 81207610, 81217610, 81227610, 81237610, 81247610, 81257611, 81267610, 81277610, 81287610, 81297610, 81307610, 81317610, 81327610, 81337610, 81347611, 81357610, 81367610, 81377610, 81387610, 81397610, 81407611, 81417611, 81427610, 81437610, 81447611, 81457611, 81467610, 81477611, 81487610, 81497610, 81507610, 81517610, 81527610, 81537610, 81547610, 81557610, 81567611, 81577611, 81587611, 81597610, 81607610, 81617610, 81627610, 81637610, 81647611, 81657611, 81667610, 81677610, 81687611, 81697610, 81707610, 81717611, 81727610, 81737610, 81747610, 81757610, 81767611, 81777610, 81787610, 81797610]</msg>
<status status="PASS" starttime="20201110 08:41:17.758" endtime="20201110 08:41:17.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.745" endtime="20201110 08:41:17.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:17.783" endtime="20201110 08:41:18.124"></status>
</kw>
<msg timestamp="20201110 08:41:18.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037255972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047587667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:17.780" endtime="20201110 08:41:18.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037255972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047587667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:41:18.133" endtime="20201110 08:41:18.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.151" endtime="20201110 08:41:18.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.772" endtime="20201110 08:41:18.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:17.766" endtime="20201110 08:41:18.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:41:18.211" level="INFO">${RESULT} = {'source_diff': [0, 0.010331695000000002, 0.010024485999999999, 0.010023180000000007, 0.010024597999999996, 0.010023512999999998, 0.010022875, 0.010022722999999997, 0.010025222, 0.010023778000000011, ...</msg>
<status status="PASS" starttime="20201110 08:41:18.159" endtime="20201110 08:41:18.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.222" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:41:18.220" endtime="20201110 08:41:18.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.227" level="INFO">VALUE: 0.037255972</msg>
<status status="PASS" starttime="20201110 08:41:18.224" endtime="20201110 08:41:18.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.213" endtime="20201110 08:41:18.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.240" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:41:18.237" endtime="20201110 08:41:18.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:41:18.244" level="INFO">VALUE: [0.047587667, 0.057612153, 0.067635333, 0.077659931, 0.087683444, 0.097706319, 0.107729042, 0.117754264, 0.127778042, 0.137799903, 0.147824319, 0.15784825, 0.167873111, 0.177896875, 0.187923417, 0.197949625, 0.207972986, 0.217996944, 0.228022639, 0.238045069, 0.248069278, 0.258093708, 0.268118861, 0.278143472, 0.288167819, 0.298192375, 0.308216958, 0.318241486, 0.328266819, 0.338289986, 0.348314972, 0.358339319, 0.368362778, 0.378387389, 0.388412708, 0.398436167, 0.408460111, 0.418483542, 0.428506222, 0.438530653, 0.448553014, 0.458575486, 0.468598361, 0.478620556, 0.488644653, 0.498669292, 0.508692542, 0.518716444, 0.528740542, 0.538764639, 0.548789264, 0.558813583, 0.568838597, 0.578864056, 0.588890083, 0.598914208, 0.608939486, 0.618964889, 0.628990236, 0.639015444, 0.649042528, 0.659068472, 0.669093264, 0.679118181, 0.689144708, 0.699169278, 0.709193528, 0.719219264, 0.729243278, 0.739269653, 0.749296861, 0.759323833, 0.769352042, 0.779378819, 0.789406194, 0.799433653, 0.809462236, 0.819488236, 0.829514264, 0.839539014, 0.849565319, 0.859590778, 0.8696155, 0.879639417, 0.889665694, 0.899690736, 0.909714792, 0.919739153, 0.929764764, 0.939789083, 0.949814278, 0.95983875, 0.969863319, 0.979888792, 0.989915042, 0.999940222, 1.009967431, 1.019991819, 1.030017222, 1.040041806] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:41:18.242" endtime="20201110 08:41:18.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.230" endtime="20201110 08:41:18.247"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:41:18.253" endtime="20201110 08:41:18.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:41:18.261" endtime="20201110 08:41:18.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.257" endtime="20201110 08:41:18.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:18.248" endtime="20201110 08:41:18.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:15.526" endtime="20201110 08:41:18.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.029" endtime="20201110 08:41:18.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:41:10.027" endtime="20201110 08:41:18.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.239" endtime="20201110 08:41:18.288"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_samr21-xpro</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:39:55.101" endtime="20201110 08:41:18.290" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:39:52.525" endtime="20201110 08:41:18.297"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">samr21-xpro</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:37:20.489" endtime="20201110 08:41:18.337"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_samr21-xpro</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
