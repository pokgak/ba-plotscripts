<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201110 08:32:08.949" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:10.276" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:10.293" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:11.132" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:10.272" endtime="20201110 08:32:11.133"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.139" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:32:11.136" endtime="20201110 08:32:14.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:10.269" endtime="20201110 08:32:14.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:14.147" endtime="20201110 08:32:14.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.144" endtime="20201110 08:32:14.485"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.517" endtime="20201110 08:32:14.541"></status>
</kw>
<msg timestamp="20201110 08:32:14.543" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:14.514" endtime="20201110 08:32:14.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.549" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:14.545" endtime="20201110 08:32:14.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.557" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:14.552" endtime="20201110 08:32:14.557"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:14.507" endtime="20201110 08:32:14.559"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:14.500" endtime="20201110 08:32:14.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.498" endtime="20201110 08:32:14.562"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:14.571" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:14.569" endtime="20201110 08:32:14.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.564" endtime="20201110 08:32:14.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.496" endtime="20201110 08:32:14.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.494" endtime="20201110 08:32:14.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.574" endtime="20201110 08:32:14.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.490" endtime="20201110 08:32:14.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.581" endtime="20201110 08:32:14.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.487" endtime="20201110 08:32:14.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:10.266" endtime="20201110 08:32:14.588"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:14.603" endtime="20201110 08:32:14.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.599" endtime="20201110 08:32:14.627"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.664" endtime="20201110 08:32:14.684"></status>
</kw>
<msg timestamp="20201110 08:32:14.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:14.661" endtime="20201110 08:32:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.692" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:14.688" endtime="20201110 08:32:14.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.699" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:14.694" endtime="20201110 08:32:14.700"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:14.653" endtime="20201110 08:32:14.702"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:14.646" endtime="20201110 08:32:14.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.641" endtime="20201110 08:32:14.704"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:14.712" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:14.711" endtime="20201110 08:32:14.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.706" endtime="20201110 08:32:14.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.639" endtime="20201110 08:32:14.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.638" endtime="20201110 08:32:14.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.716" endtime="20201110 08:32:14.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.633" endtime="20201110 08:32:14.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.629" endtime="20201110 08:32:14.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.596" endtime="20201110 08:32:14.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.742" endtime="20201110 08:32:14.756"></status>
</kw>
<msg timestamp="20201110 08:32:14.757" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:14.738" endtime="20201110 08:32:14.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.763" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:14.759" endtime="20201110 08:32:14.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:14.766" endtime="20201110 08:32:14.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.730" endtime="20201110 08:32:14.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.725" endtime="20201110 08:32:14.773"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.783" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:32:14.780" endtime="20201110 08:32:14.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.788" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201110 08:32:14.786" endtime="20201110 08:32:14.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.774" endtime="20201110 08:32:14.790"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:14.589" endtime="20201110 08:32:14.792" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:09.210" endtime="20201110 08:32:14.799"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:14.961" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:14.977" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:15.793" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:14.956" endtime="20201110 08:32:15.795"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:18.800" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:32:15.797" endtime="20201110 08:32:18.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.947" endtime="20201110 08:32:18.803"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:18.808" endtime="20201110 08:32:19.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:18.805" endtime="20201110 08:32:19.158"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.190" endtime="20201110 08:32:19.211"></status>
</kw>
<msg timestamp="20201110 08:32:19.212" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:19.186" endtime="20201110 08:32:19.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.220" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:19.215" endtime="20201110 08:32:19.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:19.223" endtime="20201110 08:32:19.228"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:19.180" endtime="20201110 08:32:19.230"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:19.174" endtime="20201110 08:32:19.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.171" endtime="20201110 08:32:19.233"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:19.241" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:19.240" endtime="20201110 08:32:19.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.235" endtime="20201110 08:32:19.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.169" endtime="20201110 08:32:19.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.167" endtime="20201110 08:32:19.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.245" endtime="20201110 08:32:19.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.163" endtime="20201110 08:32:19.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.252" endtime="20201110 08:32:19.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.159" endtime="20201110 08:32:19.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:14.939" endtime="20201110 08:32:19.259"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:19.275" endtime="20201110 08:32:19.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.271" endtime="20201110 08:32:19.299"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.406" endtime="20201110 08:32:19.427"></status>
</kw>
<msg timestamp="20201110 08:32:19.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:19.402" endtime="20201110 08:32:19.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:19.430" endtime="20201110 08:32:19.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.443" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:19.438" endtime="20201110 08:32:19.443"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:19.393" endtime="20201110 08:32:19.446"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:19.316" endtime="20201110 08:32:19.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.314" endtime="20201110 08:32:19.448"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:19.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:19.455" endtime="20201110 08:32:19.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.450" endtime="20201110 08:32:19.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.312" endtime="20201110 08:32:19.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.310" endtime="20201110 08:32:19.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.461" endtime="20201110 08:32:19.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.306" endtime="20201110 08:32:19.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.301" endtime="20201110 08:32:19.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.267" endtime="20201110 08:32:19.469"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:19.473" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.503" endtime="20201110 08:32:19.523"></status>
</kw>
<msg timestamp="20201110 08:32:19.525" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:19.498" endtime="20201110 08:32:19.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.535" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:19.529" endtime="20201110 08:32:19.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.538" endtime="20201110 08:32:19.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.486" endtime="20201110 08:32:19.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.479" endtime="20201110 08:32:19.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.568" endtime="20201110 08:32:19.927"></status>
</kw>
<msg timestamp="20201110 08:32:19.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.221864306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221872736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:19.564" endtime="20201110 08:32:19.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.221864306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221872736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:19.934" endtime="20201110 08:32:19.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:19.948" endtime="20201110 08:32:19.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.554" endtime="20201110 08:32:19.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.549" endtime="20201110 08:32:19.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.967" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:19.965" endtime="20201110 08:32:19.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:19.977" level="INFO">VALUE: [{'time': 0.221864306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.221872736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.429999999975957e-06, 'source_diff': 8.429999999975957e-06}, {'time': 0.221878236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.500000000019378e-06, 'source_diff': 5.500000000019378e-06}, {'time': 0.221883889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.652999999994357e-06, 'source_diff': 5.652999999994357e-06}, {'time': 0.221888542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999993357e-06, 'source_diff': 4.652999999993357e-06}, {'time': 0.221892444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.221901972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.52800000000864e-06, 'source_diff': 9.52800000000864e-06}, {'time': 0.22191, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.027999999993263e-06, 'source_diff': 8.027999999993263e-06}, {'time': 0.221912403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4030000000119234e-06, 'source_diff': 2.4030000000119234e-06}, {'time': 0.221922444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.004099999998842e-05, 'source_diff': 1.004099999998842e-05}, {'time': 0.221929528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.083999999990542e-06, 'source_diff': 7.083999999990542e-06}, {'time': 0.221937125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.597000000025833e-06, 'source_diff': 7.597000000025833e-06}, {'time': 0.221946556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.43099999997643e-06, 'source_diff': 9.43099999997643e-06}, {'time': 0.221950431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.875000000014284e-06, 'source_diff': 3.875000000014284e-06}, {'time': 0.221955722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.290999999990609e-06, 'source_diff': 5.290999999990609e-06}, {'time': 0.221965361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.639000000005726e-06, 'source_diff': 9.639000000005726e-06}, {'time': 0.221974264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.221977056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.79200000000146e-06, 'source_diff': 2.79200000000146e-06}, {'time': 0.221981194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.137999999986874e-06, 'source_diff': 4.137999999986874e-06}, {'time': 0.221990722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.52800000000864e-06, 'source_diff': 9.52800000000864e-06}, {'time': 0.221996625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.222003778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.153000000009735e-06, 'source_diff': 7.153000000009735e-06}, {'time': 0.222006181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.402999999984168e-06, 'source_diff': 2.402999999984168e-06}, {'time': 0.222013833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.651999999996884e-06, 'source_diff': 7.651999999996884e-06}, {'time': 0.222020861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.028000000020018e-06, 'source_diff': 7.028000000020018e-06}, {'time': 0.222024014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.152999999977979e-06, 'source_diff': 3.152999999977979e-06}, {'time': 0.222026431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4170000000045544e-06, 'source_diff': 2.4170000000045544e-06}, {'time': 0.222032069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}, {'time': 0.222038111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.042000000011649e-06, 'source_diff': 6.042000000011649e-06}, {'time': 0.22204825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0138999999992349e-05, 'source_diff': 1.0138999999992349e-05}, {'time': 0.222056278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.027999999993263e-06, 'source_diff': 8.027999999993263e-06}, {'time': 0.222059569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.291000000016364e-06, 'source_diff': 3.291000000016364e-06}, {'time': 0.222068861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.291999999994083e-06, 'source_diff': 9.291999999994083e-06}, {'time': 0.222071375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999812535e-06, 'source_diff': 2.5139999999812535e-06}, {'time': 0.222080653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.222088931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.222098583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.222103236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6530000000211125e-06, 'source_diff': 4.6530000000211125e-06}, {'time': 0.222112389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.15299999998398e-06, 'source_diff': 9.15299999998398e-06}, {'time': 0.222116042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6530000000201124e-06, 'source_diff': 3.6530000000201124e-06}, {'time': 0.222124319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.276999999973222e-06, 'source_diff': 8.276999999973222e-06}, {'time': 0.222129722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000014924e-06, 'source_diff': 5.403000000014924e-06}, {'time': 0.22213425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.222141653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999989168e-06, 'source_diff': 7.402999999989168e-06}, {'time': 0.222151431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.77800000001583e-06, 'source_diff': 9.77800000001583e-06}, {'time': 0.222160458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.02699999999479e-06, 'source_diff': 9.02699999999479e-06}, {'time': 0.2221675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.041999999984894e-06, 'source_diff': 7.041999999984894e-06}, {'time': 0.222172764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.222178417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652999999994357e-06, 'source_diff': 5.652999999994357e-06}, {'time': 0.222184583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:19.970" endtime="20201110 08:32:19.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.958" endtime="20201110 08:32:19.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:20.014" level="INFO">${debug-compressed} = {'time': [0.221864306, 0.221872736, 0.221878236, 0.221883889, 0.221888542, 0.221892444, 0.221901972, 0.22191, 0.221912403, 0.221922444, 0.221929528, 0.221937125, 0.221946556, 0.221950431, 0.221955722,...</msg>
<status status="PASS" starttime="20201110 08:32:19.982" endtime="20201110 08:32:20.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.025" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:20.022" endtime="20201110 08:32:20.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.034" level="INFO">VALUE: {'time': [0.221864306, 0.221872736, 0.221878236, 0.221883889, 0.221888542, 0.221892444, 0.221901972, 0.22191, 0.221912403, 0.221922444, 0.221929528, 0.221937125, 0.221946556, 0.221950431, 0.221955722, 0.221965361, 0.221974264, 0.221977056, 0.221981194, 0.221990722, 0.221996625, 0.222003778, 0.222006181, 0.222013833, 0.222020861, 0.222024014, 0.222026431, 0.222032069, 0.222038111, 0.22204825, 0.222056278, 0.222059569, 0.222068861, 0.222071375, 0.222080653, 0.222088931, 0.222098583, 0.222103236, 0.222112389, 0.222116042, 0.222124319, 0.222129722, 0.22213425, 0.222141653, 0.222151431, 0.222160458, 0.2221675, 0.222172764, 0.222178417, 0.222184583], 'diff': [0, 8.429999999975957e-06, 5.500000000019378e-06, 5.652999999994357e-06, 4.652999999993357e-06, 3.902000000000072e-06, 9.52800000000864e-06, 8.027999999993263e-06, 2.4030000000119234e-06, 1.004099999998842e-05, 7.083999999990542e-06, 7.597000000025833e-06, 9.43099999997643e-06, 3.875000000014284e-06, 5.290999999990609e-06, 9.639000000005726e-06, 8.903000000004546e-06, 2.79200000000146e-06, 4.137999999986874e-06, 9.52800000000864e-06, 5.903000000001546e-06, 7.153000000009735e-06, 2.402999999984168e-06, 7.651999999996884e-06, 7.028000000020018e-06, 3.152999999977979e-06, 2.4170000000045544e-06, 5.638000000002252e-06, 6.042000000011649e-06, 1.0138999999992349e-05, 8.027999999993263e-06, 3.291000000016364e-06, 9.291999999994083e-06, 2.5139999999812535e-06, 9.278000000001452e-06, 8.278000000000452e-06, 9.651999999998884e-06, 4.6530000000211125e-06, 9.15299999998398e-06, 3.6530000000201124e-06, 8.276999999973222e-06, 5.403000000014924e-06, 4.52800000000364e-06, 7.402999999989168e-06, 9.77800000001583e-06, 9.02699999999479e-06, 7.041999999984894e-06, 5.26400000000482e-06, 5.652999999994357e-06, 6.166000000001892e-06], 'source_diff': [0, 8.429999999975957e-06, 5.500000000019378e-06, 5.652999999994357e-06, 4.652999999993357e-06, 3.902000000000072e-06, 9.52800000000864e-06, 8.027999999993263e-06, 2.4030000000119234e-06, 1.004099999998842e-05, 7.083999999990542e-06, 7.597000000025833e-06, 9.43099999997643e-06, 3.875000000014284e-06, 5.290999999990609e-06, 9.639000000005726e-06, 8.903000000004546e-06, 2.79200000000146e-06, 4.137999999986874e-06, 9.52800000000864e-06, 5.903000000001546e-06, 7.153000000009735e-06, 2.402999999984168e-06, 7.651999999996884e-06, 7.028000000020018e-06, 3.152999999977979e-06, 2.4170000000045544e-06, 5.638000000002252e-06, 6.042000000011649e-06, 1.0138999999992349e-05, 8.027999999993263e-06, 3.291000000016364e-06, 9.291999999994083e-06, 2.5139999999812535e-06, 9.278000000001452e-06, 8.278000000000452e-06, 9.651999999998884e-06, 4.6530000000211125e-06, 9.15299999998398e-06, 3.6530000000201124e-06, 8.276999999973222e-06, 5.403000000014924e-06, 4.52800000000364e-06, 7.402999999989168e-06, 9.77800000001583e-06, 9.02699999999479e-06, 7.041999999984894e-06, 5.26400000000482e-06, 5.652999999994357e-06, 6.166000000001892e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:20.028" endtime="20201110 08:32:20.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.016" endtime="20201110 08:32:20.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:20.047" level="INFO">${RESULT} = [{'time': 0.221872736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.429999999975957e-06, 'source_diff': 8.429999999975957e-06}, {'time': 0.221883889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:20.039" endtime="20201110 08:32:20.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:20.067" level="INFO">${GPIO_OVERHEAD} = {'time': [0.221872736, 0.221883889, 0.221892444, 0.22191, 0.221922444, 0.221937125, 0.221950431, 0.221965361, 0.221977056, 0.221990722, 0.222003778, 0.222013833, 0.222024014, 0.222032069, 0.22204825, ...</msg>
<status status="PASS" starttime="20201110 08:32:20.050" endtime="20201110 08:32:20.068"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.079" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:20.076" endtime="20201110 08:32:20.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.085" level="INFO">VALUE: [8.429999999975957e-06, 5.652999999994357e-06, 3.902000000000072e-06, 8.027999999993263e-06, 1.004099999998842e-05, 7.597000000025833e-06, 3.875000000014284e-06, 9.639000000005726e-06, 2.79200000000146e-06, 9.52800000000864e-06, 7.153000000009735e-06, 7.651999999996884e-06, 3.152999999977979e-06, 5.638000000002252e-06, 1.0138999999992349e-05, 3.291000000016364e-06, 2.5139999999812535e-06, 8.278000000000452e-06, 4.6530000000211125e-06, 3.6530000000201124e-06, 5.403000000014924e-06, 7.402999999989168e-06, 9.02699999999479e-06, 5.26400000000482e-06, 6.166000000001892e-06]</msg>
<status status="PASS" starttime="20201110 08:32:20.081" endtime="20201110 08:32:20.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.069" endtime="20201110 08:32:20.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.095" endtime="20201110 08:32:20.098"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:20.105" endtime="20201110 08:32:20.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.099" endtime="20201110 08:32:20.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.090" endtime="20201110 08:32:20.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.474" endtime="20201110 08:32:20.132"></status>
</kw>
<msg timestamp="20201110 08:32:20.133" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.158" endtime="20201110 08:32:20.174"></status>
</kw>
<msg timestamp="20201110 08:32:20.175" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:20.152" endtime="20201110 08:32:20.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.185" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:20.179" endtime="20201110 08:32:20.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.188" endtime="20201110 08:32:20.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.144" endtime="20201110 08:32:20.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.138" endtime="20201110 08:32:20.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.219" endtime="20201110 08:32:20.561"></status>
</kw>
<msg timestamp="20201110 08:32:20.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044146944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044155028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:20.215" endtime="20201110 08:32:20.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044146944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044155028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:20.568" endtime="20201110 08:32:20.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.586" endtime="20201110 08:32:20.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.207" endtime="20201110 08:32:20.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.200" endtime="20201110 08:32:20.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.610" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:20.607" endtime="20201110 08:32:20.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.622" level="INFO">VALUE: [{'time': 0.044146944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044155028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.044164125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.044166667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.044175181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.044179083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902000000000072e-06, 'source_diff': 3.902000000000072e-06}, {'time': 0.044181486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.044187139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.044190042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.044194944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.044204847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.0442085, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.044215333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8330000000046964e-06, 'source_diff': 6.8330000000046964e-06}, {'time': 0.044223514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.044232736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.222000000003172e-06, 'source_diff': 9.222000000003172e-06}, {'time': 0.044241264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.044245042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7779999999959513e-06, 'source_diff': 3.7779999999959513e-06}, {'time': 0.044253056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.044258083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.026999999997728e-06, 'source_diff': 5.026999999997728e-06}, {'time': 0.044262125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.044268889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.044277306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.044280208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.901999999999072e-06, 'source_diff': 2.901999999999072e-06}, {'time': 0.044289236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.04429175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.044301944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0194000000005032e-05, 'source_diff': 1.0194000000005032e-05}, {'time': 0.044310056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.111999999997621e-06, 'source_diff': 8.111999999997621e-06}, {'time': 0.044312597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5410000000017363e-06, 'source_diff': 2.5410000000017363e-06}, {'time': 0.044315611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0139999999956313e-06, 'source_diff': 3.0139999999956313e-06}, {'time': 0.044325653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.044328417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.044333125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.707999999999102e-06, 'source_diff': 4.707999999999102e-06}, {'time': 0.044341986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.860999999998898e-06, 'source_diff': 8.860999999998898e-06}, {'time': 0.044348639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.044350931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.044359444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.51299999999472e-06, 'source_diff': 8.51299999999472e-06}, {'time': 0.044362722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.044370514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.791999999999522e-06, 'source_diff': 7.791999999999522e-06}, {'time': 0.044380542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.044390181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.044397597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.415999999996203e-06, 'source_diff': 7.415999999996203e-06}, {'time': 0.044402986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.044405889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.044413542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.044420819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.044429014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.044432, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9859999999964915e-06, 'source_diff': 2.9859999999964915e-06}, {'time': 0.044441667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.044444806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1390000000061646e-06, 'source_diff': 3.1390000000061646e-06}, {'time': 0.044454333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:20.613" endtime="20201110 08:32:20.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.596" endtime="20201110 08:32:20.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:20.663" level="INFO">${debug-compressed} = {'time': [0.044146944, 0.044155028, 0.044164125, 0.044166667, 0.044175181, 0.044179083, 0.044181486, 0.044187139, 0.044190042, 0.044194944, 0.044204847, 0.0442085, 0.044215333, 0.044223514, 0.04423273...</msg>
<status status="PASS" starttime="20201110 08:32:20.630" endtime="20201110 08:32:20.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.673" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:20.671" endtime="20201110 08:32:20.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.681" level="INFO">VALUE: {'time': [0.044146944, 0.044155028, 0.044164125, 0.044166667, 0.044175181, 0.044179083, 0.044181486, 0.044187139, 0.044190042, 0.044194944, 0.044204847, 0.0442085, 0.044215333, 0.044223514, 0.044232736, 0.044241264, 0.044245042, 0.044253056, 0.044258083, 0.044262125, 0.044268889, 0.044277306, 0.044280208, 0.044289236, 0.04429175, 0.044301944, 0.044310056, 0.044312597, 0.044315611, 0.044325653, 0.044328417, 0.044333125, 0.044341986, 0.044348639, 0.044350931, 0.044359444, 0.044362722, 0.044370514, 0.044380542, 0.044390181, 0.044397597, 0.044402986, 0.044405889, 0.044413542, 0.044420819, 0.044429014, 0.044432, 0.044441667, 0.044444806, 0.044454333], 'diff': [0, 8.083999999998481e-06, 9.096999999999578e-06, 2.54200000000121e-06, 8.514000000001132e-06, 3.902000000000072e-06, 2.4029999999980456e-06, 5.653000000001296e-06, 2.9029999999985456e-06, 4.902000000001072e-06, 9.902999999998607e-06, 3.6529999999992957e-06, 6.8330000000046964e-06, 8.180999999995997e-06, 9.222000000003172e-06, 8.528000000000702e-06, 3.7779999999959513e-06, 8.014000000000632e-06, 5.026999999997728e-06, 4.04200000000271e-06, 6.763999999999382e-06, 8.417000000003616e-06, 2.901999999999072e-06, 9.028000000001202e-06, 2.5139999999951312e-06, 1.0194000000005032e-05, 8.111999999997621e-06, 2.5410000000017363e-06, 3.0139999999956313e-06, 1.0042000000001772e-05, 2.76400000000232e-06, 4.707999999999102e-06, 8.860999999998898e-06, 6.653000000002296e-06, 2.29200000000096e-06, 8.51299999999472e-06, 3.27800000000239e-06, 7.791999999999522e-06, 1.0028000000002202e-05, 9.638999999998787e-06, 7.415999999996203e-06, 5.389000000001476e-06, 2.9029999999985456e-06, 7.653000000003296e-06, 7.276999999999978e-06, 8.195000000002506e-06, 2.9859999999964915e-06, 9.666999999997927e-06, 3.1390000000061646e-06, 9.52699999999529e-06], 'source_diff': [0, 8.083999999998481e-06, 9.096999999999578e-06, 2.54200000000121e-06, 8.514000000001132e-06, 3.902000000000072e-06, 2.4029999999980456e-06, 5.653000000001296e-06, 2.9029999999985456e-06, 4.902000000001072e-06, 9.902999999998607e-06, 3.6529999999992957e-06, 6.8330000000046964e-06, 8.180999999995997e-06, 9.222000000003172e-06, 8.528000000000702e-06, 3.7779999999959513e-06, 8.014000000000632e-06, 5.026999999997728e-06, 4.04200000000271e-06, 6.763999999999382e-06, 8.417000000003616e-06, 2.901999999999072e-06, 9.028000000001202e-06, 2.5139999999951312e-06, 1.0194000000005032e-05, 8.111999999997621e-06, 2.5410000000017363e-06, 3.0139999999956313e-06, 1.0042000000001772e-05, 2.76400000000232e-06, 4.707999999999102e-06, 8.860999999998898e-06, 6.653000000002296e-06, 2.29200000000096e-06, 8.51299999999472e-06, 3.27800000000239e-06, 7.791999999999522e-06, 1.0028000000002202e-05, 9.638999999998787e-06, 7.415999999996203e-06, 5.389000000001476e-06, 2.9029999999985456e-06, 7.653000000003296e-06, 7.276999999999978e-06, 8.195000000002506e-06, 2.9859999999964915e-06, 9.666999999997927e-06, 3.1390000000061646e-06, 9.52699999999529e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:20.677" endtime="20201110 08:32:20.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.666" endtime="20201110 08:32:20.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:20.694" level="INFO">${RESULT} = [{'time': 0.044155028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.044166667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:20.686" endtime="20201110 08:32:20.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:20.715" level="INFO">${GPIO_OVERHEAD} = {'time': [0.044155028, 0.044166667, 0.044179083, 0.044187139, 0.044194944, 0.0442085, 0.044223514, 0.044241264, 0.044253056, 0.044262125, 0.044277306, 0.044289236, 0.044301944, 0.044312597, 0.04432565...</msg>
<status status="PASS" starttime="20201110 08:32:20.696" endtime="20201110 08:32:20.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.725" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:20.723" endtime="20201110 08:32:20.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.730" level="INFO">VALUE: [8.083999999998481e-06, 2.54200000000121e-06, 3.902000000000072e-06, 5.653000000001296e-06, 4.902000000001072e-06, 3.6529999999992957e-06, 8.180999999995997e-06, 8.528000000000702e-06, 8.014000000000632e-06, 4.04200000000271e-06, 8.417000000003616e-06, 9.028000000001202e-06, 1.0194000000005032e-05, 2.5410000000017363e-06, 1.0042000000001772e-05, 4.707999999999102e-06, 6.653000000002296e-06, 8.51299999999472e-06, 7.791999999999522e-06, 9.638999999998787e-06, 5.389000000001476e-06, 7.653000000003296e-06, 8.195000000002506e-06, 9.666999999997927e-06, 9.52699999999529e-06]</msg>
<status status="PASS" starttime="20201110 08:32:20.728" endtime="20201110 08:32:20.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.717" endtime="20201110 08:32:20.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.739" endtime="20201110 08:32:20.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:20.749" endtime="20201110 08:32:20.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.745" endtime="20201110 08:32:20.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.735" endtime="20201110 08:32:20.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.134" endtime="20201110 08:32:20.775"></status>
</kw>
<msg timestamp="20201110 08:32:20.775" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.795" endtime="20201110 08:32:20.808"></status>
</kw>
<msg timestamp="20201110 08:32:20.810" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:20.792" endtime="20201110 08:32:20.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:20.816" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:20.812" endtime="20201110 08:32:20.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.818" endtime="20201110 08:32:20.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.785" endtime="20201110 08:32:20.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.780" endtime="20201110 08:32:20.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:20.842" endtime="20201110 08:32:21.188"></status>
</kw>
<msg timestamp="20201110 08:32:21.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036981042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036988694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:20.839" endtime="20201110 08:32:21.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036981042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036988694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:21.200" endtime="20201110 08:32:21.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.225" endtime="20201110 08:32:21.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.831" endtime="20201110 08:32:21.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.827" endtime="20201110 08:32:21.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.263" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:21.258" endtime="20201110 08:32:21.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.280" level="INFO">VALUE: [{'time': 0.036981042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036988694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652000000003822e-06, 'source_diff': 7.652000000003822e-06}, {'time': 0.036994361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.0370005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.138999999995287e-06, 'source_diff': 6.138999999995287e-06}, {'time': 0.037007556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.037016069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513000000001658e-06, 'source_diff': 8.513000000001658e-06}, {'time': 0.037020611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.54200000000321e-06, 'source_diff': 4.54200000000321e-06}, {'time': 0.037029014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037031278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.037041306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.037045083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7769999999964776e-06, 'source_diff': 3.7769999999964776e-06}, {'time': 0.037050736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.037059889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037065819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.930000000001212e-06, 'source_diff': 5.930000000001212e-06}, {'time': 0.037069819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.9999999999970615e-06, 'source_diff': 3.9999999999970615e-06}, {'time': 0.037078222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.037082125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.037089778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.037092931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1530000000057345e-06, 'source_diff': 3.1530000000057345e-06}, {'time': 0.037100708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.037108736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.037116139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.037122417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.037130444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.037139361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.917000000004116e-06, 'source_diff': 8.917000000004116e-06}, {'time': 0.037149014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.037155556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.037165069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.513000000002658e-06, 'source_diff': 9.513000000002658e-06}, {'time': 0.037170222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.03717725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.037182278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.037191681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.037198458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.776999999999478e-06, 'source_diff': 6.776999999999478e-06}, {'time': 0.037201125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6670000000048044e-06, 'source_diff': 2.6670000000048044e-06}, {'time': 0.037203542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.037208111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.037214944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037224972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.03723325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.037239042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.037245944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.902000000003072e-06, 'source_diff': 6.902000000003072e-06}, {'time': 0.037253083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.037258986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.037268278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.037274431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.152999999994857e-06, 'source_diff': 6.152999999994857e-06}, {'time': 0.037278347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.916000000006581e-06, 'source_diff': 3.916000000006581e-06}, {'time': 0.037282861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.037285778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.037295681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.037301319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:21.269" endtime="20201110 08:32:21.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.245" endtime="20201110 08:32:21.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:21.323" level="INFO">${debug-compressed} = {'time': [0.036981042, 0.036988694, 0.036994361, 0.0370005, 0.037007556, 0.037016069, 0.037020611, 0.037029014, 0.037031278, 0.037041306, 0.037045083, 0.037050736, 0.037059889, 0.037065819, 0.03706981...</msg>
<status status="PASS" starttime="20201110 08:32:21.290" endtime="20201110 08:32:21.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.335" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:21.332" endtime="20201110 08:32:21.336"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.342" level="INFO">VALUE: {'time': [0.036981042, 0.036988694, 0.036994361, 0.0370005, 0.037007556, 0.037016069, 0.037020611, 0.037029014, 0.037031278, 0.037041306, 0.037045083, 0.037050736, 0.037059889, 0.037065819, 0.037069819, 0.037078222, 0.037082125, 0.037089778, 0.037092931, 0.037100708, 0.037108736, 0.037116139, 0.037122417, 0.037130444, 0.037139361, 0.037149014, 0.037155556, 0.037165069, 0.037170222, 0.03717725, 0.037182278, 0.037191681, 0.037198458, 0.037201125, 0.037203542, 0.037208111, 0.037214944, 0.037224972, 0.03723325, 0.037239042, 0.037245944, 0.037253083, 0.037258986, 0.037268278, 0.037274431, 0.037278347, 0.037282861, 0.037285778, 0.037295681, 0.037301319], 'diff': [0, 7.652000000003822e-06, 5.667000000000866e-06, 6.138999999995287e-06, 7.055999999998341e-06, 8.513000000001658e-06, 4.54200000000321e-06, 8.402999999997107e-06, 2.26400000000182e-06, 1.0028000000002202e-05, 3.7769999999964776e-06, 5.653000000001296e-06, 9.152999999997857e-06, 5.930000000001212e-06, 3.9999999999970615e-06, 8.403000000004046e-06, 3.902999999999546e-06, 7.652999999996357e-06, 3.1530000000057345e-06, 7.777000000000478e-06, 8.028000000000202e-06, 7.402999999996107e-06, 6.2779999999984515e-06, 8.027000000000728e-06, 8.917000000004116e-06, 9.652999999998357e-06, 6.541999999998271e-06, 9.513000000002658e-06, 5.153000000000796e-06, 7.0279999999992016e-06, 5.027999999997201e-06, 9.402999999998107e-06, 6.776999999999478e-06, 2.6670000000048044e-06, 2.4169999999976155e-06, 4.569000000002876e-06, 6.8329999999977575e-06, 1.0028000000002202e-05, 8.278000000000452e-06, 5.791999999997521e-06, 6.902000000003072e-06, 7.138999999996287e-06, 5.903000000001546e-06, 9.292000000001022e-06, 6.152999999994857e-06, 3.916000000006581e-06, 4.513999999997131e-06, 2.9169999999981155e-06, 9.902999999998607e-06, 5.638000000002252e-06], 'source_diff': [0, 7.652000000003822e-06, 5.667000000000866e-06, 6.138999999995287e-06, 7.055999999998341e-06, 8.513000000001658e-06, 4.54200000000321e-06, 8.402999999997107e-06, 2.26400000000182e-06, 1.0028000000002202e-05, 3.7769999999964776e-06, 5.653000000001296e-06, 9.152999999997857e-06, 5.930000000001212e-06, 3.9999999999970615e-06, 8.403000000004046e-06, 3.902999999999546e-06, 7.652999999996357e-06, 3.1530000000057345e-06, 7.777000000000478e-06, 8.028000000000202e-06, 7.402999999996107e-06, 6.2779999999984515e-06, 8.027000000000728e-06, 8.917000000004116e-06, 9.652999999998357e-06, 6.541999999998271e-06, 9.513000000002658e-06, 5.153000000000796e-06, 7.0279999999992016e-06, 5.027999999997201e-06, 9.402999999998107e-06, 6.776999999999478e-06, 2.6670000000048044e-06, 2.4169999999976155e-06, 4.569000000002876e-06, 6.8329999999977575e-06, 1.0028000000002202e-05, 8.278000000000452e-06, 5.791999999997521e-06, 6.902000000003072e-06, 7.138999999996287e-06, 5.903000000001546e-06, 9.292000000001022e-06, 6.152999999994857e-06, 3.916000000006581e-06, 4.513999999997131e-06, 2.9169999999981155e-06, 9.902999999998607e-06, 5.638000000002252e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:21.337" endtime="20201110 08:32:21.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.325" endtime="20201110 08:32:21.348"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:21.357" level="INFO">${RESULT} = [{'time': 0.036988694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652000000003822e-06, 'source_diff': 7.652000000003822e-06}, {'time': 0.0370005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:21.350" endtime="20201110 08:32:21.357"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:21.375" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036988694, 0.0370005, 0.037016069, 0.037029014, 0.037041306, 0.037050736, 0.037065819, 0.037078222, 0.037089778, 0.037100708, 0.037116139, 0.037130444, 0.037149014, 0.037165069, 0.03717725...</msg>
<status status="PASS" starttime="20201110 08:32:21.359" endtime="20201110 08:32:21.376"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.385" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:21.383" endtime="20201110 08:32:21.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.390" level="INFO">VALUE: [7.652000000003822e-06, 6.138999999995287e-06, 8.513000000001658e-06, 8.402999999997107e-06, 1.0028000000002202e-05, 5.653000000001296e-06, 5.930000000001212e-06, 8.403000000004046e-06, 7.652999999996357e-06, 7.777000000000478e-06, 7.402999999996107e-06, 8.027000000000728e-06, 9.652999999998357e-06, 9.513000000002658e-06, 7.0279999999992016e-06, 9.402999999998107e-06, 2.6670000000048044e-06, 4.569000000002876e-06, 1.0028000000002202e-05, 5.791999999997521e-06, 7.138999999996287e-06, 9.292000000001022e-06, 3.916000000006581e-06, 2.9169999999981155e-06, 5.638000000002252e-06]</msg>
<status status="PASS" starttime="20201110 08:32:21.388" endtime="20201110 08:32:21.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.377" endtime="20201110 08:32:21.393"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.400" endtime="20201110 08:32:21.402"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:21.408" endtime="20201110 08:32:21.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.404" endtime="20201110 08:32:21.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.395" endtime="20201110 08:32:21.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:20.777" endtime="20201110 08:32:21.433"></status>
</kw>
<msg timestamp="20201110 08:32:21.434" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.454" endtime="20201110 08:32:21.467"></status>
</kw>
<msg timestamp="20201110 08:32:21.468" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:21.451" endtime="20201110 08:32:21.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.474" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:21.470" endtime="20201110 08:32:21.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.477" endtime="20201110 08:32:21.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.443" endtime="20201110 08:32:21.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.439" endtime="20201110 08:32:21.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.500" endtime="20201110 08:32:21.834"></status>
</kw>
<msg timestamp="20201110 08:32:21.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036656736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036663028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:21.497" endtime="20201110 08:32:21.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036656736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036663028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:21.841" endtime="20201110 08:32:21.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.854" endtime="20201110 08:32:21.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.489" endtime="20201110 08:32:21.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.485" endtime="20201110 08:32:21.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.872" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:21.870" endtime="20201110 08:32:21.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.880" level="INFO">VALUE: [{'time': 0.036656736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036663028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.036667056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.036676944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.887999999999564e-06, 'source_diff': 9.887999999999564e-06}, {'time': 0.036681472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.036690125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.652999999997357e-06, 'source_diff': 8.652999999997357e-06}, {'time': 0.036699667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.036705819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.036715833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.036719861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999996201e-06, 'source_diff': 4.027999999996201e-06}, {'time': 0.036726278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.036729472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.036739583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0111000000000148e-05, 'source_diff': 1.0111000000000148e-05}, {'time': 0.036746625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.036749889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.26400000000282e-06, 'source_diff': 3.26400000000282e-06}, {'time': 0.036757542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.036760944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.036769222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.03677925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.036786528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036790181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.036799708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.03680725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5419999999992715e-06, 'source_diff': 7.5419999999992715e-06}, {'time': 0.036816694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.443999999997343e-06, 'source_diff': 9.443999999997343e-06}, {'time': 0.036824917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.223000000001646e-06, 'source_diff': 8.223000000001646e-06}, {'time': 0.036830833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.036833847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.036836375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.527999999994701e-06, 'source_diff': 2.527999999994701e-06}, {'time': 0.036841917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.54200000000421e-06, 'source_diff': 5.54200000000421e-06}, {'time': 0.036846819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.036851458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.638999999993787e-06, 'source_diff': 4.638999999993787e-06}, {'time': 0.036861264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.806000000001092e-06, 'source_diff': 9.806000000001092e-06}, {'time': 0.036868653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.389000000003476e-06, 'source_diff': 7.389000000003476e-06}, {'time': 0.036871056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.036874736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.036878514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.036887403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.036896792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.036902944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.036906222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.036914, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036920903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.902999999995607e-06, 'source_diff': 6.902999999995607e-06}, {'time': 0.036929556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000004296e-06, 'source_diff': 8.653000000004296e-06}, {'time': 0.036933083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5269999999962276e-06, 'source_diff': 3.5269999999962276e-06}, {'time': 0.036938861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.036947653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.791999999993583e-06, 'source_diff': 8.791999999993583e-06}, {'time': 0.036951056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4030000000059846e-06, 'source_diff': 3.4030000000059846e-06}, {'time': 0.036959583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.526999999994289e-06, 'source_diff': 8.526999999994289e-06}, {'time': 0.036966375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.79200000000546e-06, 'source_diff': 6.79200000000546e-06}, {'time': 0.036969, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:21.875" endtime="20201110 08:32:21.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.863" endtime="20201110 08:32:21.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:21.920" level="INFO">${debug-compressed} = {'time': [0.036656736, 0.036663028, 0.036667056, 0.036676944, 0.036681472, 0.036690125, 0.036699667, 0.036705819, 0.036715833, 0.036719861, 0.036726278, 0.036729472, 0.036739583, 0.036746625, 0.036749...</msg>
<status status="PASS" starttime="20201110 08:32:21.886" endtime="20201110 08:32:21.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.930" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:21.928" endtime="20201110 08:32:21.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.937" level="INFO">VALUE: {'time': [0.036656736, 0.036663028, 0.036667056, 0.036676944, 0.036681472, 0.036690125, 0.036699667, 0.036705819, 0.036715833, 0.036719861, 0.036726278, 0.036729472, 0.036739583, 0.036746625, 0.036749889, 0.036757542, 0.036760944, 0.036769222, 0.03677925, 0.036786528, 0.036790181, 0.036799708, 0.03680725, 0.036816694, 0.036824917, 0.036830833, 0.036833847, 0.036836375, 0.036841917, 0.036846819, 0.036851458, 0.036861264, 0.036868653, 0.036871056, 0.036874736, 0.036878514, 0.036887403, 0.036896792, 0.036902944, 0.036906222, 0.036914, 0.036920903, 0.036929556, 0.036933083, 0.036938861, 0.036947653, 0.036951056, 0.036959583, 0.036966375, 0.036969], 'diff': [0, 6.291999999998021e-06, 4.02800000000314e-06, 9.887999999999564e-06, 4.527999999996701e-06, 8.652999999997357e-06, 9.542000000001272e-06, 6.152000000002322e-06, 1.0014000000002632e-05, 4.027999999996201e-06, 6.417000000001616e-06, 3.1939999999980317e-06, 1.0111000000000148e-05, 7.0419999999987715e-06, 3.26400000000282e-06, 7.652999999996357e-06, 3.401999999999572e-06, 8.278000000000452e-06, 1.0028000000002202e-05, 7.2779999999994516e-06, 3.6529999999992957e-06, 9.527000000002228e-06, 7.5419999999992715e-06, 9.443999999997343e-06, 8.223000000001646e-06, 5.916000000001642e-06, 3.01400000000257e-06, 2.527999999994701e-06, 5.54200000000421e-06, 4.902000000001072e-06, 4.638999999993787e-06, 9.806000000001092e-06, 7.389000000003476e-06, 2.4029999999980456e-06, 3.679999999998962e-06, 3.77800000000289e-06, 8.888999999998037e-06, 9.388999999998537e-06, 6.152000000002322e-06, 3.27800000000239e-06, 7.777999999999952e-06, 6.902999999995607e-06, 8.653000000004296e-06, 3.5269999999962276e-06, 5.77800000000489e-06, 8.791999999993583e-06, 3.4030000000059846e-06, 8.526999999994289e-06, 6.79200000000546e-06, 2.6249999999991558e-06], 'source_diff': [0, 6.291999999998021e-06, 4.02800000000314e-06, 9.887999999999564e-06, 4.527999999996701e-06, 8.652999999997357e-06, 9.542000000001272e-06, 6.152000000002322e-06, 1.0014000000002632e-05, 4.027999999996201e-06, 6.417000000001616e-06, 3.1939999999980317e-06, 1.0111000000000148e-05, 7.0419999999987715e-06, 3.26400000000282e-06, 7.652999999996357e-06, 3.401999999999572e-06, 8.278000000000452e-06, 1.0028000000002202e-05, 7.2779999999994516e-06, 3.6529999999992957e-06, 9.527000000002228e-06, 7.5419999999992715e-06, 9.443999999997343e-06, 8.223000000001646e-06, 5.916000000001642e-06, 3.01400000000257e-06, 2.527999999994701e-06, 5.54200000000421e-06, 4.902000000001072e-06, 4.638999999993787e-06, 9.806000000001092e-06, 7.389000000003476e-06, 2.4029999999980456e-06, 3.679999999998962e-06, 3.77800000000289e-06, 8.888999999998037e-06, 9.388999999998537e-06, 6.152000000002322e-06, 3.27800000000239e-06, 7.777999999999952e-06, 6.902999999995607e-06, 8.653000000004296e-06, 3.5269999999962276e-06, 5.77800000000489e-06, 8.791999999993583e-06, 3.4030000000059846e-06, 8.526999999994289e-06, 6.79200000000546e-06, 2.6249999999991558e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:21.932" endtime="20201110 08:32:21.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.922" endtime="20201110 08:32:21.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:21.950" level="INFO">${RESULT} = [{'time': 0.036663028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.036676944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:21.942" endtime="20201110 08:32:21.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:21.969" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036663028, 0.036676944, 0.036690125, 0.036705819, 0.036719861, 0.036729472, 0.036746625, 0.036757542, 0.036769222, 0.036786528, 0.036799708, 0.036816694, 0.036830833, 0.036836375, 0.036846...</msg>
<status status="PASS" starttime="20201110 08:32:21.952" endtime="20201110 08:32:21.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:21.978" endtime="20201110 08:32:21.981"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:21.986" level="INFO">VALUE: [6.291999999998021e-06, 9.887999999999564e-06, 8.652999999997357e-06, 6.152000000002322e-06, 4.027999999996201e-06, 3.1939999999980317e-06, 7.0419999999987715e-06, 7.652999999996357e-06, 8.278000000000452e-06, 7.2779999999994516e-06, 9.527000000002228e-06, 9.443999999997343e-06, 5.916000000001642e-06, 2.527999999994701e-06, 4.902000000001072e-06, 9.806000000001092e-06, 2.4029999999980456e-06, 3.77800000000289e-06, 9.388999999998537e-06, 3.27800000000239e-06, 6.902999999995607e-06, 3.5269999999962276e-06, 8.791999999993583e-06, 8.526999999994289e-06, 2.6249999999991558e-06]</msg>
<status status="PASS" starttime="20201110 08:32:21.983" endtime="20201110 08:32:21.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.971" endtime="20201110 08:32:21.989"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:21.996" endtime="20201110 08:32:21.999"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:22.005" endtime="20201110 08:32:22.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.000" endtime="20201110 08:32:22.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.991" endtime="20201110 08:32:22.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:21.435" endtime="20201110 08:32:22.031"></status>
</kw>
<msg timestamp="20201110 08:32:22.032" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.053" endtime="20201110 08:32:22.067"></status>
</kw>
<msg timestamp="20201110 08:32:22.068" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:22.049" endtime="20201110 08:32:22.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.075" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:22.071" endtime="20201110 08:32:22.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.078" endtime="20201110 08:32:22.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.042" endtime="20201110 08:32:22.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.036" endtime="20201110 08:32:22.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.106" endtime="20201110 08:32:22.445"></status>
</kw>
<msg timestamp="20201110 08:32:22.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039207653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039211931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:22.102" endtime="20201110 08:32:22.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039207653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039211931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:22.452" endtime="20201110 08:32:22.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.465" endtime="20201110 08:32:22.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.093" endtime="20201110 08:32:22.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.087" endtime="20201110 08:32:22.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.484" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:22.482" endtime="20201110 08:32:22.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.493" level="INFO">VALUE: [{'time': 0.039207653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039211931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999996451e-06, 'source_diff': 4.277999999996451e-06}, {'time': 0.039217597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.666000000001392e-06, 'source_diff': 5.666000000001392e-06}, {'time': 0.039225111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.039230917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.805999999997091e-06, 'source_diff': 5.805999999997091e-06}, {'time': 0.039240444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.039247708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.039251375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.039253778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4030000000049845e-06, 'source_diff': 2.4030000000049845e-06}, {'time': 0.039262292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513999999994193e-06, 'source_diff': 8.513999999994193e-06}, {'time': 0.039265319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0270000000026664e-06, 'source_diff': 3.0270000000026664e-06}, {'time': 0.039273722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.039281375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.039289653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.039294861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.039299833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.039304486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.039311542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.039318042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.039326944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902000000005073e-06, 'source_diff': 8.902000000005073e-06}, {'time': 0.039330597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.039338375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.039342403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999996201e-06, 'source_diff': 4.027999999996201e-06}, {'time': 0.039347431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.039351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.039354792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9589999999968253e-06, 'source_diff': 2.9589999999968253e-06}, {'time': 0.039363278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.039369431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.039375333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.901999999995133e-06, 'source_diff': 5.901999999995133e-06}, {'time': 0.039383861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.039387889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.039396917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.027999999994263e-06, 'source_diff': 9.027999999994263e-06}, {'time': 0.039403319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.039407625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.03941475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.039423778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.039433847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0069000000001438e-05, 'source_diff': 1.0069000000001438e-05}, {'time': 0.039438458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.039445611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.039448514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.039452042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.039455819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7770000000034165e-06, 'source_diff': 3.7770000000034165e-06}, {'time': 0.039461472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652999999994357e-06, 'source_diff': 5.652999999994357e-06}, {'time': 0.039470514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.042000000000772e-06, 'source_diff': 9.042000000000772e-06}, {'time': 0.039475417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.039484569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.039491972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.403000000003046e-06, 'source_diff': 7.403000000003046e-06}, {'time': 0.039494931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9589999999968253e-06, 'source_diff': 2.9589999999968253e-06}, {'time': 0.039501292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361000000003336e-06, 'source_diff': 6.361000000003336e-06}, {'time': 0.039508181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:22.487" endtime="20201110 08:32:22.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.475" endtime="20201110 08:32:22.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:22.531" level="INFO">${debug-compressed} = {'time': [0.039207653, 0.039211931, 0.039217597, 0.039225111, 0.039230917, 0.039240444, 0.039247708, 0.039251375, 0.039253778, 0.039262292, 0.039265319, 0.039273722, 0.039281375, 0.039289653, 0.039294...</msg>
<status status="PASS" starttime="20201110 08:32:22.499" endtime="20201110 08:32:22.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.541" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:22.539" endtime="20201110 08:32:22.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.549" level="INFO">VALUE: {'time': [0.039207653, 0.039211931, 0.039217597, 0.039225111, 0.039230917, 0.039240444, 0.039247708, 0.039251375, 0.039253778, 0.039262292, 0.039265319, 0.039273722, 0.039281375, 0.039289653, 0.039294861, 0.039299833, 0.039304486, 0.039311542, 0.039318042, 0.039326944, 0.039330597, 0.039338375, 0.039342403, 0.039347431, 0.039351833, 0.039354792, 0.039363278, 0.039369431, 0.039375333, 0.039383861, 0.039387889, 0.039396917, 0.039403319, 0.039407625, 0.03941475, 0.039423778, 0.039433847, 0.039438458, 0.039445611, 0.039448514, 0.039452042, 0.039455819, 0.039461472, 0.039470514, 0.039475417, 0.039484569, 0.039491972, 0.039494931, 0.039501292, 0.039508181], 'diff': [0, 4.277999999996451e-06, 5.666000000001392e-06, 7.514000000000132e-06, 5.805999999997091e-06, 9.527000000002228e-06, 7.263999999999882e-06, 3.6669999999988656e-06, 2.4030000000049845e-06, 8.513999999994193e-06, 3.0270000000026664e-06, 8.402999999997107e-06, 7.653000000003296e-06, 8.278000000000452e-06, 5.207999999999602e-06, 4.971999999998922e-06, 4.653000000000296e-06, 7.055999999998341e-06, 6.499999999999562e-06, 8.902000000005073e-06, 3.6529999999992957e-06, 7.777999999999952e-06, 4.027999999996201e-06, 5.02800000000414e-06, 4.402000000000572e-06, 2.9589999999968253e-06, 8.486000000001992e-06, 6.153000000001796e-06, 5.901999999995133e-06, 8.528000000000702e-06, 4.02800000000314e-06, 9.027999999994263e-06, 6.402000000002572e-06, 4.30600000000253e-06, 7.124999999996717e-06, 9.028000000001202e-06, 1.0069000000001438e-05, 4.611000000001586e-06, 7.152999999995857e-06, 2.9029999999985456e-06, 3.52800000000264e-06, 3.7770000000034165e-06, 5.652999999994357e-06, 9.042000000000772e-06, 4.903000000000546e-06, 9.151999999998384e-06, 7.403000000003046e-06, 2.9589999999968253e-06, 6.361000000003336e-06, 6.889000000002976e-06], 'source_diff': [0, 4.277999999996451e-06, 5.666000000001392e-06, 7.514000000000132e-06, 5.805999999997091e-06, 9.527000000002228e-06, 7.263999999999882e-06, 3.6669999999988656e-06, 2.4030000000049845e-06, 8.513999999994193e-06, 3.0270000000026664e-06, 8.402999999997107e-06, 7.653000000003296e-06, 8.278000000000452e-06, 5.207999999999602e-06, 4.971999999998922e-06, 4.653000000000296e-06, 7.055999999998341e-06, 6.499999999999562e-06, 8.902000000005073e-06, 3.6529999999992957e-06, 7.777999999999952e-06, 4.027999999996201e-06, 5.02800000000414e-06, 4.402000000000572e-06, 2.9589999999968253e-06, 8.486000000001992e-06, 6.153000000001796e-06, 5.901999999995133e-06, 8.528000000000702e-06, 4.02800000000314e-06, 9.027999999994263e-06, 6.402000000002572e-06, 4.30600000000253e-06, 7.124999999996717e-06, 9.028000000001202e-06, 1.0069000000001438e-05, 4.611000000001586e-06, 7.152999999995857e-06, 2.9029999999985456e-06, 3.52800000000264e-06, 3.7770000000034165e-06, 5.652999999994357e-06, 9.042000000000772e-06, 4.903000000000546e-06, 9.151999999998384e-06, 7.403000000003046e-06, 2.9589999999968253e-06, 6.361000000003336e-06, 6.889000000002976e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:22.544" endtime="20201110 08:32:22.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.533" endtime="20201110 08:32:22.552"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:22.561" level="INFO">${RESULT} = [{'time': 0.039211931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999996451e-06, 'source_diff': 4.277999999996451e-06}, {'time': 0.039225111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:22.554" endtime="20201110 08:32:22.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:22.581" level="INFO">${GPIO_OVERHEAD} = {'time': [0.039211931, 0.039225111, 0.039240444, 0.039251375, 0.039262292, 0.039273722, 0.039289653, 0.039299833, 0.039311542, 0.039326944, 0.039338375, 0.039347431, 0.039354792, 0.039369431, 0.039383...</msg>
<status status="PASS" starttime="20201110 08:32:22.563" endtime="20201110 08:32:22.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:22.589" endtime="20201110 08:32:22.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.597" level="INFO">VALUE: [4.277999999996451e-06, 7.514000000000132e-06, 9.527000000002228e-06, 3.6669999999988656e-06, 8.513999999994193e-06, 8.402999999997107e-06, 8.278000000000452e-06, 4.971999999998922e-06, 7.055999999998341e-06, 8.902000000005073e-06, 7.777999999999952e-06, 5.02800000000414e-06, 2.9589999999968253e-06, 6.153000000001796e-06, 8.528000000000702e-06, 9.027999999994263e-06, 4.30600000000253e-06, 9.028000000001202e-06, 4.611000000001586e-06, 2.9029999999985456e-06, 3.7770000000034165e-06, 9.042000000000772e-06, 9.151999999998384e-06, 2.9589999999968253e-06, 6.889000000002976e-06]</msg>
<status status="PASS" starttime="20201110 08:32:22.595" endtime="20201110 08:32:22.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.583" endtime="20201110 08:32:22.601"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.607" endtime="20201110 08:32:22.610"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:22.616" endtime="20201110 08:32:22.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.611" endtime="20201110 08:32:22.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.602" endtime="20201110 08:32:22.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.033" endtime="20201110 08:32:22.643"></status>
</kw>
<msg timestamp="20201110 08:32:22.643" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.664" endtime="20201110 08:32:22.678"></status>
</kw>
<msg timestamp="20201110 08:32:22.679" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:22.661" endtime="20201110 08:32:22.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:22.686" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:22.682" endtime="20201110 08:32:22.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.688" endtime="20201110 08:32:22.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.653" endtime="20201110 08:32:22.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.648" endtime="20201110 08:32:22.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:22.717" endtime="20201110 08:32:23.046"></status>
</kw>
<msg timestamp="20201110 08:32:23.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03894625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038949556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:22.711" endtime="20201110 08:32:23.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03894625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038949556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:23.052" endtime="20201110 08:32:23.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.065" endtime="20201110 08:32:23.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.704" endtime="20201110 08:32:23.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.698" endtime="20201110 08:32:23.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.081" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:23.079" endtime="20201110 08:32:23.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.089" level="INFO">VALUE: [{'time': 0.03894625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038949556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}, {'time': 0.038954042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.485999999997992e-06, 'source_diff': 4.485999999997992e-06}, {'time': 0.038960931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.038964097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.166000000005831e-06, 'source_diff': 3.166000000005831e-06}, {'time': 0.038971236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.138999999996287e-06, 'source_diff': 7.138999999996287e-06}, {'time': 0.038974764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.038977417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.038980819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.038986986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.038994375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388999999996537e-06, 'source_diff': 7.388999999996537e-06}, {'time': 0.038997153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.039003069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.916000000001642e-06, 'source_diff': 5.916000000001642e-06}, {'time': 0.039010847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.039018611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.039025514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.902999999995607e-06, 'source_diff': 6.902999999995607e-06}, {'time': 0.039031056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.54200000000421e-06, 'source_diff': 5.54200000000421e-06}, {'time': 0.039039458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.039048722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.264000000001882e-06, 'source_diff': 9.264000000001882e-06}, {'time': 0.03905325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.039057806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.55600000000278e-06, 'source_diff': 4.55600000000278e-06}, {'time': 0.039066806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.000000000002062e-06, 'source_diff': 9.000000000002062e-06}, {'time': 0.039076361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.554999999994429e-06, 'source_diff': 9.554999999994429e-06}, {'time': 0.039085917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.556000000000842e-06, 'source_diff': 9.556000000000842e-06}, {'time': 0.039095903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.039101556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.039104833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2769999999959776e-06, 'source_diff': 3.2769999999959776e-06}, {'time': 0.039110861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.039119139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.039121694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5550000000013062e-06, 'source_diff': 2.5550000000013062e-06}, {'time': 0.039129819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.039135611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.791999999997521e-06, 'source_diff': 5.791999999997521e-06}, {'time': 0.03914375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.039153528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.039157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.039161889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069999999994911e-06, 'source_diff': 4.069999999994911e-06}, {'time': 0.039167236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.347000000002766e-06, 'source_diff': 5.347000000002766e-06}, {'time': 0.039176764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.039183417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.039187958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5410000000037365e-06, 'source_diff': 4.5410000000037365e-06}, {'time': 0.03919725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.03919975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.039204542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.039210694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.151999999995383e-06, 'source_diff': 6.151999999995383e-06}, {'time': 0.039213347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6530000000052345e-06, 'source_diff': 2.6530000000052345e-06}, {'time': 0.039216528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.039223111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.039230056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.039233083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0270000000026664e-06, 'source_diff': 3.0270000000026664e-06}, {'time': 0.039237236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:23.083" endtime="20201110 08:32:23.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.073" endtime="20201110 08:32:23.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:23.132" level="INFO">${debug-compressed} = {'time': [0.03894625, 0.038949556, 0.038954042, 0.038960931, 0.038964097, 0.038971236, 0.038974764, 0.038977417, 0.038980819, 0.038986986, 0.038994375, 0.038997153, 0.039003069, 0.039010847, 0.0390186...</msg>
<status status="PASS" starttime="20201110 08:32:23.095" endtime="20201110 08:32:23.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.142" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:23.140" endtime="20201110 08:32:23.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.151" level="INFO">VALUE: {'time': [0.03894625, 0.038949556, 0.038954042, 0.038960931, 0.038964097, 0.038971236, 0.038974764, 0.038977417, 0.038980819, 0.038986986, 0.038994375, 0.038997153, 0.039003069, 0.039010847, 0.039018611, 0.039025514, 0.039031056, 0.039039458, 0.039048722, 0.03905325, 0.039057806, 0.039066806, 0.039076361, 0.039085917, 0.039095903, 0.039101556, 0.039104833, 0.039110861, 0.039119139, 0.039121694, 0.039129819, 0.039135611, 0.03914375, 0.039153528, 0.039157819, 0.039161889, 0.039167236, 0.039176764, 0.039183417, 0.039187958, 0.03919725, 0.03919975, 0.039204542, 0.039210694, 0.039213347, 0.039216528, 0.039223111, 0.039230056, 0.039233083, 0.039237236], 'diff': [0, 3.30600000000153e-06, 4.485999999997992e-06, 6.888999999996037e-06, 3.166000000005831e-06, 7.138999999996287e-06, 3.52800000000264e-06, 2.6529999999982956e-06, 3.401999999999572e-06, 6.167000000001366e-06, 7.388999999996537e-06, 2.77800000000189e-06, 5.916000000001642e-06, 7.777999999999952e-06, 7.764000000000382e-06, 6.902999999995607e-06, 5.54200000000421e-06, 8.401999999997634e-06, 9.264000000001882e-06, 4.527999999996701e-06, 4.55600000000278e-06, 9.000000000002062e-06, 9.554999999994429e-06, 9.556000000000842e-06, 9.986000000003492e-06, 5.653000000001296e-06, 3.2769999999959776e-06, 6.0279999999982015e-06, 8.278000000000452e-06, 2.5550000000013062e-06, 8.125000000004656e-06, 5.791999999997521e-06, 8.138999999997287e-06, 9.778000000001952e-06, 4.2910000000034865e-06, 4.069999999994911e-06, 5.347000000002766e-06, 9.528000000001702e-06, 6.652999999995357e-06, 4.5410000000037365e-06, 9.292000000001022e-06, 2.4999999999955613e-06, 4.79200000000346e-06, 6.151999999995383e-06, 2.6530000000052345e-06, 3.1809999999979355e-06, 6.5829999999975075e-06, 6.945000000001256e-06, 3.0270000000026664e-06, 4.152999999999796e-06], 'source_diff': [0, 3.30600000000153e-06, 4.485999999997992e-06, 6.888999999996037e-06, 3.166000000005831e-06, 7.138999999996287e-06, 3.52800000000264e-06, 2.6529999999982956e-06, 3.401999999999572e-06, 6.167000000001366e-06, 7.388999999996537e-06, 2.77800000000189e-06, 5.916000000001642e-06, 7.777999999999952e-06, 7.764000000000382e-06, 6.902999999995607e-06, 5.54200000000421e-06, 8.401999999997634e-06, 9.264000000001882e-06, 4.527999999996701e-06, 4.55600000000278e-06, 9.000000000002062e-06, 9.554999999994429e-06, 9.556000000000842e-06, 9.986000000003492e-06, 5.653000000001296e-06, 3.2769999999959776e-06, 6.0279999999982015e-06, 8.278000000000452e-06, 2.5550000000013062e-06, 8.125000000004656e-06, 5.791999999997521e-06, 8.138999999997287e-06, 9.778000000001952e-06, 4.2910000000034865e-06, 4.069999999994911e-06, 5.347000000002766e-06, 9.528000000001702e-06, 6.652999999995357e-06, 4.5410000000037365e-06, 9.292000000001022e-06, 2.4999999999955613e-06, 4.79200000000346e-06, 6.151999999995383e-06, 2.6530000000052345e-06, 3.1809999999979355e-06, 6.5829999999975075e-06, 6.945000000001256e-06, 3.0270000000026664e-06, 4.152999999999796e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:23.145" endtime="20201110 08:32:23.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.134" endtime="20201110 08:32:23.155"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:23.166" level="INFO">${RESULT} = [{'time': 0.038949556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}, {'time': 0.038960931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:23.157" endtime="20201110 08:32:23.167"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:23.190" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038949556, 0.038960931, 0.038971236, 0.038977417, 0.038986986, 0.038997153, 0.039010847, 0.039025514, 0.039039458, 0.03905325, 0.039066806, 0.039085917, 0.039101556, 0.039110861, 0.0391216...</msg>
<status status="PASS" starttime="20201110 08:32:23.169" endtime="20201110 08:32:23.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.204" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:23.200" endtime="20201110 08:32:23.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.210" level="INFO">VALUE: [3.30600000000153e-06, 6.888999999996037e-06, 7.138999999996287e-06, 2.6529999999982956e-06, 6.167000000001366e-06, 2.77800000000189e-06, 7.777999999999952e-06, 6.902999999995607e-06, 8.401999999997634e-06, 4.527999999996701e-06, 9.000000000002062e-06, 9.556000000000842e-06, 5.653000000001296e-06, 6.0279999999982015e-06, 2.5550000000013062e-06, 5.791999999997521e-06, 9.778000000001952e-06, 4.069999999994911e-06, 9.528000000001702e-06, 4.5410000000037365e-06, 2.4999999999955613e-06, 6.151999999995383e-06, 3.1809999999979355e-06, 6.945000000001256e-06, 4.152999999999796e-06]</msg>
<status status="PASS" starttime="20201110 08:32:23.207" endtime="20201110 08:32:23.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.192" endtime="20201110 08:32:23.213"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.219" endtime="20201110 08:32:23.222"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:23.228" endtime="20201110 08:32:23.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.223" endtime="20201110 08:32:23.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.214" endtime="20201110 08:32:23.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:22.644" endtime="20201110 08:32:23.253"></status>
</kw>
<msg timestamp="20201110 08:32:23.254" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.273" endtime="20201110 08:32:23.287"></status>
</kw>
<msg timestamp="20201110 08:32:23.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:23.270" endtime="20201110 08:32:23.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.294" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:23.290" endtime="20201110 08:32:23.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.297" endtime="20201110 08:32:23.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.263" endtime="20201110 08:32:23.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.258" endtime="20201110 08:32:23.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.322" endtime="20201110 08:32:23.639"></status>
</kw>
<msg timestamp="20201110 08:32:23.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036845736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036855917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:23.317" endtime="20201110 08:32:23.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036845736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036855917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:23.646" endtime="20201110 08:32:23.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.659" endtime="20201110 08:32:23.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.310" endtime="20201110 08:32:23.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.305" endtime="20201110 08:32:23.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.675" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:23.673" endtime="20201110 08:32:23.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.683" level="INFO">VALUE: [{'time': 0.036845736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036855917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036861542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.036866194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.036874097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.903000000003546e-06, 'source_diff': 7.903000000003546e-06}, {'time': 0.036876625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.036884653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.036891319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.665999999995453e-06, 'source_diff': 6.665999999995453e-06}, {'time': 0.036899083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.036905861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.036910528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.666999999999866e-06, 'source_diff': 4.666999999999866e-06}, {'time': 0.036913056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.036916972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.915999999999642e-06, 'source_diff': 3.915999999999642e-06}, {'time': 0.036922111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.036928278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.036935056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.036938083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0269999999957276e-06, 'source_diff': 3.0269999999957276e-06}, {'time': 0.036946222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.0369545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.036958667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.166999999999366e-06, 'source_diff': 4.166999999999366e-06}, {'time': 0.036968681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0014000000002632e-05, 'source_diff': 1.0014000000002632e-05}, {'time': 0.036978083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.036985111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.036994014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.037000792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.037008194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402000000003572e-06, 'source_diff': 7.402000000003572e-06}, {'time': 0.037017736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.03702375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.037030403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.037033806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.037039889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0829999999970075e-06, 'source_diff': 6.0829999999970075e-06}, {'time': 0.037046264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.037054542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.037057125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.037059333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2079999999966016e-06, 'source_diff': 2.2079999999966016e-06}, {'time': 0.037065986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.037071139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.153000000000796e-06, 'source_diff': 5.153000000000796e-06}, {'time': 0.037076542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999994107e-06, 'source_diff': 5.402999999994107e-06}, {'time': 0.037082069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527000000005167e-06, 'source_diff': 5.527000000005167e-06}, {'time': 0.037089972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.037096125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.037103903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.037110069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.037116375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.305999999997591e-06, 'source_diff': 6.305999999997591e-06}, {'time': 0.037123125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.749999999999812e-06, 'source_diff': 6.749999999999812e-06}, {'time': 0.037125653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.037131917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037141694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.777000000002478e-06, 'source_diff': 9.777000000002478e-06}, {'time': 0.037148222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.037156639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:23.678" endtime="20201110 08:32:23.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.667" endtime="20201110 08:32:23.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:23.719" level="INFO">${debug-compressed} = {'time': [0.036845736, 0.036855917, 0.036861542, 0.036866194, 0.036874097, 0.036876625, 0.036884653, 0.036891319, 0.036899083, 0.036905861, 0.036910528, 0.036913056, 0.036916972, 0.036922111, 0.036928...</msg>
<status status="PASS" starttime="20201110 08:32:23.689" endtime="20201110 08:32:23.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.728" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:23.726" endtime="20201110 08:32:23.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.735" level="INFO">VALUE: {'time': [0.036845736, 0.036855917, 0.036861542, 0.036866194, 0.036874097, 0.036876625, 0.036884653, 0.036891319, 0.036899083, 0.036905861, 0.036910528, 0.036913056, 0.036916972, 0.036922111, 0.036928278, 0.036935056, 0.036938083, 0.036946222, 0.0369545, 0.036958667, 0.036968681, 0.036978083, 0.036985111, 0.036994014, 0.037000792, 0.037008194, 0.037017736, 0.03702375, 0.037030403, 0.037033806, 0.037039889, 0.037046264, 0.037054542, 0.037057125, 0.037059333, 0.037065986, 0.037071139, 0.037076542, 0.037082069, 0.037089972, 0.037096125, 0.037103903, 0.037110069, 0.037116375, 0.037123125, 0.037125653, 0.037131917, 0.037141694, 0.037148222, 0.037156639], 'diff': [0, 1.0181000000004936e-05, 5.624999999995217e-06, 4.652000000000822e-06, 7.903000000003546e-06, 2.52800000000164e-06, 8.028000000000202e-06, 6.665999999995453e-06, 7.764000000000382e-06, 6.7779999999989515e-06, 4.666999999999866e-06, 2.52800000000164e-06, 3.915999999999642e-06, 5.139000000001226e-06, 6.167000000001366e-06, 6.7779999999989515e-06, 3.0269999999957276e-06, 8.139000000004226e-06, 8.278000000000452e-06, 4.166999999999366e-06, 1.0014000000002632e-05, 9.401999999998634e-06, 7.0279999999992016e-06, 8.902999999997607e-06, 6.7779999999989515e-06, 7.402000000003572e-06, 9.542000000001272e-06, 6.0139999999986316e-06, 6.653000000002296e-06, 3.4029999999990457e-06, 6.0829999999970075e-06, 6.375000000002906e-06, 8.278000000000452e-06, 2.583000000000446e-06, 2.2079999999966016e-06, 6.653000000002296e-06, 5.153000000000796e-06, 5.402999999994107e-06, 5.527000000005167e-06, 7.902999999996607e-06, 6.153000000001796e-06, 7.777999999999952e-06, 6.166000000001892e-06, 6.305999999997591e-06, 6.749999999999812e-06, 2.52800000000164e-06, 6.2639999999988816e-06, 9.777000000002478e-06, 6.5279999999987015e-06, 8.416999999996677e-06], 'source_diff': [0, 1.0181000000004936e-05, 5.624999999995217e-06, 4.652000000000822e-06, 7.903000000003546e-06, 2.52800000000164e-06, 8.028000000000202e-06, 6.665999999995453e-06, 7.764000000000382e-06, 6.7779999999989515e-06, 4.666999999999866e-06, 2.52800000000164e-06, 3.915999999999642e-06, 5.139000000001226e-06, 6.167000000001366e-06, 6.7779999999989515e-06, 3.0269999999957276e-06, 8.139000000004226e-06, 8.278000000000452e-06, 4.166999999999366e-06, 1.0014000000002632e-05, 9.401999999998634e-06, 7.0279999999992016e-06, 8.902999999997607e-06, 6.7779999999989515e-06, 7.402000000003572e-06, 9.542000000001272e-06, 6.0139999999986316e-06, 6.653000000002296e-06, 3.4029999999990457e-06, 6.0829999999970075e-06, 6.375000000002906e-06, 8.278000000000452e-06, 2.583000000000446e-06, 2.2079999999966016e-06, 6.653000000002296e-06, 5.153000000000796e-06, 5.402999999994107e-06, 5.527000000005167e-06, 7.902999999996607e-06, 6.153000000001796e-06, 7.777999999999952e-06, 6.166000000001892e-06, 6.305999999997591e-06, 6.749999999999812e-06, 2.52800000000164e-06, 6.2639999999988816e-06, 9.777000000002478e-06, 6.5279999999987015e-06, 8.416999999996677e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:23.730" endtime="20201110 08:32:23.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.721" endtime="20201110 08:32:23.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:23.747" level="INFO">${RESULT} = [{'time': 0.036855917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0181000000004936e-05, 'source_diff': 1.0181000000004936e-05}, {'time': 0.036866194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:23.740" endtime="20201110 08:32:23.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:23.765" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036855917, 0.036866194, 0.036876625, 0.036891319, 0.036905861, 0.036913056, 0.036922111, 0.036935056, 0.036946222, 0.036958667, 0.036978083, 0.036994014, 0.037008194, 0.03702375, 0.0370338...</msg>
<status status="PASS" starttime="20201110 08:32:23.749" endtime="20201110 08:32:23.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.776" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:23.773" endtime="20201110 08:32:23.776"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.781" level="INFO">VALUE: [1.0181000000004936e-05, 4.652000000000822e-06, 2.52800000000164e-06, 6.665999999995453e-06, 6.7779999999989515e-06, 2.52800000000164e-06, 5.139000000001226e-06, 6.7779999999989515e-06, 8.139000000004226e-06, 4.166999999999366e-06, 9.401999999998634e-06, 8.902999999997607e-06, 7.402000000003572e-06, 6.0139999999986316e-06, 3.4029999999990457e-06, 6.375000000002906e-06, 2.583000000000446e-06, 6.653000000002296e-06, 5.402999999994107e-06, 7.902999999996607e-06, 7.777999999999952e-06, 6.305999999997591e-06, 2.52800000000164e-06, 9.777000000002478e-06, 8.416999999996677e-06]</msg>
<status status="PASS" starttime="20201110 08:32:23.778" endtime="20201110 08:32:23.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.767" endtime="20201110 08:32:23.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.794" endtime="20201110 08:32:23.797"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:23.803" endtime="20201110 08:32:23.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.799" endtime="20201110 08:32:23.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.790" endtime="20201110 08:32:23.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.255" endtime="20201110 08:32:23.829"></status>
</kw>
<msg timestamp="20201110 08:32:23.829" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.850" endtime="20201110 08:32:23.863"></status>
</kw>
<msg timestamp="20201110 08:32:23.865" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:23.846" endtime="20201110 08:32:23.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:23.871" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:23.867" endtime="20201110 08:32:23.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.873" endtime="20201110 08:32:23.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.839" endtime="20201110 08:32:23.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.834" endtime="20201110 08:32:23.880"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:23.898" endtime="20201110 08:32:24.224"></status>
</kw>
<msg timestamp="20201110 08:32:24.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037630333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037635597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:23.895" endtime="20201110 08:32:24.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037630333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037635597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:24.230" endtime="20201110 08:32:24.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.243" endtime="20201110 08:32:24.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.886" endtime="20201110 08:32:24.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.881" endtime="20201110 08:32:24.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.259" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:24.257" endtime="20201110 08:32:24.260"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.267" level="INFO">VALUE: [{'time': 0.037630333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037635597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037641639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.041999999997771e-06, 'source_diff': 6.041999999997771e-06}, {'time': 0.037651792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0153000000005796e-05, 'source_diff': 1.0153000000005796e-05}, {'time': 0.037656931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138999999994287e-06, 'source_diff': 5.138999999994287e-06}, {'time': 0.037662222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2910000000044866e-06, 'source_diff': 5.2910000000044866e-06}, {'time': 0.037664861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.037672014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.037681917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.903000000005546e-06, 'source_diff': 9.903000000005546e-06}, {'time': 0.037689694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777000000000478e-06, 'source_diff': 7.777000000000478e-06}, {'time': 0.037695722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.037703764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041999999999772e-06, 'source_diff': 8.041999999999772e-06}, {'time': 0.037708528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7639999999973814e-06, 'source_diff': 4.7639999999973814e-06}, {'time': 0.037718556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.037722347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7910000000029864e-06, 'source_diff': 3.7910000000029864e-06}, {'time': 0.037725375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.027999999995201e-06, 'source_diff': 3.027999999995201e-06}, {'time': 0.037728653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.037732333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679999999998962e-06, 'source_diff': 3.679999999998962e-06}, {'time': 0.037736514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.037741111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.597000000002016e-06, 'source_diff': 4.597000000002016e-06}, {'time': 0.037746764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.037756292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.527999999994763e-06, 'source_diff': 9.527999999994763e-06}, {'time': 0.037758972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6800000000049007e-06, 'source_diff': 2.6800000000049007e-06}, {'time': 0.037764472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.03777375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.037781528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.037789847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.318999999999688e-06, 'source_diff': 8.318999999999688e-06}, {'time': 0.037794583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.037797236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.037807014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.778000000001952e-06, 'source_diff': 9.778000000001952e-06}, {'time': 0.037816569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.555000000001368e-06, 'source_diff': 9.555000000001368e-06}, {'time': 0.037823472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.902999999995607e-06, 'source_diff': 6.902999999995607e-06}, {'time': 0.037827847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.375000000000906e-06, 'source_diff': 4.375000000000906e-06}, {'time': 0.037831375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.037834806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4309999999981855e-06, 'source_diff': 3.4309999999981855e-06}, {'time': 0.037841694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8880000000035024e-06, 'source_diff': 6.8880000000035024e-06}, {'time': 0.037850986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.037854264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999954512e-06, 'source_diff': 3.2779999999954512e-06}, {'time': 0.037862653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000004476e-06, 'source_diff': 8.389000000004476e-06}, {'time': 0.03787225, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597000000000078e-06, 'source_diff': 9.597000000000078e-06}, {'time': 0.037880958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.707999999996163e-06, 'source_diff': 8.707999999996163e-06}, {'time': 0.037887861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.903000000002546e-06, 'source_diff': 6.903000000002546e-06}, {'time': 0.037895764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.037899806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.037906069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.262999999999408e-06, 'source_diff': 6.262999999999408e-06}, {'time': 0.037915861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.792000000001522e-06, 'source_diff': 9.792000000001522e-06}, {'time': 0.037921292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.037928653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.360999999997397e-06, 'source_diff': 7.360999999997397e-06}, {'time': 0.037931431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.037941097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.665999999998454e-06, 'source_diff': 9.665999999998454e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:24.261" endtime="20201110 08:32:24.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.251" endtime="20201110 08:32:24.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:24.302" level="INFO">${debug-compressed} = {'time': [0.037630333, 0.037635597, 0.037641639, 0.037651792, 0.037656931, 0.037662222, 0.037664861, 0.037672014, 0.037681917, 0.037689694, 0.037695722, 0.037703764, 0.037708528, 0.037718556, 0.037722...</msg>
<status status="PASS" starttime="20201110 08:32:24.273" endtime="20201110 08:32:24.303"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.311" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:24.309" endtime="20201110 08:32:24.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.318" level="INFO">VALUE: {'time': [0.037630333, 0.037635597, 0.037641639, 0.037651792, 0.037656931, 0.037662222, 0.037664861, 0.037672014, 0.037681917, 0.037689694, 0.037695722, 0.037703764, 0.037708528, 0.037718556, 0.037722347, 0.037725375, 0.037728653, 0.037732333, 0.037736514, 0.037741111, 0.037746764, 0.037756292, 0.037758972, 0.037764472, 0.03777375, 0.037781528, 0.037789847, 0.037794583, 0.037797236, 0.037807014, 0.037816569, 0.037823472, 0.037827847, 0.037831375, 0.037834806, 0.037841694, 0.037850986, 0.037854264, 0.037862653, 0.03787225, 0.037880958, 0.037887861, 0.037895764, 0.037899806, 0.037906069, 0.037915861, 0.037921292, 0.037928653, 0.037931431, 0.037941097], 'diff': [0, 5.2639999999978815e-06, 6.041999999997771e-06, 1.0153000000005796e-05, 5.138999999994287e-06, 5.2910000000044866e-06, 2.6389999999987257e-06, 7.152999999995857e-06, 9.903000000005546e-06, 7.777000000000478e-06, 6.0279999999982015e-06, 8.041999999999772e-06, 4.7639999999973814e-06, 1.0028000000002202e-05, 3.7910000000029864e-06, 3.027999999995201e-06, 3.27800000000239e-06, 3.679999999998962e-06, 4.1809999999989356e-06, 4.597000000002016e-06, 5.653000000001296e-06, 9.527999999994763e-06, 2.6800000000049007e-06, 5.499999999998562e-06, 9.278000000001452e-06, 7.777999999999952e-06, 8.318999999999688e-06, 4.735999999998242e-06, 2.6529999999982956e-06, 9.778000000001952e-06, 9.555000000001368e-06, 6.902999999995607e-06, 4.375000000000906e-06, 3.52800000000264e-06, 3.4309999999981855e-06, 6.8880000000035024e-06, 9.292000000001022e-06, 3.2779999999954512e-06, 8.389000000004476e-06, 9.597000000000078e-06, 8.707999999996163e-06, 6.903000000002546e-06, 7.902999999996607e-06, 4.04200000000271e-06, 6.262999999999408e-06, 9.792000000001522e-06, 5.431000000000186e-06, 7.360999999997397e-06, 2.77800000000189e-06, 9.665999999998454e-06], 'source_diff': [0, 5.2639999999978815e-06, 6.041999999997771e-06, 1.0153000000005796e-05, 5.138999999994287e-06, 5.2910000000044866e-06, 2.6389999999987257e-06, 7.152999999995857e-06, 9.903000000005546e-06, 7.777000000000478e-06, 6.0279999999982015e-06, 8.041999999999772e-06, 4.7639999999973814e-06, 1.0028000000002202e-05, 3.7910000000029864e-06, 3.027999999995201e-06, 3.27800000000239e-06, 3.679999999998962e-06, 4.1809999999989356e-06, 4.597000000002016e-06, 5.653000000001296e-06, 9.527999999994763e-06, 2.6800000000049007e-06, 5.499999999998562e-06, 9.278000000001452e-06, 7.777999999999952e-06, 8.318999999999688e-06, 4.735999999998242e-06, 2.6529999999982956e-06, 9.778000000001952e-06, 9.555000000001368e-06, 6.902999999995607e-06, 4.375000000000906e-06, 3.52800000000264e-06, 3.4309999999981855e-06, 6.8880000000035024e-06, 9.292000000001022e-06, 3.2779999999954512e-06, 8.389000000004476e-06, 9.597000000000078e-06, 8.707999999996163e-06, 6.903000000002546e-06, 7.902999999996607e-06, 4.04200000000271e-06, 6.262999999999408e-06, 9.792000000001522e-06, 5.431000000000186e-06, 7.360999999997397e-06, 2.77800000000189e-06, 9.665999999998454e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:24.314" endtime="20201110 08:32:24.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.304" endtime="20201110 08:32:24.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:24.330" level="INFO">${RESULT} = [{'time': 0.037635597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2639999999978815e-06, 'source_diff': 5.2639999999978815e-06}, {'time': 0.037651792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:24.323" endtime="20201110 08:32:24.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:24.349" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037635597, 0.037651792, 0.037662222, 0.037672014, 0.037689694, 0.037703764, 0.037718556, 0.037725375, 0.037732333, 0.037741111, 0.037756292, 0.037764472, 0.037781528, 0.037794583, 0.037807...</msg>
<status status="PASS" starttime="20201110 08:32:24.332" endtime="20201110 08:32:24.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.359" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:24.357" endtime="20201110 08:32:24.360"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.364" level="INFO">VALUE: [5.2639999999978815e-06, 1.0153000000005796e-05, 5.2910000000044866e-06, 7.152999999995857e-06, 7.777000000000478e-06, 8.041999999999772e-06, 1.0028000000002202e-05, 3.027999999995201e-06, 3.679999999998962e-06, 4.597000000002016e-06, 9.527999999994763e-06, 5.499999999998562e-06, 7.777999999999952e-06, 4.735999999998242e-06, 9.778000000001952e-06, 6.902999999995607e-06, 3.52800000000264e-06, 6.8880000000035024e-06, 3.2779999999954512e-06, 9.597000000000078e-06, 6.903000000002546e-06, 4.04200000000271e-06, 9.792000000001522e-06, 7.360999999997397e-06, 9.665999999998454e-06]</msg>
<status status="PASS" starttime="20201110 08:32:24.361" endtime="20201110 08:32:24.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.351" endtime="20201110 08:32:24.367"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.373" endtime="20201110 08:32:24.376"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:24.382" endtime="20201110 08:32:24.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.377" endtime="20201110 08:32:24.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.369" endtime="20201110 08:32:24.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:23.830" endtime="20201110 08:32:24.408"></status>
</kw>
<msg timestamp="20201110 08:32:24.409" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.429" endtime="20201110 08:32:24.441"></status>
</kw>
<msg timestamp="20201110 08:32:24.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:24.425" endtime="20201110 08:32:24.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:24.445" endtime="20201110 08:32:24.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.453" endtime="20201110 08:32:24.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.418" endtime="20201110 08:32:24.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.413" endtime="20201110 08:32:24.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.481" endtime="20201110 08:32:24.796"></status>
</kw>
<msg timestamp="20201110 08:32:24.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036954278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036956583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:24.478" endtime="20201110 08:32:24.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036954278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036956583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:24.803" endtime="20201110 08:32:24.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.815" endtime="20201110 08:32:24.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.469" endtime="20201110 08:32:24.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.464" endtime="20201110 08:32:24.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.832" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:24.829" endtime="20201110 08:32:24.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.840" level="INFO">VALUE: [{'time': 0.036954278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036956583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.036966722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.036971014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.036979028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.013999999993693e-06, 'source_diff': 8.013999999993693e-06}, {'time': 0.036985681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.036991333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.652000000001822e-06, 'source_diff': 5.652000000001822e-06}, {'time': 0.037000361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.037010028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.666999999997927e-06, 'source_diff': 9.666999999997927e-06}, {'time': 0.037019042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.037022333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2909999999955475e-06, 'source_diff': 3.2909999999955475e-06}, {'time': 0.037026111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.037032375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.037035917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.037044056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.138999999997287e-06, 'source_diff': 8.138999999997287e-06}, {'time': 0.037048708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.037056986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.037065278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037067681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.037075069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.3880000000040025e-06, 'source_diff': 7.3880000000040025e-06}, {'time': 0.037082847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.037086264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.037089528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999958813e-06, 'source_diff': 3.2639999999958813e-06}, {'time': 0.037092931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4030000000059846e-06, 'source_diff': 3.4030000000059846e-06}, {'time': 0.037098167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.0371035, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.332999999996257e-06, 'source_diff': 5.332999999996257e-06}, {'time': 0.037107778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.27800000000339e-06, 'source_diff': 4.27800000000339e-06}, {'time': 0.037110056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.037118722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.665999999997454e-06, 'source_diff': 8.665999999997454e-06}, {'time': 0.037121736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.037131264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527999999994763e-06, 'source_diff': 9.527999999994763e-06}, {'time': 0.037140056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.037150194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0137999999999814e-05, 'source_diff': 1.0137999999999814e-05}, {'time': 0.037159097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.037168875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.777999999995013e-06, 'source_diff': 9.777999999995013e-06}, {'time': 0.037172153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.037175181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.037182083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.9019999999961335e-06, 'source_diff': 6.9019999999961335e-06}, {'time': 0.037185111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.037188028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9169999999981155e-06, 'source_diff': 2.9169999999981155e-06}, {'time': 0.037191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.888999999999976e-06, 'source_diff': 3.888999999999976e-06}, {'time': 0.037198069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.152000000002322e-06, 'source_diff': 6.152000000002322e-06}, {'time': 0.037207236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.166999999997427e-06, 'source_diff': 9.166999999997427e-06}, {'time': 0.0372125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.26400000000482e-06, 'source_diff': 5.26400000000482e-06}, {'time': 0.037215778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2779999999954512e-06, 'source_diff': 3.2779999999954512e-06}, {'time': 0.037221819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.041000000005237e-06, 'source_diff': 6.041000000005237e-06}, {'time': 0.037226472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.652999999993357e-06, 'source_diff': 4.652999999993357e-06}, {'time': 0.037233875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.403000000003046e-06, 'source_diff': 7.403000000003046e-06}, {'time': 0.037240278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.037244931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:24.834" endtime="20201110 08:32:24.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.823" endtime="20201110 08:32:24.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:24.879" level="INFO">${debug-compressed} = {'time': [0.036954278, 0.036956583, 0.036966722, 0.036971014, 0.036979028, 0.036985681, 0.036991333, 0.037000361, 0.037010028, 0.037019042, 0.037022333, 0.037026111, 0.037032375, 0.037035917, 0.037044...</msg>
<status status="PASS" starttime="20201110 08:32:24.845" endtime="20201110 08:32:24.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.889" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:24.887" endtime="20201110 08:32:24.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.896" level="INFO">VALUE: {'time': [0.036954278, 0.036956583, 0.036966722, 0.036971014, 0.036979028, 0.036985681, 0.036991333, 0.037000361, 0.037010028, 0.037019042, 0.037022333, 0.037026111, 0.037032375, 0.037035917, 0.037044056, 0.037048708, 0.037056986, 0.037065278, 0.037067681, 0.037075069, 0.037082847, 0.037086264, 0.037089528, 0.037092931, 0.037098167, 0.0371035, 0.037107778, 0.037110056, 0.037118722, 0.037121736, 0.037131264, 0.037140056, 0.037150194, 0.037159097, 0.037168875, 0.037172153, 0.037175181, 0.037182083, 0.037185111, 0.037188028, 0.037191917, 0.037198069, 0.037207236, 0.0372125, 0.037215778, 0.037221819, 0.037226472, 0.037233875, 0.037240278, 0.037244931], 'diff': [0, 2.305000000001056e-06, 1.0138999999999287e-05, 4.29200000000296e-06, 8.013999999993693e-06, 6.653000000002296e-06, 5.652000000001822e-06, 9.028000000001202e-06, 9.666999999997927e-06, 9.014000000001632e-06, 3.2909999999955475e-06, 3.77800000000289e-06, 6.2639999999988816e-06, 3.54200000000221e-06, 8.138999999997287e-06, 4.652000000000822e-06, 8.278000000000452e-06, 8.292000000000022e-06, 2.4029999999980456e-06, 7.3880000000040025e-06, 7.777999999999952e-06, 3.4169999999986156e-06, 3.2639999999958813e-06, 3.4030000000059846e-06, 5.235999999998742e-06, 5.332999999996257e-06, 4.27800000000339e-06, 2.27800000000139e-06, 8.665999999997454e-06, 3.01400000000257e-06, 9.527999999994763e-06, 8.792000000000522e-06, 1.0137999999999814e-05, 8.903000000004546e-06, 9.777999999995013e-06, 3.27800000000239e-06, 3.02800000000214e-06, 6.9019999999961335e-06, 3.02800000000214e-06, 2.9169999999981155e-06, 3.888999999999976e-06, 6.152000000002322e-06, 9.166999999997427e-06, 5.26400000000482e-06, 3.2779999999954512e-06, 6.041000000005237e-06, 4.652999999993357e-06, 7.403000000003046e-06, 6.403000000002046e-06, 4.653000000000296e-06], 'source_diff': [0, 2.305000000001056e-06, 1.0138999999999287e-05, 4.29200000000296e-06, 8.013999999993693e-06, 6.653000000002296e-06, 5.652000000001822e-06, 9.028000000001202e-06, 9.666999999997927e-06, 9.014000000001632e-06, 3.2909999999955475e-06, 3.77800000000289e-06, 6.2639999999988816e-06, 3.54200000000221e-06, 8.138999999997287e-06, 4.652000000000822e-06, 8.278000000000452e-06, 8.292000000000022e-06, 2.4029999999980456e-06, 7.3880000000040025e-06, 7.777999999999952e-06, 3.4169999999986156e-06, 3.2639999999958813e-06, 3.4030000000059846e-06, 5.235999999998742e-06, 5.332999999996257e-06, 4.27800000000339e-06, 2.27800000000139e-06, 8.665999999997454e-06, 3.01400000000257e-06, 9.527999999994763e-06, 8.792000000000522e-06, 1.0137999999999814e-05, 8.903000000004546e-06, 9.777999999995013e-06, 3.27800000000239e-06, 3.02800000000214e-06, 6.9019999999961335e-06, 3.02800000000214e-06, 2.9169999999981155e-06, 3.888999999999976e-06, 6.152000000002322e-06, 9.166999999997427e-06, 5.26400000000482e-06, 3.2779999999954512e-06, 6.041000000005237e-06, 4.652999999993357e-06, 7.403000000003046e-06, 6.403000000002046e-06, 4.653000000000296e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:32:24.891" endtime="20201110 08:32:24.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.881" endtime="20201110 08:32:24.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:24.908" level="INFO">${RESULT} = [{'time': 0.036956583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.036971014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:24.900" endtime="20201110 08:32:24.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:24.926" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036956583, 0.036971014, 0.036985681, 0.037000361, 0.037019042, 0.037026111, 0.037035917, 0.037048708, 0.037065278, 0.037075069, 0.037086264, 0.037092931, 0.0371035, 0.037110056, 0.03712173...</msg>
<status status="PASS" starttime="20201110 08:32:24.910" endtime="20201110 08:32:24.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.936" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:24.934" endtime="20201110 08:32:24.937"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:24.941" level="INFO">VALUE: [2.305000000001056e-06, 4.29200000000296e-06, 6.653000000002296e-06, 9.028000000001202e-06, 9.014000000001632e-06, 3.77800000000289e-06, 3.54200000000221e-06, 4.652000000000822e-06, 8.292000000000022e-06, 7.3880000000040025e-06, 3.4169999999986156e-06, 3.4030000000059846e-06, 5.332999999996257e-06, 2.27800000000139e-06, 3.01400000000257e-06, 8.792000000000522e-06, 8.903000000004546e-06, 3.27800000000239e-06, 6.9019999999961335e-06, 2.9169999999981155e-06, 6.152000000002322e-06, 5.26400000000482e-06, 6.041000000005237e-06, 7.403000000003046e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201110 08:32:24.938" endtime="20201110 08:32:24.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.928" endtime="20201110 08:32:24.944"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:24.950" endtime="20201110 08:32:24.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:24.959" endtime="20201110 08:32:24.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.955" endtime="20201110 08:32:24.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.946" endtime="20201110 08:32:24.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.410" endtime="20201110 08:32:24.984"></status>
</kw>
<msg timestamp="20201110 08:32:24.985" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.005" endtime="20201110 08:32:25.018"></status>
</kw>
<msg timestamp="20201110 08:32:25.019" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:25.002" endtime="20201110 08:32:25.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.026" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:25.022" endtime="20201110 08:32:25.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.028" endtime="20201110 08:32:25.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.994" endtime="20201110 08:32:25.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.989" endtime="20201110 08:32:25.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.054" endtime="20201110 08:32:25.386"></status>
</kw>
<msg timestamp="20201110 08:32:25.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036830792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:25.050" endtime="20201110 08:32:25.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036830792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:25.393" endtime="20201110 08:32:25.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.406" endtime="20201110 08:32:25.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.042" endtime="20201110 08:32:25.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.036" endtime="20201110 08:32:25.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.422" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:25.420" endtime="20201110 08:32:25.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.430" level="INFO">VALUE: [{'time': 0.036827389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036830792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.036836333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.540999999997798e-06, 'source_diff': 5.540999999997798e-06}, {'time': 0.036841361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.036847139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.036850278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.036858069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.791000000000048e-06, 'source_diff': 7.791000000000048e-06}, {'time': 0.036862708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036869111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.036875764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.036885931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0166999999998427e-05, 'source_diff': 1.0166999999998427e-05}, {'time': 0.036888958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0270000000026664e-06, 'source_diff': 3.0270000000026664e-06}, {'time': 0.036895736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.036898889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.036905347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.458000000000852e-06, 'source_diff': 6.458000000000852e-06}, {'time': 0.036907569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2220000000031104e-06, 'source_diff': 2.2220000000031104e-06}, {'time': 0.036912222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.03691625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.027999999996201e-06, 'source_diff': 4.027999999996201e-06}, {'time': 0.036921653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.036927847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.036936014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.036945236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.221999999996233e-06, 'source_diff': 9.221999999996233e-06}, {'time': 0.036948014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.036956792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.036963944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.1519999999963835e-06, 'source_diff': 7.1519999999963835e-06}, {'time': 0.0369725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555999999999842e-06, 'source_diff': 8.555999999999842e-06}, {'time': 0.036975875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.374999999999906e-06, 'source_diff': 3.374999999999906e-06}, {'time': 0.036980028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.036983806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.036986458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.036991986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.037001653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.037006042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.037009972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.929999999999212e-06, 'source_diff': 3.929999999999212e-06}, {'time': 0.037017736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.764000000000382e-06, 'source_diff': 7.764000000000382e-06}, {'time': 0.037026153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}, {'time': 0.037030708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.555000000003306e-06, 'source_diff': 4.555000000003306e-06}, {'time': 0.037035708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.037040347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037050292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.944999999997317e-06, 'source_diff': 9.944999999997317e-06}, {'time': 0.037059028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037066556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037068833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2770000000019164e-06, 'source_diff': 2.2770000000019164e-06}, {'time': 0.037071181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3479999999992396e-06, 'source_diff': 2.3479999999992396e-06}, {'time': 0.037078764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.037087917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.037096833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.916000000004642e-06, 'source_diff': 8.916000000004642e-06}, {'time': 0.037104097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.037108, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.037114667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.666999999994927e-06, 'source_diff': 6.666999999994927e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:25.424" endtime="20201110 08:32:25.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.414" endtime="20201110 08:32:25.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:25.465" level="INFO">${debug-compressed} = {'time': [0.036827389, 0.036830792, 0.036836333, 0.036841361, 0.036847139, 0.036850278, 0.036858069, 0.036862708, 0.036869111, 0.036875764, 0.036885931, 0.036888958, 0.036895736, 0.036898889, 0.036905...</msg>
<status status="PASS" starttime="20201110 08:32:25.436" endtime="20201110 08:32:25.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.474" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:25.472" endtime="20201110 08:32:25.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.481" level="INFO">VALUE: {'time': [0.036827389, 0.036830792, 0.036836333, 0.036841361, 0.036847139, 0.036850278, 0.036858069, 0.036862708, 0.036869111, 0.036875764, 0.036885931, 0.036888958, 0.036895736, 0.036898889, 0.036905347, 0.036907569, 0.036912222, 0.03691625, 0.036921653, 0.036927847, 0.036936014, 0.036945236, 0.036948014, 0.036956792, 0.036963944, 0.0369725, 0.036975875, 0.036980028, 0.036983806, 0.036986458, 0.036991986, 0.037001653, 0.037006042, 0.037009972, 0.037017736, 0.037026153, 0.037030708, 0.037035708, 0.037040347, 0.037050292, 0.037059028, 0.037066556, 0.037068833, 0.037071181, 0.037078764, 0.037087917, 0.037096833, 0.037104097, 0.037108, 0.037114667], 'diff': [0, 3.4029999999990457e-06, 5.540999999997798e-06, 5.02800000000414e-06, 5.7779999999979514e-06, 3.1389999999992257e-06, 7.791000000000048e-06, 4.639000000000726e-06, 6.403000000002046e-06, 6.652999999995357e-06, 1.0166999999998427e-05, 3.0270000000026664e-06, 6.7779999999989515e-06, 3.1529999999987957e-06, 6.458000000000852e-06, 2.2220000000031104e-06, 4.653000000000296e-06, 4.027999999996201e-06, 5.403000000001046e-06, 6.194000000001032e-06, 8.167000000003366e-06, 9.221999999996233e-06, 2.77800000000189e-06, 8.778000000000952e-06, 7.1519999999963835e-06, 8.555999999999842e-06, 3.374999999999906e-06, 4.152999999999796e-06, 3.77800000000289e-06, 2.651999999998822e-06, 5.527999999997701e-06, 9.667000000004866e-06, 4.389000000000476e-06, 3.929999999999212e-06, 7.764000000000382e-06, 8.416999999996677e-06, 4.555000000003306e-06, 4.9999999999980616e-06, 4.639000000000726e-06, 9.944999999997317e-06, 8.736000000002242e-06, 7.527999999999702e-06, 2.2770000000019164e-06, 2.3479999999992396e-06, 7.582999999998508e-06, 9.152999999997857e-06, 8.916000000004642e-06, 7.263999999999882e-06, 3.902999999999546e-06, 6.666999999994927e-06], 'source_diff': [0, 3.4029999999990457e-06, 5.540999999997798e-06, 5.02800000000414e-06, 5.7779999999979514e-06, 3.1389999999992257e-06, 7.791000000000048e-06, 4.639000000000726e-06, 6.403000000002046e-06, 6.652999999995357e-06, 1.0166999999998427e-05, 3.0270000000026664e-06, 6.7779999999989515e-06, 3.1529999999987957e-06, 6.458000000000852e-06, 2.2220000000031104e-06, 4.653000000000296e-06, 4.027999999996201e-06, 5.403000000001046e-06, 6.194000000001032e-06, 8.167000000003366e-06, 9.221999999996233e-06, 2.77800000000189e-06, 8.778000000000952e-06, 7.1519999999963835e-06, 8.555999999999842e-06, 3.374999999999906e-06, 4.152999999999796e-06, 3.77800000000289e-06, 2.651999999998822e-06, 5.527999999997701e-06, 9.667000000004866e-06, 4.389000000000476e-06, 3.929999999999212e-06, 7.764000000000382e-06, 8.416999999996677e-06, 4.555000000003306e-06, 4.9999999999980616e-06, 4.639000000000726e-06, 9.944999999997317e-06, 8.736000000002242e-06, 7.527999999999702e-06, 2.2770000000019164e-06, 2.3479999999992396e-06, 7.582999999998508e-06, 9.152999999997857e-06, 8.916000000004642e-06, 7.263999999999882e-06, 3.902999999999546e-06, 6.666999999994927e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:25.477" endtime="20201110 08:32:25.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.467" endtime="20201110 08:32:25.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:25.493" level="INFO">${RESULT} = [{'time': 0.036830792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.036841361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:25.486" endtime="20201110 08:32:25.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:25.511" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036830792, 0.036841361, 0.036850278, 0.036862708, 0.036875764, 0.036888958, 0.036898889, 0.036907569, 0.03691625, 0.036927847, 0.036945236, 0.036956792, 0.0369725, 0.036980028, 0.036986458...</msg>
<status status="PASS" starttime="20201110 08:32:25.495" endtime="20201110 08:32:25.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.521" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:25.519" endtime="20201110 08:32:25.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.526" level="INFO">VALUE: [3.4029999999990457e-06, 5.02800000000414e-06, 3.1389999999992257e-06, 4.639000000000726e-06, 6.652999999995357e-06, 3.0270000000026664e-06, 3.1529999999987957e-06, 2.2220000000031104e-06, 4.027999999996201e-06, 6.194000000001032e-06, 9.221999999996233e-06, 8.778000000000952e-06, 8.555999999999842e-06, 4.152999999999796e-06, 2.651999999998822e-06, 9.667000000004866e-06, 3.929999999999212e-06, 8.416999999996677e-06, 4.9999999999980616e-06, 9.944999999997317e-06, 7.527999999999702e-06, 2.3479999999992396e-06, 9.152999999997857e-06, 7.263999999999882e-06, 6.666999999994927e-06]</msg>
<status status="PASS" starttime="20201110 08:32:25.524" endtime="20201110 08:32:25.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.513" endtime="20201110 08:32:25.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.536" endtime="20201110 08:32:25.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:25.544" endtime="20201110 08:32:25.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.540" endtime="20201110 08:32:25.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.531" endtime="20201110 08:32:25.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:24.986" endtime="20201110 08:32:25.569"></status>
</kw>
<msg timestamp="20201110 08:32:25.570" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.589" endtime="20201110 08:32:25.602"></status>
</kw>
<msg timestamp="20201110 08:32:25.603" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:25.586" endtime="20201110 08:32:25.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.610" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:25.606" endtime="20201110 08:32:25.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.612" endtime="20201110 08:32:25.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.579" endtime="20201110 08:32:25.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.574" endtime="20201110 08:32:25.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.637" endtime="20201110 08:32:25.944"></status>
</kw>
<msg timestamp="20201110 08:32:25.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036283, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036292014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:25.633" endtime="20201110 08:32:25.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036283, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036292014, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:25.951" endtime="20201110 08:32:25.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:25.963" endtime="20201110 08:32:25.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.626" endtime="20201110 08:32:25.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.622" endtime="20201110 08:32:25.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.980" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:25.977" endtime="20201110 08:32:25.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:25.988" level="INFO">VALUE: [{'time': 0.036283, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036292014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.036299292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036303069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7770000000034165e-06, 'source_diff': 3.7770000000034165e-06}, {'time': 0.036306597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.03631175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.152999999993857e-06, 'source_diff': 5.152999999993857e-06}, {'time': 0.036316653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.036325806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.153000000004796e-06, 'source_diff': 9.153000000004796e-06}, {'time': 0.036335083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.27699999999504e-06, 'source_diff': 9.27699999999504e-06}, {'time': 0.036338389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}, {'time': 0.036343181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.79200000000346e-06, 'source_diff': 4.79200000000346e-06}, {'time': 0.036349792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.610999999996647e-06, 'source_diff': 6.610999999996647e-06}, {'time': 0.036355569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.036360403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.83400000000217e-06, 'source_diff': 4.83400000000217e-06}, {'time': 0.036363014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.610999999999586e-06, 'source_diff': 2.610999999999586e-06}, {'time': 0.036366292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.036370931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.036379083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.151999999997384e-06, 'source_diff': 8.151999999997384e-06}, {'time': 0.03638775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.036396389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.036400208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.819000000002126e-06, 'source_diff': 3.819000000002126e-06}, {'time': 0.036404819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.610999999994647e-06, 'source_diff': 4.610999999994647e-06}, {'time': 0.036408486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6669999999988656e-06, 'source_diff': 3.6669999999988656e-06}, {'time': 0.036413264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.036420417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.036425708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2910000000044866e-06, 'source_diff': 5.2910000000044866e-06}, {'time': 0.036434847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.036438, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.036448153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.036457347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.036462458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.036467736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.036476264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.036478667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.036483444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.776999999997478e-06, 'source_diff': 4.776999999997478e-06}, {'time': 0.036488778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33400000000267e-06, 'source_diff': 5.33400000000267e-06}, {'time': 0.036491, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2220000000031104e-06, 'source_diff': 2.2220000000031104e-06}, {'time': 0.036499528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.036507306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.036510597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2909999999955475e-06, 'source_diff': 3.2909999999955475e-06}, {'time': 0.036518861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.036527639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.036534931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.036537583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.036544861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.036552431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.57000000000535e-06, 'source_diff': 7.57000000000535e-06}, {'time': 0.036562167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.735999999996303e-06, 'source_diff': 9.735999999996303e-06}, {'time': 0.036567986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.036573097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.036579014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:25.982" endtime="20201110 08:32:25.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.971" endtime="20201110 08:32:25.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:26.023" level="INFO">${debug-compressed} = {'time': [0.036283, 0.036292014, 0.036299292, 0.036303069, 0.036306597, 0.03631175, 0.036316653, 0.036325806, 0.036335083, 0.036338389, 0.036343181, 0.036349792, 0.036355569, 0.036360403, 0.036363014,...</msg>
<status status="PASS" starttime="20201110 08:32:25.993" endtime="20201110 08:32:26.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.032" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:26.030" endtime="20201110 08:32:26.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.039" level="INFO">VALUE: {'time': [0.036283, 0.036292014, 0.036299292, 0.036303069, 0.036306597, 0.03631175, 0.036316653, 0.036325806, 0.036335083, 0.036338389, 0.036343181, 0.036349792, 0.036355569, 0.036360403, 0.036363014, 0.036366292, 0.036370931, 0.036379083, 0.03638775, 0.036396389, 0.036400208, 0.036404819, 0.036408486, 0.036413264, 0.036420417, 0.036425708, 0.036434847, 0.036438, 0.036448153, 0.036457347, 0.036462458, 0.036467736, 0.036476264, 0.036478667, 0.036483444, 0.036488778, 0.036491, 0.036499528, 0.036507306, 0.036510597, 0.036518861, 0.036527639, 0.036534931, 0.036537583, 0.036544861, 0.036552431, 0.036562167, 0.036567986, 0.036573097, 0.036579014], 'diff': [0, 9.013999999994693e-06, 7.2779999999994516e-06, 3.7770000000034165e-06, 3.52800000000264e-06, 5.152999999993857e-06, 4.903000000000546e-06, 9.153000000004796e-06, 9.27699999999504e-06, 3.30600000000153e-06, 4.79200000000346e-06, 6.610999999996647e-06, 5.776999999998478e-06, 4.83400000000217e-06, 2.610999999999586e-06, 3.27800000000239e-06, 4.639000000000726e-06, 8.151999999997384e-06, 8.667000000003866e-06, 8.638999999997787e-06, 3.819000000002126e-06, 4.610999999994647e-06, 3.6669999999988656e-06, 4.77800000000389e-06, 7.152999999995857e-06, 5.2910000000044866e-06, 9.138999999998287e-06, 3.1529999999987957e-06, 1.0152999999998857e-05, 9.194000000004032e-06, 5.111000000002086e-06, 5.277999999997451e-06, 8.528000000000702e-06, 2.4029999999980456e-06, 4.776999999997478e-06, 5.33400000000267e-06, 2.2220000000031104e-06, 8.528000000000702e-06, 7.777999999999952e-06, 3.2909999999955475e-06, 8.264000000000882e-06, 8.778000000000952e-06, 7.2919999999990215e-06, 2.651999999998822e-06, 7.2779999999994516e-06, 7.57000000000535e-06, 9.735999999996303e-06, 5.8189999999971875e-06, 5.111000000002086e-06, 5.917000000001116e-06], 'source_diff': [0, 9.013999999994693e-06, 7.2779999999994516e-06, 3.7770000000034165e-06, 3.52800000000264e-06, 5.152999999993857e-06, 4.903000000000546e-06, 9.153000000004796e-06, 9.27699999999504e-06, 3.30600000000153e-06, 4.79200000000346e-06, 6.610999999996647e-06, 5.776999999998478e-06, 4.83400000000217e-06, 2.610999999999586e-06, 3.27800000000239e-06, 4.639000000000726e-06, 8.151999999997384e-06, 8.667000000003866e-06, 8.638999999997787e-06, 3.819000000002126e-06, 4.610999999994647e-06, 3.6669999999988656e-06, 4.77800000000389e-06, 7.152999999995857e-06, 5.2910000000044866e-06, 9.138999999998287e-06, 3.1529999999987957e-06, 1.0152999999998857e-05, 9.194000000004032e-06, 5.111000000002086e-06, 5.277999999997451e-06, 8.528000000000702e-06, 2.4029999999980456e-06, 4.776999999997478e-06, 5.33400000000267e-06, 2.2220000000031104e-06, 8.528000000000702e-06, 7.777999999999952e-06, 3.2909999999955475e-06, 8.264000000000882e-06, 8.778000000000952e-06, 7.2919999999990215e-06, 2.651999999998822e-06, 7.2779999999994516e-06, 7.57000000000535e-06, 9.735999999996303e-06, 5.8189999999971875e-06, 5.111000000002086e-06, 5.917000000001116e-06], 'eventsource': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC']}</msg>
<status status="PASS" starttime="20201110 08:32:26.035" endtime="20201110 08:32:26.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.025" endtime="20201110 08:32:26.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:26.051" level="INFO">${RESULT} = [{'time': 0.036292014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.036303069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:26.044" endtime="20201110 08:32:26.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:26.070" level="INFO">${GPIO_OVERHEAD} = {'time': [0.036292014, 0.036303069, 0.03631175, 0.036325806, 0.036338389, 0.036349792, 0.036360403, 0.036366292, 0.036379083, 0.036396389, 0.036404819, 0.036413264, 0.036425708, 0.036438, 0.036457347,...</msg>
<status status="PASS" starttime="20201110 08:32:26.053" endtime="20201110 08:32:26.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.080" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:26.078" endtime="20201110 08:32:26.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.085" level="INFO">VALUE: [9.013999999994693e-06, 3.7770000000034165e-06, 5.152999999993857e-06, 9.153000000004796e-06, 3.30600000000153e-06, 6.610999999996647e-06, 4.83400000000217e-06, 3.27800000000239e-06, 8.151999999997384e-06, 8.638999999997787e-06, 4.610999999994647e-06, 4.77800000000389e-06, 5.2910000000044866e-06, 3.1529999999987957e-06, 9.194000000004032e-06, 5.277999999997451e-06, 2.4029999999980456e-06, 5.33400000000267e-06, 8.528000000000702e-06, 3.2909999999955475e-06, 8.778000000000952e-06, 2.651999999998822e-06, 7.57000000000535e-06, 5.8189999999971875e-06, 5.917000000001116e-06]</msg>
<status status="PASS" starttime="20201110 08:32:26.083" endtime="20201110 08:32:26.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.071" endtime="20201110 08:32:26.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.095" endtime="20201110 08:32:26.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:26.103" endtime="20201110 08:32:26.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.098" endtime="20201110 08:32:26.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.090" endtime="20201110 08:32:26.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:25.571" endtime="20201110 08:32:26.128"></status>
</kw>
<msg timestamp="20201110 08:32:26.129" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.150" endtime="20201110 08:32:26.163"></status>
</kw>
<msg timestamp="20201110 08:32:26.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:26.145" endtime="20201110 08:32:26.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.171" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:26.167" endtime="20201110 08:32:26.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.173" endtime="20201110 08:32:26.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.138" endtime="20201110 08:32:26.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.133" endtime="20201110 08:32:26.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.197" endtime="20201110 08:32:26.520"></status>
</kw>
<msg timestamp="20201110 08:32:26.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038073778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038081292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:26.193" endtime="20201110 08:32:26.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038073778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038081292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:26.526" endtime="20201110 08:32:26.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.539" endtime="20201110 08:32:26.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.186" endtime="20201110 08:32:26.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.181" endtime="20201110 08:32:26.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.556" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:26.553" endtime="20201110 08:32:26.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.564" level="INFO">VALUE: [{'time': 0.038073778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038081292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.038088889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.038097069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.038104944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.038109597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.03811975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.038125778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038130306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.038138583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.276999999994039e-06, 'source_diff': 8.276999999994039e-06}, {'time': 0.03814475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.038151389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.038155792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.038165694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.901999999999134e-06, 'source_diff': 9.901999999999134e-06}, {'time': 0.038175347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.038184153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.806000000000092e-06, 'source_diff': 8.806000000000092e-06}, {'time': 0.038188806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.038194583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.776999999998478e-06, 'source_diff': 5.776999999998478e-06}, {'time': 0.038197597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.03820075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.038206153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.038215806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.038219333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5270000000031665e-06, 'source_diff': 3.5270000000031665e-06}, {'time': 0.038226736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.038231389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.038235875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4860000000049305e-06, 'source_diff': 4.4860000000049305e-06}, {'time': 0.038242764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.038250097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.038254139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.038260042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.038266056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.038271347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.03827575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.038279014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.26400000000282e-06, 'source_diff': 3.26400000000282e-06}, {'time': 0.038283583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.569000000002876e-06, 'source_diff': 4.569000000002876e-06}, {'time': 0.038291319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.735999999994303e-06, 'source_diff': 7.735999999994303e-06}, {'time': 0.038298972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.038305514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.541999999998271e-06, 'source_diff': 6.541999999998271e-06}, {'time': 0.038310542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.038319944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.038325972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038331306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.33400000000267e-06, 'source_diff': 5.33400000000267e-06}, {'time': 0.038337403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.038341806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.038351833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0027000000002728e-05, 'source_diff': 1.0027000000002728e-05}, {'time': 0.038361736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.038366639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.038374292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.038376694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.402000000005511e-06, 'source_diff': 2.402000000005511e-06}, {'time': 0.038380097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:26.558" endtime="20201110 08:32:26.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.547" endtime="20201110 08:32:26.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:26.617" level="INFO">${debug-compressed} = {'time': [0.038073778, 0.038081292, 0.038088889, 0.038097069, 0.038104944, 0.038109597, 0.03811975, 0.038125778, 0.038130306, 0.038138583, 0.03814475, 0.038151389, 0.038155792, 0.038165694, 0.03817534...</msg>
<status status="PASS" starttime="20201110 08:32:26.569" endtime="20201110 08:32:26.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.629" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:26.626" endtime="20201110 08:32:26.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.637" level="INFO">VALUE: {'time': [0.038073778, 0.038081292, 0.038088889, 0.038097069, 0.038104944, 0.038109597, 0.03811975, 0.038125778, 0.038130306, 0.038138583, 0.03814475, 0.038151389, 0.038155792, 0.038165694, 0.038175347, 0.038184153, 0.038188806, 0.038194583, 0.038197597, 0.03820075, 0.038206153, 0.038215806, 0.038219333, 0.038226736, 0.038231389, 0.038235875, 0.038242764, 0.038250097, 0.038254139, 0.038260042, 0.038266056, 0.038271347, 0.03827575, 0.038279014, 0.038283583, 0.038291319, 0.038298972, 0.038305514, 0.038310542, 0.038319944, 0.038325972, 0.038331306, 0.038337403, 0.038341806, 0.038351833, 0.038361736, 0.038366639, 0.038374292, 0.038376694, 0.038380097], 'diff': [0, 7.514000000000132e-06, 7.5969999999980775e-06, 8.179999999996523e-06, 7.875000000004406e-06, 4.653000000000296e-06, 1.0152999999998857e-05, 6.0279999999982015e-06, 4.52800000000364e-06, 8.276999999994039e-06, 6.167000000001366e-06, 6.639000000002726e-06, 4.403000000000046e-06, 9.901999999999134e-06, 9.652999999998357e-06, 8.806000000000092e-06, 4.653000000000296e-06, 5.776999999998478e-06, 3.01400000000257e-06, 3.1529999999987957e-06, 5.403000000001046e-06, 9.652999999998357e-06, 3.5270000000031665e-06, 7.402999999996107e-06, 4.653000000000296e-06, 4.4860000000049305e-06, 6.888999999996037e-06, 7.332999999998258e-06, 4.04200000000271e-06, 5.903000000001546e-06, 6.0139999999986316e-06, 5.290999999997548e-06, 4.403000000000046e-06, 3.26400000000282e-06, 4.569000000002876e-06, 7.735999999994303e-06, 7.653000000003296e-06, 6.541999999998271e-06, 5.02800000000414e-06, 9.401999999998634e-06, 6.0279999999982015e-06, 5.33400000000267e-06, 6.096999999996577e-06, 4.403000000000046e-06, 1.0027000000002728e-05, 9.902999999998607e-06, 4.903000000000546e-06, 7.652999999996357e-06, 2.402000000005511e-06, 3.4029999999990457e-06], 'source_diff': [0, 7.514000000000132e-06, 7.5969999999980775e-06, 8.179999999996523e-06, 7.875000000004406e-06, 4.653000000000296e-06, 1.0152999999998857e-05, 6.0279999999982015e-06, 4.52800000000364e-06, 8.276999999994039e-06, 6.167000000001366e-06, 6.639000000002726e-06, 4.403000000000046e-06, 9.901999999999134e-06, 9.652999999998357e-06, 8.806000000000092e-06, 4.653000000000296e-06, 5.776999999998478e-06, 3.01400000000257e-06, 3.1529999999987957e-06, 5.403000000001046e-06, 9.652999999998357e-06, 3.5270000000031665e-06, 7.402999999996107e-06, 4.653000000000296e-06, 4.4860000000049305e-06, 6.888999999996037e-06, 7.332999999998258e-06, 4.04200000000271e-06, 5.903000000001546e-06, 6.0139999999986316e-06, 5.290999999997548e-06, 4.403000000000046e-06, 3.26400000000282e-06, 4.569000000002876e-06, 7.735999999994303e-06, 7.653000000003296e-06, 6.541999999998271e-06, 5.02800000000414e-06, 9.401999999998634e-06, 6.0279999999982015e-06, 5.33400000000267e-06, 6.096999999996577e-06, 4.403000000000046e-06, 1.0027000000002728e-05, 9.902999999998607e-06, 4.903000000000546e-06, 7.652999999996357e-06, 2.402000000005511e-06, 3.4029999999990457e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:26.631" endtime="20201110 08:32:26.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.620" endtime="20201110 08:32:26.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:26.650" level="INFO">${RESULT} = [{'time': 0.038081292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.038097069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:26.642" endtime="20201110 08:32:26.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:26.668" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038081292, 0.038097069, 0.038109597, 0.038125778, 0.038138583, 0.038151389, 0.038165694, 0.038184153, 0.038194583, 0.03820075, 0.038215806, 0.038226736, 0.038235875, 0.038250097, 0.0382600...</msg>
<status status="PASS" starttime="20201110 08:32:26.652" endtime="20201110 08:32:26.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.678" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:26.676" endtime="20201110 08:32:26.679"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.683" level="INFO">VALUE: [7.514000000000132e-06, 8.179999999996523e-06, 4.653000000000296e-06, 6.0279999999982015e-06, 8.276999999994039e-06, 6.639000000002726e-06, 9.901999999999134e-06, 8.806000000000092e-06, 5.776999999998478e-06, 3.1529999999987957e-06, 9.652999999998357e-06, 7.402999999996107e-06, 4.4860000000049305e-06, 7.332999999998258e-06, 5.903000000001546e-06, 5.290999999997548e-06, 3.26400000000282e-06, 7.735999999994303e-06, 6.541999999998271e-06, 9.401999999998634e-06, 5.33400000000267e-06, 4.403000000000046e-06, 9.902999999998607e-06, 7.652999999996357e-06, 3.4029999999990457e-06]</msg>
<status status="PASS" starttime="20201110 08:32:26.680" endtime="20201110 08:32:26.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.670" endtime="20201110 08:32:26.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.692" endtime="20201110 08:32:26.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:26.701" endtime="20201110 08:32:26.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.696" endtime="20201110 08:32:26.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.688" endtime="20201110 08:32:26.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.130" endtime="20201110 08:32:26.726"></status>
</kw>
<msg timestamp="20201110 08:32:26.727" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.748" endtime="20201110 08:32:26.761"></status>
</kw>
<msg timestamp="20201110 08:32:26.762" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:26.743" endtime="20201110 08:32:26.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:26.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:26.764" endtime="20201110 08:32:26.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.771" endtime="20201110 08:32:26.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.736" endtime="20201110 08:32:26.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.731" endtime="20201110 08:32:26.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:26.794" endtime="20201110 08:32:27.107"></status>
</kw>
<msg timestamp="20201110 08:32:27.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037878069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:26.791" endtime="20201110 08:32:27.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037878069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:27.113" endtime="20201110 08:32:27.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.126" endtime="20201110 08:32:27.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.783" endtime="20201110 08:32:27.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.779" endtime="20201110 08:32:27.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.142" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:27.140" endtime="20201110 08:32:27.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.151" level="INFO">VALUE: [{'time': 0.037878069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037881222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.037887639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037891083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4439999999982818e-06, 'source_diff': 3.4439999999982818e-06}, {'time': 0.037897431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.34800000000324e-06, 'source_diff': 6.34800000000324e-06}, {'time': 0.037907083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.651999999998884e-06, 'source_diff': 9.651999999998884e-06}, {'time': 0.037912125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.037915153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.02800000000214e-06, 'source_diff': 3.02800000000214e-06}, {'time': 0.037918569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.415999999999142e-06, 'source_diff': 3.415999999999142e-06}, {'time': 0.037923958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.037930736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.037940764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.037947292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.037950333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.037957861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037966125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.264000000000882e-06, 'source_diff': 8.264000000000882e-06}, {'time': 0.037972153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.037981681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.037989458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.776999999993539e-06, 'source_diff': 7.776999999993539e-06}, {'time': 0.037996486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0280000000061404e-06, 'source_diff': 7.0280000000061404e-06}, {'time': 0.038001014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.038007167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.038012069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.038018861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7919999999985214e-06, 'source_diff': 6.7919999999985214e-06}, {'time': 0.03802475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.038027306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.555999999993841e-06, 'source_diff': 2.555999999993841e-06}, {'time': 0.038034083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.777000000006417e-06, 'source_diff': 6.777000000006417e-06}, {'time': 0.038037611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5279999999957012e-06, 'source_diff': 3.5279999999957012e-06}, {'time': 0.03804125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6389999999997258e-06, 'source_diff': 3.6389999999997258e-06}, {'time': 0.038047028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.038050681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6530000000062346e-06, 'source_diff': 3.6530000000062346e-06}, {'time': 0.038057958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.038063736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.038068014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999996451e-06, 'source_diff': 4.277999999996451e-06}, {'time': 0.038077681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.667000000004866e-06, 'source_diff': 9.667000000004866e-06}, {'time': 0.038086194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.51299999999472e-06, 'source_diff': 8.51299999999472e-06}, {'time': 0.038092097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.0381015, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.403000000005046e-06, 'source_diff': 9.403000000005046e-06}, {'time': 0.038108181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680999999994497e-06, 'source_diff': 6.680999999994497e-06}, {'time': 0.038116306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.038125833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}, {'time': 0.038131014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.038140389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.374999999998967e-06, 'source_diff': 9.374999999998967e-06}, {'time': 0.038143806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4170000000055545e-06, 'source_diff': 3.4170000000055545e-06}, {'time': 0.038151569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.763000000000908e-06, 'source_diff': 7.763000000000908e-06}, {'time': 0.038159972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.038163264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.038171167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.038180569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.401999999998634e-06, 'source_diff': 9.401999999998634e-06}, {'time': 0.038185847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:27.145" endtime="20201110 08:32:27.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.134" endtime="20201110 08:32:27.155"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:27.186" level="INFO">${debug-compressed} = {'time': [0.037878069, 0.037881222, 0.037887639, 0.037891083, 0.037897431, 0.037907083, 0.037912125, 0.037915153, 0.037918569, 0.037923958, 0.037930736, 0.037940764, 0.037947292, 0.037950333, 0.037957...</msg>
<status status="PASS" starttime="20201110 08:32:27.156" endtime="20201110 08:32:27.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.195" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:27.193" endtime="20201110 08:32:27.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.202" level="INFO">VALUE: {'time': [0.037878069, 0.037881222, 0.037887639, 0.037891083, 0.037897431, 0.037907083, 0.037912125, 0.037915153, 0.037918569, 0.037923958, 0.037930736, 0.037940764, 0.037947292, 0.037950333, 0.037957861, 0.037966125, 0.037972153, 0.037981681, 0.037989458, 0.037996486, 0.038001014, 0.038007167, 0.038012069, 0.038018861, 0.03802475, 0.038027306, 0.038034083, 0.038037611, 0.03804125, 0.038047028, 0.038050681, 0.038057958, 0.038063736, 0.038068014, 0.038077681, 0.038086194, 0.038092097, 0.0381015, 0.038108181, 0.038116306, 0.038125833, 0.038131014, 0.038140389, 0.038143806, 0.038151569, 0.038159972, 0.038163264, 0.038171167, 0.038180569, 0.038185847], 'diff': [0, 3.1529999999987957e-06, 6.417000000001616e-06, 3.4439999999982818e-06, 6.34800000000324e-06, 9.651999999998884e-06, 5.041999999996771e-06, 3.02800000000214e-06, 3.415999999999142e-06, 5.389000000001476e-06, 6.7779999999989515e-06, 1.0028000000002202e-05, 6.5279999999987015e-06, 3.0410000000022364e-06, 7.527999999999702e-06, 8.264000000000882e-06, 6.0279999999982015e-06, 9.528000000001702e-06, 7.776999999993539e-06, 7.0280000000061404e-06, 4.527999999996701e-06, 6.153000000001796e-06, 4.902000000001072e-06, 6.7919999999985214e-06, 5.889000000001976e-06, 2.555999999993841e-06, 6.777000000006417e-06, 3.5279999999957012e-06, 3.6389999999997258e-06, 5.7779999999979514e-06, 3.6530000000062346e-06, 7.276999999999978e-06, 5.7779999999979514e-06, 4.277999999996451e-06, 9.667000000004866e-06, 8.51299999999472e-06, 5.903000000001546e-06, 9.403000000005046e-06, 6.680999999994497e-06, 8.125000000004656e-06, 9.52699999999529e-06, 5.180999999999936e-06, 9.374999999998967e-06, 3.4170000000055545e-06, 7.763000000000908e-06, 8.402999999997107e-06, 3.29200000000196e-06, 7.902999999996607e-06, 9.401999999998634e-06, 5.27800000000439e-06], 'source_diff': [0, 3.1529999999987957e-06, 6.417000000001616e-06, 3.4439999999982818e-06, 6.34800000000324e-06, 9.651999999998884e-06, 5.041999999996771e-06, 3.02800000000214e-06, 3.415999999999142e-06, 5.389000000001476e-06, 6.7779999999989515e-06, 1.0028000000002202e-05, 6.5279999999987015e-06, 3.0410000000022364e-06, 7.527999999999702e-06, 8.264000000000882e-06, 6.0279999999982015e-06, 9.528000000001702e-06, 7.776999999993539e-06, 7.0280000000061404e-06, 4.527999999996701e-06, 6.153000000001796e-06, 4.902000000001072e-06, 6.7919999999985214e-06, 5.889000000001976e-06, 2.555999999993841e-06, 6.777000000006417e-06, 3.5279999999957012e-06, 3.6389999999997258e-06, 5.7779999999979514e-06, 3.6530000000062346e-06, 7.276999999999978e-06, 5.7779999999979514e-06, 4.277999999996451e-06, 9.667000000004866e-06, 8.51299999999472e-06, 5.903000000001546e-06, 9.403000000005046e-06, 6.680999999994497e-06, 8.125000000004656e-06, 9.52699999999529e-06, 5.180999999999936e-06, 9.374999999998967e-06, 3.4170000000055545e-06, 7.763000000000908e-06, 8.402999999997107e-06, 3.29200000000196e-06, 7.902999999996607e-06, 9.401999999998634e-06, 5.27800000000439e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:27.197" endtime="20201110 08:32:27.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.188" endtime="20201110 08:32:27.205"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:27.214" level="INFO">${RESULT} = [{'time': 0.037881222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.037891083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:27.206" endtime="20201110 08:32:27.214"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:27.232" level="INFO">${GPIO_OVERHEAD} = {'time': [0.037881222, 0.037891083, 0.037907083, 0.037915153, 0.037923958, 0.037940764, 0.037950333, 0.037966125, 0.037981681, 0.037996486, 0.038007167, 0.038018861, 0.038027306, 0.038037611, 0.038047...</msg>
<status status="PASS" starttime="20201110 08:32:27.216" endtime="20201110 08:32:27.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.242" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:27.240" endtime="20201110 08:32:27.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.247" level="INFO">VALUE: [3.1529999999987957e-06, 3.4439999999982818e-06, 9.651999999998884e-06, 3.02800000000214e-06, 5.389000000001476e-06, 1.0028000000002202e-05, 3.0410000000022364e-06, 8.264000000000882e-06, 9.528000000001702e-06, 7.0280000000061404e-06, 6.153000000001796e-06, 6.7919999999985214e-06, 2.555999999993841e-06, 3.5279999999957012e-06, 5.7779999999979514e-06, 7.276999999999978e-06, 4.277999999996451e-06, 8.51299999999472e-06, 9.403000000005046e-06, 8.125000000004656e-06, 5.180999999999936e-06, 3.4170000000055545e-06, 8.402999999997107e-06, 7.902999999996607e-06, 5.27800000000439e-06]</msg>
<status status="PASS" starttime="20201110 08:32:27.244" endtime="20201110 08:32:27.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.234" endtime="20201110 08:32:27.257"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.264" endtime="20201110 08:32:27.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:27.274" endtime="20201110 08:32:27.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.269" endtime="20201110 08:32:27.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.259" endtime="20201110 08:32:27.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:26.728" endtime="20201110 08:32:27.301"></status>
</kw>
<msg timestamp="20201110 08:32:27.302" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.325" endtime="20201110 08:32:27.339"></status>
</kw>
<msg timestamp="20201110 08:32:27.340" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:27.320" endtime="20201110 08:32:27.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.347" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:27.342" endtime="20201110 08:32:27.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.350" endtime="20201110 08:32:27.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.312" endtime="20201110 08:32:27.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.307" endtime="20201110 08:32:27.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.375" endtime="20201110 08:32:27.697"></status>
</kw>
<msg timestamp="20201110 08:32:27.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042321917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:27.371" endtime="20201110 08:32:27.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042321917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:27.704" endtime="20201110 08:32:27.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.716" endtime="20201110 08:32:27.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.363" endtime="20201110 08:32:27.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.358" endtime="20201110 08:32:27.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.733" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:27.731" endtime="20201110 08:32:27.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.741" level="INFO">VALUE: [{'time': 0.042313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042321917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.042327319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.042334208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.888999999996037e-06, 'source_diff': 6.888999999996037e-06}, {'time': 0.042338486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.27800000000339e-06, 'source_diff': 4.27800000000339e-06}, {'time': 0.042348403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.916999999998177e-06, 'source_diff': 9.916999999998177e-06}, {'time': 0.042355931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.042363958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.027000000000728e-06, 'source_diff': 8.027000000000728e-06}, {'time': 0.042367486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.042371889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.042380292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.042384694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.402000000000572e-06, 'source_diff': 4.402000000000572e-06}, {'time': 0.04238725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.042396889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.638999999998787e-06, 'source_diff': 9.638999999998787e-06}, {'time': 0.042400903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.013999999996631e-06, 'source_diff': 4.013999999996631e-06}, {'time': 0.042411069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0166000000005893e-05, 'source_diff': 1.0166000000005893e-05}, {'time': 0.042421208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0138999999999287e-05, 'source_diff': 1.0138999999999287e-05}, {'time': 0.042429014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.805999999999091e-06, 'source_diff': 7.805999999999091e-06}, {'time': 0.042434764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.042444806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.042453944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.137999999998814e-06, 'source_diff': 9.137999999998814e-06}, {'time': 0.042459125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.042462625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4999999999965614e-06, 'source_diff': 3.4999999999965614e-06}, {'time': 0.042467042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4170000000065546e-06, 'source_diff': 4.4170000000065546e-06}, {'time': 0.042469319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2769999999949775e-06, 'source_diff': 2.2769999999949775e-06}, {'time': 0.042474597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.042477, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.042484292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.042491181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.042498764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.582999999998508e-06, 'source_diff': 7.582999999998508e-06}, {'time': 0.042508111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.346999999999828e-06, 'source_diff': 9.346999999999828e-06}, {'time': 0.042514403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.042519042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.042526097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.042535347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.042540444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.096999999995577e-06, 'source_diff': 5.096999999995577e-06}, {'time': 0.042548417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.973000000001396e-06, 'source_diff': 7.973000000001396e-06}, {'time': 0.042555472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.042563958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.486000000001992e-06, 'source_diff': 8.486000000001992e-06}, {'time': 0.042569486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.042576778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.29200000000596e-06, 'source_diff': 7.29200000000596e-06}, {'time': 0.042585556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999994013e-06, 'source_diff': 8.777999999994013e-06}, {'time': 0.042595569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013000000003158e-05, 'source_diff': 1.0013000000003158e-05}, {'time': 0.042600986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.042606264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.042616306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0042000000001772e-05, 'source_diff': 1.0042000000001772e-05}, {'time': 0.042624972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.665999999997454e-06, 'source_diff': 8.665999999997454e-06}, {'time': 0.042629264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.042635153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.889000000001976e-06, 'source_diff': 5.889000000001976e-06}, {'time': 0.042644278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:27.735" endtime="20201110 08:32:27.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.725" endtime="20201110 08:32:27.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:27.777" level="INFO">${debug-compressed} = {'time': [0.042313625, 0.042321917, 0.042327319, 0.042334208, 0.042338486, 0.042348403, 0.042355931, 0.042363958, 0.042367486, 0.042371889, 0.042380292, 0.042384694, 0.04238725, 0.042396889, 0.0424009...</msg>
<status status="PASS" starttime="20201110 08:32:27.746" endtime="20201110 08:32:27.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.788" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:27.786" endtime="20201110 08:32:27.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.795" level="INFO">VALUE: {'time': [0.042313625, 0.042321917, 0.042327319, 0.042334208, 0.042338486, 0.042348403, 0.042355931, 0.042363958, 0.042367486, 0.042371889, 0.042380292, 0.042384694, 0.04238725, 0.042396889, 0.042400903, 0.042411069, 0.042421208, 0.042429014, 0.042434764, 0.042444806, 0.042453944, 0.042459125, 0.042462625, 0.042467042, 0.042469319, 0.042474597, 0.042477, 0.042484292, 0.042491181, 0.042498764, 0.042508111, 0.042514403, 0.042519042, 0.042526097, 0.042535347, 0.042540444, 0.042548417, 0.042555472, 0.042563958, 0.042569486, 0.042576778, 0.042585556, 0.042595569, 0.042600986, 0.042606264, 0.042616306, 0.042624972, 0.042629264, 0.042635153, 0.042644278], 'diff': [0, 8.292000000000022e-06, 5.402000000001572e-06, 6.888999999996037e-06, 4.27800000000339e-06, 9.916999999998177e-06, 7.527999999999702e-06, 8.027000000000728e-06, 3.52800000000264e-06, 4.403000000000046e-06, 8.402999999997107e-06, 4.402000000000572e-06, 2.55600000000078e-06, 9.638999999998787e-06, 4.013999999996631e-06, 1.0166000000005893e-05, 1.0138999999999287e-05, 7.805999999999091e-06, 5.749999999998812e-06, 1.0042000000001772e-05, 9.137999999998814e-06, 5.180999999999936e-06, 3.4999999999965614e-06, 4.4170000000065546e-06, 2.2769999999949775e-06, 5.27800000000439e-06, 2.4029999999980456e-06, 7.2919999999990215e-06, 6.889000000002976e-06, 7.582999999998508e-06, 9.346999999999828e-06, 6.291999999998021e-06, 4.639000000000726e-06, 7.054999999998868e-06, 9.250000000002312e-06, 5.096999999995577e-06, 7.973000000001396e-06, 7.054999999998868e-06, 8.486000000001992e-06, 5.527999999997701e-06, 7.29200000000596e-06, 8.777999999994013e-06, 1.0013000000003158e-05, 5.417000000000616e-06, 5.277999999997451e-06, 1.0042000000001772e-05, 8.665999999997454e-06, 4.29200000000296e-06, 5.889000000001976e-06, 9.124999999998717e-06], 'source_diff': [0, 8.292000000000022e-06, 5.402000000001572e-06, 6.888999999996037e-06, 4.27800000000339e-06, 9.916999999998177e-06, 7.527999999999702e-06, 8.027000000000728e-06, 3.52800000000264e-06, 4.403000000000046e-06, 8.402999999997107e-06, 4.402000000000572e-06, 2.55600000000078e-06, 9.638999999998787e-06, 4.013999999996631e-06, 1.0166000000005893e-05, 1.0138999999999287e-05, 7.805999999999091e-06, 5.749999999998812e-06, 1.0042000000001772e-05, 9.137999999998814e-06, 5.180999999999936e-06, 3.4999999999965614e-06, 4.4170000000065546e-06, 2.2769999999949775e-06, 5.27800000000439e-06, 2.4029999999980456e-06, 7.2919999999990215e-06, 6.889000000002976e-06, 7.582999999998508e-06, 9.346999999999828e-06, 6.291999999998021e-06, 4.639000000000726e-06, 7.054999999998868e-06, 9.250000000002312e-06, 5.096999999995577e-06, 7.973000000001396e-06, 7.054999999998868e-06, 8.486000000001992e-06, 5.527999999997701e-06, 7.29200000000596e-06, 8.777999999994013e-06, 1.0013000000003158e-05, 5.417000000000616e-06, 5.277999999997451e-06, 1.0042000000001772e-05, 8.665999999997454e-06, 4.29200000000296e-06, 5.889000000001976e-06, 9.124999999998717e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:27.790" endtime="20201110 08:32:27.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.780" endtime="20201110 08:32:27.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:27.807" level="INFO">${RESULT} = [{'time': 0.042321917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.042334208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:27.799" endtime="20201110 08:32:27.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:27.825" level="INFO">${GPIO_OVERHEAD} = {'time': [0.042321917, 0.042334208, 0.042348403, 0.042363958, 0.042371889, 0.042384694, 0.042396889, 0.042411069, 0.042429014, 0.042444806, 0.042459125, 0.042467042, 0.042474597, 0.042484292, 0.042498...</msg>
<status status="PASS" starttime="20201110 08:32:27.809" endtime="20201110 08:32:27.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.836" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:27.833" endtime="20201110 08:32:27.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.841" level="INFO">VALUE: [8.292000000000022e-06, 6.888999999996037e-06, 9.916999999998177e-06, 8.027000000000728e-06, 4.403000000000046e-06, 4.402000000000572e-06, 9.638999999998787e-06, 1.0166000000005893e-05, 7.805999999999091e-06, 1.0042000000001772e-05, 5.180999999999936e-06, 4.4170000000065546e-06, 5.27800000000439e-06, 7.2919999999990215e-06, 7.582999999998508e-06, 6.291999999998021e-06, 7.054999999998868e-06, 5.096999999995577e-06, 7.054999999998868e-06, 5.527999999997701e-06, 8.777999999994013e-06, 5.417000000000616e-06, 1.0042000000001772e-05, 4.29200000000296e-06, 9.124999999998717e-06]</msg>
<status status="PASS" starttime="20201110 08:32:27.838" endtime="20201110 08:32:27.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.827" endtime="20201110 08:32:27.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.850" endtime="20201110 08:32:27.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:27.859" endtime="20201110 08:32:27.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.854" endtime="20201110 08:32:27.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.846" endtime="20201110 08:32:27.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.303" endtime="20201110 08:32:27.884"></status>
</kw>
<msg timestamp="20201110 08:32:27.885" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.906" endtime="20201110 08:32:27.919"></status>
</kw>
<msg timestamp="20201110 08:32:27.920" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:27.901" endtime="20201110 08:32:27.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:27.927" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:27.923" endtime="20201110 08:32:27.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.929" endtime="20201110 08:32:27.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.894" endtime="20201110 08:32:27.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.889" endtime="20201110 08:32:27.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:27.952" endtime="20201110 08:32:28.265"></status>
</kw>
<msg timestamp="20201110 08:32:28.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038287542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038291903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:27.949" endtime="20201110 08:32:28.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038287542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038291903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:28.271" endtime="20201110 08:32:28.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:28.287" endtime="20201110 08:32:28.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.942" endtime="20201110 08:32:28.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.937" endtime="20201110 08:32:28.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.307" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:28.304" endtime="20201110 08:32:28.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.316" level="INFO">VALUE: [{'time': 0.038287542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038291903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.038299056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.038304458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.038307611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1529999999987957e-06, 'source_diff': 3.1529999999987957e-06}, {'time': 0.038311139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.52800000000264e-06, 'source_diff': 3.52800000000264e-06}, {'time': 0.038316194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.038322583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.389000000002476e-06, 'source_diff': 6.389000000002476e-06}, {'time': 0.038332667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0084000000000481e-05, 'source_diff': 1.0084000000000481e-05}, {'time': 0.038336389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.038346292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.038353319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.026999999999728e-06, 'source_diff': 7.026999999999728e-06}, {'time': 0.038360236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.917000000002116e-06, 'source_diff': 6.917000000002116e-06}, {'time': 0.03836675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.038373792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0419999999987715e-06, 'source_diff': 7.0419999999987715e-06}, {'time': 0.038379431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.038385861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.038394986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.038402903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.917000000003116e-06, 'source_diff': 7.917000000003116e-06}, {'time': 0.038409917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.013999999999632e-06, 'source_diff': 7.013999999999632e-06}, {'time': 0.038419444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}, {'time': 0.038425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.55600000000378e-06, 'source_diff': 5.55600000000378e-06}, {'time': 0.038428, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9999999999960614e-06, 'source_diff': 2.9999999999960614e-06}, {'time': 0.038438194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0194000000005032e-05, 'source_diff': 1.0194000000005032e-05}, {'time': 0.038441194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9999999999960614e-06, 'source_diff': 2.9999999999960614e-06}, {'time': 0.038450361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.038456528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166999999994427e-06, 'source_diff': 6.166999999994427e-06}, {'time': 0.038459542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.01400000000257e-06, 'source_diff': 3.01400000000257e-06}, {'time': 0.038462694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.151999999999322e-06, 'source_diff': 3.151999999999322e-06}, {'time': 0.038471458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000001382e-06, 'source_diff': 8.764000000001382e-06}, {'time': 0.038476361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.038484014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.652999999996357e-06, 'source_diff': 7.652999999996357e-06}, {'time': 0.038493292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.278000000001452e-06, 'source_diff': 9.278000000001452e-06}, {'time': 0.038503097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.038512347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.250000000002312e-06, 'source_diff': 9.250000000002312e-06}, {'time': 0.03851475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.038519653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.903000000000546e-06, 'source_diff': 4.903000000000546e-06}, {'time': 0.038526806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.152999999995857e-06, 'source_diff': 7.152999999995857e-06}, {'time': 0.038531972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166000000000892e-06, 'source_diff': 5.166000000000892e-06}, {'time': 0.038538736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.763999999999382e-06, 'source_diff': 6.763999999999382e-06}, {'time': 0.038547389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.653000000004296e-06, 'source_diff': 8.653000000004296e-06}, {'time': 0.038556792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.038566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.791000000002048e-06, 'source_diff': 9.791000000002048e-06}, {'time': 0.038570736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038574764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.027999999996201e-06, 'source_diff': 4.027999999996201e-06}, {'time': 0.038581792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0279999999992016e-06, 'source_diff': 7.0279999999992016e-06}, {'time': 0.038589083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.291000000006487e-06, 'source_diff': 7.291000000006487e-06}, {'time': 0.038591597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.038597875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.038606153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:28.309" endtime="20201110 08:32:28.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.296" endtime="20201110 08:32:28.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:28.355" level="INFO">${debug-compressed} = {'time': [0.038287542, 0.038291903, 0.038299056, 0.038304458, 0.038307611, 0.038311139, 0.038316194, 0.038322583, 0.038332667, 0.038336389, 0.038346292, 0.038353319, 0.038360236, 0.03836675, 0.0383737...</msg>
<status status="PASS" starttime="20201110 08:32:28.322" endtime="20201110 08:32:28.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.366" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:28.363" endtime="20201110 08:32:28.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.373" level="INFO">VALUE: {'time': [0.038287542, 0.038291903, 0.038299056, 0.038304458, 0.038307611, 0.038311139, 0.038316194, 0.038322583, 0.038332667, 0.038336389, 0.038346292, 0.038353319, 0.038360236, 0.03836675, 0.038373792, 0.038379431, 0.038385861, 0.038394986, 0.038402903, 0.038409917, 0.038419444, 0.038425, 0.038428, 0.038438194, 0.038441194, 0.038450361, 0.038456528, 0.038459542, 0.038462694, 0.038471458, 0.038476361, 0.038484014, 0.038493292, 0.038503097, 0.038512347, 0.03851475, 0.038519653, 0.038526806, 0.038531972, 0.038538736, 0.038547389, 0.038556792, 0.038566583, 0.038570736, 0.038574764, 0.038581792, 0.038589083, 0.038591597, 0.038597875, 0.038606153], 'diff': [0, 4.361000000001336e-06, 7.152999999995857e-06, 5.402000000001572e-06, 3.1529999999987957e-06, 3.52800000000264e-06, 5.0549999999968676e-06, 6.389000000002476e-06, 1.0084000000000481e-05, 3.7219999999976716e-06, 9.902999999998607e-06, 7.026999999999728e-06, 6.917000000002116e-06, 6.513999999999132e-06, 7.0419999999987715e-06, 5.639000000001726e-06, 6.430000000001712e-06, 9.124999999998717e-06, 7.917000000003116e-06, 7.013999999999632e-06, 9.52699999999529e-06, 5.55600000000378e-06, 2.9999999999960614e-06, 1.0194000000005032e-05, 2.9999999999960614e-06, 9.167000000004366e-06, 6.166999999994427e-06, 3.01400000000257e-06, 3.151999999999322e-06, 8.764000000001382e-06, 4.903000000000546e-06, 7.652999999996357e-06, 9.278000000001452e-06, 9.805000000001618e-06, 9.250000000002312e-06, 2.4029999999980456e-06, 4.903000000000546e-06, 7.152999999995857e-06, 5.166000000000892e-06, 6.763999999999382e-06, 8.653000000004296e-06, 9.402999999998107e-06, 9.791000000002048e-06, 4.152999999999796e-06, 4.027999999996201e-06, 7.0279999999992016e-06, 7.291000000006487e-06, 2.5139999999951312e-06, 6.2779999999984515e-06, 8.278000000000452e-06], 'source_diff': [0, 4.361000000001336e-06, 7.152999999995857e-06, 5.402000000001572e-06, 3.1529999999987957e-06, 3.52800000000264e-06, 5.0549999999968676e-06, 6.389000000002476e-06, 1.0084000000000481e-05, 3.7219999999976716e-06, 9.902999999998607e-06, 7.026999999999728e-06, 6.917000000002116e-06, 6.513999999999132e-06, 7.0419999999987715e-06, 5.639000000001726e-06, 6.430000000001712e-06, 9.124999999998717e-06, 7.917000000003116e-06, 7.013999999999632e-06, 9.52699999999529e-06, 5.55600000000378e-06, 2.9999999999960614e-06, 1.0194000000005032e-05, 2.9999999999960614e-06, 9.167000000004366e-06, 6.166999999994427e-06, 3.01400000000257e-06, 3.151999999999322e-06, 8.764000000001382e-06, 4.903000000000546e-06, 7.652999999996357e-06, 9.278000000001452e-06, 9.805000000001618e-06, 9.250000000002312e-06, 2.4029999999980456e-06, 4.903000000000546e-06, 7.152999999995857e-06, 5.166000000000892e-06, 6.763999999999382e-06, 8.653000000004296e-06, 9.402999999998107e-06, 9.791000000002048e-06, 4.152999999999796e-06, 4.027999999996201e-06, 7.0279999999992016e-06, 7.291000000006487e-06, 2.5139999999951312e-06, 6.2779999999984515e-06, 8.278000000000452e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:28.368" endtime="20201110 08:32:28.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.357" endtime="20201110 08:32:28.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:28.385" level="INFO">${RESULT} = [{'time': 0.038291903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.361000000001336e-06, 'source_diff': 4.361000000001336e-06}, {'time': 0.038304458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:28.378" endtime="20201110 08:32:28.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:28.405" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038291903, 0.038304458, 0.038311139, 0.038322583, 0.038336389, 0.038353319, 0.03836675, 0.038379431, 0.038394986, 0.038409917, 0.038425, 0.038438194, 0.038450361, 0.038459542, 0.038471458,...</msg>
<status status="PASS" starttime="20201110 08:32:28.388" endtime="20201110 08:32:28.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.416" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:28.413" endtime="20201110 08:32:28.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.421" level="INFO">VALUE: [4.361000000001336e-06, 5.402000000001572e-06, 3.52800000000264e-06, 6.389000000002476e-06, 3.7219999999976716e-06, 7.026999999999728e-06, 6.513999999999132e-06, 5.639000000001726e-06, 9.124999999998717e-06, 7.013999999999632e-06, 5.55600000000378e-06, 1.0194000000005032e-05, 9.167000000004366e-06, 3.01400000000257e-06, 8.764000000001382e-06, 7.652999999996357e-06, 9.805000000001618e-06, 2.4029999999980456e-06, 7.152999999995857e-06, 6.763999999999382e-06, 9.402999999998107e-06, 4.152999999999796e-06, 7.0279999999992016e-06, 2.5139999999951312e-06, 8.278000000000452e-06]</msg>
<status status="PASS" starttime="20201110 08:32:28.418" endtime="20201110 08:32:28.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.407" endtime="20201110 08:32:28.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:28.431" endtime="20201110 08:32:28.434"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:28.440" endtime="20201110 08:32:28.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.436" endtime="20201110 08:32:28.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.427" endtime="20201110 08:32:28.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:27.886" endtime="20201110 08:32:28.467"></status>
</kw>
<msg timestamp="20201110 08:32:28.467" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:28.490" endtime="20201110 08:32:28.505"></status>
</kw>
<msg timestamp="20201110 08:32:28.506" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:28.485" endtime="20201110 08:32:28.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.513" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:28.508" endtime="20201110 08:32:28.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:28.515" endtime="20201110 08:32:28.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.477" endtime="20201110 08:32:28.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.472" endtime="20201110 08:32:28.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:28.540" endtime="20201110 08:32:28.873"></status>
</kw>
<msg timestamp="20201110 08:32:28.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040420458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040423208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:28.537" endtime="20201110 08:32:28.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040420458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040423208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:28.879" endtime="20201110 08:32:28.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:28.892" endtime="20201110 08:32:28.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.529" endtime="20201110 08:32:28.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.524" endtime="20201110 08:32:28.899"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.909" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:28.906" endtime="20201110 08:32:28.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.917" level="INFO">VALUE: [{'time': 0.040420458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040423208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.040429611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.402999999995107e-06, 'source_diff': 6.402999999995107e-06}, {'time': 0.040438403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.040446833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.430000000003712e-06, 'source_diff': 8.430000000003712e-06}, {'time': 0.040452458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.040460042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.58400000000492e-06, 'source_diff': 7.58400000000492e-06}, {'time': 0.040466389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.346999999996827e-06, 'source_diff': 6.346999999996827e-06}, {'time': 0.040473667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.040483472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.805000000001618e-06, 'source_diff': 9.805000000001618e-06}, {'time': 0.040487722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2499999999973115e-06, 'source_diff': 4.2499999999973115e-06}, {'time': 0.040494264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.54200000000521e-06, 'source_diff': 6.54200000000521e-06}, {'time': 0.040497528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2639999999958813e-06, 'source_diff': 3.2639999999958813e-06}, {'time': 0.040501806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.27800000000339e-06, 'source_diff': 4.27800000000339e-06}, {'time': 0.040507847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.040999999998298e-06, 'source_diff': 6.040999999998298e-06}, {'time': 0.040511292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4449999999977554e-06, 'source_diff': 3.4449999999977554e-06}, {'time': 0.040513639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.346999999999766e-06, 'source_diff': 2.346999999999766e-06}, {'time': 0.040517917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.27800000000339e-06, 'source_diff': 4.27800000000339e-06}, {'time': 0.040522708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}, {'time': 0.040527722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.01400000000457e-06, 'source_diff': 5.01400000000457e-06}, {'time': 0.040533, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.040538819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.040543181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.36200000000081e-06, 'source_diff': 4.36200000000081e-06}, {'time': 0.040553208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027000000002728e-05, 'source_diff': 1.0027000000002728e-05}, {'time': 0.040555486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.040562139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.652999999995357e-06, 'source_diff': 6.652999999995357e-06}, {'time': 0.040571681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.542000000001272e-06, 'source_diff': 9.542000000001272e-06}, {'time': 0.040578972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.040587361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.389000000004476e-06, 'source_diff': 8.389000000004476e-06}, {'time': 0.040593042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.681000000000436e-06, 'source_diff': 5.681000000000436e-06}, {'time': 0.040597694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.651999999993883e-06, 'source_diff': 4.651999999993883e-06}, {'time': 0.040600694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.040610222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.04061475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.527999999996701e-06, 'source_diff': 4.527999999996701e-06}, {'time': 0.040622028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.040628681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.653000000002296e-06, 'source_diff': 6.653000000002296e-06}, {'time': 0.040634847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.040640361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.040648292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.931000000002686e-06, 'source_diff': 7.931000000002686e-06}, {'time': 0.040655917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.040661125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.040666125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9999999999980616e-06, 'source_diff': 4.9999999999980616e-06}, {'time': 0.04067175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.040675528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.77800000000289e-06, 'source_diff': 3.77800000000289e-06}, {'time': 0.040685181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.652999999998357e-06, 'source_diff': 9.652999999998357e-06}, {'time': 0.040692736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.554999999999368e-06, 'source_diff': 7.554999999999368e-06}, {'time': 0.040701889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.040707403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.040712306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.902999999993607e-06, 'source_diff': 4.902999999993607e-06}, {'time': 0.040720153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:28.911" endtime="20201110 08:32:28.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.900" endtime="20201110 08:32:28.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:28.960" level="INFO">${debug-compressed} = {'time': [0.040420458, 0.040423208, 0.040429611, 0.040438403, 0.040446833, 0.040452458, 0.040460042, 0.040466389, 0.040473667, 0.040483472, 0.040487722, 0.040494264, 0.040497528, 0.040501806, 0.040507...</msg>
<status status="PASS" starttime="20201110 08:32:28.930" endtime="20201110 08:32:28.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.970" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:28.968" endtime="20201110 08:32:28.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:28.977" level="INFO">VALUE: {'time': [0.040420458, 0.040423208, 0.040429611, 0.040438403, 0.040446833, 0.040452458, 0.040460042, 0.040466389, 0.040473667, 0.040483472, 0.040487722, 0.040494264, 0.040497528, 0.040501806, 0.040507847, 0.040511292, 0.040513639, 0.040517917, 0.040522708, 0.040527722, 0.040533, 0.040538819, 0.040543181, 0.040553208, 0.040555486, 0.040562139, 0.040571681, 0.040578972, 0.040587361, 0.040593042, 0.040597694, 0.040600694, 0.040610222, 0.04061475, 0.040622028, 0.040628681, 0.040634847, 0.040640361, 0.040648292, 0.040655917, 0.040661125, 0.040666125, 0.04067175, 0.040675528, 0.040685181, 0.040692736, 0.040701889, 0.040707403, 0.040712306, 0.040720153], 'diff': [0, 2.7500000000027502e-06, 6.402999999995107e-06, 8.792000000000522e-06, 8.430000000003712e-06, 5.624999999995217e-06, 7.58400000000492e-06, 6.346999999996827e-06, 7.2779999999994516e-06, 9.805000000001618e-06, 4.2499999999973115e-06, 6.54200000000521e-06, 3.2639999999958813e-06, 4.27800000000339e-06, 6.040999999998298e-06, 3.4449999999977554e-06, 2.346999999999766e-06, 4.27800000000339e-06, 4.790999999997048e-06, 5.01400000000457e-06, 5.277999999997451e-06, 5.8189999999971875e-06, 4.36200000000081e-06, 1.0027000000002728e-05, 2.27800000000139e-06, 6.652999999995357e-06, 9.542000000001272e-06, 7.290999999999548e-06, 8.389000000004476e-06, 5.681000000000436e-06, 4.651999999993883e-06, 3.0000000000030003e-06, 9.528000000001702e-06, 4.527999999996701e-06, 7.2779999999994516e-06, 6.653000000002296e-06, 6.166000000001892e-06, 5.5139999999981315e-06, 7.931000000002686e-06, 7.624999999997217e-06, 5.207999999999602e-06, 4.9999999999980616e-06, 5.625000000002156e-06, 3.77800000000289e-06, 9.652999999998357e-06, 7.554999999999368e-06, 9.152999999997857e-06, 5.51400000000507e-06, 4.902999999993607e-06, 7.847000000005266e-06], 'source_diff': [0, 2.7500000000027502e-06, 6.402999999995107e-06, 8.792000000000522e-06, 8.430000000003712e-06, 5.624999999995217e-06, 7.58400000000492e-06, 6.346999999996827e-06, 7.2779999999994516e-06, 9.805000000001618e-06, 4.2499999999973115e-06, 6.54200000000521e-06, 3.2639999999958813e-06, 4.27800000000339e-06, 6.040999999998298e-06, 3.4449999999977554e-06, 2.346999999999766e-06, 4.27800000000339e-06, 4.790999999997048e-06, 5.01400000000457e-06, 5.277999999997451e-06, 5.8189999999971875e-06, 4.36200000000081e-06, 1.0027000000002728e-05, 2.27800000000139e-06, 6.652999999995357e-06, 9.542000000001272e-06, 7.290999999999548e-06, 8.389000000004476e-06, 5.681000000000436e-06, 4.651999999993883e-06, 3.0000000000030003e-06, 9.528000000001702e-06, 4.527999999996701e-06, 7.2779999999994516e-06, 6.653000000002296e-06, 6.166000000001892e-06, 5.5139999999981315e-06, 7.931000000002686e-06, 7.624999999997217e-06, 5.207999999999602e-06, 4.9999999999980616e-06, 5.625000000002156e-06, 3.77800000000289e-06, 9.652999999998357e-06, 7.554999999999368e-06, 9.152999999997857e-06, 5.51400000000507e-06, 4.902999999993607e-06, 7.847000000005266e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:28.972" endtime="20201110 08:32:28.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.962" endtime="20201110 08:32:28.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:28.989" level="INFO">${RESULT} = [{'time': 0.040423208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.040438403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:28.981" endtime="20201110 08:32:28.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:29.008" level="INFO">${GPIO_OVERHEAD} = {'time': [0.040423208, 0.040438403, 0.040452458, 0.040466389, 0.040483472, 0.040494264, 0.040501806, 0.040511292, 0.040517917, 0.040527722, 0.040538819, 0.040553208, 0.040562139, 0.040578972, 0.040593...</msg>
<status status="PASS" starttime="20201110 08:32:28.991" endtime="20201110 08:32:29.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.018" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:29.016" endtime="20201110 08:32:29.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.023" level="INFO">VALUE: [2.7500000000027502e-06, 8.792000000000522e-06, 5.624999999995217e-06, 6.346999999996827e-06, 9.805000000001618e-06, 6.54200000000521e-06, 4.27800000000339e-06, 3.4449999999977554e-06, 4.27800000000339e-06, 5.01400000000457e-06, 5.8189999999971875e-06, 1.0027000000002728e-05, 6.652999999995357e-06, 7.290999999999548e-06, 5.681000000000436e-06, 3.0000000000030003e-06, 4.527999999996701e-06, 6.653000000002296e-06, 5.5139999999981315e-06, 7.624999999997217e-06, 4.9999999999980616e-06, 3.77800000000289e-06, 7.554999999999368e-06, 5.51400000000507e-06, 7.847000000005266e-06]</msg>
<status status="PASS" starttime="20201110 08:32:29.020" endtime="20201110 08:32:29.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.009" endtime="20201110 08:32:29.026"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.032" endtime="20201110 08:32:29.035"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:29.041" endtime="20201110 08:32:29.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.037" endtime="20201110 08:32:29.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.028" endtime="20201110 08:32:29.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:28.468" endtime="20201110 08:32:29.067"></status>
</kw>
<msg timestamp="20201110 08:32:29.067" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.089" endtime="20201110 08:32:29.103"></status>
</kw>
<msg timestamp="20201110 08:32:29.104" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:29.084" endtime="20201110 08:32:29.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.110" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:29.106" endtime="20201110 08:32:29.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.113" endtime="20201110 08:32:29.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.076" endtime="20201110 08:32:29.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.072" endtime="20201110 08:32:29.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.136" endtime="20201110 08:32:29.454"></status>
</kw>
<msg timestamp="20201110 08:32:29.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038614917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:29.133" endtime="20201110 08:32:29.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038614917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:29.460" endtime="20201110 08:32:29.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.473" endtime="20201110 08:32:29.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.126" endtime="20201110 08:32:29.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.121" endtime="20201110 08:32:29.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.490" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:29.487" endtime="20201110 08:32:29.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.498" level="INFO">VALUE: [{'time': 0.038609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038614917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.038624778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.860999999999898e-06, 'source_diff': 9.860999999999898e-06}, {'time': 0.038630972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.038636833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.038645111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.038648764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.038656431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.038661458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027000000004667e-06, 'source_diff': 5.027000000004667e-06}, {'time': 0.038664486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.027999999995201e-06, 'source_diff': 3.027999999995201e-06}, {'time': 0.038670014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.038678917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.038686194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.038691722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.038697, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.27800000000439e-06, 'source_diff': 5.27800000000439e-06}, {'time': 0.038702403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.038711944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.540999999994859e-06, 'source_diff': 9.540999999994859e-06}, {'time': 0.038717708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.76400000000532e-06, 'source_diff': 5.76400000000532e-06}, {'time': 0.038727611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.038734278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.666999999994927e-06, 'source_diff': 6.666999999994927e-06}, {'time': 0.038741806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.038750944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138000000005753e-06, 'source_diff': 9.138000000005753e-06}, {'time': 0.038754347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.038759264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.917000000000116e-06, 'source_diff': 4.917000000000116e-06}, {'time': 0.038768653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.038773069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416000000000142e-06, 'source_diff': 4.416000000000142e-06}, {'time': 0.038775583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.038782986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.038790417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.431000000002186e-06, 'source_diff': 7.431000000002186e-06}, {'time': 0.038796556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.038803597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.040999999999298e-06, 'source_diff': 7.040999999999298e-06}, {'time': 0.038808389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.791999999996521e-06, 'source_diff': 4.791999999996521e-06}, {'time': 0.038816403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.038821056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.653000000000296e-06, 'source_diff': 4.653000000000296e-06}, {'time': 0.038823708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.651999999998822e-06, 'source_diff': 2.651999999998822e-06}, {'time': 0.038831236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.038839264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.038846833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.568999999998938e-06, 'source_diff': 7.568999999998938e-06}, {'time': 0.038853556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.038858958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.038862611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.038865264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.038873736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.472000000002422e-06, 'source_diff': 8.472000000002422e-06}, {'time': 0.038880569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.038884903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.33400000000167e-06, 'source_diff': 4.33400000000167e-06}, {'time': 0.038889625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.038893028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4030000000059846e-06, 'source_diff': 3.4030000000059846e-06}, {'time': 0.038902819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.79099999999511e-06, 'source_diff': 9.79099999999511e-06}, {'time': 0.038910708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.889000000003976e-06, 'source_diff': 7.889000000003976e-06}, {'time': 0.03891425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.541999999995271e-06, 'source_diff': 3.541999999995271e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:29.492" endtime="20201110 08:32:29.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.481" endtime="20201110 08:32:29.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:29.534" level="INFO">${debug-compressed} = {'time': [0.038609097, 0.038614917, 0.038624778, 0.038630972, 0.038636833, 0.038645111, 0.038648764, 0.038656431, 0.038661458, 0.038664486, 0.038670014, 0.038678917, 0.038686194, 0.038691722, 0.038697...</msg>
<status status="PASS" starttime="20201110 08:32:29.504" endtime="20201110 08:32:29.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.543" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:29.541" endtime="20201110 08:32:29.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.550" level="INFO">VALUE: {'time': [0.038609097, 0.038614917, 0.038624778, 0.038630972, 0.038636833, 0.038645111, 0.038648764, 0.038656431, 0.038661458, 0.038664486, 0.038670014, 0.038678917, 0.038686194, 0.038691722, 0.038697, 0.038702403, 0.038711944, 0.038717708, 0.038727611, 0.038734278, 0.038741806, 0.038750944, 0.038754347, 0.038759264, 0.038768653, 0.038773069, 0.038775583, 0.038782986, 0.038790417, 0.038796556, 0.038803597, 0.038808389, 0.038816403, 0.038821056, 0.038823708, 0.038831236, 0.038839264, 0.038846833, 0.038853556, 0.038858958, 0.038862611, 0.038865264, 0.038873736, 0.038880569, 0.038884903, 0.038889625, 0.038893028, 0.038902819, 0.038910708, 0.03891425], 'diff': [0, 5.819999999996661e-06, 9.860999999999898e-06, 6.194000000001032e-06, 5.861000000002836e-06, 8.278000000000452e-06, 3.6529999999992957e-06, 7.666999999995927e-06, 5.027000000004667e-06, 3.027999999995201e-06, 5.52800000000464e-06, 8.902999999997607e-06, 7.276999999999978e-06, 5.527999999997701e-06, 5.27800000000439e-06, 5.403000000001046e-06, 9.540999999994859e-06, 5.76400000000532e-06, 9.902999999998607e-06, 6.666999999994927e-06, 7.527999999999702e-06, 9.138000000005753e-06, 3.4029999999990457e-06, 4.917000000000116e-06, 9.388999999998537e-06, 4.416000000000142e-06, 2.51400000000207e-06, 7.402999999996107e-06, 7.431000000002186e-06, 6.139000000002226e-06, 7.040999999999298e-06, 4.791999999996521e-06, 8.014000000000632e-06, 4.653000000000296e-06, 2.651999999998822e-06, 7.527999999999702e-06, 8.028000000000202e-06, 7.568999999998938e-06, 6.7230000000001455e-06, 5.402000000001572e-06, 3.6529999999992957e-06, 2.6529999999982956e-06, 8.472000000002422e-06, 6.8329999999977575e-06, 4.33400000000167e-06, 4.721999999998672e-06, 3.4030000000059846e-06, 9.79099999999511e-06, 7.889000000003976e-06, 3.541999999995271e-06], 'source_diff': [0, 5.819999999996661e-06, 9.860999999999898e-06, 6.194000000001032e-06, 5.861000000002836e-06, 8.278000000000452e-06, 3.6529999999992957e-06, 7.666999999995927e-06, 5.027000000004667e-06, 3.027999999995201e-06, 5.52800000000464e-06, 8.902999999997607e-06, 7.276999999999978e-06, 5.527999999997701e-06, 5.27800000000439e-06, 5.403000000001046e-06, 9.540999999994859e-06, 5.76400000000532e-06, 9.902999999998607e-06, 6.666999999994927e-06, 7.527999999999702e-06, 9.138000000005753e-06, 3.4029999999990457e-06, 4.917000000000116e-06, 9.388999999998537e-06, 4.416000000000142e-06, 2.51400000000207e-06, 7.402999999996107e-06, 7.431000000002186e-06, 6.139000000002226e-06, 7.040999999999298e-06, 4.791999999996521e-06, 8.014000000000632e-06, 4.653000000000296e-06, 2.651999999998822e-06, 7.527999999999702e-06, 8.028000000000202e-06, 7.568999999998938e-06, 6.7230000000001455e-06, 5.402000000001572e-06, 3.6529999999992957e-06, 2.6529999999982956e-06, 8.472000000002422e-06, 6.8329999999977575e-06, 4.33400000000167e-06, 4.721999999998672e-06, 3.4030000000059846e-06, 9.79099999999511e-06, 7.889000000003976e-06, 3.541999999995271e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:29.546" endtime="20201110 08:32:29.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.536" endtime="20201110 08:32:29.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:29.562" level="INFO">${RESULT} = [{'time': 0.038614917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.819999999996661e-06, 'source_diff': 5.819999999996661e-06}, {'time': 0.038630972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:29.555" endtime="20201110 08:32:29.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:29.581" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038614917, 0.038630972, 0.038645111, 0.038656431, 0.038664486, 0.038678917, 0.038691722, 0.038702403, 0.038717708, 0.038734278, 0.038750944, 0.038759264, 0.038773069, 0.038782986, 0.038796...</msg>
<status status="PASS" starttime="20201110 08:32:29.564" endtime="20201110 08:32:29.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.591" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:29.589" endtime="20201110 08:32:29.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.596" level="INFO">VALUE: [5.819999999996661e-06, 6.194000000001032e-06, 8.278000000000452e-06, 7.666999999995927e-06, 3.027999999995201e-06, 8.902999999997607e-06, 5.527999999997701e-06, 5.403000000001046e-06, 5.76400000000532e-06, 6.666999999994927e-06, 9.138000000005753e-06, 4.917000000000116e-06, 4.416000000000142e-06, 7.402999999996107e-06, 6.139000000002226e-06, 4.791999999996521e-06, 4.653000000000296e-06, 7.527999999999702e-06, 7.568999999998938e-06, 5.402000000001572e-06, 2.6529999999982956e-06, 6.8329999999977575e-06, 4.721999999998672e-06, 9.79099999999511e-06, 3.541999999995271e-06]</msg>
<status status="PASS" starttime="20201110 08:32:29.593" endtime="20201110 08:32:29.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.583" endtime="20201110 08:32:29.599"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.606" endtime="20201110 08:32:29.608"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:29.614" endtime="20201110 08:32:29.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.610" endtime="20201110 08:32:29.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.601" endtime="20201110 08:32:29.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.068" endtime="20201110 08:32:29.640"></status>
</kw>
<msg timestamp="20201110 08:32:29.640" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.662" endtime="20201110 08:32:29.675"></status>
</kw>
<msg timestamp="20201110 08:32:29.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:29.657" endtime="20201110 08:32:29.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:29.682" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:29.678" endtime="20201110 08:32:29.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.685" endtime="20201110 08:32:29.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.649" endtime="20201110 08:32:29.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.645" endtime="20201110 08:32:29.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:29.708" endtime="20201110 08:32:30.024"></status>
</kw>
<msg timestamp="20201110 08:32:30.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038596222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038601333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:29.705" endtime="20201110 08:32:30.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038596222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038601333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:30.031" endtime="20201110 08:32:30.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.043" endtime="20201110 08:32:30.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.698" endtime="20201110 08:32:30.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.693" endtime="20201110 08:32:30.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.060" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:30.058" endtime="20201110 08:32:30.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.068" level="INFO">VALUE: [{'time': 0.038596222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038601333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.038607861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.038616764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.038622542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.038632069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.52699999999529e-06, 'source_diff': 9.52699999999529e-06}, {'time': 0.038638222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.0386445, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.038648153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.038653931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.77800000000489e-06, 'source_diff': 5.77800000000489e-06}, {'time': 0.038661222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.038665236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.013999999996631e-06, 'source_diff': 4.013999999996631e-06}, {'time': 0.038671431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.195000000000506e-06, 'source_diff': 6.195000000000506e-06}, {'time': 0.038677806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.038681986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.038688972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.986000000000492e-06, 'source_diff': 6.986000000000492e-06}, {'time': 0.03869175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.777999999994951e-06, 'source_diff': 2.777999999994951e-06}, {'time': 0.038697778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.038706569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.791000000001048e-06, 'source_diff': 8.791000000001048e-06}, {'time': 0.038715028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.458999999995387e-06, 'source_diff': 8.458999999995387e-06}, {'time': 0.03872275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.038728903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.038737931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.038743958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.026999999998728e-06, 'source_diff': 6.026999999998728e-06}, {'time': 0.03874825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.038753278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.038757319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.0409999999962976e-06, 'source_diff': 4.0409999999962976e-06}, {'time': 0.038765194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.875000000004406e-06, 'source_diff': 7.875000000004406e-06}, {'time': 0.038770486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.038774139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.038776528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.038784569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.041000000000298e-06, 'source_diff': 8.041000000000298e-06}, {'time': 0.038790833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2639999999988816e-06, 'source_diff': 6.2639999999988816e-06}, {'time': 0.038799625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.038807639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.014000000000632e-06, 'source_diff': 8.014000000000632e-06}, {'time': 0.038813792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.038816458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.038821972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.038832125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.038836403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.277999999996451e-06, 'source_diff': 4.277999999996451e-06}, {'time': 0.038839069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.665999999998392e-06, 'source_diff': 2.665999999998392e-06}, {'time': 0.038841389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3200000000000998e-06, 'source_diff': 2.3200000000000998e-06}, {'time': 0.038846875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.486000000005931e-06, 'source_diff': 5.486000000005931e-06}, {'time': 0.038854792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.916999999996177e-06, 'source_diff': 7.916999999996177e-06}, {'time': 0.038861444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.652000000002822e-06, 'source_diff': 6.652000000002822e-06}, {'time': 0.038863917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.472999999995895e-06, 'source_diff': 2.472999999995895e-06}, {'time': 0.038866486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.569000000000876e-06, 'source_diff': 2.569000000000876e-06}, {'time': 0.038875264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.038878667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.038887069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.402000000004572e-06, 'source_diff': 8.402000000004572e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:30.062" endtime="20201110 08:32:30.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.052" endtime="20201110 08:32:30.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:30.106" level="INFO">${debug-compressed} = {'time': [0.038596222, 0.038601333, 0.038607861, 0.038616764, 0.038622542, 0.038632069, 0.038638222, 0.0386445, 0.038648153, 0.038653931, 0.038661222, 0.038665236, 0.038671431, 0.038677806, 0.03868198...</msg>
<status status="PASS" starttime="20201110 08:32:30.074" endtime="20201110 08:32:30.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.123" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:30.119" endtime="20201110 08:32:30.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.135" level="INFO">VALUE: {'time': [0.038596222, 0.038601333, 0.038607861, 0.038616764, 0.038622542, 0.038632069, 0.038638222, 0.0386445, 0.038648153, 0.038653931, 0.038661222, 0.038665236, 0.038671431, 0.038677806, 0.038681986, 0.038688972, 0.03869175, 0.038697778, 0.038706569, 0.038715028, 0.03872275, 0.038728903, 0.038737931, 0.038743958, 0.03874825, 0.038753278, 0.038757319, 0.038765194, 0.038770486, 0.038774139, 0.038776528, 0.038784569, 0.038790833, 0.038799625, 0.038807639, 0.038813792, 0.038816458, 0.038821972, 0.038832125, 0.038836403, 0.038839069, 0.038841389, 0.038846875, 0.038854792, 0.038861444, 0.038863917, 0.038866486, 0.038875264, 0.038878667, 0.038887069], 'diff': [0, 5.111000000002086e-06, 6.5279999999987015e-06, 8.902999999997607e-06, 5.77800000000489e-06, 9.52699999999529e-06, 6.153000000001796e-06, 6.2779999999984515e-06, 3.6529999999992957e-06, 5.77800000000489e-06, 7.290999999999548e-06, 4.013999999996631e-06, 6.195000000000506e-06, 6.375000000002906e-06, 4.179999999999462e-06, 6.986000000000492e-06, 2.777999999994951e-06, 6.02800000000514e-06, 8.791000000001048e-06, 8.458999999995387e-06, 7.722000000001672e-06, 6.153000000001796e-06, 9.028000000001202e-06, 6.026999999998728e-06, 4.291999999996021e-06, 5.02800000000414e-06, 4.0409999999962976e-06, 7.875000000004406e-06, 5.291999999997021e-06, 3.6529999999992957e-06, 2.3889999999984757e-06, 8.041000000000298e-06, 6.2639999999988816e-06, 8.792000000000522e-06, 8.014000000000632e-06, 6.153000000001796e-06, 2.665999999998392e-06, 5.51400000000507e-06, 1.0152999999998857e-05, 4.277999999996451e-06, 2.665999999998392e-06, 2.3200000000000998e-06, 5.486000000005931e-06, 7.916999999996177e-06, 6.652000000002822e-06, 2.472999999995895e-06, 2.569000000000876e-06, 8.778000000000952e-06, 3.4029999999990457e-06, 8.402000000004572e-06], 'source_diff': [0, 5.111000000002086e-06, 6.5279999999987015e-06, 8.902999999997607e-06, 5.77800000000489e-06, 9.52699999999529e-06, 6.153000000001796e-06, 6.2779999999984515e-06, 3.6529999999992957e-06, 5.77800000000489e-06, 7.290999999999548e-06, 4.013999999996631e-06, 6.195000000000506e-06, 6.375000000002906e-06, 4.179999999999462e-06, 6.986000000000492e-06, 2.777999999994951e-06, 6.02800000000514e-06, 8.791000000001048e-06, 8.458999999995387e-06, 7.722000000001672e-06, 6.153000000001796e-06, 9.028000000001202e-06, 6.026999999998728e-06, 4.291999999996021e-06, 5.02800000000414e-06, 4.0409999999962976e-06, 7.875000000004406e-06, 5.291999999997021e-06, 3.6529999999992957e-06, 2.3889999999984757e-06, 8.041000000000298e-06, 6.2639999999988816e-06, 8.792000000000522e-06, 8.014000000000632e-06, 6.153000000001796e-06, 2.665999999998392e-06, 5.51400000000507e-06, 1.0152999999998857e-05, 4.277999999996451e-06, 2.665999999998392e-06, 2.3200000000000998e-06, 5.486000000005931e-06, 7.916999999996177e-06, 6.652000000002822e-06, 2.472999999995895e-06, 2.569000000000876e-06, 8.778000000000952e-06, 3.4029999999990457e-06, 8.402000000004572e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:30.130" endtime="20201110 08:32:30.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.112" endtime="20201110 08:32:30.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:30.155" level="INFO">${RESULT} = [{'time': 0.038601333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.038616764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:30.140" endtime="20201110 08:32:30.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:30.180" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038601333, 0.038616764, 0.038632069, 0.0386445, 0.038653931, 0.038665236, 0.038677806, 0.038688972, 0.038697778, 0.038715028, 0.038728903, 0.038743958, 0.038753278, 0.038765194, 0.03877413...</msg>
<status status="PASS" starttime="20201110 08:32:30.159" endtime="20201110 08:32:30.180"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.191" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:30.188" endtime="20201110 08:32:30.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.196" level="INFO">VALUE: [5.111000000002086e-06, 8.902999999997607e-06, 9.52699999999529e-06, 6.2779999999984515e-06, 5.77800000000489e-06, 4.013999999996631e-06, 6.375000000002906e-06, 6.986000000000492e-06, 6.02800000000514e-06, 8.458999999995387e-06, 6.153000000001796e-06, 6.026999999998728e-06, 5.02800000000414e-06, 7.875000000004406e-06, 3.6529999999992957e-06, 8.041000000000298e-06, 8.792000000000522e-06, 6.153000000001796e-06, 5.51400000000507e-06, 4.277999999996451e-06, 2.3200000000000998e-06, 7.916999999996177e-06, 2.472999999995895e-06, 8.778000000000952e-06, 8.402000000004572e-06]</msg>
<status status="PASS" starttime="20201110 08:32:30.193" endtime="20201110 08:32:30.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.182" endtime="20201110 08:32:30.199"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.206" endtime="20201110 08:32:30.209"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:30.215" endtime="20201110 08:32:30.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.210" endtime="20201110 08:32:30.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.201" endtime="20201110 08:32:30.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:29.641" endtime="20201110 08:32:30.241"></status>
</kw>
<msg timestamp="20201110 08:32:30.242" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.265" endtime="20201110 08:32:30.279"></status>
</kw>
<msg timestamp="20201110 08:32:30.280" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:30.259" endtime="20201110 08:32:30.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:30.283" endtime="20201110 08:32:30.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.289" endtime="20201110 08:32:30.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.252" endtime="20201110 08:32:30.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.247" endtime="20201110 08:32:30.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.336" endtime="20201110 08:32:30.688"></status>
</kw>
<msg timestamp="20201110 08:32:30.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040748708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:30.328" endtime="20201110 08:32:30.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040748708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:30.695" endtime="20201110 08:32:30.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.707" endtime="20201110 08:32:30.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.309" endtime="20201110 08:32:30.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.298" endtime="20201110 08:32:30.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.724" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:30.722" endtime="20201110 08:32:30.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.732" level="INFO">VALUE: [{'time': 0.040748708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040758611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.040766389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.777999999999952e-06, 'source_diff': 7.777999999999952e-06}, {'time': 0.040776583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0193999999998093e-05, 'source_diff': 1.0193999999998093e-05}, {'time': 0.040783083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.499999999999562e-06, 'source_diff': 6.499999999999562e-06}, {'time': 0.040789111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.040799125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0013999999995693e-05, 'source_diff': 1.0013999999995693e-05}, {'time': 0.040805819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.694000000001532e-06, 'source_diff': 6.694000000001532e-06}, {'time': 0.040809931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.11200000000056e-06, 'source_diff': 4.11200000000056e-06}, {'time': 0.040812458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5270000000021664e-06, 'source_diff': 2.5270000000021664e-06}, {'time': 0.040818486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.040824764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.040828417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.040835819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402000000003572e-06, 'source_diff': 7.402000000003572e-06}, {'time': 0.040844597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.040847625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.027999999995201e-06, 'source_diff': 3.027999999995201e-06}, {'time': 0.040855042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.040860458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.416000000001142e-06, 'source_diff': 5.416000000001142e-06}, {'time': 0.040869722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.263999999994943e-06, 'source_diff': 9.263999999994943e-06}, {'time': 0.04087975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.040889903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 1.0152999999998857e-05, 'source_diff': 1.0152999999998857e-05}, {'time': 0.040899931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0028000000002202e-05, 'source_diff': 1.0028000000002202e-05}, {'time': 0.040908708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777000000001478e-06, 'source_diff': 8.777000000001478e-06}, {'time': 0.040914486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.040920264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.7779999999979514e-06, 'source_diff': 5.7779999999979514e-06}, {'time': 0.040929292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.040937694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.401999999997634e-06, 'source_diff': 8.401999999997634e-06}, {'time': 0.040945486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.79200000000646e-06, 'source_diff': 7.79200000000646e-06}, {'time': 0.0409545, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.013999999994693e-06, 'source_diff': 9.013999999994693e-06}, {'time': 0.040960903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.040965931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.027999999997201e-06, 'source_diff': 5.027999999997201e-06}, {'time': 0.040970583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.652000000000822e-06, 'source_diff': 4.652000000000822e-06}, {'time': 0.040978236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.653000000003296e-06, 'source_diff': 7.653000000003296e-06}, {'time': 0.040984444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.208000000000602e-06, 'source_diff': 6.208000000000602e-06}, {'time': 0.040990806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361999999995871e-06, 'source_diff': 6.361999999995871e-06}, {'time': 0.040993083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2770000000019164e-06, 'source_diff': 2.2770000000019164e-06}, {'time': 0.040995625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.040998389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.76400000000232e-06, 'source_diff': 2.76400000000232e-06}, {'time': 0.041002111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.041011569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.457999999996913e-06, 'source_diff': 9.457999999996913e-06}, {'time': 0.041016597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.02800000000414e-06, 'source_diff': 5.02800000000414e-06}, {'time': 0.041019014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.041028028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.041034806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.041037208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.041039486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.041048889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.402999999998107e-06, 'source_diff': 9.402999999998107e-06}, {'time': 0.041057792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.903000000004546e-06, 'source_diff': 8.903000000004546e-06}, {'time': 0.041063986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.193999999994093e-06, 'source_diff': 6.193999999994093e-06}, {'time': 0.041069222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2360000000056806e-06, 'source_diff': 5.2360000000056806e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:30.726" endtime="20201110 08:32:30.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.716" endtime="20201110 08:32:30.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:30.767" level="INFO">${debug-compressed} = {'time': [0.040748708, 0.040758611, 0.040766389, 0.040776583, 0.040783083, 0.040789111, 0.040799125, 0.040805819, 0.040809931, 0.040812458, 0.040818486, 0.040824764, 0.040828417, 0.040835819, 0.040844...</msg>
<status status="PASS" starttime="20201110 08:32:30.738" endtime="20201110 08:32:30.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.777" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:30.775" endtime="20201110 08:32:30.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.786" level="INFO">VALUE: {'time': [0.040748708, 0.040758611, 0.040766389, 0.040776583, 0.040783083, 0.040789111, 0.040799125, 0.040805819, 0.040809931, 0.040812458, 0.040818486, 0.040824764, 0.040828417, 0.040835819, 0.040844597, 0.040847625, 0.040855042, 0.040860458, 0.040869722, 0.04087975, 0.040889903, 0.040899931, 0.040908708, 0.040914486, 0.040920264, 0.040929292, 0.040937694, 0.040945486, 0.0409545, 0.040960903, 0.040965931, 0.040970583, 0.040978236, 0.040984444, 0.040990806, 0.040993083, 0.040995625, 0.040998389, 0.041002111, 0.041011569, 0.041016597, 0.041019014, 0.041028028, 0.041034806, 0.041037208, 0.041039486, 0.041048889, 0.041057792, 0.041063986, 0.041069222], 'diff': [0, 9.902999999998607e-06, 7.777999999999952e-06, 1.0193999999998093e-05, 6.499999999999562e-06, 6.02800000000514e-06, 1.0013999999995693e-05, 6.694000000001532e-06, 4.11200000000056e-06, 2.5270000000021664e-06, 6.0279999999982015e-06, 6.2779999999984515e-06, 3.6529999999992957e-06, 7.402000000003572e-06, 8.778000000000952e-06, 3.027999999995201e-06, 7.417000000002616e-06, 5.416000000001142e-06, 9.263999999994943e-06, 1.0028000000002202e-05, 1.0152999999998857e-05, 1.0028000000002202e-05, 8.777000000001478e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 9.028000000001202e-06, 8.401999999997634e-06, 7.79200000000646e-06, 9.013999999994693e-06, 6.403000000002046e-06, 5.027999999997201e-06, 4.652000000000822e-06, 7.653000000003296e-06, 6.208000000000602e-06, 6.361999999995871e-06, 2.2770000000019164e-06, 2.54200000000121e-06, 2.76400000000232e-06, 3.7219999999976716e-06, 9.457999999996913e-06, 5.02800000000414e-06, 2.4169999999976155e-06, 9.014000000001632e-06, 6.7779999999989515e-06, 2.401999999998572e-06, 2.27800000000139e-06, 9.402999999998107e-06, 8.903000000004546e-06, 6.193999999994093e-06, 5.2360000000056806e-06], 'source_diff': [0, 9.902999999998607e-06, 7.777999999999952e-06, 1.0193999999998093e-05, 6.499999999999562e-06, 6.02800000000514e-06, 1.0013999999995693e-05, 6.694000000001532e-06, 4.11200000000056e-06, 2.5270000000021664e-06, 6.0279999999982015e-06, 6.2779999999984515e-06, 3.6529999999992957e-06, 7.402000000003572e-06, 8.778000000000952e-06, 3.027999999995201e-06, 7.417000000002616e-06, 5.416000000001142e-06, 9.263999999994943e-06, 1.0028000000002202e-05, 1.0152999999998857e-05, 1.0028000000002202e-05, 8.777000000001478e-06, 5.7779999999979514e-06, 5.7779999999979514e-06, 9.028000000001202e-06, 8.401999999997634e-06, 7.79200000000646e-06, 9.013999999994693e-06, 6.403000000002046e-06, 5.027999999997201e-06, 4.652000000000822e-06, 7.653000000003296e-06, 6.208000000000602e-06, 6.361999999995871e-06, 2.2770000000019164e-06, 2.54200000000121e-06, 2.76400000000232e-06, 3.7219999999976716e-06, 9.457999999996913e-06, 5.02800000000414e-06, 2.4169999999976155e-06, 9.014000000001632e-06, 6.7779999999989515e-06, 2.401999999998572e-06, 2.27800000000139e-06, 9.402999999998107e-06, 8.903000000004546e-06, 6.193999999994093e-06, 5.2360000000056806e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:30.779" endtime="20201110 08:32:30.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.769" endtime="20201110 08:32:30.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:30.800" level="INFO">${RESULT} = [{'time': 0.040758611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.902999999998607e-06, 'source_diff': 9.902999999998607e-06}, {'time': 0.040776583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:30.792" endtime="20201110 08:32:30.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:30.819" level="INFO">${GPIO_OVERHEAD} = {'time': [0.040758611, 0.040776583, 0.040789111, 0.040805819, 0.040812458, 0.040824764, 0.040835819, 0.040847625, 0.040860458, 0.04087975, 0.040899931, 0.040914486, 0.040929292, 0.040945486, 0.0409609...</msg>
<status status="PASS" starttime="20201110 08:32:30.802" endtime="20201110 08:32:30.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.829" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:30.827" endtime="20201110 08:32:30.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.834" level="INFO">VALUE: [9.902999999998607e-06, 1.0193999999998093e-05, 6.02800000000514e-06, 6.694000000001532e-06, 2.5270000000021664e-06, 6.2779999999984515e-06, 7.402000000003572e-06, 3.027999999995201e-06, 5.416000000001142e-06, 1.0028000000002202e-05, 1.0028000000002202e-05, 5.7779999999979514e-06, 9.028000000001202e-06, 7.79200000000646e-06, 6.403000000002046e-06, 4.652000000000822e-06, 6.208000000000602e-06, 2.2770000000019164e-06, 2.76400000000232e-06, 9.457999999996913e-06, 2.4169999999976155e-06, 6.7779999999989515e-06, 2.27800000000139e-06, 8.903000000004546e-06, 5.2360000000056806e-06]</msg>
<status status="PASS" starttime="20201110 08:32:30.831" endtime="20201110 08:32:30.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.821" endtime="20201110 08:32:30.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.844" endtime="20201110 08:32:30.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:30.852" endtime="20201110 08:32:30.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.848" endtime="20201110 08:32:30.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.839" endtime="20201110 08:32:30.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.243" endtime="20201110 08:32:30.878"></status>
</kw>
<msg timestamp="20201110 08:32:30.878" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.900" endtime="20201110 08:32:30.913"></status>
</kw>
<msg timestamp="20201110 08:32:30.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:30.895" endtime="20201110 08:32:30.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:30.921" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:30.917" endtime="20201110 08:32:30.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.923" endtime="20201110 08:32:30.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.888" endtime="20201110 08:32:30.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.883" endtime="20201110 08:32:30.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:30.947" endtime="20201110 08:32:31.264"></status>
</kw>
<msg timestamp="20201110 08:32:31.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038654125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:30.944" endtime="20201110 08:32:31.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038654125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:31.270" endtime="20201110 08:32:31.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.283" endtime="20201110 08:32:31.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.936" endtime="20201110 08:32:31.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.932" endtime="20201110 08:32:31.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.300" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:32:31.297" endtime="20201110 08:32:31.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.308" level="INFO">VALUE: [{'time': 0.038646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038654125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038663417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.292000000001022e-06, 'source_diff': 9.292000000001022e-06}, {'time': 0.038671222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.038677361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.139000000002226e-06, 'source_diff': 6.139000000002226e-06}, {'time': 0.038681625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.263999999996881e-06, 'source_diff': 4.263999999996881e-06}, {'time': 0.038691153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.038701069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.915999999998704e-06, 'source_diff': 9.915999999998704e-06}, {'time': 0.038704972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.038707528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.55600000000078e-06, 'source_diff': 2.55600000000078e-06}, {'time': 0.038711139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.038720667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.528000000001702e-06, 'source_diff': 9.528000000001702e-06}, {'time': 0.038725194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.038733847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000004296e-06, 'source_diff': 8.653000000004296e-06}, {'time': 0.0387395, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.038743653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.152999999999796e-06, 'source_diff': 4.152999999999796e-06}, {'time': 0.038747306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6529999999992957e-06, 'source_diff': 3.6529999999992957e-06}, {'time': 0.038749708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.038755139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.431000000000186e-06, 'source_diff': 5.431000000000186e-06}, {'time': 0.038761139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.038765917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.777999999996951e-06, 'source_diff': 4.777999999996951e-06}, {'time': 0.038775944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.0027000000002728e-05, 'source_diff': 1.0027000000002728e-05}, {'time': 0.038778236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038785514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038787931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.038797222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.291000000001548e-06, 'source_diff': 9.291000000001548e-06}, {'time': 0.038800097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.874999999999406e-06, 'source_diff': 2.874999999999406e-06}, {'time': 0.038808125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.028000000000202e-06, 'source_diff': 8.028000000000202e-06}, {'time': 0.038812153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.02800000000314e-06, 'source_diff': 4.02800000000314e-06}, {'time': 0.038814806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6529999999982956e-06, 'source_diff': 2.6529999999982956e-06}, {'time': 0.038824333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.527000000002228e-06, 'source_diff': 9.527000000002228e-06}, {'time': 0.038827236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9029999999985456e-06, 'source_diff': 2.9029999999985456e-06}, {'time': 0.038833264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038840667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.403000000003046e-06, 'source_diff': 7.403000000003046e-06}, {'time': 0.038843639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9719999999969215e-06, 'source_diff': 2.9719999999969215e-06}, {'time': 0.038846472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.03885525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.778000000000952e-06, 'source_diff': 8.778000000000952e-06}, {'time': 0.038858028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.038865083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.038874472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.388999999998537e-06, 'source_diff': 9.388999999998537e-06}, {'time': 0.038878875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.038885389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.038891292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.038896194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.902000000001072e-06, 'source_diff': 4.902000000001072e-06}, {'time': 0.038901236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.038907139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.903000000001546e-06, 'source_diff': 5.903000000001546e-06}, {'time': 0.038912431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.038920819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.388000000005003e-06, 'source_diff': 8.388000000005003e-06}, {'time': 0.038926097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.038930514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}]</msg>
<status status="PASS" starttime="20201110 08:32:31.302" endtime="20201110 08:32:31.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.291" endtime="20201110 08:32:31.312"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:32:31.343" level="INFO">${debug-compressed} = {'time': [0.038646847, 0.038654125, 0.038663417, 0.038671222, 0.038677361, 0.038681625, 0.038691153, 0.038701069, 0.038704972, 0.038707528, 0.038711139, 0.038720667, 0.038725194, 0.038733847, 0.038739...</msg>
<status status="PASS" starttime="20201110 08:32:31.313" endtime="20201110 08:32:31.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.353" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:32:31.350" endtime="20201110 08:32:31.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.360" level="INFO">VALUE: {'time': [0.038646847, 0.038654125, 0.038663417, 0.038671222, 0.038677361, 0.038681625, 0.038691153, 0.038701069, 0.038704972, 0.038707528, 0.038711139, 0.038720667, 0.038725194, 0.038733847, 0.0387395, 0.038743653, 0.038747306, 0.038749708, 0.038755139, 0.038761139, 0.038765917, 0.038775944, 0.038778236, 0.038785514, 0.038787931, 0.038797222, 0.038800097, 0.038808125, 0.038812153, 0.038814806, 0.038824333, 0.038827236, 0.038833264, 0.038840667, 0.038843639, 0.038846472, 0.03885525, 0.038858028, 0.038865083, 0.038874472, 0.038878875, 0.038885389, 0.038891292, 0.038896194, 0.038901236, 0.038907139, 0.038912431, 0.038920819, 0.038926097, 0.038930514], 'diff': [0, 7.2779999999994516e-06, 9.292000000001022e-06, 7.804999999999618e-06, 6.139000000002226e-06, 4.263999999996881e-06, 9.528000000001702e-06, 9.915999999998704e-06, 3.902999999999546e-06, 2.55600000000078e-06, 3.611000000000586e-06, 9.528000000001702e-06, 4.526999999997228e-06, 8.653000000004296e-06, 5.653000000001296e-06, 4.152999999999796e-06, 3.6529999999992957e-06, 2.401999999998572e-06, 5.431000000000186e-06, 5.999999999999062e-06, 4.777999999996951e-06, 1.0027000000002728e-05, 2.29200000000096e-06, 7.2779999999994516e-06, 2.4169999999976155e-06, 9.291000000001548e-06, 2.874999999999406e-06, 8.028000000000202e-06, 4.02800000000314e-06, 2.6529999999982956e-06, 9.527000000002228e-06, 2.9029999999985456e-06, 6.0279999999982015e-06, 7.403000000003046e-06, 2.9719999999969215e-06, 2.833000000000696e-06, 8.778000000000952e-06, 2.77800000000189e-06, 7.054999999998868e-06, 9.388999999998537e-06, 4.403000000000046e-06, 6.513999999999132e-06, 5.903000000001546e-06, 4.902000000001072e-06, 5.041999999996771e-06, 5.903000000001546e-06, 5.291999999997021e-06, 8.388000000005003e-06, 5.277999999997451e-06, 4.416999999999616e-06], 'source_diff': [0, 7.2779999999994516e-06, 9.292000000001022e-06, 7.804999999999618e-06, 6.139000000002226e-06, 4.263999999996881e-06, 9.528000000001702e-06, 9.915999999998704e-06, 3.902999999999546e-06, 2.55600000000078e-06, 3.611000000000586e-06, 9.528000000001702e-06, 4.526999999997228e-06, 8.653000000004296e-06, 5.653000000001296e-06, 4.152999999999796e-06, 3.6529999999992957e-06, 2.401999999998572e-06, 5.431000000000186e-06, 5.999999999999062e-06, 4.777999999996951e-06, 1.0027000000002728e-05, 2.29200000000096e-06, 7.2779999999994516e-06, 2.4169999999976155e-06, 9.291000000001548e-06, 2.874999999999406e-06, 8.028000000000202e-06, 4.02800000000314e-06, 2.6529999999982956e-06, 9.527000000002228e-06, 2.9029999999985456e-06, 6.0279999999982015e-06, 7.403000000003046e-06, 2.9719999999969215e-06, 2.833000000000696e-06, 8.778000000000952e-06, 2.77800000000189e-06, 7.054999999998868e-06, 9.388999999998537e-06, 4.403000000000046e-06, 6.513999999999132e-06, 5.903000000001546e-06, 4.902000000001072e-06, 5.041999999996771e-06, 5.903000000001546e-06, 5.291999999997021e-06, 8.388000000005003e-06, 5.277999999997451e-06, 4.416999999999616e-06], 'eventsource}</msg>
<status status="PASS" starttime="20201110 08:32:31.355" endtime="20201110 08:32:31.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.345" endtime="20201110 08:32:31.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:31.372" level="INFO">${RESULT} = [{'time': 0.038654125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.038671222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:31.364" endtime="20201110 08:32:31.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:31.390" level="INFO">${GPIO_OVERHEAD} = {'time': [0.038654125, 0.038671222, 0.038681625, 0.038701069, 0.038707528, 0.038720667, 0.038733847, 0.038743653, 0.038749708, 0.038761139, 0.038775944, 0.038785514, 0.038797222, 0.038808125, 0.038814...</msg>
<status status="PASS" starttime="20201110 08:32:31.374" endtime="20201110 08:32:31.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.401" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:32:31.398" endtime="20201110 08:32:31.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.406" level="INFO">VALUE: [7.2779999999994516e-06, 7.804999999999618e-06, 4.263999999996881e-06, 9.915999999998704e-06, 2.55600000000078e-06, 9.528000000001702e-06, 8.653000000004296e-06, 4.152999999999796e-06, 2.401999999998572e-06, 5.999999999999062e-06, 1.0027000000002728e-05, 7.2779999999994516e-06, 9.291000000001548e-06, 8.028000000000202e-06, 2.6529999999982956e-06, 2.9029999999985456e-06, 7.403000000003046e-06, 2.833000000000696e-06, 2.77800000000189e-06, 9.388999999998537e-06, 6.513999999999132e-06, 4.902000000001072e-06, 5.903000000001546e-06, 8.388000000005003e-06, 4.416999999999616e-06]</msg>
<status status="PASS" starttime="20201110 08:32:31.403" endtime="20201110 08:32:31.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.392" endtime="20201110 08:32:31.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.416" endtime="20201110 08:32:31.419"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:31.425" endtime="20201110 08:32:31.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.420" endtime="20201110 08:32:31.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.411" endtime="20201110 08:32:31.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:30.879" endtime="20201110 08:32:31.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:19.471" endtime="20201110 08:32:31.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:31.461" endtime="20201110 08:32:31.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.457" endtime="20201110 08:32:31.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.455" endtime="20201110 08:32:31.486"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:19.261" endtime="20201110 08:32:31.486" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:31.503" endtime="20201110 08:32:31.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.499" endtime="20201110 08:32:31.526"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.562" endtime="20201110 08:32:31.580"></status>
</kw>
<msg timestamp="20201110 08:32:31.581" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.558" endtime="20201110 08:32:31.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.588" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.583" endtime="20201110 08:32:31.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.594" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:31.590" endtime="20201110 08:32:31.595"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:31.551" endtime="20201110 08:32:31.597"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:31.544" endtime="20201110 08:32:31.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.542" endtime="20201110 08:32:31.599"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:31.607" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:31.606" endtime="20201110 08:32:31.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.601" endtime="20201110 08:32:31.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.540" endtime="20201110 08:32:31.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.538" endtime="20201110 08:32:31.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.611" endtime="20201110 08:32:31.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.534" endtime="20201110 08:32:31.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.528" endtime="20201110 08:32:31.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.497" endtime="20201110 08:32:31.618"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:32:31.622" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.643" endtime="20201110 08:32:31.658"></status>
</kw>
<msg timestamp="20201110 08:32:31.659" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.639" endtime="20201110 08:32:31.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:31.666" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:31.662" endtime="20201110 08:32:31.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.668" endtime="20201110 08:32:31.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.631" endtime="20201110 08:32:31.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.627" endtime="20201110 08:32:31.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:31.694" endtime="20201110 08:32:32.039"></status>
</kw>
<msg timestamp="20201110 08:32:32.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131782069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:31.690" endtime="20201110 08:32:32.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131782069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131783708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:32.049" endtime="20201110 08:32:32.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.068" endtime="20201110 08:32:32.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.683" endtime="20201110 08:32:32.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.676" endtime="20201110 08:32:32.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:32.086" level="INFO">${RESULT} = [{'time': 0.131783708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.131787847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:32.077" endtime="20201110 08:32:32.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:32.119" level="INFO">${OVERHEAD} = {'time': [0.131783708, 0.131787847, 0.131792625, 0.131799375, 0.131804014, 0.131811917, 0.131816097, 0.131826819, 0.131835972, 0.131847222, 0.131855611, 0.131862139, 0.131872333, 0.131878153, 0.131884...</msg>
<status status="PASS" starttime="20201110 08:32:32.088" endtime="20201110 08:32:32.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.129" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:32.127" endtime="20201110 08:32:32.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.134" level="INFO">VALUE: [1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7080000000169182e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000181122e-06, 1.6389999999977256e-06, 1.610999999984708e-06, 1.651999999990883e-06, 1.6810000000033742e-06, 1.6529999999903566e-06, 1.6110000000124636e-06, 1.6390000000254812e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6949999999960053e-06, 1.6110000000124636e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6389999999977256e-06, 1.6110000000124636e-06, 1.6389999999977256e-06, 1.6380000000260075e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999903566e-06, 1.6530000000181122e-06, 1.5970000000198326e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6390000000254812e-06]</msg>
<status status="PASS" starttime="20201110 08:32:32.131" endtime="20201110 08:32:32.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.120" endtime="20201110 08:32:32.137"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.143" endtime="20201110 08:32:32.146"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:32.152" endtime="20201110 08:32:32.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.148" endtime="20201110 08:32:32.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.139" endtime="20201110 08:32:32.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.623" endtime="20201110 08:32:32.177"></status>
</kw>
<msg timestamp="20201110 08:32:32.178" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.199" endtime="20201110 08:32:32.213"></status>
</kw>
<msg timestamp="20201110 08:32:32.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:32.196" endtime="20201110 08:32:32.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.221" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:32.217" endtime="20201110 08:32:32.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.223" endtime="20201110 08:32:32.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.188" endtime="20201110 08:32:32.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.183" endtime="20201110 08:32:32.230"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.247" endtime="20201110 08:32:32.594"></status>
</kw>
<msg timestamp="20201110 08:32:32.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038795014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038796639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:32.243" endtime="20201110 08:32:32.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038795014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038796639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:32.603" endtime="20201110 08:32:32.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.623" endtime="20201110 08:32:32.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.236" endtime="20201110 08:32:32.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.231" endtime="20201110 08:32:32.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:32.640" level="INFO">${RESULT} = [{'time': 0.038796639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038806292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:32.631" endtime="20201110 08:32:32.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:32.671" level="INFO">${OVERHEAD} = {'time': [0.038796639, 0.038806292, 0.038810667, 0.038814458, 0.038823972, 0.038832958, 0.038842611, 0.038852014, 0.038855889, 0.038859639, 0.038871028, 0.038878167, 0.038886694, 0.038895208, 0.038901...</msg>
<status status="PASS" starttime="20201110 08:32:32.642" endtime="20201110 08:32:32.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.681" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:32.679" endtime="20201110 08:32:32.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.686" level="INFO">VALUE: [1.6249999999981557e-06, 1.6529999999972955e-06, 1.5979999999984895e-06, 1.6660000000043307e-06, 1.6659999999973918e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.5550000000003061e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201110 08:32:32.683" endtime="20201110 08:32:32.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.673" endtime="20201110 08:32:32.689"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.695" endtime="20201110 08:32:32.698"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:32.707" endtime="20201110 08:32:32.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.701" endtime="20201110 08:32:32.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.691" endtime="20201110 08:32:32.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.180" endtime="20201110 08:32:32.736"></status>
</kw>
<msg timestamp="20201110 08:32:32.737" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.759" endtime="20201110 08:32:32.774"></status>
</kw>
<msg timestamp="20201110 08:32:32.775" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:32.756" endtime="20201110 08:32:32.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:32.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:32.777" endtime="20201110 08:32:32.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.784" endtime="20201110 08:32:32.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.749" endtime="20201110 08:32:32.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.744" endtime="20201110 08:32:32.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:32.807" endtime="20201110 08:32:33.147"></status>
</kw>
<msg timestamp="20201110 08:32:33.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043388792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043390417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:32.804" endtime="20201110 08:32:33.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043388792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043390417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:33.157" endtime="20201110 08:32:33.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.176" endtime="20201110 08:32:33.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.797" endtime="20201110 08:32:33.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.792" endtime="20201110 08:32:33.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:33.193" level="INFO">${RESULT} = [{'time': 0.043390417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.043401681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:33.184" endtime="20201110 08:32:33.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:33.224" level="INFO">${OVERHEAD} = {'time': [0.043390417, 0.043401681, 0.043412819, 0.043419875, 0.043424097, 0.043428986, 0.043438375, 0.043448903, 0.043458292, 0.043462306, 0.043470069, 0.043475097, 0.043481472, 0.043490236, 0.043497...</msg>
<status status="PASS" starttime="20201110 08:32:33.195" endtime="20201110 08:32:33.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.234" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:33.232" endtime="20201110 08:32:33.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.239" level="INFO">VALUE: [1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6809999999964353e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5699999999993497e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.723000000002084e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.709000000002514e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.5970000000059548e-06]</msg>
<status status="PASS" starttime="20201110 08:32:33.236" endtime="20201110 08:32:33.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.226" endtime="20201110 08:32:33.242"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.249" endtime="20201110 08:32:33.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:33.257" endtime="20201110 08:32:33.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.253" endtime="20201110 08:32:33.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.244" endtime="20201110 08:32:33.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:32.738" endtime="20201110 08:32:33.282"></status>
</kw>
<msg timestamp="20201110 08:32:33.283" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.302" endtime="20201110 08:32:33.317"></status>
</kw>
<msg timestamp="20201110 08:32:33.318" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:33.299" endtime="20201110 08:32:33.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.324" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:33.320" endtime="20201110 08:32:33.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.326" endtime="20201110 08:32:33.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.292" endtime="20201110 08:32:33.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.287" endtime="20201110 08:32:33.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.350" endtime="20201110 08:32:33.689"></status>
</kw>
<msg timestamp="20201110 08:32:33.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037451653, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:32:33.346" endtime="20201110 08:32:33.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03745, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037451653, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:32:33.699" endtime="20201110 08:32:33.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.718" endtime="20201110 08:32:33.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.339" endtime="20201110 08:32:33.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.334" endtime="20201110 08:32:33.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:33.736" level="INFO">${RESULT} = [{'time': 0.037451653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6530000000042344e-06, 'source_diff': 1.6530000000042344e-06}, {'time': 0.037455403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:33.727" endtime="20201110 08:32:33.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:33.769" level="INFO">${OVERHEAD} = {'time': [0.037451653, 0.037455403, 0.037459167, 0.037467972, 0.037475069, 0.037483972, 0.037488625, 0.037498861, 0.03750625, 0.037516389, 0.037526042, 0.037533542, 0.037542056, 0.037546514, 0.0375575...</msg>
<status status="PASS" starttime="20201110 08:32:33.738" endtime="20201110 08:32:33.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.779" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:33.777" endtime="20201110 08:32:33.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.785" level="INFO">VALUE: [1.6530000000042344e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6800000000039006e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.568999999999876e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201110 08:32:33.781" endtime="20201110 08:32:33.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.770" endtime="20201110 08:32:33.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.795" endtime="20201110 08:32:33.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:33.806" endtime="20201110 08:32:33.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.800" endtime="20201110 08:32:33.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.790" endtime="20201110 08:32:33.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.284" endtime="20201110 08:32:33.831"></status>
</kw>
<msg timestamp="20201110 08:32:33.831" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.851" endtime="20201110 08:32:33.866"></status>
</kw>
<msg timestamp="20201110 08:32:33.867" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:33.848" endtime="20201110 08:32:33.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:33.874" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:33.870" endtime="20201110 08:32:33.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.876" endtime="20201110 08:32:33.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.841" endtime="20201110 08:32:33.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.836" endtime="20201110 08:32:33.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:33.899" endtime="20201110 08:32:34.247"></status>
</kw>
<msg timestamp="20201110 08:32:34.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037691375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037693014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:33.896" endtime="20201110 08:32:34.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037691375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037693014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:34.256" endtime="20201110 08:32:34.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.275" endtime="20201110 08:32:34.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.889" endtime="20201110 08:32:34.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.884" endtime="20201110 08:32:34.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:34.292" level="INFO">${RESULT} = [{'time': 0.037693014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.037699486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:34.283" endtime="20201110 08:32:34.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:34.326" level="INFO">${OVERHEAD} = {'time': [0.037693014, 0.037699486, 0.037710542, 0.037720181, 0.037731611, 0.037742597, 0.037748861, 0.037752625, 0.037762889, 0.037773167, 0.037782042, 0.037793556, 0.037802444, 0.037809764, 0.037814...</msg>
<status status="PASS" starttime="20201110 08:32:34.294" endtime="20201110 08:32:34.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.336" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:34.334" endtime="20201110 08:32:34.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.342" level="INFO">VALUE: [1.6389999999977256e-06, 1.7219999999956714e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6810000000033742e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6799999999969617e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7079999999961015e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6949999999960053e-06, 1.6389999999977256e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201110 08:32:34.338" endtime="20201110 08:32:34.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.328" endtime="20201110 08:32:34.350"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.357" endtime="20201110 08:32:34.359"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:34.365" endtime="20201110 08:32:34.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.361" endtime="20201110 08:32:34.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.352" endtime="20201110 08:32:34.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:33.833" endtime="20201110 08:32:34.390"></status>
</kw>
<msg timestamp="20201110 08:32:34.391" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.411" endtime="20201110 08:32:34.425"></status>
</kw>
<msg timestamp="20201110 08:32:34.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.407" endtime="20201110 08:32:34.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.428" endtime="20201110 08:32:34.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.434" endtime="20201110 08:32:34.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.400" endtime="20201110 08:32:34.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.395" endtime="20201110 08:32:34.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.457" endtime="20201110 08:32:34.785"></status>
</kw>
<msg timestamp="20201110 08:32:34.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037249292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037250944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:34.454" endtime="20201110 08:32:34.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037249292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037250944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:34.794" endtime="20201110 08:32:34.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.813" endtime="20201110 08:32:34.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.447" endtime="20201110 08:32:34.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.442" endtime="20201110 08:32:34.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:34.830" level="INFO">${RESULT} = [{'time': 0.037250944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.037260944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:34.821" endtime="20201110 08:32:34.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:34.862" level="INFO">${OVERHEAD} = {'time': [0.037250944, 0.037260944, 0.037271486, 0.037279222, 0.037284375, 0.037292125, 0.037301153, 0.037312417, 0.037320306, 0.037330069, 0.037338222, 0.037347347, 0.037357861, 0.037364889, 0.037368...</msg>
<status status="PASS" starttime="20201110 08:32:34.832" endtime="20201110 08:32:34.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.872" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:34.870" endtime="20201110 08:32:34.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.878" level="INFO">VALUE: [1.6519999999978219e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.568999999999876e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6800000000039006e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201110 08:32:34.875" endtime="20201110 08:32:34.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.864" endtime="20201110 08:32:34.881"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.887" endtime="20201110 08:32:34.890"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:34.896" endtime="20201110 08:32:34.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.891" endtime="20201110 08:32:34.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.883" endtime="20201110 08:32:34.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.392" endtime="20201110 08:32:34.921"></status>
</kw>
<msg timestamp="20201110 08:32:34.921" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.941" endtime="20201110 08:32:34.957"></status>
</kw>
<msg timestamp="20201110 08:32:34.958" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.938" endtime="20201110 08:32:34.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:34.964" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:34.960" endtime="20201110 08:32:34.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.966" endtime="20201110 08:32:34.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.930" endtime="20201110 08:32:34.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.926" endtime="20201110 08:32:34.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:34.989" endtime="20201110 08:32:35.317"></status>
</kw>
<msg timestamp="20201110 08:32:35.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037302903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037304528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:34.986" endtime="20201110 08:32:35.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037302903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037304528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:35.326" endtime="20201110 08:32:35.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.345" endtime="20201110 08:32:35.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.979" endtime="20201110 08:32:35.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.974" endtime="20201110 08:32:35.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:35.363" level="INFO">${RESULT} = [{'time': 0.037304528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.037308417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:35.354" endtime="20201110 08:32:35.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:35.394" level="INFO">${OVERHEAD} = {'time': [0.037304528, 0.037308417, 0.037319806, 0.037328319, 0.037332708, 0.037338972, 0.037349375, 0.037354639, 0.037359139, 0.037370028, 0.037381306, 0.037389444, 0.037397569, 0.037401708, 0.037405...</msg>
<status status="PASS" starttime="20201110 08:32:35.365" endtime="20201110 08:32:35.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.405" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:35.402" endtime="20201110 08:32:35.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.411" level="INFO">VALUE: [1.6250000000050946e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.5969999999990159e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5969999999990159e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6529999999972955e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.5969999999990159e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201110 08:32:35.408" endtime="20201110 08:32:35.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.396" endtime="20201110 08:32:35.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.420" endtime="20201110 08:32:35.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:35.428" endtime="20201110 08:32:35.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.424" endtime="20201110 08:32:35.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.416" endtime="20201110 08:32:35.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:34.923" endtime="20201110 08:32:35.454"></status>
</kw>
<msg timestamp="20201110 08:32:35.454" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.474" endtime="20201110 08:32:35.489"></status>
</kw>
<msg timestamp="20201110 08:32:35.490" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:35.470" endtime="20201110 08:32:35.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.496" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:35.492" endtime="20201110 08:32:35.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.498" endtime="20201110 08:32:35.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.463" endtime="20201110 08:32:35.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.459" endtime="20201110 08:32:35.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.521" endtime="20201110 08:32:35.846"></status>
</kw>
<msg timestamp="20201110 08:32:35.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037314181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037315819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:35.518" endtime="20201110 08:32:35.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037314181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037315819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:35.856" endtime="20201110 08:32:35.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.875" endtime="20201110 08:32:35.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.511" endtime="20201110 08:32:35.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.506" endtime="20201110 08:32:35.882"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:35.893" level="INFO">${RESULT} = [{'time': 0.037315819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.637999999998252e-06, 'source_diff': 1.637999999998252e-06}, {'time': 0.037320083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:35.883" endtime="20201110 08:32:35.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:35.923" level="INFO">${OVERHEAD} = {'time': [0.037315819, 0.037320083, 0.037327833, 0.037337264, 0.037348625, 0.037356889, 0.037364764, 0.037370028, 0.037377417, 0.037382556, 0.037388333, 0.037394292, 0.037398861, 0.037408806, 0.037412...</msg>
<status status="PASS" starttime="20201110 08:32:35.895" endtime="20201110 08:32:35.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.934" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:35.931" endtime="20201110 08:32:35.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:35.939" level="INFO">VALUE: [1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6810000000033742e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6520000000047608e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.5969999999990159e-06, 1.6669999999968654e-06, 1.6799999999969617e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6520000000047608e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201110 08:32:35.936" endtime="20201110 08:32:35.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.925" endtime="20201110 08:32:35.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:35.950" endtime="20201110 08:32:35.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:35.958" endtime="20201110 08:32:35.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.954" endtime="20201110 08:32:35.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.944" endtime="20201110 08:32:35.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.455" endtime="20201110 08:32:35.983"></status>
</kw>
<msg timestamp="20201110 08:32:35.984" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.004" endtime="20201110 08:32:36.018"></status>
</kw>
<msg timestamp="20201110 08:32:36.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.000" endtime="20201110 08:32:36.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.026" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.021" endtime="20201110 08:32:36.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.028" endtime="20201110 08:32:36.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.993" endtime="20201110 08:32:36.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.989" endtime="20201110 08:32:36.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.051" endtime="20201110 08:32:36.400"></status>
</kw>
<msg timestamp="20201110 08:32:36.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037342569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037344264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.048" endtime="20201110 08:32:36.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037342569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037344264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.410" endtime="20201110 08:32:36.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.431" endtime="20201110 08:32:36.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.041" endtime="20201110 08:32:36.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.036" endtime="20201110 08:32:36.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:36.453" level="INFO">${RESULT} = [{'time': 0.037344264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.037350097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:36.442" endtime="20201110 08:32:36.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:36.489" level="INFO">${OVERHEAD} = {'time': [0.037344264, 0.037350097, 0.037356736, 0.037363375, 0.037369778, 0.037374528, 0.037382306, 0.037389944, 0.037397583, 0.037404722, 0.037413236, 0.037422139, 0.037426014, 0.037430903, 0.037439...</msg>
<status status="PASS" starttime="20201110 08:32:36.456" endtime="20201110 08:32:36.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.503" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:36.500" endtime="20201110 08:32:36.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.510" level="INFO">VALUE: [1.6950000000029442e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6939999999965316e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6659999999973918e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6809999999964353e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6799999999969617e-06, 1.6530000000042344e-06, 1.6250000000050946e-06]</msg>
<status status="PASS" starttime="20201110 08:32:36.506" endtime="20201110 08:32:36.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.492" endtime="20201110 08:32:36.514"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.521" endtime="20201110 08:32:36.524"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:36.530" endtime="20201110 08:32:36.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.525" endtime="20201110 08:32:36.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.516" endtime="20201110 08:32:36.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:35.985" endtime="20201110 08:32:36.557"></status>
</kw>
<msg timestamp="20201110 08:32:36.557" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.577" endtime="20201110 08:32:36.591"></status>
</kw>
<msg timestamp="20201110 08:32:36.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.573" endtime="20201110 08:32:36.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:36.595" endtime="20201110 08:32:36.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.601" endtime="20201110 08:32:36.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.566" endtime="20201110 08:32:36.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.562" endtime="20201110 08:32:36.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.626" endtime="20201110 08:32:36.955"></status>
</kw>
<msg timestamp="20201110 08:32:36.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038952556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038954125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.622" endtime="20201110 08:32:36.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:36.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038952556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038954125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:36.965" endtime="20201110 08:32:36.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:36.983" endtime="20201110 08:32:36.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.615" endtime="20201110 08:32:36.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.610" endtime="20201110 08:32:36.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:37.001" level="INFO">${RESULT} = [{'time': 0.038954125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.568999999999876e-06, 'source_diff': 1.568999999999876e-06}, {'time': 0.038958778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:36.992" endtime="20201110 08:32:37.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:37.032" level="INFO">${OVERHEAD} = {'time': [0.038954125, 0.038958778, 0.038967292, 0.038974681, 0.038979569, 0.038989958, 0.038999597, 0.039004875, 0.039009264, 0.039017528, 0.039028042, 0.039036681, 0.039046181, 0.039055569, 0.039065...</msg>
<status status="PASS" starttime="20201110 08:32:37.003" endtime="20201110 08:32:37.032"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.042" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:37.040" endtime="20201110 08:32:37.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.047" level="INFO">VALUE: [1.568999999999876e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.568999999999876e-06, 1.6530000000042344e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.7219999999956714e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6810000000033742e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201110 08:32:37.044" endtime="20201110 08:32:37.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.033" endtime="20201110 08:32:37.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.058" endtime="20201110 08:32:37.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:37.068" endtime="20201110 08:32:37.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.063" endtime="20201110 08:32:37.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.052" endtime="20201110 08:32:37.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:36.558" endtime="20201110 08:32:37.098"></status>
</kw>
<msg timestamp="20201110 08:32:37.099" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.121" endtime="20201110 08:32:37.136"></status>
</kw>
<msg timestamp="20201110 08:32:37.137" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:37.117" endtime="20201110 08:32:37.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.143" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:37.139" endtime="20201110 08:32:37.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.145" endtime="20201110 08:32:37.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.110" endtime="20201110 08:32:37.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.104" endtime="20201110 08:32:37.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.168" endtime="20201110 08:32:37.511"></status>
</kw>
<msg timestamp="20201110 08:32:37.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043855986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043857625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:37.165" endtime="20201110 08:32:37.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043855986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043857625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:37.521" endtime="20201110 08:32:37.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.539" endtime="20201110 08:32:37.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.158" endtime="20201110 08:32:37.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.153" endtime="20201110 08:32:37.546"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:37.557" level="INFO">${RESULT} = [{'time': 0.043857625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.043864028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:37.548" endtime="20201110 08:32:37.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:37.587" level="INFO">${OVERHEAD} = {'time': [0.043857625, 0.043864028, 0.043874778, 0.043885167, 0.043892931, 0.043896694, 0.043903833, 0.043912736, 0.043921875, 0.043931903, 0.043936403, 0.043945931, 0.043955306, 0.043966458, 0.043973...</msg>
<status status="PASS" starttime="20201110 08:32:37.559" endtime="20201110 08:32:37.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.598" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:37.595" endtime="20201110 08:32:37.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.603" level="INFO">VALUE: [1.6389999999977256e-06, 1.6249999999981557e-06, 1.5970000000059548e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6119999999980594e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6670000000038043e-06]</msg>
<status status="PASS" starttime="20201110 08:32:37.600" endtime="20201110 08:32:37.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.589" endtime="20201110 08:32:37.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.613" endtime="20201110 08:32:37.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:37.621" endtime="20201110 08:32:37.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.617" endtime="20201110 08:32:37.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.608" endtime="20201110 08:32:37.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.100" endtime="20201110 08:32:37.648"></status>
</kw>
<msg timestamp="20201110 08:32:37.648" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.668" endtime="20201110 08:32:37.683"></status>
</kw>
<msg timestamp="20201110 08:32:37.684" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:37.665" endtime="20201110 08:32:37.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:37.690" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:37.686" endtime="20201110 08:32:37.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.692" endtime="20201110 08:32:37.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.657" endtime="20201110 08:32:37.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.653" endtime="20201110 08:32:37.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:37.718" endtime="20201110 08:32:38.056"></status>
</kw>
<msg timestamp="20201110 08:32:38.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038254792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038256417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:37.714" endtime="20201110 08:32:38.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038254792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038256417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:38.065" endtime="20201110 08:32:38.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.084" endtime="20201110 08:32:38.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.707" endtime="20201110 08:32:38.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.702" endtime="20201110 08:32:38.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:38.102" level="INFO">${RESULT} = [{'time': 0.038256417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.038265819, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:38.093" endtime="20201110 08:32:38.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:38.132" level="INFO">${OVERHEAD} = {'time': [0.038256417, 0.038265819, 0.038274708, 0.038281611, 0.038291486, 0.03829625, 0.038306778, 0.038313903, 0.038323667, 0.038328944, 0.038339444, 0.038344583, 0.038354347, 0.038360861, 0.0383695...</msg>
<status status="PASS" starttime="20201110 08:32:38.104" endtime="20201110 08:32:38.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.142" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:38.140" endtime="20201110 08:32:38.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.148" level="INFO">VALUE: [1.6249999999981557e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.582999999999446e-06, 1.6529999999972955e-06, 1.5970000000059548e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.637999999998252e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6520000000047608e-06, 1.6520000000047608e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.5839999999989196e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201110 08:32:38.145" endtime="20201110 08:32:38.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.134" endtime="20201110 08:32:38.151"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.158" endtime="20201110 08:32:38.160"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:38.166" endtime="20201110 08:32:38.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.162" endtime="20201110 08:32:38.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.153" endtime="20201110 08:32:38.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:37.649" endtime="20201110 08:32:38.192"></status>
</kw>
<msg timestamp="20201110 08:32:38.192" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.215" endtime="20201110 08:32:38.233"></status>
</kw>
<msg timestamp="20201110 08:32:38.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.211" endtime="20201110 08:32:38.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.243" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.237" endtime="20201110 08:32:38.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.246" endtime="20201110 08:32:38.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.202" endtime="20201110 08:32:38.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.197" endtime="20201110 08:32:38.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.271" endtime="20201110 08:32:38.616"></status>
</kw>
<msg timestamp="20201110 08:32:38.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043046653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:38.268" endtime="20201110 08:32:38.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043045, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043046653, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:38.625" endtime="20201110 08:32:38.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.644" endtime="20201110 08:32:38.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.259" endtime="20201110 08:32:38.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.254" endtime="20201110 08:32:38.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:38.662" level="INFO">${RESULT} = [{'time': 0.043046653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.043051542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:38.653" endtime="20201110 08:32:38.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:38.695" level="INFO">${OVERHEAD} = {'time': [0.043046653, 0.043051542, 0.043058417, 0.043066181, 0.043070569, 0.043074458, 0.043082597, 0.043090611, 0.043101514, 0.043106153, 0.043114694, 0.043123306, 0.043133819, 0.043145208, 0.043152...</msg>
<status status="PASS" starttime="20201110 08:32:38.664" endtime="20201110 08:32:38.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.706" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:38.703" endtime="20201110 08:32:38.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.711" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6380000000051909e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6530000000042344e-06, 1.6660000000043307e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6530000000042344e-06, 1.7079999999961015e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6119999999980594e-06, 1.6939999999965316e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06]</msg>
<status status="PASS" starttime="20201110 08:32:38.708" endtime="20201110 08:32:38.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.697" endtime="20201110 08:32:38.714"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.721" endtime="20201110 08:32:38.723"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:38.729" endtime="20201110 08:32:38.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.725" endtime="20201110 08:32:38.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.716" endtime="20201110 08:32:38.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.194" endtime="20201110 08:32:38.754"></status>
</kw>
<msg timestamp="20201110 08:32:38.755" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.775" endtime="20201110 08:32:38.790"></status>
</kw>
<msg timestamp="20201110 08:32:38.791" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.771" endtime="20201110 08:32:38.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:38.797" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:38.793" endtime="20201110 08:32:38.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.799" endtime="20201110 08:32:38.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.764" endtime="20201110 08:32:38.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.759" endtime="20201110 08:32:38.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:38.823" endtime="20201110 08:32:39.165"></status>
</kw>
<msg timestamp="20201110 08:32:39.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037686056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037687681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:38.819" endtime="20201110 08:32:39.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037686056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037687681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.174" endtime="20201110 08:32:39.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.193" endtime="20201110 08:32:39.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.812" endtime="20201110 08:32:39.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.807" endtime="20201110 08:32:39.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:39.211" level="INFO">${RESULT} = [{'time': 0.037687681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6249999999981557e-06, 'source_diff': 1.6249999999981557e-06}, {'time': 0.037691458, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:39.202" endtime="20201110 08:32:39.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:39.241" level="INFO">${OVERHEAD} = {'time': [0.037687681, 0.037691458, 0.037696958, 0.037707347, 0.037717972, 0.037725375, 0.037732653, 0.037736639, 0.037743403, 0.037748417, 0.037753319, 0.037762319, 0.037772236, 0.037782097, 0.037786...</msg>
<status status="PASS" starttime="20201110 08:32:39.213" endtime="20201110 08:32:39.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.251" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:39.249" endtime="20201110 08:32:39.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.257" level="INFO">VALUE: [1.6249999999981557e-06, 1.6659999999973918e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.6380000000051909e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6660000000043307e-06, 1.6519999999978219e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.582999999999446e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.637999999998252e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6250000000050946e-06, 1.6249999999981557e-06]</msg>
<status status="PASS" starttime="20201110 08:32:39.253" endtime="20201110 08:32:39.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.243" endtime="20201110 08:32:39.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.266" endtime="20201110 08:32:39.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:39.274" endtime="20201110 08:32:39.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.270" endtime="20201110 08:32:39.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.262" endtime="20201110 08:32:39.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:38.756" endtime="20201110 08:32:39.300"></status>
</kw>
<msg timestamp="20201110 08:32:39.300" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.320" endtime="20201110 08:32:39.335"></status>
</kw>
<msg timestamp="20201110 08:32:39.336" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:39.317" endtime="20201110 08:32:39.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.342" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:39.338" endtime="20201110 08:32:39.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.344" endtime="20201110 08:32:39.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.309" endtime="20201110 08:32:39.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.305" endtime="20201110 08:32:39.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.368" endtime="20201110 08:32:39.699"></status>
</kw>
<msg timestamp="20201110 08:32:39.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037411569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.364" endtime="20201110 08:32:39.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037409917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037411569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.709" endtime="20201110 08:32:39.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.729" endtime="20201110 08:32:39.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.357" endtime="20201110 08:32:39.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.352" endtime="20201110 08:32:39.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:39.746" level="INFO">${RESULT} = [{'time': 0.037411569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6519999999978219e-06, 'source_diff': 1.6519999999978219e-06}, {'time': 0.037421083, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:39.737" endtime="20201110 08:32:39.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:39.776" level="INFO">${OVERHEAD} = {'time': [0.037411569, 0.037421083, 0.037426597, 0.037434347, 0.037444625, 0.037450528, 0.037459931, 0.037466931, 0.037478181, 0.037488444, 0.037497847, 0.037503222, 0.037512861, 0.037522625, 0.037532...</msg>
<status status="PASS" starttime="20201110 08:32:39.748" endtime="20201110 08:32:39.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.787" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:39.784" endtime="20201110 08:32:39.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.792" level="INFO">VALUE: [1.6519999999978219e-06, 1.6519999999978219e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6670000000038043e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6380000000051909e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.7079999999961015e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6520000000047608e-06, 1.5830000000063849e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6799999999969617e-06, 1.6660000000043307e-06, 1.6390000000046645e-06, 1.6380000000051909e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201110 08:32:39.789" endtime="20201110 08:32:39.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.778" endtime="20201110 08:32:39.796"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.802" endtime="20201110 08:32:39.805"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:39.811" endtime="20201110 08:32:39.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.806" endtime="20201110 08:32:39.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.797" endtime="20201110 08:32:39.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.301" endtime="20201110 08:32:39.836"></status>
</kw>
<msg timestamp="20201110 08:32:39.837" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.856" endtime="20201110 08:32:39.871"></status>
</kw>
<msg timestamp="20201110 08:32:39.873" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:39.853" endtime="20201110 08:32:39.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:39.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:39.875" endtime="20201110 08:32:39.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.881" endtime="20201110 08:32:39.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.846" endtime="20201110 08:32:39.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.841" endtime="20201110 08:32:39.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:39.904" endtime="20201110 08:32:40.236"></status>
</kw>
<msg timestamp="20201110 08:32:40.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037905403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037907097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:39.901" endtime="20201110 08:32:40.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037905403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037907097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:40.245" endtime="20201110 08:32:40.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.264" endtime="20201110 08:32:40.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.894" endtime="20201110 08:32:40.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.889" endtime="20201110 08:32:40.272"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:40.283" level="INFO">${RESULT} = [{'time': 0.037907097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6940000000034705e-06, 'source_diff': 1.6940000000034705e-06}, {'time': 0.037913931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:40.274" endtime="20201110 08:32:40.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:40.313" level="INFO">${OVERHEAD} = {'time': [0.037907097, 0.037913931, 0.037922444, 0.037926833, 0.037930722, 0.037938, 0.037948778, 0.037959028, 0.037966792, 0.037970694, 0.037976194, 0.037981583, 0.037991222, 0.037996611, 0.038001, 0...</msg>
<status status="PASS" starttime="20201110 08:32:40.285" endtime="20201110 08:32:40.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.323" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:40.321" endtime="20201110 08:32:40.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.329" level="INFO">VALUE: [1.6940000000034705e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6519999999978219e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6380000000051909e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6530000000042344e-06, 1.6519999999978219e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6519999999978219e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201110 08:32:40.326" endtime="20201110 08:32:40.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.315" endtime="20201110 08:32:40.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.338" endtime="20201110 08:32:40.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:40.347" endtime="20201110 08:32:40.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.342" endtime="20201110 08:32:40.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.334" endtime="20201110 08:32:40.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:39.838" endtime="20201110 08:32:40.372"></status>
</kw>
<msg timestamp="20201110 08:32:40.372" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.392" endtime="20201110 08:32:40.407"></status>
</kw>
<msg timestamp="20201110 08:32:40.408" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.389" endtime="20201110 08:32:40.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.414" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.410" endtime="20201110 08:32:40.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.416" endtime="20201110 08:32:40.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.382" endtime="20201110 08:32:40.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.377" endtime="20201110 08:32:40.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.439" endtime="20201110 08:32:40.769"></status>
</kw>
<msg timestamp="20201110 08:32:40.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037498208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037499833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:40.436" endtime="20201110 08:32:40.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037498208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037499833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:40.779" endtime="20201110 08:32:40.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.797" endtime="20201110 08:32:40.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.429" endtime="20201110 08:32:40.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.424" endtime="20201110 08:32:40.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:40.816" level="INFO">${RESULT} = [{'time': 0.037499833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6250000000050946e-06, 'source_diff': 1.6250000000050946e-06}, {'time': 0.037504736, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:40.807" endtime="20201110 08:32:40.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:40.850" level="INFO">${OVERHEAD} = {'time': [0.037499833, 0.037504736, 0.037509875, 0.03751425, 0.037523889, 0.037533778, 0.037542431, 0.037550431, 0.037557444, 0.037568472, 0.037578222, 0.037588014, 0.0375945, 0.037603639, 0.037609167...</msg>
<status status="PASS" starttime="20201110 08:32:40.819" endtime="20201110 08:32:40.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.860" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:40.858" endtime="20201110 08:32:40.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.865" level="INFO">VALUE: [1.6250000000050946e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5980000000054284e-06, 1.6380000000051909e-06, 1.6529999999972955e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6250000000050946e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6950000000029442e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6250000000050946e-06, 1.5699999999993497e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6660000000043307e-06, 1.6249999999981557e-06, 1.6530000000042344e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06]</msg>
<status status="PASS" starttime="20201110 08:32:40.862" endtime="20201110 08:32:40.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.851" endtime="20201110 08:32:40.868"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.875" endtime="20201110 08:32:40.877"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:40.883" endtime="20201110 08:32:40.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.879" endtime="20201110 08:32:40.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.870" endtime="20201110 08:32:40.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.374" endtime="20201110 08:32:40.908"></status>
</kw>
<msg timestamp="20201110 08:32:40.909" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.929" endtime="20201110 08:32:40.944"></status>
</kw>
<msg timestamp="20201110 08:32:40.945" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.925" endtime="20201110 08:32:40.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:40.952" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:40.948" endtime="20201110 08:32:40.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.954" endtime="20201110 08:32:40.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.918" endtime="20201110 08:32:40.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.913" endtime="20201110 08:32:40.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:40.977" endtime="20201110 08:32:41.316"></status>
</kw>
<msg timestamp="20201110 08:32:41.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0375615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037563083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:40.974" endtime="20201110 08:32:41.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0375615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037563083, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:32:41.326" endtime="20201110 08:32:41.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.345" endtime="20201110 08:32:41.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.967" endtime="20201110 08:32:41.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.962" endtime="20201110 08:32:41.352"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:41.362" level="INFO">${RESULT} = [{'time': 0.037563083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.582999999999446e-06, 'source_diff': 1.582999999999446e-06}, {'time': 0.037569847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:41.353" endtime="20201110 08:32:41.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:41.395" level="INFO">${OVERHEAD} = {'time': [0.037563083, 0.037569847, 0.037578361, 0.037588819, 0.037594764, 0.037605792, 0.037614417, 0.037624556, 0.037629319, 0.037640903, 0.037645597, 0.037655236, 0.037661792, 0.037672778, 0.037677...</msg>
<status status="PASS" starttime="20201110 08:32:41.365" endtime="20201110 08:32:41.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.405" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:41.402" endtime="20201110 08:32:41.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.410" level="INFO">VALUE: [1.582999999999446e-06, 1.5970000000059548e-06, 1.6389999999977256e-06, 1.6800000000039006e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.5980000000054284e-06, 1.637999999998252e-06, 1.709000000002514e-06, 1.6390000000046645e-06, 1.5969999999990159e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6519999999978219e-06, 1.6109999999985858e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.582999999999446e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.5839999999989196e-06, 1.5969999999990159e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.5830000000063849e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.637999999998252e-06, 1.582999999999446e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.5559999999997798e-06, 1.6249999999981557e-06, 1.6659999999973918e-06]</msg>
<status status="PASS" starttime="20201110 08:32:41.407" endtime="20201110 08:32:41.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.396" endtime="20201110 08:32:41.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.420" endtime="20201110 08:32:41.422"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:41.428" endtime="20201110 08:32:41.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.423" endtime="20201110 08:32:41.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.415" endtime="20201110 08:32:41.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:40.910" endtime="20201110 08:32:41.453"></status>
</kw>
<msg timestamp="20201110 08:32:41.454" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.473" endtime="20201110 08:32:41.488"></status>
</kw>
<msg timestamp="20201110 08:32:41.489" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:41.470" endtime="20201110 08:32:41.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.495" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:41.491" endtime="20201110 08:32:41.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.498" endtime="20201110 08:32:41.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.463" endtime="20201110 08:32:41.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.458" endtime="20201110 08:32:41.504"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.521" endtime="20201110 08:32:41.864"></status>
</kw>
<msg timestamp="20201110 08:32:41.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037459875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037461514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:41.518" endtime="20201110 08:32:41.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037459875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037461514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:41.873" endtime="20201110 08:32:41.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.892" endtime="20201110 08:32:41.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.510" endtime="20201110 08:32:41.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.506" endtime="20201110 08:32:41.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:41.910" level="INFO">${RESULT} = [{'time': 0.037461514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6390000000046645e-06, 'source_diff': 1.6390000000046645e-06}, {'time': 0.037468792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:41.900" endtime="20201110 08:32:41.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:41.942" level="INFO">${OVERHEAD} = {'time': [0.037461514, 0.037468792, 0.037473667, 0.037480806, 0.037489569, 0.037496222, 0.037507722, 0.037518611, 0.037526875, 0.037533181, 0.037538806, 0.037545931, 0.037553306, 0.037562319, 0.037567...</msg>
<status status="PASS" starttime="20201110 08:32:41.912" endtime="20201110 08:32:41.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.952" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:41.950" endtime="20201110 08:32:41.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:41.957" level="INFO">VALUE: [1.6390000000046645e-06, 1.6389999999977256e-06, 1.5839999999989196e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.568999999999876e-06, 1.6389999999977256e-06, 1.6109999999985858e-06, 1.6390000000046645e-06, 1.6809999999964353e-06, 1.6670000000038043e-06, 1.6529999999972955e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6249999999981557e-06, 1.6389999999977256e-06, 1.6810000000033742e-06, 1.6390000000046645e-06, 1.6249999999981557e-06, 1.6529999999972955e-06, 1.6659999999973918e-06, 1.637999999998252e-06, 1.6530000000042344e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.5839999999989196e-06, 1.637999999998252e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.7219999999956714e-06, 1.6670000000038043e-06, 1.6249999999981557e-06, 1.6519999999978219e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.7219999999956714e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06]</msg>
<status status="PASS" starttime="20201110 08:32:41.954" endtime="20201110 08:32:41.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.943" endtime="20201110 08:32:41.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:41.967" endtime="20201110 08:32:41.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:41.975" endtime="20201110 08:32:41.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.971" endtime="20201110 08:32:41.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.962" endtime="20201110 08:32:42.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:41.455" endtime="20201110 08:32:42.001"></status>
</kw>
<msg timestamp="20201110 08:32:42.001" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.021" endtime="20201110 08:32:42.036"></status>
</kw>
<msg timestamp="20201110 08:32:42.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.018" endtime="20201110 08:32:42.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.039" endtime="20201110 08:32:42.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.046" endtime="20201110 08:32:42.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.010" endtime="20201110 08:32:42.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.006" endtime="20201110 08:32:42.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.069" endtime="20201110 08:32:42.408"></status>
</kw>
<msg timestamp="20201110 08:32:42.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037973958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037975611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:42.066" endtime="20201110 08:32:42.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037973958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037975611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:42.417" endtime="20201110 08:32:42.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.436" endtime="20201110 08:32:42.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.059" endtime="20201110 08:32:42.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.054" endtime="20201110 08:32:42.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:42.454" level="INFO">${RESULT} = [{'time': 0.037975611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6529999999972955e-06, 'source_diff': 1.6529999999972955e-06}, {'time': 0.037983861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:42.445" endtime="20201110 08:32:42.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:42.486" level="INFO">${OVERHEAD} = {'time': [0.037975611, 0.037983861, 0.037989625, 0.037995167, 0.038004903, 0.038012417, 0.038023194, 0.038028125, 0.038032958, 0.038039347, 0.038045125, 0.038049542, 0.038060903, 0.038071417, 0.038076...</msg>
<status status="PASS" starttime="20201110 08:32:42.456" endtime="20201110 08:32:42.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.496" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:32:42.493" endtime="20201110 08:32:42.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.501" level="INFO">VALUE: [1.6529999999972955e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6670000000038043e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6380000000051909e-06, 1.6810000000033742e-06, 1.6249999999981557e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6669999999968654e-06, 1.5839999999989196e-06, 1.6250000000050946e-06, 1.6249999999981557e-06, 1.6940000000034705e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6520000000047608e-06, 1.6390000000046645e-06, 1.6109999999985858e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.637999999998252e-06, 1.6249999999981557e-06, 1.6390000000046645e-06, 1.6250000000050946e-06, 1.6529999999972955e-06, 1.6669999999968654e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06, 1.637999999998252e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6529999999972955e-06, 1.6389999999977256e-06, 1.6390000000046645e-06, 1.6389999999977256e-06, 1.6389999999977256e-06, 1.637999999998252e-06]</msg>
<status status="PASS" starttime="20201110 08:32:42.498" endtime="20201110 08:32:42.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.488" endtime="20201110 08:32:42.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.511" endtime="20201110 08:32:42.513"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:42.519" endtime="20201110 08:32:42.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.515" endtime="20201110 08:32:42.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.506" endtime="20201110 08:32:42.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.002" endtime="20201110 08:32:42.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:31.620" endtime="20201110 08:32:42.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:42.554" endtime="20201110 08:32:42.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.550" endtime="20201110 08:32:42.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.548" endtime="20201110 08:32:42.578"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:31.490" endtime="20201110 08:32:42.579" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:42.596" endtime="20201110 08:32:42.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.592" endtime="20201110 08:32:42.619"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.652" endtime="20201110 08:32:42.670"></status>
</kw>
<msg timestamp="20201110 08:32:42.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.648" endtime="20201110 08:32:42.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.673" endtime="20201110 08:32:42.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.684" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:42.680" endtime="20201110 08:32:42.685"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:42.641" endtime="20201110 08:32:42.687"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:42.635" endtime="20201110 08:32:42.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.632" endtime="20201110 08:32:42.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:42.699" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:42.697" endtime="20201110 08:32:42.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.691" endtime="20201110 08:32:42.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.630" endtime="20201110 08:32:42.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.629" endtime="20201110 08:32:42.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.702" endtime="20201110 08:32:42.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.625" endtime="20201110 08:32:42.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.620" endtime="20201110 08:32:42.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.589" endtime="20201110 08:32:42.709"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.731" endtime="20201110 08:32:42.755"></status>
</kw>
<msg timestamp="20201110 08:32:42.757" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.728" endtime="20201110 08:32:42.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.763" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:42.759" endtime="20201110 08:32:42.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.765" endtime="20201110 08:32:42.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.721" endtime="20201110 08:32:42.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.715" endtime="20201110 08:32:42.772"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.776" endtime="20201110 08:32:42.781"></status>
</kw>
<msg timestamp="20201110 08:32:42.782" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:42.773" endtime="20201110 08:32:42.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.792" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:42.790" endtime="20201110 08:32:42.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.797" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:42.795" endtime="20201110 08:32:42.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.784" endtime="20201110 08:32:42.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.810" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:42.807" endtime="20201110 08:32:42.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:42.815" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:42.812" endtime="20201110 08:32:42.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.801" endtime="20201110 08:32:42.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:42.836" endtime="20201110 08:32:43.181"></status>
</kw>
<msg timestamp="20201110 08:32:43.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130300389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130304861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:42.832" endtime="20201110 08:32:43.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130300389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130304861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:43.191" endtime="20201110 08:32:43.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.210" endtime="20201110 08:32:43.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.823" endtime="20201110 08:32:43.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.818" endtime="20201110 08:32:43.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:43.227" level="INFO">${RESULT} = [{'time': 0.130304861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4720000000053606e-06, 'source_diff': 4.4720000000053606e-06}, {'time': 0.130318417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:43.218" endtime="20201110 08:32:43.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:43.260" level="INFO">${OVERHEAD} = {'time': [0.130304861, 0.130318417, 0.130328986, 0.130336431, 0.130349125, 0.130363208, 0.130372264, 0.130379958, 0.130394306, 0.130408875, 0.130417931, 0.130432139, 0.130438944, 0.130449264, 0.130459...</msg>
<status status="PASS" starttime="20201110 08:32:43.229" endtime="20201110 08:32:43.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.272" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:32:43.269" endtime="20201110 08:32:43.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.278" level="INFO">VALUE: [4.4720000000053606e-06, 4.610999999987708e-06, 4.625000000008095e-06, 4.625000000008095e-06, 4.625000000008095e-06, 4.639000000000726e-06, 4.624999999980339e-06, 4.610999999987708e-06, 4.639000000000726e-06, 4.583000000002446e-06, 4.611999999987182e-06, 4.639000000000726e-06, 4.610999999987708e-06, 4.625000000008095e-06, 4.625000000008095e-06, 4.625000000008095e-06, 4.624999999980339e-06, 4.625000000008095e-06, 4.624999999980339e-06, 4.583000000002446e-06, 4.639000000000726e-06, 4.611000000015464e-06, 4.625000000008095e-06, 4.625000000008095e-06, 4.639000000000726e-06, 4.624999999980339e-06, 4.638000000001252e-06, 4.625000000008095e-06, 4.611000000015464e-06, 4.625000000008095e-06, 4.583000000002446e-06, 4.625000000008095e-06, 4.624999999980339e-06, 4.6120000000149375e-06, 4.583000000002446e-06, 4.625000000008095e-06, 4.625000000008095e-06, 4.611000000015464e-06, 4.639000000000726e-06, 4.625000000008095e-06, 4.610999999987708e-06, 4.625000000008095e-06, 4.624999999980339e-06, 4.583000000002446e-06, 4.56899999998206e-06, 4.639000000000726e-06, 4.625000000008095e-06, 4.7080000000199185e-06, 4.639000000000726e-06, 4.625000000008095e-06]</msg>
<status status="PASS" starttime="20201110 08:32:43.275" endtime="20201110 08:32:43.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.262" endtime="20201110 08:32:43.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.287" endtime="20201110 08:32:43.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:43.295" endtime="20201110 08:32:43.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.290" endtime="20201110 08:32:43.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.282" endtime="20201110 08:32:43.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:42.711" endtime="20201110 08:32:43.320"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:42.583" endtime="20201110 08:32:43.322" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:43.339" endtime="20201110 08:32:43.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.335" endtime="20201110 08:32:43.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.403" endtime="20201110 08:32:43.427"></status>
</kw>
<msg timestamp="20201110 08:32:43.428" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:43.398" endtime="20201110 08:32:43.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:43.430" endtime="20201110 08:32:43.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.442" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:43.437" endtime="20201110 08:32:43.443"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:43.390" endtime="20201110 08:32:43.445"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:43.382" endtime="20201110 08:32:43.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.378" endtime="20201110 08:32:43.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:43.456" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:43.454" endtime="20201110 08:32:43.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.449" endtime="20201110 08:32:43.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.376" endtime="20201110 08:32:43.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.374" endtime="20201110 08:32:43.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.460" endtime="20201110 08:32:43.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.369" endtime="20201110 08:32:43.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.364" endtime="20201110 08:32:43.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.332" endtime="20201110 08:32:43.467"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.494" endtime="20201110 08:32:43.576"></status>
</kw>
<msg timestamp="20201110 08:32:43.577" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:43.490" endtime="20201110 08:32:43.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.584" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:43.580" endtime="20201110 08:32:43.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.586" endtime="20201110 08:32:43.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.482" endtime="20201110 08:32:43.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.473" endtime="20201110 08:32:43.594"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.599" endtime="20201110 08:32:43.604"></status>
</kw>
<msg timestamp="20201110 08:32:43.605" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:43.596" endtime="20201110 08:32:43.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.615" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:43.613" endtime="20201110 08:32:43.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.620" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:43.618" endtime="20201110 08:32:43.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.607" endtime="20201110 08:32:43.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.633" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:43.630" endtime="20201110 08:32:43.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:43.638" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:43.635" endtime="20201110 08:32:43.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.624" endtime="20201110 08:32:43.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:43.658" endtime="20201110 08:32:44.038"></status>
</kw>
<msg timestamp="20201110 08:32:44.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.150052014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.15009325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:43.654" endtime="20201110 08:32:44.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.150052014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.15009325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:44.048" endtime="20201110 08:32:44.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.068" endtime="20201110 08:32:44.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.647" endtime="20201110 08:32:44.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.642" endtime="20201110 08:32:44.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:44.089" level="INFO">${RESULT} = [{'time': 0.15009325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.123600000000005e-05, 'source_diff': 4.123600000000005e-05}, {'time': 0.151286681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:32:44.078" endtime="20201110 08:32:44.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:44.121" level="INFO">${OVERHEAD} = {'time': [0.15009325, 0.151286681, 0.15244575, 0.153602889, 0.154763667, 0.155927111, 0.157085069, 0.158248181, 0.159412764, 0.160573458, 0.161735417, 0.162895389, 0.164057222, 0.165219958, 0.16637945...</msg>
<status status="PASS" starttime="20201110 08:32:44.091" endtime="20201110 08:32:44.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.133" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:32:44.131" endtime="20201110 08:32:44.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.140" level="INFO">VALUE: [4.123600000000005e-05, 4.1138999999995596e-05, 4.1138999999995596e-05, 4.1125000000002965e-05, 4.1138999999995596e-05, 4.1111000000010334e-05, 4.1125000000002965e-05, 4.1138999999995596e-05, 4.1111000000010334e-05, 4.1125000000002965e-05, 4.109799999998942e-05, 4.1111000000010334e-05, 4.1138999999995596e-05, 4.115199999998875e-05, 4.120800000001479e-05, 4.1125000000002965e-05, 4.1111000000010334e-05, 4.116700000000861e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.1111000000010334e-05, 4.115299999998823e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.1194999999993875e-05, 4.109699999998995e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.1125000000002965e-05, 4.113900000002335e-05, 4.1138999999995596e-05, 4.111099999998258e-05, 4.1125000000002965e-05, 4.1138999999995596e-05, 4.116600000000914e-05, 4.1138999999995596e-05, 4.1125000000002965e-05, 4.107000000000416e-05, 4.111099999998258e-05, 4.116699999998086e-05, 4.1125000000002965e-05, 4.1111000000010334e-05, 4.1125000000002965e-05, 4.115200000001651e-05, 4.1138999999995596e-05, 4.1138999999995596e-05, 4.1125000000002965e-05]</msg>
<status status="PASS" starttime="20201110 08:32:44.136" endtime="20201110 08:32:44.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.124" endtime="20201110 08:32:44.142"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.149" endtime="20201110 08:32:44.152"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:44.157" endtime="20201110 08:32:44.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.153" endtime="20201110 08:32:44.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.144" endtime="20201110 08:32:44.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:43.468" endtime="20201110 08:32:44.183"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:43.326" endtime="20201110 08:32:44.184" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:44.202" endtime="20201110 08:32:44.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.197" endtime="20201110 08:32:44.225"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.259" endtime="20201110 08:32:44.277"></status>
</kw>
<msg timestamp="20201110 08:32:44.278" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.256" endtime="20201110 08:32:44.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.285" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.281" endtime="20201110 08:32:44.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.292" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:44.287" endtime="20201110 08:32:44.292"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:44.247" endtime="20201110 08:32:44.294"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:44.241" endtime="20201110 08:32:44.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.238" endtime="20201110 08:32:44.297"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:44.304" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:44.303" endtime="20201110 08:32:44.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.298" endtime="20201110 08:32:44.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.237" endtime="20201110 08:32:44.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.235" endtime="20201110 08:32:44.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.308" endtime="20201110 08:32:44.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.231" endtime="20201110 08:32:44.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.226" endtime="20201110 08:32:44.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.195" endtime="20201110 08:32:44.317"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.341" endtime="20201110 08:32:44.578"></status>
</kw>
<msg timestamp="20201110 08:32:44.579" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.338" endtime="20201110 08:32:44.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.585" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:44.581" endtime="20201110 08:32:44.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.588" endtime="20201110 08:32:44.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.329" endtime="20201110 08:32:44.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.323" endtime="20201110 08:32:44.595"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.599" endtime="20201110 08:32:44.604"></status>
</kw>
<msg timestamp="20201110 08:32:44.605" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:44.596" endtime="20201110 08:32:44.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.615" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:44.613" endtime="20201110 08:32:44.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.619" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:44.617" endtime="20201110 08:32:44.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.607" endtime="20201110 08:32:44.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.631" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:44.629" endtime="20201110 08:32:44.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:44.636" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:44.634" endtime="20201110 08:32:44.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.623" endtime="20201110 08:32:44.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:44.655" endtime="20201110 08:32:45.005"></status>
</kw>
<msg timestamp="20201110 08:32:45.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136338722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136418111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:44.652" endtime="20201110 08:32:45.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136338722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.136418111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:45.014" endtime="20201110 08:32:45.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.032" endtime="20201110 08:32:45.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.644" endtime="20201110 08:32:45.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.640" endtime="20201110 08:32:45.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:45.050" level="INFO">${RESULT} = [{'time': 0.136418111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.938900000001303e-05, 'source_diff': 7.938900000001303e-05}, {'time': 0.140760361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:45.040" endtime="20201110 08:32:45.050"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:45.087" level="INFO">${OVERHEAD} = {'time': [0.136418111, 0.140760361, 0.145050986, 0.149340903, 0.153633903, 0.157925694, 0.162218694, 0.166514972, 0.170804472, 0.175155333, 0.179445583, 0.183736514, 0.188027264, 0.192316958, 0.196605...</msg>
<status status="PASS" starttime="20201110 08:32:45.058" endtime="20201110 08:32:45.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.098" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:32:45.096" endtime="20201110 08:32:45.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.104" level="INFO">VALUE: [7.938900000001303e-05, 7.855500000000792e-05, 7.880499999998736e-05, 7.880599999998683e-05, 7.872199999997553e-05, 7.881900000000774e-05, 7.879099999999473e-05, 7.881900000000774e-05, 7.880500000001511e-05, 7.85269999999949e-05, 7.880499999998736e-05, 7.877800000000157e-05, 7.87919999999942e-05, 7.884700000002076e-05, 7.8846999999993e-05, 7.881900000000774e-05, 7.87919999999942e-05, 7.854200000001477e-05, 7.876400000000894e-05, 7.880599999998683e-05, 7.881900000000774e-05, 7.879099999999473e-05, 7.881900000000774e-05, 7.873599999999592e-05, 7.852799999999438e-05, 7.877800000000157e-05, 7.880600000001459e-05, 7.879100000002248e-05, 7.8846999999993e-05, 7.879099999996697e-05, 7.880500000001511e-05, 7.880599999998683e-05, 7.852800000002214e-05, 7.876400000000894e-05, 7.87919999999942e-05, 7.881900000000774e-05, 7.880500000001511e-05, 7.879200000004971e-05, 7.880599999998683e-05, 7.87919999999942e-05, 7.852800000002214e-05, 7.879099999996697e-05, 7.880500000001511e-05, 7.880599999998683e-05, 7.87919999999942e-05, 7.872199999997553e-05, 7.880500000001511e-05, 7.855499999998017e-05, 7.880500000001511e-05, 7.872200000003104e-05]</msg>
<status status="PASS" starttime="20201110 08:32:45.101" endtime="20201110 08:32:45.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.089" endtime="20201110 08:32:45.106"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.112" endtime="20201110 08:32:45.115"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:45.121" endtime="20201110 08:32:45.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.116" endtime="20201110 08:32:45.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.108" endtime="20201110 08:32:45.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:44.318" endtime="20201110 08:32:45.148"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:44.189" endtime="20201110 08:32:45.149" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:45.167" endtime="20201110 08:32:45.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.162" endtime="20201110 08:32:45.191"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.229" endtime="20201110 08:32:45.247"></status>
</kw>
<msg timestamp="20201110 08:32:45.248" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.226" endtime="20201110 08:32:45.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.255" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.251" endtime="20201110 08:32:45.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.261" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:45.257" endtime="20201110 08:32:45.262"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:45.218" endtime="20201110 08:32:45.264"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:45.210" endtime="20201110 08:32:45.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.207" endtime="20201110 08:32:45.266"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:45.274" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:45.273" endtime="20201110 08:32:45.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.268" endtime="20201110 08:32:45.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.205" endtime="20201110 08:32:45.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.203" endtime="20201110 08:32:45.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.278" endtime="20201110 08:32:45.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.198" endtime="20201110 08:32:45.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.192" endtime="20201110 08:32:45.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.160" endtime="20201110 08:32:45.285"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.309" endtime="20201110 08:32:45.333"></status>
</kw>
<msg timestamp="20201110 08:32:45.334" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.304" endtime="20201110 08:32:45.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.341" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.337" endtime="20201110 08:32:45.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.343" endtime="20201110 08:32:45.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.297" endtime="20201110 08:32:45.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.291" endtime="20201110 08:32:45.350"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.354" endtime="20201110 08:32:45.359"></status>
</kw>
<msg timestamp="20201110 08:32:45.360" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:45.352" endtime="20201110 08:32:45.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.370" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:45.368" endtime="20201110 08:32:45.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.375" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:45.372" endtime="20201110 08:32:45.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.362" endtime="20201110 08:32:45.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.386" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:45.384" endtime="20201110 08:32:45.387"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.391" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:45.389" endtime="20201110 08:32:45.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.378" endtime="20201110 08:32:45.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.409" endtime="20201110 08:32:45.754"></status>
</kw>
<msg timestamp="20201110 08:32:45.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135996611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135998, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:45.406" endtime="20201110 08:32:45.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.135996611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.135998, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:45.764" endtime="20201110 08:32:45.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.782" endtime="20201110 08:32:45.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.399" endtime="20201110 08:32:45.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.394" endtime="20201110 08:32:45.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:45.801" level="INFO">${RESULT} = [{'time': 0.135998, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3890000000182923e-06, 'source_diff': 1.3890000000182923e-06}, {'time': 0.136007764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:32:45.791" endtime="20201110 08:32:45.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:45.834" level="INFO">${OVERHEAD} = {'time': [0.135998, 0.136007764, 0.136019292, 0.136028069, 0.1360405, 0.136051889, 0.136065667, 0.136077444, 0.136088347, 0.136101375, 0.136113153, 0.136128319, 0.136136208, 0.136151111, 0.136160514, ...</msg>
<status status="PASS" starttime="20201110 08:32:45.803" endtime="20201110 08:32:45.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.848" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:32:45.845" endtime="20201110 08:32:45.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:45.855" level="INFO">VALUE: [1.3890000000182923e-06, 1.3749999999979057e-06, 1.3750000000256613e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.346999999984888e-06, 1.3749999999979057e-06, 1.3339999999917307e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.360999999977519e-06, 1.3749999999979057e-06, 1.3750000000256613e-06, 1.332999999992257e-06, 1.3750000000256613e-06, 1.3749999999979057e-06, 1.3610000000052747e-06, 1.3889999999905367e-06, 1.3750000000256613e-06, 1.3890000000182923e-06, 1.360999999977519e-06, 1.360999999977519e-06, 1.3749999999979057e-06, 1.3889999999905367e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3890000000182923e-06, 1.3890000000182923e-06, 1.3889999999905367e-06, 1.3889999999905367e-06, 1.3749999999979057e-06, 1.346999999984888e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3750000000256613e-06, 1.3889999999905367e-06, 1.3610000000052747e-06, 1.3889999999905367e-06, 1.3620000000047483e-06, 1.3750000000256613e-06, 1.4030000000109233e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3749999999979057e-06, 1.3610000000052747e-06]</msg>
<status status="PASS" starttime="20201110 08:32:45.851" endtime="20201110 08:32:45.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.836" endtime="20201110 08:32:45.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.866" endtime="20201110 08:32:45.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:45.876" endtime="20201110 08:32:45.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.871" endtime="20201110 08:32:45.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.861" endtime="20201110 08:32:45.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.287" endtime="20201110 08:32:45.904"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:45.153" endtime="20201110 08:32:45.906" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:45.924" endtime="20201110 08:32:45.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.920" endtime="20201110 08:32:45.949"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:45.982" endtime="20201110 08:32:46.000"></status>
</kw>
<msg timestamp="20201110 08:32:46.002" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:45.979" endtime="20201110 08:32:46.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.008" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.004" endtime="20201110 08:32:46.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.015" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:46.010" endtime="20201110 08:32:46.015"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:45.971" endtime="20201110 08:32:46.017"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:45.965" endtime="20201110 08:32:46.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.962" endtime="20201110 08:32:46.019"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:46.028" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:46.027" endtime="20201110 08:32:46.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.022" endtime="20201110 08:32:46.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.960" endtime="20201110 08:32:46.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.959" endtime="20201110 08:32:46.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.032" endtime="20201110 08:32:46.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.955" endtime="20201110 08:32:46.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.950" endtime="20201110 08:32:46.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:45.917" endtime="20201110 08:32:46.039"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.061" endtime="20201110 08:32:46.143"></status>
</kw>
<msg timestamp="20201110 08:32:46.144" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.057" endtime="20201110 08:32:46.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.151" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.147" endtime="20201110 08:32:46.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.153" endtime="20201110 08:32:46.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.050" endtime="20201110 08:32:46.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.044" endtime="20201110 08:32:46.160"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.164" endtime="20201110 08:32:46.169"></status>
</kw>
<msg timestamp="20201110 08:32:46.170" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:46.162" endtime="20201110 08:32:46.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.182" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:46.178" endtime="20201110 08:32:46.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.187" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:46.185" endtime="20201110 08:32:46.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.172" endtime="20201110 08:32:46.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.199" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:46.197" endtime="20201110 08:32:46.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.203" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:46.201" endtime="20201110 08:32:46.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.190" endtime="20201110 08:32:46.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.222" endtime="20201110 08:32:46.565"></status>
</kw>
<msg timestamp="20201110 08:32:46.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130266458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13028075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:46.219" endtime="20201110 08:32:46.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130266458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.13028075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:32:46.575" endtime="20201110 08:32:46.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.599" endtime="20201110 08:32:46.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.211" endtime="20201110 08:32:46.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.207" endtime="20201110 08:32:46.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:46.621" level="INFO">${RESULT} = [{'time': 0.13028075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4291999999999083e-05, 'source_diff': 1.4291999999999083e-05}, {'time': 0.131451542, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:32:46.610" endtime="20201110 08:32:46.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:46.654" level="INFO">${OVERHEAD} = {'time': [0.13028075, 0.131451542, 0.132628847, 0.133799264, 0.134972056, 0.136147972, 0.137319014, 0.138493431, 0.139665986, 0.140843292, 0.142014069, 0.143191486, 0.144366681, 0.145542236, 0.1467196...</msg>
<status status="PASS" starttime="20201110 08:32:46.623" endtime="20201110 08:32:46.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.665" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:32:46.663" endtime="20201110 08:32:46.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.671" level="INFO">VALUE: [1.4291999999999083e-05, 1.4305999999991714e-05, 1.430499999999224e-05, 1.4305999999991714e-05, 1.430600000001947e-05, 1.430499999999224e-05, 1.4291999999999083e-05, 1.4264000000013821e-05, 1.430499999999224e-05, 1.430600000001947e-05, 1.429099999999961e-05, 1.4305000000019996e-05, 1.4319999999984345e-05, 1.4333000000005258e-05, 1.4305999999991714e-05, 1.430600000001947e-05, 1.429099999999961e-05, 1.430600000001947e-05, 1.4305999999991714e-05, 1.434699999999789e-05, 1.4334000000004732e-05, 1.4319000000012627e-05, 1.4263999999986066e-05, 1.4291999999999083e-05, 1.4305999999991714e-05, 1.430499999999224e-05, 1.434699999999789e-05, 1.4374999999983151e-05, 1.4291999999999083e-05, 1.4305999999991714e-05, 1.430499999999224e-05, 1.430600000001947e-05, 1.430600000001947e-05, 1.4319000000012627e-05, 1.43200000000121e-05, 1.4305999999991714e-05, 1.430499999999224e-05, 1.4291999999999083e-05, 1.4305999999991714e-05, 1.4249999999993435e-05, 1.4305999999991714e-05, 1.429099999999961e-05, 1.4319000000012627e-05, 1.4319999999984345e-05, 1.4305000000019996e-05, 1.4305999999991714e-05, 1.43200000000121e-05, 1.4305000000019996e-05, 1.4305999999991714e-05, 1.430499999999224e-05]</msg>
<status status="PASS" starttime="20201110 08:32:46.667" endtime="20201110 08:32:46.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.656" endtime="20201110 08:32:46.673"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.679" endtime="20201110 08:32:46.682"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:46.688" endtime="20201110 08:32:46.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.683" endtime="20201110 08:32:46.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.675" endtime="20201110 08:32:46.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.040" endtime="20201110 08:32:46.713"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:45.910" endtime="20201110 08:32:46.715" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:46.736" endtime="20201110 08:32:46.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.731" endtime="20201110 08:32:46.763"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.820" endtime="20201110 08:32:46.844"></status>
</kw>
<msg timestamp="20201110 08:32:46.846" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.814" endtime="20201110 08:32:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.850" endtime="20201110 08:32:46.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:46.870" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:46.862" endtime="20201110 08:32:46.871"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:46.801" endtime="20201110 08:32:46.874"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:46.791" endtime="20201110 08:32:46.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.788" endtime="20201110 08:32:46.877"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:46.885" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:46.883" endtime="20201110 08:32:46.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.879" endtime="20201110 08:32:46.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.785" endtime="20201110 08:32:46.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.780" endtime="20201110 08:32:46.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.888" endtime="20201110 08:32:46.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.773" endtime="20201110 08:32:46.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.766" endtime="20201110 08:32:46.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.727" endtime="20201110 08:32:46.895"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:46.918" endtime="20201110 08:32:47.157"></status>
</kw>
<msg timestamp="20201110 08:32:47.158" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:46.914" endtime="20201110 08:32:47.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.164" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:47.160" endtime="20201110 08:32:47.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.167" endtime="20201110 08:32:47.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.907" endtime="20201110 08:32:47.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.901" endtime="20201110 08:32:47.173"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.178" endtime="20201110 08:32:47.182"></status>
</kw>
<msg timestamp="20201110 08:32:47.183" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:32:47.175" endtime="20201110 08:32:47.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.193" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:32:47.191" endtime="20201110 08:32:47.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.198" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:32:47.196" endtime="20201110 08:32:47.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.185" endtime="20201110 08:32:47.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.210" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:32:47.207" endtime="20201110 08:32:47.210"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.214" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:32:47.212" endtime="20201110 08:32:47.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.201" endtime="20201110 08:32:47.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.235" endtime="20201110 08:32:47.592"></status>
</kw>
<msg timestamp="20201110 08:32:47.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.178487361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178514875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:47.232" endtime="20201110 08:32:47.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.178487361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.178514875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:47.604" endtime="20201110 08:32:47.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.628" endtime="20201110 08:32:47.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.222" endtime="20201110 08:32:47.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.218" endtime="20201110 08:32:47.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:47.651" level="INFO">${RESULT} = [{'time': 0.178514875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.75139999999785e-05, 'source_diff': 2.75139999999785e-05}, {'time': 0.182831764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:32:47.641" endtime="20201110 08:32:47.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:32:47.682" level="INFO">${OVERHEAD} = {'time': [0.178514875, 0.182831764, 0.187150167, 0.191468194, 0.195839444, 0.200154972, 0.204476125, 0.208793944, 0.213110181, 0.217429833, 0.221748486, 0.226064639, 0.230433014, 0.234754417, 0.239076...</msg>
<status status="PASS" starttime="20201110 08:32:47.653" endtime="20201110 08:32:47.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.694" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:32:47.691" endtime="20201110 08:32:47.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.699" level="INFO">VALUE: [2.75139999999785e-05, 2.7486000000020994e-05, 2.7485999999993238e-05, 2.7444000000015345e-05, 2.7500000000013625e-05, 2.7485999999993238e-05, 2.7486000000020994e-05, 2.755500000001243e-05, 2.7514000000006256e-05, 2.75139999999785e-05, 2.7514000000006256e-05, 2.7500000000013625e-05, 2.7485999999993238e-05, 2.7485999999993238e-05, 2.749999999998587e-05, 2.7570000000004535e-05, 2.7485999999993238e-05, 2.7500000000013625e-05, 2.7500000000013625e-05, 2.747199999997285e-05, 2.7486000000020994e-05, 2.742999999999496e-05, 2.7472000000028363e-05, 2.7499999999958114e-05, 2.7500000000013625e-05, 2.7486000000020994e-05, 2.745799999998022e-05, 2.7513999999950745e-05, 2.7514000000006256e-05, 2.7500000000013625e-05, 2.7514000000006256e-05, 2.745799999998022e-05, 2.744500000001482e-05, 2.755599999998415e-05, 2.7499999999958114e-05, 2.7500000000013625e-05, 2.7500000000013625e-05, 2.7500000000013625e-05, 2.755500000001243e-05, 2.7512999999979026e-05, 2.7500000000013625e-05, 2.744399999998759e-05, 2.7486000000020994e-05, 2.7485999999965482e-05, 2.7500000000013625e-05, 2.7527999999998887e-05, 2.7514000000006256e-05, 2.7499999999958114e-05, 2.7500000000013625e-05, 2.7500000000013625e-05]</msg>
<status status="PASS" starttime="20201110 08:32:47.696" endtime="20201110 08:32:47.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.684" endtime="20201110 08:32:47.702"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:47.708" endtime="20201110 08:32:47.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:47.717" endtime="20201110 08:32:47.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.712" endtime="20201110 08:32:47.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.704" endtime="20201110 08:32:47.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:46.897" endtime="20201110 08:32:47.742"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:46.719" endtime="20201110 08:32:47.744" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:14.813" endtime="20201110 08:32:47.763"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:32:47.934" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:32:47.950" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:32:48.777" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:32:47.931" endtime="20201110 08:32:48.779"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:32:51.785" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:32:48.781" endtime="20201110 08:32:51.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.928" endtime="20201110 08:32:51.788"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:51.792" endtime="20201110 08:32:52.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:51.789" endtime="20201110 08:32:52.132"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.164" endtime="20201110 08:32:52.188"></status>
</kw>
<msg timestamp="20201110 08:32:52.189" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.161" endtime="20201110 08:32:52.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.191" endtime="20201110 08:32:52.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.203" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:52.198" endtime="20201110 08:32:52.204"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:52.153" endtime="20201110 08:32:52.206"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:52.148" endtime="20201110 08:32:52.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.144" endtime="20201110 08:32:52.208"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:52.217" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:52.215" endtime="20201110 08:32:52.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.210" endtime="20201110 08:32:52.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.143" endtime="20201110 08:32:52.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.141" endtime="20201110 08:32:52.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.221" endtime="20201110 08:32:52.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.138" endtime="20201110 08:32:52.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.228" endtime="20201110 08:32:52.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.134" endtime="20201110 08:32:52.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:47.925" endtime="20201110 08:32:52.234"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.252" endtime="20201110 08:32:52.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.245" endtime="20201110 08:32:52.276"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.311" endtime="20201110 08:32:52.330"></status>
</kw>
<msg timestamp="20201110 08:32:52.331" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.307" endtime="20201110 08:32:52.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.338" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.333" endtime="20201110 08:32:52.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.345" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:32:52.340" endtime="20201110 08:32:52.346"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:52.300" endtime="20201110 08:32:52.348"></status>
</kw>
<status status="FAIL" starttime="20201110 08:32:52.293" endtime="20201110 08:32:52.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.290" endtime="20201110 08:32:52.350"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:32:52.360" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:32:52.358" endtime="20201110 08:32:52.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.352" endtime="20201110 08:32:52.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.288" endtime="20201110 08:32:52.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.286" endtime="20201110 08:32:52.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.364" endtime="20201110 08:32:52.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.282" endtime="20201110 08:32:52.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.277" endtime="20201110 08:32:52.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.242" endtime="20201110 08:32:52.372"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.399" endtime="20201110 08:32:52.417"></status>
</kw>
<msg timestamp="20201110 08:32:52.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.395" endtime="20201110 08:32:52.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:52.420" endtime="20201110 08:32:52.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.427" endtime="20201110 08:32:52.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.387" endtime="20201110 08:32:52.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.381" endtime="20201110 08:32:52.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.455" endtime="20201110 08:32:52.848"></status>
</kw>
<msg timestamp="20201110 08:32:52.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140477542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140480389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.451" endtime="20201110 08:32:52.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.140477542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.140480389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:52.858" endtime="20201110 08:32:52.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.878" endtime="20201110 08:32:52.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.441" endtime="20201110 08:32:52.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.436" endtime="20201110 08:32:52.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:52.897" level="INFO">${RESULT} = [{'time': 0.140480389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.140491667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:52.887" endtime="20201110 08:32:52.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:52.934" level="INFO">${ACCURACY} = {'time': [0.140480389, 0.140491667, 0.140500625, 0.140509653, 0.140517736, 0.140524472, 0.140537403, 0.140548861, 0.140554625, 0.140567569, 0.140577431, 0.140588431, 0.140600708, 0.140607486, 0.140615...</msg>
<status status="PASS" starttime="20201110 08:32:52.899" endtime="20201110 08:32:52.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.949" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:32:52.947" endtime="20201110 08:32:52.950"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:52.957" level="INFO">VALUE: [2.847000000000266e-06, 2.8479999999997396e-06, 3.388999999992537e-06, 3.361000000007275e-06, 3.4170000000055545e-06, 2.8750000000132836e-06, 3.4030000000129235e-06, 3.402999999985168e-06, 3.3609999999795193e-06, 2.901999999999072e-06, 2.8750000000132836e-06, 3.3620000000067485e-06, 2.860999999992897e-06, 2.860999999992897e-06, 2.860999999992897e-06, 3.333999999993731e-06, 2.860999999992897e-06, 3.402999999985168e-06, 2.8610000000206526e-06, 3.416999999977799e-06, 2.8610000000206526e-06, 2.9020000000268276e-06, 2.7770000000093553e-06, 3.361000000007275e-06, 2.847000000000266e-06, 2.860999999992897e-06, 3.3879999999930632e-06, 3.361000000007275e-06, 2.847000000000266e-06, 2.8049999999946174e-06, 3.3609999999795193e-06, 3.4170000000055545e-06, 2.847000000000266e-06, 3.402999999985168e-06, 2.847000000000266e-06, 3.333999999993731e-06, 3.3609999999795193e-06, 3.361000000007275e-06, 2.8750000000132836e-06, 3.361000000007275e-06, 2.8479999999997396e-06, 3.361000000007275e-06, 3.4170000000055545e-06, 2.805000000022373e-06, 3.4030000000129235e-06, 3.889000000006915e-06, 2.847000000000266e-06, 3.4030000000129235e-06, 3.374999999999906e-06, 2.860999999992897e-06]</msg>
<status status="PASS" starttime="20201110 08:32:52.952" endtime="20201110 08:32:52.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.936" endtime="20201110 08:32:52.963"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:52.971" endtime="20201110 08:32:52.974"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:52.980" endtime="20201110 08:32:53.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.976" endtime="20201110 08:32:53.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.966" endtime="20201110 08:32:53.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.377" endtime="20201110 08:32:53.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.375" endtime="20201110 08:32:53.006"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.029" endtime="20201110 08:32:53.046"></status>
</kw>
<msg timestamp="20201110 08:32:53.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.025" endtime="20201110 08:32:53.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.050" endtime="20201110 08:32:53.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.056" endtime="20201110 08:32:53.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.018" endtime="20201110 08:32:53.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.012" endtime="20201110 08:32:53.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.079" endtime="20201110 08:32:53.429"></status>
</kw>
<msg timestamp="20201110 08:32:53.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041839389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.076" endtime="20201110 08:32:53.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041839389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041843292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.438" endtime="20201110 08:32:53.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.457" endtime="20201110 08:32:53.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.069" endtime="20201110 08:32:53.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.064" endtime="20201110 08:32:53.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:53.475" level="INFO">${RESULT} = [{'time': 0.041843292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.902999999999546e-06, 'source_diff': 3.902999999999546e-06}, {'time': 0.04185525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:32:53.466" endtime="20201110 08:32:53.475"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:53.505" level="INFO">${ACCURACY} = {'time': [0.041843292, 0.04185525, 0.041868333, 0.041875333, 0.041888333, 0.041896153, 0.041903, 0.041913069, 0.041920417, 0.041929236, 0.041943097, 0.041951153, 0.041962417, 0.041975, 0.041988194, 0....</msg>
<status status="PASS" starttime="20201110 08:32:53.477" endtime="20201110 08:32:53.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.516" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:32:53.514" endtime="20201110 08:32:53.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.522" level="INFO">VALUE: [3.902999999999546e-06, 3.916999999999116e-06, 3.915999999999642e-06, 4.471999999998422e-06, 4.471999999998422e-06, 3.916999999999116e-06, 4.4310000000061245e-06, 4.402000000000572e-06, 4.430999999999186e-06, 3.916999999999116e-06, 3.943999999998782e-06, 4.416999999999616e-06, 4.4449999999987555e-06, 4.403000000000046e-06, 3.902000000000072e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.5000000000045e-06, 4.457999999998852e-06, 4.402000000000572e-06, 4.416999999999616e-06, 3.888000000000502e-06, 4.389000000000476e-06, 3.916999999999116e-06, 4.4310000000061245e-06, 4.458000000005791e-06, 3.902999999999546e-06, 4.471999999998422e-06, 3.916999999999116e-06, 4.416000000000142e-06, 3.902999999999546e-06, 4.416999999999616e-06, 3.902000000000072e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.443999999999282e-06, 3.916999999999116e-06, 4.403000000000046e-06, 4.416000000000142e-06, 4.416999999999616e-06, 4.430999999999186e-06, 4.402000000000572e-06, 4.471999999998422e-06, 3.902999999999546e-06, 3.902999999999546e-06, 4.416000000000142e-06, 3.916999999999116e-06, 4.458999999998325e-06]</msg>
<status status="PASS" starttime="20201110 08:32:53.519" endtime="20201110 08:32:53.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.507" endtime="20201110 08:32:53.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.531" endtime="20201110 08:32:53.534"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:53.539" endtime="20201110 08:32:53.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.535" endtime="20201110 08:32:53.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.527" endtime="20201110 08:32:53.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.008" endtime="20201110 08:32:53.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.007" endtime="20201110 08:32:53.565"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.588" endtime="20201110 08:32:53.605"></status>
</kw>
<msg timestamp="20201110 08:32:53.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.584" endtime="20201110 08:32:53.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:53.612" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:53.608" endtime="20201110 08:32:53.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.615" endtime="20201110 08:32:53.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.577" endtime="20201110 08:32:53.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.571" endtime="20201110 08:32:53.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:53.638" endtime="20201110 08:32:54.008"></status>
</kw>
<msg timestamp="20201110 08:32:54.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041636153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041641639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:53.635" endtime="20201110 08:32:54.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041636153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041641639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.018" endtime="20201110 08:32:54.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.037" endtime="20201110 08:32:54.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.627" endtime="20201110 08:32:54.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.623" endtime="20201110 08:32:54.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:54.054" level="INFO">${RESULT} = [{'time': 0.041641639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.485999999998992e-06, 'source_diff': 5.485999999998992e-06}, {'time': 0.041654764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:54.045" endtime="20201110 08:32:54.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:54.085" level="INFO">${ACCURACY} = {'time': [0.041641639, 0.041654764, 0.041665972, 0.041677056, 0.041689042, 0.041702542, 0.041712042, 0.041725931, 0.04173375, 0.04174875, 0.041758056, 0.041768708, 0.041782861, 0.041793722, 0.04180272...</msg>
<status status="PASS" starttime="20201110 08:32:54.056" endtime="20201110 08:32:54.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.095" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:32:54.093" endtime="20201110 08:32:54.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.101" level="INFO">VALUE: [5.485999999998992e-06, 5.471999999999422e-06, 5.541000000004737e-06, 4.986999999997965e-06, 4.9449999999992555e-06, 4.9589999999988255e-06, 4.9589999999988255e-06, 5.472999999998895e-06, 5.527999999997701e-06, 4.957999999999352e-06, 5.51400000000507e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.971999999998922e-06, 4.957999999999352e-06, 5.471999999999422e-06, 5.485999999998992e-06, 4.971999999998922e-06, 4.930999999999686e-06, 5.527999999997701e-06, 5.5139999999981315e-06, 4.9589999999988255e-06, 5.52800000000464e-06, 4.917000000000116e-06, 4.957999999999352e-06, 5.485999999998992e-06, 5.526999999998228e-06, 5.5139999999981315e-06, 5.444000000000282e-06, 4.957999999999352e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.972999999998395e-06, 5.472999999998895e-06, 5.485999999998992e-06, 5.51400000000507e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.943999999999782e-06, 4.957999999999352e-06, 4.985999999998492e-06, 4.959000000005764e-06, 4.959000000005764e-06, 4.917000000000116e-06, 4.971999999998922e-06, 4.971999999998922e-06, 5.485999999998992e-06, 4.957999999999352e-06, 4.9589999999988255e-06, 5.541999999997271e-06]</msg>
<status status="PASS" starttime="20201110 08:32:54.098" endtime="20201110 08:32:54.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.086" endtime="20201110 08:32:54.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.110" endtime="20201110 08:32:54.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.119" endtime="20201110 08:32:54.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.114" endtime="20201110 08:32:54.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.106" endtime="20201110 08:32:54.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.567" endtime="20201110 08:32:54.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:53.566" endtime="20201110 08:32:54.144"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.167" endtime="20201110 08:32:54.193"></status>
</kw>
<msg timestamp="20201110 08:32:54.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.163" endtime="20201110 08:32:54.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.198" endtime="20201110 08:32:54.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.207" endtime="20201110 08:32:54.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.156" endtime="20201110 08:32:54.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.150" endtime="20201110 08:32:54.217"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.240" endtime="20201110 08:32:54.573"></status>
</kw>
<msg timestamp="20201110 08:32:54.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047109139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047115153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.236" endtime="20201110 08:32:54.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047109139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047115153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.583" endtime="20201110 08:32:54.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.601" endtime="20201110 08:32:54.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.226" endtime="20201110 08:32:54.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.219" endtime="20201110 08:32:54.608"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:54.619" level="INFO">${RESULT} = [{'time': 0.047115153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0139999999986316e-06, 'source_diff': 6.0139999999986316e-06}, {'time': 0.047127472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:54.610" endtime="20201110 08:32:54.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:54.650" level="INFO">${ACCURACY} = {'time': [0.047115153, 0.047127472, 0.047137514, 0.047153458, 0.047164569, 0.047179278, 0.047195389, 0.047207569, 0.047223625, 0.047233194, 0.047245639, 0.047255333, 0.047271528, 0.047284583, 0.047294...</msg>
<status status="PASS" starttime="20201110 08:32:54.621" endtime="20201110 08:32:54.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.661" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:32:54.659" endtime="20201110 08:32:54.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.667" level="INFO">VALUE: [6.0139999999986316e-06, 6.0139999999986316e-06, 6.0139999999986316e-06, 6.027000000005667e-06, 6.555000000005307e-06, 6.041999999997771e-06, 6.5829999999975075e-06, 6.026999999998728e-06, 5.999999999999062e-06, 5.526999999998228e-06, 6.0279999999982015e-06, 6.526999999999228e-06, 6.0279999999982015e-06, 5.999999999999062e-06, 6.554999999998368e-06, 6.541999999998271e-06, 6.526999999999228e-06, 6.555000000005307e-06, 6.0140000000055704e-06, 6.568999999997938e-06, 6.555000000005307e-06, 6.57000000000435e-06, 6.0279999999982015e-06, 6.040999999998298e-06, 6.57000000000435e-06, 6.0279999999982015e-06, 6.0140000000055704e-06, 6.58400000000392e-06, 6.0139999999986316e-06, 6.5279999999987015e-06, 6.04200000000471e-06, 6.568999999997938e-06, 6.52800000000564e-06, 6.5279999999987015e-06, 6.0550000000048065e-06, 6.555999999997841e-06, 6.0279999999982015e-06, 6.52800000000564e-06, 5.485999999998992e-06, 6.0139999999986316e-06, 6.013000000006097e-06, 6.04200000000471e-06, 6.526999999999228e-06, 6.499999999999562e-06, 5.971999999999922e-06, 6.554999999998368e-06, 6.5279999999987015e-06, 6.0139999999986316e-06, 6.499999999999562e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201110 08:32:54.664" endtime="20201110 08:32:54.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.652" endtime="20201110 08:32:54.670"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.676" endtime="20201110 08:32:54.679"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:54.685" endtime="20201110 08:32:54.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.680" endtime="20201110 08:32:54.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.672" endtime="20201110 08:32:54.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.146" endtime="20201110 08:32:54.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.145" endtime="20201110 08:32:54.710"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.733" endtime="20201110 08:32:54.750"></status>
</kw>
<msg timestamp="20201110 08:32:54.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.730" endtime="20201110 08:32:54.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:54.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:54.754" endtime="20201110 08:32:54.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.761" endtime="20201110 08:32:54.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.722" endtime="20201110 08:32:54.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.717" endtime="20201110 08:32:54.769"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:54.788" endtime="20201110 08:32:55.137"></status>
</kw>
<msg timestamp="20201110 08:32:55.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041426694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041434264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:54.784" endtime="20201110 08:32:55.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041426694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041434264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.147" endtime="20201110 08:32:55.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.166" endtime="20201110 08:32:55.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.776" endtime="20201110 08:32:55.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.771" endtime="20201110 08:32:55.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.183" level="INFO">${RESULT} = [{'time': 0.041434264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.569999999998411e-06, 'source_diff': 7.569999999998411e-06}, {'time': 0.041446181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:55.174" endtime="20201110 08:32:55.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:55.218" level="INFO">${ACCURACY} = {'time': [0.041434264, 0.041446181, 0.041458931, 0.041474111, 0.041486972, 0.041504139, 0.041519069, 0.041530319, 0.041540306, 0.041555931, 0.041566042, 0.041582028, 0.041597292, 0.041613222, 0.041624...</msg>
<status status="PASS" starttime="20201110 08:32:55.186" endtime="20201110 08:32:55.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.229" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:32:55.227" endtime="20201110 08:32:55.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.235" level="INFO">VALUE: [7.569999999998411e-06, 7.5419999999992715e-06, 7.083999999997481e-06, 7.625000000004156e-06, 7.068999999998438e-06, 7.611000000004586e-06, 7.637999999997314e-06, 7.597000000005016e-06, 7.583999999997981e-06, 7.069999999997911e-06, 7.055999999998341e-06, 7.555999999998841e-06, 7.527999999999702e-06, 7.624999999997217e-06, 6.541999999998271e-06, 7.069999999997911e-06, 7.5419999999992715e-06, 6.5690000000048765e-06, 7.624999999997217e-06, 7.097999999997051e-06, 7.583999999997981e-06, 7.0279999999992016e-06, 7.08400000000442e-06, 6.569999999997411e-06, 7.0830000000049465e-06, 7.069999999997911e-06, 7.068999999998438e-06, 7.05600000000528e-06, 7.05600000000528e-06, 7.0829999999980076e-06, 7.054999999998868e-06, 7.054999999998868e-06, 7.582999999998508e-06, 6.554999999998368e-06, 7.0830000000049465e-06, 7.068999999998438e-06, 6.555999999997841e-06, 7.569999999998411e-06, 6.541999999998271e-06, 7.5969999999980775e-06, 7.068999999998438e-06, 7.5419999999992715e-06, 7.08400000000442e-06, 7.05600000000528e-06, 7.069999999997911e-06, 6.5279999999987015e-06, 6.5279999999987015e-06, 7.08400000000442e-06, 7.097999999997051e-06, 7.000000000000062e-06]</msg>
<status status="PASS" starttime="20201110 08:32:55.232" endtime="20201110 08:32:55.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.220" endtime="20201110 08:32:55.239"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.245" endtime="20201110 08:32:55.248"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.254" endtime="20201110 08:32:55.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.249" endtime="20201110 08:32:55.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.241" endtime="20201110 08:32:55.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.712" endtime="20201110 08:32:55.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:54.711" endtime="20201110 08:32:55.280"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.303" endtime="20201110 08:32:55.321"></status>
</kw>
<msg timestamp="20201110 08:32:55.322" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.300" endtime="20201110 08:32:55.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.328" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.324" endtime="20201110 08:32:55.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.331" endtime="20201110 08:32:55.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.292" endtime="20201110 08:32:55.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.287" endtime="20201110 08:32:55.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.354" endtime="20201110 08:32:55.725"></status>
</kw>
<msg timestamp="20201110 08:32:55.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:55.351" endtime="20201110 08:32:55.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.750" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042931403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042939, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:32:55.734" endtime="20201110 08:32:55.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.753" endtime="20201110 08:32:55.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.344" endtime="20201110 08:32:55.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.339" endtime="20201110 08:32:55.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:55.770" level="INFO">${RESULT} = [{'time': 0.042939, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5969999999980775e-06, 'source_diff': 7.5969999999980775e-06}, {'time': 0.042950417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:32:55.761" endtime="20201110 08:32:55.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:55.802" level="INFO">${ACCURACY} = {'time': [0.042939, 0.042950417, 0.042963097, 0.042978153, 0.042989444, 0.043005264, 0.043017472, 0.043028278, 0.043040333, 0.043054083, 0.043069125, 0.04308, 0.043094083, 0.04311, 0.043126458, 0.0431...</msg>
<status status="PASS" starttime="20201110 08:32:55.772" endtime="20201110 08:32:55.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.813" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:32:55.810" endtime="20201110 08:32:55.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.818" level="INFO">VALUE: [7.5969999999980775e-06, 8.097999999998051e-06, 8.138999999997287e-06, 8.152999999996857e-06, 8.138000000004753e-06, 8.653000000004296e-06, 8.638999999997787e-06, 8.139000000004226e-06, 8.624999999998217e-06, 7.568999999998938e-06, 7.5969999999980775e-06, 8.068999999999438e-06, 8.165999999996953e-06, 8.125000000004656e-06, 8.679999999997023e-06, 8.138999999997287e-06, 8.124999999997717e-06, 8.639000000004726e-06, 7.625000000004156e-06, 8.695000000003006e-06, 8.111000000005086e-06, 8.096999999998578e-06, 8.679999999997023e-06, 8.195000000002506e-06, 8.110999999998147e-06, 8.111000000005086e-06, 8.125000000004656e-06, 7.624999999997217e-06, 7.611000000004586e-06, 8.679999999997023e-06, 7.597000000005016e-06, 8.681000000003436e-06, 8.638999999997787e-06, 8.110999999998147e-06, 7.611999999997121e-06, 8.110999999998147e-06, 8.638999999997787e-06, 8.181000000002936e-06, 8.639000000004726e-06, 8.194000000003032e-06, 8.125000000004656e-06, 8.096999999998578e-06, 8.125000000004656e-06, 8.139000000004226e-06, 8.139000000004226e-06, 8.124999999997717e-06, 8.139000000004226e-06, 8.166999999996427e-06, 8.124999999997717e-06, 8.639000000004726e-06]</msg>
<status status="PASS" starttime="20201110 08:32:55.815" endtime="20201110 08:32:55.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.803" endtime="20201110 08:32:55.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.828" endtime="20201110 08:32:55.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:55.836" endtime="20201110 08:32:55.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.831" endtime="20201110 08:32:55.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.823" endtime="20201110 08:32:55.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.282" endtime="20201110 08:32:55.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.281" endtime="20201110 08:32:55.862"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.884" endtime="20201110 08:32:55.903"></status>
</kw>
<msg timestamp="20201110 08:32:55.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.881" endtime="20201110 08:32:55.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:55.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:55.906" endtime="20201110 08:32:55.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.912" endtime="20201110 08:32:55.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.874" endtime="20201110 08:32:55.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.868" endtime="20201110 08:32:55.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:55.935" endtime="20201110 08:32:56.299"></status>
</kw>
<msg timestamp="20201110 08:32:56.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041874444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:55.932" endtime="20201110 08:32:56.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041874444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041883111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.309" endtime="20201110 08:32:56.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.330" endtime="20201110 08:32:56.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.925" endtime="20201110 08:32:56.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.920" endtime="20201110 08:32:56.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:56.349" level="INFO">${RESULT} = [{'time': 0.041883111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.667000000003866e-06, 'source_diff': 8.667000000003866e-06}, {'time': 0.041902486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:56.340" endtime="20201110 08:32:56.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:56.380" level="INFO">${ACCURACY} = {'time': [0.041883111, 0.041902486, 0.041917333, 0.041931194, 0.041948319, 0.041960042, 0.04197725, 0.041993111, 0.042010097, 0.042026097, 0.042040444, 0.042052153, 0.042065264, 0.042079083, 0.0420944...</msg>
<status status="PASS" starttime="20201110 08:32:56.351" endtime="20201110 08:32:56.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.392" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:32:56.390" endtime="20201110 08:32:56.393"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.398" level="INFO">VALUE: [8.667000000003866e-06, 9.208000000003602e-06, 9.194000000004032e-06, 9.179999999997523e-06, 9.179999999997523e-06, 9.195000000003506e-06, 9.181000000003936e-06, 9.166999999997427e-06, 9.153000000004796e-06, 9.207999999996663e-06, 9.708000000004102e-06, 9.181000000003936e-06, 9.194999999996567e-06, 8.652000000004822e-06, 9.194000000004032e-06, 9.180999999996997e-06, 8.681000000003436e-06, 9.208000000003602e-06, 9.749999999995873e-06, 9.723000000003146e-06, 8.667000000003866e-06, 8.624999999998217e-06, 9.181000000003936e-06, 9.194000000004032e-06, 9.179999999997523e-06, 9.193999999997093e-06, 9.736000000003242e-06, 8.680000000003962e-06, 9.680000000004962e-06, 9.693999999997593e-06, 8.667000000003866e-06, 9.694999999997067e-06, 9.737000000002716e-06, 9.124999999998717e-06, 8.680999999996497e-06, 9.707999999997163e-06, 9.722000000003672e-06, 9.722000000003672e-06, 9.179999999997523e-06, 9.179999999997523e-06, 8.639000000004726e-06, 9.193999999997093e-06, 9.207999999996663e-06, 9.721999999996733e-06, 9.236000000002742e-06, 9.194000000004032e-06, 8.681000000003436e-06, 9.195000000003506e-06, 9.791000000002048e-06, 9.638999999998787e-06]</msg>
<status status="PASS" starttime="20201110 08:32:56.395" endtime="20201110 08:32:56.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.382" endtime="20201110 08:32:56.401"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.407" endtime="20201110 08:32:56.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.416" endtime="20201110 08:32:56.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.411" endtime="20201110 08:32:56.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.403" endtime="20201110 08:32:56.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.864" endtime="20201110 08:32:56.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:55.863" endtime="20201110 08:32:56.441"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.464" endtime="20201110 08:32:56.482"></status>
</kw>
<msg timestamp="20201110 08:32:56.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.460" endtime="20201110 08:32:56.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:56.485" endtime="20201110 08:32:56.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.491" endtime="20201110 08:32:56.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.453" endtime="20201110 08:32:56.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.448" endtime="20201110 08:32:56.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.515" endtime="20201110 08:32:56.844"></status>
</kw>
<msg timestamp="20201110 08:32:56.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041736125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041745861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.511" endtime="20201110 08:32:56.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041736125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041745861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:56.854" endtime="20201110 08:32:56.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.872" endtime="20201110 08:32:56.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.504" endtime="20201110 08:32:56.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.499" endtime="20201110 08:32:56.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:56.890" level="INFO">${RESULT} = [{'time': 0.041745861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.736000000003242e-06, 'source_diff': 9.736000000003242e-06}, {'time': 0.041760889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:32:56.881" endtime="20201110 08:32:56.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:56.920" level="INFO">${ACCURACY} = {'time': [0.041745861, 0.041760889, 0.041777167, 0.041798097, 0.041812972, 0.041828014, 0.041840903, 0.04185775, 0.041877931, 0.041895986, 0.04191225, 0.041930014, 0.041945042, 0.041964819, 0.04197884...</msg>
<status status="PASS" starttime="20201110 08:32:56.892" endtime="20201110 08:32:56.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.931" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:32:56.929" endtime="20201110 08:32:56.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:56.938" level="INFO">VALUE: [9.736000000003242e-06, 9.736000000003242e-06, 1.0235999999996803e-05, 1.0763999999996443e-05, 9.721999999996733e-06, 9.749999999995873e-06, 1.0249999999996373e-05, 9.610999999999648e-06, 1.0250000000003312e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 9.722000000003672e-06, 1.0223000000003646e-05, 9.722000000003672e-06, 1.0193999999998093e-05, 1.0235999999996803e-05, 1.0778000000002952e-05, 1.0263999999995943e-05, 9.694000000004532e-06, 1.0235999999996803e-05, 1.0264000000002882e-05, 1.0792000000002522e-05, 1.0250000000003312e-05, 1.0236000000003742e-05, 9.708999999996637e-06, 1.0292000000002022e-05, 9.735999999996303e-06, 1.0193999999998093e-05, 1.0250000000003312e-05, 1.0249999999996373e-05, 1.0834000000001232e-05, 9.708000000004102e-06, 9.680999999997497e-06, 1.0208999999997137e-05, 9.709000000003576e-06, 1.0250000000003312e-05, 1.0763999999996443e-05, 1.0792000000002522e-05, 1.0264000000002882e-05, 1.0806000000002092e-05, 1.0236000000003742e-05, 9.708000000004102e-06, 1.0250000000003312e-05, 9.736000000003242e-06, 9.749999999995873e-06, 1.0236000000003742e-05, 9.638999999998787e-06, 1.0749999999996873e-05, 1.0235999999996803e-05, 1.0249999999996373e-05]</msg>
<status status="PASS" starttime="20201110 08:32:56.934" endtime="20201110 08:32:56.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.922" endtime="20201110 08:32:56.941"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:56.948" endtime="20201110 08:32:56.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:56.956" endtime="20201110 08:32:56.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.951" endtime="20201110 08:32:56.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.943" endtime="20201110 08:32:56.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.443" endtime="20201110 08:32:56.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.442" endtime="20201110 08:32:56.981"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.004" endtime="20201110 08:32:57.022"></status>
</kw>
<msg timestamp="20201110 08:32:57.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.001" endtime="20201110 08:32:57.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.025" endtime="20201110 08:32:57.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.031" endtime="20201110 08:32:57.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.993" endtime="20201110 08:32:57.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.988" endtime="20201110 08:32:57.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.055" endtime="20201110 08:32:57.407"></status>
</kw>
<msg timestamp="20201110 08:32:57.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041982514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.051" endtime="20201110 08:32:57.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041982514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041993792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.416" endtime="20201110 08:32:57.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.435" endtime="20201110 08:32:57.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.044" endtime="20201110 08:32:57.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.039" endtime="20201110 08:32:57.441"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:57.452" level="INFO">${RESULT} = [{'time': 0.041993792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1278000000003452e-05, 'source_diff': 1.1278000000003452e-05}, {'time': 0.042006847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:57.443" endtime="20201110 08:32:57.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:57.484" level="INFO">${ACCURACY} = {'time': [0.041993792, 0.042006847, 0.042027778, 0.042042889, 0.042061694, 0.042079667, 0.042096639, 0.042117014, 0.042137958, 0.042157792, 0.042171875, 0.042187014, 0.042205097, 0.042219931, 0.042238...</msg>
<status status="PASS" starttime="20201110 08:32:57.454" endtime="20201110 08:32:57.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.495" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:32:57.493" endtime="20201110 08:32:57.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.501" level="INFO">VALUE: [1.1278000000003452e-05, 1.0791000000003048e-05, 1.0736000000004242e-05, 1.0820000000001662e-05, 1.077699999999654e-05, 1.1292000000003022e-05, 1.1291999999996083e-05, 1.1306000000002592e-05, 1.1319000000002688e-05, 1.0806000000002092e-05, 1.0791999999995583e-05, 1.1333000000002258e-05, 1.179099999999711e-05, 1.1278000000003452e-05, 1.0750000000003812e-05, 1.1318999999995749e-05, 1.0820000000001662e-05, 1.1860999999994959e-05, 1.1249999999997373e-05, 1.1805999999996153e-05, 1.129099999999661e-05, 1.1306000000002592e-05, 1.0791999999995583e-05, 1.1819000000003188e-05, 1.180499999999668e-05, 1.1305000000003118e-05, 1.0847000000001328e-05, 1.1848000000001802e-05, 1.1361000000001398e-05, 1.0792000000002522e-05, 1.1291999999996083e-05, 1.1292000000003022e-05, 1.0749999999996873e-05, 1.1291999999996083e-05, 1.1278000000003452e-05, 1.1847000000002328e-05, 1.080499999999568e-05, 1.0749999999996873e-05, 1.1291000000003548e-05, 1.0764000000003382e-05, 1.1305999999995653e-05, 1.0749999999996873e-05, 1.0721999999997733e-05, 1.0791999999995583e-05, 1.0777999999996013e-05, 1.080499999999568e-05, 1.1277999999996513e-05, 1.0735999999997303e-05, 1.180499999999668e-05, 1.1306000000002592e-05]</msg>
<status status="PASS" starttime="20201110 08:32:57.498" endtime="20201110 08:32:57.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.486" endtime="20201110 08:32:57.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.510" endtime="20201110 08:32:57.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:57.520" endtime="20201110 08:32:57.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.516" endtime="20201110 08:32:57.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.506" endtime="20201110 08:32:57.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.983" endtime="20201110 08:32:57.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:56.982" endtime="20201110 08:32:57.546"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.568" endtime="20201110 08:32:57.587"></status>
</kw>
<msg timestamp="20201110 08:32:57.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.565" endtime="20201110 08:32:57.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:57.591" endtime="20201110 08:32:57.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.597" endtime="20201110 08:32:57.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.558" endtime="20201110 08:32:57.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.552" endtime="20201110 08:32:57.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.620" endtime="20201110 08:32:57.963"></status>
</kw>
<msg timestamp="20201110 08:32:57.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042386889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.617" endtime="20201110 08:32:57.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:57.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042386889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:57.973" endtime="20201110 08:32:57.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:57.992" endtime="20201110 08:32:57.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.610" endtime="20201110 08:32:57.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.605" endtime="20201110 08:32:57.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.009" level="INFO">${RESULT} = [{'time': 0.042399194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2305000000004118e-05, 'source_diff': 1.2305000000004118e-05}, {'time': 0.042414972, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:58.000" endtime="20201110 08:32:58.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:58.040" level="INFO">${ACCURACY} = {'time': [0.042399194, 0.042414972, 0.042432875, 0.04245025, 0.042467903, 0.042482917, 0.042503014, 0.042520028, 0.042539319, 0.042558347, 0.042581389, 0.042596264, 0.042614931, 0.042629903, 0.0426480...</msg>
<status status="PASS" starttime="20201110 08:32:58.011" endtime="20201110 08:32:58.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.051" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:32:58.048" endtime="20201110 08:32:58.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.056" level="INFO">VALUE: [1.2305000000004118e-05, 1.2361000000002398e-05, 1.2361000000002398e-05, 1.2347000000002828e-05, 1.1847000000002328e-05, 1.1848000000001802e-05, 1.2360999999995459e-05, 1.2361000000002398e-05, 1.2860999999995959e-05, 1.2361000000002398e-05, 1.2874999999995529e-05, 1.1833000000002758e-05, 1.1875000000001468e-05, 1.1833999999995293e-05, 1.1805000000003618e-05, 1.1846999999995389e-05, 1.2347000000002828e-05, 1.1848000000001802e-05, 1.2347000000002828e-05, 1.1820000000002662e-05, 1.1875000000001468e-05, 1.1834000000002232e-05, 1.2361000000002398e-05, 1.229099999999761e-05, 1.2847000000003328e-05, 1.2360999999995459e-05, 1.2416000000001204e-05, 1.1805000000003618e-05, 1.2389000000001538e-05, 1.2362000000001871e-05, 1.2361000000002398e-05, 1.2361000000002398e-05, 1.2860999999995959e-05, 1.1805000000003618e-05, 1.2305000000004118e-05, 1.2361000000002398e-05, 1.2916000000001704e-05, 1.2902999999994669e-05, 1.2362000000001871e-05, 1.1792000000003522e-05, 1.2374999999995029e-05, 1.2348000000002302e-05, 1.1846999999995389e-05, 1.2347000000002828e-05, 1.2361000000002398e-05, 1.1805000000003618e-05, 1.2389000000001538e-05, 1.2819000000004188e-05, 1.1820000000002662e-05, 1.2361000000002398e-05]</msg>
<status status="PASS" starttime="20201110 08:32:58.053" endtime="20201110 08:32:58.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.042" endtime="20201110 08:32:58.059"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.066" endtime="20201110 08:32:58.068"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.074" endtime="20201110 08:32:58.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.069" endtime="20201110 08:32:58.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.061" endtime="20201110 08:32:58.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.548" endtime="20201110 08:32:58.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:57.547" endtime="20201110 08:32:58.099"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.124" endtime="20201110 08:32:58.142"></status>
</kw>
<msg timestamp="20201110 08:32:58.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.120" endtime="20201110 08:32:58.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.145" endtime="20201110 08:32:58.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.151" endtime="20201110 08:32:58.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.113" endtime="20201110 08:32:58.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.106" endtime="20201110 08:32:58.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.174" endtime="20201110 08:32:58.517"></status>
</kw>
<msg timestamp="20201110 08:32:58.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043155125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043168528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.171" endtime="20201110 08:32:58.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043155125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043168528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.526" endtime="20201110 08:32:58.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.545" endtime="20201110 08:32:58.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.164" endtime="20201110 08:32:58.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.159" endtime="20201110 08:32:58.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:58.562" level="INFO">${RESULT} = [{'time': 0.043168528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3402999999995169e-05, 'source_diff': 1.3402999999995169e-05}, {'time': 0.043190472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:58.553" endtime="20201110 08:32:58.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:58.593" level="INFO">${ACCURACY} = {'time': [0.043168528, 0.043190472, 0.043210681, 0.043227375, 0.043244306, 0.043262333, 0.043280681, 0.043302708, 0.043325486, 0.043341597, 0.043359861, 0.043379319, 0.043398514, 0.043416722, 0.043432...</msg>
<status status="PASS" starttime="20201110 08:32:58.564" endtime="20201110 08:32:58.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.604" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:32:58.601" endtime="20201110 08:32:58.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.609" level="INFO">VALUE: [1.3402999999995169e-05, 1.2903000000001608e-05, 1.2917000000001178e-05, 1.2888999999995099e-05, 1.3403000000002108e-05, 1.2861000000002898e-05, 1.3431000000001247e-05, 1.2861000000002898e-05, 1.3472000000000484e-05, 1.2889000000002038e-05, 1.3458000000000914e-05, 1.2861000000002898e-05, 1.3403000000002108e-05, 1.3415999999995265e-05, 1.3416999999994739e-05, 1.3403000000002108e-05, 1.3415999999995265e-05, 1.2875000000002468e-05, 1.3416000000002204e-05, 1.3403000000002108e-05, 1.2888999999995099e-05, 1.3416000000002204e-05, 1.3431000000001247e-05, 1.2875000000002468e-05, 1.2944000000000844e-05, 1.2901999999995195e-05, 1.2888999999995099e-05, 1.2874999999995529e-05, 1.2861000000002898e-05, 1.2875000000002468e-05, 1.2875000000002468e-05, 1.3472000000000484e-05, 1.3388999999995599e-05, 1.2860999999995959e-05, 1.3402999999995169e-05, 1.3416999999994739e-05, 1.2931000000000747e-05, 1.3403000000002108e-05, 1.2902999999994669e-05, 1.2847000000003328e-05, 1.2917000000001178e-05, 1.2903000000001608e-05, 1.2847999999995863e-05, 1.3431000000001247e-05, 1.3402000000002634e-05, 1.3403000000002108e-05, 1.3403000000002108e-05, 1.3457999999993975e-05, 1.3931000000001748e-05, 1.2833999999996293e-05]</msg>
<status status="PASS" starttime="20201110 08:32:58.606" endtime="20201110 08:32:58.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.595" endtime="20201110 08:32:58.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.619" endtime="20201110 08:32:58.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:58.627" endtime="20201110 08:32:58.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.623" endtime="20201110 08:32:58.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.614" endtime="20201110 08:32:58.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.101" endtime="20201110 08:32:58.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.100" endtime="20201110 08:32:58.653"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.675" endtime="20201110 08:32:58.695"></status>
</kw>
<msg timestamp="20201110 08:32:58.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.672" endtime="20201110 08:32:58.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:58.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:58.698" endtime="20201110 08:32:58.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.705" endtime="20201110 08:32:58.709"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.665" endtime="20201110 08:32:58.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.659" endtime="20201110 08:32:58.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:58.728" endtime="20201110 08:32:59.061"></status>
</kw>
<msg timestamp="20201110 08:32:59.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043316181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043330681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:58.725" endtime="20201110 08:32:59.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043316181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043330681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.070" endtime="20201110 08:32:59.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.089" endtime="20201110 08:32:59.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.718" endtime="20201110 08:32:59.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.713" endtime="20201110 08:32:59.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.106" level="INFO">${RESULT} = [{'time': 0.043330681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.4500000000000624e-05, 'source_diff': 1.4500000000000624e-05}, {'time': 0.043352639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:59.097" endtime="20201110 08:32:59.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:59.137" level="INFO">${ACCURACY} = {'time': [0.043330681, 0.043352639, 0.043374778, 0.043396889, 0.043418708, 0.043437847, 0.043462486, 0.0434825, 0.0435015, 0.04352375, 0.043543833, 0.043564972, 0.043583861, 0.043607708, 0.043631847, ...</msg>
<status status="PASS" starttime="20201110 08:32:59.108" endtime="20201110 08:32:59.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.148" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:32:59.146" endtime="20201110 08:32:59.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.153" level="INFO">VALUE: [1.4500000000000624e-05, 1.4457999999994975e-05, 1.4459000000001387e-05, 1.3917000000002178e-05, 1.3916000000002704e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.3972000000000984e-05, 1.4472000000001484e-05, 1.3944000000001844e-05, 1.3901999999996195e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.3930000000002274e-05, 1.4486000000001054e-05, 1.3958000000001414e-05, 1.4443999999995405e-05, 1.3957999999994475e-05, 1.3958000000001414e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3916999999995239e-05, 1.4375000000003968e-05, 1.3930000000002274e-05, 1.4472000000001484e-05, 1.4458000000001914e-05, 1.3902000000003134e-05, 1.4457999999994975e-05, 1.3986000000000554e-05, 1.4472000000001484e-05, 1.3958000000001414e-05, 1.4458000000001914e-05, 1.4486000000001054e-05, 1.3958000000001414e-05, 1.452700000000029e-05, 1.4000000000000123e-05, 1.4486000000001054e-05, 1.4459000000001387e-05, 1.3959000000000887e-05, 1.4527999999999763e-05, 1.3916999999995239e-05, 1.3944999999994379e-05, 1.4458000000001914e-05, 1.3931000000001748e-05, 1.3959000000000887e-05, 1.3917000000002178e-05, 1.3958000000001414e-05, 1.4486000000001054e-05, 1.4485999999994115e-05, 1.3915999999995765e-05]</msg>
<status status="PASS" starttime="20201110 08:32:59.150" endtime="20201110 08:32:59.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.139" endtime="20201110 08:32:59.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.163" endtime="20201110 08:32:59.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.171" endtime="20201110 08:32:59.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.166" endtime="20201110 08:32:59.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.158" endtime="20201110 08:32:59.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.655" endtime="20201110 08:32:59.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:58.654" endtime="20201110 08:32:59.197"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.219" endtime="20201110 08:32:59.237"></status>
</kw>
<msg timestamp="20201110 08:32:59.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.216" endtime="20201110 08:32:59.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.240" endtime="20201110 08:32:59.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.246" endtime="20201110 08:32:59.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.209" endtime="20201110 08:32:59.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.203" endtime="20201110 08:32:59.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.271" endtime="20201110 08:32:59.603"></status>
</kw>
<msg timestamp="20201110 08:32:59.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041465139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041480625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.268" endtime="20201110 08:32:59.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041465139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041480625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.612" endtime="20201110 08:32:59.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.631" endtime="20201110 08:32:59.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.259" endtime="20201110 08:32:59.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.254" endtime="20201110 08:32:59.638"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:32:59.649" level="INFO">${RESULT} = [{'time': 0.041480625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.5486000000002054e-05, 'source_diff': 1.5486000000002054e-05}, {'time': 0.041499319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:32:59.640" endtime="20201110 08:32:59.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:32:59.681" level="INFO">${ACCURACY} = {'time': [0.041480625, 0.041499319, 0.041521306, 0.041539153, 0.041560542, 0.041585236, 0.041605264, 0.041623375, 0.04164225, 0.041662639, 0.041684458, 0.041709514, 0.041731583, 0.041749625, 0.0417721...</msg>
<status status="PASS" starttime="20201110 08:32:59.651" endtime="20201110 08:32:59.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.692" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:32:59.689" endtime="20201110 08:32:59.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.697" level="INFO">VALUE: [1.5486000000002054e-05, 1.552700000000129e-05, 1.5487000000001527e-05, 1.4459000000001387e-05, 1.4973000000001457e-05, 1.5028000000000263e-05, 1.5028000000000263e-05, 1.50689999999995e-05, 1.5528000000000763e-05, 1.4972000000001984e-05, 1.502700000000079e-05, 1.5028000000000263e-05, 1.552700000000129e-05, 1.4972000000001984e-05, 1.4987000000001027e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5514000000001194e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.5569e-05, 1.4973000000001457e-05, 1.4958999999994949e-05, 1.4999999999994185e-05, 1.4972000000001984e-05, 1.551300000000172e-05, 1.5569e-05, 1.5569e-05, 1.5000000000001124e-05, 1.5500000000001624e-05, 1.4972000000001984e-05, 1.4972000000001984e-05, 1.4999999999994185e-05, 1.4972000000001984e-05, 1.4986000000001554e-05, 1.5514000000001194e-05, 1.4973000000001457e-05, 1.4973000000001457e-05, 1.4930000000003274e-05, 1.4972000000001984e-05, 1.5528000000000763e-05, 1.5000000000001124e-05, 1.5542000000000333e-05, 1.5527999999993825e-05, 1.5028000000000263e-05, 1.4472000000001484e-05, 1.5014000000000693e-05, 1.4957999999995475e-05, 1.5528000000000763e-05, 1.4972000000001984e-05]</msg>
<status status="PASS" starttime="20201110 08:32:59.694" endtime="20201110 08:32:59.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.683" endtime="20201110 08:32:59.700"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.707" endtime="20201110 08:32:59.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:32:59.715" endtime="20201110 08:32:59.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.711" endtime="20201110 08:32:59.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.702" endtime="20201110 08:32:59.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.199" endtime="20201110 08:32:59.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.197" endtime="20201110 08:32:59.743"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.783" endtime="20201110 08:32:59.803"></status>
</kw>
<msg timestamp="20201110 08:32:59.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.777" endtime="20201110 08:32:59.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:32:59.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:32:59.807" endtime="20201110 08:32:59.811"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.813" endtime="20201110 08:32:59.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.760" endtime="20201110 08:32:59.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.753" endtime="20201110 08:32:59.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:32:59.837" endtime="20201110 08:33:00.185"></status>
</kw>
<msg timestamp="20201110 08:33:00.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063014042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063030069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:32:59.834" endtime="20201110 08:33:00.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.063014042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.063030069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.195" endtime="20201110 08:33:00.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.213" endtime="20201110 08:33:00.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.826" endtime="20201110 08:33:00.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.821" endtime="20201110 08:33:00.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.231" level="INFO">${RESULT} = [{'time': 0.063030069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6026999999987912e-05, 'source_diff': 1.6026999999987912e-05}, {'time': 0.063053889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:00.222" endtime="20201110 08:33:00.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:00.261" level="INFO">${ACCURACY} = {'time': [0.063030069, 0.063053889, 0.063075333, 0.063098306, 0.063119125, 0.063145097, 0.063169222, 0.063193306, 0.063212931, 0.063232861, 0.063257306, 0.063278333, 0.063296944, 0.063323181, 0.063343...</msg>
<status status="PASS" starttime="20201110 08:33:00.233" endtime="20201110 08:33:00.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.272" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:00.270" endtime="20201110 08:33:00.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.278" level="INFO">VALUE: [1.6026999999987912e-05, 1.5528000000000763e-05, 1.6013999999994755e-05, 1.6070000000006912e-05, 1.656899999999406e-05, 1.604099999999442e-05, 1.65969999999932e-05, 1.6056000000000403e-05, 1.6070000000006912e-05, 1.5528000000000763e-05, 1.6013999999994755e-05, 1.659700000000708e-05, 1.6054999999987052e-05, 1.6584000000000043e-05, 1.6069999999993034e-05, 1.6584000000000043e-05, 1.6028000000001263e-05, 1.606900000000744e-05, 1.606899999999356e-05, 1.608300000000007e-05, 1.6028000000001263e-05, 1.6584000000000043e-05, 1.6569999999993534e-05, 1.6584000000000043e-05, 1.6569999999993534e-05, 1.611099999999921e-05, 1.658300000000057e-05, 1.6527999999987886e-05, 1.601300000000916e-05, 1.6569999999993534e-05, 1.659700000000708e-05, 1.6570000000007412e-05, 1.663899999999885e-05, 1.6569999999993534e-05, 1.6000000000002124e-05, 1.5514000000008132e-05, 1.606899999999356e-05, 1.6070000000006912e-05, 1.6584000000000043e-05, 1.659700000000708e-05, 1.6569999999993534e-05, 1.612499999999184e-05, 1.606900000000744e-05, 1.658300000000057e-05, 1.658300000000057e-05, 1.611099999999921e-05, 1.6028000000001263e-05, 1.60969999999927e-05, 1.6013999999994755e-05, 1.6028000000001263e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.275" endtime="20201110 08:33:00.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.263" endtime="20201110 08:33:00.281"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.287" endtime="20201110 08:33:00.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.296" endtime="20201110 08:33:00.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.291" endtime="20201110 08:33:00.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.283" endtime="20201110 08:33:00.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.746" endtime="20201110 08:33:00.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:59.745" endtime="20201110 08:33:00.321"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.344" endtime="20201110 08:33:00.363"></status>
</kw>
<msg timestamp="20201110 08:33:00.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.341" endtime="20201110 08:33:00.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.366" endtime="20201110 08:33:00.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.372" endtime="20201110 08:33:00.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.334" endtime="20201110 08:33:00.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.328" endtime="20201110 08:33:00.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.397" endtime="20201110 08:33:00.745"></status>
</kw>
<msg timestamp="20201110 08:33:00.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:00.393" endtime="20201110 08:33:00.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042428611, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:00.755" endtime="20201110 08:33:00.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.773" endtime="20201110 08:33:00.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.386" endtime="20201110 08:33:00.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.381" endtime="20201110 08:33:00.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:00.791" level="INFO">${RESULT} = [{'time': 0.042428611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.761100000000071e-05, 'source_diff': 1.761100000000071e-05}, {'time': 0.042450681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:00.782" endtime="20201110 08:33:00.792"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:00.822" level="INFO">${ACCURACY} = {'time': [0.042428611, 0.042450681, 0.042474431, 0.042496431, 0.042516681, 0.042537847, 0.042559458, 0.042582472, 0.042609681, 0.042630556, 0.042657569, 0.042681722, 0.042705722, 0.042729917, 0.042753...</msg>
<status status="PASS" starttime="20201110 08:33:00.793" endtime="20201110 08:33:00.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.833" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:00.830" endtime="20201110 08:33:00.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.838" level="INFO">VALUE: [1.761100000000071e-05, 1.765299999999942e-05, 1.6584000000000043e-05, 1.6570000000000473e-05, 1.7084000000000543e-05, 1.761099999999377e-05, 1.6569000000001e-05, 1.659700000000014e-05, 1.7153000000005858e-05, 1.712499999999978e-05, 1.709700000000064e-05, 1.712499999999978e-05, 1.708300000000107e-05, 1.763899999999985e-05, 1.6542000000001333e-05, 1.7638000000000376e-05, 1.763899999999985e-05, 1.763899999999985e-05, 1.708299999999413e-05, 1.712499999999978e-05, 1.7125000000006718e-05, 1.759700000000114e-05, 1.713899999999935e-05, 1.765299999999942e-05, 1.712499999999978e-05, 1.654100000000186e-05, 1.709700000000064e-05, 1.659700000000014e-05, 1.708300000000107e-05, 1.712499999999978e-05, 1.708300000000107e-05, 1.7638000000000376e-05, 1.761099999999377e-05, 1.715299999999892e-05, 1.762500000000028e-05, 1.761099999999377e-05, 1.7070000000000973e-05, 1.6570000000000473e-05, 1.708300000000107e-05, 1.711100000000021e-05, 1.756899999999506e-05, 1.708299999999413e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.715299999999892e-05, 1.6542000000001333e-05, 1.7098000000000113e-05, 1.712499999999978e-05, 1.7165999999999015e-05, 1.762500000000028e-05]</msg>
<status status="PASS" starttime="20201110 08:33:00.835" endtime="20201110 08:33:00.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.823" endtime="20201110 08:33:00.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.848" endtime="20201110 08:33:00.850"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:00.856" endtime="20201110 08:33:00.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.851" endtime="20201110 08:33:00.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.843" endtime="20201110 08:33:00.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.323" endtime="20201110 08:33:00.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.322" endtime="20201110 08:33:00.882"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.906" endtime="20201110 08:33:00.925"></status>
</kw>
<msg timestamp="20201110 08:33:00.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.901" endtime="20201110 08:33:00.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:00.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:00.928" endtime="20201110 08:33:00.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.935" endtime="20201110 08:33:00.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.894" endtime="20201110 08:33:00.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.888" endtime="20201110 08:33:00.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:00.958" endtime="20201110 08:33:01.291"></status>
</kw>
<msg timestamp="20201110 08:33:01.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044223625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:00.955" endtime="20201110 08:33:01.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044205486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044223625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.300" endtime="20201110 08:33:01.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.321" endtime="20201110 08:33:01.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.948" endtime="20201110 08:33:01.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.943" endtime="20201110 08:33:01.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.343" level="INFO">${RESULT} = [{'time': 0.044223625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.813900000000035e-05, 'source_diff': 1.813900000000035e-05}, {'time': 0.044244611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:01.333" endtime="20201110 08:33:01.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:01.392" level="INFO">${ACCURACY} = {'time': [0.044223625, 0.044244611, 0.044268667, 0.044295681, 0.044321694, 0.044346056, 0.044371792, 0.044396917, 0.044422889, 0.044450847, 0.044473861, 0.044499056, 0.044521028, 0.044544014, 0.044567...</msg>
<status status="PASS" starttime="20201110 08:33:01.347" endtime="20201110 08:33:01.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.412" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:01.408" endtime="20201110 08:33:01.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.420" level="INFO">VALUE: [1.813900000000035e-05, 1.8180000000006524e-05, 1.762500000000028e-05, 1.8223000000004708e-05, 1.762500000000028e-05, 1.869499999999913e-05, 1.818099999999906e-05, 1.866699999999999e-05, 1.869499999999913e-05, 1.8179999999999585e-05, 1.8708000000006164e-05, 1.869499999999913e-05, 1.868099999999956e-05, 1.869499999999913e-05, 1.761100000000071e-05, 1.762500000000028e-05, 1.8693999999999655e-05, 1.8666000000000516e-05, 1.8207999999998725e-05, 1.8236000000004804e-05, 1.869499999999913e-05, 1.8193999999999155e-05, 1.8721999999998795e-05, 1.763899999999985e-05, 1.762500000000028e-05, 1.869499999999913e-05, 1.818099999999906e-05, 1.7570000000001473e-05, 1.763899999999985e-05, 1.8721999999998795e-05, 1.812500000000078e-05, 1.816699999999949e-05, 1.8179999999999585e-05, 1.8680000000000085e-05, 1.868099999999956e-05, 1.8181000000005998e-05, 1.763899999999985e-05, 1.865300000000042e-05, 1.812500000000078e-05, 1.813900000000035e-05, 1.8152000000000446e-05, 1.768099999999856e-05, 1.8680000000000085e-05, 1.8222000000005234e-05, 1.812500000000078e-05, 1.8680000000000085e-05, 1.8680000000000085e-05, 1.8179999999999585e-05, 1.815299999999992e-05, 1.8193999999999155e-05]</msg>
<status status="PASS" starttime="20201110 08:33:01.415" endtime="20201110 08:33:01.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.395" endtime="20201110 08:33:01.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.433" endtime="20201110 08:33:01.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:01.445" endtime="20201110 08:33:01.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.440" endtime="20201110 08:33:01.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.427" endtime="20201110 08:33:01.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.884" endtime="20201110 08:33:01.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:00.882" endtime="20201110 08:33:01.474"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.497" endtime="20201110 08:33:01.516"></status>
</kw>
<msg timestamp="20201110 08:33:01.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.494" endtime="20201110 08:33:01.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:01.520" endtime="20201110 08:33:01.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.526" endtime="20201110 08:33:01.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.487" endtime="20201110 08:33:01.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.481" endtime="20201110 08:33:01.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.550" endtime="20201110 08:33:01.903"></status>
</kw>
<msg timestamp="20201110 08:33:01.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045061292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045079986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.547" endtime="20201110 08:33:01.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045061292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045079986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:01.912" endtime="20201110 08:33:01.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:01.931" endtime="20201110 08:33:01.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.539" endtime="20201110 08:33:01.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.535" endtime="20201110 08:33:01.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:01.950" level="INFO">${RESULT} = [{'time': 0.045079986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8693999999999655e-05, 'source_diff': 1.8693999999999655e-05}, {'time': 0.045105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:01.941" endtime="20201110 08:33:01.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:01.984" level="INFO">${ACCURACY} = {'time': [0.045079986, 0.045105, 0.045134125, 0.045158972, 0.045184097, 0.045212125, 0.045234986, 0.045261875, 0.045286139, 0.045307847, 0.045333139, 0.04536125, 0.045388292, 0.045413056, 0.045437042,...</msg>
<status status="PASS" starttime="20201110 08:33:01.953" endtime="20201110 08:33:01.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:01.995" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:01.993" endtime="20201110 08:33:01.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.001" level="INFO">VALUE: [1.8693999999999655e-05, 1.9221999999999295e-05, 1.915299999999398e-05, 1.8693999999999655e-05, 1.9207999999999725e-05, 1.9735999999999365e-05, 1.9194000000000155e-05, 1.9221999999999295e-05, 1.9236000000005804e-05, 1.8666000000000516e-05, 1.9708000000000225e-05, 1.9194000000000155e-05, 1.9735999999999365e-05, 1.923699999999834e-05, 1.869499999999913e-05, 1.9749999999998935e-05, 1.9235999999998865e-05, 1.918100000000006e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.9749999999998935e-05, 1.9750000000005874e-05, 1.9749999999998935e-05, 1.8693999999999655e-05, 1.8707999999999225e-05, 1.9750000000005874e-05, 1.9236000000005804e-05, 1.9694000000000655e-05, 1.9749999999998935e-05, 1.973699999999884e-05, 1.863900000000085e-05, 1.922299999999877e-05, 1.9235999999998865e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.9749999999998935e-05, 1.8652000000000946e-05, 1.9735999999999365e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.980500000000468e-05, 1.9249999999998435e-05, 1.92089999999992e-05, 1.9207999999999725e-05, 1.8665999999993577e-05, 1.92769999999981e-05, 1.8707999999999225e-05, 1.9221999999999295e-05, 1.916700000000049e-05, 1.923699999999834e-05]</msg>
<status status="PASS" starttime="20201110 08:33:01.998" endtime="20201110 08:33:02.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.986" endtime="20201110 08:33:02.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.011" endtime="20201110 08:33:02.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.019" endtime="20201110 08:33:02.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.015" endtime="20201110 08:33:02.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.006" endtime="20201110 08:33:02.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.476" endtime="20201110 08:33:02.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:01.475" endtime="20201110 08:33:02.045"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.068" endtime="20201110 08:33:02.087"></status>
</kw>
<msg timestamp="20201110 08:33:02.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.065" endtime="20201110 08:33:02.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.090" endtime="20201110 08:33:02.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.096" endtime="20201110 08:33:02.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.058" endtime="20201110 08:33:02.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.052" endtime="20201110 08:33:02.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.120" endtime="20201110 08:33:02.470"></status>
</kw>
<msg timestamp="20201110 08:33:02.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042482528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042502264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.117" endtime="20201110 08:33:02.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042482528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042502264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.480" endtime="20201110 08:33:02.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.499" endtime="20201110 08:33:02.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.109" endtime="20201110 08:33:02.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.105" endtime="20201110 08:33:02.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:02.517" level="INFO">${RESULT} = [{'time': 0.042502264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.9735999999999365e-05, 'source_diff': 1.9735999999999365e-05}, {'time': 0.042527167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:02.508" endtime="20201110 08:33:02.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:02.549" level="INFO">${ACCURACY} = {'time': [0.042502264, 0.042527167, 0.0425545, 0.042583167, 0.042609278, 0.042639597, 0.042666569, 0.042693153, 0.042717681, 0.042743181, 0.042770208, 0.042794528, 0.0428215, 0.042848167, 0.042872611,...</msg>
<status status="PASS" starttime="20201110 08:33:02.519" endtime="20201110 08:33:02.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.561" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:02.558" endtime="20201110 08:33:02.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.566" level="INFO">VALUE: [1.9735999999999365e-05, 1.9735999999999365e-05, 2.0791999999998645e-05, 1.9749999999998935e-05, 2.0291999999998145e-05, 2.079099999999917e-05, 2.079099999999917e-05, 2.0277999999998575e-05, 2.0862000000003433e-05, 1.9749999999998935e-05, 1.9749999999998935e-05, 2.0277999999998575e-05, 2.0805999999998215e-05, 2.0235999999999865e-05, 2.0249999999999435e-05, 1.9750000000005874e-05, 2.029099999999867e-05, 1.9735999999999365e-05, 2.029099999999867e-05, 2.081899999999831e-05, 2.0305999999997715e-05, 2.0791999999998645e-05, 1.9749999999998935e-05, 1.9708000000000225e-05, 1.9735999999999365e-05, 2.0277999999998575e-05, 1.9721999999999795e-05, 2.0277999999998575e-05, 2.081899999999831e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.0278000000005514e-05, 2.080499999999874e-05, 2.02769999999991e-05, 1.9735999999999365e-05, 1.9749999999998935e-05, 2.0249999999999435e-05, 2.0791999999998645e-05, 2.080500000000568e-05, 2.07769999999996e-05, 2.0235999999999865e-05, 2.080499999999874e-05, 2.0291999999998145e-05, 2.0222000000000295e-05, 2.0263999999999005e-05, 2.0235999999999865e-05, 2.0264000000005944e-05, 2.033300000000432e-05, 1.9694000000000655e-05, 2.081899999999831e-05]</msg>
<status status="PASS" starttime="20201110 08:33:02.563" endtime="20201110 08:33:02.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.551" endtime="20201110 08:33:02.569"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.576" endtime="20201110 08:33:02.579"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:02.584" endtime="20201110 08:33:02.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.580" endtime="20201110 08:33:02.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.571" endtime="20201110 08:33:02.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.047" endtime="20201110 08:33:02.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.046" endtime="20201110 08:33:02.611"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.634" endtime="20201110 08:33:02.653"></status>
</kw>
<msg timestamp="20201110 08:33:02.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.630" endtime="20201110 08:33:02.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:02.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:02.656" endtime="20201110 08:33:02.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.663" endtime="20201110 08:33:02.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.623" endtime="20201110 08:33:02.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.617" endtime="20201110 08:33:02.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:02.686" endtime="20201110 08:33:03.035"></status>
</kw>
<msg timestamp="20201110 08:33:03.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042770389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042794694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:02.683" endtime="20201110 08:33:03.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042770389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042794694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.045" endtime="20201110 08:33:03.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.064" endtime="20201110 08:33:03.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.676" endtime="20201110 08:33:03.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.671" endtime="20201110 08:33:03.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.082" level="INFO">${RESULT} = [{'time': 0.042794694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.430500000000224e-05, 'source_diff': 2.430500000000224e-05}, {'time': 0.042833708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:03.072" endtime="20201110 08:33:03.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:03.114" level="INFO">${ACCURACY} = {'time': [0.042794694, 0.042833708, 0.042870708, 0.042910708, 0.042946708, 0.042981708, 0.043020722, 0.043056708, 0.043090708, 0.043122736, 0.043157792, 0.043193722, 0.043226722, 0.043263736, 0.043301...</msg>
<status status="PASS" starttime="20201110 08:33:03.084" endtime="20201110 08:33:03.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.125" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:03.123" endtime="20201110 08:33:03.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.131" level="INFO">VALUE: [2.430500000000224e-05, 2.4235999999996927e-05, 2.434700000000095e-05, 2.4971999999998107e-05, 2.458300000000163e-05, 2.40970000000007e-05, 2.40970000000007e-05, 2.4457999999998037e-05, 2.4957999999998537e-05, 2.456900000000206e-05, 2.413899999999941e-05, 2.4818999999995373e-05, 2.4458000000004976e-05, 2.4693999999998717e-05, 2.433300000000138e-05, 2.4055999999994526e-05, 2.4735999999997427e-05, 2.468099999999862e-05, 2.4846999999994512e-05, 2.40970000000007e-05, 2.4957999999998537e-05, 2.40970000000007e-05, 2.4320000000001285e-05, 2.4334000000000855e-05, 2.4334000000000855e-05, 2.4083999999993666e-05, 2.470899999999776e-05, 2.4348000000000425e-05, 2.4070000000001035e-05, 2.470899999999776e-05, 2.4084000000000605e-05, 2.4443999999998467e-05, 2.4471999999997607e-05, 2.495899999999801e-05, 2.4708000000005226e-05, 2.487500000000059e-05, 2.4568999999995123e-05, 2.434700000000095e-05, 2.438899999999966e-05, 2.45970000000012e-05, 2.411100000000027e-05, 2.4749999999996997e-05, 2.408300000000113e-05, 2.4318999999994872e-05, 2.4749999999996997e-05, 2.483300000000188e-05, 2.4778000000003075e-05, 2.4207999999997787e-05, 2.4971999999998107e-05, 2.483300000000188e-05]</msg>
<status status="PASS" starttime="20201110 08:33:03.128" endtime="20201110 08:33:03.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.116" endtime="20201110 08:33:03.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.140" endtime="20201110 08:33:03.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.149" endtime="20201110 08:33:03.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.144" endtime="20201110 08:33:03.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.136" endtime="20201110 08:33:03.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.613" endtime="20201110 08:33:03.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:02.611" endtime="20201110 08:33:03.175"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.198" endtime="20201110 08:33:03.217"></status>
</kw>
<msg timestamp="20201110 08:33:03.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.195" endtime="20201110 08:33:03.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.220" endtime="20201110 08:33:03.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.227" endtime="20201110 08:33:03.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.187" endtime="20201110 08:33:03.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.181" endtime="20201110 08:33:03.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.250" endtime="20201110 08:33:03.615"></status>
</kw>
<msg timestamp="20201110 08:33:03.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042520181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.247" endtime="20201110 08:33:03.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042520181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.626" endtime="20201110 08:33:03.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.646" endtime="20201110 08:33:03.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.240" endtime="20201110 08:33:03.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.235" endtime="20201110 08:33:03.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:03.665" level="INFO">${RESULT} = [{'time': 0.042545431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5250000000004436e-05, 'source_diff': 2.5250000000004436e-05}, {'time': 0.042583431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:03.655" endtime="20201110 08:33:03.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:03.699" level="INFO">${ACCURACY} = {'time': [0.042545431, 0.042583431, 0.042623444, 0.042661444, 0.042698458, 0.042733444, 0.042773458, 0.042813542, 0.042847458, 0.042880486, 0.042914472, 0.042954472, 0.042989486, 0.043028486, 0.043064...</msg>
<status status="PASS" starttime="20201110 08:33:03.667" endtime="20201110 08:33:03.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.711" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:33:03.708" endtime="20201110 08:33:03.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.717" level="INFO">VALUE: [2.5250000000004436e-05, 2.5819999999995846e-05, 2.583300000000288e-05, 2.533300000000238e-05, 2.5971999999999107e-05, 2.583300000000288e-05, 2.556900000000306e-05, 2.5292000000003145e-05, 2.5193999999999217e-05, 2.556900000000306e-05, 2.5443999999999467e-05, 2.555500000000349e-05, 2.55970000000022e-05, 2.5443999999999467e-05, 2.5457999999999037e-05, 2.5971999999999107e-05, 2.5457999999999037e-05, 2.5722000000005796e-05, 2.5707999999999287e-05, 2.508300000000213e-05, 2.534700000000195e-05, 2.5083999999994666e-05, 2.5848000000001925e-05, 2.5846999999995512e-05, 2.572300000000527e-05, 2.5820000000002785e-05, 2.520899999999826e-05, 2.511100000000127e-05, 2.5084000000001605e-05, 2.545899999999851e-05, 2.5598000000001675e-05, 2.5250000000004436e-05, 2.5084000000001605e-05, 2.570899999999876e-05, 2.5221999999998357e-05, 2.5207999999998787e-05, 2.534700000000195e-05, 2.531900000000281e-05, 2.50970000000017e-05, 2.5721999999998857e-05, 2.5707999999999287e-05, 2.561100000000177e-05, 2.515299999999998e-05, 2.5193999999999217e-05, 2.5096999999994762e-05, 2.5207999999998787e-05, 2.5916000000000827e-05, 2.5680000000000147e-05, 2.5832999999995943e-05, 2.569499999999919e-05]</msg>
<status status="PASS" starttime="20201110 08:33:03.713" endtime="20201110 08:33:03.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.701" endtime="20201110 08:33:03.720"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.727" endtime="20201110 08:33:03.730"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:03.736" endtime="20201110 08:33:03.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.731" endtime="20201110 08:33:03.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.722" endtime="20201110 08:33:03.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.177" endtime="20201110 08:33:03.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.176" endtime="20201110 08:33:03.762"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.787" endtime="20201110 08:33:03.807"></status>
</kw>
<msg timestamp="20201110 08:33:03.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.783" endtime="20201110 08:33:03.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:03.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:03.811" endtime="20201110 08:33:03.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.818" endtime="20201110 08:33:03.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.775" endtime="20201110 08:33:03.824"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.769" endtime="20201110 08:33:03.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:03.843" endtime="20201110 08:33:04.191"></status>
</kw>
<msg timestamp="20201110 08:33:04.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044790333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044816625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:03.839" endtime="20201110 08:33:04.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044790333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044816625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.200" endtime="20201110 08:33:04.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.219" endtime="20201110 08:33:04.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.832" endtime="20201110 08:33:04.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.827" endtime="20201110 08:33:04.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.236" level="INFO">${RESULT} = [{'time': 0.044816625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6291999999997206e-05, 'source_diff': 2.6291999999997206e-05}, {'time': 0.044850625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:04.227" endtime="20201110 08:33:04.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:04.270" level="INFO">${ACCURACY} = {'time': [0.044816625, 0.044850625, 0.044885625, 0.044922639, 0.044957639, 0.044995639, 0.045029653, 0.045070667, 0.045109667, 0.045150667, 0.045188667, 0.045225694, 0.045265667, 0.045301681, 0.045337...</msg>
<status status="PASS" starttime="20201110 08:33:04.238" endtime="20201110 08:33:04.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.281" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:33:04.279" endtime="20201110 08:33:04.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.286" level="INFO">VALUE: [2.6291999999997206e-05, 2.6332999999996443e-05, 2.6694000000000717e-05, 2.6708000000000287e-05, 2.6763999999998567e-05, 2.6582999999996693e-05, 2.6334000000002855e-05, 2.672299999999933e-05, 2.6319999999996346e-05, 2.622299999999883e-05, 2.6070000000003035e-05, 2.6985999999999677e-05, 2.6334000000002855e-05, 2.6584000000003105e-05, 2.666700000000105e-05, 2.6778000000005076e-05, 2.619499999999969e-05, 2.6458000000000037e-05, 2.6194000000000217e-05, 2.6207999999999787e-05, 2.6958000000000537e-05, 2.6596999999996263e-05, 2.6972000000000107e-05, 2.6735999999999427e-05, 2.6721999999999857e-05, 2.647299999999908e-05, 2.6458000000000037e-05, 2.6082999999996193e-05, 2.683300000000388e-05, 2.6458000000000037e-05, 2.6526999999998413e-05, 2.6194000000000217e-05, 2.6958000000000537e-05, 2.6221999999999357e-05, 2.6569999999996596e-05, 2.6694999999993252e-05, 2.6070000000003035e-05, 2.670899999999976e-05, 2.6598000000002675e-05, 2.6333999999995916e-05, 2.638900000000166e-05, 2.6985999999999677e-05, 2.645899999999951e-05, 2.6124999999994902e-05, 2.6708000000000287e-05, 2.645899999999951e-05, 2.6708000000000287e-05, 2.6277999999997637e-05, 2.6194000000000217e-05, 2.6721999999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:33:04.283" endtime="20201110 08:33:04.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.272" endtime="20201110 08:33:04.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.296" endtime="20201110 08:33:04.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.304" endtime="20201110 08:33:04.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.300" endtime="20201110 08:33:04.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.291" endtime="20201110 08:33:04.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.764" endtime="20201110 08:33:04.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:03.763" endtime="20201110 08:33:04.330"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.352" endtime="20201110 08:33:04.371"></status>
</kw>
<msg timestamp="20201110 08:33:04.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.349" endtime="20201110 08:33:04.373"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.375" endtime="20201110 08:33:04.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.381" endtime="20201110 08:33:04.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.342" endtime="20201110 08:33:04.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.336" endtime="20201110 08:33:04.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.407" endtime="20201110 08:33:04.745"></status>
</kw>
<msg timestamp="20201110 08:33:04.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041782764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:04.402" endtime="20201110 08:33:04.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041782764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0418105, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:04.754" endtime="20201110 08:33:04.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.773" endtime="20201110 08:33:04.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.394" endtime="20201110 08:33:04.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.390" endtime="20201110 08:33:04.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:04.791" level="INFO">${RESULT} = [{'time': 0.0418105, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7736000000000427e-05, 'source_diff': 2.7736000000000427e-05}, {'time': 0.041851514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:04.782" endtime="20201110 08:33:04.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:04.824" level="INFO">${ACCURACY} = {'time': [0.0418105, 0.041851514, 0.041886514, 0.041921514, 0.041962514, 0.042002514, 0.042043542, 0.042083542, 0.042118528, 0.042153542, 0.042195542, 0.042233542, 0.042273569, 0.042313569, 0.04235055...</msg>
<status status="PASS" starttime="20201110 08:33:04.793" endtime="20201110 08:33:04.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.837" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:33:04.833" endtime="20201110 08:33:04.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.842" level="INFO">VALUE: [2.7736000000000427e-05, 2.7846999999997513e-05, 2.7096999999996763e-05, 2.7708000000001287e-05, 2.7958000000001537e-05, 2.744500000000094e-05, 2.7778000000006076e-05, 2.7098000000003175e-05, 2.7584000000004105e-05, 2.770900000000076e-05, 2.7070000000004035e-05, 2.7333999999996916e-05, 2.7985999999993738e-05, 2.7972000000001107e-05, 2.7083999999996666e-05, 2.734700000000395e-05, 2.7944000000001967e-05, 2.7068999999997623e-05, 2.7818999999998373e-05, 2.7082999999997193e-05, 2.7846999999997513e-05, 2.7707999999994348e-05, 2.7846999999997513e-05, 2.740300000000223e-05, 2.7722000000000857e-05, 2.7986000000000677e-05, 2.708300000000413e-05, 2.7708000000001287e-05, 2.7888999999996222e-05, 2.7846999999997513e-05, 2.7388999999995722e-05, 2.7596999999997263e-05, 2.7846999999997513e-05, 2.7820000000004785e-05, 2.7819999999997846e-05, 2.7096999999996763e-05, 2.798700000000015e-05, 2.798700000000015e-05, 2.7833999999997416e-05, 2.7348000000003425e-05, 2.722299999999983e-05, 2.745900000000051e-05, 2.722299999999983e-05, 2.762500000000334e-05, 2.7360999999996582e-05, 2.7736000000000427e-05, 2.7763999999999567e-05, 2.7596999999997263e-05, 2.7082999999997193e-05, 2.7736000000000427e-05]</msg>
<status status="PASS" starttime="20201110 08:33:04.839" endtime="20201110 08:33:04.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.826" endtime="20201110 08:33:04.846"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.852" endtime="20201110 08:33:04.855"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:04.860" endtime="20201110 08:33:04.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.856" endtime="20201110 08:33:04.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.847" endtime="20201110 08:33:04.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.332" endtime="20201110 08:33:04.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.331" endtime="20201110 08:33:04.886"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.909" endtime="20201110 08:33:04.928"></status>
</kw>
<msg timestamp="20201110 08:33:04.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.906" endtime="20201110 08:33:04.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:04.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:04.931" endtime="20201110 08:33:04.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.938" endtime="20201110 08:33:04.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.898" endtime="20201110 08:33:04.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.892" endtime="20201110 08:33:04.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:04.961" endtime="20201110 08:33:05.294"></status>
</kw>
<msg timestamp="20201110 08:33:05.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042295389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:04.958" endtime="20201110 08:33:05.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042295389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042324444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.304" endtime="20201110 08:33:05.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.323" endtime="20201110 08:33:05.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.951" endtime="20201110 08:33:05.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.946" endtime="20201110 08:33:05.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.340" level="INFO">${RESULT} = [{'time': 0.042324444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9055000000000053e-05, 'source_diff': 2.9055000000000053e-05}, {'time': 0.042367444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:05.331" endtime="20201110 08:33:05.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:05.372" level="INFO">${ACCURACY} = {'time': [0.042324444, 0.042367444, 0.042410458, 0.042449458, 0.042485458, 0.042522458, 0.042563542, 0.042606542, 0.042647486, 0.0426835, 0.042723486, 0.042760486, 0.042798486, 0.0428395, 0.0428785, 0...</msg>
<status status="PASS" starttime="20201110 08:33:05.343" endtime="20201110 08:33:05.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.382" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:33:05.380" endtime="20201110 08:33:05.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.388" level="INFO">VALUE: [2.9055000000000053e-05, 2.819399999999528e-05, 2.8346999999998013e-05, 2.8472000000001607e-05, 2.8207999999994848e-05, 2.8582999999998693e-05, 2.816700000000255e-05, 2.9028000000000387e-05, 2.8082999999998193e-05, 2.8444000000002467e-05, 2.869399999999578e-05, 2.8458000000002037e-05, 2.8041999999998957e-05, 2.8722000000001857e-05, 2.8082999999998193e-05, 2.8708000000002287e-05, 2.8486000000001177e-05, 2.8374999999997152e-05, 2.8028000000006326e-05, 2.8346999999998013e-05, 2.8847999999997986e-05, 2.8584000000005105e-05, 2.8597999999997736e-05, 2.84170000000028e-05, 2.820900000000126e-05, 2.8305999999998777e-05, 2.8514000000000317e-05, 2.845900000000151e-05, 2.8346999999998013e-05, 2.8222000000001357e-05, 2.8832999999998943e-05, 2.8778000000000137e-05, 2.8472000000001607e-05, 2.833300000000538e-05, 2.89579999999956e-05, 2.8722000000001857e-05, 2.8318999999998873e-05, 2.8694000000002717e-05, 2.8666999999996112e-05, 2.8472000000001607e-05, 2.8568999999999123e-05, 2.9000000000001247e-05, 2.8221999999994418e-05, 2.8958000000002537e-05, 2.85970000000052e-05, 2.8262999999993654e-05, 2.8569999999998597e-05, 2.868100000000262e-05, 2.8721999999994918e-05, 2.820900000000126e-05]</msg>
<status status="PASS" starttime="20201110 08:33:05.385" endtime="20201110 08:33:05.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.373" endtime="20201110 08:33:05.392"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.399" endtime="20201110 08:33:05.401"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.407" endtime="20201110 08:33:05.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.403" endtime="20201110 08:33:05.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.394" endtime="20201110 08:33:05.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.888" endtime="20201110 08:33:05.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:04.887" endtime="20201110 08:33:05.433"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.455" endtime="20201110 08:33:05.474"></status>
</kw>
<msg timestamp="20201110 08:33:05.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.452" endtime="20201110 08:33:05.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:05.477" endtime="20201110 08:33:05.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.484" endtime="20201110 08:33:05.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.445" endtime="20201110 08:33:05.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.439" endtime="20201110 08:33:05.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.507" endtime="20201110 08:33:05.852"></status>
</kw>
<msg timestamp="20201110 08:33:05.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041866806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041896083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.503" endtime="20201110 08:33:05.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041866806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041896083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:05.861" endtime="20201110 08:33:05.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.880" endtime="20201110 08:33:05.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.496" endtime="20201110 08:33:05.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.492" endtime="20201110 08:33:05.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:05.898" level="INFO">${RESULT} = [{'time': 0.041896083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9277000000001163e-05, 'source_diff': 2.9277000000001163e-05}, {'time': 0.041933014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:05.889" endtime="20201110 08:33:05.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:05.929" level="INFO">${ACCURACY} = {'time': [0.041896083, 0.041933014, 0.041970014, 0.042012014, 0.042052028, 0.042094028, 0.042132028, 0.042175042, 0.042215056, 0.042258056, 0.042301056, 0.042342069, 0.042384097, 0.042421083, 0.042465...</msg>
<status status="PASS" starttime="20201110 08:33:05.900" endtime="20201110 08:33:05.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.940" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:33:05.937" endtime="20201110 08:33:05.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:05.945" level="INFO">VALUE: [2.9277000000001163e-05, 2.970799999999635e-05, 2.9708000000003287e-05, 2.9708000000003287e-05, 2.9333999999998916e-05, 2.9583999999999167e-05, 2.9833999999999417e-05, 2.919500000000269e-05, 2.9097999999998236e-05, 2.9348000000005425e-05, 2.9833999999999417e-05, 2.9958000000003537e-05, 3.0000000000002247e-05, 2.9110999999998333e-05, 2.9291000000000733e-05, 2.9082999999999193e-05, 2.9596999999999263e-05, 2.9582999999999693e-05, 2.9819000000000373e-05, 2.9972000000003107e-05, 2.9722000000002857e-05, 2.942999999999696e-05, 2.9596999999999263e-05, 2.9500000000001747e-05, 2.9694000000003717e-05, 2.9985999999995738e-05, 2.9569000000000123e-05, 2.9666999999997112e-05, 2.9082999999999193e-05, 2.9708000000003287e-05, 2.9166999999996612e-05, 2.947199999999567e-05, 2.9819999999999847e-05, 2.947300000000208e-05, 2.9819999999999847e-05, 2.9083999999998666e-05, 2.9083999999998666e-05, 2.947300000000208e-05, 2.972199999999592e-05, 2.9069999999999097e-05, 2.9069999999999097e-05, 2.9346999999999013e-05, 2.9332999999999443e-05, 2.9958000000003537e-05, 2.920799999999585e-05, 2.969399999999678e-05, 2.9582999999999693e-05, 2.9986000000002677e-05, 2.9513999999994378e-05, 2.9958000000003537e-05]</msg>
<status status="PASS" starttime="20201110 08:33:05.942" endtime="20201110 08:33:05.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.931" endtime="20201110 08:33:05.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:05.955" endtime="20201110 08:33:05.959"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:05.965" endtime="20201110 08:33:05.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.960" endtime="20201110 08:33:05.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.950" endtime="20201110 08:33:05.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.435" endtime="20201110 08:33:05.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.434" endtime="20201110 08:33:05.990"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.013" endtime="20201110 08:33:06.032"></status>
</kw>
<msg timestamp="20201110 08:33:06.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.010" endtime="20201110 08:33:06.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.036" endtime="20201110 08:33:06.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.042" endtime="20201110 08:33:06.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.002" endtime="20201110 08:33:06.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.997" endtime="20201110 08:33:06.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.066" endtime="20201110 08:33:06.399"></status>
</kw>
<msg timestamp="20201110 08:33:06.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042315097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042345611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.062" endtime="20201110 08:33:06.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042315097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042345611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.409" endtime="20201110 08:33:06.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.427" endtime="20201110 08:33:06.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.055" endtime="20201110 08:33:06.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.050" endtime="20201110 08:33:06.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:06.445" level="INFO">${RESULT} = [{'time': 0.042345611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0513999999995378e-05, 'source_diff': 3.0513999999995378e-05}, {'time': 0.042385625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:06.436" endtime="20201110 08:33:06.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:06.477" level="INFO">${ACCURACY} = {'time': [0.042345611, 0.042385625, 0.042430611, 0.042474625, 0.042519653, 0.042564625, 0.042604653, 0.042642653, 0.042686639, 0.042730653, 0.042773653, 0.042819681, 0.042862694, 0.042903667, 0.042942...</msg>
<status status="PASS" starttime="20201110 08:33:06.447" endtime="20201110 08:33:06.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.488" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:33:06.486" endtime="20201110 08:33:06.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.494" level="INFO">VALUE: [3.0513999999995378e-05, 3.0096999999999763e-05, 3.0292000000001207e-05, 3.084700000000051e-05, 3.0110999999999333e-05, 3.0458000000004037e-05, 3.0208999999996322e-05, 3.072200000000386e-05, 3.020799999999685e-05, 3.0222000000003357e-05, 3.0584000000000167e-05, 3.097299999999664e-05, 3.061099999999983e-05, 3.0208999999996322e-05, 3.023599999999599e-05, 3.0597999999999737e-05, 3.04579999999971e-05, 3.0083999999999667e-05, 3.0333000000000443e-05, 3.059700000000026e-05, 3.0333000000000443e-05, 3.09579999999976e-05, 3.072199999999692e-05, 3.055500000000155e-05, 3.048599999999624e-05, 3.0472000000003607e-05, 3.0458000000004037e-05, 3.06249999999994e-05, 3.0347000000000013e-05, 3.083300000000094e-05, 3.020799999999685e-05, 3.0083000000000193e-05, 3.058300000000069e-05, 3.0096999999999763e-05, 3.0832999999994004e-05, 3.0070000000000097e-05, 3.0277000000002163e-05, 3.070899999999682e-05, 3.0360999999999583e-05, 3.05700000000006e-05, 3.0208999999996322e-05, 3.0458999999996572e-05, 3.070900000000376e-05, 3.0152999999998042e-05, 3.070900000000376e-05, 3.041599999999839e-05, 3.084700000000051e-05, 3.094399999999803e-05, 3.0347000000000013e-05, 3.0027000000001913e-05]</msg>
<status status="PASS" starttime="20201110 08:33:06.491" endtime="20201110 08:33:06.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.479" endtime="20201110 08:33:06.497"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.504" endtime="20201110 08:33:06.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:06.512" endtime="20201110 08:33:06.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.508" endtime="20201110 08:33:06.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.499" endtime="20201110 08:33:06.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.992" endtime="20201110 08:33:06.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:05.991" endtime="20201110 08:33:06.539"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.562" endtime="20201110 08:33:06.582"></status>
</kw>
<msg timestamp="20201110 08:33:06.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.559" endtime="20201110 08:33:06.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:06.585" endtime="20201110 08:33:06.590"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.592" endtime="20201110 08:33:06.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.551" endtime="20201110 08:33:06.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.546" endtime="20201110 08:33:06.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.617" endtime="20201110 08:33:06.954"></status>
</kw>
<msg timestamp="20201110 08:33:06.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043269611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043300875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.613" endtime="20201110 08:33:06.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:06.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043269611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043300875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:06.964" endtime="20201110 08:33:06.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:06.983" endtime="20201110 08:33:06.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.606" endtime="20201110 08:33:06.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.601" endtime="20201110 08:33:06.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:07.001" level="INFO">${RESULT} = [{'time': 0.043300875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.126400000000307e-05, 'source_diff': 3.126400000000307e-05}, {'time': 0.043345833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:06.992" endtime="20201110 08:33:07.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:07.032" level="INFO">${ACCURACY} = {'time': [0.043300875, 0.043345833, 0.043391833, 0.043434847, 0.043474847, 0.043517861, 0.043561889, 0.043607861, 0.043650861, 0.043695875, 0.043738875, 0.043782889, 0.043828889, 0.043870889, 0.043909...</msg>
<status status="PASS" starttime="20201110 08:33:07.003" endtime="20201110 08:33:07.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.044" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:33:07.041" endtime="20201110 08:33:07.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.049" level="INFO">VALUE: [3.126400000000307e-05, 3.14579999999981e-05, 3.19579999999986e-05, 3.170799999999835e-05, 3.1318999999994934e-05, 3.170799999999835e-05, 3.147199999999767e-05, 3.120799999999785e-05, 3.155500000000255e-05, 3.170800000000529e-05, 3.133300000000144e-05, 3.134700000000101e-05, 3.195800000000554e-05, 3.145800000000504e-05, 3.170799999999835e-05, 3.184800000000099e-05, 3.147299999999714e-05, 3.183400000000142e-05, 3.156999999999466e-05, 3.195900000000501e-05, 3.12779999999957e-05, 3.170899999999782e-05, 3.122200000000436e-05, 3.141699999999886e-05, 3.170799999999835e-05, 3.19579999999986e-05, 3.181900000000237e-05, 3.1832999999995004e-05, 3.158300000000169e-05, 3.1332999999994504e-05, 3.1040999999995544e-05, 3.119399999999828e-05, 3.109700000000076e-05, 3.169399999999878e-05, 3.1346999999994074e-05, 3.172199999999792e-05, 3.183300000000194e-05, 3.172199999999792e-05, 3.193099999999893e-05, 3.120799999999785e-05, 3.158300000000169e-05, 3.198599999999774e-05, 3.124999999999656e-05, 3.170899999999782e-05, 3.132000000000135e-05, 3.193099999999893e-05, 3.122300000000383e-05, 3.158400000000117e-05, 3.182000000000185e-05, 3.108400000000067e-05]</msg>
<status status="PASS" starttime="20201110 08:33:07.046" endtime="20201110 08:33:07.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.034" endtime="20201110 08:33:07.052"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.059" endtime="20201110 08:33:07.062"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:07.067" endtime="20201110 08:33:07.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.063" endtime="20201110 08:33:07.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.054" endtime="20201110 08:33:07.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.541" endtime="20201110 08:33:07.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:06.540" endtime="20201110 08:33:07.093"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.118" endtime="20201110 08:33:07.137"></status>
</kw>
<msg timestamp="20201110 08:33:07.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.115" endtime="20201110 08:33:07.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.141" endtime="20201110 08:33:07.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.147" endtime="20201110 08:33:07.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.107" endtime="20201110 08:33:07.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.100" endtime="20201110 08:33:07.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.171" endtime="20201110 08:33:07.508"></status>
</kw>
<msg timestamp="20201110 08:33:07.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044011361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044043444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.168" endtime="20201110 08:33:07.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044011361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044043444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.518" endtime="20201110 08:33:07.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.537" endtime="20201110 08:33:07.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.160" endtime="20201110 08:33:07.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.155" endtime="20201110 08:33:07.543"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:07.555" level="INFO">${RESULT} = [{'time': 0.044043444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.208300000000219e-05, 'source_diff': 3.208300000000219e-05}, {'time': 0.044083472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:07.545" endtime="20201110 08:33:07.555"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:07.586" level="INFO">${ACCURACY} = {'time': [0.044043444, 0.044083472, 0.044130486, 0.044175458, 0.044215472, 0.044257486, 0.044303486, 0.044344486, 0.044385486, 0.044432486, 0.0444795, 0.0445235, 0.0445675, 0.044607514, 0.044647556, 0...</msg>
<status status="PASS" starttime="20201110 08:33:07.557" endtime="20201110 08:33:07.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.597" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:33:07.595" endtime="20201110 08:33:07.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.603" level="INFO">VALUE: [3.208300000000219e-05, 3.2554999999996614e-05, 3.2110999999994394e-05, 3.29579999999996e-05, 3.2068999999995684e-05, 3.222199999999842e-05, 3.209700000000176e-05, 3.220800000000579e-05, 3.29579999999996e-05, 3.258300000000269e-05, 3.219399999999928e-05, 3.233300000000244e-05, 3.233300000000244e-05, 3.233300000000244e-05, 3.273699999999796e-05, 3.270799999999935e-05, 3.281999999999591e-05, 3.224999999999756e-05, 3.234800000000149e-05, 3.295899999999907e-05, 3.20700000000021e-05, 3.236100000000158e-05, 3.220799999999885e-05, 3.295899999999907e-05, 3.24579999999991e-05, 3.2277000000004163e-05, 3.294400000000003e-05, 3.222199999999842e-05, 3.258300000000269e-05, 3.2846999999995574e-05, 3.277800000000414e-05, 3.268000000000021e-05, 3.244400000000647e-05, 3.2832999999996004e-05, 3.247200000000561e-05, 3.2318999999995934e-05, 3.2832999999996004e-05, 3.208300000000219e-05, 3.279200000000371e-05, 3.256999999999566e-05, 3.272200000000586e-05, 3.24579999999991e-05, 3.258400000000217e-05, 3.25700000000026e-05, 3.272299999999839e-05, 3.222299999999789e-05, 3.208400000000167e-05, 3.245899999999857e-05, 3.268099999999968e-05, 3.232000000000235e-05]</msg>
<status status="PASS" starttime="20201110 08:33:07.599" endtime="20201110 08:33:07.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.588" endtime="20201110 08:33:07.606"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.612" endtime="20201110 08:33:07.615"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:07.621" endtime="20201110 08:33:07.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.616" endtime="20201110 08:33:07.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.608" endtime="20201110 08:33:07.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.096" endtime="20201110 08:33:07.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.094" endtime="20201110 08:33:07.648"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.671" endtime="20201110 08:33:07.691"></status>
</kw>
<msg timestamp="20201110 08:33:07.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.668" endtime="20201110 08:33:07.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:07.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:07.694" endtime="20201110 08:33:07.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.700" endtime="20201110 08:33:07.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.661" endtime="20201110 08:33:07.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.655" endtime="20201110 08:33:07.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:07.726" endtime="20201110 08:33:08.064"></status>
</kw>
<msg timestamp="20201110 08:33:08.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043371986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043405208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:07.723" endtime="20201110 08:33:08.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043371986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043405208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.073" endtime="20201110 08:33:08.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.092" endtime="20201110 08:33:08.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.716" endtime="20201110 08:33:08.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.711" endtime="20201110 08:33:08.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.110" level="INFO">${RESULT} = [{'time': 0.043405208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.322199999999942e-05, 'source_diff': 3.322199999999942e-05}, {'time': 0.043446208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:08.101" endtime="20201110 08:33:08.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:08.141" level="INFO">${ACCURACY} = {'time': [0.043405208, 0.043446208, 0.043491222, 0.043537208, 0.043585236, 0.043630236, 0.043675236, 0.04371725, 0.04376125, 0.043803236, 0.04384625, 0.043889264, 0.04393125, 0.043978319, 0.044019306,...</msg>
<status status="PASS" starttime="20201110 08:33:08.112" endtime="20201110 08:33:08.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.152" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:33:08.150" endtime="20201110 08:33:08.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.158" level="INFO">VALUE: [3.322199999999942e-05, 3.322199999999942e-05, 3.365300000000154e-05, 3.306900000000362e-05, 3.309700000000276e-05, 3.322199999999942e-05, 3.3596999999996324e-05, 3.323599999999899e-05, 3.309700000000276e-05, 3.331900000000387e-05, 3.372199999999992e-05, 3.3596999999996324e-05, 3.379199999999777e-05, 3.36380000000025e-05, 3.349999999999881e-05, 3.359800000000274e-05, 3.3096999999995824e-05, 3.395900000000007e-05, 3.333399999999598e-05, 3.384800000000299e-05, 3.391700000000136e-05, 3.383400000000342e-05, 3.308400000000267e-05, 3.320899999999932e-05, 3.395900000000007e-05, 3.369400000000078e-05, 3.347199999999967e-05, 3.308300000000319e-05, 3.356900000000412e-05, 3.39580000000006e-05, 3.397200000000017e-05, 3.31659999999942e-05, 3.356900000000412e-05, 3.3624999999995464e-05, 3.369400000000078e-05, 3.3832999999997004e-05, 3.393100000000093e-05, 3.333300000000344e-05, 3.39580000000006e-05, 3.383300000000394e-05, 3.322199999999942e-05, 3.3082999999996254e-05, 3.384799999999605e-05, 3.395900000000007e-05, 3.395900000000007e-05, 3.358399999999623e-05, 3.3930999999993994e-05, 3.384800000000299e-05, 3.320799999999985e-05, 3.34580000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:33:08.155" endtime="20201110 08:33:08.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.143" endtime="20201110 08:33:08.161"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.168" endtime="20201110 08:33:08.170"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.176" endtime="20201110 08:33:08.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.172" endtime="20201110 08:33:08.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.163" endtime="20201110 08:33:08.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.650" endtime="20201110 08:33:08.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:07.649" endtime="20201110 08:33:08.202"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.225" endtime="20201110 08:33:08.244"></status>
</kw>
<msg timestamp="20201110 08:33:08.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.222" endtime="20201110 08:33:08.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.248" endtime="20201110 08:33:08.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.254" endtime="20201110 08:33:08.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.215" endtime="20201110 08:33:08.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.209" endtime="20201110 08:33:08.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.279" endtime="20201110 08:33:08.632"></status>
</kw>
<msg timestamp="20201110 08:33:08.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042475028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042509931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.276" endtime="20201110 08:33:08.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042475028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042509931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.641" endtime="20201110 08:33:08.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.661" endtime="20201110 08:33:08.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.267" endtime="20201110 08:33:08.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.262" endtime="20201110 08:33:08.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:08.679" level="INFO">${RESULT} = [{'time': 0.042509931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.490300000000279e-05, 'source_diff': 3.490300000000279e-05}, {'time': 0.042553958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:08.670" endtime="20201110 08:33:08.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:08.713" level="INFO">${ACCURACY} = {'time': [0.042509931, 0.042553958, 0.042598944, 0.042643958, 0.042687958, 0.042730958, 0.042776958, 0.042823, 0.042868986, 0.042914028, 0.042960986, 0.043008014, 0.04305, 0.043093028, 0.043139, 0.043...</msg>
<status status="PASS" starttime="20201110 08:33:08.681" endtime="20201110 08:33:08.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.724" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:33:08.722" endtime="20201110 08:33:08.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.730" level="INFO">VALUE: [3.490300000000279e-05, 3.459700000000426e-05, 3.4832999999998004e-05, 3.483300000000494e-05, 3.4082999999997254e-05, 3.465199999999613e-05, 3.467999999999527e-05, 3.4860999999997144e-05, 3.4846999999997574e-05, 3.437500000000315e-05, 3.494400000000203e-05, 3.4596999999997324e-05, 3.4596999999997324e-05, 3.4596999999997324e-05, 3.4332999999997504e-05, 3.447200000000067e-05, 3.4846999999997574e-05, 3.420800000000085e-05, 3.45700000000046e-05, 3.445900000000057e-05, 3.447300000000014e-05, 3.432000000000435e-05, 3.420900000000032e-05, 3.40979999999963e-05, 3.433300000000444e-05, 3.497200000000117e-05, 3.420800000000085e-05, 3.422200000000042e-05, 3.420800000000085e-05, 3.501399999999988e-05, 3.472200000000092e-05, 3.44580000000011e-05, 3.4596999999997324e-05, 3.470799999999441e-05, 3.4818999999998435e-05, 3.4804999999998865e-05, 3.438900000000272e-05, 3.411100000000333e-05, 3.420800000000085e-05, 3.4332999999997504e-05, 3.4860999999997144e-05, 3.484700000000451e-05, 3.420800000000085e-05, 3.448600000000024e-05, 3.493100000000193e-05, 3.42370000000064e-05, 3.487500000000365e-05, 3.420900000000032e-05, 3.4708999999993884e-05, 3.406999999999716e-05]</msg>
<status status="PASS" starttime="20201110 08:33:08.727" endtime="20201110 08:33:08.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.715" endtime="20201110 08:33:08.733"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.739" endtime="20201110 08:33:08.742"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:08.748" endtime="20201110 08:33:08.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.743" endtime="20201110 08:33:08.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.735" endtime="20201110 08:33:08.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.204" endtime="20201110 08:33:08.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.203" endtime="20201110 08:33:08.774"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.797" endtime="20201110 08:33:08.816"></status>
</kw>
<msg timestamp="20201110 08:33:08.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.793" endtime="20201110 08:33:08.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:08.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:08.820" endtime="20201110 08:33:08.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.826" endtime="20201110 08:33:08.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.786" endtime="20201110 08:33:08.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.780" endtime="20201110 08:33:08.833"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:08.850" endtime="20201110 08:33:09.189"></status>
</kw>
<msg timestamp="20201110 08:33:09.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042423472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042458625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:08.846" endtime="20201110 08:33:09.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042423472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042458625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.199" endtime="20201110 08:33:09.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.219" endtime="20201110 08:33:09.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.839" endtime="20201110 08:33:09.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.834" endtime="20201110 08:33:09.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.236" level="INFO">${RESULT} = [{'time': 0.042458625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.515300000000304e-05, 'source_diff': 3.515300000000304e-05}, {'time': 0.042502583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:09.227" endtime="20201110 08:33:09.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:09.267" level="INFO">${ACCURACY} = {'time': [0.042458625, 0.042502583, 0.042550597, 0.042597583, 0.042641597, 0.042691611, 0.042740611, 0.042784611, 0.042828625, 0.042875625, 0.042925625, 0.042973625, 0.043022667, 0.043071681, 0.043120...</msg>
<status status="PASS" starttime="20201110 08:33:09.238" endtime="20201110 08:33:09.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.279" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:33:09.276" endtime="20201110 08:33:09.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.284" level="INFO">VALUE: [3.515300000000304e-05, 3.574999999999412e-05, 3.587500000000465e-05, 3.601400000000088e-05, 3.551400000000038e-05, 3.599999999999437e-05, 3.576400000000063e-05, 3.5110999999997394e-05, 3.602800000000045e-05, 3.515300000000304e-05, 3.588900000000422e-05, 3.576400000000063e-05, 3.591700000000336e-05, 3.601400000000088e-05, 3.513900000000347e-05, 3.5138999999996534e-05, 3.551400000000038e-05, 3.590300000000379e-05, 3.551400000000038e-05, 3.513900000000347e-05, 3.5152999999996104e-05, 3.551400000000038e-05, 3.5888999999997284e-05, 3.5777000000000725e-05, 3.5068999999998685e-05, 3.5082999999998254e-05, 3.525000000000056e-05, 3.565300000000354e-05, 3.580599999999934e-05, 3.540300000000329e-05, 3.594400000000303e-05, 3.552799999999995e-05, 3.552799999999995e-05, 3.545900000000157e-05, 3.565300000000354e-05, 3.565300000000354e-05, 3.576400000000063e-05, 3.563900000000397e-05, 3.5596999999998324e-05, 3.552799999999995e-05, 3.601399999999394e-05, 3.588900000000422e-05, 3.602799999999351e-05, 3.590300000000379e-05, 3.5874999999997714e-05, 3.6069000000006624e-05, 3.594400000000303e-05, 3.5277000000000225e-05, 3.563799999999756e-05, 3.563799999999756e-05]</msg>
<status status="PASS" starttime="20201110 08:33:09.281" endtime="20201110 08:33:09.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.269" endtime="20201110 08:33:09.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.294" endtime="20201110 08:33:09.297"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.302" endtime="20201110 08:33:09.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.298" endtime="20201110 08:33:09.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.289" endtime="20201110 08:33:09.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.776" endtime="20201110 08:33:09.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:08.775" endtime="20201110 08:33:09.328"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.351" endtime="20201110 08:33:09.371"></status>
</kw>
<msg timestamp="20201110 08:33:09.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.348" endtime="20201110 08:33:09.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.374" endtime="20201110 08:33:09.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.381" endtime="20201110 08:33:09.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.340" endtime="20201110 08:33:09.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.335" endtime="20201110 08:33:09.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.405" endtime="20201110 08:33:09.743"></status>
</kw>
<msg timestamp="20201110 08:33:09.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042480528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04251725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:09.401" endtime="20201110 08:33:09.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042480528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04251725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:09.753" endtime="20201110 08:33:09.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.772" endtime="20201110 08:33:09.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.394" endtime="20201110 08:33:09.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.389" endtime="20201110 08:33:09.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:09.790" level="INFO">${RESULT} = [{'time': 0.04251725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.672200000000292e-05, 'source_diff': 3.672200000000292e-05}, {'time': 0.042563278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:09.781" endtime="20201110 08:33:09.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:09.821" level="INFO">${ACCURACY} = {'time': [0.04251725, 0.042563278, 0.042614264, 0.042664278, 0.042712278, 0.042756278, 0.042803347, 0.042852292, 0.042901347, 0.042951306, 0.042996319, 0.043046319, 0.043095361, 0.043146319, 0.0431943...</msg>
<status status="PASS" starttime="20201110 08:33:09.792" endtime="20201110 08:33:09.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.833" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:33:09.830" endtime="20201110 08:33:09.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.838" level="INFO">VALUE: [3.672200000000292e-05, 3.609700000000576e-05, 3.6694999999996314e-05, 3.6096999999998824e-05, 3.670900000000282e-05, 3.670900000000282e-05, 3.6402999999997354e-05, 3.652800000000095e-05, 3.6388999999997784e-05, 3.645900000000257e-05, 3.695799999999666e-05, 3.695799999999666e-05, 3.6124999999997964e-05, 3.6318999999999935e-05, 3.700000000000231e-05, 3.6597000000006263e-05, 3.6082999999999255e-05, 3.69580000000036e-05, 3.64580000000031e-05, 3.697199999999623e-05, 3.69580000000036e-05, 3.620799999999591e-05, 3.6360999999998644e-05, 3.61250000000049e-05, 3.619400000000328e-05, 3.670900000000282e-05, 3.6082999999999255e-05, 3.69580000000036e-05, 3.6402999999997354e-05, 3.608399999999873e-05, 3.634800000000549e-05, 3.633399999999898e-05, 3.608399999999873e-05, 3.645900000000257e-05, 3.67780000000012e-05, 3.672199999999598e-05, 3.648600000000224e-05, 3.6833000000000005e-05, 3.672199999999598e-05, 3.69580000000036e-05, 3.670800000000335e-05, 3.6083000000006193e-05, 3.6332999999999505e-05, 3.644399999999659e-05, 3.6318999999999935e-05, 3.620800000000285e-05, 3.6846999999999575e-05, 3.6874999999998714e-05, 3.647199999999573e-05, 3.6846999999999575e-05]</msg>
<status status="PASS" starttime="20201110 08:33:09.835" endtime="20201110 08:33:09.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.823" endtime="20201110 08:33:09.841"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.848" endtime="20201110 08:33:09.851"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:09.856" endtime="20201110 08:33:09.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.852" endtime="20201110 08:33:09.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.843" endtime="20201110 08:33:09.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.330" endtime="20201110 08:33:09.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.329" endtime="20201110 08:33:09.882"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.905" endtime="20201110 08:33:09.924"></status>
</kw>
<msg timestamp="20201110 08:33:09.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.902" endtime="20201110 08:33:09.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:09.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:09.928" endtime="20201110 08:33:09.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.937" endtime="20201110 08:33:09.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.895" endtime="20201110 08:33:09.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.889" endtime="20201110 08:33:09.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:09.963" endtime="20201110 08:33:10.300"></status>
</kw>
<msg timestamp="20201110 08:33:10.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042287833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042325819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:09.959" endtime="20201110 08:33:10.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042287833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042325819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.309" endtime="20201110 08:33:10.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.328" endtime="20201110 08:33:10.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.952" endtime="20201110 08:33:10.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.947" endtime="20201110 08:33:10.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.348" level="INFO">${RESULT} = [{'time': 0.042325819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.798600000000374e-05, 'source_diff': 3.798600000000374e-05}, {'time': 0.042375833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:10.339" endtime="20201110 08:33:10.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:10.379" level="INFO">${ACCURACY} = {'time': [0.042325819, 0.042375833, 0.042425833, 0.042473847, 0.042524861, 0.042570847, 0.042622875, 0.042670861, 0.042721861, 0.042767889, 0.042819889, 0.042865889, 0.042916889, 0.042964903, 0.043014...</msg>
<status status="PASS" starttime="20201110 08:33:10.350" endtime="20201110 08:33:10.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.390" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:33:10.388" endtime="20201110 08:33:10.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.395" level="INFO">VALUE: [3.798600000000374e-05, 3.7083000000000255e-05, 3.7583000000000755e-05, 3.7597000000000325e-05, 3.7582999999993816e-05, 3.770800000000435e-05, 3.794399999999809e-05, 3.7333000000000505e-05, 3.770799999999741e-05, 3.722200000000342e-05, 3.797199999999723e-05, 3.7333000000000505e-05, 3.770799999999741e-05, 3.797199999999723e-05, 3.784800000000005e-05, 3.783400000000048e-05, 3.758400000000023e-05, 3.779200000000177e-05, 3.734799999999955e-05, 3.7110999999999394e-05, 3.708399999999973e-05, 3.745900000000357e-05, 3.804200000000202e-05, 3.767999999999827e-05, 3.7360999999999644e-05, 3.770800000000435e-05, 3.79580000000046e-05, 3.747200000000367e-05, 3.797199999999723e-05, 3.7290999999994856e-05, 3.744399999999759e-05, 3.7847000000000575e-05, 3.800000000000331e-05, 3.7276999999995286e-05, 3.7319000000000935e-05, 3.720800000000385e-05, 3.7083000000000255e-05, 3.770800000000435e-05, 3.795900000000407e-05, 3.75979999999998e-05, 3.786200000000656e-05, 3.7861000000000145e-05, 3.733399999999998e-05, 3.7861000000000145e-05, 3.7694999999997314e-05, 3.798600000000374e-05, 3.7347000000000075e-05, 3.7833000000001005e-05, 3.7791000000002295e-05, 3.747199999999673e-05]</msg>
<status status="PASS" starttime="20201110 08:33:10.392" endtime="20201110 08:33:10.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.381" endtime="20201110 08:33:10.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.405" endtime="20201110 08:33:10.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.413" endtime="20201110 08:33:10.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.409" endtime="20201110 08:33:10.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.400" endtime="20201110 08:33:10.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.884" endtime="20201110 08:33:10.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:09.883" endtime="20201110 08:33:10.439"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.462" endtime="20201110 08:33:10.483"></status>
</kw>
<msg timestamp="20201110 08:33:10.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.459" endtime="20201110 08:33:10.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:10.486" endtime="20201110 08:33:10.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.492" endtime="20201110 08:33:10.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.452" endtime="20201110 08:33:10.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.446" endtime="20201110 08:33:10.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.516" endtime="20201110 08:33:10.854"></status>
</kw>
<msg timestamp="20201110 08:33:10.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042199514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042238306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.513" endtime="20201110 08:33:10.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042199514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042238306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:10.864" endtime="20201110 08:33:10.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.883" endtime="20201110 08:33:10.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.506" endtime="20201110 08:33:10.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.501" endtime="20201110 08:33:10.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:10.902" level="INFO">${RESULT} = [{'time': 0.042238306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.879200000000277e-05, 'source_diff': 3.879200000000277e-05}, {'time': 0.042285319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:10.893" endtime="20201110 08:33:10.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:10.935" level="INFO">${ACCURACY} = {'time': [0.042238306, 0.042285319, 0.042334306, 0.042384319, 0.042430347, 0.042476347, 0.042526347, 0.042576333, 0.042629347, 0.042676347, 0.042727347, 0.042778403, 0.042831361, 0.042884389, 0.042934...</msg>
<status status="PASS" starttime="20201110 08:33:10.904" endtime="20201110 08:33:10.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.947" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:33:10.944" endtime="20201110 08:33:10.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:10.952" level="INFO">VALUE: [3.879200000000277e-05, 3.8583000000001755e-05, 3.852800000000295e-05, 3.872199999999798e-05, 3.8111000000000395e-05, 3.8596999999994386e-05, 3.8347000000001075e-05, 3.844399999999859e-05, 3.8597000000001325e-05, 3.8833000000002005e-05, 3.8902999999999854e-05, 3.8889000000000284e-05, 3.895799999999866e-05, 3.8111000000000395e-05, 3.882000000000191e-05, 3.8430999999998494e-05, 3.822200000000442e-05, 3.807000000000116e-05, 3.8083000000001255e-05, 3.870900000000482e-05, 3.8458999999997634e-05, 3.85980000000008e-05, 3.857000000000166e-05, 3.847300000000414e-05, 3.8875000000000715e-05, 3.858400000000123e-05, 3.8347000000001075e-05, 3.8597000000001325e-05, 3.822199999999748e-05, 3.820799999999791e-05, 3.820799999999791e-05, 3.8068999999994746e-05, 3.820800000000485e-05, 3.845799999999816e-05, 3.872200000000492e-05, 3.8639000000000034e-05, 3.802800000000245e-05, 3.8583000000001755e-05, 3.8597000000001325e-05, 3.843000000000596e-05, 3.8347000000001075e-05, 3.895799999999866e-05, 3.900000000000431e-05, 3.876399999999669e-05, 3.872300000000439e-05, 3.822300000000389e-05, 3.8388999999999784e-05, 3.8445000000005e-05, 3.894399999999909e-05, 3.84859999999973e-05]</msg>
<status status="PASS" starttime="20201110 08:33:10.949" endtime="20201110 08:33:10.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.937" endtime="20201110 08:33:10.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:10.962" endtime="20201110 08:33:10.964"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:10.970" endtime="20201110 08:33:10.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.966" endtime="20201110 08:33:10.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.957" endtime="20201110 08:33:10.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.441" endtime="20201110 08:33:10.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.440" endtime="20201110 08:33:10.996"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.019" endtime="20201110 08:33:11.039"></status>
</kw>
<msg timestamp="20201110 08:33:11.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.016" endtime="20201110 08:33:11.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.042" endtime="20201110 08:33:11.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.049" endtime="20201110 08:33:11.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.009" endtime="20201110 08:33:11.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.003" endtime="20201110 08:33:11.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.073" endtime="20201110 08:33:11.408"></status>
</kw>
<msg timestamp="20201110 08:33:11.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042595181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042635194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.069" endtime="20201110 08:33:11.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042595181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042635194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.418" endtime="20201110 08:33:11.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.437" endtime="20201110 08:33:11.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.062" endtime="20201110 08:33:11.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.057" endtime="20201110 08:33:11.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:11.455" level="INFO">${RESULT} = [{'time': 0.042635194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0012999999998466e-05, 'source_diff': 4.0012999999998466e-05}, {'time': 0.042682208, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:11.446" endtime="20201110 08:33:11.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:11.487" level="INFO">${ACCURACY} = {'time': [0.042635194, 0.042682208, 0.042731222, 0.042784194, 0.042838194, 0.042888236, 0.042938208, 0.042985208, 0.043035236, 0.043083236, 0.04313125, 0.043183236, 0.043236236, 0.043289292, 0.0433362...</msg>
<status status="PASS" starttime="20201110 08:33:11.457" endtime="20201110 08:33:11.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.499" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:33:11.496" endtime="20201110 08:33:11.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.504" level="INFO">VALUE: [4.0012999999998466e-05, 3.972199999999898e-05, 3.999999999999837e-05, 3.9068999999995746e-05, 3.9833000000003005e-05, 3.9125000000000965e-05, 3.917999999999977e-05, 3.945799999999916e-05, 3.972199999999898e-05, 3.947199999999873e-05, 3.9611000000001895e-05, 3.945799999999916e-05, 3.9582999999995816e-05, 3.9611000000001895e-05, 3.947199999999873e-05, 3.9847000000002575e-05, 3.99859999999988e-05, 3.958399999999529e-05, 3.908400000000173e-05, 3.908400000000173e-05, 3.984800000000205e-05, 3.9208999999998384e-05, 3.9222999999997954e-05, 3.908400000000173e-05, 3.958400000000223e-05, 3.922199999999848e-05, 3.9582999999995816e-05, 3.995799999999966e-05, 3.972200000000592e-05, 3.9347000000002075e-05, 3.94859999999983e-05, 3.998600000000574e-05, 3.919399999999934e-05, 3.974999999999812e-05, 3.945799999999916e-05, 3.9082999999995316e-05, 3.9082999999995316e-05, 3.995799999999966e-05, 3.9597000000002325e-05, 3.9653000000000604e-05, 3.908400000000173e-05, 3.9708999999998884e-05, 3.9222999999997954e-05, 3.9486999999997774e-05, 3.934800000000155e-05, 3.972300000000539e-05, 3.9430999999999494e-05, 3.907000000000216e-05, 3.9360999999994706e-05, 3.9332999999995566e-05]</msg>
<status status="PASS" starttime="20201110 08:33:11.501" endtime="20201110 08:33:11.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.489" endtime="20201110 08:33:11.513"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.520" endtime="20201110 08:33:11.523"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:11.529" endtime="20201110 08:33:11.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.525" endtime="20201110 08:33:11.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.515" endtime="20201110 08:33:11.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.998" endtime="20201110 08:33:11.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:10.997" endtime="20201110 08:33:11.559"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.591" endtime="20201110 08:33:11.612"></status>
</kw>
<msg timestamp="20201110 08:33:11.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.587" endtime="20201110 08:33:11.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:11.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:11.616" endtime="20201110 08:33:11.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.623" endtime="20201110 08:33:11.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.577" endtime="20201110 08:33:11.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.568" endtime="20201110 08:33:11.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:11.648" endtime="20201110 08:33:11.990"></status>
</kw>
<msg timestamp="20201110 08:33:11.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055463208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055503292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.644" endtime="20201110 08:33:11.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.055463208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055503292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:11.999" endtime="20201110 08:33:12.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.019" endtime="20201110 08:33:12.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.637" endtime="20201110 08:33:12.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.632" endtime="20201110 08:33:12.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.036" level="INFO">${RESULT} = [{'time': 0.055503292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.008400000000273e-05, 'source_diff': 4.008400000000273e-05}, {'time': 0.055557292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:12.027" endtime="20201110 08:33:12.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:12.068" level="INFO">${ACCURACY} = {'time': [0.055503292, 0.055557292, 0.055607333, 0.055659319, 0.055713306, 0.055763319, 0.055816319, 0.055867389, 0.055922347, 0.055976333, 0.056029347, 0.056078347, 0.056132361, 0.056186375, 0.056240...</msg>
<status status="PASS" starttime="20201110 08:33:12.038" endtime="20201110 08:33:12.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.079" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:33:12.077" endtime="20201110 08:33:12.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.085" level="INFO">VALUE: [4.008400000000273e-05, 4.0959000000000134e-05, 4.099999999999937e-05, 4.072199999999998e-05, 4.0208999999999384e-05, 4.0582999999996816e-05, 4.0083000000003255e-05, 4.051400000000538e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.0083000000003255e-05, 4.0069000000003685e-05, 4.0832999999997066e-05, 4.0680999999993805e-05, 4.0611000000002895e-05, 4.025000000000556e-05, 4.095800000000066e-05, 4.0346999999996136e-05, 4.0417000000000924e-05, 4.0097000000002825e-05, 4.0708999999999884e-05, 4.0959000000000134e-05, 4.0472999999999204e-05, 4.057000000000366e-05, 4.0722999999999454e-05, 4.0431000000000494e-05, 4.083399999999654e-05, 4.091600000000195e-05, 4.0276999999998286e-05, 4.0568999999997246e-05, 4.02780000000047e-05, 4.0819000000004435e-05, 4.095800000000066e-05, 4.094400000000109e-05, 4.072199999999998e-05, 4.0833000000004005e-05, 4.0833000000004005e-05, 4.022199999999948e-05, 4.0861000000003145e-05, 4.081999999999697e-05, 4.070800000000041e-05, 4.070800000000041e-05, 4.058399999999629e-05, 4.009799999999536e-05, 4.008400000000273e-05, 4.005599999999665e-05, 4.008399999999579e-05, 4.0445000000000064e-05, 4.031999999999647e-05, 4.0596999999996386e-05]</msg>
<status status="PASS" starttime="20201110 08:33:12.082" endtime="20201110 08:33:12.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.070" endtime="20201110 08:33:12.088"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.094" endtime="20201110 08:33:12.097"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.103" endtime="20201110 08:33:12.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.098" endtime="20201110 08:33:12.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.090" endtime="20201110 08:33:12.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.562" endtime="20201110 08:33:12.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:11.561" endtime="20201110 08:33:12.128"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.151" endtime="20201110 08:33:12.170"></status>
</kw>
<msg timestamp="20201110 08:33:12.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.148" endtime="20201110 08:33:12.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.173" endtime="20201110 08:33:12.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.180" endtime="20201110 08:33:12.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.140" endtime="20201110 08:33:12.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.135" endtime="20201110 08:33:12.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.203" endtime="20201110 08:33:12.534"></status>
</kw>
<msg timestamp="20201110 08:33:12.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041439403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041480694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.200" endtime="20201110 08:33:12.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041439403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041480694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.544" endtime="20201110 08:33:12.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.563" endtime="20201110 08:33:12.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.193" endtime="20201110 08:33:12.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.188" endtime="20201110 08:33:12.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:12.580" level="INFO">${RESULT} = [{'time': 0.041480694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1290999999998856e-05, 'source_diff': 4.1290999999998856e-05}, {'time': 0.041532681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:12.571" endtime="20201110 08:33:12.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:12.612" level="INFO">${ACCURACY} = {'time': [0.041480694, 0.041532681, 0.041586708, 0.041635708, 0.041684708, 0.041736722, 0.041792708, 0.041847722, 0.04190075, 0.04194975, 0.042000792, 0.042050736, 0.04210575, 0.04215575, 0.042204764,...</msg>
<status status="PASS" starttime="20201110 08:33:12.582" endtime="20201110 08:33:12.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.623" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:33:12.621" endtime="20201110 08:33:12.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.629" level="INFO">VALUE: [4.1290999999998856e-05, 4.158400000000423e-05, 4.19860000000008e-05, 4.1082999999997316e-05, 4.151399999999944e-05, 4.11939999999944e-05, 4.16939999999949e-05, 4.120799999999397e-05, 4.170800000000141e-05, 4.1611000000003895e-05, 4.201399999999994e-05, 4.1082999999997316e-05, 4.1846999999997636e-05, 4.1082999999997316e-05, 4.1096999999996886e-05, 4.1125000000002965e-05, 4.113799999999612e-05, 4.1346999999997136e-05, 4.1402999999995416e-05, 4.1473000000000204e-05, 4.1459000000000634e-05, 4.133399999999704e-05, 4.19860000000008e-05, 4.183400000000448e-05, 4.141600000000245e-05, 4.120800000000091e-05, 4.1832999999998066e-05, 4.169400000000184e-05, 4.1846999999997636e-05, 4.1582999999997816e-05, 4.195800000000166e-05, 4.1596999999997386e-05, 4.1347000000004075e-05, 4.1347000000004075e-05, 4.1347000000004075e-05, 4.1832999999998066e-05, 4.123600000000005e-05, 4.195800000000166e-05, 4.106999999999722e-05, 4.1459000000000634e-05, 4.133399999999704e-05, 4.1709000000000884e-05, 4.1209000000000384e-05, 4.126399999999919e-05, 4.133399999999704e-05, 4.1582999999997816e-05, 4.1818999999998496e-05, 4.145799999999422e-05, 4.120800000000091e-05, 4.1346999999997136e-05]</msg>
<status status="PASS" starttime="20201110 08:33:12.625" endtime="20201110 08:33:12.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.614" endtime="20201110 08:33:12.632"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.638" endtime="20201110 08:33:12.641"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:12.646" endtime="20201110 08:33:12.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.642" endtime="20201110 08:33:12.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.633" endtime="20201110 08:33:12.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.130" endtime="20201110 08:33:12.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.129" endtime="20201110 08:33:12.672"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.695" endtime="20201110 08:33:12.714"></status>
</kw>
<msg timestamp="20201110 08:33:12.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.691" endtime="20201110 08:33:12.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:12.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:12.718" endtime="20201110 08:33:12.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.724" endtime="20201110 08:33:12.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.684" endtime="20201110 08:33:12.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.678" endtime="20201110 08:33:12.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:12.747" endtime="20201110 08:33:13.081"></status>
</kw>
<msg timestamp="20201110 08:33:13.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041726958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:12.744" endtime="20201110 08:33:13.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041684222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041726958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.091" endtime="20201110 08:33:13.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.110" endtime="20201110 08:33:13.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.737" endtime="20201110 08:33:13.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.732" endtime="20201110 08:33:13.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.127" level="INFO">${RESULT} = [{'time': 0.041726958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.273600000000155e-05, 'source_diff': 4.273600000000155e-05}, {'time': 0.041777958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:13.118" endtime="20201110 08:33:13.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.161" level="INFO">${ACCURACY} = {'time': [0.041726958, 0.041777958, 0.041828944, 0.041878958, 0.041934958, 0.041990972, 0.042045958, 0.042099972, 0.042152972, 0.042210028, 0.042265986, 0.042321986, 0.042375014, 0.042430042, 0.042482...</msg>
<status status="PASS" starttime="20201110 08:33:13.129" endtime="20201110 08:33:13.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.171" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.169" endtime="20201110 08:33:13.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.177" level="INFO">VALUE: [4.273600000000155e-05, 4.2541000000000107e-05, 4.2346999999998136e-05, 4.2082999999998316e-05, 4.2846999999998636e-05, 4.2596999999998386e-05, 4.2832999999999066e-05, 4.244400000000259e-05, 4.244399999999565e-05, 4.2458999999994695e-05, 4.270799999999547e-05, 4.270799999999547e-05, 4.297200000000223e-05, 4.2360999999997706e-05, 4.295799999999572e-05, 4.258399999999829e-05, 4.273600000000155e-05, 4.2973000000001704e-05, 4.2972999999994765e-05, 4.208399999999779e-05, 4.222200000000148e-05, 4.2709000000001884e-05, 4.2445000000002064e-05, 4.227799999999976e-05, 4.29860000000018e-05, 4.2568999999999246e-05, 4.2082999999998316e-05, 4.2874999999997776e-05, 4.223600000000105e-05, 4.2319000000005935e-05, 4.295800000000266e-05, 4.244399999999565e-05, 4.2082999999998316e-05, 4.2124999999997026e-05, 4.290199999999744e-05, 4.2332999999998566e-05, 4.247200000000173e-05, 4.283399999999854e-05, 4.248599999999436e-05, 4.2459000000001634e-05, 4.2208999999994445e-05, 4.209799999999736e-05, 4.234799999999761e-05, 4.2833000000006005e-05, 4.2361000000004645e-05, 4.2111000000004395e-05, 4.2361000000004645e-05, 4.2832999999999066e-05, 4.2554999999999676e-05, 4.297200000000223e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.174" endtime="20201110 08:33:13.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.162" endtime="20201110 08:33:13.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.186" endtime="20201110 08:33:13.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.195" endtime="20201110 08:33:13.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.190" endtime="20201110 08:33:13.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.182" endtime="20201110 08:33:13.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.674" endtime="20201110 08:33:13.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:12.673" endtime="20201110 08:33:13.220"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.243" endtime="20201110 08:33:13.262"></status>
</kw>
<msg timestamp="20201110 08:33:13.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.240" endtime="20201110 08:33:13.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.266" endtime="20201110 08:33:13.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.272" endtime="20201110 08:33:13.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.233" endtime="20201110 08:33:13.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.227" endtime="20201110 08:33:13.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.295" endtime="20201110 08:33:13.627"></status>
</kw>
<msg timestamp="20201110 08:33:13.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041762681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.292" endtime="20201110 08:33:13.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041762681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:13.637" endtime="20201110 08:33:13.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.656" endtime="20201110 08:33:13.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.285" endtime="20201110 08:33:13.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.280" endtime="20201110 08:33:13.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:13.673" level="INFO">${RESULT} = [{'time': 0.041762681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.401400000000194e-05, 'source_diff': 4.401400000000194e-05}, {'time': 0.041816694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:13.664" endtime="20201110 08:33:13.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:13.704" level="INFO">${ACCURACY} = {'time': [0.041762681, 0.041816694, 0.041872694, 0.041929736, 0.041982694, 0.042040708, 0.042096722, 0.042153708, 0.042205778, 0.042264722, 0.042316764, 0.04237375, 0.042427736, 0.04248575, 0.04253676...</msg>
<status status="PASS" starttime="20201110 08:33:13.675" endtime="20201110 08:33:13.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.716" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:33:13.713" endtime="20201110 08:33:13.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.722" level="INFO">VALUE: [4.401400000000194e-05, 4.373600000000255e-05, 4.395800000000366e-05, 4.3139000000004535e-05, 4.345800000000316e-05, 4.347200000000273e-05, 4.3833000000000066e-05, 4.3332999999999566e-05, 4.377800000000126e-05, 4.3874999999998776e-05, 4.375000000000212e-05, 4.3846999999999636e-05, 4.395800000000366e-05, 4.345800000000316e-05, 4.3082999999999316e-05, 4.3833000000000066e-05, 4.397200000000323e-05, 4.3596999999999386e-05, 4.376400000000169e-05, 4.3639000000005035e-05, 4.333399999999904e-05, 4.352800000000101e-05, 4.3222999999995015e-05, 4.3624999999998526e-05, 4.358399999999929e-05, 4.320799999999597e-05, 4.322200000000248e-05, 4.345800000000316e-05, 4.397199999999629e-05, 4.3582999999999816e-05, 4.370800000000341e-05, 4.395800000000366e-05, 4.344399999999665e-05, 4.3833000000000066e-05, 4.3860999999999206e-05, 4.3332999999999566e-05, 4.38060000000004e-05, 4.3444999999996126e-05, 4.33059999999999e-05, 4.333399999999904e-05, 4.3723000000002454e-05, 4.3222999999995015e-05, 4.358399999999929e-05, 4.358399999999929e-05, 4.356999999999972e-05, 4.333399999999904e-05, 4.3569000000000246e-05, 4.3833000000000066e-05, 4.373600000000255e-05, 4.3888999999998346e-05]</msg>
<status status="PASS" starttime="20201110 08:33:13.719" endtime="20201110 08:33:13.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.706" endtime="20201110 08:33:13.725"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.731" endtime="20201110 08:33:13.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:13.740" endtime="20201110 08:33:13.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.735" endtime="20201110 08:33:13.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.727" endtime="20201110 08:33:13.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.222" endtime="20201110 08:33:13.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.221" endtime="20201110 08:33:13.765"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.788" endtime="20201110 08:33:13.807"></status>
</kw>
<msg timestamp="20201110 08:33:13.808" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.784" endtime="20201110 08:33:13.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:13.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:13.811" endtime="20201110 08:33:13.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.817" endtime="20201110 08:33:13.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.777" endtime="20201110 08:33:13.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.771" endtime="20201110 08:33:13.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:13.841" endtime="20201110 08:33:14.174"></status>
</kw>
<msg timestamp="20201110 08:33:14.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:13.838" endtime="20201110 08:33:14.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041730347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:14.184" endtime="20201110 08:33:14.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.203" endtime="20201110 08:33:14.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.830" endtime="20201110 08:33:14.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.825" endtime="20201110 08:33:14.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.220" level="INFO">${RESULT} = [{'time': 0.041730347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4847000000000636e-05, 'source_diff': 4.4847000000000636e-05}, {'time': 0.041785333, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:14.211" endtime="20201110 08:33:14.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.251" level="INFO">${ACCURACY} = {'time': [0.041730347, 0.041785333, 0.041838361, 0.041893361, 0.041950375, 0.042005375, 0.042065431, 0.042124375, 0.042180375, 0.042234389, 0.042288417, 0.042343389, 0.042398431, 0.042455458, 0.042508...</msg>
<status status="PASS" starttime="20201110 08:33:14.222" endtime="20201110 08:33:14.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.262" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:33:14.260" endtime="20201110 08:33:14.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.268" level="INFO">VALUE: [4.4847000000000636e-05, 4.419400000000434e-05, 4.4610999999999956e-05, 4.4347000000000136e-05, 4.473599999999661e-05, 4.4847000000000636e-05, 4.502800000000251e-05, 4.4583000000000816e-05, 4.420799999999697e-05, 4.422199999999654e-05, 4.4861000000000206e-05, 4.4333000000000566e-05, 4.411199999999893e-05, 4.451400000000244e-05, 4.4208999999996446e-05, 4.4388999999998846e-05, 4.4681000000004745e-05, 4.420799999999697e-05, 4.498599999999686e-05, 4.424999999999568e-05, 4.445800000000416e-05, 4.477700000000279e-05, 4.447199999999679e-05, 4.4833000000001066e-05, 4.420799999999697e-05, 4.452800000000201e-05, 4.4333000000000566e-05, 4.497199999999729e-05, 4.4597000000000386e-05, 4.4083000000000316e-05, 4.4583000000000816e-05, 4.422200000000348e-05, 4.465199999999919e-05, 4.4444999999997126e-05, 4.4459000000003635e-05, 4.4472999999996266e-05, 4.4709000000003885e-05, 4.456899999999431e-05, 4.4888999999999346e-05, 4.4583000000000816e-05, 4.497199999999729e-05, 4.4347000000000136e-05, 4.445800000000416e-05, 4.4110999999999456e-05, 4.420800000000391e-05, 4.420799999999697e-05, 4.4833000000001066e-05, 4.4624999999999526e-05, 4.444399999999765e-05, 4.4861000000000206e-05]</msg>
<status status="PASS" starttime="20201110 08:33:14.265" endtime="20201110 08:33:14.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.253" endtime="20201110 08:33:14.272"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.279" endtime="20201110 08:33:14.281"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.287" endtime="20201110 08:33:14.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.283" endtime="20201110 08:33:14.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.274" endtime="20201110 08:33:14.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.767" endtime="20201110 08:33:14.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:13.766" endtime="20201110 08:33:14.313"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.335" endtime="20201110 08:33:14.355"></status>
</kw>
<msg timestamp="20201110 08:33:14.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.332" endtime="20201110 08:33:14.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.359" endtime="20201110 08:33:14.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.365" endtime="20201110 08:33:14.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.325" endtime="20201110 08:33:14.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.319" endtime="20201110 08:33:14.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.388" endtime="20201110 08:33:14.710"></status>
</kw>
<msg timestamp="20201110 08:33:14.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041605208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041651014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.385" endtime="20201110 08:33:14.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041605208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041651014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.714" endtime="20201110 08:33:14.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.723" endtime="20201110 08:33:14.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.378" endtime="20201110 08:33:14.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.373" endtime="20201110 08:33:14.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:14.731" level="INFO">${RESULT} = [{'time': 0.041651014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.58060000000024e-05, 'source_diff': 4.58060000000024e-05}, {'time': 0.041708014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:14.727" endtime="20201110 08:33:14.731"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:14.744" level="INFO">${ACCURACY} = {'time': [0.041651014, 0.041708014, 0.041763014, 0.041818042, 0.041877042, 0.041934042, 0.041994042, 0.042048056, 0.042102056, 0.042157056, 0.042212069, 0.042265069, 0.042325083, 0.042385111, 0.042440...</msg>
<status status="PASS" starttime="20201110 08:33:14.732" endtime="20201110 08:33:14.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.750" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:33:14.749" endtime="20201110 08:33:14.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.752" level="INFO">VALUE: [4.58060000000024e-05, 4.522200000000448e-05, 4.5694999999998376e-05, 4.598599999999786e-05, 4.5709000000004885e-05, 4.5958999999998196e-05, 4.5709000000004885e-05, 4.558400000000129e-05, 4.559800000000086e-05, 4.507000000000122e-05, 4.572199999999804e-05, 4.5083000000001316e-05, 4.5097000000000886e-05, 4.597200000000523e-05, 4.595800000000566e-05, 4.583299999999513e-05, 4.570799999999847e-05, 4.559699999999445e-05, 4.581899999999556e-05, 4.547199999999779e-05, 4.520799999999797e-05, 4.599999999999743e-05, 4.5833000000002067e-05, 4.5333000000001566e-05, 4.5695000000005315e-05, 4.5473000000004205e-05, 4.533400000000104e-05, 4.583400000000154e-05, 4.5722999999997516e-05, 4.5708999999997946e-05, 4.597200000000523e-05, 4.533299999999463e-05, 4.5361000000000706e-05, 4.597200000000523e-05, 4.5333000000001566e-05, 4.5333000000001566e-05, 4.520799999999797e-05, 4.523600000000405e-05, 4.5833000000002067e-05, 4.573599999999761e-05, 4.5097000000000886e-05, 4.5069000000001747e-05, 4.5444999999998126e-05, 4.5902999999999916e-05, 4.5987000000004274e-05, 4.583400000000154e-05, 4.5194999999997876e-05, 4.5472999999997266e-05, 4.5708999999997946e-05, 4.5597000000001386e-05]</msg>
<status status="PASS" starttime="20201110 08:33:14.751" endtime="20201110 08:33:14.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.745" endtime="20201110 08:33:14.754"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.757" endtime="20201110 08:33:14.759"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:14.762" endtime="20201110 08:33:14.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.760" endtime="20201110 08:33:14.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.755" endtime="20201110 08:33:14.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.315" endtime="20201110 08:33:14.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.314" endtime="20201110 08:33:14.783"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.793" endtime="20201110 08:33:14.811"></status>
</kw>
<msg timestamp="20201110 08:33:14.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.792" endtime="20201110 08:33:14.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:14.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:14.812" endtime="20201110 08:33:14.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.815" endtime="20201110 08:33:14.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.789" endtime="20201110 08:33:14.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.786" endtime="20201110 08:33:14.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:14.826" endtime="20201110 08:33:15.152"></status>
</kw>
<msg timestamp="20201110 08:33:15.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024508583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:14.825" endtime="20201110 08:33:15.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024508583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024554764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.162" endtime="20201110 08:33:15.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.180" endtime="20201110 08:33:15.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.821" endtime="20201110 08:33:15.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.819" endtime="20201110 08:33:15.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:15.198" level="INFO">${RESULT} = [{'time': 0.024554764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6180999999999306e-05, 'source_diff': 4.6180999999999306e-05}, {'time': 0.024614764, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:15.189" endtime="20201110 08:33:15.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:15.228" level="INFO">${ACCURACY} = {'time': [0.024554764, 0.024614764, 0.024671806, 0.024725778, 0.024785778, 0.024846792, 0.024902792, 0.024957792, 0.025018806, 0.025079806, 0.025135819, 0.025196819, 0.025250847, 0.025307833, 0.025364...</msg>
<status status="PASS" starttime="20201110 08:33:15.200" endtime="20201110 08:33:15.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.239" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:33:15.237" endtime="20201110 08:33:15.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.245" level="INFO">VALUE: [4.6180999999999306e-05, 4.6097000000001886e-05, 4.6125000000001026e-05, 4.622200000000201e-05, 4.6959000000002665e-05, 4.658399999999882e-05, 4.658399999999882e-05, 4.6958999999999196e-05, 4.629199999999986e-05, 4.606999999999875e-05, 4.659699999999892e-05, 4.645799999999922e-05, 4.686099999999874e-05, 4.63329999999991e-05, 4.677800000000079e-05, 4.61529999999967e-05, 4.647200000000226e-05, 4.6639000000001096e-05, 4.608299999999885e-05, 4.66939999999999e-05, 4.63329999999991e-05, 4.672200000000251e-05, 4.677799999999732e-05, 4.6194999999998876e-05, 4.6209000000001915e-05, 4.609800000000136e-05, 4.609800000000136e-05, 4.6944999999999626e-05, 4.623600000000158e-05, 4.620799999999897e-05, 4.684699999999917e-05, 4.647200000000226e-05, 4.697199999999929e-05, 4.626400000000072e-05, 4.631899999999953e-05, 4.676399999999775e-05, 4.609699999999842e-05, 4.66939999999999e-05, 4.636099999999824e-05, 4.6611000000001956e-05, 4.6444999999999126e-05, 4.6361000000001706e-05, 4.654100000000064e-05, 4.630599999999943e-05, 4.627800000000029e-05, 4.606999999999875e-05, 4.6208999999998446e-05, 4.605599999999918e-05, 4.6223000000001485e-05, 4.616600000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.242" endtime="20201110 08:33:15.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.230" endtime="20201110 08:33:15.248"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.254" endtime="20201110 08:33:15.257"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.262" endtime="20201110 08:33:15.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.258" endtime="20201110 08:33:15.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.250" endtime="20201110 08:33:15.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.784" endtime="20201110 08:33:15.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:14.783" endtime="20201110 08:33:15.291"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.314" endtime="20201110 08:33:15.334"></status>
</kw>
<msg timestamp="20201110 08:33:15.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.311" endtime="20201110 08:33:15.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.338" endtime="20201110 08:33:15.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.344" endtime="20201110 08:33:15.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.303" endtime="20201110 08:33:15.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.298" endtime="20201110 08:33:15.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.367" endtime="20201110 08:33:15.712"></status>
</kw>
<msg timestamp="20201110 08:33:15.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041920083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041967472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.364" endtime="20201110 08:33:15.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041920083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041967472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.722" endtime="20201110 08:33:15.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.740" endtime="20201110 08:33:15.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.357" endtime="20201110 08:33:15.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.352" endtime="20201110 08:33:15.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:15.758" level="INFO">${RESULT} = [{'time': 0.041967472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7389000000001846e-05, 'source_diff': 4.7389000000001846e-05}, {'time': 0.042028556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:15.749" endtime="20201110 08:33:15.758"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:15.789" level="INFO">${ACCURACY} = {'time': [0.041967472, 0.042028556, 0.042085472, 0.042140486, 0.0421995, 0.0422605, 0.0423165, 0.042377528, 0.042440583, 0.042499514, 0.042559528, 0.042617528, 0.042677611, 0.042738542, 0.042795556, 0...</msg>
<status status="PASS" starttime="20201110 08:33:15.760" endtime="20201110 08:33:15.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.800" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:33:15.797" endtime="20201110 08:33:15.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.805" level="INFO">VALUE: [4.7389000000001846e-05, 4.7236999999998586e-05, 4.75139999999985e-05, 4.752799999999807e-05, 4.777799999999832e-05, 4.7153000000001166e-05, 4.7639000000002096e-05, 4.75139999999985e-05, 4.808299999999738e-05, 4.7889000000002346e-05, 4.7639000000002096e-05, 4.7639000000002096e-05, 4.781899999999756e-05, 4.788899999999541e-05, 4.7153000000001166e-05, 4.724999999999868e-05, 4.765200000000219e-05, 4.7931000000001056e-05, 4.754099999999817e-05, 4.788899999999541e-05, 4.7653000000001666e-05, 4.7375000000002276e-05, 4.802800000000551e-05, 4.7417000000000986e-05, 4.7403000000001416e-05, 4.780599999999746e-05, 4.8013999999999e-05, 4.7139000000001596e-05, 4.712499999999509e-05, 4.777800000000526e-05, 4.777800000000526e-05, 4.727800000000476e-05, 4.716600000000126e-05, 4.7389000000001846e-05, 4.7639000000002096e-05, 4.729099999999792e-05, 4.7639000000002096e-05, 4.777699999999885e-05, 4.726400000000519e-05, 4.7695000000000376e-05, 4.776399999999875e-05, 4.776399999999875e-05, 4.7125000000002026e-05, 4.7153000000001166e-05, 4.805600000000465e-05, 4.726399999999825e-05, 4.7653000000001666e-05, 4.802800000000551e-05, 4.751400000000544e-05, 4.7681000000000806e-05]</msg>
<status status="PASS" starttime="20201110 08:33:15.802" endtime="20201110 08:33:15.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.790" endtime="20201110 08:33:15.808"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.815" endtime="20201110 08:33:15.817"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:15.823" endtime="20201110 08:33:15.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.819" endtime="20201110 08:33:15.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.810" endtime="20201110 08:33:15.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.293" endtime="20201110 08:33:15.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.292" endtime="20201110 08:33:15.849"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.874" endtime="20201110 08:33:15.895"></status>
</kw>
<msg timestamp="20201110 08:33:15.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.870" endtime="20201110 08:33:15.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:15.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:15.899" endtime="20201110 08:33:15.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.906" endtime="20201110 08:33:15.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.862" endtime="20201110 08:33:15.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.855" endtime="20201110 08:33:15.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:15.930" endtime="20201110 08:33:16.284"></status>
</kw>
<msg timestamp="20201110 08:33:16.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044924903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044973556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:15.926" endtime="20201110 08:33:16.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044924903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044973556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.294" endtime="20201110 08:33:16.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.313" endtime="20201110 08:33:16.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.919" endtime="20201110 08:33:16.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.914" endtime="20201110 08:33:16.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.331" level="INFO">${RESULT} = [{'time': 0.044973556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.865299999999573e-05, 'source_diff': 4.865299999999573e-05}, {'time': 0.045029528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:16.322" endtime="20201110 08:33:16.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.362" level="INFO">${ACCURACY} = {'time': [0.044973556, 0.045029528, 0.045087528, 0.045144542, 0.045204583, 0.045263583, 0.045323569, 0.045386583, 0.045443569, 0.045505625, 0.045562583, 0.045620611, 0.045678597, 0.045735653, 0.045791...</msg>
<status status="PASS" starttime="20201110 08:33:16.333" endtime="20201110 08:33:16.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.374" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.371" endtime="20201110 08:33:16.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.379" level="INFO">VALUE: [4.865299999999573e-05, 4.805599999999771e-05, 4.882000000000497e-05, 4.808400000000379e-05, 4.823600000000011e-05, 4.848600000000036e-05, 4.822200000000054e-05, 4.822200000000054e-05, 4.895800000000172e-05, 4.8125000000003026e-05, 4.8207999999994033e-05, 4.809699999999695e-05, 4.8403000000002416e-05, 4.8639000000003096e-05, 4.834700000000414e-05, 4.808300000000432e-05, 4.881899999999856e-05, 4.8207999999994033e-05, 4.879199999999889e-05, 4.823600000000011e-05, 4.873600000000061e-05, 4.809800000000336e-05, 4.886199999999674e-05, 4.858400000000429e-05, 4.8417000000001986e-05, 4.808399999999685e-05, 4.888899999999641e-05, 4.826399999999925e-05, 4.883300000000507e-05, 4.820800000000097e-05, 4.833299999999763e-05, 4.806899999999781e-05, 4.822200000000054e-05, 4.822200000000054e-05, 4.884700000000464e-05, 4.808300000000432e-05, 4.845800000000122e-05, 4.854199999999864e-05, 4.833300000000457e-05, 4.88339999999976e-05, 4.808300000000432e-05, 4.8389000000002846e-05, 4.8639000000003096e-05, 4.806999999999728e-05, 4.8959000000001196e-05, 4.88339999999976e-05, 4.845800000000122e-05, 4.881899999999856e-05, 4.85139999999995e-05, 4.81940000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.376" endtime="20201110 08:33:16.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.364" endtime="20201110 08:33:16.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.389" endtime="20201110 08:33:16.392"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.397" endtime="20201110 08:33:16.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.393" endtime="20201110 08:33:16.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.384" endtime="20201110 08:33:16.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.851" endtime="20201110 08:33:16.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:15.850" endtime="20201110 08:33:16.424"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.447" endtime="20201110 08:33:16.467"></status>
</kw>
<msg timestamp="20201110 08:33:16.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.443" endtime="20201110 08:33:16.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:16.470" endtime="20201110 08:33:16.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.477" endtime="20201110 08:33:16.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.436" endtime="20201110 08:33:16.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.430" endtime="20201110 08:33:16.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.502" endtime="20201110 08:33:16.853"></status>
</kw>
<msg timestamp="20201110 08:33:16.861" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042768792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.499" endtime="20201110 08:33:16.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042719139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042768792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:16.863" endtime="20201110 08:33:16.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.882" endtime="20201110 08:33:16.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.492" endtime="20201110 08:33:16.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.487" endtime="20201110 08:33:16.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:16.900" level="INFO">${RESULT} = [{'time': 0.042768792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.965299999999673e-05, 'source_diff': 4.965299999999673e-05}, {'time': 0.042827806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:16.891" endtime="20201110 08:33:16.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:16.931" level="INFO">${ACCURACY} = {'time': [0.042768792, 0.042827806, 0.042887819, 0.042945806, 0.043006819, 0.043066819, 0.043129819, 0.043190833, 0.043250903, 0.043312847, 0.043373847, 0.043437903, 0.043494861, 0.043558875, 0.043616...</msg>
<status status="PASS" starttime="20201110 08:33:16.902" endtime="20201110 08:33:16.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.943" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:33:16.940" endtime="20201110 08:33:16.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:16.948" level="INFO">VALUE: [4.965299999999673e-05, 4.984800000000511e-05, 4.909699999999795e-05, 4.979199999999989e-05, 4.922200000000154e-05, 4.920800000000197e-05, 4.983299999999913e-05, 4.983299999999913e-05, 4.973600000000161e-05, 4.959699999999845e-05, 4.981899999999956e-05, 4.95140000000005e-05, 4.970800000000247e-05, 4.963899999999716e-05, 4.91940000000024e-05, 4.972200000000204e-05, 4.959699999999845e-05, 4.970899999999501e-05, 4.970899999999501e-05, 4.9473000000001266e-05, 4.950000000000093e-05, 4.98339999999986e-05, 4.958299999999888e-05, 4.9971999999995353e-05, 4.95270000000006e-05, 4.959699999999845e-05, 4.920800000000197e-05, 4.9151999999996754e-05, 4.933299999999863e-05, 4.931899999999906e-05, 4.995800000000272e-05, 4.920800000000197e-05, 4.958299999999888e-05, 4.983299999999913e-05, 4.93469999999982e-05, 4.9695000000002376e-05, 4.956999999999878e-05, 4.920899999999451e-05, 4.984799999999817e-05, 4.958399999999835e-05, 4.934800000000461e-05, 4.994499999999569e-05, 4.948600000000136e-05, 4.9443999999995714e-05, 4.9707999999995534e-05, 4.940200000000394e-05, 4.908299999999838e-05, 4.9457999999995284e-05, 4.9943999999996214e-05, 4.958299999999888e-05]</msg>
<status status="PASS" starttime="20201110 08:33:16.945" endtime="20201110 08:33:16.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.933" endtime="20201110 08:33:16.958"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:16.965" endtime="20201110 08:33:16.968"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:16.974" endtime="20201110 08:33:16.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.969" endtime="20201110 08:33:16.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.960" endtime="20201110 08:33:17.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.426" endtime="20201110 08:33:17.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:16.425" endtime="20201110 08:33:17.001"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.026" endtime="20201110 08:33:17.048"></status>
</kw>
<msg timestamp="20201110 08:33:17.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.023" endtime="20201110 08:33:17.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.051" endtime="20201110 08:33:17.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.058" endtime="20201110 08:33:17.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.015" endtime="20201110 08:33:17.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.008" endtime="20201110 08:33:17.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.086" endtime="20201110 08:33:17.444"></status>
</kw>
<msg timestamp="20201110 08:33:17.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046133569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046184472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.082" endtime="20201110 08:33:17.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046133569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046184472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.454" endtime="20201110 08:33:17.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.473" endtime="20201110 08:33:17.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.072" endtime="20201110 08:33:17.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.067" endtime="20201110 08:33:17.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:17.491" level="INFO">${RESULT} = [{'time': 0.046184472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.090299999999798e-05, 'source_diff': 5.090299999999798e-05}, {'time': 0.046243472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:17.482" endtime="20201110 08:33:17.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:17.522" level="INFO">${ACCURACY} = {'time': [0.046184472, 0.046243472, 0.046308486, 0.046367528, 0.0464285, 0.046492514, 0.046551514, 0.046614569, 0.046675528, 0.046740542, 0.046799542, 0.046865542, 0.046928556, 0.046992556, 0.04705862...</msg>
<status status="PASS" starttime="20201110 08:33:17.493" endtime="20201110 08:33:17.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.533" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:33:17.531" endtime="20201110 08:33:17.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.539" level="INFO">VALUE: [5.090299999999798e-05, 5.055500000000074e-05, 5.009700000000589e-05, 5.099999999999549e-05, 5.059699999999945e-05, 5.0471999999995854e-05, 5.03469999999992e-05, 5.097200000000329e-05, 5.08469999999997e-05, 5.009800000000536e-05, 5.058399999999935e-05, 5.0959000000003196e-05, 5.0181000000003306e-05, 5.082000000000003e-05, 5.0971999999996354e-05, 5.0693999999996964e-05, 5.0235999999995173e-05, 5.008299999999938e-05, 5.033299999999963e-05, 5.036100000000571e-05, 5.0971999999996354e-05, 5.033299999999963e-05, 5.073600000000261e-05, 5.008299999999938e-05, 5.08469999999997e-05, 5.0959000000003196e-05, 5.020899999999551e-05, 5.045899999999576e-05, 5.08339999999996e-05, 5.08339999999996e-05, 5.0709000000002946e-05, 5.0485999999995423e-05, 5.009699999999895e-05, 5.095800000000372e-05, 5.01940000000034e-05, 5.0707999999996534e-05, 5.072200000000304e-05, 5.022200000000254e-05, 5.0957999999996784e-05, 5.0457999999996284e-05, 5.061099999999902e-05, 5.0667000000004236e-05, 5.059699999999945e-05, 5.0971999999996354e-05, 5.076300000000228e-05, 5.059699999999945e-05, 5.084799999999917e-05, 5.047299999999533e-05, 5.030599999999996e-05, 5.0223000000002016e-05]</msg>
<status status="PASS" starttime="20201110 08:33:17.536" endtime="20201110 08:33:17.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.524" endtime="20201110 08:33:17.542"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.549" endtime="20201110 08:33:17.551"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:17.557" endtime="20201110 08:33:17.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.553" endtime="20201110 08:33:17.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.544" endtime="20201110 08:33:17.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.003" endtime="20201110 08:33:17.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.002" endtime="20201110 08:33:17.583"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.606" endtime="20201110 08:33:17.627"></status>
</kw>
<msg timestamp="20201110 08:33:17.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.603" endtime="20201110 08:33:17.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:17.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:17.631" endtime="20201110 08:33:17.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.637" endtime="20201110 08:33:17.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.596" endtime="20201110 08:33:17.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.590" endtime="20201110 08:33:17.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:17.661" endtime="20201110 08:33:18.007"></status>
</kw>
<msg timestamp="20201110 08:33:18.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042760056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042811931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:17.657" endtime="20201110 08:33:18.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042760056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042811931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.017" endtime="20201110 08:33:18.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.036" endtime="20201110 08:33:18.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.650" endtime="20201110 08:33:18.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.645" endtime="20201110 08:33:18.043"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.054" level="INFO">${RESULT} = [{'time': 0.042811931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.187499999999984e-05, 'source_diff': 5.187499999999984e-05}, {'time': 0.042872931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:18.045" endtime="20201110 08:33:18.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.085" level="INFO">${ACCURACY} = {'time': [0.042811931, 0.042872931, 0.042935958, 0.042997958, 0.043059958, 0.043119958, 0.043184972, 0.043247028, 0.043307986, 0.043371986, 0.043435, 0.043495083, 0.043555014, 0.043621014, 0.043687042...</msg>
<status status="PASS" starttime="20201110 08:33:18.056" endtime="20201110 08:33:18.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.096" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.094" endtime="20201110 08:33:18.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.102" level="INFO">VALUE: [5.187499999999984e-05, 5.138900000000585e-05, 5.183300000000113e-05, 5.127700000000235e-05, 5.11390000000056e-05, 5.1721999999997104e-05, 5.113899999999866e-05, 5.157000000000078e-05, 5.1999999999996493e-05, 5.162499999999959e-05, 5.165299999999873e-05, 5.1221999999996604e-05, 5.202800000000257e-05, 5.188899999999941e-05, 5.129200000000139e-05, 5.1723000000003516e-05, 5.190299999999898e-05, 5.126400000000225e-05, 5.176399999999581e-05, 5.120899999999651e-05, 5.183300000000113e-05, 5.1151999999998754e-05, 5.1901999999999504e-05, 5.126400000000225e-05, 5.18470000000007e-05, 5.15140000000025e-05, 5.202800000000257e-05, 5.127800000000182e-05, 5.165299999999873e-05, 5.144499999999719e-05, 5.11390000000056e-05, 5.1485999999996424e-05, 5.204200000000214e-05, 5.165299999999873e-05, 5.176400000000275e-05, 5.176400000000275e-05, 5.1165999999998324e-05, 5.15140000000025e-05, 5.154100000000217e-05, 5.126300000000278e-05, 5.138899999999891e-05, 5.151399999999556e-05, 5.190299999999898e-05, 5.11940000000044e-05, 5.113899999999866e-05, 5.112499999999909e-05, 5.165299999999873e-05, 5.112499999999909e-05, 5.15140000000025e-05, 5.188899999999941e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.099" endtime="20201110 08:33:18.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.087" endtime="20201110 08:33:18.105"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.111" endtime="20201110 08:33:18.114"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.120" endtime="20201110 08:33:18.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.115" endtime="20201110 08:33:18.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.107" endtime="20201110 08:33:18.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.585" endtime="20201110 08:33:18.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:17.584" endtime="20201110 08:33:18.146"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.169" endtime="20201110 08:33:18.189"></status>
</kw>
<msg timestamp="20201110 08:33:18.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.165" endtime="20201110 08:33:18.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.192" endtime="20201110 08:33:18.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.199" endtime="20201110 08:33:18.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.158" endtime="20201110 08:33:18.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.152" endtime="20201110 08:33:18.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.222" endtime="20201110 08:33:18.542"></status>
</kw>
<msg timestamp="20201110 08:33:18.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042173889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042226542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.219" endtime="20201110 08:33:18.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042173889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042226542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.552" endtime="20201110 08:33:18.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.571" endtime="20201110 08:33:18.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.212" endtime="20201110 08:33:18.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.207" endtime="20201110 08:33:18.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:18.589" level="INFO">${RESULT} = [{'time': 0.042226542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.265299999999973e-05, 'source_diff': 5.265299999999973e-05}, {'time': 0.042290528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:18.579" endtime="20201110 08:33:18.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:18.620" level="INFO">${ACCURACY} = {'time': [0.042226542, 0.042290528, 0.042350542, 0.042412556, 0.042474569, 0.042540556, 0.042600569, 0.042667639, 0.042728597, 0.042793611, 0.042859667, 0.042920611, 0.042980611, 0.043044625, 0.043108...</msg>
<status status="PASS" starttime="20201110 08:33:18.591" endtime="20201110 08:33:18.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.631" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:33:18.629" endtime="20201110 08:33:18.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.636" level="INFO">VALUE: [5.265299999999973e-05, 5.270899999999801e-05, 5.2763999999996813e-05, 5.263900000000016e-05, 5.2887999999993995e-05, 5.2237000000003586e-05, 5.2138000000000184e-05, 5.2207999999998034e-05, 5.254100000000317e-05, 5.279200000000289e-05, 5.222299999999708e-05, 5.227799999999588e-05, 5.226400000000325e-05, 5.290299999999998e-05, 5.238899999999991e-05, 5.254200000000264e-05, 5.302800000000357e-05, 5.240299999999948e-05, 5.240299999999948e-05, 5.215299999999923e-05, 5.277800000000332e-05, 5.240299999999948e-05, 5.265299999999973e-05, 5.263900000000016e-05, 5.2652000000000254e-05, 5.2388000000000434e-05, 5.2665999999999824e-05, 5.213899999999966e-05, 5.2195000000004876e-05, 5.263900000000016e-05, 5.229200000000239e-05, 5.2263999999996313e-05, 5.226400000000325e-05, 5.300000000000443e-05, 5.262500000000059e-05, 5.277800000000332e-05, 5.229199999999545e-05, 5.300000000000443e-05, 5.279099999999648e-05, 5.227700000000335e-05, 5.265299999999973e-05, 5.306899999999587e-05, 5.28470000000017e-05, 5.2888000000000934e-05, 5.2263999999996313e-05, 5.263900000000016e-05, 5.302799999999663e-05, 5.238899999999991e-05, 5.218099999999837e-05, 5.287500000000084e-05]</msg>
<status status="PASS" starttime="20201110 08:33:18.633" endtime="20201110 08:33:18.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.622" endtime="20201110 08:33:18.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.646" endtime="20201110 08:33:18.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:18.655" endtime="20201110 08:33:18.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.650" endtime="20201110 08:33:18.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.642" endtime="20201110 08:33:18.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.148" endtime="20201110 08:33:18.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.147" endtime="20201110 08:33:18.680"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.704" endtime="20201110 08:33:18.724"></status>
</kw>
<msg timestamp="20201110 08:33:18.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.700" endtime="20201110 08:33:18.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:18.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:18.727" endtime="20201110 08:33:18.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.734" endtime="20201110 08:33:18.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.693" endtime="20201110 08:33:18.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.687" endtime="20201110 08:33:18.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:18.757" endtime="20201110 08:33:19.089"></status>
</kw>
<msg timestamp="20201110 08:33:19.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042671361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:18.753" endtime="20201110 08:33:19.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042671361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042725278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.099" endtime="20201110 08:33:19.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.117" endtime="20201110 08:33:19.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.746" endtime="20201110 08:33:19.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.742" endtime="20201110 08:33:19.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:19.136" level="INFO">${RESULT} = [{'time': 0.042725278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.391700000000055e-05, 'source_diff': 5.391700000000055e-05}, {'time': 0.042792319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:19.127" endtime="20201110 08:33:19.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:19.167" level="INFO">${ACCURACY} = {'time': [0.042725278, 0.042792319, 0.042859319, 0.042924333, 0.042987319, 0.043054333, 0.043120333, 0.043182361, 0.043246333, 0.043309347, 0.043375361, 0.043442375, 0.043509361, 0.043571375, 0.043636...</msg>
<status status="PASS" starttime="20201110 08:33:19.138" endtime="20201110 08:33:19.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.178" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:33:19.175" endtime="20201110 08:33:19.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.183" level="INFO">VALUE: [5.391700000000055e-05, 5.3471999999998854e-05, 5.3457999999999284e-05, 5.3693999999999964e-05, 5.355500000000374e-05, 5.3471999999998854e-05, 5.306899999999587e-05, 5.373600000000561e-05, 5.331899999999612e-05, 5.384699999999576e-05, 5.306900000000281e-05, 5.3221999999998604e-05, 5.358300000000288e-05, 5.3957999999999784e-05, 5.333299999999569e-05, 5.308299999999544e-05, 5.319499999999894e-05, 5.33749999999944e-05, 5.334800000000167e-05, 5.308400000000185e-05, 5.38340000000026e-05, 5.358400000000235e-05, 5.313900000000066e-05, 5.331899999999612e-05, 5.326400000000425e-05, 5.383300000000313e-05, 5.362500000000159e-05, 5.380499999999705e-05, 5.3457999999999284e-05, 5.3263999999997313e-05, 5.3957999999999784e-05, 5.308300000000238e-05, 5.334699999999526e-05, 5.3957999999999784e-05, 5.370899999999901e-05, 5.379200000000389e-05, 5.3999999999998494e-05, 5.334800000000167e-05, 5.354100000000417e-05, 5.343099999999962e-05, 5.3971999999999354e-05, 5.383299999999619e-05, 5.383300000000313e-05, 5.38470000000027e-05, 5.3985999999998924e-05, 5.359700000000245e-05, 5.3707999999999534e-05, 5.3707999999999534e-05, 5.3985999999998924e-05, 5.354099999999723e-05]</msg>
<status status="PASS" starttime="20201110 08:33:19.180" endtime="20201110 08:33:19.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.169" endtime="20201110 08:33:19.186"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.193" endtime="20201110 08:33:19.195"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.201" endtime="20201110 08:33:19.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.197" endtime="20201110 08:33:19.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.188" endtime="20201110 08:33:19.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.683" endtime="20201110 08:33:19.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:18.681" endtime="20201110 08:33:19.227"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.249" endtime="20201110 08:33:19.270"></status>
</kw>
<msg timestamp="20201110 08:33:19.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.246" endtime="20201110 08:33:19.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.273" endtime="20201110 08:33:19.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.279" endtime="20201110 08:33:19.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.239" endtime="20201110 08:33:19.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.233" endtime="20201110 08:33:19.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.303" endtime="20201110 08:33:19.634"></status>
</kw>
<msg timestamp="20201110 08:33:19.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041573681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041628486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.299" endtime="20201110 08:33:19.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041573681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041628486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.644" endtime="20201110 08:33:19.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.662" endtime="20201110 08:33:19.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.292" endtime="20201110 08:33:19.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.287" endtime="20201110 08:33:19.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:19.681" level="INFO">${RESULT} = [{'time': 0.041628486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.480499999999805e-05, 'source_diff': 5.480499999999805e-05}, {'time': 0.041695458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:19.672" endtime="20201110 08:33:19.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:19.712" level="INFO">${ACCURACY} = {'time': [0.041628486, 0.041695458, 0.041757472, 0.041822472, 0.041889486, 0.041955486, 0.0420215, 0.0420865, 0.042149569, 0.042215528, 0.042277542, 0.042341597, 0.042410542, 0.042476556, 0.042541597,...</msg>
<status status="PASS" starttime="20201110 08:33:19.683" endtime="20201110 08:33:19.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.723" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:33:19.720" endtime="20201110 08:33:19.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.728" level="INFO">VALUE: [5.480499999999805e-05, 5.483299999999719e-05, 5.4458000000000284e-05, 5.406899999999687e-05, 5.458299999999694e-05, 5.483299999999719e-05, 5.4208000000000034e-05, 5.408299999999644e-05, 5.4249999999998744e-05, 5.43470000000032e-05, 5.422299999999908e-05, 5.5013999999999064e-05, 5.418100000000037e-05, 5.495900000000026e-05, 5.4985999999999924e-05, 5.4958000000000784e-05, 5.4958000000000784e-05, 5.4485999999999424e-05, 5.4679999999994455e-05, 5.422200000000654e-05, 5.4943999999994275e-05, 5.409700000000295e-05, 5.48470000000037e-05, 5.48470000000037e-05, 5.458300000000388e-05, 5.419499999999994e-05, 5.457000000000378e-05, 5.422299999999908e-05, 5.445899999999976e-05, 5.408400000000285e-05, 5.445899999999976e-05, 5.494500000000069e-05, 5.483299999999719e-05, 5.459700000000345e-05, 5.477700000000585e-05, 5.481899999999762e-05, 5.4985999999999924e-05, 5.4722000000000104e-05, 5.484699999999676e-05, 5.469500000000044e-05, 5.4249999999998744e-05, 5.481900000000456e-05, 5.4471999999999854e-05, 5.458300000000388e-05, 5.4402000000002004e-05, 5.459800000000292e-05, 5.486200000000274e-05, 5.494500000000069e-05, 5.4513999999998564e-05, 5.468100000000087e-05]</msg>
<status status="PASS" starttime="20201110 08:33:19.725" endtime="20201110 08:33:19.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.714" endtime="20201110 08:33:19.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.738" endtime="20201110 08:33:19.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:19.746" endtime="20201110 08:33:19.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.741" endtime="20201110 08:33:19.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.733" endtime="20201110 08:33:19.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.229" endtime="20201110 08:33:19.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.228" endtime="20201110 08:33:19.772"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.794" endtime="20201110 08:33:19.815"></status>
</kw>
<msg timestamp="20201110 08:33:19.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.791" endtime="20201110 08:33:19.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:19.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:19.818" endtime="20201110 08:33:19.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.824" endtime="20201110 08:33:19.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.784" endtime="20201110 08:33:19.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.778" endtime="20201110 08:33:19.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:19.848" endtime="20201110 08:33:20.199"></status>
</kw>
<msg timestamp="20201110 08:33:20.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041774236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:19.844" endtime="20201110 08:33:20.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041718222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041774236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.210" endtime="20201110 08:33:20.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.230" endtime="20201110 08:33:20.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.837" endtime="20201110 08:33:20.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.832" endtime="20201110 08:33:20.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.253" level="INFO">${RESULT} = [{'time': 0.041774236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6014000000000064e-05, 'source_diff': 5.6014000000000064e-05}, {'time': 0.041844278, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:20.243" endtime="20201110 08:33:20.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.286" level="INFO">${ACCURACY} = {'time': [0.041774236, 0.041844278, 0.041911264, 0.041975264, 0.042041264, 0.042107292, 0.042172292, 0.042236306, 0.042305319, 0.042368306, 0.042432306, 0.042502333, 0.042570333, 0.042639347, 0.042706...</msg>
<status status="PASS" starttime="20201110 08:33:20.255" endtime="20201110 08:33:20.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.298" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.295" endtime="20201110 08:33:20.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.304" level="INFO">VALUE: [5.6014000000000064e-05, 5.569500000000144e-05, 5.544499999999425e-05, 5.583299999999819e-05, 5.518100000000137e-05, 5.545900000000076e-05, 5.508399999999691e-05, 5.572300000000058e-05, 5.584699999999776e-05, 5.508400000000385e-05, 5.519500000000094e-05, 5.5472000000000854e-05, 5.559700000000445e-05, 5.508300000000438e-05, 5.5708000000001534e-05, 5.5971999999994415e-05, 5.5722000000001104e-05, 5.5208000000001034e-05, 5.538899999999597e-05, 5.5486000000000424e-05, 5.5472000000000854e-05, 5.565299999999579e-05, 5.5972000000001354e-05, 5.594500000000169e-05, 5.520900000000051e-05, 5.594500000000169e-05, 5.595900000000126e-05, 5.531999999999759e-05, 5.5194000000001464e-05, 5.515299999999529e-05, 5.561099999999708e-05, 5.533299999999769e-05, 5.5208000000001034e-05, 5.5986000000000924e-05, 5.533299999999769e-05, 5.558299999999794e-05, 5.534699999999726e-05, 5.511100000000352e-05, 5.5958000000001784e-05, 5.559699999999751e-05, 5.586100000000427e-05, 5.53619999999963e-05, 5.538900000000291e-05, 5.561099999999708e-05, 5.569500000000144e-05, 5.558300000000488e-05, 5.5458000000001284e-05, 5.531899999999812e-05, 5.5957999999994845e-05, 5.531899999999812e-05]</msg>
<status status="PASS" starttime="20201110 08:33:20.300" endtime="20201110 08:33:20.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.288" endtime="20201110 08:33:20.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.315" endtime="20201110 08:33:20.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.323" endtime="20201110 08:33:20.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.319" endtime="20201110 08:33:20.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.309" endtime="20201110 08:33:20.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.774" endtime="20201110 08:33:20.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:19.772" endtime="20201110 08:33:20.350"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.375" endtime="20201110 08:33:20.396"></status>
</kw>
<msg timestamp="20201110 08:33:20.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.371" endtime="20201110 08:33:20.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.399" endtime="20201110 08:33:20.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.406" endtime="20201110 08:33:20.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.364" endtime="20201110 08:33:20.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.357" endtime="20201110 08:33:20.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.433" endtime="20201110 08:33:20.802"></status>
</kw>
<msg timestamp="20201110 08:33:20.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044899736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044956639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.429" endtime="20201110 08:33:20.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044899736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044956639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:20.813" endtime="20201110 08:33:20.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.833" endtime="20201110 08:33:20.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.421" endtime="20201110 08:33:20.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.416" endtime="20201110 08:33:20.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:20.853" level="INFO">${RESULT} = [{'time': 0.044956639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.690299999999704e-05, 'source_diff': 5.690299999999704e-05}, {'time': 0.045027681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:20.843" endtime="20201110 08:33:20.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:20.886" level="INFO">${ACCURACY} = {'time': [0.044956639, 0.045027681, 0.045095681, 0.045164681, 0.045234667, 0.045300681, 0.045371681, 0.045437708, 0.045507694, 0.045575708, 0.045643792, 0.045708736, 0.045775722, 0.045840736, 0.045911...</msg>
<status status="PASS" starttime="20201110 08:33:20.856" endtime="20201110 08:33:20.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.898" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:33:20.895" endtime="20201110 08:33:20.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:20.904" level="INFO">VALUE: [5.690299999999704e-05, 5.645900000000176e-05, 5.619500000000194e-05, 5.6819999999999093e-05, 5.606999999999834e-05, 5.6041999999999204e-05, 5.658399999999841e-05, 5.6486000000001424e-05, 5.6458000000002284e-05, 5.659699999999851e-05, 5.665300000000373e-05, 5.684699999999876e-05, 5.6957999999995845e-05, 5.6680000000003394e-05, 5.633299999999869e-05, 5.633300000000563e-05, 5.611100000000452e-05, 5.620900000000151e-05, 5.6387999999997496e-05, 5.658399999999841e-05, 5.622299999999414e-05, 5.669500000000244e-05, 5.690299999999704e-05, 5.659700000000545e-05, 5.6736000000001674e-05, 5.6958000000002784e-05, 5.63470000000052e-05, 5.6430000000003144e-05, 5.659699999999851e-05, 5.6972000000002354e-05, 5.6457999999995345e-05, 5.609700000000495e-05, 5.636099999999783e-05, 5.704100000000073e-05, 5.6972000000002354e-05, 5.6485999999994485e-05, 5.609799999999748e-05, 5.634800000000467e-05, 5.615300000000323e-05, 5.6194999999995e-05, 5.659699999999851e-05, 5.6472000000001854e-05, 5.6444000000002714e-05, 5.6458000000002284e-05, 5.6221999999994665e-05, 5.68470000000057e-05, 5.6958000000002784e-05, 5.683299999999919e-05, 5.656900000000631e-05, 5.6208000000002034e-05]</msg>
<status status="PASS" starttime="20201110 08:33:20.901" endtime="20201110 08:33:20.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.888" endtime="20201110 08:33:20.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.914" endtime="20201110 08:33:20.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:20.923" endtime="20201110 08:33:20.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.918" endtime="20201110 08:33:20.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.909" endtime="20201110 08:33:20.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.353" endtime="20201110 08:33:20.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.351" endtime="20201110 08:33:20.950"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:20.974" endtime="20201110 08:33:20.995"></status>
</kw>
<msg timestamp="20201110 08:33:20.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.970" endtime="20201110 08:33:20.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:20.999" endtime="20201110 08:33:21.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.006" endtime="20201110 08:33:21.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.963" endtime="20201110 08:33:21.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.957" endtime="20201110 08:33:21.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.032" endtime="20201110 08:33:21.404"></status>
</kw>
<msg timestamp="20201110 08:33:21.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044827125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044885194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.029" endtime="20201110 08:33:21.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044827125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044885194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.415" endtime="20201110 08:33:21.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.435" endtime="20201110 08:33:21.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.021" endtime="20201110 08:33:21.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.016" endtime="20201110 08:33:21.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:21.456" level="INFO">${RESULT} = [{'time': 0.044885194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.806900000000087e-05, 'source_diff': 5.806900000000087e-05}, {'time': 0.044957181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:21.446" endtime="20201110 08:33:21.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:21.488" level="INFO">${ACCURACY} = {'time': [0.044885194, 0.044957181, 0.045025194, 0.045097208, 0.045162208, 0.045232222, 0.045300236, 0.04536725, 0.04543925, 0.04551225, 0.04558125, 0.045651278, 0.045717347, 0.045790278, 0.045857278,...</msg>
<status status="PASS" starttime="20201110 08:33:21.458" endtime="20201110 08:33:21.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.500" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:33:21.498" endtime="20201110 08:33:21.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.506" level="INFO">VALUE: [5.806900000000087e-05, 5.720899999999557e-05, 5.7207999999996095e-05, 5.7722000000003104e-05, 5.706899999999987e-05, 5.7222000000002604e-05, 5.7472000000002854e-05, 5.761099999999908e-05, 5.7972000000003354e-05, 5.7957999999996845e-05, 5.7791999999994015e-05, 5.761100000000602e-05, 5.7165999999997386e-05, 5.7971999999996415e-05, 5.720900000000251e-05, 5.738899999999797e-05, 5.7485999999995485e-05, 5.720900000000251e-05, 5.7957999999996845e-05, 5.7249999999994805e-05, 5.70550000000003e-05, 5.7958000000003784e-05, 5.7486000000002424e-05, 5.783300000000019e-05, 5.7986000000002924e-05, 5.7971999999996415e-05, 5.7722000000003104e-05, 5.78470000000067e-05, 5.7707999999996595e-05, 5.751300000000209e-05, 5.7792000000000954e-05, 5.759799999999898e-05, 5.7569999999999844e-05, 5.770899999999607e-05, 5.795899999999632e-05, 5.762499999999865e-05, 5.709700000000595e-05, 5.7458000000003284e-05, 5.758299999999994e-05, 5.7736000000002674e-05, 5.7971999999996415e-05, 5.7485999999995485e-05, 5.709700000000595e-05, 5.7693999999997025e-05, 5.733299999999969e-05, 5.708299999999944e-05, 5.759700000000645e-05, 5.7083999999998913e-05, 5.761199999999855e-05, 5.7833999999999663e-05]</msg>
<status status="PASS" starttime="20201110 08:33:21.503" endtime="20201110 08:33:21.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.490" endtime="20201110 08:33:21.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.517" endtime="20201110 08:33:21.519"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:21.525" endtime="20201110 08:33:21.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.521" endtime="20201110 08:33:21.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.512" endtime="20201110 08:33:21.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.952" endtime="20201110 08:33:21.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:20.951" endtime="20201110 08:33:21.552"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.577" endtime="20201110 08:33:21.598"></status>
</kw>
<msg timestamp="20201110 08:33:21.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.573" endtime="20201110 08:33:21.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:21.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:21.602" endtime="20201110 08:33:21.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.610" endtime="20201110 08:33:21.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.565" endtime="20201110 08:33:21.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.559" endtime="20201110 08:33:21.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:21.635" endtime="20201110 08:33:22.007"></status>
</kw>
<msg timestamp="20201110 08:33:22.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044606556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044665597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:21.631" endtime="20201110 08:33:22.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044606556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044665597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.019" endtime="20201110 08:33:22.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.038" endtime="20201110 08:33:22.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.624" endtime="20201110 08:33:22.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.619" endtime="20201110 08:33:22.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.059" level="INFO">${RESULT} = [{'time': 0.044665597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.904100000000273e-05, 'source_diff': 5.904100000000273e-05}, {'time': 0.044732625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:22.049" endtime="20201110 08:33:22.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.092" level="INFO">${ACCURACY} = {'time': [0.044665597, 0.044732625, 0.044803611, 0.044874625, 0.044946653, 0.045017639, 0.045085736, 0.045156708, 0.045222667, 0.045290667, 0.045361681, 0.045429681, 0.04550075, 0.045572722, 0.0456397...</msg>
<status status="PASS" starttime="20201110 08:33:22.061" endtime="20201110 08:33:22.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.105" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.102" endtime="20201110 08:33:22.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.111" level="INFO">VALUE: [5.904100000000273e-05, 5.884700000000076e-05, 5.8457999999997345e-05, 5.883300000000119e-05, 5.8236000000003174e-05, 5.8207999999997095e-05, 5.841699999999811e-05, 5.8763999999995875e-05, 5.8848000000000233e-05, 5.844499999999725e-05, 5.895900000000426e-05, 5.8834000000000664e-05, 5.890299999999904e-05, 5.811099999999958e-05, 5.883300000000119e-05, 5.884699999999382e-05, 5.806900000000087e-05, 5.8499999999996055e-05, 5.8472000000003854e-05, 5.809700000000001e-05, 5.812499999999915e-05, 5.8749999999996305e-05, 5.8708000000004534e-05, 5.884700000000076e-05, 5.865299999999879e-05, 5.870899999999707e-05, 5.8083999999999913e-05, 5.895900000000426e-05, 5.8986000000003924e-05, 5.88749999999999e-05, 5.8735999999996735e-05, 5.833300000000069e-05, 5.859700000000051e-05, 5.809700000000001e-05, 5.884700000000076e-05, 5.808300000000044e-05, 5.834700000000026e-05, 5.834700000000026e-05, 5.8471999999996915e-05, 5.8207999999997095e-05, 5.8820000000001094e-05, 5.897300000000383e-05, 5.8528000000002134e-05, 5.862499999999965e-05, 5.8235999999996235e-05, 5.8485999999996485e-05, 5.8208000000004034e-05, 5.9000000000003494e-05, 5.833300000000069e-05, 5.833300000000069e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.108" endtime="20201110 08:33:22.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.094" endtime="20201110 08:33:22.115"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.122" endtime="20201110 08:33:22.125"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.131" endtime="20201110 08:33:22.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.126" endtime="20201110 08:33:22.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.117" endtime="20201110 08:33:22.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.555" endtime="20201110 08:33:22.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:21.553" endtime="20201110 08:33:22.158"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.182" endtime="20201110 08:33:22.205"></status>
</kw>
<msg timestamp="20201110 08:33:22.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.179" endtime="20201110 08:33:22.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.214" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.208" endtime="20201110 08:33:22.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.216" endtime="20201110 08:33:22.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.171" endtime="20201110 08:33:22.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.165" endtime="20201110 08:33:22.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.241" endtime="20201110 08:33:22.607"></status>
</kw>
<msg timestamp="20201110 08:33:22.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045451639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.238" endtime="20201110 08:33:22.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045391667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045451639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.618" endtime="20201110 08:33:22.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.638" endtime="20201110 08:33:22.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.230" endtime="20201110 08:33:22.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.225" endtime="20201110 08:33:22.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:22.661" level="INFO">${RESULT} = [{'time': 0.045451639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9972000000005354e-05, 'source_diff': 5.9972000000005354e-05}, {'time': 0.045523583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:22.651" endtime="20201110 08:33:22.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:22.693" level="INFO">${ACCURACY} = {'time': [0.045451639, 0.045523583, 0.045597597, 0.045671625, 0.045738625, 0.045809653, 0.045883639, 0.045953639, 0.046021639, 0.046093667, 0.046166667, 0.046239681, 0.046307694, 0.046378736, 0.046446...</msg>
<status status="PASS" starttime="20201110 08:33:22.663" endtime="20201110 08:33:22.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.705" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:33:22.703" endtime="20201110 08:33:22.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.711" level="INFO">VALUE: [5.9972000000005354e-05, 5.980499999999611e-05, 5.906899999999493e-05, 5.9735999999997735e-05, 5.9471999999997915e-05, 5.9749999999997305e-05, 5.9471999999997915e-05, 5.959699999999457e-05, 5.958300000000194e-05, 5.972299999999764e-05, 5.9098000000000483e-05, 5.9098000000000483e-05, 5.956900000000237e-05, 5.963900000000022e-05, 5.9736000000004674e-05, 5.958300000000194e-05, 5.961100000000108e-05, 5.9693999999999026e-05, 5.934700000000126e-05, 5.983299999999525e-05, 5.9207999999998095e-05, 5.931900000000212e-05, 5.9943999999999276e-05, 5.9971999999998415e-05, 5.9207999999998095e-05, 5.9485999999997485e-05, 5.9333999999994225e-05, 5.912500000000015e-05, 5.9334000000001164e-05, 5.9584000000001414e-05, 5.995900000000526e-05, 5.9582999999995e-05, 5.911100000000058e-05, 5.9708000000005534e-05, 5.9457999999998346e-05, 5.90829999999945e-05, 5.9471999999997915e-05, 5.9693999999999026e-05, 5.9471999999997915e-05, 5.911100000000058e-05, 5.9778000000003384e-05, 5.911100000000058e-05, 5.9291999999995515e-05, 5.998699999999746e-05, 5.9263999999996375e-05, 5.961100000000108e-05, 5.9165999999999386e-05, 5.909700000000101e-05, 5.909700000000101e-05, 5.9971999999998415e-05]</msg>
<status status="PASS" starttime="20201110 08:33:22.708" endtime="20201110 08:33:22.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.695" endtime="20201110 08:33:22.715"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.721" endtime="20201110 08:33:22.724"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:22.730" endtime="20201110 08:33:22.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.726" endtime="20201110 08:33:22.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.717" endtime="20201110 08:33:22.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.160" endtime="20201110 08:33:22.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.159" endtime="20201110 08:33:22.757"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.781" endtime="20201110 08:33:22.803"></status>
</kw>
<msg timestamp="20201110 08:33:22.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.778" endtime="20201110 08:33:22.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:22.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:22.807" endtime="20201110 08:33:22.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.815" endtime="20201110 08:33:22.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.770" endtime="20201110 08:33:22.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.764" endtime="20201110 08:33:22.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:22.840" endtime="20201110 08:33:23.200"></status>
</kw>
<msg timestamp="20201110 08:33:23.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044529542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044590556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:22.836" endtime="20201110 08:33:23.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044529542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044590556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.211" endtime="20201110 08:33:23.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.231" endtime="20201110 08:33:23.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.828" endtime="20201110 08:33:23.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.823" endtime="20201110 08:33:23.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.251" level="INFO">${RESULT} = [{'time': 0.044590556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1014000000005064e-05, 'source_diff': 6.1014000000005064e-05}, {'time': 0.044663542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:23.242" endtime="20201110 08:33:23.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.284" level="INFO">${ACCURACY} = {'time': [0.044590556, 0.044663542, 0.044734556, 0.044804583, 0.044873583, 0.044948583, 0.045019583, 0.045091597, 0.045165597, 0.045237653, 0.045311639, 0.045380639, 0.045451639, 0.045519653, 0.045588...</msg>
<status status="PASS" starttime="20201110 08:33:23.254" endtime="20201110 08:33:23.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.296" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.294" endtime="20201110 08:33:23.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.302" level="INFO">VALUE: [6.1014000000005064e-05, 6.0194999999999e-05, 6.0834000000002664e-05, 6.0985999999998985e-05, 6.0707999999999596e-05, 6.034700000000226e-05, 6.0957999999999846e-05, 6.0582999999996e-05, 6.0457999999999346e-05, 6.08750000000019e-05, 6.0985999999998985e-05, 6.084700000000276e-05, 6.034700000000226e-05, 6.0834000000002664e-05, 6.0721999999999166e-05, 6.04870000000049e-05, 6.0612000000001554e-05, 6.0749999999998305e-05, 6.0971999999999416e-05, 6.0985999999998985e-05, 6.034700000000226e-05, 6.059699999999557e-05, 6.083299999999625e-05, 6.061099999999514e-05, 6.081899999999668e-05, 6.0221999999998665e-05, 6.083299999999625e-05, 6.0471999999998916e-05, 6.059699999999557e-05, 6.0028000000003634e-05, 6.0597999999995045e-05, 6.045899999999882e-05, 6.022299999999814e-05, 6.06949999999995e-05, 6.061099999999514e-05, 6.00550000000033e-05, 6.083300000000319e-05, 6.0721999999999166e-05, 6.083300000000319e-05, 6.034700000000226e-05, 6.0777999999997445e-05, 6.038900000000097e-05, 6.0457999999999346e-05, 6.083299999999625e-05, 6.061100000000208e-05, 6.0471999999998916e-05, 6.0985999999998985e-05, 6.0056000000002774e-05, 6.070899999999907e-05, 6.072299999999864e-05]</msg>
<status status="PASS" starttime="20201110 08:33:23.299" endtime="20201110 08:33:23.304"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.286" endtime="20201110 08:33:23.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.312" endtime="20201110 08:33:23.315"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.321" endtime="20201110 08:33:23.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.317" endtime="20201110 08:33:23.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.308" endtime="20201110 08:33:23.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.759" endtime="20201110 08:33:23.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:22.758" endtime="20201110 08:33:23.348"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.373" endtime="20201110 08:33:23.394"></status>
</kw>
<msg timestamp="20201110 08:33:23.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.369" endtime="20201110 08:33:23.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.398" endtime="20201110 08:33:23.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.405" endtime="20201110 08:33:23.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.361" endtime="20201110 08:33:23.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.355" endtime="20201110 08:33:23.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.431" endtime="20201110 08:33:23.736"></status>
</kw>
<msg timestamp="20201110 08:33:23.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044944306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045005583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.427" endtime="20201110 08:33:23.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044944306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045005583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.745" endtime="20201110 08:33:23.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.764" endtime="20201110 08:33:23.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.420" endtime="20201110 08:33:23.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.415" endtime="20201110 08:33:23.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:23.783" level="INFO">${RESULT} = [{'time': 0.045005583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.127699999999847e-05, 'source_diff': 6.127699999999847e-05}, {'time': 0.045078597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:23.774" endtime="20201110 08:33:23.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:23.813" level="INFO">${ACCURACY} = {'time': [0.045005583, 0.045078597, 0.045152597, 0.045226611, 0.045295611, 0.045367639, 0.045440625, 0.045510667, 0.045583653, 0.045656653, 0.045732667, 0.045802708, 0.045877736, 0.045953681, 0.046022...</msg>
<status status="PASS" starttime="20201110 08:33:23.785" endtime="20201110 08:33:23.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.824" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:33:23.822" endtime="20201110 08:33:23.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.830" level="INFO">VALUE: [6.127699999999847e-05, 6.134699999999632e-05, 6.133300000000369e-05, 6.109700000000301e-05, 6.133299999999675e-05, 6.186100000000333e-05, 6.168100000000093e-05, 6.111099999999564e-05, 6.184700000000376e-05, 6.170900000000007e-05, 6.197299999999989e-05, 6.119400000000053e-05, 6.165300000000179e-05, 6.195900000000032e-05, 6.168000000000146e-05, 6.197200000000042e-05, 6.113900000000172e-05, 6.188899999999553e-05, 6.12080000000001e-05, 6.134699999999632e-05, 6.122199999999967e-05, 6.122199999999967e-05, 6.122199999999967e-05, 6.170799999999366e-05, 6.155599999999734e-05, 6.145899999999982e-05, 6.184800000000323e-05, 6.184800000000323e-05, 6.172200000000017e-05, 6.147199999999992e-05, 6.134699999999632e-05, 6.159699999999657e-05, 6.195800000000085e-05, 6.123599999999924e-05, 6.17080000000006e-05, 6.113900000000172e-05, 6.108300000000344e-05, 6.148599999999949e-05, 6.123599999999924e-05, 6.15279999999982e-05, 6.112500000000215e-05, 6.138900000000197e-05, 6.183400000000366e-05, 6.15279999999982e-05, 6.176399999999888e-05, 6.147199999999992e-05, 6.179199999999802e-05, 6.129199999999752e-05, 6.133299999999675e-05, 6.172200000000017e-05]</msg>
<status status="PASS" starttime="20201110 08:33:23.827" endtime="20201110 08:33:23.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.815" endtime="20201110 08:33:23.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.839" endtime="20201110 08:33:23.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:23.847" endtime="20201110 08:33:23.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.843" endtime="20201110 08:33:23.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.835" endtime="20201110 08:33:23.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.350" endtime="20201110 08:33:23.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.349" endtime="20201110 08:33:23.873"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.896" endtime="20201110 08:33:23.916"></status>
</kw>
<msg timestamp="20201110 08:33:23.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.892" endtime="20201110 08:33:23.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:23.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:23.920" endtime="20201110 08:33:23.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.926" endtime="20201110 08:33:23.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.885" endtime="20201110 08:33:23.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.880" endtime="20201110 08:33:23.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:23.949" endtime="20201110 08:33:24.283"></status>
</kw>
<msg timestamp="20201110 08:33:24.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041919778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:23.946" endtime="20201110 08:33:24.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041856736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041919778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.293" endtime="20201110 08:33:24.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.311" endtime="20201110 08:33:24.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.939" endtime="20201110 08:33:24.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.934" endtime="20201110 08:33:24.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.330" level="INFO">${RESULT} = [{'time': 0.041919778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304199999999927e-05, 'source_diff': 6.304199999999927e-05}, {'time': 0.041996792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:24.321" endtime="20201110 08:33:24.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.361" level="INFO">${ACCURACY} = {'time': [0.041919778, 0.041996792, 0.042068806, 0.042140819, 0.042216833, 0.042291819, 0.042362833, 0.042440847, 0.042517875, 0.042587861, 0.042658875, 0.042735944, 0.042808875, 0.042880903, 0.042954...</msg>
<status status="PASS" starttime="20201110 08:33:24.332" endtime="20201110 08:33:24.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.372" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.370" endtime="20201110 08:33:24.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.378" level="INFO">VALUE: [6.304199999999927e-05, 6.208399999999697e-05, 6.259799999999704e-05, 6.295800000000185e-05, 6.258300000000494e-05, 6.218000000000196e-05, 6.208300000000444e-05, 6.297199999999448e-05, 6.211099999999664e-05, 6.222200000000067e-05, 6.209699999999707e-05, 6.279099999999954e-05, 6.22080000000011e-05, 6.272200000000117e-05, 6.222200000000067e-05, 6.25279999999992e-05, 6.215299999999535e-05, 6.295900000000132e-05, 6.270900000000107e-05, 6.222200000000067e-05, 6.208300000000444e-05, 6.261100000000408e-05, 6.284700000000476e-05, 6.295799999999491e-05, 6.255499999999886e-05, 6.233300000000469e-05, 6.273600000000074e-05, 6.241700000000211e-05, 6.270799999999466e-05, 6.269499999999456e-05, 6.212499999999621e-05, 6.208399999999697e-05, 6.23200000000046e-05, 6.222300000000014e-05, 6.207000000000434e-05, 6.294400000000228e-05, 6.281899999999868e-05, 6.283299999999825e-05, 6.270799999999466e-05, 6.27080000000016e-05, 6.250000000000006e-05, 6.208300000000444e-05, 6.284699999999782e-05, 6.283299999999825e-05, 6.258399999999747e-05, 6.263900000000322e-05, 6.245900000000082e-05, 6.247300000000039e-05, 6.236100000000383e-05, 6.259799999999704e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.375" endtime="20201110 08:33:24.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.363" endtime="20201110 08:33:24.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.387" endtime="20201110 08:33:24.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.396" endtime="20201110 08:33:24.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.391" endtime="20201110 08:33:24.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.383" endtime="20201110 08:33:24.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.875" endtime="20201110 08:33:24.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:23.874" endtime="20201110 08:33:24.422"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.444" endtime="20201110 08:33:24.467"></status>
</kw>
<msg timestamp="20201110 08:33:24.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.441" endtime="20201110 08:33:24.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.470" endtime="20201110 08:33:24.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.477" endtime="20201110 08:33:24.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.434" endtime="20201110 08:33:24.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.428" endtime="20201110 08:33:24.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.500" endtime="20201110 08:33:24.832"></status>
</kw>
<msg timestamp="20201110 08:33:24.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041842472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.497" endtime="20201110 08:33:24.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041779194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041842472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:24.842" endtime="20201110 08:33:24.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.860" endtime="20201110 08:33:24.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.490" endtime="20201110 08:33:24.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.485" endtime="20201110 08:33:24.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:24.882" level="INFO">${RESULT} = [{'time': 0.041842472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.327799999999995e-05, 'source_diff': 6.327799999999995e-05}, {'time': 0.041919458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:24.873" endtime="20201110 08:33:24.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:24.913" level="INFO">${ACCURACY} = {'time': [0.041842472, 0.041919458, 0.041990472, 0.042065486, 0.042139486, 0.0422145, 0.0422905, 0.042361528, 0.042432542, 0.042510542, 0.042584528, 0.042656542, 0.042733556, 0.042812556, 0.042887569,...</msg>
<status status="PASS" starttime="20201110 08:33:24.885" endtime="20201110 08:33:24.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.924" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:33:24.922" endtime="20201110 08:33:24.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:24.930" level="INFO">VALUE: [6.327799999999995e-05, 6.383299999999925e-05, 6.316600000000339e-05, 6.334699999999832e-05, 6.320799999999516e-05, 6.308300000000544e-05, 6.345800000000235e-05, 6.373600000000174e-05, 6.311099999999764e-05, 6.373600000000174e-05, 6.383400000000566e-05, 6.358399999999848e-05, 6.38479999999983e-05, 6.390300000000404e-05, 6.37080000000026e-05, 6.381899999999968e-05, 6.369399999999609e-05, 6.347200000000192e-05, 6.38750000000049e-05, 6.315300000000329e-05, 6.340300000000354e-05, 6.38750000000049e-05, 6.383299999999925e-05, 6.359699999999857e-05, 6.333400000000516e-05, 6.383399999999873e-05, 6.383400000000566e-05, 6.33750000000044e-05, 6.330599999999909e-05, 6.323600000000124e-05, 6.320799999999516e-05, 6.348600000000149e-05, 6.313899999999678e-05, 6.374999999999437e-05, 6.383300000000619e-05, 6.393099999999624e-05, 6.348600000000149e-05, 6.347200000000192e-05, 6.309699999999807e-05, 6.308399999999798e-05, 6.312500000000415e-05, 6.398600000000199e-05, 6.345899999999488e-05, 6.313900000000372e-05, 6.383399999999873e-05, 6.327799999999995e-05, 6.383299999999925e-05, 6.372200000000217e-05, 6.309699999999807e-05, 6.37080000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:33:24.927" endtime="20201110 08:33:24.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.915" endtime="20201110 08:33:24.933"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:24.939" endtime="20201110 08:33:24.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:24.947" endtime="20201110 08:33:24.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.943" endtime="20201110 08:33:24.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.935" endtime="20201110 08:33:24.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.424" endtime="20201110 08:33:24.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.422" endtime="20201110 08:33:24.973"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.001" endtime="20201110 08:33:25.022"></status>
</kw>
<msg timestamp="20201110 08:33:25.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:24.997" endtime="20201110 08:33:25.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.025" endtime="20201110 08:33:25.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.032" endtime="20201110 08:33:25.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.988" endtime="20201110 08:33:25.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.980" endtime="20201110 08:33:25.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.056" endtime="20201110 08:33:25.394"></status>
</kw>
<msg timestamp="20201110 08:33:25.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046926528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.052" endtime="20201110 08:33:25.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046862069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046926528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.404" endtime="20201110 08:33:25.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.423" endtime="20201110 08:33:25.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.045" endtime="20201110 08:33:25.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.040" endtime="20201110 08:33:25.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:25.442" level="INFO">${RESULT} = [{'time': 0.046926528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.445900000000282e-05, 'source_diff': 6.445900000000282e-05}, {'time': 0.0470005, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:25.433" endtime="20201110 08:33:25.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:25.473" level="INFO">${ACCURACY} = {'time': [0.046926528, 0.0470005, 0.047078514, 0.047155528, 0.047233528, 0.047309556, 0.047381542, 0.047453611, 0.047529611, 0.047601611, 0.047680597, 0.047752583, 0.047827597, 0.047906625, 0.04798161...</msg>
<status status="PASS" starttime="20201110 08:33:25.444" endtime="20201110 08:33:25.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.484" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:33:25.482" endtime="20201110 08:33:25.485"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.490" level="INFO">VALUE: [6.445900000000282e-05, 6.430600000000009e-05, 6.444500000000325e-05, 6.484699999999982e-05, 6.408399999999898e-05, 6.473700000000221e-05, 6.483399999999973e-05, 6.438899999999803e-05, 6.487499999999896e-05, 6.411099999999864e-05, 6.472199999999623e-05, 6.455500000000086e-05, 6.445799999999641e-05, 6.411099999999864e-05, 6.404200000000027e-05, 6.497199999999648e-05, 6.47080000000036e-05, 6.433299999999975e-05, 6.47080000000036e-05, 6.459799999999905e-05, 6.473700000000221e-05, 6.48479999999993e-05, 6.422199999999573e-05, 6.420900000000257e-05, 6.483300000000025e-05, 6.436099999999889e-05, 6.437499999999846e-05, 6.47080000000036e-05, 6.433299999999975e-05, 6.495800000000385e-05, 6.445800000000335e-05, 6.455600000000034e-05, 6.448600000000249e-05, 6.433299999999975e-05, 6.501400000000213e-05, 6.45699999999999e-05, 6.494499999999681e-05, 6.480600000000059e-05, 6.420900000000257e-05, 6.447200000000292e-05, 6.455500000000086e-05, 6.440199999999813e-05, 6.483300000000025e-05, 6.445799999999641e-05, 6.484699999999982e-05, 6.4583e-05, 6.483300000000025e-05, 6.459699999999957e-05, 6.455600000000034e-05, 6.43750000000054e-05]</msg>
<status status="PASS" starttime="20201110 08:33:25.487" endtime="20201110 08:33:25.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.475" endtime="20201110 08:33:25.493"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.500" endtime="20201110 08:33:25.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:25.508" endtime="20201110 08:33:25.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.504" endtime="20201110 08:33:25.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.495" endtime="20201110 08:33:25.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.975" endtime="20201110 08:33:25.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:24.974" endtime="20201110 08:33:25.534"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.557" endtime="20201110 08:33:25.578"></status>
</kw>
<msg timestamp="20201110 08:33:25.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.554" endtime="20201110 08:33:25.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:25.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:25.582" endtime="20201110 08:33:25.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.588" endtime="20201110 08:33:25.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.546" endtime="20201110 08:33:25.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.540" endtime="20201110 08:33:25.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:25.612" endtime="20201110 08:33:26.010"></status>
</kw>
<msg timestamp="20201110 08:33:26.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042451458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:25.608" endtime="20201110 08:33:26.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042451458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042517056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.020" endtime="20201110 08:33:26.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.038" endtime="20201110 08:33:26.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.601" endtime="20201110 08:33:26.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.596" endtime="20201110 08:33:26.047"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.057" level="INFO">${RESULT} = [{'time': 0.042517056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.559800000000005e-05, 'source_diff': 6.559800000000005e-05}, {'time': 0.042591056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:26.048" endtime="20201110 08:33:26.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.089" level="INFO">${ACCURACY} = {'time': [0.042517056, 0.042591056, 0.042671069, 0.042746083, 0.042825097, 0.042899097, 0.042979111, 0.043058111, 0.043131125, 0.043205125, 0.043284194, 0.043357139, 0.043431167, 0.043507181, 0.043584...</msg>
<status status="PASS" starttime="20201110 08:33:26.060" endtime="20201110 08:33:26.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.100" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.098" endtime="20201110 08:33:26.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.106" level="INFO">VALUE: [6.559800000000005e-05, 6.520900000000357e-05, 6.545799999999741e-05, 6.595799999999791e-05, 6.522199999999673e-05, 6.544399999999784e-05, 6.597199999999748e-05, 6.5583000000001e-05, 6.584700000000082e-05, 6.595799999999791e-05, 6.577699999999603e-05, 6.583300000000125e-05, 6.520899999999663e-05, 6.573699999999627e-05, 6.544499999999731e-05, 6.518100000000443e-05, 6.558400000000048e-05, 6.520799999999716e-05, 6.524999999999587e-05, 6.547199999999698e-05, 6.597200000000442e-05, 6.556900000000143e-05, 6.601400000000313e-05, 6.583300000000125e-05, 6.555600000000134e-05, 6.587499999999996e-05, 6.533300000000075e-05, 6.508399999999998e-05, 6.559800000000005e-05, 6.570900000000407e-05, 6.534700000000032e-05, 6.522200000000367e-05, 6.534700000000032e-05, 6.522200000000367e-05, 6.572199999999723e-05, 6.584700000000082e-05, 6.52359999999963e-05, 6.572199999999723e-05, 6.506900000000093e-05, 6.570799999999766e-05, 6.509700000000007e-05, 6.50830000000005e-05, 6.532000000000066e-05, 6.526400000000238e-05, 6.556999999999397e-05, 6.572200000000417e-05, 6.57359999999968e-05, 6.547200000000392e-05, 6.597200000000442e-05, 6.505500000000136e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.102" endtime="20201110 08:33:26.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.091" endtime="20201110 08:33:26.109"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.115" endtime="20201110 08:33:26.118"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.123" endtime="20201110 08:33:26.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.119" endtime="20201110 08:33:26.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.110" endtime="20201110 08:33:26.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.536" endtime="20201110 08:33:26.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:25.535" endtime="20201110 08:33:26.149"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.172" endtime="20201110 08:33:26.193"></status>
</kw>
<msg timestamp="20201110 08:33:26.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.169" endtime="20201110 08:33:26.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.197" endtime="20201110 08:33:26.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.203" endtime="20201110 08:33:26.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.162" endtime="20201110 08:33:26.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.156" endtime="20201110 08:33:26.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.227" endtime="20201110 08:33:26.580"></status>
</kw>
<msg timestamp="20201110 08:33:26.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042066514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042132903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.224" endtime="20201110 08:33:26.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042066514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042132903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.590" endtime="20201110 08:33:26.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.610" endtime="20201110 08:33:26.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.216" endtime="20201110 08:33:26.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.211" endtime="20201110 08:33:26.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:26.630" level="INFO">${RESULT} = [{'time': 0.042132903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638900000000003e-05, 'source_diff': 6.638900000000003e-05}, {'time': 0.042207847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:26.621" endtime="20201110 08:33:26.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:26.663" level="INFO">${ACCURACY} = {'time': [0.042132903, 0.042207847, 0.042284847, 0.042362903, 0.042443889, 0.042517903, 0.042594889, 0.042671889, 0.042753903, 0.042828944, 0.042908917, 0.042988931, 0.043065944, 0.043146944, 0.043228...</msg>
<status status="PASS" starttime="20201110 08:33:26.632" endtime="20201110 08:33:26.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.675" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:33:26.673" endtime="20201110 08:33:26.676"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.681" level="INFO">VALUE: [6.638900000000003e-05, 6.695799999999891e-05, 6.645799999999841e-05, 6.687500000000096e-05, 6.661100000000114e-05, 6.623600000000424e-05, 6.647199999999798e-05, 6.670799999999866e-05, 6.694500000000575e-05, 6.612500000000021e-05, 6.658399999999454e-05, 6.620899999999763e-05, 6.634700000000132e-05, 6.695799999999891e-05, 6.697199999999848e-05, 6.622199999999773e-05, 6.67080000000056e-05, 6.609700000000107e-05, 6.634700000000132e-05, 6.634700000000132e-05, 6.670799999999866e-05, 6.645899999999788e-05, 6.694499999999881e-05, 6.620899999999763e-05, 6.613899999999978e-05, 6.606999999999447e-05, 6.633400000000123e-05, 6.686100000000139e-05, 6.60830000000015e-05, 6.695799999999891e-05, 6.694399999999934e-05, 6.611100000000064e-05, 6.648599999999755e-05, 6.60830000000015e-05, 6.659700000000157e-05, 6.670799999999866e-05, 6.620799999999816e-05, 6.67500000000043e-05, 6.697299999999795e-05, 6.647299999999745e-05, 6.609800000000055e-05, 6.670900000000507e-05, 6.634700000000132e-05, 6.661100000000114e-05, 6.688900000000053e-05, 6.622199999999773e-05, 6.659699999999463e-05, 6.659699999999463e-05, 6.670799999999866e-05, 6.634700000000132e-05]</msg>
<status status="PASS" starttime="20201110 08:33:26.678" endtime="20201110 08:33:26.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.665" endtime="20201110 08:33:26.684"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.691" endtime="20201110 08:33:26.694"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:26.700" endtime="20201110 08:33:26.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.695" endtime="20201110 08:33:26.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.686" endtime="20201110 08:33:26.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.151" endtime="20201110 08:33:26.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.150" endtime="20201110 08:33:26.727"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.751" endtime="20201110 08:33:26.773"></status>
</kw>
<msg timestamp="20201110 08:33:26.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.748" endtime="20201110 08:33:26.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:26.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:26.777" endtime="20201110 08:33:26.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.784" endtime="20201110 08:33:26.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.740" endtime="20201110 08:33:26.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.734" endtime="20201110 08:33:26.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:26.809" endtime="20201110 08:33:27.166"></status>
</kw>
<msg timestamp="20201110 08:33:27.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045227931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:26.805" endtime="20201110 08:33:27.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045227931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045295444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.176" endtime="20201110 08:33:27.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.196" endtime="20201110 08:33:27.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.797" endtime="20201110 08:33:27.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.792" endtime="20201110 08:33:27.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.218" level="INFO">${RESULT} = [{'time': 0.045295444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.751299999999821e-05, 'source_diff': 6.751299999999821e-05}, {'time': 0.045371458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.209" endtime="20201110 08:33:27.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.251" level="INFO">${ACCURACY} = {'time': [0.045295444, 0.045371458, 0.045451458, 0.045532472, 0.045612486, 0.045692486, 0.045774486, 0.0458525, 0.045932528, 0.046008514, 0.046085542, 0.046160528, 0.046241583, 0.046323583, 0.04640156...</msg>
<status status="PASS" starttime="20201110 08:33:27.221" endtime="20201110 08:33:27.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.263" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.261" endtime="20201110 08:33:27.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.270" level="INFO">VALUE: [6.751299999999821e-05, 6.772200000000617e-05, 6.70830000000025e-05, 6.722199999999873e-05, 6.759700000000257e-05, 6.708299999999556e-05, 6.733300000000275e-05, 6.772199999999923e-05, 6.711100000000164e-05, 6.719499999999906e-05, 6.748599999999855e-05, 6.783400000000273e-05, 6.72500000000048e-05, 6.774999999999837e-05, 6.795799999999991e-05, 6.758299999999606e-05, 6.759700000000257e-05, 6.770799999999966e-05, 6.722199999999873e-05, 6.747199999999898e-05, 6.708299999999556e-05, 6.733299999999581e-05, 6.752799999999726e-05, 6.797199999999948e-05, 6.795799999999991e-05, 6.733400000000223e-05, 6.795899999999938e-05, 6.801399999999819e-05, 6.720899999999863e-05, 6.777699999999803e-05, 6.701299999999771e-05, 6.784699999999588e-05, 6.77359999999988e-05, 6.747200000000592e-05, 6.776399999999794e-05, 6.795799999999991e-05, 6.772199999999923e-05, 6.733300000000275e-05, 6.772199999999923e-05, 6.708400000000198e-05, 6.70700000000024e-05, 6.795899999999938e-05, 6.708399999999504e-05, 6.719499999999906e-05, 6.70830000000025e-05, 6.718000000000002e-05, 6.774999999999837e-05, 6.77359999999988e-05, 6.756900000000343e-05, 6.726400000000438e-05]</msg>
<status status="PASS" starttime="20201110 08:33:27.266" endtime="20201110 08:33:27.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.253" endtime="20201110 08:33:27.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.287" endtime="20201110 08:33:27.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.296" endtime="20201110 08:33:27.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.291" endtime="20201110 08:33:27.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.282" endtime="20201110 08:33:27.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.729" endtime="20201110 08:33:27.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:26.728" endtime="20201110 08:33:27.322"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.348" endtime="20201110 08:33:27.370"></status>
</kw>
<msg timestamp="20201110 08:33:27.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.343" endtime="20201110 08:33:27.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.373" endtime="20201110 08:33:27.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.379" endtime="20201110 08:33:27.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.336" endtime="20201110 08:33:27.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.329" endtime="20201110 08:33:27.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.403" endtime="20201110 08:33:27.736"></status>
</kw>
<msg timestamp="20201110 08:33:27.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045750722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045819014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.399" endtime="20201110 08:33:27.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045750722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045819014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.746" endtime="20201110 08:33:27.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.764" endtime="20201110 08:33:27.770"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.392" endtime="20201110 08:33:27.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.388" endtime="20201110 08:33:27.773"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:27.783" level="INFO">${RESULT} = [{'time': 0.045819014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.829199999999758e-05, 'source_diff': 6.829199999999758e-05}, {'time': 0.045894972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:27.774" endtime="20201110 08:33:27.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:27.814" level="INFO">${ACCURACY} = {'time': [0.045819014, 0.045894972, 0.045972042, 0.046055, 0.046131014, 0.046211014, 0.046292042, 0.046374028, 0.046453069, 0.046534056, 0.046615056, 0.046698069, 0.046776125, 0.046852097, 0.046934111...</msg>
<status status="PASS" starttime="20201110 08:33:27.785" endtime="20201110 08:33:27.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.825" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:33:27.823" endtime="20201110 08:33:27.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.830" level="INFO">VALUE: [6.829199999999758e-05, 6.833299999999681e-05, 6.813899999999484e-05, 6.809699999999613e-05, 6.822199999999973e-05, 6.894500000000081e-05, 6.866700000000142e-05, 6.895900000000038e-05, 6.899999999999962e-05, 6.82229999999992e-05, 6.833400000000323e-05, 6.820800000000016e-05, 6.899999999999962e-05, 6.844400000000084e-05, 6.87359999999998e-05, 6.829200000000452e-05, 6.811100000000264e-05, 6.897200000000048e-05, 6.822199999999973e-05, 6.833300000000375e-05, 6.893100000000124e-05, 6.895900000000038e-05, 6.868100000000099e-05, 6.870900000000013e-05, 6.847299999999945e-05, 6.824999999999887e-05, 6.820800000000016e-05, 6.82359999999993e-05, 6.845800000000041e-05, 6.888899999999559e-05, 6.897200000000048e-05, 6.833299999999681e-05, 6.834699999999638e-05, 6.80700000000034e-05, 6.895900000000038e-05, 6.845899999999988e-05, 6.882000000000416e-05, 6.85700000000039e-05, 6.833399999999629e-05, 6.826399999999844e-05, 6.845800000000041e-05, 6.895800000000091e-05, 6.818000000000102e-05, 6.813900000000178e-05, 6.845800000000041e-05, 6.893100000000124e-05, 6.822199999999973e-05, 6.869400000000109e-05, 6.859699999999663e-05, 6.895800000000091e-05]</msg>
<status status="PASS" starttime="20201110 08:33:27.827" endtime="20201110 08:33:27.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.816" endtime="20201110 08:33:27.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.840" endtime="20201110 08:33:27.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:27.848" endtime="20201110 08:33:27.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.844" endtime="20201110 08:33:27.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.835" endtime="20201110 08:33:27.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.325" endtime="20201110 08:33:27.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.323" endtime="20201110 08:33:27.874"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.896" endtime="20201110 08:33:27.917"></status>
</kw>
<msg timestamp="20201110 08:33:27.919" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.893" endtime="20201110 08:33:27.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:27.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:27.921" endtime="20201110 08:33:27.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.927" endtime="20201110 08:33:27.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.886" endtime="20201110 08:33:27.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.880" endtime="20201110 08:33:27.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:27.950" endtime="20201110 08:33:28.283"></status>
</kw>
<msg timestamp="20201110 08:33:28.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041534792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041604708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:27.947" endtime="20201110 08:33:28.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041534792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041604708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.293" endtime="20201110 08:33:28.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.312" endtime="20201110 08:33:28.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.940" endtime="20201110 08:33:28.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.935" endtime="20201110 08:33:28.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.331" level="INFO">${RESULT} = [{'time': 0.041604708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.991599999999626e-05, 'source_diff': 6.991599999999626e-05}, {'time': 0.041682764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.322" endtime="20201110 08:33:28.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.362" level="INFO">${ACCURACY} = {'time': [0.041604708, 0.041682764, 0.041764764, 0.041847764, 0.041927806, 0.042005764, 0.042082778, 0.042160778, 0.042242792, 0.042323792, 0.042401847, 0.042485819, 0.042564819, 0.042647819, 0.042726...</msg>
<status status="PASS" starttime="20201110 08:33:28.333" endtime="20201110 08:33:28.362"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.373" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.370" endtime="20201110 08:33:28.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.378" level="INFO">VALUE: [6.991599999999626e-05, 6.948600000000055e-05, 6.945800000000141e-05, 6.920800000000116e-05, 6.937499999999652e-05, 6.909700000000407e-05, 6.948600000000055e-05, 6.909700000000407e-05, 6.983399999999779e-05, 6.984799999999736e-05, 6.937499999999652e-05, 6.909700000000407e-05, 6.908299999999756e-05, 6.920799999999422e-05, 6.915199999999594e-05, 6.972200000000123e-05, 6.947200000000098e-05, 6.995800000000191e-05, 6.958299999999806e-05, 6.995800000000191e-05, 6.92360000000003e-05, 6.997200000000148e-05, 6.969500000000156e-05, 6.983400000000473e-05, 6.970900000000113e-05, 6.933400000000423e-05, 6.934700000000432e-05, 6.919399999999465e-05, 6.933299999999781e-05, 6.909699999999713e-05, 6.911100000000364e-05, 6.972200000000123e-05, 6.983299999999831e-05, 6.970800000000166e-05, 6.909699999999713e-05, 6.934699999999738e-05, 6.997199999999454e-05, 6.936199999999643e-05, 6.983399999999779e-05, 6.937499999999652e-05, 6.997200000000148e-05, 6.958299999999806e-05, 6.920800000000116e-05, 6.920799999999422e-05, 6.933300000000475e-05, 6.959699999999763e-05, 6.919400000000159e-05, 6.972200000000123e-05, 6.997200000000148e-05, 6.972200000000123e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.375" endtime="20201110 08:33:28.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.363" endtime="20201110 08:33:28.381"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.388" endtime="20201110 08:33:28.390"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.396" endtime="20201110 08:33:28.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.391" endtime="20201110 08:33:28.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.383" endtime="20201110 08:33:28.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.876" endtime="20201110 08:33:28.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:27.875" endtime="20201110 08:33:28.422"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.444" endtime="20201110 08:33:28.465"></status>
</kw>
<msg timestamp="20201110 08:33:28.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.441" endtime="20201110 08:33:28.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.469" endtime="20201110 08:33:28.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.475" endtime="20201110 08:33:28.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.434" endtime="20201110 08:33:28.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.428" endtime="20201110 08:33:28.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.498" endtime="20201110 08:33:28.829"></status>
</kw>
<msg timestamp="20201110 08:33:28.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041946486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042016931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.495" endtime="20201110 08:33:28.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041946486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042016931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:28.839" endtime="20201110 08:33:28.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.857" endtime="20201110 08:33:28.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.488" endtime="20201110 08:33:28.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.483" endtime="20201110 08:33:28.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:28.877" level="INFO">${RESULT} = [{'time': 0.042016931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.044500000000231e-05, 'source_diff': 7.044500000000231e-05}, {'time': 0.042098917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:28.867" endtime="20201110 08:33:28.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:28.907" level="INFO">${ACCURACY} = {'time': [0.042016931, 0.042098917, 0.042176944, 0.042257944, 0.042340944, 0.042420958, 0.042502958, 0.042587972, 0.042668, 0.042746986, 0.042827028, 0.042906042, 0.042986014, 0.043067028, 0.043149042...</msg>
<status status="PASS" starttime="20201110 08:33:28.879" endtime="20201110 08:33:28.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.918" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:33:28.916" endtime="20201110 08:33:28.919"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:28.923" level="INFO">VALUE: [7.044500000000231e-05, 7.05559999999994e-05, 7.009699999999813e-05, 7.072199999999529e-05, 7.008299999999856e-05, 7.033299999999881e-05, 7.020800000000216e-05, 7.05689999999995e-05, 7.048599999999461e-05, 7.095800000000291e-05, 7.100000000000162e-05, 7.062499999999777e-05, 7.033300000000575e-05, 7.084699999999888e-05, 7.095899999999544e-05, 7.051400000000069e-05, 7.097300000000195e-05, 7.019400000000259e-05, 7.034699999999838e-05, 7.04309999999958e-05, 7.033299999999881e-05, 7.059700000000557e-05, 7.083299999999931e-05, 7.05689999999995e-05, 7.047200000000198e-05, 7.088799999999812e-05, 7.094499999999587e-05, 7.036199999999743e-05, 7.083399999999879e-05, 7.03480000000048e-05, 7.084799999999836e-05, 7.020900000000163e-05, 7.095799999999597e-05, 7.036100000000489e-05, 7.047200000000198e-05, 7.031899999999924e-05, 7.097200000000248e-05, 7.047200000000198e-05, 7.070800000000266e-05, 7.079200000000008e-05, 7.05559999999994e-05, 7.012499999999727e-05, 7.062499999999777e-05, 7.02230000000012e-05, 7.0583000000006e-05, 7.095899999999544e-05, 7.022199999999479e-05, 7.061100000000514e-05, 7.006900000000593e-05, 7.009700000000507e-05]</msg>
<status status="PASS" starttime="20201110 08:33:28.920" endtime="20201110 08:33:28.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.909" endtime="20201110 08:33:28.926"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.933" endtime="20201110 08:33:28.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:28.941" endtime="20201110 08:33:28.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.937" endtime="20201110 08:33:28.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.928" endtime="20201110 08:33:28.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.424" endtime="20201110 08:33:28.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.423" endtime="20201110 08:33:28.967"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:28.989" endtime="20201110 08:33:29.010"></status>
</kw>
<msg timestamp="20201110 08:33:29.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:28.986" endtime="20201110 08:33:29.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.014" endtime="20201110 08:33:29.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.020" endtime="20201110 08:33:29.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.979" endtime="20201110 08:33:29.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.973" endtime="20201110 08:33:29.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.043" endtime="20201110 08:33:29.355"></status>
</kw>
<msg timestamp="20201110 08:33:29.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041697194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041768986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.040" endtime="20201110 08:33:29.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041697194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041768986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.365" endtime="20201110 08:33:29.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.383" endtime="20201110 08:33:29.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.033" endtime="20201110 08:33:29.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.028" endtime="20201110 08:33:29.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.405" level="INFO">${RESULT} = [{'time': 0.041768986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.179200000000108e-05, 'source_diff': 7.179200000000108e-05}, {'time': 0.041849, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:29.396" endtime="20201110 08:33:29.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.435" level="INFO">${ACCURACY} = {'time': [0.041768986, 0.041849, 0.041935028, 0.042017028, 0.042097028, 0.042181042, 0.042267056, 0.042348056, 0.042430111, 0.042512069, 0.042595083, 0.042675083, 0.042759097, 0.042842125, 0.042924111...</msg>
<status status="PASS" starttime="20201110 08:33:29.407" endtime="20201110 08:33:29.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.446" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.444" endtime="20201110 08:33:29.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.451" level="INFO">VALUE: [7.179200000000108e-05, 7.134699999999938e-05, 7.136099999999895e-05, 7.184699999999988e-05, 7.122200000000273e-05, 7.147300000000245e-05, 7.10979999999986e-05, 7.12230000000022e-05, 7.163899999999834e-05, 7.170799999999672e-05, 7.195799999999697e-05, 7.1069e-05, 7.194400000000434e-05, 7.172200000000323e-05, 7.195800000000391e-05, 7.109700000000607e-05, 7.134699999999938e-05, 7.159699999999963e-05, 7.159699999999963e-05, 7.137499999999852e-05, 7.170900000000313e-05, 7.186099999999945e-05, 7.111100000000564e-05, 7.184699999999988e-05, 7.147200000000298e-05, 7.101400000000119e-05, 7.184699999999988e-05, 7.159699999999963e-05, 7.184699999999988e-05, 7.145799999999647e-05, 7.195800000000391e-05, 7.170799999999672e-05, 7.159699999999963e-05, 7.12230000000022e-05, 7.194499999999687e-05, 7.133399999999929e-05, 7.151400000000169e-05, 7.159699999999963e-05, 7.148600000000255e-05, 7.131900000000024e-05, 7.141699999999723e-05, 7.179200000000108e-05, 7.154200000000083e-05, 7.194400000000434e-05, 7.109699999999913e-05, 7.133299999999981e-05, 7.134699999999938e-05, 7.159799999999911e-05, 7.131999999999972e-05, 7.10979999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:33:29.448" endtime="20201110 08:33:29.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.437" endtime="20201110 08:33:29.455"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.461" endtime="20201110 08:33:29.464"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:29.469" endtime="20201110 08:33:29.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.465" endtime="20201110 08:33:29.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.456" endtime="20201110 08:33:29.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.969" endtime="20201110 08:33:29.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:28.968" endtime="20201110 08:33:29.495"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.517" endtime="20201110 08:33:29.538"></status>
</kw>
<msg timestamp="20201110 08:33:29.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.514" endtime="20201110 08:33:29.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:29.542" endtime="20201110 08:33:29.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.548" endtime="20201110 08:33:29.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.507" endtime="20201110 08:33:29.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.501" endtime="20201110 08:33:29.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.572" endtime="20201110 08:33:29.903"></status>
</kw>
<msg timestamp="20201110 08:33:29.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.568" endtime="20201110 08:33:29.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041622625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041694764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:29.913" endtime="20201110 08:33:29.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:29.931" endtime="20201110 08:33:29.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.561" endtime="20201110 08:33:29.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.556" endtime="20201110 08:33:29.940"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:29.950" level="INFO">${RESULT} = [{'time': 0.041694764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.213899999999884e-05, 'source_diff': 7.213899999999884e-05}, {'time': 0.041781764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:29.941" endtime="20201110 08:33:29.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:29.981" level="INFO">${ACCURACY} = {'time': [0.041694764, 0.041781764, 0.041864778, 0.041949833, 0.042035792, 0.042120792, 0.042206806, 0.042287806, 0.042372819, 0.042458861, 0.042538833, 0.042620847, 0.042702875, 0.042786861, 0.042872...</msg>
<status status="PASS" starttime="20201110 08:33:29.953" endtime="20201110 08:33:29.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.992" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:33:29.990" endtime="20201110 08:33:29.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:29.997" level="INFO">VALUE: [7.213899999999884e-05, 7.240299999999866e-05, 7.215299999999841e-05, 7.283300000000131e-05, 7.302800000000276e-05, 7.301399999999625e-05, 7.252800000000226e-05, 7.238899999999909e-05, 7.288800000000012e-05, 7.280500000000217e-05, 7.262499999999977e-05, 7.276400000000294e-05, 7.266699999999848e-05, 7.219400000000459e-05, 7.216699999999798e-05, 7.240299999999866e-05, 7.277799999999557e-05, 7.254200000000183e-05, 7.225000000000287e-05, 7.249999999999618e-05, 7.24030000000056e-05, 7.254100000000235e-05, 7.270800000000466e-05, 7.225000000000287e-05, 7.302799999999582e-05, 7.288899999999959e-05, 7.277799999999557e-05, 7.238899999999909e-05, 7.275000000000337e-05, 7.273599999999686e-05, 7.213899999999884e-05, 7.290299999999916e-05, 7.212499999999927e-05, 7.251399999999575e-05, 7.250000000000312e-05, 7.276300000000346e-05, 7.225000000000287e-05, 7.208300000000056e-05, 7.227800000000201e-05, 7.227800000000201e-05, 7.238899999999909e-05, 7.2763999999996e-05, 7.265299999999891e-05, 7.301400000000319e-05, 7.227800000000201e-05, 7.238899999999909e-05, 7.213899999999884e-05, 7.291599999999926e-05, 7.301399999999625e-05, 7.288800000000012e-05]</msg>
<status status="PASS" starttime="20201110 08:33:29.994" endtime="20201110 08:33:29.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.983" endtime="20201110 08:33:30.000"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.007" endtime="20201110 08:33:30.010"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.015" endtime="20201110 08:33:30.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.011" endtime="20201110 08:33:30.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.002" endtime="20201110 08:33:30.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.497" endtime="20201110 08:33:30.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:29.496" endtime="20201110 08:33:30.041"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.063" endtime="20201110 08:33:30.085"></status>
</kw>
<msg timestamp="20201110 08:33:30.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.060" endtime="20201110 08:33:30.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.088" endtime="20201110 08:33:30.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.094" endtime="20201110 08:33:30.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.053" endtime="20201110 08:33:30.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.047" endtime="20201110 08:33:30.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.117" endtime="20201110 08:33:30.448"></status>
</kw>
<msg timestamp="20201110 08:33:30.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041610833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.114" endtime="20201110 08:33:30.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041537486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041610833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.458" endtime="20201110 08:33:30.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.476" endtime="20201110 08:33:30.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.107" endtime="20201110 08:33:30.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.102" endtime="20201110 08:33:30.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:30.495" level="INFO">${RESULT} = [{'time': 0.041610833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.334700000000138e-05, 'source_diff': 7.334700000000138e-05}, {'time': 0.041698847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:30.486" endtime="20201110 08:33:30.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:30.526" level="INFO">${ACCURACY} = {'time': [0.041610833, 0.041698847, 0.041779847, 0.041861861, 0.041943917, 0.042028875, 0.042112875, 0.042195903, 0.042276889, 0.042360931, 0.042442917, 0.042524917, 0.042608944, 0.042695986, 0.042782...</msg>
<status status="PASS" starttime="20201110 08:33:30.497" endtime="20201110 08:33:30.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.537" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:33:30.534" endtime="20201110 08:33:30.537"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.542" level="INFO">VALUE: [7.334700000000138e-05, 7.391600000000026e-05, 7.334700000000138e-05, 7.309700000000113e-05, 7.365299999999991e-05, 7.347199999999804e-05, 7.333300000000181e-05, 7.36110000000012e-05, 7.370799999999872e-05, 7.361200000000068e-05, 7.395899999999844e-05, 7.358400000000154e-05, 7.36110000000012e-05, 7.374999999999743e-05, 7.331900000000224e-05, 7.397199999999854e-05, 7.372200000000523e-05, 7.331900000000224e-05, 7.383300000000231e-05, 7.347200000000498e-05, 7.320799999999822e-05, 7.320799999999822e-05, 7.388899999999365e-05, 7.358400000000154e-05, 7.383400000000179e-05, 7.375000000000437e-05, 7.309700000000113e-05, 7.313899999999984e-05, 7.308300000000156e-05, 7.395799999999897e-05, 7.309700000000113e-05, 7.372199999999829e-05, 7.334700000000138e-05, 7.36110000000012e-05, 7.398599999999811e-05, 7.308300000000156e-05, 7.334700000000138e-05, 7.358400000000154e-05, 7.395900000000538e-05, 7.31110000000007e-05, 7.348600000000455e-05, 7.370799999999872e-05, 7.372199999999829e-05, 7.348599999999761e-05, 7.372200000000523e-05, 7.347200000000498e-05, 7.320799999999822e-05, 7.333300000000181e-05, 7.319499999999812e-05, 7.384700000000188e-05]</msg>
<status status="PASS" starttime="20201110 08:33:30.539" endtime="20201110 08:33:30.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.528" endtime="20201110 08:33:30.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.552" endtime="20201110 08:33:30.554"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:30.560" endtime="20201110 08:33:30.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.556" endtime="20201110 08:33:30.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.547" endtime="20201110 08:33:30.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.043" endtime="20201110 08:33:30.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.042" endtime="20201110 08:33:30.586"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.608" endtime="20201110 08:33:30.631"></status>
</kw>
<msg timestamp="20201110 08:33:30.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.605" endtime="20201110 08:33:30.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:30.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:30.635" endtime="20201110 08:33:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.641" endtime="20201110 08:33:30.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.598" endtime="20201110 08:33:30.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.592" endtime="20201110 08:33:30.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:30.664" endtime="20201110 08:33:30.996"></status>
</kw>
<msg timestamp="20201110 08:33:31.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042000333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042074806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:30.661" endtime="20201110 08:33:31.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042000333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042074806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.005" endtime="20201110 08:33:31.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.026" endtime="20201110 08:33:31.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.654" endtime="20201110 08:33:31.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.649" endtime="20201110 08:33:31.035"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.045" level="INFO">${RESULT} = [{'time': 0.042074806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.447299999999851e-05, 'source_diff': 7.447299999999851e-05}, {'time': 0.042161806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.036" endtime="20201110 08:33:31.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.075" level="INFO">${ACCURACY} = {'time': [0.042074806, 0.042161806, 0.042247833, 0.042331833, 0.042417833, 0.042506917, 0.042591875, 0.042676861, 0.042765889, 0.042849889, 0.042933903, 0.043022917, 0.043111917, 0.043196917, 0.043279...</msg>
<status status="PASS" starttime="20201110 08:33:31.047" endtime="20201110 08:33:31.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.087" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.084" endtime="20201110 08:33:31.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.092" level="INFO">VALUE: [7.447299999999851e-05, 7.441700000000023e-05, 7.495799999999997e-05, 7.433299999999587e-05, 7.420799999999922e-05, 7.451399999999775e-05, 7.498599999999911e-05, 7.490300000000116e-05, 7.422199999999879e-05, 7.484700000000288e-05, 7.497199999999954e-05, 7.458400000000254e-05, 7.497299999999901e-05, 7.433400000000229e-05, 7.495899999999944e-05, 7.434700000000238e-05, 7.459700000000263e-05, 7.443000000000033e-05, 7.447199999999904e-05, 7.408299999999562e-05, 7.495799999999997e-05, 7.434700000000238e-05, 7.48189999999968e-05, 7.472199999999929e-05, 7.423699999999783e-05, 7.445900000000588e-05, 7.472299999999876e-05, 7.472299999999876e-05, 7.407000000000247e-05, 7.459700000000263e-05, 7.412500000000127e-05, 7.45969999999957e-05, 7.473599999999886e-05, 7.412500000000127e-05, 7.463900000000134e-05, 7.494399999999346e-05, 7.426299999999803e-05, 7.495899999999944e-05, 7.445899999999894e-05, 7.418099999999955e-05, 7.483400000000279e-05, 7.420899999999869e-05, 7.459700000000263e-05, 7.418000000000008e-05, 7.472199999999929e-05, 7.470799999999972e-05, 7.480499999999723e-05, 7.434699999999544e-05, 7.45690000000035e-05, 7.500000000000562e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.089" endtime="20201110 08:33:31.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.077" endtime="20201110 08:33:31.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.101" endtime="20201110 08:33:31.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.110" endtime="20201110 08:33:31.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.105" endtime="20201110 08:33:31.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.097" endtime="20201110 08:33:31.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.588" endtime="20201110 08:33:31.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:30.586" endtime="20201110 08:33:31.135"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.158" endtime="20201110 08:33:31.179"></status>
</kw>
<msg timestamp="20201110 08:33:31.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.155" endtime="20201110 08:33:31.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.183" endtime="20201110 08:33:31.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.189" endtime="20201110 08:33:31.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.148" endtime="20201110 08:33:31.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.142" endtime="20201110 08:33:31.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.212" endtime="20201110 08:33:31.545"></status>
</kw>
<msg timestamp="20201110 08:33:31.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041978306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042054319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.209" endtime="20201110 08:33:31.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041978306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042054319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.555" endtime="20201110 08:33:31.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.573" endtime="20201110 08:33:31.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.201" endtime="20201110 08:33:31.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.197" endtime="20201110 08:33:31.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:31.594" level="INFO">${RESULT} = [{'time': 0.042054319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.601299999999978e-05, 'source_diff': 7.601299999999978e-05}, {'time': 0.042141319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:31.585" endtime="20201110 08:33:31.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:31.624" level="INFO">${ACCURACY} = {'time': [0.042054319, 0.042141319, 0.042229333, 0.042313347, 0.042400361, 0.042483431, 0.042568403, 0.042655375, 0.042739389, 0.042827472, 0.042910403, 0.042994417, 0.043078431, 0.043168431, 0.043255...</msg>
<status status="PASS" starttime="20201110 08:33:31.596" endtime="20201110 08:33:31.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.635" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:33:31.633" endtime="20201110 08:33:31.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.640" level="INFO">VALUE: [7.601299999999978e-05, 7.594399999999446e-05, 7.533300000000381e-05, 7.509700000000313e-05, 7.570800000000072e-05, 7.566700000000148e-05, 7.566699999999454e-05, 7.595800000000097e-05, 7.522199999999979e-05, 7.529099999999816e-05, 7.508400000000304e-05, 7.534800000000286e-05, 7.570900000000019e-05, 7.508400000000304e-05, 7.542999999999439e-05, 7.593000000000183e-05, 7.594399999999446e-05, 7.534700000000338e-05, 7.595800000000097e-05, 7.583299999999737e-05, 7.520800000000022e-05, 7.559700000000363e-05, 7.508299999999662e-05, 7.557000000000397e-05, 7.559800000000311e-05, 7.570900000000019e-05, 7.572200000000029e-05, 7.548599999999961e-05, 7.540200000000219e-05, 7.534699999999644e-05, 7.55969999999967e-05, 7.520800000000022e-05, 7.565300000000191e-05, 7.547200000000004e-05, 7.532000000000372e-05, 7.533400000000329e-05, 7.55969999999967e-05, 7.559800000000311e-05, 7.522299999999926e-05, 7.597300000000001e-05, 7.570800000000072e-05, 7.569400000000115e-05, 7.534699999999644e-05, 7.520800000000022e-05, 7.508300000000356e-05, 7.534700000000338e-05, 7.505599999999696e-05, 7.53890000000021e-05, 7.594500000000087e-05, 7.529199999999764e-05]</msg>
<status status="PASS" starttime="20201110 08:33:31.637" endtime="20201110 08:33:31.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.626" endtime="20201110 08:33:31.644"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.650" endtime="20201110 08:33:31.653"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:31.658" endtime="20201110 08:33:31.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.654" endtime="20201110 08:33:31.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.645" endtime="20201110 08:33:31.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.137" endtime="20201110 08:33:31.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.136" endtime="20201110 08:33:31.684"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.706" endtime="20201110 08:33:31.728"></status>
</kw>
<msg timestamp="20201110 08:33:31.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.703" endtime="20201110 08:33:31.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:31.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:31.731" endtime="20201110 08:33:31.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.738" endtime="20201110 08:33:31.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.696" endtime="20201110 08:33:31.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.690" endtime="20201110 08:33:31.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:31.761" endtime="20201110 08:33:32.093"></status>
</kw>
<msg timestamp="20201110 08:33:32.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041553625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041630458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:31.757" endtime="20201110 08:33:32.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041553625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041630458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.102" endtime="20201110 08:33:32.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.121" endtime="20201110 08:33:32.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.750" endtime="20201110 08:33:32.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.746" endtime="20201110 08:33:32.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.140" level="INFO">${RESULT} = [{'time': 0.041630458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.683300000000531e-05, 'source_diff': 7.683300000000531e-05}, {'time': 0.041716472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.131" endtime="20201110 08:33:32.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.170" level="INFO">${ACCURACY} = {'time': [0.041630458, 0.041716472, 0.041806472, 0.0418965, 0.0419805, 0.0420645, 0.042149514, 0.042239542, 0.042324542, 0.042414583, 0.042498556, 0.042587569, 0.042676583, 0.042766583, 0.042855667, 0...</msg>
<status status="PASS" starttime="20201110 08:33:32.142" endtime="20201110 08:33:32.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.181" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.179" endtime="20201110 08:33:32.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.187" level="INFO">VALUE: [7.683300000000531e-05, 7.622200000000079e-05, 7.602799999999882e-05, 7.684700000000488e-05, 7.622199999999385e-05, 7.658299999999812e-05, 7.681999999999828e-05, 7.654199999999889e-05, 7.622300000000026e-05, 7.675000000000043e-05, 7.60839999999971e-05, 7.622200000000079e-05, 7.620799999999428e-05, 7.622199999999385e-05, 7.615300000000241e-05, 7.69719999999946e-05, 7.633299999999787e-05, 7.633300000000481e-05, 7.608300000000456e-05, 7.658299999999812e-05, 7.694499999999493e-05, 7.633400000000429e-05, 7.672300000000076e-05, 7.622300000000026e-05, 7.636100000000395e-05, 7.620800000000122e-05, 7.684699999999794e-05, 7.620800000000122e-05, 7.695799999999503e-05, 7.670800000000172e-05, 7.659700000000463e-05, 7.64440000000019e-05, 7.670800000000172e-05, 7.648600000000061e-05, 7.619500000000112e-05, 7.686199999999699e-05, 7.647300000000051e-05, 7.670900000000119e-05, 7.651300000000028e-05, 7.623600000000036e-05, 7.620800000000122e-05, 7.620799999999428e-05, 7.636100000000395e-05, 7.661099999999726e-05, 7.704099999999992e-05, 7.686100000000445e-05, 7.697299999999407e-05, 7.659799999999717e-05, 7.670900000000119e-05, 7.670800000000172e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.183" endtime="20201110 08:33:32.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.172" endtime="20201110 08:33:32.190"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.196" endtime="20201110 08:33:32.199"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.204" endtime="20201110 08:33:32.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.200" endtime="20201110 08:33:32.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.191" endtime="20201110 08:33:32.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.686" endtime="20201110 08:33:32.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:31.685" endtime="20201110 08:33:32.230"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.253" endtime="20201110 08:33:32.275"></status>
</kw>
<msg timestamp="20201110 08:33:32.276" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.249" endtime="20201110 08:33:32.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.278" endtime="20201110 08:33:32.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.284" endtime="20201110 08:33:32.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.242" endtime="20201110 08:33:32.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.237" endtime="20201110 08:33:32.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.308" endtime="20201110 08:33:32.663"></status>
</kw>
<msg timestamp="20201110 08:33:32.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041841847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.304" endtime="20201110 08:33:32.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041764097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041841847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.673" endtime="20201110 08:33:32.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.694" endtime="20201110 08:33:32.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.297" endtime="20201110 08:33:32.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.292" endtime="20201110 08:33:32.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:32.714" level="INFO">${RESULT} = [{'time': 0.041841847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.775000000000143e-05, 'source_diff': 7.775000000000143e-05}, {'time': 0.041932917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:32.704" endtime="20201110 08:33:32.714"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:32.747" level="INFO">${ACCURACY} = {'time': [0.041841847, 0.041932917, 0.042021875, 0.042112889, 0.042201889, 0.042290917, 0.042379903, 0.042469931, 0.042556931, 0.042642944, 0.042729944, 0.042815958, 0.042904986, 0.042994986, 0.043081...</msg>
<status status="PASS" starttime="20201110 08:33:32.716" endtime="20201110 08:33:32.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.759" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:33:32.756" endtime="20201110 08:33:32.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.764" level="INFO">VALUE: [7.775000000000143e-05, 7.751400000000075e-05, 7.734699999999844e-05, 7.784699999999894e-05, 7.744500000000237e-05, 7.711099999999776e-05, 7.706999999999853e-05, 7.709800000000461e-05, 7.784799999999842e-05, 7.797200000000254e-05, 7.730499999999974e-05, 7.719400000000265e-05, 7.736099999999801e-05, 7.734699999999844e-05, 7.797200000000254e-05, 7.751400000000075e-05, 7.711099999999776e-05, 7.729199999999964e-05, 7.775000000000143e-05, 7.75839999999986e-05, 7.787499999999808e-05, 7.70839999999981e-05, 7.770900000000219e-05, 7.770800000000272e-05, 7.70969999999982e-05, 7.720800000000222e-05, 7.800000000000168e-05, 7.733299999999887e-05, 7.723599999999442e-05, 7.773600000000186e-05, 7.719500000000212e-05, 7.723700000000083e-05, 7.769500000000262e-05, 7.761099999999826e-05, 7.773600000000186e-05, 7.720899999999475e-05, 7.734699999999844e-05, 7.708299999999862e-05, 7.734700000000538e-05, 7.744399999999596e-05, 7.773600000000186e-05, 7.709700000000513e-05, 7.795800000000297e-05, 7.719499999999518e-05, 7.733399999999835e-05, 7.783399999999885e-05, 7.795900000000244e-05, 7.784799999999842e-05, 7.769500000000262e-05, 7.70969999999982e-05]</msg>
<status status="PASS" starttime="20201110 08:33:32.761" endtime="20201110 08:33:32.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.749" endtime="20201110 08:33:32.774"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.781" endtime="20201110 08:33:32.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:32.790" endtime="20201110 08:33:32.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.786" endtime="20201110 08:33:32.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.776" endtime="20201110 08:33:32.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.232" endtime="20201110 08:33:32.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.231" endtime="20201110 08:33:32.817"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.842" endtime="20201110 08:33:32.864"></status>
</kw>
<msg timestamp="20201110 08:33:32.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.838" endtime="20201110 08:33:32.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:32.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:32.868" endtime="20201110 08:33:32.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.875" endtime="20201110 08:33:32.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.830" endtime="20201110 08:33:32.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.824" endtime="20201110 08:33:32.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:32.900" endtime="20201110 08:33:33.258"></status>
</kw>
<msg timestamp="20201110 08:33:33.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044775861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044854556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:32.896" endtime="20201110 08:33:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044775861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044854556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.269" endtime="20201110 08:33:33.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.289" endtime="20201110 08:33:33.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.889" endtime="20201110 08:33:33.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.884" endtime="20201110 08:33:33.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.309" level="INFO">${RESULT} = [{'time': 0.044854556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.869499999999668e-05, 'source_diff': 7.869499999999668e-05}, {'time': 0.044942569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.299" endtime="20201110 08:33:33.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.342" level="INFO">${ACCURACY} = {'time': [0.044854556, 0.044942569, 0.045030583, 0.045117583, 0.045208611, 0.045301611, 0.045390611, 0.045480625, 0.045573653, 0.045662653, 0.045749653, 0.045840667, 0.045930694, 0.046019681, 0.046110...</msg>
<status status="PASS" starttime="20201110 08:33:33.311" endtime="20201110 08:33:33.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.354" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.351" endtime="20201110 08:33:33.355"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.360" level="INFO">VALUE: [7.869499999999668e-05, 7.833299999999987e-05, 7.845799999999653e-05, 7.83190000000003e-05, 7.886099999999951e-05, 7.85969999999997e-05, 7.856900000000056e-05, 7.870799999999678e-05, 7.898599999999617e-05, 7.80969999999992e-05, 7.831999999999978e-05, 7.834799999999892e-05, 7.834699999999944e-05, 7.80839999999991e-05, 7.822200000000279e-05, 7.85969999999997e-05, 7.895800000000397e-05, 7.858300000000012e-05, 7.836099999999901e-05, 7.85969999999997e-05, 7.883300000000037e-05, 7.845799999999653e-05, 7.822200000000279e-05, 7.891700000000473e-05, 7.893099999999736e-05, 7.815299999999747e-05, 7.806999999999953e-05, 7.84440000000039e-05, 7.879200000000114e-05, 7.898600000000311e-05, 7.872200000000329e-05, 7.886099999999951e-05, 7.89719999999966e-05, 7.844399999999696e-05, 7.848600000000261e-05, 7.837500000000552e-05, 7.883399999999985e-05, 7.85839999999996e-05, 7.859799999999917e-05, 7.870899999999625e-05, 7.893000000000483e-05, 7.80969999999992e-05, 7.833299999999987e-05, 7.88190000000008e-05, 7.85969999999997e-05, 7.897200000000354e-05, 7.807000000000647e-05, 7.883300000000037e-05, 7.863800000000587e-05, 7.84310000000038e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.356" endtime="20201110 08:33:33.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.344" endtime="20201110 08:33:33.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.370" endtime="20201110 08:33:33.373"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.379" endtime="20201110 08:33:33.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.374" endtime="20201110 08:33:33.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.365" endtime="20201110 08:33:33.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.819" endtime="20201110 08:33:33.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:32.818" endtime="20201110 08:33:33.405"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.430" endtime="20201110 08:33:33.453"></status>
</kw>
<msg timestamp="20201110 08:33:33.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.426" endtime="20201110 08:33:33.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:33.457" endtime="20201110 08:33:33.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.464" endtime="20201110 08:33:33.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.419" endtime="20201110 08:33:33.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.412" endtime="20201110 08:33:33.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.490" endtime="20201110 08:33:33.849"></status>
</kw>
<msg timestamp="20201110 08:33:33.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045562556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045642139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.486" endtime="20201110 08:33:33.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045562556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045642139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:33.859" endtime="20201110 08:33:33.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.879" endtime="20201110 08:33:33.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.478" endtime="20201110 08:33:33.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.473" endtime="20201110 08:33:33.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:33.902" level="INFO">${RESULT} = [{'time': 0.045642139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958300000000113e-05, 'source_diff': 7.958300000000113e-05}, {'time': 0.045736153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:33.892" endtime="20201110 08:33:33.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:33.934" level="INFO">${ACCURACY} = {'time': [0.045642139, 0.045736153, 0.045824167, 0.045916167, 0.046004194, 0.046091194, 0.046185194, 0.046276208, 0.046370222, 0.04645725, 0.046551306, 0.046643264, 0.046733264, 0.046821264, 0.0469082...</msg>
<status status="PASS" starttime="20201110 08:33:33.904" endtime="20201110 08:33:33.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.946" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:33:33.944" endtime="20201110 08:33:33.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:33.952" level="INFO">VALUE: [7.958300000000113e-05, 7.90970000000002e-05, 7.959800000000017e-05, 7.905600000000096e-05, 7.90269999999954e-05, 7.958300000000113e-05, 7.920799999999728e-05, 7.908300000000063e-05, 7.983300000000138e-05, 7.983300000000138e-05, 8.001400000000325e-05, 7.986099999999358e-05, 7.94719999999971e-05, 7.995799999999803e-05, 7.923599999999642e-05, 7.927799999999513e-05, 7.943099999999786e-05, 7.95840000000006e-05, 7.995800000000497e-05, 7.933300000000088e-05, 7.970799999999778e-05, 7.945799999999753e-05, 7.934700000000044e-05, 7.983300000000138e-05, 7.922199999999685e-05, 7.947200000000404e-05, 7.986100000000051e-05, 7.90840000000001e-05, 7.922299999999632e-05, 7.940300000000566e-05, 7.90840000000001e-05, 7.997200000000454e-05, 7.952800000000232e-05, 7.933300000000088e-05, 7.995800000000497e-05, 7.972200000000429e-05, 7.983300000000138e-05, 7.951299999999634e-05, 7.934700000000044e-05, 7.947200000000404e-05, 7.922300000000326e-05, 7.9458999999997e-05, 7.975000000000343e-05, 7.99589999999975e-05, 7.995799999999803e-05, 7.94719999999971e-05, 7.995799999999803e-05, 7.967999999999864e-05, 7.906899999999412e-05, 7.94719999999971e-05]</msg>
<status status="PASS" starttime="20201110 08:33:33.949" endtime="20201110 08:33:33.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.936" endtime="20201110 08:33:33.955"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:33.962" endtime="20201110 08:33:33.965"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:33.971" endtime="20201110 08:33:33.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.966" endtime="20201110 08:33:33.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.957" endtime="20201110 08:33:33.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.408" endtime="20201110 08:33:33.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.406" endtime="20201110 08:33:33.998"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.024" endtime="20201110 08:33:34.047"></status>
</kw>
<msg timestamp="20201110 08:33:34.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.019" endtime="20201110 08:33:34.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.051" endtime="20201110 08:33:34.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.057" endtime="20201110 08:33:34.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.011" endtime="20201110 08:33:34.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.005" endtime="20201110 08:33:34.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.082" endtime="20201110 08:33:34.440"></status>
</kw>
<msg timestamp="20201110 08:33:34.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047610528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.079" endtime="20201110 08:33:34.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047530153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047610528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.450" endtime="20201110 08:33:34.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.471" endtime="20201110 08:33:34.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.071" endtime="20201110 08:33:34.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.066" endtime="20201110 08:33:34.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:34.492" level="INFO">${RESULT} = [{'time': 0.047610528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.037500000000058e-05, 'source_diff': 8.037500000000058e-05}, {'time': 0.047700542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:34.482" endtime="20201110 08:33:34.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:34.525" level="INFO">${ACCURACY} = {'time': [0.047610528, 0.047700542, 0.047792556, 0.047882556, 0.047973569, 0.048061583, 0.048156583, 0.048244597, 0.048338625, 0.048430667, 0.048521625, 0.048614653, 0.048703653, 0.048793681, 0.048886...</msg>
<status status="PASS" starttime="20201110 08:33:34.494" endtime="20201110 08:33:34.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.537" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:33:34.535" endtime="20201110 08:33:34.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.543" level="INFO">VALUE: [8.037500000000058e-05, 8.06390000000004e-05, 8.077799999999663e-05, 8.076399999999706e-05, 8.051299999999734e-05, 8.0152e-05, 8.094399999999946e-05, 8.037500000000058e-05, 8.052800000000332e-05, 8.019499999999818e-05, 8.01389999999999e-05, 8.077800000000357e-05, 8.051399999999681e-05, 8.016699999999904e-05, 8.051400000000375e-05, 8.088800000000118e-05, 8.084700000000195e-05, 8.090300000000022e-05, 8.041599999999982e-05, 8.016699999999904e-05, 8.015299999999947e-05, 8.052799999999638e-05, 8.051399999999681e-05, 8.040299999999972e-05, 8.033400000000135e-05, 8.027800000000307e-05, 8.065299999999997e-05, 8.027799999999613e-05, 8.086199999999405e-05, 8.040200000000025e-05, 8.066600000000007e-05, 8.033300000000188e-05, 8.077799999999663e-05, 8.079200000000314e-05, 8.088900000000065e-05, 8.076399999999706e-05, 8.102800000000382e-05, 8.065299999999997e-05, 8.051399999999681e-05, 8.06390000000004e-05, 8.058300000000213e-05, 8.086200000000099e-05, 8.052700000000385e-05, 8.05269999999969e-05, 8.093099999999936e-05, 8.074999999999749e-05, 8.018100000000555e-05, 8.01389999999999e-05, 8.069399999999921e-05, 8.084700000000195e-05]</msg>
<status status="PASS" starttime="20201110 08:33:34.540" endtime="20201110 08:33:34.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.527" endtime="20201110 08:33:34.546"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.553" endtime="20201110 08:33:34.556"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:34.562" endtime="20201110 08:33:34.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.557" endtime="20201110 08:33:34.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.548" endtime="20201110 08:33:34.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.000" endtime="20201110 08:33:34.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:33.998" endtime="20201110 08:33:34.589"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.613" endtime="20201110 08:33:34.635"></status>
</kw>
<msg timestamp="20201110 08:33:34.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.609" endtime="20201110 08:33:34.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:34.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:34.639" endtime="20201110 08:33:34.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.646" endtime="20201110 08:33:34.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.602" endtime="20201110 08:33:34.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.596" endtime="20201110 08:33:34.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:34.670" endtime="20201110 08:33:35.030"></status>
</kw>
<msg timestamp="20201110 08:33:35.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044506028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044587181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:34.667" endtime="20201110 08:33:35.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044506028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044587181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.040" endtime="20201110 08:33:35.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.061" endtime="20201110 08:33:35.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.659" endtime="20201110 08:33:35.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.654" endtime="20201110 08:33:35.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.081" level="INFO">${RESULT} = [{'time': 0.044587181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.115299999999354e-05, 'source_diff': 8.115299999999354e-05}, {'time': 0.044678194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.071" endtime="20201110 08:33:35.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.114" level="INFO">${ACCURACY} = {'time': [0.044587181, 0.044678194, 0.044771208, 0.044867222, 0.044963222, 0.045055236, 0.045145264, 0.04523725, 0.045333278, 0.045429292, 0.045520292, 0.045610306, 0.045703361, 0.045795319, 0.0458893...</msg>
<status status="PASS" starttime="20201110 08:33:35.083" endtime="20201110 08:33:35.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.125" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.123" endtime="20201110 08:33:35.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.131" level="INFO">VALUE: [8.115299999999354e-05, 8.181899999999687e-05, 8.133300000000288e-05, 8.195800000000003e-05, 8.194400000000046e-05, 8.158299999999619e-05, 8.133299999999594e-05, 8.183299999999644e-05, 8.19589999999995e-05, 8.147300000000551e-05, 8.197299999999907e-05, 8.122300000000526e-05, 8.140300000000072e-05, 8.183300000000338e-05, 8.109699999999526e-05, 8.170799999999978e-05, 8.1846999999996e-05, 8.184700000000295e-05, 8.133300000000288e-05, 8.158300000000313e-05, 8.12919999999967e-05, 8.10970000000022e-05, 8.170899999999925e-05, 8.123700000000483e-05, 8.173599999999892e-05, 8.13469999999955e-05, 8.133300000000288e-05, 8.15970000000027e-05, 8.13469999999955e-05, 8.158299999999619e-05, 8.108300000000263e-05, 8.133299999999594e-05, 8.14719999999991e-05, 8.194499999999993e-05, 8.188799999999524e-05, 8.122299999999832e-05, 8.183399999999591e-05, 8.131999999999584e-05, 8.14719999999991e-05, 8.10970000000022e-05, 8.133299999999594e-05, 8.119399999999971e-05, 8.155499999999705e-05, 8.161099999999533e-05, 8.108300000000263e-05, 8.120799999999928e-05, 8.1458999999999e-05, 8.109800000000167e-05, 8.156899999999662e-05, 8.198599999999917e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.128" endtime="20201110 08:33:35.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.116" endtime="20201110 08:33:35.135"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.142" endtime="20201110 08:33:35.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.151" endtime="20201110 08:33:35.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.146" endtime="20201110 08:33:35.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.137" endtime="20201110 08:33:35.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.591" endtime="20201110 08:33:35.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:34.590" endtime="20201110 08:33:35.178"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.202" endtime="20201110 08:33:35.225"></status>
</kw>
<msg timestamp="20201110 08:33:35.226" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.199" endtime="20201110 08:33:35.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.229" endtime="20201110 08:33:35.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.236" endtime="20201110 08:33:35.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.191" endtime="20201110 08:33:35.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.185" endtime="20201110 08:33:35.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.261" endtime="20201110 08:33:35.615"></status>
</kw>
<msg timestamp="20201110 08:33:35.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045106333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045188625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.257" endtime="20201110 08:33:35.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045106333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045188625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.625" endtime="20201110 08:33:35.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.644" endtime="20201110 08:33:35.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.249" endtime="20201110 08:33:35.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.244" endtime="20201110 08:33:35.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:35.663" level="INFO">${RESULT} = [{'time': 0.045188625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.229200000000464e-05, 'source_diff': 8.229200000000464e-05}, {'time': 0.045281653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:35.654" endtime="20201110 08:33:35.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:35.694" level="INFO">${ACCURACY} = {'time': [0.045188625, 0.045281653, 0.045373694, 0.045465653, 0.04555675, 0.045651681, 0.045747681, 0.045841708, 0.045938722, 0.046035806, 0.046131722, 0.046225736, 0.046321806, 0.046414764, 0.0465117...</msg>
<status status="PASS" starttime="20201110 08:33:35.665" endtime="20201110 08:33:35.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.705" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:33:35.703" endtime="20201110 08:33:35.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.711" level="INFO">VALUE: [8.229200000000464e-05, 8.211099999999583e-05, 8.288799999999624e-05, 8.283400000000385e-05, 8.293100000000136e-05, 8.233399999999641e-05, 8.258399999999666e-05, 8.205500000000449e-05, 8.273599999999992e-05, 8.254199999999795e-05, 8.245800000000053e-05, 8.208300000000363e-05, 8.290300000000222e-05, 8.290299999999529e-05, 8.220899999999975e-05, 8.234799999999598e-05, 8.284799999999648e-05, 8.222300000000626e-05, 8.233400000000335e-05, 8.23469999999965e-05, 8.222200000000679e-05, 8.245800000000053e-05, 8.224999999999899e-05, 8.25970000000037e-05, 8.23469999999965e-05, 8.270800000000078e-05, 8.227799999999813e-05, 8.25840000000036e-05, 8.247299999999957e-05, 8.25840000000036e-05, 8.284800000000342e-05, 8.23469999999965e-05, 8.290300000000222e-05, 8.237499999999565e-05, 8.29720000000006e-05, 8.20970000000032e-05, 8.270800000000078e-05, 8.222199999999985e-05, 8.24720000000001e-05, 8.272200000000035e-05, 8.220899999999975e-05, 8.29590000000005e-05, 8.273599999999992e-05, 8.244399999999402e-05, 8.220800000000028e-05, 8.259699999999676e-05, 8.20970000000032e-05, 8.2846999999997e-05, 8.209699999999626e-05, 8.208300000000363e-05]</msg>
<status status="PASS" starttime="20201110 08:33:35.708" endtime="20201110 08:33:35.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.696" endtime="20201110 08:33:35.713"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.716" endtime="20201110 08:33:35.717"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:35.720" endtime="20201110 08:33:35.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.718" endtime="20201110 08:33:35.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.714" endtime="20201110 08:33:35.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.180" endtime="20201110 08:33:35.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.179" endtime="20201110 08:33:35.742"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.753" endtime="20201110 08:33:35.771"></status>
</kw>
<msg timestamp="20201110 08:33:35.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.751" endtime="20201110 08:33:35.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:35.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:35.772" endtime="20201110 08:33:35.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.775" endtime="20201110 08:33:35.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.748" endtime="20201110 08:33:35.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.745" endtime="20201110 08:33:35.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:35.786" endtime="20201110 08:33:36.131"></status>
</kw>
<msg timestamp="20201110 08:33:36.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025249778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025333486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:35.785" endtime="20201110 08:33:36.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025249778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025333486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.142" endtime="20201110 08:33:36.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.161" endtime="20201110 08:33:36.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.781" endtime="20201110 08:33:36.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.779" endtime="20201110 08:33:36.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.181" level="INFO">${RESULT} = [{'time': 0.025333486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.370799999999831e-05, 'source_diff': 8.370799999999831e-05}, {'time': 0.025429417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.173" endtime="20201110 08:33:36.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.212" level="INFO">${ACCURACY} = {'time': [0.025333486, 0.025429417, 0.0255215, 0.025619458, 0.025714458, 0.025812458, 0.025909472, 0.0260085, 0.0261045, 0.0262015, 0.026296528, 0.026394528, 0.026489542, 0.026584569, 0.026679569, 0.0...</msg>
<status status="PASS" starttime="20201110 08:33:36.183" endtime="20201110 08:33:36.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.223" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.221" endtime="20201110 08:33:36.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.228" level="INFO">VALUE: [8.370799999999831e-05, 8.351399999999981e-05, 8.333299999999794e-05, 8.354099999999948e-05, 8.345799999999806e-05, 8.401400000000031e-05, 8.376400000000006e-05, 8.390299999999976e-05, 8.338899999999969e-05, 8.375000000000049e-05, 8.320900000000075e-05, 8.376400000000006e-05, 8.340300000000272e-05, 8.354099999999948e-05, 8.390200000000028e-05, 8.377700000000016e-05, 8.390200000000028e-05, 8.352800000000285e-05, 8.315300000000247e-05, 8.340299999999926e-05, 8.376400000000006e-05, 8.312499999999987e-05, 8.390299999999976e-05, 8.32780000000026e-05, 8.338899999999969e-05, 8.324999999999999e-05, 8.341599999999935e-05, 8.315199999999953e-05, 8.326300000000009e-05, 8.362500000000037e-05, 8.391699999999933e-05, 8.3152999999999e-05, 8.380599999999877e-05, 8.400000000000074e-05, 8.352799999999938e-05, 8.313899999999944e-05, 8.351399999999981e-05, 8.326399999999956e-05, 8.388900000000019e-05, 8.390200000000028e-05, 8.363800000000046e-05, 8.370899999999779e-05, 8.34170000000023e-05, 8.324999999999999e-05, 8.313899999999944e-05, 8.315300000000247e-05, 8.337500000000012e-05, 8.384700000000148e-05, 8.387500000000062e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.225" endtime="20201110 08:33:36.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.214" endtime="20201110 08:33:36.231"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.238" endtime="20201110 08:33:36.241"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.246" endtime="20201110 08:33:36.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.242" endtime="20201110 08:33:36.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.233" endtime="20201110 08:33:36.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.743" endtime="20201110 08:33:36.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:35.742" endtime="20201110 08:33:36.272"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.295" endtime="20201110 08:33:36.316"></status>
</kw>
<msg timestamp="20201110 08:33:36.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.292" endtime="20201110 08:33:36.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.320" endtime="20201110 08:33:36.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.326" endtime="20201110 08:33:36.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.284" endtime="20201110 08:33:36.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.279" endtime="20201110 08:33:36.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.349" endtime="20201110 08:33:36.682"></status>
</kw>
<msg timestamp="20201110 08:33:36.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041942139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042026944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.346" endtime="20201110 08:33:36.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041942139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042026944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.692" endtime="20201110 08:33:36.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.711" endtime="20201110 08:33:36.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.339" endtime="20201110 08:33:36.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.334" endtime="20201110 08:33:36.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:36.730" level="INFO">${RESULT} = [{'time': 0.042026944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.480499999999336e-05, 'source_diff': 8.480499999999336e-05}, {'time': 0.042120931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:36.721" endtime="20201110 08:33:36.730"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:36.760" level="INFO">${ACCURACY} = {'time': [0.042026944, 0.042120931, 0.042214944, 0.042310958, 0.042409986, 0.042502972, 0.042595986, 0.042691014, 0.042788014, 0.042881056, 0.042977028, 0.043071042, 0.043165042, 0.043258083, 0.043352...</msg>
<status status="PASS" starttime="20201110 08:33:36.732" endtime="20201110 08:33:36.761"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.771" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:33:36.769" endtime="20201110 08:33:36.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.777" level="INFO">VALUE: [8.480499999999336e-05, 8.458399999999866e-05, 8.419399999999577e-05, 8.434700000000545e-05, 8.458299999999919e-05, 8.494399999999652e-05, 8.470800000000278e-05, 8.44720000000021e-05, 8.472200000000235e-05, 8.437499999999765e-05, 8.49720000000026e-05, 8.497299999999514e-05, 8.458399999999866e-05, 8.411100000000477e-05, 8.433299999999894e-05, 8.409699999999826e-05, 8.459699999999876e-05, 8.470799999999584e-05, 8.409699999999826e-05, 8.477799999999369e-05, 8.418100000000261e-05, 8.483299999999944e-05, 8.423699999999396e-05, 8.448700000000114e-05, 8.433400000000535e-05, 8.459699999999876e-05, 8.459699999999876e-05, 8.498599999999523e-05, 8.456899999999962e-05, 8.472199999999541e-05, 8.434700000000545e-05, 8.4846999999999e-05, 8.459699999999876e-05, 8.495799999999609e-05, 8.411099999999783e-05, 8.433399999999841e-05, 8.436099999999808e-05, 8.458399999999866e-05, 8.433299999999894e-05, 8.41249999999974e-05, 8.433299999999894e-05, 8.490300000000423e-05, 8.49720000000026e-05, 8.447199999999516e-05, 8.452800000000038e-05, 8.409699999999826e-05, 8.465199999999756e-05, 8.4459000000002e-05, 8.420899999999482e-05, 8.472300000000182e-05]</msg>
<status status="PASS" starttime="20201110 08:33:36.773" endtime="20201110 08:33:36.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.762" endtime="20201110 08:33:36.780"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.786" endtime="20201110 08:33:36.789"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:36.795" endtime="20201110 08:33:36.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.790" endtime="20201110 08:33:36.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.781" endtime="20201110 08:33:36.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.274" endtime="20201110 08:33:36.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.273" endtime="20201110 08:33:36.820"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.843" endtime="20201110 08:33:36.865"></status>
</kw>
<msg timestamp="20201110 08:33:36.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.840" endtime="20201110 08:33:36.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:36.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:36.869" endtime="20201110 08:33:36.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.875" endtime="20201110 08:33:36.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.832" endtime="20201110 08:33:36.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.827" endtime="20201110 08:33:36.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:36.898" endtime="20201110 08:33:37.233"></status>
</kw>
<msg timestamp="20201110 08:33:37.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042078667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042164181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:36.895" endtime="20201110 08:33:37.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042078667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042164181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.243" endtime="20201110 08:33:37.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.262" endtime="20201110 08:33:37.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.888" endtime="20201110 08:33:37.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.883" endtime="20201110 08:33:37.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.281" level="INFO">${RESULT} = [{'time': 0.042164181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.551400000000181e-05, 'source_diff': 8.551400000000181e-05}, {'time': 0.042262167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.272" endtime="20201110 08:33:37.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.311" level="INFO">${ACCURACY} = {'time': [0.042164181, 0.042262167, 0.042356181, 0.042450208, 0.042544208, 0.042643208, 0.042738222, 0.042835236, 0.042928264, 0.04302325, 0.043119278, 0.043213292, 0.043311292, 0.043409292, 0.0435073...</msg>
<status status="PASS" starttime="20201110 08:33:37.283" endtime="20201110 08:33:37.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.322" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.320" endtime="20201110 08:33:37.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.328" level="INFO">VALUE: [8.551400000000181e-05, 8.531999999999984e-05, 8.5459000000003e-05, 8.520800000000328e-05, 8.579100000000173e-05, 8.533299999999994e-05, 8.583300000000044e-05, 8.509699999999926e-05, 8.555600000000052e-05, 8.594399999999752e-05, 8.509699999999926e-05, 8.523600000000242e-05, 8.534799999999898e-05, 8.531999999999984e-05, 8.538899999999822e-05, 8.53469999999995e-05, 8.533299999999994e-05, 8.570799999999684e-05, 8.522200000000285e-05, 8.522199999999591e-05, 8.53469999999995e-05, 8.508299999999969e-05, 8.559699999999976e-05, 8.583399999999991e-05, 8.52370000000019e-05, 8.559799999999923e-05, 8.587500000000609e-05, 8.59720000000036e-05, 8.523599999999548e-05, 8.522200000000285e-05, 8.508299999999969e-05, 8.548600000000267e-05, 8.522200000000285e-05, 8.556900000000062e-05, 8.508299999999969e-05, 8.583399999999991e-05, 8.548599999999573e-05, 8.508399999999916e-05, 8.522200000000285e-05, 8.522199999999591e-05, 8.5847e-05, 8.511099999999883e-05, 8.547199999999616e-05, 8.558300000000019e-05, 8.5847e-05, 8.508299999999969e-05, 8.593099999999743e-05, 8.584799999999948e-05, 8.536200000000549e-05, 8.518000000000414e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.324" endtime="20201110 08:33:37.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.313" endtime="20201110 08:33:37.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.337" endtime="20201110 08:33:37.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.346" endtime="20201110 08:33:37.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.341" endtime="20201110 08:33:37.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.332" endtime="20201110 08:33:37.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.822" endtime="20201110 08:33:37.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:36.821" endtime="20201110 08:33:37.371"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.394" endtime="20201110 08:33:37.416"></status>
</kw>
<msg timestamp="20201110 08:33:37.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.391" endtime="20201110 08:33:37.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.420" endtime="20201110 08:33:37.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.426" endtime="20201110 08:33:37.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.383" endtime="20201110 08:33:37.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.378" endtime="20201110 08:33:37.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.449" endtime="20201110 08:33:37.782"></status>
</kw>
<msg timestamp="20201110 08:33:37.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041960389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.446" endtime="20201110 08:33:37.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041873458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041960389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:37.791" endtime="20201110 08:33:37.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.810" endtime="20201110 08:33:37.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.439" endtime="20201110 08:33:37.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.434" endtime="20201110 08:33:37.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:37.829" level="INFO">${RESULT} = [{'time': 0.041960389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.693099999999843e-05, 'source_diff': 8.693099999999843e-05}, {'time': 0.042057403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:37.820" endtime="20201110 08:33:37.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:37.859" level="INFO">${ACCURACY} = {'time': [0.041960389, 0.042057403, 0.042152417, 0.042251417, 0.042345431, 0.042440431, 0.042536458, 0.042636458, 0.042735458, 0.0428325, 0.0429335, 0.0430305, 0.043126514, 0.043227514, 0.043327542, 0...</msg>
<status status="PASS" starttime="20201110 08:33:37.831" endtime="20201110 08:33:37.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.870" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:33:37.868" endtime="20201110 08:33:37.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.876" level="INFO">VALUE: [8.693099999999843e-05, 8.608400000000016e-05, 8.661100000000033e-05, 8.618099999999768e-05, 8.659800000000023e-05, 8.633400000000041e-05, 8.647199999999716e-05, 8.672200000000435e-05, 8.669399999999827e-05, 8.686100000000058e-05, 8.698599999999723e-05, 8.658300000000119e-05, 8.6847000000001e-05, 8.607000000000059e-05, 8.661099999999339e-05, 8.659800000000023e-05, 8.659800000000023e-05, 8.609700000000026e-05, 8.608299999999375e-05, 8.697199999999766e-05, 8.681900000000187e-05, 8.608300000000069e-05, 8.609700000000026e-05, 8.69720000000046e-05, 8.63470000000005e-05, 8.658400000000066e-05, 8.658400000000066e-05, 8.622299999999639e-05, 8.623600000000342e-05, 8.673599999999698e-05, 8.620799999999734e-05, 8.63470000000005e-05, 8.609700000000026e-05, 8.697199999999766e-05, 8.695799999999809e-05, 8.607000000000059e-05, 8.63470000000005e-05, 8.673599999999698e-05, 8.608400000000016e-05, 8.602800000000188e-05, 8.672300000000382e-05, 8.663899999999947e-05, 8.661100000000033e-05, 8.645799999999759e-05, 8.67920000000022e-05, 8.620799999999734e-05, 8.61390000000059e-05, 8.687500000000015e-05, 8.670799999999784e-05, 8.686100000000058e-05]</msg>
<status status="PASS" starttime="20201110 08:33:37.872" endtime="20201110 08:33:37.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.861" endtime="20201110 08:33:37.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.891" endtime="20201110 08:33:37.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:37.900" endtime="20201110 08:33:37.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.895" endtime="20201110 08:33:37.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.886" endtime="20201110 08:33:37.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.373" endtime="20201110 08:33:37.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.372" endtime="20201110 08:33:37.925"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.948" endtime="20201110 08:33:37.970"></status>
</kw>
<msg timestamp="20201110 08:33:37.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.945" endtime="20201110 08:33:37.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:37.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:37.973" endtime="20201110 08:33:37.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:37.979" endtime="20201110 08:33:37.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.937" endtime="20201110 08:33:37.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.932" endtime="20201110 08:33:37.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.003" endtime="20201110 08:33:38.336"></status>
</kw>
<msg timestamp="20201110 08:33:38.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042042639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042130042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.000" endtime="20201110 08:33:38.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042042639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042130042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.346" endtime="20201110 08:33:38.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.364" endtime="20201110 08:33:38.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.992" endtime="20201110 08:33:38.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.987" endtime="20201110 08:33:38.375"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:38.385" level="INFO">${RESULT} = [{'time': 0.042130042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.740299999999979e-05, 'source_diff': 8.740299999999979e-05}, {'time': 0.042231056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:38.376" endtime="20201110 08:33:38.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:38.491" level="INFO">${ACCURACY} = {'time': [0.042130042, 0.042231056, 0.042329069, 0.042424083, 0.042522097, 0.042618097, 0.042718111, 0.042820125, 0.042920125, 0.043019153, 0.043118153, 0.043218167, 0.043320194, 0.043422181, 0.043517...</msg>
<status status="PASS" starttime="20201110 08:33:38.388" endtime="20201110 08:33:38.491"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.502" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:33:38.500" endtime="20201110 08:33:38.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.508" level="INFO">VALUE: [8.740299999999979e-05, 8.780600000000277e-05, 8.734699999999457e-05, 8.758300000000219e-05, 8.784700000000201e-05, 8.784700000000201e-05, 8.708300000000169e-05, 8.722199999999791e-05, 8.781900000000287e-05, 8.759699999999482e-05, 8.770899999999832e-05, 8.719500000000519e-05, 8.773599999999798e-05, 8.704199999999551e-05, 8.722200000000485e-05, 8.716599999999963e-05, 8.784700000000201e-05, 8.78050000000033e-05, 8.747199999999816e-05, 8.747199999999816e-05, 8.797199999999866e-05, 8.74720000000051e-05, 8.73470000000015e-05, 8.797299999999814e-05, 8.74999999999973e-05, 8.751399999999687e-05, 8.758299999999525e-05, 8.772199999999841e-05, 8.730499999999586e-05, 8.79720000000056e-05, 8.772199999999841e-05, 8.781900000000287e-05, 8.745799999999859e-05, 8.708400000000116e-05, 8.770899999999832e-05, 8.747300000000457e-05, 8.723600000000442e-05, 8.797199999999866e-05, 8.709700000000126e-05, 8.720800000000528e-05, 8.731899999999543e-05, 8.783300000000244e-05, 8.759700000000176e-05, 8.723599999999748e-05, 8.745799999999859e-05, 8.770900000000525e-05, 8.745899999999807e-05, 8.783400000000191e-05, 8.791600000000038e-05, 8.733300000000194e-05]</msg>
<status status="PASS" starttime="20201110 08:33:38.504" endtime="20201110 08:33:38.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.493" endtime="20201110 08:33:38.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.517" endtime="20201110 08:33:38.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:38.525" endtime="20201110 08:33:38.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.521" endtime="20201110 08:33:38.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.512" endtime="20201110 08:33:38.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.927" endtime="20201110 08:33:38.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:37.926" endtime="20201110 08:33:38.551"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.575" endtime="20201110 08:33:38.597"></status>
</kw>
<msg timestamp="20201110 08:33:38.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.570" endtime="20201110 08:33:38.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:38.601" endtime="20201110 08:33:38.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.608" endtime="20201110 08:33:38.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.563" endtime="20201110 08:33:38.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.557" endtime="20201110 08:33:38.615"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.632" endtime="20201110 08:33:38.963"></status>
</kw>
<msg timestamp="20201110 08:33:38.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042813264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.629" endtime="20201110 08:33:38.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:38.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042813264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042901931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:38.972" endtime="20201110 08:33:38.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:38.991" endtime="20201110 08:33:38.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.621" endtime="20201110 08:33:38.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.616" endtime="20201110 08:33:38.998"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.008" level="INFO">${RESULT} = [{'time': 0.042901931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.86670000000006e-05, 'source_diff': 8.86670000000006e-05}, {'time': 0.043001972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:38.999" endtime="20201110 08:33:39.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.039" level="INFO">${ACCURACY} = {'time': [0.042901931, 0.043001972, 0.043100972, 0.043200958, 0.043303986, 0.043406986, 0.043510014, 0.043608014, 0.043704069, 0.043801042, 0.043899069, 0.043998056, 0.044097056, 0.044193069, 0.044294...</msg>
<status status="PASS" starttime="20201110 08:33:39.011" endtime="20201110 08:33:39.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.050" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.048" endtime="20201110 08:33:39.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.054" level="INFO">VALUE: [8.86670000000006e-05, 8.859700000000276e-05, 8.886100000000258e-05, 8.844400000000002e-05, 8.861100000000233e-05, 8.808300000000269e-05, 8.861100000000233e-05, 8.847199999999916e-05, 8.874999999999855e-05, 8.847299999999864e-05, 8.824999999999805e-05, 8.884800000000248e-05, 8.841700000000036e-05, 8.870799999999984e-05, 8.859699999999582e-05, 8.873599999999898e-05, 8.845799999999959e-05, 8.88329999999965e-05, 8.869400000000027e-05, 8.876399999999812e-05, 8.815300000000054e-05, 8.870899999999932e-05, 8.807000000000259e-05, 8.895899999999957e-05, 8.859700000000276e-05, 8.822199999999891e-05, 8.848599999999873e-05, 8.873599999999898e-05, 8.845799999999959e-05, 8.883300000000344e-05, 8.845799999999959e-05, 8.858300000000319e-05, 8.836100000000208e-05, 8.818099999999968e-05, 8.827799999999719e-05, 8.897299999999914e-05, 8.834699999999557e-05, 8.823600000000542e-05, 8.859700000000276e-05, 8.890299999999435e-05, 8.848600000000567e-05, 8.805600000000302e-05, 8.806900000000312e-05, 8.801399999999737e-05, 8.836100000000208e-05, 8.872299999999889e-05, 8.884800000000248e-05, 8.859699999999582e-05, 8.823600000000542e-05, 8.89999999999988e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.052" endtime="20201110 08:33:39.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.041" endtime="20201110 08:33:39.055"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.058" endtime="20201110 08:33:39.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.062" endtime="20201110 08:33:39.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.060" endtime="20201110 08:33:39.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.056" endtime="20201110 08:33:39.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.553" endtime="20201110 08:33:39.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:38.552" endtime="20201110 08:33:39.083"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.094" endtime="20201110 08:33:39.114"></status>
</kw>
<msg timestamp="20201110 08:33:39.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.092" endtime="20201110 08:33:39.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.115" endtime="20201110 08:33:39.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.118" endtime="20201110 08:33:39.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.089" endtime="20201110 08:33:39.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.086" endtime="20201110 08:33:39.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.129" endtime="20201110 08:33:39.454"></status>
</kw>
<msg timestamp="20201110 08:33:39.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025311431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025401444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.128" endtime="20201110 08:33:39.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025311431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025401444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.464" endtime="20201110 08:33:39.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.482" endtime="20201110 08:33:39.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.124" endtime="20201110 08:33:39.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.122" endtime="20201110 08:33:39.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:39.500" level="INFO">${RESULT} = [{'time': 0.025401444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.00129999999999e-05, 'source_diff': 9.00129999999999e-05}, {'time': 0.025505472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:39.491" endtime="20201110 08:33:39.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:39.530" level="INFO">${ACCURACY} = {'time': [0.025401444, 0.025505472, 0.025609472, 0.025710472, 0.025811486, 0.0259145, 0.026012514, 0.026116514, 0.026214528, 0.026317542, 0.026416556, 0.026519569, 0.026619569, 0.026720583, 0.02682261...</msg>
<status status="PASS" starttime="20201110 08:33:39.502" endtime="20201110 08:33:39.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.541" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:33:39.539" endtime="20201110 08:33:39.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.547" level="INFO">VALUE: [9.00129999999999e-05, 8.973599999999998e-05, 8.922199999999991e-05, 8.995800000000109e-05, 8.945800000000059e-05, 8.933300000000047e-05, 8.934700000000004e-05, 8.933300000000047e-05, 8.93060000000008e-05, 8.972299999999989e-05, 8.920899999999982e-05, 8.972200000000041e-05, 8.952699999999897e-05, 8.945800000000059e-05, 8.997200000000066e-05, 8.948599999999973e-05, 9.001400000000284e-05, 8.945800000000059e-05, 8.959700000000029e-05, 8.934700000000004e-05, 8.995900000000057e-05, 8.908400000000316e-05, 8.908399999999969e-05, 8.927800000000166e-05, 8.984700000000054e-05, 8.997200000000066e-05, 8.945800000000059e-05, 8.917999999999773e-05, 8.984699999999707e-05, 8.911099999999936e-05, 8.920899999999982e-05, 8.9945000000001e-05, 8.997300000000014e-05, 8.958400000000019e-05, 8.994400000000152e-05, 8.959700000000029e-05, 8.986100000000011e-05, 8.958300000000072e-05, 8.945800000000059e-05, 8.984700000000054e-05, 8.934700000000004e-05, 8.972200000000041e-05, 8.998600000000023e-05, 8.909799999999926e-05, 8.961099999999986e-05, 8.919500000000025e-05, 8.936099999999961e-05, 8.99999999999998e-05, 8.947200000000016e-05, 8.988899999999925e-05]</msg>
<status status="PASS" starttime="20201110 08:33:39.544" endtime="20201110 08:33:39.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.532" endtime="20201110 08:33:39.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.557" endtime="20201110 08:33:39.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:39.565" endtime="20201110 08:33:39.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.561" endtime="20201110 08:33:39.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.552" endtime="20201110 08:33:39.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.084" endtime="20201110 08:33:39.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.084" endtime="20201110 08:33:39.591"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.613" endtime="20201110 08:33:39.636"></status>
</kw>
<msg timestamp="20201110 08:33:39.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.610" endtime="20201110 08:33:39.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:39.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:39.639" endtime="20201110 08:33:39.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.646" endtime="20201110 08:33:39.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.603" endtime="20201110 08:33:39.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.597" endtime="20201110 08:33:39.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:39.672" endtime="20201110 08:33:40.005"></status>
</kw>
<msg timestamp="20201110 08:33:40.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041811153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041901917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:39.669" endtime="20201110 08:33:40.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.031" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041811153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041901917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.014" endtime="20201110 08:33:40.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.033" endtime="20201110 08:33:40.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.659" endtime="20201110 08:33:40.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.654" endtime="20201110 08:33:40.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.053" level="INFO">${RESULT} = [{'time': 0.041901917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.076400000000012e-05, 'source_diff': 9.076400000000012e-05}, {'time': 0.042005903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:40.043" endtime="20201110 08:33:40.054"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.084" level="INFO">${ACCURACY} = {'time': [0.041901917, 0.042005903, 0.042108903, 0.042207944, 0.042308931, 0.042410958, 0.042512986, 0.042615944, 0.042720958, 0.042824972, 0.042922986, 0.043025, 0.043126028, 0.043231014, 0.043334042...</msg>
<status status="PASS" starttime="20201110 08:33:40.055" endtime="20201110 08:33:40.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.095" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.093" endtime="20201110 08:33:40.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.101" level="INFO">VALUE: [9.076400000000012e-05, 9.011099999999689e-05, 9.059700000000476e-05, 9.025000000000005e-05, 9.059800000000423e-05, 9.05000000000003e-05, 9.05000000000003e-05, 9.045800000000159e-05, 9.069400000000227e-05, 9.059700000000476e-05, 9.034700000000451e-05, 9.034699999999757e-05, 9.061099999999739e-05, 9.069499999999481e-05, 9.034800000000398e-05, 9.058399999999772e-05, 9.019500000000125e-05, 9.047199999999422e-05, 9.069399999999533e-05, 9.073600000000098e-05, 9.041599999999594e-05, 9.084699999999807e-05, 9.034699999999757e-05, 9.097200000000166e-05, 9.034699999999757e-05, 9.009699999999732e-05, 9.086200000000405e-05, 9.034800000000398e-05, 9.07079999999949e-05, 9.011099999999689e-05, 9.086099999999764e-05, 9.097200000000166e-05, 9.079199999999926e-05, 9.045800000000159e-05, 9.023600000000048e-05, 9.0945000000002e-05, 9.015300000000254e-05, 9.095900000000157e-05, 9.097300000000114e-05, 9.097200000000166e-05, 9.097200000000166e-05, 9.047200000000116e-05, 9.069400000000227e-05, 9.072199999999447e-05, 9.073600000000098e-05, 9.097200000000166e-05, 9.047200000000116e-05, 9.058299999999825e-05, 9.047199999999422e-05, 9.06670000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:33:40.097" endtime="20201110 08:33:40.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.086" endtime="20201110 08:33:40.104"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.110" endtime="20201110 08:33:40.113"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.119" endtime="20201110 08:33:40.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.114" endtime="20201110 08:33:40.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.106" endtime="20201110 08:33:40.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.593" endtime="20201110 08:33:40.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:39.592" endtime="20201110 08:33:40.144"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.167" endtime="20201110 08:33:40.189"></status>
</kw>
<msg timestamp="20201110 08:33:40.190" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.164" endtime="20201110 08:33:40.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.192" endtime="20201110 08:33:40.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.199" endtime="20201110 08:33:40.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.157" endtime="20201110 08:33:40.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.151" endtime="20201110 08:33:40.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.222" endtime="20201110 08:33:40.579"></status>
</kw>
<msg timestamp="20201110 08:33:40.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041879986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:40.219" endtime="20201110 08:33:40.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0417885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041879986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:40.589" endtime="20201110 08:33:40.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.608" endtime="20201110 08:33:40.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.212" endtime="20201110 08:33:40.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.207" endtime="20201110 08:33:40.615"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:40.626" level="INFO">${RESULT} = [{'time': 0.041879986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.148600000000173e-05, 'source_diff': 9.148600000000173e-05}, {'time': 0.041983014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:40.617" endtime="20201110 08:33:40.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:40.659" level="INFO">${ACCURACY} = {'time': [0.041879986, 0.041983014, 0.042084014, 0.042184, 0.042288014, 0.042388028, 0.042490042, 0.042591056, 0.042690083, 0.042796069, 0.042902083, 0.043007111, 0.043111125, 0.043216125, 0.043316125...</msg>
<status status="PASS" starttime="20201110 08:33:40.628" endtime="20201110 08:33:40.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.671" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:33:40.668" endtime="20201110 08:33:40.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.676" level="INFO">VALUE: [9.148600000000173e-05, 9.112499999999746e-05, 9.122200000000191e-05, 9.145800000000259e-05, 9.180599999999983e-05, 9.195900000000257e-05, 9.158399999999872e-05, 9.172300000000189e-05, 9.186099999999864e-05, 9.181899999999993e-05, 9.170800000000284e-05, 9.136099999999814e-05, 9.198600000000223e-05, 9.172200000000241e-05, 9.169399999999633e-05, 9.109700000000526e-05, 9.161100000000533e-05, 9.172299999999495e-05, 9.152800000000044e-05, 9.169500000000275e-05, 9.1332999999999e-05, 9.119400000000277e-05, 9.136100000000508e-05, 9.122199999999497e-05, 9.134799999999804e-05, 9.186100000000558e-05, 9.184699999999907e-05, 9.111100000000483e-05, 9.108399999999822e-05, 9.1945000000003e-05, 9.186099999999864e-05, 9.134699999999857e-05, 9.198600000000223e-05, 9.133300000000594e-05, 9.179100000000079e-05, 9.159699999999882e-05, 9.194399999999658e-05, 9.149999999999436e-05, 9.137499999999771e-05, 9.106999999999865e-05, 9.183399999999897e-05, 9.109800000000473e-05, 9.136100000000508e-05, 9.198600000000223e-05, 9.120800000000234e-05, 9.156899999999968e-05, 9.119400000000277e-05, 9.158299999999925e-05, 9.134700000000551e-05, 9.18329999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:33:40.673" endtime="20201110 08:33:40.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.661" endtime="20201110 08:33:40.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.687" endtime="20201110 08:33:40.690"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:40.696" endtime="20201110 08:33:40.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.691" endtime="20201110 08:33:40.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.682" endtime="20201110 08:33:40.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.146" endtime="20201110 08:33:40.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.145" endtime="20201110 08:33:40.722"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.746" endtime="20201110 08:33:40.769"></status>
</kw>
<msg timestamp="20201110 08:33:40.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.743" endtime="20201110 08:33:40.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:40.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:40.772" endtime="20201110 08:33:40.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.778" endtime="20201110 08:33:40.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.734" endtime="20201110 08:33:40.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.729" endtime="20201110 08:33:40.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:40.802" endtime="20201110 08:33:41.153"></status>
</kw>
<msg timestamp="20201110 08:33:41.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043751167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:40.799" endtime="20201110 08:33:41.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043751167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.163" endtime="20201110 08:33:41.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.183" endtime="20201110 08:33:41.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.792" endtime="20201110 08:33:41.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.787" endtime="20201110 08:33:41.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.204" level="INFO">${RESULT} = [{'time': 0.043751167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.261099999999939e-05, 'source_diff': 9.261099999999939e-05}, {'time': 0.043852139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.194" endtime="20201110 08:33:41.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.237" level="INFO">${ACCURACY} = {'time': [0.043751167, 0.043852139, 0.043954153, 0.044060167, 0.044167194, 0.044274181, 0.044377208, 0.044480264, 0.044584222, 0.044685264, 0.04478925, 0.04489425, 0.044998264, 0.045098278, 0.04519929...</msg>
<status status="PASS" starttime="20201110 08:33:41.206" endtime="20201110 08:33:41.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.248" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.246" endtime="20201110 08:33:41.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.254" level="INFO">VALUE: [9.261099999999939e-05, 9.209699999999932e-05, 9.233399999999947e-05, 9.29729999999962e-05, 9.248600000000273e-05, 9.270900000000332e-05, 9.234699999999957e-05, 9.26529999999981e-05, 9.247200000000316e-05, 9.21250000000054e-05, 9.209699999999932e-05, 9.269399999999733e-05, 9.270800000000384e-05, 9.222199999999597e-05, 9.259799999999929e-05, 9.222300000000239e-05, 9.27079999999969e-05, 9.297199999999672e-05, 9.284700000000007e-05, 9.222199999999597e-05, 9.293000000000495e-05, 9.258300000000025e-05, 9.234699999999957e-05, 9.209699999999932e-05, 9.258399999999972e-05, 9.229199999999382e-05, 9.241700000000436e-05, 9.24859999999958e-05, 9.236099999999914e-05, 9.26659999999982e-05, 9.209699999999932e-05, 9.219399999999683e-05, 9.211099999999889e-05, 9.295799999999715e-05, 9.222199999999597e-05, 9.283399999999997e-05, 9.268100000000418e-05, 9.206999999999965e-05, 9.258399999999972e-05, 9.295800000000409e-05, 9.234699999999957e-05, 9.256900000000068e-05, 9.2333e-05, 9.261099999999939e-05, 9.218099999999674e-05, 9.222200000000291e-05, 9.206999999999965e-05, 9.245899999999613e-05, 9.261099999999939e-05, 9.273600000000298e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.251" endtime="20201110 08:33:41.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.239" endtime="20201110 08:33:41.258"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.264" endtime="20201110 08:33:41.267"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.273" endtime="20201110 08:33:41.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.269" endtime="20201110 08:33:41.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.260" endtime="20201110 08:33:41.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.724" endtime="20201110 08:33:41.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:40.723" endtime="20201110 08:33:41.300"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.324" endtime="20201110 08:33:41.347"></status>
</kw>
<msg timestamp="20201110 08:33:41.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.321" endtime="20201110 08:33:41.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.351" endtime="20201110 08:33:41.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.358" endtime="20201110 08:33:41.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.313" endtime="20201110 08:33:41.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.307" endtime="20201110 08:33:41.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.382" endtime="20201110 08:33:41.740"></status>
</kw>
<msg timestamp="20201110 08:33:41.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044585792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044679431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.379" endtime="20201110 08:33:41.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044585792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044679431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.750" endtime="20201110 08:33:41.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.770" endtime="20201110 08:33:41.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.371" endtime="20201110 08:33:41.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.366" endtime="20201110 08:33:41.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:41.790" level="INFO">${RESULT} = [{'time': 0.044679431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.363899999999953e-05, 'source_diff': 9.363899999999953e-05}, {'time': 0.044780458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:41.780" endtime="20201110 08:33:41.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:41.823" level="INFO">${ACCURACY} = {'time': [0.044679431, 0.044780458, 0.044883417, 0.044988417, 0.045094431, 0.045201444, 0.045306458, 0.045413472, 0.045514472, 0.0456155, 0.0457175, 0.045825514, 0.045932528, 0.046039542, 0.046140542,...</msg>
<status status="PASS" starttime="20201110 08:33:41.792" endtime="20201110 08:33:41.823"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.834" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:33:41.832" endtime="20201110 08:33:41.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.840" level="INFO">VALUE: [9.363899999999953e-05, 9.327700000000272e-05, 9.347300000000364e-05, 9.38200000000014e-05, 9.322299999999645e-05, 9.345799999999765e-05, 9.372199999999747e-05, 9.302800000000194e-05, 9.330500000000186e-05, 9.322200000000391e-05, 9.397199999999772e-05, 9.372199999999747e-05, 9.334700000000057e-05, 9.334800000000004e-05, 9.343099999999799e-05, 9.349999999999636e-05, 9.341700000000536e-05, 9.347200000000416e-05, 9.344399999999808e-05, 9.37079999999979e-05, 9.358300000000125e-05, 9.39859999999973e-05, 9.3333000000001e-05, 9.359700000000082e-05, 9.336199999999961e-05, 9.308400000000022e-05, 9.345799999999765e-05, 9.334700000000057e-05, 9.372200000000441e-05, 9.347199999999722e-05, 9.331900000000143e-05, 9.384700000000107e-05, 9.361100000000039e-05, 9.387500000000021e-05, 9.359700000000082e-05, 9.323699999999602e-05, 9.309799999999979e-05, 9.319499999999731e-05, 9.387500000000021e-05, 9.372200000000441e-05, 9.33609999999932e-05, 9.395799999999815e-05, 9.3333000000001e-05, 9.397199999999772e-05, 9.395799999999815e-05, 9.359700000000082e-05, 9.333400000000047e-05, 9.334700000000057e-05, 9.369499999999781e-05, 9.359700000000082e-05]</msg>
<status status="PASS" starttime="20201110 08:33:41.837" endtime="20201110 08:33:41.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.825" endtime="20201110 08:33:41.844"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.850" endtime="20201110 08:33:41.853"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:41.859" endtime="20201110 08:33:41.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.855" endtime="20201110 08:33:41.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.846" endtime="20201110 08:33:41.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.302" endtime="20201110 08:33:41.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.301" endtime="20201110 08:33:41.886"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.910" endtime="20201110 08:33:41.933"></status>
</kw>
<msg timestamp="20201110 08:33:41.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.907" endtime="20201110 08:33:41.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:41.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:41.937" endtime="20201110 08:33:41.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.943" endtime="20201110 08:33:41.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.899" endtime="20201110 08:33:41.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.893" endtime="20201110 08:33:41.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:41.969" endtime="20201110 08:33:42.326"></status>
</kw>
<msg timestamp="20201110 08:33:42.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044251458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044346278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:41.965" endtime="20201110 08:33:42.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044251458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044346278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.336" endtime="20201110 08:33:42.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.356" endtime="20201110 08:33:42.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.957" endtime="20201110 08:33:42.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.952" endtime="20201110 08:33:42.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.374" level="INFO">${RESULT} = [{'time': 0.044346278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.48200000000024e-05, 'source_diff': 9.48200000000024e-05}, {'time': 0.044451264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:42.365" endtime="20201110 08:33:42.375"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.405" level="INFO">${ACCURACY} = {'time': [0.044346278, 0.044451264, 0.044558278, 0.044660292, 0.044769375, 0.044871319, 0.044978361, 0.045080333, 0.045184347, 0.045288361, 0.045393458, 0.045499389, 0.045601403, 0.045707417, 0.045816...</msg>
<status status="PASS" starttime="20201110 08:33:42.376" endtime="20201110 08:33:42.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.416" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.414" endtime="20201110 08:33:42.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.421" level="INFO">VALUE: [9.48200000000024e-05, 9.495799999999915e-05, 9.420899999999788e-05, 9.445899999999813e-05, 9.466699999999967e-05, 9.422199999999797e-05, 9.437500000000071e-05, 9.4333000000002e-05, 9.434700000000157e-05, 9.48330000000025e-05, 9.430499999999592e-05, 9.447199999999822e-05, 9.43059999999954e-05, 9.479200000000326e-05, 9.483399999999503e-05, 9.472300000000489e-05, 9.422199999999797e-05, 9.465200000000062e-05, 9.434700000000157e-05, 9.490300000000035e-05, 9.49859999999983e-05, 9.472200000000541e-05, 9.461100000000139e-05, 9.433400000000147e-05, 9.437500000000071e-05, 9.422299999999745e-05, 9.459800000000129e-05, 9.472199999999847e-05, 9.484699999999513e-05, 9.46530000000001e-05, 9.458300000000225e-05, 9.455600000000258e-05, 9.484700000000207e-05, 9.424999999999711e-05, 9.484699999999513e-05, 9.436199999999367e-05, 9.412500000000046e-05, 9.466699999999967e-05, 9.48330000000025e-05, 9.468099999999924e-05, 9.422200000000491e-05, 9.422199999999797e-05, 9.433299999999506e-05, 9.41529999999996e-05, 9.497199999999872e-05, 9.459699999999488e-05, 9.445900000000507e-05, 9.418100000000568e-05, 9.420899999999788e-05, 9.473599999999804e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.418" endtime="20201110 08:33:42.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.407" endtime="20201110 08:33:42.424"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.431" endtime="20201110 08:33:42.433"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:42.439" endtime="20201110 08:33:42.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.435" endtime="20201110 08:33:42.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.426" endtime="20201110 08:33:42.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.888" endtime="20201110 08:33:42.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:41.887" endtime="20201110 08:33:42.465"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.487" endtime="20201110 08:33:42.510"></status>
</kw>
<msg timestamp="20201110 08:33:42.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.484" endtime="20201110 08:33:42.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:42.513" endtime="20201110 08:33:42.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.519" endtime="20201110 08:33:42.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.477" endtime="20201110 08:33:42.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.471" endtime="20201110 08:33:42.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.543" endtime="20201110 08:33:42.887"></status>
</kw>
<msg timestamp="20201110 08:33:42.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041977417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.539" endtime="20201110 08:33:42.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.915" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041977417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:42.897" endtime="20201110 08:33:42.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:42.918" endtime="20201110 08:33:42.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.532" endtime="20201110 08:33:42.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.527" endtime="20201110 08:33:42.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:42.938" level="INFO">${RESULT} = [{'time': 0.041977417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.545900000000607e-05, 'source_diff': 9.545900000000607e-05}, {'time': 0.042083431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:42.928" endtime="20201110 08:33:42.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:42.973" level="INFO">${ACCURACY} = {'time': [0.041977417, 0.042083431, 0.042187444, 0.042292458, 0.042402486, 0.042505486, 0.042611486, 0.042715514, 0.042822514, 0.042928583, 0.043037556, 0.043147556, 0.043255569, 0.043366569, 0.043470...</msg>
<status status="PASS" starttime="20201110 08:33:42.940" endtime="20201110 08:33:42.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.985" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:33:42.982" endtime="20201110 08:33:42.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:42.991" level="INFO">VALUE: [9.545900000000607e-05, 9.508399999999528e-05, 9.584699999999613e-05, 9.547199999999922e-05, 9.544400000000008e-05, 9.522199999999897e-05, 9.595800000000015e-05, 9.572200000000641e-05, 9.534699999999563e-05, 9.540200000000137e-05, 9.598699999999877e-05, 9.583399999999603e-05, 9.597199999999972e-05, 9.595800000000015e-05, 9.597199999999972e-05, 9.605600000000408e-05, 9.597199999999972e-05, 9.584700000000307e-05, 9.508299999999581e-05, 9.545899999999913e-05, 9.59729999999992e-05, 9.534800000000204e-05, 9.536100000000214e-05, 9.534700000000257e-05, 9.572199999999947e-05, 9.545800000000659e-05, 9.536100000000214e-05, 9.536100000000214e-05, 9.586100000000264e-05, 9.597199999999972e-05, 9.53200000000029e-05, 9.559699999999588e-05, 9.533400000000247e-05, 9.533400000000247e-05, 9.52079999999994e-05, 9.53609999999952e-05, 9.57079999999999e-05, 9.508300000000275e-05, 9.524999999999811e-05, 9.533299999999606e-05, 9.602700000000547e-05, 9.558400000000272e-05, 9.533400000000247e-05, 9.558400000000272e-05, 9.508400000000222e-05, 9.533299999999606e-05, 9.597199999999972e-05, 9.572199999999947e-05, 9.583299999999656e-05, 9.534699999999563e-05]</msg>
<status status="PASS" starttime="20201110 08:33:42.987" endtime="20201110 08:33:42.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.975" endtime="20201110 08:33:42.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.002" endtime="20201110 08:33:43.005"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.011" endtime="20201110 08:33:43.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.006" endtime="20201110 08:33:43.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.997" endtime="20201110 08:33:43.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.467" endtime="20201110 08:33:43.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:42.466" endtime="20201110 08:33:43.037"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.064" endtime="20201110 08:33:43.088"></status>
</kw>
<msg timestamp="20201110 08:33:43.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.060" endtime="20201110 08:33:43.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.091" endtime="20201110 08:33:43.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.098" endtime="20201110 08:33:43.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.051" endtime="20201110 08:33:43.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.044" endtime="20201110 08:33:43.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.123" endtime="20201110 08:33:43.482"></status>
</kw>
<msg timestamp="20201110 08:33:43.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047273319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047369472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.120" endtime="20201110 08:33:43.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047273319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047369472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.492" endtime="20201110 08:33:43.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.512" endtime="20201110 08:33:43.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.112" endtime="20201110 08:33:43.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.107" endtime="20201110 08:33:43.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:43.531" level="INFO">${RESULT} = [{'time': 0.047369472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.61530000000016e-05, 'source_diff': 9.61530000000016e-05}, {'time': 0.047476458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:43.521" endtime="20201110 08:33:43.531"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:43.565" level="INFO">${ACCURACY} = {'time': [0.047369472, 0.047476458, 0.0475805, 0.0476865, 0.0477925, 0.047900556, 0.048007528, 0.048118556, 0.048227542, 0.048337569, 0.048446569, 0.048552583, 0.048656639, 0.048767611, 0.048875667, 0...</msg>
<status status="PASS" starttime="20201110 08:33:43.533" endtime="20201110 08:33:43.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.577" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:33:43.575" endtime="20201110 08:33:43.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.583" level="INFO">VALUE: [9.61530000000016e-05, 9.651399999999893e-05, 9.654199999999807e-05, 9.68609999999967e-05, 9.651399999999893e-05, 9.669499999999387e-05, 9.626399999999868e-05, 9.679199999999832e-05, 9.695900000000063e-05, 9.613799999999562e-05, 9.613800000000255e-05, 9.627700000000572e-05, 9.657000000000415e-05, 9.638900000000228e-05, 9.694500000000106e-05, 9.651399999999893e-05, 9.7027999999999e-05, 9.676399999999918e-05, 9.640300000000185e-05, 9.616599999999476e-05, 9.690199999999594e-05, 9.68880000000033e-05, 9.690199999999594e-05, 9.676399999999918e-05, 9.690300000000235e-05, 9.65279999999985e-05, 9.706900000000518e-05, 9.701399999999943e-05, 9.633299999999706e-05, 9.688900000000278e-05, 9.690300000000235e-05, 9.626299999999921e-05, 9.652699999999903e-05, 9.688899999999584e-05, 9.616700000000117e-05, 9.688899999999584e-05, 9.654200000000501e-05, 9.618100000000074e-05, 9.652800000000544e-05, 9.611100000000289e-05, 9.638900000000228e-05, 9.70409999999991e-05, 9.641600000000194e-05, 9.688899999999584e-05, 9.63059999999974e-05, 9.627799999999825e-05, 9.66809999999943e-05, 9.638899999999534e-05, 9.67080000000009e-05, 9.656899999999774e-05]</msg>
<status status="PASS" starttime="20201110 08:33:43.579" endtime="20201110 08:33:43.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.567" endtime="20201110 08:33:43.586"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.593" endtime="20201110 08:33:43.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:43.602" endtime="20201110 08:33:43.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.597" endtime="20201110 08:33:43.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.588" endtime="20201110 08:33:43.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.039" endtime="20201110 08:33:43.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.038" endtime="20201110 08:33:43.628"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.653" endtime="20201110 08:33:43.676"></status>
</kw>
<msg timestamp="20201110 08:33:43.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.649" endtime="20201110 08:33:43.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:43.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:43.680" endtime="20201110 08:33:43.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.686" endtime="20201110 08:33:43.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.641" endtime="20201110 08:33:43.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.635" endtime="20201110 08:33:43.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:43.709" endtime="20201110 08:33:44.042"></status>
</kw>
<msg timestamp="20201110 08:33:44.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044332736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044430708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:43.708" endtime="20201110 08:33:44.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044332736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044430708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.053" endtime="20201110 08:33:44.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.072" endtime="20201110 08:33:44.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.700" endtime="20201110 08:33:44.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.695" endtime="20201110 08:33:44.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.091" level="INFO">${RESULT} = [{'time': 0.044430708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.797200000000172e-05, 'source_diff': 9.797200000000172e-05}, {'time': 0.04453975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:33:44.081" endtime="20201110 08:33:44.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.126" level="INFO">${ACCURACY} = {'time': [0.044430708, 0.04453975, 0.044650736, 0.044759764, 0.044870764, 0.044980792, 0.045091861, 0.045196806, 0.045304806, 0.045411861, 0.045518833, 0.045630847, 0.045738861, 0.045849861, 0.0459588...</msg>
<status status="PASS" starttime="20201110 08:33:44.093" endtime="20201110 08:33:44.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.137" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.135" endtime="20201110 08:33:44.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.143" level="INFO">VALUE: [9.797200000000172e-05, 9.718100000000174e-05, 9.797200000000172e-05, 9.773600000000104e-05, 9.708299999999781e-05, 9.723600000000054e-05, 9.787499999999727e-05, 9.78479999999976e-05, 9.74730000000007e-05, 9.751399999999993e-05, 9.797200000000172e-05, 9.797200000000172e-05, 9.797200000000172e-05, 9.758299999999831e-05, 9.797200000000172e-05, 9.733299999999806e-05, 9.795900000000163e-05, 9.734800000000404e-05, 9.761099999999745e-05, 9.795899999999469e-05, 9.776400000000018e-05, 9.722200000000097e-05, 9.79860000000013e-05, 9.759699999999788e-05, 9.773600000000104e-05, 9.708299999999781e-05, 9.795800000000215e-05, 9.733399999999753e-05, 9.74730000000007e-05, 9.716700000000217e-05, 9.711099999999695e-05, 9.73609999999972e-05, 9.72080000000014e-05, 9.758299999999831e-05, 9.80410000000001e-05, 9.77080000000019e-05, 9.711100000000389e-05, 9.773600000000104e-05, 9.709800000000379e-05, 9.776400000000018e-05, 9.734700000000457e-05, 9.747200000000122e-05, 9.775000000000061e-05, 9.708299999999781e-05, 9.755499999999917e-05, 9.725000000000011e-05, 9.72080000000014e-05, 9.722199999999404e-05, 9.783399999999803e-05, 9.786199999999717e-05]</msg>
<status status="PASS" starttime="20201110 08:33:44.140" endtime="20201110 08:33:44.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.127" endtime="20201110 08:33:44.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.153" endtime="20201110 08:33:44.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.162" endtime="20201110 08:33:44.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.158" endtime="20201110 08:33:44.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.149" endtime="20201110 08:33:44.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.631" endtime="20201110 08:33:44.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:43.629" endtime="20201110 08:33:44.189"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.214" endtime="20201110 08:33:44.237"></status>
</kw>
<msg timestamp="20201110 08:33:44.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.210" endtime="20201110 08:33:44.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.240" endtime="20201110 08:33:44.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.247" endtime="20201110 08:33:44.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.202" endtime="20201110 08:33:44.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.196" endtime="20201110 08:33:44.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.272" endtime="20201110 08:33:44.625"></status>
</kw>
<msg timestamp="20201110 08:33:44.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044685292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.268" endtime="20201110 08:33:44.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044586972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044685292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.634" endtime="20201110 08:33:44.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.653" endtime="20201110 08:33:44.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.261" endtime="20201110 08:33:44.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.256" endtime="20201110 08:33:44.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:44.671" level="INFO">${RESULT} = [{'time': 0.044685292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.831999999999896e-05, 'source_diff': 9.831999999999896e-05}, {'time': 0.044797292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:44.662" endtime="20201110 08:33:44.671"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:44.703" level="INFO">${ACCURACY} = {'time': [0.044685292, 0.044797292, 0.044906306, 0.045014319, 0.045121319, 0.045228333, 0.045340361, 0.045447361, 0.045557375, 0.045667389, 0.045774403, 0.045886403, 0.045993417, 0.046106431, 0.046217...</msg>
<status status="PASS" starttime="20201110 08:33:44.673" endtime="20201110 08:33:44.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.714" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:33:44.712" endtime="20201110 08:33:44.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.719" level="INFO">VALUE: [9.831999999999896e-05, 9.808400000000522e-05, 9.83479999999981e-05, 9.809699999999838e-05, 9.869400000000333e-05, 9.895800000000315e-05, 9.886100000000564e-05, 9.895799999999622e-05, 9.808299999999881e-05, 9.82080000000024e-05, 9.884699999999913e-05, 9.829199999999982e-05, 9.89730000000022e-05, 9.89730000000022e-05, 9.872200000000247e-05, 9.808299999999881e-05, 9.895799999999622e-05, 9.894399999999665e-05, 9.82080000000024e-05, 9.847200000000222e-05, 9.866700000000367e-05, 9.819500000000231e-05, 9.861199999999792e-05, 9.859799999999835e-05, 9.858299999999931e-05, 9.834699999999863e-05, 9.895799999999622e-05, 9.884699999999913e-05, 9.881899999999999e-05, 9.861100000000539e-05, 9.859700000000582e-05, 9.894499999999612e-05, 9.88479999999986e-05, 9.83479999999981e-05, 9.872199999999554e-05, 9.845800000000265e-05, 9.856899999999974e-05, 9.848599999999486e-05, 9.863899999999759e-05, 9.808299999999881e-05, 9.822200000000197e-05, 9.872200000000247e-05, 9.884699999999913e-05, 9.809799999999785e-05, 9.813900000000403e-05, 9.859700000000582e-05, 9.880500000000042e-05, 9.87080000000029e-05, 9.816599999999676e-05, 9.858299999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:33:44.716" endtime="20201110 08:33:44.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.705" endtime="20201110 08:33:44.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.729" endtime="20201110 08:33:44.732"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:44.738" endtime="20201110 08:33:44.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.733" endtime="20201110 08:33:44.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.724" endtime="20201110 08:33:44.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.191" endtime="20201110 08:33:44.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.190" endtime="20201110 08:33:44.764"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.793" endtime="20201110 08:33:44.818"></status>
</kw>
<msg timestamp="20201110 08:33:44.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.790" endtime="20201110 08:33:44.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:44.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:44.821" endtime="20201110 08:33:44.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.828" endtime="20201110 08:33:44.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.776" endtime="20201110 08:33:44.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.770" endtime="20201110 08:33:44.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:44.852" endtime="20201110 08:33:45.190"></status>
</kw>
<msg timestamp="20201110 08:33:45.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049459986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049560014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:44.848" endtime="20201110 08:33:45.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049459986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049560014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.200" endtime="20201110 08:33:45.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.218" endtime="20201110 08:33:45.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.841" endtime="20201110 08:33:45.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.836" endtime="20201110 08:33:45.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.236" level="INFO">${RESULT} = [{'time': 0.049560014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000100028000000002, 'source_diff': 0.000100028000000002}, {'time': 0.049670014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:45.227" endtime="20201110 08:33:45.236"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.270" level="INFO">${ACCURACY} = {'time': [0.049560014, 0.049670014, 0.049784028, 0.049894056, 0.050006056, 0.050120111, 0.050227111, 0.050334111, 0.050447139, 0.050560125, 0.050669153, 0.050782139, 0.050894153, 0.051002181, 0.051110...</msg>
<status status="PASS" starttime="20201110 08:33:45.238" endtime="20201110 08:33:45.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.281" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.279" endtime="20201110 08:33:45.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.286" level="INFO">VALUE: [0.000100028000000002, 9.970799999999697e-05, 9.909699999999938e-05, 9.923700000000202e-05, 9.98479999999996e-05, 9.951400000000193e-05, 9.97359999999961e-05, 9.911099999999895e-05, 9.937499999999877e-05, 9.959699999999988e-05, 9.945900000000313e-05, 9.905600000000014e-05, 9.954199999999414e-05, 9.99730000000032e-05, 9.93479999999991e-05, 9.983400000000003e-05, 9.970799999999697e-05, 9.941600000000494e-05, 9.959699999999988e-05, 9.963899999999859e-05, 9.995800000000415e-05, 9.947200000000322e-05, 9.911099999999895e-05, 9.922300000000245e-05, 9.958399999999978e-05, 9.998599999999636e-05, 9.973600000000304e-05, 9.934699999999963e-05, 9.998599999999636e-05, 9.972199999999654e-05, 9.922199999999604e-05, 9.984700000000013e-05, 9.945800000000365e-05, 9.909700000000632e-05, 9.908399999999928e-05, 9.979200000000132e-05, 9.934699999999963e-05, 9.945800000000365e-05, 9.966599999999826e-05, 9.959699999999988e-05, 9.934699999999963e-05, 9.984700000000013e-05, 9.93609999999992e-05, 9.934800000000604e-05, 9.920899999999594e-05, 9.995900000000363e-05, 9.952700000000203e-05, 0.00010004200000000157, 9.94860000000028e-05, 9.911099999999895e-05]</msg>
<status status="PASS" starttime="20201110 08:33:45.283" endtime="20201110 08:33:45.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.272" endtime="20201110 08:33:45.289"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.296" endtime="20201110 08:33:45.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.304" endtime="20201110 08:33:45.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.300" endtime="20201110 08:33:45.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.291" endtime="20201110 08:33:45.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.766" endtime="20201110 08:33:45.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:44.765" endtime="20201110 08:33:45.330"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.352" endtime="20201110 08:33:45.375"></status>
</kw>
<msg timestamp="20201110 08:33:45.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.349" endtime="20201110 08:33:45.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.378" endtime="20201110 08:33:45.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.385" endtime="20201110 08:33:45.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.342" endtime="20201110 08:33:45.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.336" endtime="20201110 08:33:45.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.408" endtime="20201110 08:33:45.741"></status>
</kw>
<msg timestamp="20201110 08:33:45.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:45.405" endtime="20201110 08:33:45.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0416765, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041777347, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:33:45.750" endtime="20201110 08:33:45.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.769" endtime="20201110 08:33:45.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.397" endtime="20201110 08:33:45.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.393" endtime="20201110 08:33:45.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:45.786" level="INFO">${RESULT} = [{'time': 0.041777347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010084700000000113, 'source_diff': 0.00010084700000000113}, {'time': 0.041890361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:45.777" endtime="20201110 08:33:45.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:45.816" level="INFO">${ACCURACY} = {'time': [0.041777347, 0.041890361, 0.042003389, 0.042111389, 0.042222458, 0.042331403, 0.042440431, 0.042553444, 0.042666444, 0.042775458, 0.042883472, 0.0429935, 0.0431055, 0.0432145, 0.043323528, 0...</msg>
<status status="PASS" starttime="20201110 08:33:45.788" endtime="20201110 08:33:45.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.829" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:33:45.826" endtime="20201110 08:33:45.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.835" level="INFO">VALUE: [0.00010084700000000113, 0.00010022200000000397, 0.00010073600000000404, 0.00010083300000000156, 0.00010015199999999919, 0.00010069499999999787, 0.00010033400000000053, 0.00010084700000000113, 0.00010022199999999704, 0.00010077700000000328, 0.00010072199999999754, 0.0001005689999999948, 0.00010022199999999704, 0.00010081900000000199, 0.00010097199999999779, 0.00010059700000000088, 0.00010059800000000035, 0.00010050000000000336, 0.00010045799999999772, 0.00010098599999999736, 0.000101028000000003, 0.00010095799999999822, 0.00010022199999999704, 0.00010072199999999754, 0.00010072199999999754, 0.00010047199999999729, 0.00010045899999999719, 0.00010082000000000146, 0.00010077699999999634, 0.00010055500000000217, 0.00010034700000000063, 0.00010034700000000063, 0.00010005499999999473, 0.00010072200000000447, 0.00010072199999999754, 0.00010059700000000088, 0.00010019500000000431, 0.00010070899999999744, 0.00010032000000000096, 0.00010058300000000131, 0.00010008299999999387, 0.00010061100000000045, 0.00010038899999999934, 0.00010072199999999754, 0.00010047199999999729, 0.00010044499999999762, 0.00010079099999999591, 0.00010065299999999916, 0.00010061100000000045, 0.00010097199999999779]</msg>
<status status="PASS" starttime="20201110 08:33:45.831" endtime="20201110 08:33:45.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.818" endtime="20201110 08:33:45.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.845" endtime="20201110 08:33:45.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:45.853" endtime="20201110 08:33:45.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.849" endtime="20201110 08:33:45.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.840" endtime="20201110 08:33:45.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.332" endtime="20201110 08:33:45.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.330" endtime="20201110 08:33:45.879"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.902" endtime="20201110 08:33:45.925"></status>
</kw>
<msg timestamp="20201110 08:33:45.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.899" endtime="20201110 08:33:45.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:45.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:45.928" endtime="20201110 08:33:45.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.934" endtime="20201110 08:33:45.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.891" endtime="20201110 08:33:45.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.886" endtime="20201110 08:33:45.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:45.957" endtime="20201110 08:33:46.290"></status>
</kw>
<msg timestamp="20201110 08:33:46.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041687958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041789319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:45.954" endtime="20201110 08:33:46.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041687958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041789319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.300" endtime="20201110 08:33:46.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.318" endtime="20201110 08:33:46.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.947" endtime="20201110 08:33:46.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.942" endtime="20201110 08:33:46.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.335" level="INFO">${RESULT} = [{'time': 0.041789319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001013610000000012, 'source_diff': 0.0001013610000000012}, {'time': 0.041898333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:46.327" endtime="20201110 08:33:46.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.366" level="INFO">${ACCURACY} = {'time': [0.041789319, 0.041898333, 0.042013347, 0.042129347, 0.042243361, 0.042353375, 0.042465375, 0.042574389, 0.042684417, 0.042797431, 0.042909444, 0.043022444, 0.043138458, 0.043251458, 0.043367...</msg>
<status status="PASS" starttime="20201110 08:33:46.338" endtime="20201110 08:33:46.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.377" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.375" endtime="20201110 08:33:46.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.382" level="INFO">VALUE: [0.0001013610000000012, 0.00010184700000000213, 0.00010198599999999836, 0.00010172199999999854, 0.00010183300000000256, 0.00010108300000000181, 0.00010120799999999847, 0.00010170799999999897, 0.0001013610000000012, 0.0001015559999999957, 0.0001017359999999981, 0.00010122199999999804, 0.00010134699999999469, 0.00010183300000000256, 0.00010158299999999537, 0.0001011939999999989, 0.00010145799999999872, 0.00010122199999999804, 0.00010127699999999684, 0.00010122299999999751, 0.00010159800000000135, 0.00010142999999999958, 0.0001016939999999994, 0.00010108300000000181, 0.00010184700000000213, 0.00010147199999999829, 0.00010158299999999537, 0.00010184700000000213, 0.00010169499999999887, 0.00010147299999999776, 0.00010144499999999862, 0.00010108400000000128, 0.00010109700000000138, 0.00010133300000000206, 0.00010122199999999804, 0.00010109700000000138, 0.00010183300000000256, 0.00010111099999999401, 0.00010177800000000375, 0.00010145899999999819, 0.00010198699999999783, 0.00010104200000000257, 0.0001012359999999976, 0.00010194399999999965, 0.00010198599999999836, 0.00010109700000000138, 0.00010147200000000522, 0.00010159700000000188, 0.00010194499999999912, 0.00010172199999999854]</msg>
<status status="PASS" starttime="20201110 08:33:46.379" endtime="20201110 08:33:46.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.368" endtime="20201110 08:33:46.387"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.393" endtime="20201110 08:33:46.396"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.401" endtime="20201110 08:33:46.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.397" endtime="20201110 08:33:46.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.389" endtime="20201110 08:33:46.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.881" endtime="20201110 08:33:46.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:45.880" endtime="20201110 08:33:46.427"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.450" endtime="20201110 08:33:46.474"></status>
</kw>
<msg timestamp="20201110 08:33:46.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.446" endtime="20201110 08:33:46.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.481" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:46.477" endtime="20201110 08:33:46.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.483" endtime="20201110 08:33:46.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.439" endtime="20201110 08:33:46.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.433" endtime="20201110 08:33:46.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.507" endtime="20201110 08:33:46.843"></status>
</kw>
<msg timestamp="20201110 08:33:46.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041745958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041848056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.503" endtime="20201110 08:33:46.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041745958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041848056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:46.852" endtime="20201110 08:33:46.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.871" endtime="20201110 08:33:46.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.496" endtime="20201110 08:33:46.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.491" endtime="20201110 08:33:46.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:46.889" level="INFO">${RESULT} = [{'time': 0.041848056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010209800000000185, 'source_diff': 0.00010209800000000185}, {'time': 0.041964069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:46.880" endtime="20201110 08:33:46.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:46.920" level="INFO">${ACCURACY} = {'time': [0.041848056, 0.041964069, 0.042077097, 0.042189111, 0.042301125, 0.042411111, 0.042525139, 0.042638139, 0.042748181, 0.042862167, 0.042974181, 0.04308725, 0.043200208, 0.043313208, 0.0434242...</msg>
<status status="PASS" starttime="20201110 08:33:46.891" endtime="20201110 08:33:46.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.931" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:33:46.928" endtime="20201110 08:33:46.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:46.936" level="INFO">VALUE: [0.00010209800000000185, 0.00010283299999999662, 0.00010247199999999929, 0.0001023610000000022, 0.00010272199999999954, 0.00010254200000000407, 0.00010233300000000306, 0.00010297199999999979, 0.00010237500000000177, 0.00010222299999999851, 0.00010208400000000228, 0.00010277799999999782, 0.00010202699999999759, 0.00010294400000000065, 0.00010247199999999929, 0.00010270799999999997, 0.00010283300000000356, 0.00010298599999999936, 0.00010272199999999954, 0.00010220899999999894, 0.00010227799999999732, 0.00010270799999999997, 0.00010283299999999662, 0.0001025689999999968, 0.00010287499999999533, 0.00010286099999999576, 0.00010270799999999997, 0.00010222200000000597, 0.00010297199999999979, 0.00010255600000000364, 0.00010272299999999901, 0.00010209700000000238, 0.00010247199999999929, 0.00010258300000000331, 0.00010259700000000288, 0.00010272199999999954, 0.00010208300000000281, 0.00010209700000000238, 0.00010261099999999551, 0.00010212499999999458, 0.0001030139999999985, 0.00010247199999999929, 0.00010272199999999954, 0.00010298599999999936, 0.00010248599999999886, 0.00010261099999999551, 0.00010258299999999637, 0.00010208300000000281, 0.0001028339999999961, 0.00010241700000000048]</msg>
<status status="PASS" starttime="20201110 08:33:46.933" endtime="20201110 08:33:46.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.922" endtime="20201110 08:33:46.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:46.946" endtime="20201110 08:33:46.950"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:46.955" endtime="20201110 08:33:46.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.951" endtime="20201110 08:33:46.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.941" endtime="20201110 08:33:46.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.429" endtime="20201110 08:33:46.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.428" endtime="20201110 08:33:46.981"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.004" endtime="20201110 08:33:47.027"></status>
</kw>
<msg timestamp="20201110 08:33:47.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.001" endtime="20201110 08:33:47.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.031" endtime="20201110 08:33:47.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.037" endtime="20201110 08:33:47.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.993" endtime="20201110 08:33:47.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.988" endtime="20201110 08:33:47.044"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.060" endtime="20201110 08:33:47.403"></status>
</kw>
<msg timestamp="20201110 08:33:47.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042201306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042305139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.057" endtime="20201110 08:33:47.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042201306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042305139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.413" endtime="20201110 08:33:47.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.431" endtime="20201110 08:33:47.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.050" endtime="20201110 08:33:47.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.045" endtime="20201110 08:33:47.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.448" level="INFO">${RESULT} = [{'time': 0.042305139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010383299999999762, 'source_diff': 0.00010383299999999762}, {'time': 0.042423139, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:47.439" endtime="20201110 08:33:47.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.481" level="INFO">${ACCURACY} = {'time': [0.042305139, 0.042423139, 0.042539153, 0.042651181, 0.042762194, 0.042880208, 0.042997208, 0.043112208, 0.043226222, 0.043342236, 0.043457264, 0.043575264, 0.043692278, 0.043808292, 0.043926...</msg>
<status status="PASS" starttime="20201110 08:33:47.450" endtime="20201110 08:33:47.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.492" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.489" endtime="20201110 08:33:47.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.497" level="INFO">VALUE: [0.00010383299999999762, 0.00010395800000000122, 0.00010359700000000388, 0.0001034730000000067, 0.00010345800000000072, 0.0001033610000000032, 0.00010384700000000413, 0.00010381899999999805, 0.00010347200000000029, 0.00010359699999999694, 0.00010345800000000072, 0.00010308300000000381, 0.00010319500000000037, 0.0001038339999999971, 0.00010309799999999592, 0.00010372200000000054, 0.00010358300000000431, 0.00010390200000000294, 0.00010347200000000029, 0.00010399999999999993, 0.0001036810000000013, 0.00010309700000000338, 0.00010322299999999951, 0.00010309799999999592, 0.00010308400000000328, 0.00010372200000000054, 0.00010308300000000381, 0.00010372200000000054, 0.00010334699999999669, 0.00010340299999999497, 0.00010322200000000004, 0.00010384700000000413, 0.00010348699999999933, 0.00010361199999999599, 0.00010370900000000044, 0.00010325000000000611, 0.00010333300000000406, 0.00010384699999999719, 0.00010383299999999762, 0.00010391700000000198, 0.00010322200000000004, 0.00010349999999999943, 0.00010358400000000378, 0.0001040139999999995, 0.00010356999999999728, 0.00010331899999999755, 0.00010361099999999651, 0.00010397200000000079, 0.00010372200000000054, 0.00010397200000000079]</msg>
<status status="PASS" starttime="20201110 08:33:47.494" endtime="20201110 08:33:47.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.483" endtime="20201110 08:33:47.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.507" endtime="20201110 08:33:47.509"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:47.515" endtime="20201110 08:33:47.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.510" endtime="20201110 08:33:47.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.502" endtime="20201110 08:33:47.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.983" endtime="20201110 08:33:47.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:46.982" endtime="20201110 08:33:47.542"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.559" endtime="20201110 08:33:47.579"></status>
</kw>
<msg timestamp="20201110 08:33:47.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.558" endtime="20201110 08:33:47.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:47.581" endtime="20201110 08:33:47.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.583" endtime="20201110 08:33:47.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.554" endtime="20201110 08:33:47.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.549" endtime="20201110 08:33:47.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.594" endtime="20201110 08:33:47.907"></status>
</kw>
<msg timestamp="20201110 08:33:47.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036255056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036359222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.593" endtime="20201110 08:33:47.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036255056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036359222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:47.916" endtime="20201110 08:33:47.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:47.935" endtime="20201110 08:33:47.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.589" endtime="20201110 08:33:47.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.587" endtime="20201110 08:33:47.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:47.952" level="INFO">${RESULT} = [{'time': 0.036359222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010416599999999582, 'source_diff': 0.00010416599999999582}, {'time': 0.036477167, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:47.943" endtime="20201110 08:33:47.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:47.982" level="INFO">${ACCURACY} = {'time': [0.036359222, 0.036477167, 0.036593167, 0.036706208, 0.036824194, 0.036939208, 0.037055222, 0.037173236, 0.03729225, 0.037411264, 0.037525278, 0.037643292, 0.037759347, 0.037871333, 0.0379853...</msg>
<status status="PASS" starttime="20201110 08:33:47.954" endtime="20201110 08:33:47.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.993" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:33:47.991" endtime="20201110 08:33:47.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:47.999" level="INFO">VALUE: [0.00010416599999999582, 0.00010472300000000101, 0.00010457000000000521, 0.00010484699999999819, 0.0001040689999999983, 0.00010459699999999794, 0.00010483299999999862, 0.00010479199999999939, 0.00010447200000000129, 0.00010434699999999769, 0.00010497200000000179, 0.00010470900000000144, 0.0001043889999999964, 0.0001042360000000006, 0.00010433299999999812, 0.00010458300000000531, 0.00010468000000000283, 0.00010472200000000154, 0.00010458299999999837, 0.0001046810000000023, 0.00010495900000000169, 0.00010476400000000025, 0.00010497300000000126, 0.0001043610000000042, 0.00010408300000000481, 0.00010495799999999528, 0.00010434699999999769, 0.00010479199999999939, 0.00010445800000000172, 0.00010434699999999769, 0.00010475000000000068, 0.00010422300000000051, 0.00010406999999999778, 0.00010477700000000034, 0.0001041940000000019, 0.0001040410000000061, 0.0001050140000000005, 0.00010472200000000154, 0.00010483299999999862, 0.00010487499999999733, 0.00010495899999999475, 0.00010486199999999724, 0.00010447300000000076, 0.00010447200000000129, 0.00010448600000000086, 0.00010422200000000104, 0.00010433300000000506, 0.00010409700000000438, 0.00010447200000000129, 0.00010409700000000438]</msg>
<status status="PASS" starttime="20201110 08:33:47.996" endtime="20201110 08:33:48.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.984" endtime="20201110 08:33:48.007"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.014" endtime="20201110 08:33:48.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.022" endtime="20201110 08:33:48.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.018" endtime="20201110 08:33:48.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.009" endtime="20201110 08:33:48.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.544" endtime="20201110 08:33:48.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:47.543" endtime="20201110 08:33:48.048"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.073" endtime="20201110 08:33:48.096"></status>
</kw>
<msg timestamp="20201110 08:33:48.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.069" endtime="20201110 08:33:48.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.099" endtime="20201110 08:33:48.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.106" endtime="20201110 08:33:48.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.062" endtime="20201110 08:33:48.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.055" endtime="20201110 08:33:48.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.129" endtime="20201110 08:33:48.473"></status>
</kw>
<msg timestamp="20201110 08:33:48.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043839931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043945333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.126" endtime="20201110 08:33:48.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043839931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043945333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.482" endtime="20201110 08:33:48.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.500" endtime="20201110 08:33:48.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.118" endtime="20201110 08:33:48.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.114" endtime="20201110 08:33:48.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:48.517" level="INFO">${RESULT} = [{'time': 0.043945333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010540200000000444, 'source_diff': 0.00010540200000000444}, {'time': 0.044066361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:48.509" endtime="20201110 08:33:48.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:48.548" level="INFO">${ACCURACY} = {'time': [0.043945333, 0.044066361, 0.044183347, 0.044298361, 0.044412375, 0.044526403, 0.044646403, 0.044760444, 0.044878431, 0.044996444, 0.045113458, 0.045226472, 0.045341486, 0.045455486, 0.045568...</msg>
<status status="PASS" starttime="20201110 08:33:48.519" endtime="20201110 08:33:48.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.559" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:33:48.556" endtime="20201110 08:33:48.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.564" level="INFO">VALUE: [0.00010540200000000444, 0.00010602800000000107, 0.00010563899999999765, 0.00010583299999999962, 0.00010536099999999826, 0.00010600000000000193, 0.00010540300000000391, 0.00010580500000000048, 0.00010527800000000032, 0.00010588799999999843, 0.00010576400000000125, 0.00010576399999999431, 0.00010563899999999765, 0.00010533300000000606, 0.00010565299999999722, 0.00010579200000000039, 0.00010565299999999722, 0.00010552800000000057, 0.0001058889999999979, 0.00010515199999999725, 0.00010552700000000109, 0.00010515299999999672, 0.00010527800000000032, 0.00010602800000000107, 0.00010581900000000005, 0.00010513899999999715, 0.00010525000000000118, 0.00010541700000000348, 0.00010566600000000426, 0.0001054019999999975, 0.0001060140000000015, 0.00010545900000000219, 0.00010590299999999747, 0.00010552800000000057, 0.00010598600000000236, 0.00010525000000000118, 0.00010543000000000358, 0.00010602800000000107, 0.00010587499999999833, 0.0001057219999999956, 0.00010602700000000159, 0.00010576400000000125, 0.00010602800000000107, 0.00010566700000000373, 0.00010527800000000032, 0.00010577800000000082, 0.00010562500000000502, 0.0001060140000000015, 0.00010577800000000082, 0.00010516599999999682]</msg>
<status status="PASS" starttime="20201110 08:33:48.561" endtime="20201110 08:33:48.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.550" endtime="20201110 08:33:48.567"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.574" endtime="20201110 08:33:48.576"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.582" endtime="20201110 08:33:48.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.577" endtime="20201110 08:33:48.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.569" endtime="20201110 08:33:48.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.050" endtime="20201110 08:33:48.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.049" endtime="20201110 08:33:48.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:32:52.373" endtime="20201110 08:33:48.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.618" endtime="20201110 08:33:48.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.613" endtime="20201110 08:33:48.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.611" endtime="20201110 08:33:48.642"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:32:52.235" endtime="20201110 08:33:48.642" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:48.659" endtime="20201110 08:33:48.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.655" endtime="20201110 08:33:48.683"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.717" endtime="20201110 08:33:48.736"></status>
</kw>
<msg timestamp="20201110 08:33:48.737" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.714" endtime="20201110 08:33:48.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.743" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.739" endtime="20201110 08:33:48.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.750" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:33:48.746" endtime="20201110 08:33:48.750"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:48.707" endtime="20201110 08:33:48.752"></status>
</kw>
<status status="FAIL" starttime="20201110 08:33:48.700" endtime="20201110 08:33:48.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.698" endtime="20201110 08:33:48.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:33:48.762" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:33:48.761" endtime="20201110 08:33:48.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.756" endtime="20201110 08:33:48.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.696" endtime="20201110 08:33:48.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.694" endtime="20201110 08:33:48.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.766" endtime="20201110 08:33:48.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.688" endtime="20201110 08:33:48.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.684" endtime="20201110 08:33:48.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.653" endtime="20201110 08:33:48.773"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.798" endtime="20201110 08:33:48.816"></status>
</kw>
<msg timestamp="20201110 08:33:48.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.794" endtime="20201110 08:33:48.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:48.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:48.819" endtime="20201110 08:33:48.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.826" endtime="20201110 08:33:48.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.787" endtime="20201110 08:33:48.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.781" endtime="20201110 08:33:48.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:48.851" endtime="20201110 08:33:49.198"></status>
</kw>
<msg timestamp="20201110 08:33:49.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132810333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132816181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:48.846" endtime="20201110 08:33:49.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132810333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132816181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.208" endtime="20201110 08:33:49.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.227" endtime="20201110 08:33:49.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.838" endtime="20201110 08:33:49.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.834" endtime="20201110 08:33:49.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.244" level="INFO">${RESULT} = [{'time': 0.132816181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.132828292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:49.235" endtime="20201110 08:33:49.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.275" level="INFO">${ACCURACY} = {'time': [0.132816181, 0.132828292, 0.132843458, 0.132853236, 0.132868208, 0.132882181, 0.132893042, 0.132905097, 0.132914486, 0.132924208, 0.132934514, 0.132948125, 0.132961333, 0.132973208, 0.132983...</msg>
<status status="PASS" starttime="20201110 08:33:49.247" endtime="20201110 08:33:49.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.286" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.284" endtime="20201110 08:33:49.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.292" level="INFO">VALUE: [5.84800000000274e-06, 5.347999999988362e-06, 6.388999999995537e-06, 5.875000000016284e-06, 5.332999999996257e-06, 5.3199999999753445e-06, 5.3199999999753445e-06, 5.915999999994703e-06, 6.402999999988168e-06, 5.263999999977065e-06, 5.916999999994177e-06, 5.332999999996257e-06, 5.318999999975871e-06, 5.361000000009275e-06, 5.889000000008915e-06, 5.889000000008915e-06, 5.361000000009275e-06, 5.903000000001546e-06, 5.889000000008915e-06, 5.887999999981686e-06, 5.333999999995731e-06, 5.333999999995731e-06, 5.346999999988888e-06, 5.3609999999815194e-06, 5.347000000016644e-06, 5.847000000003266e-06, 5.346999999988888e-06, 5.346999999988888e-06, 5.888999999981159e-06, 5.290999999990609e-06, 5.3200000000031e-06, 5.362000000008749e-06, 5.847000000003266e-06, 5.319000000003626e-06, 5.847000000003266e-06, 5.889000000008915e-06, 5.3200000000031e-06, 5.347000000016644e-06, 5.929999999987334e-06, 5.3200000000031e-06, 5.90299999997379e-06, 5.319000000003626e-06, 5.874999999988528e-06, 5.30499999998324e-06, 5.332999999996257e-06, 5.347999999988362e-06, 5.887999999981686e-06, 5.333999999995731e-06, 5.915999999994703e-06, 5.361000000009275e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.289" endtime="20201110 08:33:49.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.277" endtime="20201110 08:33:49.294"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.300" endtime="20201110 08:33:49.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.309" endtime="20201110 08:33:49.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.304" endtime="20201110 08:33:49.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.296" endtime="20201110 08:33:49.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.777" endtime="20201110 08:33:49.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.776" endtime="20201110 08:33:49.334"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.358" endtime="20201110 08:33:49.376"></status>
</kw>
<msg timestamp="20201110 08:33:49.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.355" endtime="20201110 08:33:49.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.379" endtime="20201110 08:33:49.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.386" endtime="20201110 08:33:49.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.347" endtime="20201110 08:33:49.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.341" endtime="20201110 08:33:49.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.409" endtime="20201110 08:33:49.740"></status>
</kw>
<msg timestamp="20201110 08:33:49.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042843, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:49.406" endtime="20201110 08:33:49.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042836069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042843, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:33:49.750" endtime="20201110 08:33:49.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.768" endtime="20201110 08:33:49.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.398" endtime="20201110 08:33:49.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.394" endtime="20201110 08:33:49.776"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:49.786" level="INFO">${RESULT} = [{'time': 0.042843, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.931000000001686e-06, 'source_diff': 6.931000000001686e-06}, {'time': 0.042856097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:33:49.777" endtime="20201110 08:33:49.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:49.819" level="INFO">${ACCURACY} = {'time': [0.042843, 0.042856097, 0.042871931, 0.042881333, 0.042896264, 0.042905042, 0.042916194, 0.042925, 0.042935264, 0.042944194, 0.042952972, 0.042962306, 0.042976389, 0.042988056, 0.042997319, 0...</msg>
<status status="PASS" starttime="20201110 08:33:49.788" endtime="20201110 08:33:49.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.830" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:33:49.828" endtime="20201110 08:33:49.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.836" level="INFO">VALUE: [6.931000000001686e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.902000000003072e-06, 6.417000000001616e-06, 6.402999999995107e-06, 6.401999999995633e-06, 6.416999999994677e-06, 6.375000000002906e-06, 6.415999999995203e-06, 6.403000000002046e-06, 6.931000000001686e-06, 6.957999999994413e-06, 6.916999999995177e-06, 6.3879999999960635e-06, 6.945000000001256e-06, 6.9019999999961335e-06, 6.388999999995537e-06, 6.958000000001352e-06, 6.389000000002476e-06, 6.389000000002476e-06, 6.917000000002116e-06, 6.915999999995703e-06, 6.931000000001686e-06, 6.958000000001352e-06, 6.429999999994773e-06, 6.401999999995633e-06, 6.902999999995607e-06, 6.389000000002476e-06, 6.402000000002572e-06, 6.417000000001616e-06, 6.945000000001256e-06, 6.902999999995607e-06, 6.931000000001686e-06, 6.916000000002642e-06, 6.888999999996037e-06, 6.889000000002976e-06, 6.943999999994843e-06, 6.389000000002476e-06, 6.402999999995107e-06, 6.945000000001256e-06, 6.401999999995633e-06, 6.944000000001782e-06, 6.930000000002212e-06, 6.417000000001616e-06, 6.944000000001782e-06, 6.375000000002906e-06, 6.944000000001782e-06, 6.959000000000826e-06, 6.375000000002906e-06]</msg>
<status status="PASS" starttime="20201110 08:33:49.833" endtime="20201110 08:33:49.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.821" endtime="20201110 08:33:49.838"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.845" endtime="20201110 08:33:49.848"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:49.854" endtime="20201110 08:33:49.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.849" endtime="20201110 08:33:49.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.840" endtime="20201110 08:33:49.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.337" endtime="20201110 08:33:49.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.336" endtime="20201110 08:33:49.880"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.902" endtime="20201110 08:33:49.920"></status>
</kw>
<msg timestamp="20201110 08:33:49.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.899" endtime="20201110 08:33:49.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:49.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:49.923" endtime="20201110 08:33:49.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.929" endtime="20201110 08:33:49.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.892" endtime="20201110 08:33:49.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.886" endtime="20201110 08:33:49.936"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:49.953" endtime="20201110 08:33:50.324"></status>
</kw>
<msg timestamp="20201110 08:33:50.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041873583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:49.950" endtime="20201110 08:33:50.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041866153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041873583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.336" endtime="20201110 08:33:50.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.357" endtime="20201110 08:33:50.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.942" endtime="20201110 08:33:50.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.938" endtime="20201110 08:33:50.364"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.375" level="INFO">${RESULT} = [{'time': 0.041873583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429999999995773e-06, 'source_diff': 7.429999999995773e-06}, {'time': 0.041885875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.366" endtime="20201110 08:33:50.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.410" level="INFO">${ACCURACY} = {'time': [0.041873583, 0.041885875, 0.041900792, 0.041914681, 0.041932583, 0.041947653, 0.041964889, 0.041980792, 0.041993486, 0.042010819, 0.042025722, 0.042041944, 0.042059833, 0.042069806, 0.042087...</msg>
<status status="PASS" starttime="20201110 08:33:50.378" endtime="20201110 08:33:50.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.422" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:33:50.419" endtime="20201110 08:33:50.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.428" level="INFO">VALUE: [7.429999999995773e-06, 7.527999999999702e-06, 7.945000000002256e-06, 8.000000000001062e-06, 8.000000000001062e-06, 7.445000000001756e-06, 7.472000000001422e-06, 8.028000000000202e-06, 7.943999999995843e-06, 7.429999999995773e-06, 7.986000000001492e-06, 7.374999999996967e-06, 8.000000000001062e-06, 7.959000000001826e-06, 7.944000000002782e-06, 7.959000000001826e-06, 7.971999999994983e-06, 7.457999999994913e-06, 7.457999999994913e-06, 7.445000000001756e-06, 8.013000000001158e-06, 7.459000000001326e-06, 7.986000000001492e-06, 7.944000000002782e-06, 7.429999999995773e-06, 7.458999999994387e-06, 7.458000000001852e-06, 8.000000000001062e-06, 7.402999999996107e-06, 7.958000000002352e-06, 7.444000000002282e-06, 7.473000000000896e-06, 7.444000000002282e-06, 7.443999999995343e-06, 7.445000000001756e-06, 7.443999999995343e-06, 7.443999999995343e-06, 7.943999999995843e-06, 7.459000000001326e-06, 7.999999999994123e-06, 7.986000000001492e-06, 7.972000000001922e-06, 7.514000000000132e-06, 7.972000000001922e-06, 7.986000000001492e-06, 8.000000000001062e-06, 7.458000000001852e-06, 7.973000000001396e-06, 7.458000000001852e-06, 7.417000000002616e-06]</msg>
<status status="PASS" starttime="20201110 08:33:50.424" endtime="20201110 08:33:50.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.412" endtime="20201110 08:33:50.431"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.438" endtime="20201110 08:33:50.441"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:50.447" endtime="20201110 08:33:50.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.442" endtime="20201110 08:33:50.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.433" endtime="20201110 08:33:50.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.882" endtime="20201110 08:33:50.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:49.880" endtime="20201110 08:33:50.473"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.498" endtime="20201110 08:33:50.517"></status>
</kw>
<msg timestamp="20201110 08:33:50.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.494" endtime="20201110 08:33:50.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:50.520" endtime="20201110 08:33:50.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.527" endtime="20201110 08:33:50.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.487" endtime="20201110 08:33:50.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.480" endtime="20201110 08:33:50.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.552" endtime="20201110 08:33:50.915"></status>
</kw>
<msg timestamp="20201110 08:33:50.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044565667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044574194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.549" endtime="20201110 08:33:50.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:50.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044565667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044574194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:50.926" endtime="20201110 08:33:50.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:50.946" endtime="20201110 08:33:50.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.541" endtime="20201110 08:33:50.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.536" endtime="20201110 08:33:50.953"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:50.964" level="INFO">${RESULT} = [{'time': 0.044574194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.526999999994289e-06, 'source_diff': 8.526999999994289e-06}, {'time': 0.044586264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:50.955" endtime="20201110 08:33:50.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:50.999" level="INFO">${ACCURACY} = {'time': [0.044574194, 0.044586264, 0.044601514, 0.044614208, 0.044625472, 0.044639431, 0.044652069, 0.044666125, 0.044676986, 0.044688431, 0.044704208, 0.044716472, 0.04473125, 0.044746167, 0.0447613...</msg>
<status status="PASS" starttime="20201110 08:33:50.966" endtime="20201110 08:33:50.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.011" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.009" endtime="20201110 08:33:51.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.017" level="INFO">VALUE: [8.526999999994289e-06, 8.555999999999842e-06, 8.542000000000272e-06, 9.083000000000008e-06, 9.000000000002062e-06, 9.069999999999911e-06, 8.500000000001562e-06, 8.555999999999842e-06, 8.500000000001562e-06, 9.000000000002062e-06, 8.500000000001562e-06, 9.014000000001632e-06, 9.000000000002062e-06, 8.514000000001132e-06, 8.541000000000798e-06, 9.028000000001202e-06, 8.514000000001132e-06, 9.055000000000868e-06, 9.056000000000342e-06, 8.500000000001562e-06, 9.069000000000438e-06, 8.500000000001562e-06, 9.056000000000342e-06, 8.958000000003352e-06, 8.528000000000702e-06, 8.514000000001132e-06, 9.027000000001728e-06, 8.528000000000702e-06, 8.417000000003616e-06, 9.014000000001632e-06, 9.013999999994693e-06, 8.527000000001228e-06, 8.485999999995053e-06, 9.042000000000772e-06, 9.013000000002158e-06, 8.485999999995053e-06, 9.042000000000772e-06, 8.999999999995123e-06, 8.500000000001562e-06, 9.01299999999522e-06, 8.514000000001132e-06, 8.514000000001132e-06, 8.500000000001562e-06, 8.486000000001992e-06, 8.068999999999438e-06, 8.514000000001132e-06, 8.514000000001132e-06, 9.000000000002062e-06, 8.499999999994623e-06, 8.513000000001658e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.014" endtime="20201110 08:33:51.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.001" endtime="20201110 08:33:51.021"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.028" endtime="20201110 08:33:51.031"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.037" endtime="20201110 08:33:51.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.032" endtime="20201110 08:33:51.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.023" endtime="20201110 08:33:51.065"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.476" endtime="20201110 08:33:51.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:50.474" endtime="20201110 08:33:51.067"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.100" endtime="20201110 08:33:51.119"></status>
</kw>
<msg timestamp="20201110 08:33:51.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.095" endtime="20201110 08:33:51.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.123" endtime="20201110 08:33:51.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.130" endtime="20201110 08:33:51.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.085" endtime="20201110 08:33:51.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.076" endtime="20201110 08:33:51.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.155" endtime="20201110 08:33:51.515"></status>
</kw>
<msg timestamp="20201110 08:33:51.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057463375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057473361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.151" endtime="20201110 08:33:51.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.057463375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057473361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.525" endtime="20201110 08:33:51.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.547" endtime="20201110 08:33:51.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.143" endtime="20201110 08:33:51.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.138" endtime="20201110 08:33:51.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:51.572" level="INFO">${RESULT} = [{'time': 0.057473361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.986000000003492e-06, 'source_diff': 9.986000000003492e-06}, {'time': 0.057486556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:51.560" endtime="20201110 08:33:51.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:51.615" level="INFO">${ACCURACY} = {'time': [0.057473361, 0.057486556, 0.057499403, 0.057517639, 0.057531403, 0.057543639, 0.057561208, 0.057578319, 0.057593417, 0.057610236, 0.057626319, 0.057639694, 0.057655653, 0.057669486, 0.057683...</msg>
<status status="PASS" starttime="20201110 08:33:51.576" endtime="20201110 08:33:51.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.626" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:33:51.624" endtime="20201110 08:33:51.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.632" level="INFO">VALUE: [9.986000000003492e-06, 9.556000000000842e-06, 9.583999999999981e-06, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 9.555000000001368e-06, 9.569000000000938e-06, 1.0070000000000912e-05, 9.569000000000938e-06, 9.569000000000938e-06, 9.610999999999648e-06, 1.0097000000000578e-05, 1.0055000000001868e-05, 9.556000000000842e-06, 1.0028000000002202e-05, 9.569000000000938e-06, 9.570000000000412e-06, 1.0070000000000912e-05, 9.583000000000508e-06, 9.570000000000412e-06, 1.0070000000000912e-05, 9.597000000000078e-06, 1.0180999999997997e-05, 9.568999999993999e-06, 9.556000000000842e-06, 9.555000000001368e-06, 9.583999999999981e-06, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0069000000001438e-05, 9.486000000002992e-06, 9.556000000000842e-06, 1.0111999999999621e-05, 9.583000000000508e-06, 9.556000000000842e-06, 1.0042000000001772e-05, 9.041000000001298e-06, 9.056000000000342e-06, 9.056000000000342e-06, 1.0084000000000481e-05, 9.569000000000938e-06, 9.555000000001368e-06, 1.0070000000000912e-05, 1.0082999999994069e-05, 9.500000000002562e-06, 1.0069999999993973e-05, 1.0083000000001008e-05, 9.569000000000938e-06, 9.541999999994333e-06]</msg>
<status status="PASS" starttime="20201110 08:33:51.629" endtime="20201110 08:33:51.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.617" endtime="20201110 08:33:51.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.641" endtime="20201110 08:33:51.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:51.650" endtime="20201110 08:33:51.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.645" endtime="20201110 08:33:51.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.637" endtime="20201110 08:33:51.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.070" endtime="20201110 08:33:51.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.068" endtime="20201110 08:33:51.675"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.698" endtime="20201110 08:33:51.716"></status>
</kw>
<msg timestamp="20201110 08:33:51.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.694" endtime="20201110 08:33:51.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:51.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:51.719" endtime="20201110 08:33:51.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.725" endtime="20201110 08:33:51.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.687" endtime="20201110 08:33:51.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.682" endtime="20201110 08:33:51.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:51.751" endtime="20201110 08:33:52.097"></status>
</kw>
<msg timestamp="20201110 08:33:52.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041759139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041770319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:51.747" endtime="20201110 08:33:52.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041759139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041770319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.107" endtime="20201110 08:33:52.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.131" endtime="20201110 08:33:52.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.738" endtime="20201110 08:33:52.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.733" endtime="20201110 08:33:52.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.164" level="INFO">${RESULT} = [{'time': 0.041770319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1179999999999524e-05, 'source_diff': 1.1179999999999524e-05}, {'time': 0.041785319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.148" endtime="20201110 08:33:52.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.204" level="INFO">${ACCURACY} = {'time': [0.041770319, 0.041785319, 0.041804806, 0.041822111, 0.041835014, 0.041849889, 0.041866889, 0.041881903, 0.041895903, 0.041909292, 0.041925181, 0.041939986, 0.041955083, 0.041973069, 0.041990...</msg>
<status status="PASS" starttime="20201110 08:33:52.168" endtime="20201110 08:33:52.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.217" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.213" endtime="20201110 08:33:52.217"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.222" level="INFO">VALUE: [1.1179999999999524e-05, 1.0583000000001508e-05, 1.0612000000000121e-05, 1.1166999999999427e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0611000000000648e-05, 1.0111000000000148e-05, 1.0111000000000148e-05, 1.0625000000000218e-05, 1.0598000000000551e-05, 1.0652999999999357e-05, 1.1096999999994639e-05, 1.0611000000000648e-05, 1.0681000000005436e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0068999999994499e-05, 1.1125000000000718e-05, 1.1111000000001148e-05, 1.0611000000000648e-05, 1.0625000000000218e-05, 1.1096999999994639e-05, 1.0611000000000648e-05, 1.0625000000000218e-05, 1.0111000000000148e-05, 1.0611000000000648e-05, 1.0611000000000648e-05, 1.1165999999999954e-05, 1.0611000000000648e-05, 1.1111000000001148e-05, 1.1124999999993779e-05, 1.0611000000000648e-05, 1.0610999999993709e-05, 1.0611000000000648e-05, 1.1139000000000288e-05, 1.1125000000000718e-05, 1.1152999999999857e-05, 1.0679999999999024e-05, 1.0596999999994139e-05, 1.1110999999994209e-05, 1.0124999999999718e-05, 1.0555999999994903e-05, 1.1125000000000718e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0097000000000578e-05, 1.0625000000000218e-05, 1.0597000000001078e-05, 1.1111000000001148e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.219" endtime="20201110 08:33:52.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.206" endtime="20201110 08:33:52.225"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.232" endtime="20201110 08:33:52.235"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.240" endtime="20201110 08:33:52.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.236" endtime="20201110 08:33:52.264"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.227" endtime="20201110 08:33:52.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.677" endtime="20201110 08:33:52.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:51.676" endtime="20201110 08:33:52.266"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.289" endtime="20201110 08:33:52.308"></status>
</kw>
<msg timestamp="20201110 08:33:52.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.286" endtime="20201110 08:33:52.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.312" endtime="20201110 08:33:52.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.318" endtime="20201110 08:33:52.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.279" endtime="20201110 08:33:52.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.273" endtime="20201110 08:33:52.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.341" endtime="20201110 08:33:52.690"></status>
</kw>
<msg timestamp="20201110 08:33:52.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042477764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042489431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.338" endtime="20201110 08:33:52.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042477764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042489431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.700" endtime="20201110 08:33:52.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.719" endtime="20201110 08:33:52.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.331" endtime="20201110 08:33:52.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.326" endtime="20201110 08:33:52.726"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:52.737" level="INFO">${RESULT} = [{'time': 0.042489431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.1666999999999927e-05, 'source_diff': 1.1666999999999927e-05}, {'time': 0.042508625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:52.727" endtime="20201110 08:33:52.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:52.768" level="INFO">${ACCURACY} = {'time': [0.042489431, 0.042508625, 0.042523736, 0.042543694, 0.042557514, 0.042573556, 0.042595667, 0.042613625, 0.042627417, 0.042647472, 0.042665417, 0.042686875, 0.042707431, 0.042726625, 0.042742...</msg>
<status status="PASS" starttime="20201110 08:33:52.739" endtime="20201110 08:33:52.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.779" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:33:52.777" endtime="20201110 08:33:52.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.785" level="INFO">VALUE: [1.1666999999999927e-05, 1.2167000000000427e-05, 1.2221999999999233e-05, 1.2180000000000524e-05, 1.1666999999999927e-05, 1.1653000000000358e-05, 1.2166999999993489e-05, 1.1693999999999594e-05, 1.1666999999999927e-05, 1.1625000000001218e-05, 1.1666999999999927e-05, 1.1666999999999927e-05, 1.1597999999994613e-05, 1.1680999999999497e-05, 1.1639000000000788e-05, 1.1111000000001148e-05, 1.1666999999999927e-05, 1.1680000000000024e-05, 1.1680000000000024e-05, 1.2222999999998707e-05, 1.2138999999994349e-05, 1.1152999999999857e-05, 1.2207999999999664e-05, 1.1625000000001218e-05, 1.2207999999999664e-05, 1.2222000000006172e-05, 1.1165999999999954e-05, 1.1666999999999927e-05, 1.1166999999999427e-05, 1.1680000000000024e-05, 1.1639000000000788e-05, 1.1165999999999954e-05, 1.1653000000000358e-05, 1.2250000000005312e-05, 1.1693999999999594e-05, 1.2207999999999664e-05, 1.1694999999999067e-05, 1.1152000000000384e-05, 1.1639000000000788e-05, 1.2222000000006172e-05, 1.2263999999997943e-05, 1.1666000000000454e-05, 1.1680999999999497e-05, 1.1680000000000024e-05, 1.2221999999999233e-05, 1.1680999999999497e-05, 1.1680000000000024e-05, 1.1139000000000288e-05, 1.1181000000005936e-05, 1.1152999999999857e-05]</msg>
<status status="PASS" starttime="20201110 08:33:52.782" endtime="20201110 08:33:52.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.770" endtime="20201110 08:33:52.788"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.795" endtime="20201110 08:33:52.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:52.808" endtime="20201110 08:33:52.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.800" endtime="20201110 08:33:52.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.790" endtime="20201110 08:33:52.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.268" endtime="20201110 08:33:52.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.267" endtime="20201110 08:33:52.836"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.864" endtime="20201110 08:33:52.883"></status>
</kw>
<msg timestamp="20201110 08:33:52.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.860" endtime="20201110 08:33:52.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:52.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:52.886" endtime="20201110 08:33:52.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.893" endtime="20201110 08:33:52.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.852" endtime="20201110 08:33:52.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.844" endtime="20201110 08:33:52.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:52.916" endtime="20201110 08:33:53.252"></status>
</kw>
<msg timestamp="20201110 08:33:53.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050014597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050027319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:52.912" endtime="20201110 08:33:53.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050014597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050027319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.261" endtime="20201110 08:33:53.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.280" endtime="20201110 08:33:53.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.905" endtime="20201110 08:33:53.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.901" endtime="20201110 08:33:53.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.298" level="INFO">${RESULT} = [{'time': 0.050027319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.2721999999999734e-05, 'source_diff': 1.2721999999999734e-05}, {'time': 0.050048319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:53.289" endtime="20201110 08:33:53.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.329" level="INFO">${ACCURACY} = {'time': [0.050027319, 0.050048319, 0.050068458, 0.050089056, 0.050105486, 0.050123097, 0.050144958, 0.050163056, 0.050181417, 0.050198431, 0.050215431, 0.050232194, 0.050253069, 0.050275181, 0.050297...</msg>
<status status="PASS" starttime="20201110 08:33:53.300" endtime="20201110 08:33:53.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.340" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.338" endtime="20201110 08:33:53.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.346" level="INFO">VALUE: [1.2721999999999734e-05, 1.3235999999999803e-05, 1.2750000000005812e-05, 1.2708999999999637e-05, 1.3291999999998083e-05, 1.2235999999998803e-05, 1.2736000000006242e-05, 1.2153000000000858e-05, 1.2722999999999207e-05, 1.3249999999999373e-05, 1.3236999999999277e-05, 1.2735999999999303e-05, 1.2235999999998803e-05, 1.2749999999998873e-05, 1.2180000000000524e-05, 1.2721999999999734e-05, 1.2221999999999233e-05, 1.2221999999999233e-05, 1.2167000000000427e-05, 1.2250000000005312e-05, 1.2180000000000524e-05, 1.2708000000000164e-05, 1.2708999999999637e-05, 1.3263999999998943e-05, 1.2721999999999734e-05, 1.2721999999999734e-05, 1.2735999999999303e-05, 1.2735999999999303e-05, 1.2721999999999734e-05, 1.3180000000001524e-05, 1.3235999999999803e-05, 1.3249999999999373e-05, 1.2194999999999567e-05, 1.2721999999999734e-05, 1.2695000000000067e-05, 1.3292000000005022e-05, 1.2736000000006242e-05, 1.2167000000000427e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.2736000000006242e-05, 1.2777999999998013e-05, 1.2735999999999303e-05, 1.2194000000000094e-05, 1.2708999999999637e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2735999999999303e-05, 1.3264000000005882e-05, 1.2735999999999303e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.343" endtime="20201110 08:33:53.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.331" endtime="20201110 08:33:53.355"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.361" endtime="20201110 08:33:53.364"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.369" endtime="20201110 08:33:53.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.365" endtime="20201110 08:33:53.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.357" endtime="20201110 08:33:53.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.839" endtime="20201110 08:33:53.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:52.838" endtime="20201110 08:33:53.395"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.419" endtime="20201110 08:33:53.437"></status>
</kw>
<msg timestamp="20201110 08:33:53.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.416" endtime="20201110 08:33:53.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.440" endtime="20201110 08:33:53.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.447" endtime="20201110 08:33:53.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.409" endtime="20201110 08:33:53.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.402" endtime="20201110 08:33:53.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.470" endtime="20201110 08:33:53.811"></status>
</kw>
<msg timestamp="20201110 08:33:53.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043496542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043510306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.467" endtime="20201110 08:33:53.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043496542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043510306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:53.820" endtime="20201110 08:33:53.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.839" endtime="20201110 08:33:53.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.460" endtime="20201110 08:33:53.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.455" endtime="20201110 08:33:53.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:53.857" level="INFO">${RESULT} = [{'time': 0.043510306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.3763999999999443e-05, 'source_diff': 1.3763999999999443e-05}, {'time': 0.043527347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:53.848" endtime="20201110 08:33:53.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:53.888" level="INFO">${ACCURACY} = {'time': [0.043510306, 0.043527347, 0.043548417, 0.043567333, 0.043585, 0.043606264, 0.043626069, 0.043646972, 0.043668444, 0.043686111, 0.043702042, 0.043722236, 0.043740431, 0.043759111, 0.043782292...</msg>
<status status="PASS" starttime="20201110 08:33:53.859" endtime="20201110 08:33:53.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.899" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:33:53.897" endtime="20201110 08:33:53.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.905" level="INFO">VALUE: [1.3763999999999443e-05, 1.429099999999961e-05, 1.4305999999998653e-05, 1.379099999999911e-05, 1.3277999999998513e-05, 1.3249999999999373e-05, 1.3805000000005618e-05, 1.3777999999999013e-05, 1.433299999999832e-05, 1.3763999999999443e-05, 1.3278000000005452e-05, 1.3277999999998513e-05, 1.4334000000004732e-05, 1.3792000000005522e-05, 1.3805999999998153e-05, 1.379099999999911e-05, 1.4348000000004302e-05, 1.434699999999789e-05, 1.379099999999911e-05, 1.3791999999998583e-05, 1.3235999999999803e-05, 1.3235999999999803e-05, 1.3791999999998583e-05, 1.4319999999998223e-05, 1.3819000000005188e-05, 1.3777999999999013e-05, 1.379099999999911e-05, 1.3791999999998583e-05, 1.3777999999999013e-05, 1.3777999999999013e-05, 1.3791999999998583e-05, 1.381899999999825e-05, 1.3249999999999373e-05, 1.4319000000005688e-05, 1.3777999999999013e-05, 1.3235999999999803e-05, 1.3277999999998513e-05, 1.4334000000004732e-05, 1.3263999999998943e-05, 1.3278000000005452e-05, 1.3291999999998083e-05, 1.3791000000006048e-05, 1.3847999999996863e-05, 1.3763999999999443e-05, 1.3167000000001428e-05, 1.3749999999999873e-05, 1.431899999999875e-05, 1.3763999999999443e-05, 1.3721999999993795e-05, 1.3235999999999803e-05]</msg>
<status status="PASS" starttime="20201110 08:33:53.901" endtime="20201110 08:33:53.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.890" endtime="20201110 08:33:53.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.914" endtime="20201110 08:33:53.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:53.922" endtime="20201110 08:33:53.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.918" endtime="20201110 08:33:53.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.910" endtime="20201110 08:33:53.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.397" endtime="20201110 08:33:53.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.396" endtime="20201110 08:33:53.948"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:53.971" endtime="20201110 08:33:53.991"></status>
</kw>
<msg timestamp="20201110 08:33:53.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.968" endtime="20201110 08:33:53.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:53.999" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:53.995" endtime="20201110 08:33:54.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.001" endtime="20201110 08:33:54.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.961" endtime="20201110 08:33:54.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.955" endtime="20201110 08:33:54.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.025" endtime="20201110 08:33:54.362"></status>
</kw>
<msg timestamp="20201110 08:33:54.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044399778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.021" endtime="20201110 08:33:54.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044399778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.371" endtime="20201110 08:33:54.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.390" endtime="20201110 08:33:54.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.014" endtime="20201110 08:33:54.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.009" endtime="20201110 08:33:54.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:54.408" level="INFO">${RESULT} = [{'time': 0.044399778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.486099999999796e-05, 'source_diff': 1.486099999999796e-05}, {'time': 0.044420986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:54.399" endtime="20201110 08:33:54.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:54.441" level="INFO">${ACCURACY} = {'time': [0.044399778, 0.044420986, 0.044445014, 0.04446375, 0.044486014, 0.044509, 0.044532861, 0.044549847, 0.044566903, 0.044586875, 0.044610847, 0.044633847, 0.044652931, 0.044671903, 0.044690625,...</msg>
<status status="PASS" starttime="20201110 08:33:54.410" endtime="20201110 08:33:54.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.453" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:33:54.450" endtime="20201110 08:33:54.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.458" level="INFO">VALUE: [1.486099999999796e-05, 1.4833000000005758e-05, 1.53889999999976e-05, 1.4806000000006092e-05, 1.537499999999803e-05, 1.483299999999882e-05, 1.4791999999999583e-05, 1.434699999999789e-05, 1.4305999999998653e-05, 1.484699999999839e-05, 1.480499999999968e-05, 1.434699999999789e-05, 1.4847999999997863e-05, 1.4333999999997793e-05, 1.481899999999925e-05, 1.4291999999999083e-05, 1.4834000000005232e-05, 1.4375000000003968e-05, 1.481899999999925e-05, 1.484699999999839e-05, 1.431899999999875e-05, 1.5319999999999223e-05, 1.4292000000006022e-05, 1.484699999999839e-05, 1.4292000000006022e-05, 1.483299999999882e-05, 1.433299999999832e-05, 1.4292000000006022e-05, 1.4861000000004898e-05, 1.483299999999882e-05, 1.484699999999839e-05, 1.429099999999961e-05, 1.4305999999998653e-05, 1.483299999999882e-05, 1.427700000000004e-05, 1.4847999999997863e-05, 1.4347999999997363e-05, 1.4333000000005258e-05, 1.4333000000005258e-05, 1.429099999999961e-05, 1.429099999999961e-05, 1.4347000000004828e-05, 1.4847999999997863e-05, 1.4805999999999153e-05, 1.5306000000006592e-05, 1.483299999999882e-05, 1.4847000000005328e-05, 1.486099999999796e-05, 1.484699999999839e-05, 1.4277999999999513e-05]</msg>
<status status="PASS" starttime="20201110 08:33:54.455" endtime="20201110 08:33:54.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.443" endtime="20201110 08:33:54.461"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.468" endtime="20201110 08:33:54.471"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:54.476" endtime="20201110 08:33:54.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.472" endtime="20201110 08:33:54.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.463" endtime="20201110 08:33:54.501"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.951" endtime="20201110 08:33:54.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:53.950" endtime="20201110 08:33:54.502"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.526" endtime="20201110 08:33:54.544"></status>
</kw>
<msg timestamp="20201110 08:33:54.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.522" endtime="20201110 08:33:54.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:54.547" endtime="20201110 08:33:54.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.554" endtime="20201110 08:33:54.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.515" endtime="20201110 08:33:54.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.509" endtime="20201110 08:33:54.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.597" endtime="20201110 08:33:54.957"></status>
</kw>
<msg timestamp="20201110 08:33:54.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042875639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042891028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.591" endtime="20201110 08:33:54.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:54.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042875639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042891028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:54.967" endtime="20201110 08:33:54.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:54.987" endtime="20201110 08:33:54.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.575" endtime="20201110 08:33:54.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.563" endtime="20201110 08:33:54.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.006" level="INFO">${RESULT} = [{'time': 0.042891028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.53889999999976e-05, 'source_diff': 1.53889999999976e-05}, {'time': 0.042909403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:33:54.996" endtime="20201110 08:33:55.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.039" level="INFO">${ACCURACY} = {'time': [0.042891028, 0.042909403, 0.042931069, 0.042955264, 0.042974528, 0.042995444, 0.043015514, 0.043040292, 0.043059319, 0.043079528, 0.043104111, 0.043123097, 0.043143444, 0.043165528, 0.043185...</msg>
<status status="PASS" starttime="20201110 08:33:55.008" endtime="20201110 08:33:55.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.051" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.048" endtime="20201110 08:33:55.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.056" level="INFO">VALUE: [1.53889999999976e-05, 1.536099999999846e-05, 1.5916000000004704e-05, 1.5445000000002818e-05, 1.645899999999645e-05, 1.5915999999997765e-05, 1.644499999999688e-05, 1.587499999999853e-05, 1.5387999999998125e-05, 1.594499999999638e-05, 1.534699999999889e-05, 1.5971999999996045e-05, 1.5888000000005564e-05, 1.6445000000003818e-05, 1.534699999999889e-05, 1.531899999999975e-05, 1.53889999999976e-05, 1.58889999999981e-05, 1.53889999999976e-05, 1.540299999999717e-05, 1.5915999999997765e-05, 1.53889999999976e-05, 1.591699999999724e-05, 1.536099999999846e-05, 1.6403000000005108e-05, 1.5929999999997335e-05, 1.590299999999767e-05, 1.587499999999853e-05, 1.534699999999889e-05, 1.5903000000004608e-05, 1.5416000000004204e-05, 1.5819999999999723e-05, 1.5347999999998363e-05, 1.5901999999998195e-05, 1.586099999999896e-05, 1.5389000000004538e-05, 1.534699999999889e-05, 1.5903000000004608e-05, 1.58889999999981e-05, 1.5389000000004538e-05, 1.5361000000005398e-05, 1.5888000000005564e-05, 1.58889999999981e-05, 1.590299999999767e-05, 1.540299999999717e-05, 1.58889999999981e-05, 1.537499999999803e-05, 1.590299999999767e-05, 1.533299999999932e-05, 1.590299999999767e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.053" endtime="20201110 08:33:55.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.041" endtime="20201110 08:33:55.060"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.067" endtime="20201110 08:33:55.070"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.076" endtime="20201110 08:33:55.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.071" endtime="20201110 08:33:55.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.062" endtime="20201110 08:33:55.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.505" endtime="20201110 08:33:55.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:54.503" endtime="20201110 08:33:55.104"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.129" endtime="20201110 08:33:55.149"></status>
</kw>
<msg timestamp="20201110 08:33:55.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.125" endtime="20201110 08:33:55.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.152" endtime="20201110 08:33:55.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.159" endtime="20201110 08:33:55.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.117" endtime="20201110 08:33:55.165"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.111" endtime="20201110 08:33:55.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.184" endtime="20201110 08:33:55.543"></status>
</kw>
<msg timestamp="20201110 08:33:55.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047359125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047376083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.181" endtime="20201110 08:33:55.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047359125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047376083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.553" endtime="20201110 08:33:55.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.573" endtime="20201110 08:33:55.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.173" endtime="20201110 08:33:55.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.168" endtime="20201110 08:33:55.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:55.592" level="INFO">${RESULT} = [{'time': 0.047376083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6957999999997475e-05, 'source_diff': 1.6957999999997475e-05}, {'time': 0.047399569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:55.582" endtime="20201110 08:33:55.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:55.625" level="INFO">${ACCURACY} = {'time': [0.047376083, 0.047399569, 0.047425153, 0.047445111, 0.047467472, 0.047490361, 0.047510333, 0.0475315, 0.047550181, 0.047571514, 0.047594444, 0.047614167, 0.047638125, 0.047660611, 0.04768358...</msg>
<status status="PASS" starttime="20201110 08:33:55.594" endtime="20201110 08:33:55.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.637" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:33:55.634" endtime="20201110 08:33:55.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.642" level="INFO">VALUE: [1.6957999999997475e-05, 1.6972000000003984e-05, 1.695899999999695e-05, 1.6957999999997475e-05, 1.6457999999996975e-05, 1.6403000000005108e-05, 1.6901999999999195e-05, 1.63889999999986e-05, 1.640299999999817e-05, 1.6945000000004318e-05, 1.6415999999998265e-05, 1.697299999999652e-05, 1.6944000000004844e-05, 1.6957999999997475e-05, 1.6958000000004414e-05, 1.640299999999817e-05, 1.6444000000004344e-05, 1.6431000000004248e-05, 1.6402000000005634e-05, 1.6417000000004678e-05, 1.6443999999997405e-05, 1.6389000000005538e-05, 1.6444000000004344e-05, 1.6931000000004748e-05, 1.6401999999998695e-05, 1.640299999999817e-05, 1.6443999999997405e-05, 1.6513999999995255e-05, 1.6943999999997905e-05, 1.6943999999997905e-05, 1.694499999999738e-05, 1.63889999999986e-05, 1.6943999999997905e-05, 1.6959000000003888e-05, 1.6986000000003554e-05, 1.6457999999996975e-05, 1.6971999999997045e-05, 1.6431000000004248e-05, 1.6401999999998695e-05, 1.641699999999774e-05, 1.640299999999817e-05, 1.6457999999996975e-05, 1.6957999999997475e-05, 1.640299999999817e-05, 1.6457999999996975e-05, 1.6444000000004344e-05, 1.63889999999986e-05, 1.6444000000004344e-05, 1.7014000000002694e-05, 1.63889999999986e-05]</msg>
<status status="PASS" starttime="20201110 08:33:55.639" endtime="20201110 08:33:55.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.627" endtime="20201110 08:33:55.646"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.653" endtime="20201110 08:33:55.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:55.662" endtime="20201110 08:33:55.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.657" endtime="20201110 08:33:55.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.648" endtime="20201110 08:33:55.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.106" endtime="20201110 08:33:55.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.105" endtime="20201110 08:33:55.693"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.738" endtime="20201110 08:33:55.758"></status>
</kw>
<msg timestamp="20201110 08:33:55.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.734" endtime="20201110 08:33:55.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:55.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:55.762" endtime="20201110 08:33:55.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.768" endtime="20201110 08:33:55.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.717" endtime="20201110 08:33:55.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.701" endtime="20201110 08:33:55.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:55.792" endtime="20201110 08:33:56.142"></status>
</kw>
<msg timestamp="20201110 08:33:56.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071559694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071577153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:55.788" endtime="20201110 08:33:56.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071559694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071577153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.153" endtime="20201110 08:33:56.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.173" endtime="20201110 08:33:56.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.781" endtime="20201110 08:33:56.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.776" endtime="20201110 08:33:56.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.191" level="INFO">${RESULT} = [{'time': 0.071577153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7459000000011327e-05, 'source_diff': 1.7459000000011327e-05}, {'time': 0.071604042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:56.182" endtime="20201110 08:33:56.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.222" level="INFO">${ACCURACY} = {'time': [0.071577153, 0.071604042, 0.071631389, 0.071659167, 0.071680139, 0.071702292, 0.071726, 0.0717525, 0.071777514, 0.071804167, 0.071825375, 0.071847333, 0.071874417, 0.071898306, 0.071919528, ...</msg>
<status status="PASS" starttime="20201110 08:33:56.193" endtime="20201110 08:33:56.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.233" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.231" endtime="20201110 08:33:56.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.238" level="INFO">VALUE: [1.7459000000011327e-05, 1.6986000000010493e-05, 1.7445000000004818e-05, 1.8013999999996755e-05, 1.7457999999997975e-05, 1.8000000000004124e-05, 1.7457999999997975e-05, 1.7485999999997115e-05, 1.8013999999996755e-05, 1.8000000000004124e-05, 1.7457999999997975e-05, 1.756899999999506e-05, 1.7999999999990246e-05, 1.7999999999990246e-05, 1.7584000000001043e-05, 1.745899999999745e-05, 1.743099999999831e-05, 1.7513999999996255e-05, 1.801299999999728e-05, 1.8056000000002403e-05, 1.7500000000003624e-05, 1.6972000000003984e-05, 1.7570000000008412e-05, 1.695899999999695e-05, 1.8014000000010633e-05, 1.7944000000005844e-05, 1.6943999999990966e-05, 1.7985999999997615e-05, 1.7457999999997975e-05, 1.6957999999997475e-05, 1.7457999999997975e-05, 1.7500000000003624e-05, 1.7513999999996255e-05, 1.8069999999995034e-05, 1.7513999999996255e-05, 1.7485999999997115e-05, 1.8000000000004124e-05, 1.737500000000003e-05, 1.8000000000004124e-05, 1.8000000000004124e-05, 1.8028000000003264e-05, 1.8014000000010633e-05, 1.8026999999989912e-05, 1.7417000000005678e-05, 1.7513999999996255e-05, 1.7472000000004484e-05, 1.8056000000002403e-05, 1.8056000000002403e-05, 1.7985999999997615e-05, 1.8000000000004124e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.235" endtime="20201110 08:33:56.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.224" endtime="20201110 08:33:56.241"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.248" endtime="20201110 08:33:56.251"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.256" endtime="20201110 08:33:56.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.252" endtime="20201110 08:33:56.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.244" endtime="20201110 08:33:56.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.696" endtime="20201110 08:33:56.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:55.694" endtime="20201110 08:33:56.282"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.305" endtime="20201110 08:33:56.323"></status>
</kw>
<msg timestamp="20201110 08:33:56.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.302" endtime="20201110 08:33:56.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.327" endtime="20201110 08:33:56.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.333" endtime="20201110 08:33:56.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.295" endtime="20201110 08:33:56.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.289" endtime="20201110 08:33:56.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.358" endtime="20201110 08:33:56.704"></status>
</kw>
<msg timestamp="20201110 08:33:56.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042341681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042360722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.354" endtime="20201110 08:33:56.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042341681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042360722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.713" endtime="20201110 08:33:56.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.732" endtime="20201110 08:33:56.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.346" endtime="20201110 08:33:56.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.341" endtime="20201110 08:33:56.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:56.752" level="INFO">${RESULT} = [{'time': 0.042360722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.904100000000436e-05, 'source_diff': 1.904100000000436e-05}, {'time': 0.042386056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:56.742" endtime="20201110 08:33:56.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:56.786" level="INFO">${ACCURACY} = {'time': [0.042360722, 0.042386056, 0.04240975, 0.042435944, 0.042461736, 0.042483931, 0.042510931, 0.042533653, 0.042559681, 0.042584833, 0.042612083, 0.042638042, 0.042659097, 0.042681778, 0.0427077...</msg>
<status status="PASS" starttime="20201110 08:33:56.755" endtime="20201110 08:33:56.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.797" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:33:56.795" endtime="20201110 08:33:56.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.803" level="INFO">VALUE: [1.904100000000436e-05, 1.9069999999996035e-05, 1.8542000000003334e-05, 1.905500000000393e-05, 1.8499999999997685e-05, 1.9042000000003834e-05, 1.8612000000001183e-05, 1.8513999999997255e-05, 1.8514000000004194e-05, 1.912500000000178e-05, 1.854100000000386e-05, 1.9098000000002113e-05, 1.9027999999997325e-05, 1.9055999999996465e-05, 1.905500000000393e-05, 1.8513999999997255e-05, 1.905499999999699e-05, 1.858299999999563e-05, 1.8499999999997685e-05, 1.8542000000003334e-05, 1.8542000000003334e-05, 1.7959000000004888e-05, 1.905500000000393e-05, 1.90690000000035e-05, 1.8555999999995965e-05, 1.906899999999656e-05, 1.9055999999996465e-05, 1.9070000000002973e-05, 1.855500000000343e-05, 1.905499999999699e-05, 1.9069999999996035e-05, 1.905499999999699e-05, 1.8527999999996825e-05, 1.905500000000393e-05, 1.9042000000003834e-05, 1.9070000000002973e-05, 1.862500000000128e-05, 1.9069999999996035e-05, 1.798699999999709e-05, 1.8000000000004124e-05, 1.908299999999613e-05, 1.855500000000343e-05, 1.9055999999996465e-05, 1.8527999999996825e-05, 1.9042000000003834e-05, 1.908300000000307e-05, 1.905500000000393e-05, 1.9069999999996035e-05, 1.8569000000003e-05, 1.9056000000003404e-05]</msg>
<status status="PASS" starttime="20201110 08:33:56.799" endtime="20201110 08:33:56.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.788" endtime="20201110 08:33:56.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.812" endtime="20201110 08:33:56.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:56.820" endtime="20201110 08:33:56.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.816" endtime="20201110 08:33:56.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.808" endtime="20201110 08:33:56.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.284" endtime="20201110 08:33:56.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.283" endtime="20201110 08:33:56.846"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.869" endtime="20201110 08:33:56.888"></status>
</kw>
<msg timestamp="20201110 08:33:56.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.866" endtime="20201110 08:33:56.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:56.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:56.892" endtime="20201110 08:33:56.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.898" endtime="20201110 08:33:56.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.859" endtime="20201110 08:33:56.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.853" endtime="20201110 08:33:56.905"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:56.921" endtime="20201110 08:33:57.281"></status>
</kw>
<msg timestamp="20201110 08:33:57.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042530972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042550583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:56.918" endtime="20201110 08:33:57.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042530972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042550583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.291" endtime="20201110 08:33:57.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.310" endtime="20201110 08:33:57.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.911" endtime="20201110 08:33:57.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.906" endtime="20201110 08:33:57.317"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.327" level="INFO">${RESULT} = [{'time': 0.042550583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.961100000000271e-05, 'source_diff': 1.961100000000271e-05}, {'time': 0.042572417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.318" endtime="20201110 08:33:57.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.360" level="INFO">${ACCURACY} = {'time': [0.042550583, 0.042572417, 0.042598528, 0.042621764, 0.042648764, 0.042672514, 0.042696611, 0.04271875, 0.04274575, 0.042774847, 0.042801611, 0.042827444, 0.042856528, 0.042880514, 0.04290545...</msg>
<status status="PASS" starttime="20201110 08:33:57.329" endtime="20201110 08:33:57.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.371" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.369" endtime="20201110 08:33:57.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.377" level="INFO">VALUE: [1.961100000000271e-05, 1.9056000000003404e-05, 1.95969999999962e-05, 2.011099999999627e-05, 1.95969999999962e-05, 1.961100000000271e-05, 1.958300000000357e-05, 2.013900000000235e-05, 1.958299999999663e-05, 1.954099999999792e-05, 1.963900000000185e-05, 1.95969999999962e-05, 1.9541999999997395e-05, 1.9570000000003474e-05, 1.9013999999997755e-05, 1.9570000000003474e-05, 2.012500000000278e-05, 1.9514000000005194e-05, 2.0098000000003113e-05, 2.012499999999584e-05, 2.0137999999995937e-05, 1.908299999999613e-05, 1.9013999999997755e-05, 2.012500000000278e-05, 2.011099999999627e-05, 1.961100000000271e-05, 2.00969999999967e-05, 1.906899999999656e-05, 1.961100000000271e-05, 2.011100000000321e-05, 1.961099999999577e-05, 1.9041999999996895e-05, 1.961100000000271e-05, 1.905499999999699e-05, 2.011099999999627e-05, 1.962500000000228e-05, 1.955499999999749e-05, 2.011100000000321e-05, 1.9527999999997825e-05, 1.9569000000004e-05, 1.961100000000271e-05, 1.963900000000185e-05, 2.012499999999584e-05, 1.9084000000002543e-05, 2.009700000000364e-05, 1.911100000000221e-05, 1.962500000000228e-05, 2.011100000000321e-05, 2.012499999999584e-05, 1.905499999999699e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.374" endtime="20201110 08:33:57.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.362" endtime="20201110 08:33:57.380"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.386" endtime="20201110 08:33:57.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.395" endtime="20201110 08:33:57.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.390" endtime="20201110 08:33:57.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.382" endtime="20201110 08:33:57.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.848" endtime="20201110 08:33:57.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:56.847" endtime="20201110 08:33:57.421"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.443" endtime="20201110 08:33:57.462"></status>
</kw>
<msg timestamp="20201110 08:33:57.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.440" endtime="20201110 08:33:57.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:57.466" endtime="20201110 08:33:57.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.472" endtime="20201110 08:33:57.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.433" endtime="20201110 08:33:57.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.427" endtime="20201110 08:33:57.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.495" endtime="20201110 08:33:57.845"></status>
</kw>
<msg timestamp="20201110 08:33:57.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042224389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.492" endtime="20201110 08:33:57.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042224389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:57.854" endtime="20201110 08:33:57.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.873" endtime="20201110 08:33:57.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.485" endtime="20201110 08:33:57.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.480" endtime="20201110 08:33:57.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:57.890" level="INFO">${RESULT} = [{'time': 0.042224389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.066700000000199e-05, 'source_diff': 2.066700000000199e-05}, {'time': 0.042253444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:57.881" endtime="20201110 08:33:57.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:57.923" level="INFO">${ACCURACY} = {'time': [0.042224389, 0.042253444, 0.042278083, 0.042302486, 0.042325139, 0.042349028, 0.042374333, 0.042400125, 0.042430444, 0.042457403, 0.042484139, 0.042508153, 0.042533472, 0.042559264, 0.042588...</msg>
<status status="PASS" starttime="20201110 08:33:57.893" endtime="20201110 08:33:57.923"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.934" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:33:57.931" endtime="20201110 08:33:57.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:57.939" level="INFO">VALUE: [2.066700000000199e-05, 2.0652000000002946e-05, 2.062500000000328e-05, 2.062500000000328e-05, 2.063899999999591e-05, 2.062499999999634e-05, 2.0666000000002516e-05, 2.066699999999505e-05, 2.1179999999995647e-05, 2.119499999999469e-05, 2.011099999999627e-05, 2.012500000000278e-05, 2.0694000000001656e-05, 2.066700000000199e-05, 2.062499999999634e-05, 2.061100000000371e-05, 2.0680000000002086e-05, 2.062499999999634e-05, 2.116700000000249e-05, 2.062499999999634e-05, 2.116699999999555e-05, 2.1180000000002586e-05, 2.113900000000335e-05, 2.063899999999591e-05, 2.062499999999634e-05, 2.063900000000285e-05, 2.116700000000249e-05, 2.012500000000278e-05, 2.013900000000235e-05, 2.011100000000321e-05, 2.008299999999713e-05, 2.118100000000206e-05, 2.1179999999995647e-05, 2.116699999999555e-05, 2.0611999999996244e-05, 2.066700000000199e-05, 2.065300000000242e-05, 2.012499999999584e-05, 2.061100000000371e-05, 2.011100000000321e-05, 2.012499999999584e-05, 2.115300000000292e-05, 2.063899999999591e-05, 2.063900000000285e-05, 2.066700000000199e-05, 2.1179999999995647e-05, 2.012499999999584e-05, 2.0680000000002086e-05, 2.0666000000002516e-05, 2.062499999999634e-05]</msg>
<status status="PASS" starttime="20201110 08:33:57.936" endtime="20201110 08:33:57.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.925" endtime="20201110 08:33:57.942"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:57.950" endtime="20201110 08:33:57.953"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:57.958" endtime="20201110 08:33:57.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.954" endtime="20201110 08:33:57.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.944" endtime="20201110 08:33:57.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.423" endtime="20201110 08:33:57.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.421" endtime="20201110 08:33:57.984"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.007" endtime="20201110 08:33:58.027"></status>
</kw>
<msg timestamp="20201110 08:33:58.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.004" endtime="20201110 08:33:58.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.030" endtime="20201110 08:33:58.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.036" endtime="20201110 08:33:58.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.996" endtime="20201110 08:33:58.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.991" endtime="20201110 08:33:58.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.060" endtime="20201110 08:33:58.409"></status>
</kw>
<msg timestamp="20201110 08:33:58.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042576875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042598042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.057" endtime="20201110 08:33:58.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042576875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042598042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.418" endtime="20201110 08:33:58.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.437" endtime="20201110 08:33:58.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.049" endtime="20201110 08:33:58.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.044" endtime="20201110 08:33:58.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:58.455" level="INFO">${RESULT} = [{'time': 0.042598042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.116700000000249e-05, 'source_diff': 2.116700000000249e-05}, {'time': 0.042625403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:58.445" endtime="20201110 08:33:58.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:58.487" level="INFO">${ACCURACY} = {'time': [0.042598042, 0.042625403, 0.042652125, 0.042676306, 0.042706139, 0.042732222, 0.042761153, 0.042788292, 0.042814153, 0.042842403, 0.042869222, 0.042893319, 0.042923292, 0.042950389, 0.042978...</msg>
<status status="PASS" starttime="20201110 08:33:58.457" endtime="20201110 08:33:58.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.498" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:33:58.496" endtime="20201110 08:33:58.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.504" level="INFO">VALUE: [2.116700000000249e-05, 2.1722000000001795e-05, 2.1194000000002156e-05, 2.168099999999562e-05, 2.119499999999469e-05, 2.1708000000002226e-05, 2.1792000000006584e-05, 2.169499999999519e-05, 2.17090000000017e-05, 2.2236000000001865e-05, 2.1179999999995647e-05, 2.1722000000001795e-05, 2.12090000000012e-05, 2.215299999999698e-05, 2.166700000000299e-05, 2.2236000000001865e-05, 2.1736000000001365e-05, 2.1722000000001795e-05, 2.2236000000001865e-05, 2.168099999999562e-05, 2.222300000000177e-05, 2.1194000000002156e-05, 2.1722000000001795e-05, 2.118100000000206e-05, 2.1722000000001795e-05, 2.1098000000004113e-05, 2.2250000000001435e-05, 2.165300000000342e-05, 2.1736000000001365e-05, 2.1722000000001795e-05, 2.15969999999982e-05, 2.17770000000006e-05, 2.169499999999519e-05, 2.1194000000002156e-05, 2.172299999999433e-05, 2.166699999999605e-05, 2.1708000000002226e-05, 2.1193999999995217e-05, 2.1722000000001795e-05, 2.2221999999995357e-05, 2.1708000000002226e-05, 2.1693999999995717e-05, 2.2249999999994496e-05, 2.222299999999483e-05, 2.218099999999612e-05, 2.116700000000249e-05, 2.2221999999995357e-05, 2.1722000000001795e-05, 2.2222000000002295e-05, 2.2208000000002726e-05]</msg>
<status status="PASS" starttime="20201110 08:33:58.500" endtime="20201110 08:33:58.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.489" endtime="20201110 08:33:58.512"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.519" endtime="20201110 08:33:58.522"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:58.527" endtime="20201110 08:33:58.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.523" endtime="20201110 08:33:58.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.514" endtime="20201110 08:33:58.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.986" endtime="20201110 08:33:58.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:57.985" endtime="20201110 08:33:58.554"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.577" endtime="20201110 08:33:58.596"></status>
</kw>
<msg timestamp="20201110 08:33:58.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.573" endtime="20201110 08:33:58.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:58.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:58.599" endtime="20201110 08:33:58.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.606" endtime="20201110 08:33:58.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.566" endtime="20201110 08:33:58.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.561" endtime="20201110 08:33:58.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:58.629" endtime="20201110 08:33:58.984"></status>
</kw>
<msg timestamp="20201110 08:33:58.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043234722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043256958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.625" endtime="20201110 08:33:58.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043234722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043256958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:58.993" endtime="20201110 08:33:59.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.013" endtime="20201110 08:33:59.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.618" endtime="20201110 08:33:59.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.613" endtime="20201110 08:33:59.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.030" level="INFO">${RESULT} = [{'time': 0.043256958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2235999999994926e-05, 'source_diff': 2.2235999999994926e-05}, {'time': 0.043285222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:33:59.021" endtime="20201110 08:33:59.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.064" level="INFO">${ACCURACY} = {'time': [0.043256958, 0.043285222, 0.043318278, 0.043344014, 0.043375194, 0.043403125, 0.043435292, 0.043463819, 0.043496292, 0.043524986, 0.043557125, 0.043585069, 0.043609861, 0.043634917, 0.043667...</msg>
<status status="PASS" starttime="20201110 08:33:59.032" endtime="20201110 08:33:59.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.076" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.073" endtime="20201110 08:33:59.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.081" level="INFO">VALUE: [2.2235999999994926e-05, 2.2749999999994996e-05, 2.3292000000001145e-05, 2.284699999999945e-05, 2.2735999999995427e-05, 2.2792000000000645e-05, 2.3278000000001575e-05, 2.2750000000001935e-05, 2.2736000000002365e-05, 2.2792000000000645e-05, 2.2778000000001075e-05, 2.2790999999994233e-05, 2.2792000000000645e-05, 2.222300000000177e-05, 2.272300000000227e-05, 2.223700000000134e-05, 2.2735999999995427e-05, 2.2236000000001865e-05, 2.3278000000001575e-05, 2.2693999999996717e-05, 2.2735999999995427e-05, 2.3222000000003296e-05, 2.329100000000167e-05, 2.2292000000000145e-05, 2.3278000000001575e-05, 2.2764000000001505e-05, 2.2750000000001935e-05, 2.22090000000022e-05, 2.3264000000002005e-05, 2.2750000000001935e-05, 2.2264000000001005e-05, 2.222300000000177e-05, 2.2750000000001935e-05, 2.231899999999981e-05, 2.2249999999994496e-05, 2.273700000000184e-05, 2.22090000000022e-05, 2.2736000000002365e-05, 2.218100000000306e-05, 2.2236000000001865e-05, 2.283299999999988e-05, 2.2750000000001935e-05, 2.2792000000000645e-05, 2.279100000000117e-05, 2.2250000000001435e-05, 2.2750000000001935e-05, 2.2222000000002295e-05, 2.2750000000001935e-05, 2.331900000000081e-05, 2.2250000000001435e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.078" endtime="20201110 08:33:59.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.066" endtime="20201110 08:33:59.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.091" endtime="20201110 08:33:59.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.099" endtime="20201110 08:33:59.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.095" endtime="20201110 08:33:59.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.086" endtime="20201110 08:33:59.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.557" endtime="20201110 08:33:59.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:58.555" endtime="20201110 08:33:59.126"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.148" endtime="20201110 08:33:59.167"></status>
</kw>
<msg timestamp="20201110 08:33:59.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.145" endtime="20201110 08:33:59.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.171" endtime="20201110 08:33:59.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.177" endtime="20201110 08:33:59.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.138" endtime="20201110 08:33:59.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.132" endtime="20201110 08:33:59.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.201" endtime="20201110 08:33:59.551"></status>
</kw>
<msg timestamp="20201110 08:33:59.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042764653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.198" endtime="20201110 08:33:59.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042764653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042798764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:33:59.560" endtime="20201110 08:33:59.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.579" endtime="20201110 08:33:59.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.190" endtime="20201110 08:33:59.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.186" endtime="20201110 08:33:59.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:33:59.597" level="INFO">${RESULT} = [{'time': 0.042798764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.411100000000333e-05, 'source_diff': 3.411100000000333e-05}, {'time': 0.042842764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:33:59.588" endtime="20201110 08:33:59.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:33:59.629" level="INFO">${ACCURACY} = {'time': [0.042798764, 0.042842764, 0.042879764, 0.042919778, 0.042961792, 0.043003819, 0.043042792, 0.043086792, 0.043124792, 0.043167806, 0.043209806, 0.043251806, 0.043292819, 0.043336819, 0.043378...</msg>
<status status="PASS" starttime="20201110 08:33:59.599" endtime="20201110 08:33:59.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.641" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:33:59.638" endtime="20201110 08:33:59.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.647" level="INFO">VALUE: [3.411100000000333e-05, 3.473600000000049e-05, 3.447200000000067e-05, 3.4860999999997144e-05, 3.399999999999931e-05, 3.415199999999563e-05, 3.486100000000408e-05, 3.434799999999655e-05, 3.484800000000399e-05, 3.41250000000029e-05, 3.436200000000306e-05, 3.411199999999587e-05, 3.448600000000024e-05, 3.472200000000092e-05, 3.398599999999974e-05, 3.398599999999974e-05, 3.448600000000024e-05, 3.398599999999974e-05, 3.475000000000006e-05, 3.473600000000049e-05, 3.4624999999996464e-05, 3.420800000000085e-05, 3.398599999999974e-05, 3.398599999999974e-05, 3.415300000000204e-05, 3.4096999999996824e-05, 3.461100000000383e-05, 3.434700000000401e-05, 3.484700000000451e-05, 3.448600000000024e-05, 3.456999999999766e-05, 3.448600000000024e-05, 3.4096999999996824e-05, 3.397200000000017e-05, 3.46659999999957e-05, 3.4860999999997144e-05, 3.423599999999999e-05, 3.398699999999921e-05, 3.411199999999587e-05, 3.475000000000006e-05, 3.4374999999996214e-05, 3.4360999999996644e-05, 3.448600000000024e-05, 3.476400000000657e-05, 3.409700000000376e-05, 3.394400000000103e-05, 3.418100000000118e-05, 3.430599999999784e-05, 3.413900000000247e-05, 3.399999999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:33:59.644" endtime="20201110 08:33:59.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.631" endtime="20201110 08:33:59.650"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.657" endtime="20201110 08:33:59.659"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:33:59.665" endtime="20201110 08:33:59.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.661" endtime="20201110 08:33:59.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.652" endtime="20201110 08:33:59.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.128" endtime="20201110 08:33:59.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.126" endtime="20201110 08:33:59.691"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.714" endtime="20201110 08:33:59.733"></status>
</kw>
<msg timestamp="20201110 08:33:59.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.711" endtime="20201110 08:33:59.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:33:59.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:33:59.737" endtime="20201110 08:33:59.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.743" endtime="20201110 08:33:59.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.703" endtime="20201110 08:33:59.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.698" endtime="20201110 08:33:59.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:33:59.767" endtime="20201110 08:34:00.116"></status>
</kw>
<msg timestamp="20201110 08:34:00.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04278275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042818111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:33:59.763" endtime="20201110 08:34:00.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04278275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042818111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:00.125" endtime="20201110 08:34:00.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.144" endtime="20201110 08:34:00.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.756" endtime="20201110 08:34:00.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.751" endtime="20201110 08:34:00.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.162" level="INFO">${RESULT} = [{'time': 0.042818111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5360999999997644e-05, 'source_diff': 3.5360999999997644e-05}, {'time': 0.042856097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:00.153" endtime="20201110 08:34:00.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.194" level="INFO">${ACCURACY} = {'time': [0.042818111, 0.042856097, 0.042895097, 0.042935125, 0.042975125, 0.043017125, 0.043061125, 0.043099125, 0.043140125, 0.043183153, 0.043226139, 0.043267208, 0.043307153, 0.043350194, 0.043391...</msg>
<status status="PASS" starttime="20201110 08:34:00.164" endtime="20201110 08:34:00.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.205" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.202" endtime="20201110 08:34:00.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.210" level="INFO">VALUE: [3.5360999999997644e-05, 3.561100000000483e-05, 3.570800000000235e-05, 3.5374999999997214e-05, 3.541700000000286e-05, 3.569400000000278e-05, 3.550000000000081e-05, 3.586100000000508e-05, 3.523600000000099e-05, 3.551400000000038e-05, 3.547199999999473e-05, 3.568000000000321e-05, 3.56250000000044e-05, 3.5513000000000905e-05, 3.561100000000483e-05, 3.5777000000000725e-05, 3.548600000000124e-05, 3.5624999999997464e-05, 3.561199999999737e-05, 3.5902999999996854e-05, 3.573700000000096e-05, 3.5638999999997034e-05, 3.576400000000063e-05, 3.5624999999997464e-05, 3.56250000000044e-05, 3.579199999999977e-05, 3.5166999999995674e-05, 3.57780000000002e-05, 3.522200000000142e-05, 3.5846999999998574e-05, 3.5124999999996964e-05, 3.548600000000124e-05, 3.500000000000031e-05, 3.5888999999997284e-05, 3.5874999999997714e-05, 3.5860999999998144e-05, 3.522199999999448e-05, 3.56250000000044e-05, 3.513900000000347e-05, 3.5846999999998574e-05, 3.548600000000124e-05, 3.5860999999998144e-05, 3.5610999999997894e-05, 3.5360999999997644e-05, 3.572300000000139e-05, 3.5360999999997644e-05, 3.575000000000106e-05, 3.586199999999762e-05, 3.523700000000046e-05, 3.525000000000056e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.207" endtime="20201110 08:34:00.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.196" endtime="20201110 08:34:00.215"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.221" endtime="20201110 08:34:00.224"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.230" endtime="20201110 08:34:00.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.225" endtime="20201110 08:34:00.253"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.217" endtime="20201110 08:34:00.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.693" endtime="20201110 08:34:00.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:59.692" endtime="20201110 08:34:00.256"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.279" endtime="20201110 08:34:00.298"></status>
</kw>
<msg timestamp="20201110 08:34:00.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.275" endtime="20201110 08:34:00.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.302" endtime="20201110 08:34:00.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.308" endtime="20201110 08:34:00.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.268" endtime="20201110 08:34:00.314"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.262" endtime="20201110 08:34:00.316"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.333" endtime="20201110 08:34:00.689"></status>
</kw>
<msg timestamp="20201110 08:34:00.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042620583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.330" endtime="20201110 08:34:00.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042620583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042657375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.699" endtime="20201110 08:34:00.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.718" endtime="20201110 08:34:00.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.322" endtime="20201110 08:34:00.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.317" endtime="20201110 08:34:00.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:00.735" level="INFO">${RESULT} = [{'time': 0.042657375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.679200000000077e-05, 'source_diff': 3.679200000000077e-05}, {'time': 0.042701375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:00.726" endtime="20201110 08:34:00.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:00.770" level="INFO">${ACCURACY} = {'time': [0.042657375, 0.042701375, 0.042741375, 0.042784389, 0.042826389, 0.042865458, 0.042906403, 0.042948403, 0.042993403, 0.043034417, 0.043073417, 0.043116417, 0.043157444, 0.043202431, 0.043241...</msg>
<status status="PASS" starttime="20201110 08:34:00.737" endtime="20201110 08:34:00.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.783" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:34:00.780" endtime="20201110 08:34:00.784"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.790" level="INFO">VALUE: [3.679200000000077e-05, 3.622200000000242e-05, 3.673599999999555e-05, 3.6124999999997964e-05, 3.623600000000199e-05, 3.668000000000421e-05, 3.611100000000533e-05, 3.647200000000267e-05, 3.598600000000174e-05, 3.674999999999512e-05, 3.648600000000224e-05, 3.6666999999997174e-05, 3.637500000000515e-05, 3.686199999999862e-05, 3.6624999999998464e-05, 3.6138999999997534e-05, 3.623599999999505e-05, 3.6860999999999144e-05, 3.651400000000138e-05, 3.652800000000095e-05, 3.6138999999997534e-05, 3.6152999999997104e-05, 3.611100000000533e-05, 3.690300000000479e-05, 3.687500000000565e-05, 3.598600000000174e-05, 3.636100000000558e-05, 3.6624999999998464e-05, 3.6096999999998824e-05, 3.625000000000156e-05, 3.625000000000156e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.650000000000181e-05, 3.634700000000601e-05, 3.6360999999998644e-05, 3.6110999999998394e-05, 3.6013000000001405e-05, 3.636100000000558e-05, 3.60979999999983e-05, 3.675000000000206e-05, 3.686199999999862e-05, 3.643000000000396e-05, 3.59859999999948e-05, 3.630599999999984e-05, 3.636100000000558e-05, 3.6374999999998214e-05, 3.604200000000002e-05, 3.605599999999959e-05, 3.648600000000224e-05]</msg>
<status status="PASS" starttime="20201110 08:34:00.786" endtime="20201110 08:34:00.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.772" endtime="20201110 08:34:00.794"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.802" endtime="20201110 08:34:00.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:00.814" endtime="20201110 08:34:00.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.808" endtime="20201110 08:34:00.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.796" endtime="20201110 08:34:00.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.258" endtime="20201110 08:34:00.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.257" endtime="20201110 08:34:00.842"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.869" endtime="20201110 08:34:00.896"></status>
</kw>
<msg timestamp="20201110 08:34:00.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.865" endtime="20201110 08:34:00.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:00.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:00.904" endtime="20201110 08:34:00.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.919" endtime="20201110 08:34:00.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.857" endtime="20201110 08:34:00.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.850" endtime="20201110 08:34:00.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:00.943" endtime="20201110 08:34:01.277"></status>
</kw>
<msg timestamp="20201110 08:34:01.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049504153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049541889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:00.940" endtime="20201110 08:34:01.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049504153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049541889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:01.286" endtime="20201110 08:34:01.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.305" endtime="20201110 08:34:01.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.933" endtime="20201110 08:34:01.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.928" endtime="20201110 08:34:01.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.325" level="INFO">${RESULT} = [{'time': 0.049541889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.773599999999655e-05, 'source_diff': 3.773599999999655e-05}, {'time': 0.049583875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:01.313" endtime="20201110 08:34:01.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.357" level="INFO">${ACCURACY} = {'time': [0.049541889, 0.049583875, 0.049626903, 0.049669889, 0.049711889, 0.049752903, 0.049799903, 0.049843903, 0.049884917, 0.049931931, 0.049973917, 0.050015931, 0.050057944, 0.050100944, 0.050143...</msg>
<status status="PASS" starttime="20201110 08:34:01.327" endtime="20201110 08:34:01.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.368" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.366" endtime="20201110 08:34:01.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.374" level="INFO">VALUE: [3.773599999999655e-05, 3.7610999999999895e-05, 3.7374999999999214e-05, 3.773600000000349e-05, 3.69580000000036e-05, 3.758400000000023e-05, 3.772199999999698e-05, 3.722200000000342e-05, 3.772300000000339e-05, 3.761199999999937e-05, 3.7861000000000145e-05, 3.75979999999998e-05, 3.7374999999999214e-05, 3.698600000000274e-05, 3.7638999999999034e-05, 3.791700000000536e-05, 3.773599999999655e-05, 3.79450000000045e-05, 3.7110999999999394e-05, 3.773600000000349e-05, 3.723599999999605e-05, 3.719500000000375e-05, 3.722200000000342e-05, 3.779200000000177e-05, 3.747199999999673e-05, 3.723599999999605e-05, 3.7138999999998534e-05, 3.748600000000324e-05, 3.7055000000001115e-05, 3.782000000000091e-05, 3.7861000000000145e-05, 3.7916999999998424e-05, 3.723599999999605e-05, 3.708399999999973e-05, 3.742999999999802e-05, 3.774999999999612e-05, 3.749999999999587e-05, 3.7124999999998964e-05, 3.7236999999995524e-05, 3.7486999999995774e-05, 3.7888999999999284e-05, 3.7360999999999644e-05, 3.748600000000324e-05, 3.775000000000306e-05, 3.747199999999673e-05, 3.7874999999999714e-05, 3.776399999999569e-05, 3.723600000000299e-05, 3.773600000000349e-05, 3.7624999999999464e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.371" endtime="20201110 08:34:01.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.359" endtime="20201110 08:34:01.377"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.384" endtime="20201110 08:34:01.386"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.392" endtime="20201110 08:34:01.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.388" endtime="20201110 08:34:01.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.379" endtime="20201110 08:34:01.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.844" endtime="20201110 08:34:01.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:00.843" endtime="20201110 08:34:01.421"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.444" endtime="20201110 08:34:01.464"></status>
</kw>
<msg timestamp="20201110 08:34:01.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.441" endtime="20201110 08:34:01.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:01.469" endtime="20201110 08:34:01.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.476" endtime="20201110 08:34:01.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.434" endtime="20201110 08:34:01.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.428" endtime="20201110 08:34:01.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.504" endtime="20201110 08:34:01.850"></status>
</kw>
<msg timestamp="20201110 08:34:01.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042668556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04270675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:01.500" endtime="20201110 08:34:01.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042668556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04270675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:01.859" endtime="20201110 08:34:01.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.878" endtime="20201110 08:34:01.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.492" endtime="20201110 08:34:01.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.486" endtime="20201110 08:34:01.885"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:01.895" level="INFO">${RESULT} = [{'time': 0.04270675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.819399999999834e-05, 'source_diff': 3.819399999999834e-05}, {'time': 0.042747792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:01.886" endtime="20201110 08:34:01.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:01.926" level="INFO">${ACCURACY} = {'time': [0.04270675, 0.042747792, 0.042795764, 0.042843764, 0.042884778, 0.042925778, 0.042968778, 0.043014792, 0.043061819, 0.043108792, 0.043150806, 0.043196806, 0.043242806, 0.043290861, 0.0433328...</msg>
<status status="PASS" starttime="20201110 08:34:01.897" endtime="20201110 08:34:01.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.937" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:34:01.935" endtime="20201110 08:34:01.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:01.943" level="INFO">VALUE: [3.819399999999834e-05, 3.802800000000245e-05, 3.8611000000000895e-05, 3.8444999999998064e-05, 3.799999999999637e-05, 3.872199999999798e-05, 3.873599999999755e-05, 3.8875000000000715e-05, 3.8375000000000214e-05, 3.8111000000000395e-05, 3.8486999999996774e-05, 3.811199999999987e-05, 3.8666999999999174e-05, 3.8402999999999354e-05, 3.847200000000467e-05, 3.852799999999601e-05, 3.8583000000001755e-05, 3.8124999999999964e-05, 3.8875000000000715e-05, 3.799999999999637e-05, 3.819399999999834e-05, 3.869399999999884e-05, 3.873599999999755e-05, 3.829200000000227e-05, 3.824999999999662e-05, 3.8611000000000895e-05, 3.8347000000001075e-05, 3.873599999999755e-05, 3.872199999999798e-05, 3.823599999999705e-05, 3.823600000000399e-05, 3.8111000000000395e-05, 3.84859999999973e-05, 3.79859999999968e-05, 3.8110999999993456e-05, 3.849999999999687e-05, 3.8708999999997884e-05, 3.8402999999999354e-05, 3.848600000000424e-05, 3.851399999999644e-05, 3.872199999999798e-05, 3.8639000000000034e-05, 3.875000000000406e-05, 3.875000000000406e-05, 3.8597000000001325e-05, 3.850000000000381e-05, 3.8833000000002005e-05, 3.8111000000000395e-05, 3.8611000000000895e-05, 3.8347000000001075e-05]</msg>
<status status="PASS" starttime="20201110 08:34:01.939" endtime="20201110 08:34:01.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.928" endtime="20201110 08:34:01.946"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:01.952" endtime="20201110 08:34:01.955"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:01.961" endtime="20201110 08:34:01.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.956" endtime="20201110 08:34:01.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.948" endtime="20201110 08:34:01.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.423" endtime="20201110 08:34:01.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.422" endtime="20201110 08:34:01.986"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.011" endtime="20201110 08:34:02.030"></status>
</kw>
<msg timestamp="20201110 08:34:02.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.007" endtime="20201110 08:34:02.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.034" endtime="20201110 08:34:02.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.040" endtime="20201110 08:34:02.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.000" endtime="20201110 08:34:02.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.992" endtime="20201110 08:34:02.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.063" endtime="20201110 08:34:02.395"></status>
</kw>
<msg timestamp="20201110 08:34:02.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043809306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.060" endtime="20201110 08:34:02.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043809306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.405" endtime="20201110 08:34:02.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.423" endtime="20201110 08:34:02.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.053" endtime="20201110 08:34:02.429"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.048" endtime="20201110 08:34:02.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:02.441" level="INFO">${RESULT} = [{'time': 0.043809306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.977799999999726e-05, 'source_diff': 3.977799999999726e-05}, {'time': 0.043851319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:02.432" endtime="20201110 08:34:02.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:02.472" level="INFO">${ACCURACY} = {'time': [0.043809306, 0.043851319, 0.043898319, 0.043944389, 0.043989333, 0.044031375, 0.044075333, 0.044121347, 0.044168361, 0.044215361, 0.044262375, 0.044310361, 0.044356389, 0.044398375, 0.044441...</msg>
<status status="PASS" starttime="20201110 08:34:02.443" endtime="20201110 08:34:02.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.483" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:34:02.481" endtime="20201110 08:34:02.484"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.489" level="INFO">VALUE: [3.977799999999726e-05, 3.899999999999737e-05, 3.917999999999977e-05, 3.954200000000352e-05, 3.9611000000001895e-05, 3.901399999999694e-05, 3.9861000000002145e-05, 3.9860999999995206e-05, 3.947200000000567e-05, 3.9875000000001715e-05, 3.949999999999787e-05, 3.9611000000001895e-05, 3.9389000000000784e-05, 3.9582999999995816e-05, 3.949999999999787e-05, 3.9555000000003615e-05, 3.9360999999994706e-05, 3.9361000000001645e-05, 3.9125000000000965e-05, 3.9276999999997286e-05, 3.923600000000499e-05, 3.9624999999994526e-05, 3.9472999999998204e-05, 3.94859999999983e-05, 3.8986999999997274e-05, 3.9625000000001465e-05, 3.974999999999812e-05, 3.9110999999994456e-05, 3.9804999999996926e-05, 3.9582999999995816e-05, 3.9846999999995636e-05, 3.897199999999823e-05, 3.9360999999994706e-05, 3.94859999999983e-05, 3.973599999999855e-05, 3.949999999999787e-05, 3.9610999999994956e-05, 3.89859999999978e-05, 3.9153000000000104e-05, 3.924999999999762e-05, 3.976399999999769e-05, 3.9708999999998884e-05, 3.923600000000499e-05, 3.9541000000004045e-05, 3.941600000000045e-05, 3.9611000000001895e-05, 3.949999999999787e-05, 3.949999999999787e-05, 3.934800000000155e-05, 3.986199999999468e-05]</msg>
<status status="PASS" starttime="20201110 08:34:02.485" endtime="20201110 08:34:02.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.474" endtime="20201110 08:34:02.492"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.498" endtime="20201110 08:34:02.501"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:02.506" endtime="20201110 08:34:02.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.502" endtime="20201110 08:34:02.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.493" endtime="20201110 08:34:02.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.988" endtime="20201110 08:34:02.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:01.987" endtime="20201110 08:34:02.532"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.555" endtime="20201110 08:34:02.574"></status>
</kw>
<msg timestamp="20201110 08:34:02.575" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.551" endtime="20201110 08:34:02.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:02.577" endtime="20201110 08:34:02.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.583" endtime="20201110 08:34:02.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.544" endtime="20201110 08:34:02.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.538" endtime="20201110 08:34:02.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.608" endtime="20201110 08:34:02.962"></status>
</kw>
<msg timestamp="20201110 08:34:02.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041880514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.605" endtime="20201110 08:34:02.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:02.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041880514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041920403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:02.972" endtime="20201110 08:34:02.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:02.992" endtime="20201110 08:34:02.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.598" endtime="20201110 08:34:02.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.593" endtime="20201110 08:34:03.000"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.011" level="INFO">${RESULT} = [{'time': 0.041920403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9889000000001285e-05, 'source_diff': 3.9889000000001285e-05}, {'time': 0.041970444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:03.001" endtime="20201110 08:34:03.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.044" level="INFO">${ACCURACY} = {'time': [0.041920403, 0.041970444, 0.042015417, 0.042059486, 0.042105417, 0.042147458, 0.042195444, 0.042243431, 0.042293458, 0.042336444, 0.042384472, 0.042432472, 0.042476458, 0.042520472, 0.042564...</msg>
<status status="PASS" starttime="20201110 08:34:03.013" endtime="20201110 08:34:03.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.056" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.053" endtime="20201110 08:34:03.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.062" level="INFO">VALUE: [3.9889000000001285e-05, 4.0083000000003255e-05, 4.031999999999647e-05, 4.043000000000102e-05, 4.0111000000002395e-05, 4.0026999999998036e-05, 4.074999999999912e-05, 3.9986999999998274e-05, 4.049999999999887e-05, 4.073599999999955e-05, 4.001399999999794e-05, 4.023599999999905e-05, 4.023599999999905e-05, 3.999999999999837e-05, 4.0374999999995276e-05, 4.049999999999887e-05, 4.076400000000563e-05, 4.002799999999751e-05, 4.0875000000002715e-05, 4.0125000000001965e-05, 4.0833000000004005e-05, 4.0333000000003505e-05, 4.023600000000599e-05, 4.020799999999991e-05, 4.073599999999955e-05, 4.0458999999999634e-05, 4.0611000000002895e-05, 4.051399999999844e-05, 3.9944999999999564e-05, 4.023600000000599e-05, 3.9972999999998704e-05, 4.024999999999862e-05, 4.0375000000002215e-05, 4.0125000000001965e-05, 4.0111000000002395e-05, 4.073599999999955e-05, 4.0403000000001354e-05, 4.0111000000002395e-05, 4.024999999999862e-05, 3.99859999999988e-05, 4.029199999999733e-05, 4.0875000000002715e-05, 3.997199999999923e-05, 4.023599999999905e-05, 4.04859999999993e-05, 4.0111000000002395e-05, 4.0860999999996206e-05, 3.999999999999837e-05, 4.023599999999905e-05, 4.0791000000005295e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.058" endtime="20201110 08:34:03.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.046" endtime="20201110 08:34:03.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.072" endtime="20201110 08:34:03.075"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.081" endtime="20201110 08:34:03.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.077" endtime="20201110 08:34:03.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.067" endtime="20201110 08:34:03.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.534" endtime="20201110 08:34:03.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:02.533" endtime="20201110 08:34:03.108"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.132" endtime="20201110 08:34:03.153"></status>
</kw>
<msg timestamp="20201110 08:34:03.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.129" endtime="20201110 08:34:03.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.157" endtime="20201110 08:34:03.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.163" endtime="20201110 08:34:03.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.121" endtime="20201110 08:34:03.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.115" endtime="20201110 08:34:03.170"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.190" endtime="20201110 08:34:03.547"></status>
</kw>
<msg timestamp="20201110 08:34:03.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04465375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044694722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:03.186" endtime="20201110 08:34:03.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04465375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044694722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:03.557" endtime="20201110 08:34:03.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.577" endtime="20201110 08:34:03.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.177" endtime="20201110 08:34:03.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.172" endtime="20201110 08:34:03.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:03.596" level="INFO">${RESULT} = [{'time': 0.044694722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.097200000000023e-05, 'source_diff': 4.097200000000023e-05}, {'time': 0.044745708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:03.586" endtime="20201110 08:34:03.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:03.629" level="INFO">${ACCURACY} = {'time': [0.044694722, 0.044745708, 0.044796764, 0.044847722, 0.044897722, 0.044941764, 0.04498775, 0.045031764, 0.04507575, 0.04511875, 0.04516675, 0.045212806, 0.045258764, 0.045303764, 0.045346792,...</msg>
<status status="PASS" starttime="20201110 08:34:03.598" endtime="20201110 08:34:03.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.640" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:34:03.638" endtime="20201110 08:34:03.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.646" level="INFO">VALUE: [4.097200000000023e-05, 4.1583000000004755e-05, 4.1667000000002175e-05, 4.172200000000098e-05, 4.094400000000109e-05, 4.1903000000002855e-05, 4.14860000000003e-05, 4.1625000000003465e-05, 4.1624999999996526e-05, 4.09859999999998e-05, 4.14860000000003e-05, 4.177799999999926e-05, 4.123600000000005e-05, 4.1111000000003395e-05, 4.099999999999937e-05, 4.172200000000098e-05, 4.097200000000023e-05, 4.123600000000005e-05, 4.134800000000355e-05, 4.18059999999984e-05, 4.1624999999996526e-05, 4.186200000000362e-05, 4.1916999999995486e-05, 4.1624999999996526e-05, 4.1346999999997136e-05, 4.1860999999997206e-05, 4.124999999999962e-05, 4.100000000000631e-05, 4.1318999999997996e-05, 4.09859999999998e-05, 4.101399999999894e-05, 4.1111000000003395e-05, 4.1610999999996956e-05, 4.124999999999962e-05, 4.173600000000055e-05, 4.1596999999997386e-05, 4.1111000000003395e-05, 4.1096999999996886e-05, 4.1874999999996776e-05, 4.173600000000055e-05, 4.149999999999987e-05, 4.175000000000012e-05, 4.192999999999558e-05, 4.138799999999637e-05, 4.1486999999999774e-05, 4.0972999999999704e-05, 4.099999999999937e-05, 4.149999999999987e-05, 4.1068999999997746e-05, 4.100000000000631e-05]</msg>
<status status="PASS" starttime="20201110 08:34:03.643" endtime="20201110 08:34:03.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.631" endtime="20201110 08:34:03.656"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.663" endtime="20201110 08:34:03.666"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:03.672" endtime="20201110 08:34:03.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.668" endtime="20201110 08:34:03.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.658" endtime="20201110 08:34:03.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.110" endtime="20201110 08:34:03.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.109" endtime="20201110 08:34:03.699"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.723" endtime="20201110 08:34:03.744"></status>
</kw>
<msg timestamp="20201110 08:34:03.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.720" endtime="20201110 08:34:03.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:03.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:03.748" endtime="20201110 08:34:03.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.754" endtime="20201110 08:34:03.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.712" endtime="20201110 08:34:03.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.706" endtime="20201110 08:34:03.762"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:03.779" endtime="20201110 08:34:04.145"></status>
</kw>
<msg timestamp="20201110 08:34:04.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044999375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045041986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:03.776" endtime="20201110 08:34:04.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044999375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045041986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.155" endtime="20201110 08:34:04.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.175" endtime="20201110 08:34:04.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.768" endtime="20201110 08:34:04.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.763" endtime="20201110 08:34:04.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.195" level="INFO">${RESULT} = [{'time': 0.045041986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2610999999997956e-05, 'source_diff': 4.2610999999997956e-05}, {'time': 0.045092014, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:04.184" endtime="20201110 08:34:04.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.228" level="INFO">${ACCURACY} = {'time': [0.045041986, 0.045092014, 0.045139, 0.045189, 0.045241014, 0.045288028, 0.045339042, 0.045389028, 0.045438028, 0.045490097, 0.045541056, 0.045591056, 0.045643069, 0.045691083, 0.045739083, 0...</msg>
<status status="PASS" starttime="20201110 08:34:04.197" endtime="20201110 08:34:04.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.239" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.237" endtime="20201110 08:34:04.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.245" level="INFO">VALUE: [4.2610999999997956e-05, 4.2638999999997096e-05, 4.19860000000008e-05, 4.2610999999997956e-05, 4.2681000000002745e-05, 4.2625000000004465e-05, 4.2139000000003535e-05, 4.222199999999454e-05, 4.19860000000008e-05, 4.243000000000302e-05, 4.225000000000062e-05, 4.2237000000000524e-05, 4.2875000000004715e-05, 4.250000000000087e-05, 4.2388999999996846e-05, 4.2361000000004645e-05, 4.225000000000062e-05, 4.2360999999997706e-05, 4.225000000000062e-05, 4.276400000000069e-05, 4.200000000000037e-05, 4.2653000000003605e-05, 4.2874999999997776e-05, 4.2861000000005145e-05, 4.2346999999998136e-05, 4.2360999999997706e-05, 4.24860000000013e-05, 4.197200000000123e-05, 4.275000000000112e-05, 4.2347000000005075e-05, 4.19860000000008e-05, 4.19860000000008e-05, 4.275000000000112e-05, 4.25980000000048e-05, 4.223600000000105e-05, 4.225000000000062e-05, 4.2111000000004395e-05, 4.273599999999461e-05, 4.201399999999994e-05, 4.275000000000112e-05, 4.273600000000155e-05, 4.200000000000037e-05, 4.2832999999999066e-05, 4.223600000000105e-05, 4.2611000000004895e-05, 4.2346999999998136e-05, 4.276400000000069e-05, 4.2388999999996846e-05, 4.2791000000000357e-05, 4.2874999999997776e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.242" endtime="20201110 08:34:04.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.230" endtime="20201110 08:34:04.249"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.256" endtime="20201110 08:34:04.258"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.264" endtime="20201110 08:34:04.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.260" endtime="20201110 08:34:04.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.251" endtime="20201110 08:34:04.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.701" endtime="20201110 08:34:04.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:03.700" endtime="20201110 08:34:04.291"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.315" endtime="20201110 08:34:04.335"></status>
</kw>
<msg timestamp="20201110 08:34:04.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.312" endtime="20201110 08:34:04.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.339" endtime="20201110 08:34:04.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.346" endtime="20201110 08:34:04.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.304" endtime="20201110 08:34:04.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.298" endtime="20201110 08:34:04.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.371" endtime="20201110 08:34:04.714"></status>
</kw>
<msg timestamp="20201110 08:34:04.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044595264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044639056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.367" endtime="20201110 08:34:04.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044595264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044639056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.725" endtime="20201110 08:34:04.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.744" endtime="20201110 08:34:04.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.360" endtime="20201110 08:34:04.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.355" endtime="20201110 08:34:04.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:04.762" level="INFO">${RESULT} = [{'time': 0.044639056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.379200000000083e-05, 'source_diff': 4.379200000000083e-05}, {'time': 0.044689028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:04.753" endtime="20201110 08:34:04.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:04.794" level="INFO">${ACCURACY} = {'time': [0.044639056, 0.044689028, 0.044739042, 0.044789042, 0.044838056, 0.044890056, 0.044942056, 0.044994069, 0.045047083, 0.045093069, 0.045143083, 0.045191083, 0.045238097, 0.045286097, 0.045334...</msg>
<status status="PASS" starttime="20201110 08:34:04.764" endtime="20201110 08:34:04.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.805" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:34:04.802" endtime="20201110 08:34:04.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.810" level="INFO">VALUE: [4.379200000000083e-05, 4.348599999999536e-05, 4.3374999999998276e-05, 4.3473000000002204e-05, 4.3624999999998526e-05, 4.299999999999443e-05, 4.3237000000001524e-05, 4.3624999999998526e-05, 4.3374999999998276e-05, 4.3860999999999206e-05, 4.3874999999998776e-05, 4.3110999999998456e-05, 4.3360999999998706e-05, 4.3860999999999206e-05, 4.3861000000006145e-05, 4.3888999999998346e-05, 4.3360999999998706e-05, 4.300000000000137e-05, 4.372199999999604e-05, 4.3082999999999316e-05, 4.3096999999998886e-05, 4.375000000000212e-05, 4.29860000000018e-05, 4.3874999999998776e-05, 4.373599999999561e-05, 4.299999999999443e-05, 4.323600000000205e-05, 4.373600000000255e-05, 4.300000000000137e-05, 4.3473000000002204e-05, 4.3389000000004785e-05, 4.3360999999998706e-05, 4.301400000000094e-05, 4.3374999999998276e-05, 4.348599999999536e-05, 4.3874999999998776e-05, 4.345799999999622e-05, 4.375000000000212e-05, 4.3666999999997236e-05, 4.370800000000341e-05, 4.298599999999486e-05, 4.350000000000187e-05, 4.300000000000137e-05, 4.300000000000137e-05, 4.3860999999999206e-05, 4.3110999999998456e-05, 4.3195000000002814e-05, 4.3361000000005645e-05, 4.3874999999998776e-05, 4.3237000000001524e-05]</msg>
<status status="PASS" starttime="20201110 08:34:04.807" endtime="20201110 08:34:04.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.795" endtime="20201110 08:34:04.814"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.820" endtime="20201110 08:34:04.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:04.829" endtime="20201110 08:34:04.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.824" endtime="20201110 08:34:04.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.815" endtime="20201110 08:34:04.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.293" endtime="20201110 08:34:04.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.292" endtime="20201110 08:34:04.854"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.878" endtime="20201110 08:34:04.898"></status>
</kw>
<msg timestamp="20201110 08:34:04.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.874" endtime="20201110 08:34:04.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:04.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:04.901" endtime="20201110 08:34:04.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.908" endtime="20201110 08:34:04.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.867" endtime="20201110 08:34:04.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.861" endtime="20201110 08:34:04.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:04.933" endtime="20201110 08:34:05.271"></status>
</kw>
<msg timestamp="20201110 08:34:05.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042828833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042873403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:04.929" endtime="20201110 08:34:05.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042828833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042873403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:05.281" endtime="20201110 08:34:05.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.300" endtime="20201110 08:34:05.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.922" endtime="20201110 08:34:05.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.916" endtime="20201110 08:34:05.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.320" level="INFO">${RESULT} = [{'time': 0.042873403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.457000000000072e-05, 'source_diff': 4.457000000000072e-05}, {'time': 0.042921403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:05.310" endtime="20201110 08:34:05.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.351" level="INFO">${ACCURACY} = {'time': [0.042873403, 0.042921403, 0.042969403, 0.043018403, 0.043071431, 0.043123431, 0.043170431, 0.043219431, 0.043267431, 0.043319444, 0.043372444, 0.043426458, 0.043473472, 0.043526472, 0.043577...</msg>
<status status="PASS" starttime="20201110 08:34:05.322" endtime="20201110 08:34:05.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.362" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.359" endtime="20201110 08:34:05.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.367" level="INFO">VALUE: [4.457000000000072e-05, 4.4610999999999956e-05, 4.4361000000006645e-05, 4.4360999999999706e-05, 4.3973000000002704e-05, 4.434799999999961e-05, 4.400000000000237e-05, 4.409799999999936e-05, 4.3987000000002274e-05, 4.480500000000193e-05, 4.44860000000033e-05, 4.450000000000287e-05, 4.4624999999999526e-05, 4.423599999999611e-05, 4.424999999999568e-05, 4.397199999999629e-05, 4.4610999999999956e-05, 4.4110999999999456e-05, 4.4638999999999096e-05, 4.449999999999593e-05, 4.39860000000028e-05, 4.45139999999955e-05, 4.4360999999999706e-05, 4.4110999999999456e-05, 4.447200000000373e-05, 4.39860000000028e-05, 4.4361000000006645e-05, 4.488799999999987e-05, 4.434800000000655e-05, 4.411200000000587e-05, 4.4487000000002774e-05, 4.4624999999999526e-05, 4.400000000000237e-05, 4.423599999999611e-05, 4.39860000000028e-05, 4.44860000000033e-05, 4.4124999999999026e-05, 4.4417000000004925e-05, 4.447200000000373e-05, 4.4610999999999956e-05, 4.39860000000028e-05, 4.4374999999999276e-05, 4.473600000000355e-05, 4.4624999999999526e-05, 4.4110999999999456e-05, 4.426399999999525e-05, 4.427800000000176e-05, 4.422200000000348e-05, 4.423599999999611e-05, 4.450000000000287e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.364" endtime="20201110 08:34:05.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.353" endtime="20201110 08:34:05.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.377" endtime="20201110 08:34:05.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.385" endtime="20201110 08:34:05.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.381" endtime="20201110 08:34:05.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.372" endtime="20201110 08:34:05.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.857" endtime="20201110 08:34:05.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:04.855" endtime="20201110 08:34:05.411"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.434" endtime="20201110 08:34:05.454"></status>
</kw>
<msg timestamp="20201110 08:34:05.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.430" endtime="20201110 08:34:05.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.461" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:05.457" endtime="20201110 08:34:05.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.464" endtime="20201110 08:34:05.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.423" endtime="20201110 08:34:05.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.417" endtime="20201110 08:34:05.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.489" endtime="20201110 08:34:05.840"></status>
</kw>
<msg timestamp="20201110 08:34:05.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042058681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04210375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:05.485" endtime="20201110 08:34:05.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042058681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04210375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:05.849" endtime="20201110 08:34:05.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.868" endtime="20201110 08:34:05.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.478" endtime="20201110 08:34:05.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.473" endtime="20201110 08:34:05.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:05.887" level="INFO">${RESULT} = [{'time': 0.04210375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.5069000000001747e-05, 'source_diff': 4.5069000000001747e-05}, {'time': 0.042156764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:34:05.878" endtime="20201110 08:34:05.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:05.919" level="INFO">${ACCURACY} = {'time': [0.04210375, 0.042156764, 0.042207778, 0.042260764, 0.042314792, 0.042365778, 0.042420792, 0.042468806, 0.042519806, 0.042572847, 0.042622833, 0.042675819, 0.042723819, 0.042778819, 0.0428318...</msg>
<status status="PASS" starttime="20201110 08:34:05.890" endtime="20201110 08:34:05.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.931" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:34:05.928" endtime="20201110 08:34:05.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:05.936" level="INFO">VALUE: [4.5069000000001747e-05, 4.5375000000000276e-05, 4.5625000000000526e-05, 4.5166999999998736e-05, 4.5013999999996e-05, 4.572199999999804e-05, 4.5361000000000706e-05, 4.584800000000111e-05, 4.574999999999718e-05, 4.566599999999976e-05, 4.574999999999718e-05, 4.537499999999334e-05, 4.5597000000001386e-05, 4.5611000000000956e-05, 4.524999999999668e-05, 4.5875000000000776e-05, 4.573599999999761e-05, 4.5847000000001636e-05, 4.548599999999736e-05, 4.5416999999998986e-05, 4.547199999999779e-05, 4.5375000000000276e-05, 4.5847000000001636e-05, 4.554199999999564e-05, 4.5652999999999666e-05, 4.547199999999779e-05, 4.5097000000000886e-05, 4.548599999999736e-05, 4.5375000000000276e-05, 4.4987000000003274e-05, 4.5861000000001206e-05, 4.5472999999997266e-05, 4.5625000000000526e-05, 4.549999999999693e-05, 4.577799999999632e-05, 4.5097000000000886e-05, 4.5611000000000956e-05, 4.548599999999736e-05, 4.574999999999718e-05, 4.505500000000218e-05, 4.5652999999999666e-05, 4.54860000000043e-05, 4.547199999999779e-05, 4.55139999999965e-05, 4.499999999999643e-05, 4.5625000000000526e-05, 4.524999999999668e-05, 4.5847000000001636e-05, 4.548599999999736e-05, 4.523600000000405e-05]</msg>
<status status="PASS" starttime="20201110 08:34:05.933" endtime="20201110 08:34:05.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.921" endtime="20201110 08:34:05.939"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:05.946" endtime="20201110 08:34:05.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:05.954" endtime="20201110 08:34:05.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.950" endtime="20201110 08:34:05.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.941" endtime="20201110 08:34:05.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.413" endtime="20201110 08:34:05.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.412" endtime="20201110 08:34:05.980"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.003" endtime="20201110 08:34:06.023"></status>
</kw>
<msg timestamp="20201110 08:34:06.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.000" endtime="20201110 08:34:06.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.030" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.026" endtime="20201110 08:34:06.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.033" endtime="20201110 08:34:06.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.992" endtime="20201110 08:34:06.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.987" endtime="20201110 08:34:06.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.057" endtime="20201110 08:34:06.397"></status>
</kw>
<msg timestamp="20201110 08:34:06.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042747028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.053" endtime="20201110 08:34:06.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042700153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042747028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.406" endtime="20201110 08:34:06.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.425" endtime="20201110 08:34:06.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.046" endtime="20201110 08:34:06.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.041" endtime="20201110 08:34:06.436"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:06.446" level="INFO">${RESULT} = [{'time': 0.042747028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.6875000000001776e-05, 'source_diff': 4.6875000000001776e-05}, {'time': 0.042801028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:06.437" endtime="20201110 08:34:06.447"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:06.477" level="INFO">${ACCURACY} = {'time': [0.042747028, 0.042801028, 0.042851944, 0.042902986, 0.042951958, 0.043003972, 0.043055986, 0.043110986, 0.043160986, 0.043215986, 0.043268, 0.043319, 0.043370014, 0.043419014, 0.043469028, 0...</msg>
<status status="PASS" starttime="20201110 08:34:06.449" endtime="20201110 08:34:06.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.495" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:34:06.486" endtime="20201110 08:34:06.496"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.501" level="INFO">VALUE: [4.6875000000001776e-05, 4.681999999999603e-05, 4.59860000000048e-05, 4.613899999999366e-05, 4.598599999999786e-05, 4.6861000000002206e-05, 4.5916999999999486e-05, 4.674999999999818e-05, 4.673599999999861e-05, 4.63469999999952e-05, 4.647199999999879e-05, 4.6847000000002637e-05, 4.649999999999793e-05, 4.6361000000001706e-05, 4.624999999999768e-05, 4.6125000000001026e-05, 4.599999999999743e-05, 4.648599999999836e-05, 4.609800000000136e-05, 4.6458999999998696e-05, 4.6222999999998016e-05, 4.636200000000118e-05, 4.624999999999768e-05, 4.6111000000001456e-05, 4.623600000000505e-05, 4.6430999999999556e-05, 4.6403000000000416e-05, 4.651400000000444e-05, 4.629200000000333e-05, 4.6375000000001276e-05, 4.623599999999811e-05, 4.68469999999957e-05, 4.654199999999664e-05, 4.6847000000002637e-05, 4.650000000000487e-05, 4.6625000000001526e-05, 4.599999999999743e-05, 4.666600000000076e-05, 4.6875000000001776e-05, 4.665200000000119e-05, 4.686200000000168e-05, 4.6875000000001776e-05, 4.6736999999998086e-05, 4.5987000000004274e-05, 4.6931000000000056e-05, 4.644399999999965e-05, 4.662499999999459e-05, 4.597199999999829e-05, 4.648599999999836e-05, 4.676399999999775e-05]</msg>
<status status="PASS" starttime="20201110 08:34:06.498" endtime="20201110 08:34:06.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.479" endtime="20201110 08:34:06.504"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.511" endtime="20201110 08:34:06.514"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:06.520" endtime="20201110 08:34:06.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.515" endtime="20201110 08:34:06.543"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.506" endtime="20201110 08:34:06.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.982" endtime="20201110 08:34:06.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:05.981" endtime="20201110 08:34:06.546"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.568" endtime="20201110 08:34:06.589"></status>
</kw>
<msg timestamp="20201110 08:34:06.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.565" endtime="20201110 08:34:06.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:06.593" endtime="20201110 08:34:06.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.599" endtime="20201110 08:34:06.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.558" endtime="20201110 08:34:06.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.552" endtime="20201110 08:34:06.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.622" endtime="20201110 08:34:06.955"></status>
</kw>
<msg timestamp="20201110 08:34:06.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042344042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042391514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.619" endtime="20201110 08:34:06.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:06.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042344042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042391514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:06.965" endtime="20201110 08:34:06.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:06.983" endtime="20201110 08:34:06.989"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.612" endtime="20201110 08:34:06.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.607" endtime="20201110 08:34:06.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.002" level="INFO">${RESULT} = [{'time': 0.042391514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.747199999999979e-05, 'source_diff': 4.747199999999979e-05}, {'time': 0.042443542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:06.993" endtime="20201110 08:34:07.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.033" level="INFO">${ACCURACY} = {'time': [0.042391514, 0.042443542, 0.042499528, 0.0425515, 0.042601514, 0.042652514, 0.042706528, 0.042762514, 0.042815528, 0.042872528, 0.042925542, 0.042981542, 0.043036569, 0.043091556, 0.04314358...</msg>
<status status="PASS" starttime="20201110 08:34:07.004" endtime="20201110 08:34:07.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.044" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.042" endtime="20201110 08:34:07.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.049" level="INFO">VALUE: [4.747199999999979e-05, 4.7417000000000986e-05, 4.7111000000002456e-05, 4.7431000000000556e-05, 4.7625000000002526e-05, 4.723599999999911e-05, 4.705600000000365e-05, 4.7431000000000556e-05, 4.748599999999936e-05, 4.7111000000002456e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.78469999999967e-05, 4.752800000000501e-05, 4.78469999999967e-05, 4.773599999999961e-05, 4.745800000000022e-05, 4.756899999999731e-05, 4.772200000000004e-05, 4.744400000000065e-05, 4.7403000000001416e-05, 4.761099999999602e-05, 4.7611000000002957e-05, 4.773599999999961e-05, 4.723599999999911e-05, 4.722199999999954e-05, 4.773599999999961e-05, 4.749999999999893e-05, 4.761099999999602e-05, 4.748599999999936e-05, 4.748599999999936e-05, 4.698599999999886e-05, 4.7375000000002276e-05, 4.712499999999509e-05, 4.749999999999893e-05, 4.7167000000000736e-05, 4.774999999999918e-05, 4.7653000000001666e-05, 4.701400000000494e-05, 4.697199999999929e-05, 4.720799999999997e-05, 4.699999999999843e-05, 4.774999999999918e-05, 4.7125000000002026e-05, 4.780499999999799e-05, 4.783300000000407e-05, 4.698599999999886e-05, 4.7611000000002957e-05, 4.7625000000002526e-05, 4.743000000000108e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.046" endtime="20201110 08:34:07.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.035" endtime="20201110 08:34:07.053"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.059" endtime="20201110 08:34:07.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.067" endtime="20201110 08:34:07.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.063" endtime="20201110 08:34:07.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.054" endtime="20201110 08:34:07.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.548" endtime="20201110 08:34:07.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:06.547" endtime="20201110 08:34:07.093"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.115" endtime="20201110 08:34:07.136"></status>
</kw>
<msg timestamp="20201110 08:34:07.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.112" endtime="20201110 08:34:07.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.140" endtime="20201110 08:34:07.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.148" endtime="20201110 08:34:07.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.105" endtime="20201110 08:34:07.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.099" endtime="20201110 08:34:07.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.171" endtime="20201110 08:34:07.515"></status>
</kw>
<msg timestamp="20201110 08:34:07.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04182725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041875403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:07.168" endtime="20201110 08:34:07.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04182725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041875403, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:07.528" endtime="20201110 08:34:07.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.548" endtime="20201110 08:34:07.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.160" endtime="20201110 08:34:07.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.156" endtime="20201110 08:34:07.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:07.568" level="INFO">${RESULT} = [{'time': 0.041875403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.815299999999523e-05, 'source_diff': 4.815299999999523e-05}, {'time': 0.041926417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:07.558" endtime="20201110 08:34:07.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:07.599" level="INFO">${ACCURACY} = {'time': [0.041875403, 0.041926417, 0.041978403, 0.042030458, 0.042084431, 0.0421355, 0.042191431, 0.042243486, 0.042294444, 0.042348444, 0.042403458, 0.042461458, 0.042518472, 0.042570486, 0.04262651...</msg>
<status status="PASS" starttime="20201110 08:34:07.570" endtime="20201110 08:34:07.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.610" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:34:07.608" endtime="20201110 08:34:07.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.616" level="INFO">VALUE: [4.815299999999523e-05, 4.8875000000003777e-05, 4.848600000000036e-05, 4.804099999999867e-05, 4.887499999999684e-05, 4.844400000000165e-05, 4.8723000000000516e-05, 4.804199999999814e-05, 4.8625000000003527e-05, 4.809699999999695e-05, 4.837499999999634e-05, 4.859699999999745e-05, 4.875000000000018e-05, 4.836099999999677e-05, 4.85139999999995e-05, 4.799999999999943e-05, 4.873600000000061e-05, 4.887499999999684e-05, 4.873600000000061e-05, 4.861099999999702e-05, 4.823600000000011e-05, 4.811099999999652e-05, 4.799999999999943e-05, 4.861099999999702e-05, 4.8473000000000266e-05, 4.873600000000061e-05, 4.823600000000011e-05, 4.8625000000003527e-05, 4.887499999999684e-05, 4.848600000000036e-05, 4.862499999999659e-05, 4.837499999999634e-05, 4.883299999999813e-05, 4.875000000000018e-05, 4.848600000000036e-05, 4.868000000000233e-05, 4.801400000000594e-05, 4.798599999999986e-05, 4.8639000000003096e-05, 4.861099999999702e-05, 4.813899999999566e-05, 4.802799999999857e-05, 4.857000000000472e-05, 4.800000000000637e-05, 4.849999999999993e-05, 4.848600000000036e-05, 4.834800000000361e-05, 4.8125000000003026e-05, 4.8237000000006525e-05, 4.886199999999674e-05]</msg>
<status status="PASS" starttime="20201110 08:34:07.613" endtime="20201110 08:34:07.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.601" endtime="20201110 08:34:07.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.626" endtime="20201110 08:34:07.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:07.634" endtime="20201110 08:34:07.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.630" endtime="20201110 08:34:07.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.621" endtime="20201110 08:34:07.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.095" endtime="20201110 08:34:07.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.094" endtime="20201110 08:34:07.660"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.683" endtime="20201110 08:34:07.704"></status>
</kw>
<msg timestamp="20201110 08:34:07.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.680" endtime="20201110 08:34:07.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:07.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:07.707" endtime="20201110 08:34:07.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.714" endtime="20201110 08:34:07.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.672" endtime="20201110 08:34:07.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.666" endtime="20201110 08:34:07.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:07.738" endtime="20201110 08:34:08.075"></status>
</kw>
<msg timestamp="20201110 08:34:08.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042593417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042642736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:07.735" endtime="20201110 08:34:08.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042593417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042642736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.085" endtime="20201110 08:34:08.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.103" endtime="20201110 08:34:08.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.728" endtime="20201110 08:34:08.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.723" endtime="20201110 08:34:08.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.122" level="INFO">${RESULT} = [{'time': 0.042642736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.931899999999906e-05, 'source_diff': 4.931899999999906e-05}, {'time': 0.04269575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:08.113" endtime="20201110 08:34:08.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.153" level="INFO">${ACCURACY} = {'time': [0.042642736, 0.04269575, 0.042746708, 0.042801722, 0.042854722, 0.042907736, 0.042959736, 0.043017736, 0.04307375, 0.043129764, 0.043184778, 0.043236778, 0.043295792, 0.043346792, 0.04340177...</msg>
<status status="PASS" starttime="20201110 08:34:08.124" endtime="20201110 08:34:08.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.164" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.162" endtime="20201110 08:34:08.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.169" level="INFO">VALUE: [4.931899999999906e-05, 4.915299999999623e-05, 4.898600000000086e-05, 4.948600000000136e-05, 4.948599999999442e-05, 4.987500000000478e-05, 4.959699999999845e-05, 4.973600000000161e-05, 4.925000000000068e-05, 4.961099999999802e-05, 4.938899999999691e-05, 4.974999999999424e-05, 4.926400000000025e-05, 4.898600000000086e-05, 4.923600000000111e-05, 4.929099999999992e-05, 4.900000000000043e-05, 4.974999999999424e-05, 4.948600000000136e-05, 4.974999999999424e-05, 4.973600000000161e-05, 4.980599999999946e-05, 4.980599999999946e-05, 4.8929999999995644e-05, 4.936099999999777e-05, 4.909700000000489e-05, 4.933299999999863e-05, 4.98190000000065e-05, 4.920800000000197e-05, 4.906899999999881e-05, 4.923600000000111e-05, 4.9125000000004027e-05, 4.961099999999802e-05, 4.898600000000086e-05, 4.948600000000136e-05, 4.972200000000204e-05, 4.936099999999777e-05, 4.9223000000001016e-05, 4.912499999999709e-05, 4.973600000000161e-05, 4.976400000000075e-05, 4.911099999999752e-05, 4.961099999999802e-05, 4.988899999999741e-05, 4.973599999999467e-05, 4.982000000000597e-05, 4.93469999999982e-05, 4.950000000000093e-05, 4.959699999999845e-05, 4.923600000000111e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.166" endtime="20201110 08:34:08.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.155" endtime="20201110 08:34:08.172"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.179" endtime="20201110 08:34:08.182"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.187" endtime="20201110 08:34:08.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.183" endtime="20201110 08:34:08.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.174" endtime="20201110 08:34:08.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.662" endtime="20201110 08:34:08.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:07.661" endtime="20201110 08:34:08.213"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.236" endtime="20201110 08:34:08.256"></status>
</kw>
<msg timestamp="20201110 08:34:08.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.232" endtime="20201110 08:34:08.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.259" endtime="20201110 08:34:08.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.265" endtime="20201110 08:34:08.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.225" endtime="20201110 08:34:08.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.219" endtime="20201110 08:34:08.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.289" endtime="20201110 08:34:08.634"></status>
</kw>
<msg timestamp="20201110 08:34:08.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042090611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.286" endtime="20201110 08:34:08.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042090611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042141486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.643" endtime="20201110 08:34:08.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.662" endtime="20201110 08:34:08.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.278" endtime="20201110 08:34:08.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.273" endtime="20201110 08:34:08.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:08.683" level="INFO">${RESULT} = [{'time': 0.042141486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.087499999999884e-05, 'source_diff': 5.087499999999884e-05}, {'time': 0.042195486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:08.674" endtime="20201110 08:34:08.684"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:08.714" level="INFO">${ACCURACY} = {'time': [0.042141486, 0.042195486, 0.042254486, 0.042311514, 0.042367528, 0.042427514, 0.042481528, 0.042539542, 0.042597528, 0.042655528, 0.042710583, 0.042769556, 0.042824556, 0.042881569, 0.042937...</msg>
<status status="PASS" starttime="20201110 08:34:08.685" endtime="20201110 08:34:08.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.725" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:34:08.722" endtime="20201110 08:34:08.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.730" level="INFO">VALUE: [5.087499999999884e-05, 5.0693999999996964e-05, 5.072200000000304e-05, 4.998600000000186e-05, 5.0139000000004597e-05, 5.080600000000046e-05, 4.999999999999449e-05, 5.025000000000168e-05, 5.086099999999927e-05, 5.011099999999852e-05, 5.040200000000494e-05, 5.087499999999884e-05, 5.059799999999892e-05, 5.047200000000279e-05, 5.063899999999816e-05, 5.0221999999995603e-05, 5.087499999999884e-05, 5.015299999999723e-05, 5.000000000000143e-05, 5.058299999999988e-05, 5.048600000000236e-05, 5.075000000000218e-05, 5.0735999999995673e-05, 5.086099999999927e-05, 5.073600000000261e-05, 5.0485999999995423e-05, 5.0929999999997644e-05, 5.020800000000297e-05, 5.03469999999992e-05, 5.048600000000236e-05, 5.061099999999902e-05, 5.000000000000143e-05, 5.0637999999998684e-05, 4.99869999999944e-05, 5.062499999999859e-05, 5.086099999999927e-05, 4.997200000000229e-05, 5.062500000000553e-05, 5.012499999999809e-05, 5.05140000000015e-05, 5.029200000000039e-05, 5.012499999999809e-05, 5.059700000000639e-05, 5.025000000000168e-05, 5.040299999999748e-05, 5.061099999999902e-05, 5.0139000000004597e-05, 4.998599999999492e-05, 5.024999999999474e-05, 5.055600000000021e-05]</msg>
<status status="PASS" starttime="20201110 08:34:08.727" endtime="20201110 08:34:08.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.716" endtime="20201110 08:34:08.734"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.740" endtime="20201110 08:34:08.743"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:08.749" endtime="20201110 08:34:08.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.744" endtime="20201110 08:34:08.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.736" endtime="20201110 08:34:08.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.215" endtime="20201110 08:34:08.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.214" endtime="20201110 08:34:08.775"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.798" endtime="20201110 08:34:08.821"></status>
</kw>
<msg timestamp="20201110 08:34:08.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.794" endtime="20201110 08:34:08.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:08.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:08.824" endtime="20201110 08:34:08.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.834" endtime="20201110 08:34:08.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.787" endtime="20201110 08:34:08.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.781" endtime="20201110 08:34:08.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:08.866" endtime="20201110 08:34:09.213"></status>
</kw>
<msg timestamp="20201110 08:34:09.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042482681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:08.861" endtime="20201110 08:34:09.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042430819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042482681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.222" endtime="20201110 08:34:09.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.241" endtime="20201110 08:34:09.246"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.852" endtime="20201110 08:34:09.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.846" endtime="20201110 08:34:09.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.260" level="INFO">${RESULT} = [{'time': 0.042482681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.186199999999974e-05, 'source_diff': 5.186199999999974e-05}, {'time': 0.042543694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.251" endtime="20201110 08:34:09.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.291" level="INFO">${ACCURACY} = {'time': [0.042482681, 0.042543694, 0.042597694, 0.042657708, 0.042716694, 0.042772708, 0.042833708, 0.042889722, 0.042948736, 0.043009736, 0.04306475, 0.04312475, 0.043180819, 0.043234819, 0.04329576...</msg>
<status status="PASS" starttime="20201110 08:34:09.262" endtime="20201110 08:34:09.291"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.302" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.300" endtime="20201110 08:34:09.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.307" level="INFO">VALUE: [5.186199999999974e-05, 5.18470000000007e-05, 5.137499999999934e-05, 5.187499999999984e-05, 5.1221999999996604e-05, 5.136099999999977e-05, 5.1235999999996173e-05, 5.099999999999549e-05, 5.136099999999977e-05, 5.175000000000318e-05, 5.137499999999934e-05, 5.125000000000268e-05, 5.130500000000149e-05, 5.1679999999998394e-05, 5.111099999999952e-05, 5.173600000000361e-05, 5.123600000000311e-05, 5.150000000000293e-05, 5.137499999999934e-05, 5.1485999999996424e-05, 5.137500000000628e-05, 5.109799999999942e-05, 5.1499999999995993e-05, 5.122200000000354e-05, 5.1749999999996243e-05, 5.162499999999959e-05, 5.123600000000311e-05, 5.158300000000088e-05, 5.181900000000156e-05, 5.138899999999891e-05, 5.161100000000002e-05, 5.176399999999581e-05, 5.109699999999995e-05, 5.112499999999909e-05, 5.148600000000336e-05, 5.150000000000293e-05, 5.111099999999952e-05, 5.1471999999996854e-05, 5.161200000000643e-05, 5.111099999999952e-05, 5.161199999999949e-05, 5.136199999999924e-05, 5.162499999999959e-05, 5.186100000000027e-05, 5.175000000000318e-05, 5.136099999999977e-05, 5.150000000000293e-05, 5.098600000000286e-05, 5.16390000000061e-05, 5.186100000000027e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.304" endtime="20201110 08:34:09.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.293" endtime="20201110 08:34:09.310"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.317" endtime="20201110 08:34:09.320"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.325" endtime="20201110 08:34:09.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.321" endtime="20201110 08:34:09.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.312" endtime="20201110 08:34:09.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.777" endtime="20201110 08:34:09.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:08.776" endtime="20201110 08:34:09.351"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.374" endtime="20201110 08:34:09.395"></status>
</kw>
<msg timestamp="20201110 08:34:09.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.370" endtime="20201110 08:34:09.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.398" endtime="20201110 08:34:09.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.405" endtime="20201110 08:34:09.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.363" endtime="20201110 08:34:09.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.358" endtime="20201110 08:34:09.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.428" endtime="20201110 08:34:09.773"></status>
</kw>
<msg timestamp="20201110 08:34:09.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042256292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.424" endtime="20201110 08:34:09.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042203403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042256292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.783" endtime="20201110 08:34:09.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.801" endtime="20201110 08:34:09.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.417" endtime="20201110 08:34:09.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.412" endtime="20201110 08:34:09.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:09.821" level="INFO">${RESULT} = [{'time': 0.042256292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.288900000000041e-05, 'source_diff': 5.288900000000041e-05}, {'time': 0.042313292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:09.812" endtime="20201110 08:34:09.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:09.851" level="INFO">${ACCURACY} = {'time': [0.042256292, 0.042313292, 0.042369319, 0.042425306, 0.042481292, 0.042537306, 0.042597319, 0.042653306, 0.042710333, 0.042765319, 0.042825347, 0.042886333, 0.042947347, 0.043006347, 0.043062...</msg>
<status status="PASS" starttime="20201110 08:34:09.823" endtime="20201110 08:34:09.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.862" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:34:09.860" endtime="20201110 08:34:09.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.868" level="INFO">VALUE: [5.288900000000041e-05, 5.288900000000041e-05, 5.200000000000343e-05, 5.226400000000325e-05, 5.211099999999358e-05, 5.2499999999996994e-05, 5.237500000000034e-05, 5.261200000000049e-05, 5.226400000000325e-05, 5.209700000000095e-05, 5.213899999999966e-05, 5.2443999999998714e-05, 5.1985999999996924e-05, 5.2471999999997854e-05, 5.2513999999996563e-05, 5.215299999999923e-05, 5.1999999999996493e-05, 5.2721999999998104e-05, 5.2485999999997424e-05, 5.220800000000497e-05, 5.2235999999997174e-05, 5.2235999999997174e-05, 5.200000000000343e-05, 5.261100000000102e-05, 5.2749999999997244e-05, 5.250000000000393e-05, 5.211199999999999e-05, 5.273600000000461e-05, 5.198600000000386e-05, 5.247200000000479e-05, 5.211100000000052e-05, 5.211099999999358e-05, 5.23470000000012e-05, 5.197200000000429e-05, 5.265299999999973e-05, 5.248600000000436e-05, 5.2749999999997244e-05, 5.236100000000077e-05, 5.2735999999997674e-05, 5.211100000000052e-05, 5.2499999999996994e-05, 5.222200000000454e-05, 5.225000000000368e-05, 5.286099999999433e-05, 5.212500000000009e-05, 5.226300000000378e-05, 5.286200000000074e-05, 5.277799999999638e-05, 5.209700000000095e-05, 5.248600000000436e-05]</msg>
<status status="PASS" starttime="20201110 08:34:09.865" endtime="20201110 08:34:09.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.853" endtime="20201110 08:34:09.871"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.877" endtime="20201110 08:34:09.880"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:09.886" endtime="20201110 08:34:09.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.881" endtime="20201110 08:34:09.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.873" endtime="20201110 08:34:09.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.353" endtime="20201110 08:34:09.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.352" endtime="20201110 08:34:09.912"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.934" endtime="20201110 08:34:09.955"></status>
</kw>
<msg timestamp="20201110 08:34:09.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.931" endtime="20201110 08:34:09.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:09.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:09.959" endtime="20201110 08:34:09.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.965" endtime="20201110 08:34:09.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.924" endtime="20201110 08:34:09.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.918" endtime="20201110 08:34:09.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:09.988" endtime="20201110 08:34:10.336"></status>
</kw>
<msg timestamp="20201110 08:34:10.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042372653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042425931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:09.985" endtime="20201110 08:34:10.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042372653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042425931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.346" endtime="20201110 08:34:10.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.364" endtime="20201110 08:34:10.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.978" endtime="20201110 08:34:10.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.973" endtime="20201110 08:34:10.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.383" level="INFO">${RESULT} = [{'time': 0.042425931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3277999999996883e-05, 'source_diff': 5.3277999999996883e-05}, {'time': 0.042481931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.374" endtime="20201110 08:34:10.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.414" level="INFO">${ACCURACY} = {'time': [0.042425931, 0.042481931, 0.042541903, 0.042601903, 0.042659917, 0.042720931, 0.042782931, 0.042839944, 0.042900944, 0.042957944, 0.043014958, 0.043070958, 0.043130972, 0.043190972, 0.043248...</msg>
<status status="PASS" starttime="20201110 08:34:10.386" endtime="20201110 08:34:10.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.425" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.423" endtime="20201110 08:34:10.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.431" level="INFO">VALUE: [5.3277999999996883e-05, 5.390300000000098e-05, 5.3735999999998674e-05, 5.348600000000536e-05, 5.361100000000202e-05, 5.362499999999465e-05, 5.3473000000005266e-05, 5.33749999999944e-05, 5.298600000000486e-05, 5.2985999999997924e-05, 5.362500000000159e-05, 5.2985999999997924e-05, 5.336099999999483e-05, 5.3207999999999034e-05, 5.325000000000468e-05, 5.3471999999998854e-05, 5.36670000000003e-05, 5.3249999999997744e-05, 5.312500000000109e-05, 5.380499999999705e-05, 5.3485999999998424e-05, 5.3249999999997744e-05, 5.33749999999944e-05, 5.361100000000202e-05, 5.311100000000152e-05, 5.2999999999997494e-05, 5.3777999999997383e-05, 5.383299999999619e-05, 5.311099999999458e-05, 5.387500000000184e-05, 5.361100000000202e-05, 5.2999999999997494e-05, 5.33470000000022e-05, 5.386100000000227e-05, 5.3499999999997994e-05, 5.359699999999551e-05, 5.361100000000202e-05, 5.309699999999501e-05, 5.3485999999998424e-05, 5.361099999999508e-05, 5.337500000000134e-05, 5.332000000000253e-05, 5.326300000000478e-05, 5.386099999999533e-05, 5.295899999999826e-05, 5.362499999999465e-05, 5.361100000000202e-05, 5.387500000000184e-05, 5.35140000000045e-05, 5.3013999999997063e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.428" endtime="20201110 08:34:10.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.416" endtime="20201110 08:34:10.434"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.440" endtime="20201110 08:34:10.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:10.449" endtime="20201110 08:34:10.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.444" endtime="20201110 08:34:10.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.436" endtime="20201110 08:34:10.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.914" endtime="20201110 08:34:10.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:09.913" endtime="20201110 08:34:10.475"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.497" endtime="20201110 08:34:10.519"></status>
</kw>
<msg timestamp="20201110 08:34:10.520" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.494" endtime="20201110 08:34:10.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:10.522" endtime="20201110 08:34:10.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.528" endtime="20201110 08:34:10.532"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.487" endtime="20201110 08:34:10.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.481" endtime="20201110 08:34:10.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.552" endtime="20201110 08:34:10.896"></status>
</kw>
<msg timestamp="20201110 08:34:10.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042677681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042732333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.548" endtime="20201110 08:34:10.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042677681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042732333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:10.905" endtime="20201110 08:34:10.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:10.924" endtime="20201110 08:34:10.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.541" endtime="20201110 08:34:10.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.537" endtime="20201110 08:34:10.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:10.945" level="INFO">${RESULT} = [{'time': 0.042732333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4651999999995315e-05, 'source_diff': 5.4651999999995315e-05}, {'time': 0.042795347, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:10.936" endtime="20201110 08:34:10.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:10.975" level="INFO">${ACCURACY} = {'time': [0.042732333, 0.042795347, 0.042856306, 0.042917361, 0.042978361, 0.043035389, 0.043095347, 0.043158347, 0.043219347, 0.043278375, 0.043341361, 0.043398361, 0.043462417, 0.043519389, 0.043577...</msg>
<status status="PASS" starttime="20201110 08:34:10.947" endtime="20201110 08:34:10.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.986" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:34:10.984" endtime="20201110 08:34:10.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:10.992" level="INFO">VALUE: [5.4651999999995315e-05, 5.415299999999429e-05, 5.459799999999598e-05, 5.4541999999997703e-05, 5.4027999999997633e-05, 5.480599999999752e-05, 5.4722000000000104e-05, 5.487500000000284e-05, 5.436099999999583e-05, 5.413900000000166e-05, 5.4430000000001144e-05, 5.411100000000252e-05, 5.477800000000532e-05, 5.4291999999997453e-05, 5.4013999999998064e-05, 5.4735999999999674e-05, 5.479099999999848e-05, 5.3971999999999354e-05, 5.43749999999954e-05, 5.3999999999998494e-05, 5.475000000000618e-05, 5.470900000000001e-05, 5.4763999999998814e-05, 5.409700000000295e-05, 5.48749999999959e-05, 5.409699999999601e-05, 5.438900000000191e-05, 5.3971999999999354e-05, 5.486099999999633e-05, 5.4749999999999244e-05, 5.3985999999998924e-05, 5.4485999999999424e-05, 5.4541999999997703e-05, 5.4471999999999854e-05, 5.484699999999676e-05, 5.412499999999515e-05, 5.3985999999998924e-05, 5.4513999999998564e-05, 5.462500000000259e-05, 5.4249999999998744e-05, 5.459799999999598e-05, 5.4749999999999244e-05, 5.486100000000327e-05, 5.426400000000525e-05, 5.48470000000037e-05, 5.409700000000295e-05, 5.411099999999558e-05, 5.4735999999999674e-05, 5.4708000000000534e-05, 5.3971999999999354e-05]</msg>
<status status="PASS" starttime="20201110 08:34:10.989" endtime="20201110 08:34:10.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.977" endtime="20201110 08:34:10.995"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.002" endtime="20201110 08:34:11.004"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.010" endtime="20201110 08:34:11.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.005" endtime="20201110 08:34:11.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.997" endtime="20201110 08:34:11.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.477" endtime="20201110 08:34:11.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:10.476" endtime="20201110 08:34:11.036"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.058" endtime="20201110 08:34:11.079"></status>
</kw>
<msg timestamp="20201110 08:34:11.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.055" endtime="20201110 08:34:11.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.082" endtime="20201110 08:34:11.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.088" endtime="20201110 08:34:11.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.048" endtime="20201110 08:34:11.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.042" endtime="20201110 08:34:11.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.111" endtime="20201110 08:34:11.455"></status>
</kw>
<msg timestamp="20201110 08:34:11.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042059986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042115597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.108" endtime="20201110 08:34:11.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042059986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042115597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.465" endtime="20201110 08:34:11.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.483" endtime="20201110 08:34:11.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.101" endtime="20201110 08:34:11.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.096" endtime="20201110 08:34:11.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:11.502" level="INFO">${RESULT} = [{'time': 0.042115597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.561099999999708e-05, 'source_diff': 5.561099999999708e-05}, {'time': 0.042180597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:11.493" endtime="20201110 08:34:11.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:11.533" level="INFO">${ACCURACY} = {'time': [0.042115597, 0.042180597, 0.042239597, 0.042298625, 0.042357625, 0.042419625, 0.042477625, 0.042538681, 0.042600639, 0.042658667, 0.042716653, 0.042775667, 0.042834681, 0.042892681, 0.042951...</msg>
<status status="PASS" starttime="20201110 08:34:11.504" endtime="20201110 08:34:11.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.544" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:34:11.542" endtime="20201110 08:34:11.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.549" level="INFO">VALUE: [5.561099999999708e-05, 5.5736000000000674e-05, 5.583299999999819e-05, 5.5249999999999744e-05, 5.5249999999999744e-05, 5.587500000000384e-05, 5.5472000000000854e-05, 5.54869999999999e-05, 5.536100000000377e-05, 5.5763999999999814e-05, 5.519500000000094e-05, 5.494500000000069e-05, 5.562499999999665e-05, 5.523699999999965e-05, 5.538899999999597e-05, 5.53749999999964e-05, 5.5513999999999564e-05, 5.4985999999999924e-05, 5.5736000000000674e-05, 5.58749999999969e-05, 5.5236000000000174e-05, 5.590300000000298e-05, 5.587500000000384e-05, 5.586100000000427e-05, 5.563900000000316e-05, 5.515299999999529e-05, 5.5499999999999994e-05, 5.4985999999999924e-05, 5.561099999999708e-05, 5.5486000000000424e-05, 5.5680000000002394e-05, 5.512500000000309e-05, 5.588900000000341e-05, 5.5499999999999994e-05, 5.5499999999999994e-05, 5.536099999999683e-05, 5.5458000000001284e-05, 5.5277999999998884e-05, 5.5736000000000674e-05, 5.556900000000531e-05, 5.561099999999708e-05, 5.540300000000248e-05, 5.5236000000000174e-05, 5.5513999999999564e-05, 5.511099999999658e-05, 5.5736000000000674e-05, 5.562500000000359e-05, 5.5499999999999994e-05, 5.58470000000047e-05, 5.536100000000377e-05]</msg>
<status status="PASS" starttime="20201110 08:34:11.546" endtime="20201110 08:34:11.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.535" endtime="20201110 08:34:11.553"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.559" endtime="20201110 08:34:11.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:11.567" endtime="20201110 08:34:11.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.563" endtime="20201110 08:34:11.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.554" endtime="20201110 08:34:11.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.038" endtime="20201110 08:34:11.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.037" endtime="20201110 08:34:11.593"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.616" endtime="20201110 08:34:11.637"></status>
</kw>
<msg timestamp="20201110 08:34:11.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.612" endtime="20201110 08:34:11.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:11.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:11.640" endtime="20201110 08:34:11.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.646" endtime="20201110 08:34:11.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.605" endtime="20201110 08:34:11.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.600" endtime="20201110 08:34:11.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:11.670" endtime="20201110 08:34:12.016"></status>
</kw>
<msg timestamp="20201110 08:34:12.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042346597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:11.667" endtime="20201110 08:34:12.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042346597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.025" endtime="20201110 08:34:12.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.044" endtime="20201110 08:34:12.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.659" endtime="20201110 08:34:12.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.654" endtime="20201110 08:34:12.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.063" level="INFO">${RESULT} = [{'time': 0.042403014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.641700000000305e-05, 'source_diff': 5.641700000000305e-05}, {'time': 0.042469014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:12.054" endtime="20201110 08:34:12.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.093" level="INFO">${ACCURACY} = {'time': [0.042403014, 0.042469014, 0.042532028, 0.042594028, 0.042657028, 0.042717042, 0.042783042, 0.042842056, 0.042904056, 0.042965069, 0.043027083, 0.043090097, 0.043155083, 0.043214097, 0.043273...</msg>
<status status="PASS" starttime="20201110 08:34:12.065" endtime="20201110 08:34:12.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.104" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.102" endtime="20201110 08:34:12.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.110" level="INFO">VALUE: [5.641700000000305e-05, 5.686099999999833e-05, 5.6000000000000494e-05, 5.6250000000000744e-05, 5.661099999999808e-05, 5.5999999999993555e-05, 5.6236000000001174e-05, 5.619500000000194e-05, 5.609800000000442e-05, 5.6000000000000494e-05, 5.68749999999979e-05, 5.688899999999747e-05, 5.5985999999993985e-05, 5.606899999999887e-05, 5.627800000000682e-05, 5.6014000000000064e-05, 5.6221999999994665e-05, 5.6027999999999634e-05, 5.688899999999747e-05, 5.663899999999722e-05, 5.6819999999999093e-05, 5.612499999999715e-05, 5.637500000000434e-05, 5.627700000000041e-05, 5.6750000000001244e-05, 5.618100000000237e-05, 5.645899999999482e-05, 5.648699999999396e-05, 5.6736000000001674e-05, 5.661100000000502e-05, 5.631899999999912e-05, 5.684699999999876e-05, 5.611099999999758e-05, 5.6486000000001424e-05, 5.690300000000398e-05, 5.63749999999974e-05, 5.636100000000477e-05, 5.684699999999876e-05, 5.611100000000452e-05, 5.63749999999974e-05, 5.6902000000004505e-05, 5.611099999999758e-05, 5.661099999999808e-05, 5.670900000000201e-05, 5.651300000000109e-05, 5.634799999999773e-05, 5.5986000000000924e-05, 5.686099999999833e-05, 5.638900000000391e-05, 5.6736000000001674e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.107" endtime="20201110 08:34:12.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.095" endtime="20201110 08:34:12.113"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.119" endtime="20201110 08:34:12.122"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.128" endtime="20201110 08:34:12.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.123" endtime="20201110 08:34:12.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.115" endtime="20201110 08:34:12.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.595" endtime="20201110 08:34:12.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:11.594" endtime="20201110 08:34:12.150"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.160" endtime="20201110 08:34:12.178"></status>
</kw>
<msg timestamp="20201110 08:34:12.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.159" endtime="20201110 08:34:12.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.180" endtime="20201110 08:34:12.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.182" endtime="20201110 08:34:12.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.155" endtime="20201110 08:34:12.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.153" endtime="20201110 08:34:12.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.193" endtime="20201110 08:34:12.480"></status>
</kw>
<msg timestamp="20201110 08:34:12.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025099389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.192" endtime="20201110 08:34:12.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025041597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025099389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.484" endtime="20201110 08:34:12.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.493" endtime="20201110 08:34:12.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.189" endtime="20201110 08:34:12.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.186" endtime="20201110 08:34:12.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:12.502" level="INFO">${RESULT} = [{'time': 0.025099389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7792000000000954e-05, 'source_diff': 5.7792000000000954e-05}, {'time': 0.025161444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:12.498" endtime="20201110 08:34:12.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:12.516" level="INFO">${ACCURACY} = {'time': [0.025099389, 0.025161444, 0.025222417, 0.025289417, 0.025352417, 0.025418417, 0.025479444, 0.025539431, 0.025601444, 0.025666444, 0.025730472, 0.025791458, 0.025851486, 0.025918472, 0.025980...</msg>
<status status="PASS" starttime="20201110 08:34:12.503" endtime="20201110 08:34:12.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.521" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:34:12.520" endtime="20201110 08:34:12.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.523" level="INFO">VALUE: [5.7792000000000954e-05, 5.7888000000002465e-05, 5.7264000000001314e-05, 5.78610000000028e-05, 5.770899999999954e-05, 5.7485999999998955e-05, 5.7637999999998746e-05, 5.707000000000281e-05, 5.711100000000205e-05, 5.6957999999999315e-05, 5.7014000000001064e-05, 5.7471999999999385e-05, 5.78749999999989e-05, 5.759700000000298e-05, 5.7485999999998955e-05, 5.7485999999998955e-05, 5.712500000000162e-05, 5.6986000000001924e-05, 5.7527999999997664e-05, 5.7236000000002174e-05, 5.7929999999997706e-05, 5.7735999999999205e-05, 5.786099999999933e-05, 5.7542000000000704e-05, 5.7637999999998746e-05, 5.748699999999843e-05, 5.78610000000028e-05, 5.6985999999998455e-05, 5.786099999999933e-05, 5.7736000000002674e-05, 5.711099999999858e-05, 5.73610000000023e-05, 5.7249999999998274e-05, 5.762499999999865e-05, 5.7306000000000024e-05, 5.734699999999926e-05, 5.7735999999999205e-05, 5.6971999999998885e-05, 5.786099999999933e-05, 5.71809999999999e-05, 5.7277999999997414e-05, 5.7930000000001175e-05, 5.784799999999923e-05, 5.761199999999855e-05, 5.737500000000187e-05, 5.761099999999908e-05, 5.6985999999998455e-05, 5.7471999999999385e-05, 5.763899999999822e-05, 5.7485999999998955e-05]</msg>
<status status="PASS" starttime="20201110 08:34:12.522" endtime="20201110 08:34:12.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.517" endtime="20201110 08:34:12.525"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.528" endtime="20201110 08:34:12.529"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:12.532" endtime="20201110 08:34:12.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.530" endtime="20201110 08:34:12.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.526" endtime="20201110 08:34:12.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.151" endtime="20201110 08:34:12.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.150" endtime="20201110 08:34:12.557"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.580" endtime="20201110 08:34:12.600"></status>
</kw>
<msg timestamp="20201110 08:34:12.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.576" endtime="20201110 08:34:12.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:12.603" endtime="20201110 08:34:12.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.609" endtime="20201110 08:34:12.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.569" endtime="20201110 08:34:12.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.563" endtime="20201110 08:34:12.616"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.633" endtime="20201110 08:34:12.965"></status>
</kw>
<msg timestamp="20201110 08:34:12.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041841319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041899778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.629" endtime="20201110 08:34:12.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:12.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041841319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041899778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:12.975" endtime="20201110 08:34:12.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:12.993" endtime="20201110 08:34:13.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.622" endtime="20201110 08:34:13.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.618" endtime="20201110 08:34:13.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.015" level="INFO">${RESULT} = [{'time': 0.041899778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.845899999999682e-05, 'source_diff': 5.845899999999682e-05}, {'time': 0.041960778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:13.006" endtime="20201110 08:34:13.015"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.045" level="INFO">${ACCURACY} = {'time': [0.041899778, 0.041960778, 0.042025792, 0.042086806, 0.042150806, 0.042215806, 0.042280819, 0.042344819, 0.042408847, 0.042472833, 0.042537847, 0.042600847, 0.042665903, 0.042732861, 0.042800...</msg>
<status status="PASS" starttime="20201110 08:34:13.017" endtime="20201110 08:34:13.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.056" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.054" endtime="20201110 08:34:13.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.062" level="INFO">VALUE: [5.845899999999682e-05, 5.886100000000033e-05, 5.811099999999958e-05, 5.8541999999994765e-05, 5.8249999999995805e-05, 5.83619999999993e-05, 5.8749999999996305e-05, 5.809700000000001e-05, 5.838899999999897e-05, 5.8722000000004104e-05, 5.8749999999996305e-05, 5.8471999999996915e-05, 5.8763999999995875e-05, 5.7985999999995985e-05, 5.836099999999983e-05, 5.83749999999994e-05, 5.8250000000002744e-05, 5.813899999999872e-05, 5.859700000000051e-05, 5.8651999999999316e-05, 5.886100000000033e-05, 5.851299999999615e-05, 5.8597999999999983e-05, 5.8250000000002744e-05, 5.862499999999965e-05, 5.7986000000002924e-05, 5.812499999999915e-05, 5.8749999999996305e-05, 5.83749999999994e-05, 5.863899999999922e-05, 5.861100000000008e-05, 5.7999999999995555e-05, 5.7986000000002924e-05, 5.819500000000394e-05, 5.838899999999897e-05, 5.8750000000003244e-05, 5.834699999999332e-05, 5.812500000000609e-05, 5.8401999999999066e-05, 5.812499999999915e-05, 5.88749999999999e-05, 5.7957999999996845e-05, 5.888900000000641e-05, 5.8555999999994335e-05, 5.8000000000002494e-05, 5.812499999999915e-05, 5.811099999999958e-05, 5.8763999999995875e-05, 5.8736000000003674e-05, 5.818099999999743e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.059" endtime="20201110 08:34:13.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.047" endtime="20201110 08:34:13.065"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.071" endtime="20201110 08:34:13.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.079" endtime="20201110 08:34:13.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.075" endtime="20201110 08:34:13.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.067" endtime="20201110 08:34:13.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.559" endtime="20201110 08:34:13.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:12.558" endtime="20201110 08:34:13.105"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.128" endtime="20201110 08:34:13.148"></status>
</kw>
<msg timestamp="20201110 08:34:13.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.124" endtime="20201110 08:34:13.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.151" endtime="20201110 08:34:13.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.159" endtime="20201110 08:34:13.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.117" endtime="20201110 08:34:13.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.111" endtime="20201110 08:34:13.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.184" endtime="20201110 08:34:13.514"></status>
</kw>
<msg timestamp="20201110 08:34:13.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041809361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041868597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.180" endtime="20201110 08:34:13.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041809361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041868597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.523" endtime="20201110 08:34:13.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.542" endtime="20201110 08:34:13.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.173" endtime="20201110 08:34:13.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.169" endtime="20201110 08:34:13.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:13.561" level="INFO">${RESULT} = [{'time': 0.041868597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9235999999997235e-05, 'source_diff': 5.9235999999997235e-05}, {'time': 0.041932667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:13.552" endtime="20201110 08:34:13.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:13.592" level="INFO">${ACCURACY} = {'time': [0.041868597, 0.041932667, 0.041997625, 0.042064639, 0.042132625, 0.042197681, 0.042261639, 0.042325722, 0.042393653, 0.042459708, 0.042527681, 0.042594681, 0.042662694, 0.042729694, 0.042797...</msg>
<status status="PASS" starttime="20201110 08:34:13.563" endtime="20201110 08:34:13.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.603" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:34:13.601" endtime="20201110 08:34:13.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.608" level="INFO">VALUE: [5.9235999999997235e-05, 5.9556000000002274e-05, 5.912500000000015e-05, 5.988900000000047e-05, 5.8985999999996985e-05, 5.9528000000003134e-05, 5.944499999999825e-05, 5.980500000000305e-05, 5.970900000000501e-05, 5.9665999999999886e-05, 5.9499999999997055e-05, 5.9000000000003494e-05, 5.962500000000065e-05, 5.8985999999996985e-05, 5.9485999999997485e-05, 5.9236000000004174e-05, 5.961100000000108e-05, 5.912500000000015e-05, 5.9499999999997055e-05, 5.9028000000002634e-05, 5.906900000000187e-05, 5.9221999999997665e-05, 5.8985999999996985e-05, 5.912500000000015e-05, 5.909700000000101e-05, 5.9402000000000066e-05, 5.961100000000108e-05, 5.912500000000015e-05, 5.961099999999414e-05, 5.8957999999997845e-05, 5.966699999999936e-05, 5.9763999999996875e-05, 5.9277999999995945e-05, 5.9485999999997485e-05, 5.963900000000022e-05, 5.959700000000151e-05, 5.962500000000065e-05, 5.8957999999997845e-05, 5.9027999999995695e-05, 5.943099999999868e-05, 5.912500000000015e-05, 5.8986000000003924e-05, 5.9528000000003134e-05, 5.9235999999997235e-05, 5.970899999999807e-05, 5.9083999999993975e-05, 5.976300000000434e-05, 5.9084000000000914e-05, 5.8986000000003924e-05, 5.962500000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:34:13.605" endtime="20201110 08:34:13.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.594" endtime="20201110 08:34:13.611"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.618" endtime="20201110 08:34:13.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:13.626" endtime="20201110 08:34:13.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.622" endtime="20201110 08:34:13.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.613" endtime="20201110 08:34:13.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.107" endtime="20201110 08:34:13.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.106" endtime="20201110 08:34:13.652"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.674" endtime="20201110 08:34:13.695"></status>
</kw>
<msg timestamp="20201110 08:34:13.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.671" endtime="20201110 08:34:13.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:13.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:13.698" endtime="20201110 08:34:13.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.705" endtime="20201110 08:34:13.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.664" endtime="20201110 08:34:13.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.658" endtime="20201110 08:34:13.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:13.728" endtime="20201110 08:34:14.059"></status>
</kw>
<msg timestamp="20201110 08:34:14.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041831875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:13.725" endtime="20201110 08:34:14.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041771903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041831875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.069" endtime="20201110 08:34:14.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.087" endtime="20201110 08:34:14.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.717" endtime="20201110 08:34:14.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.712" endtime="20201110 08:34:14.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.106" level="INFO">${RESULT} = [{'time': 0.041831875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.9971999999998415e-05, 'source_diff': 5.9971999999998415e-05}, {'time': 0.041900847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:14.097" endtime="20201110 08:34:14.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.137" level="INFO">${ACCURACY} = {'time': [0.041831875, 0.041900847, 0.041965875, 0.042032875, 0.042097889, 0.042163875, 0.042233889, 0.042299917, 0.042367903, 0.042434917, 0.042504917, 0.042573944, 0.042638931, 0.042705944, 0.042773...</msg>
<status status="PASS" starttime="20201110 08:34:14.108" endtime="20201110 08:34:14.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.148" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.146" endtime="20201110 08:34:14.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.153" level="INFO">VALUE: [5.9971999999998415e-05, 6.061099999999514e-05, 6.038900000000097e-05, 6.081899999999668e-05, 6.0749999999998305e-05, 6.0736000000005674e-05, 6.0249999999997805e-05, 5.9999999999997555e-05, 6.0735999999998735e-05, 6.0000000000004494e-05, 6.0806000000003524e-05, 6.0888000000001996e-05, 6.073699999999821e-05, 6.079100000000448e-05, 6.0735999999998735e-05, 6.0249999999997805e-05, 6.0028000000003634e-05, 6.08750000000019e-05, 6.0499999999998055e-05, 6.0250000000004744e-05, 6.061100000000208e-05, 6.0028000000003634e-05, 6.011099999999464e-05, 6.0249999999997805e-05, 6.009700000000201e-05, 6.0000000000004494e-05, 6.061100000000208e-05, 6.0750000000005244e-05, 6.061099999999514e-05, 6.07629999999984e-05, 6.006900000000287e-05, 6.062499999999471e-05, 6.0249999999997805e-05, 6.063900000000122e-05, 6.034699999999532e-05, 6.036100000000183e-05, 6.0416000000000636e-05, 6.063900000000122e-05, 6.036100000000183e-05, 6.0250000000004744e-05, 6.0778000000004384e-05, 6.0499999999998055e-05, 6.011100000000158e-05, 6.0471999999998916e-05, 6.088900000000147e-05, 6.0848000000002234e-05, 6.051299999999815e-05, 6.062500000000165e-05, 6.031900000000312e-05, 5.9916000000000136e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.150" endtime="20201110 08:34:14.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.139" endtime="20201110 08:34:14.160"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.167" endtime="20201110 08:34:14.169"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.175" endtime="20201110 08:34:14.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.171" endtime="20201110 08:34:14.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.162" endtime="20201110 08:34:14.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.654" endtime="20201110 08:34:14.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:13.653" endtime="20201110 08:34:14.201"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.223" endtime="20201110 08:34:14.243"></status>
</kw>
<msg timestamp="20201110 08:34:14.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.220" endtime="20201110 08:34:14.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.247" endtime="20201110 08:34:14.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.253" endtime="20201110 08:34:14.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.213" endtime="20201110 08:34:14.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.207" endtime="20201110 08:34:14.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.276" endtime="20201110 08:34:14.607"></status>
</kw>
<msg timestamp="20201110 08:34:14.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041924625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041985611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.273" endtime="20201110 08:34:14.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041924625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041985611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.617" endtime="20201110 08:34:14.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.635" endtime="20201110 08:34:14.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.266" endtime="20201110 08:34:14.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.261" endtime="20201110 08:34:14.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:14.654" level="INFO">${RESULT} = [{'time': 0.041985611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0985999999998985e-05, 'source_diff': 6.0985999999998985e-05}, {'time': 0.042054625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:14.645" endtime="20201110 08:34:14.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:14.685" level="INFO">${ACCURACY} = {'time': [0.041985611, 0.042054625, 0.042120625, 0.042184639, 0.042248639, 0.042313667, 0.042380667, 0.042450681, 0.042518681, 0.042587681, 0.042655722, 0.042721708, 0.042787708, 0.042858708, 0.042926...</msg>
<status status="PASS" starttime="20201110 08:34:14.656" endtime="20201110 08:34:14.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.696" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:34:14.693" endtime="20201110 08:34:14.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.701" level="INFO">VALUE: [6.0985999999998985e-05, 6.17499999999993e-05, 6.136100000000283e-05, 6.162500000000265e-05, 6.186099999999639e-05, 6.18479999999963e-05, 6.186099999999639e-05, 6.188899999999553e-05, 6.1000000000005494e-05, 6.173699999999921e-05, 6.163900000000222e-05, 6.17499999999993e-05, 6.136100000000283e-05, 6.173599999999974e-05, 6.188900000000247e-05, 6.161100000000308e-05, 6.13750000000024e-05, 6.111100000000258e-05, 6.13750000000024e-05, 6.147199999999992e-05, 6.188900000000247e-05, 6.0985999999998985e-05, 6.1195e-05, 6.1000000000005494e-05, 6.112500000000215e-05, 6.098699999999846e-05, 6.186199999999586e-05, 6.138900000000197e-05, 6.0986000000005924e-05, 6.190300000000204e-05, 6.0985999999998985e-05, 6.18750000000029e-05, 6.0971999999999416e-05, 6.1000000000005494e-05, 6.175000000000624e-05, 6.115300000000129e-05, 6.161099999999614e-05, 6.176400000000581e-05, 6.131999999999665e-05, 6.18750000000029e-05, 6.148599999999949e-05, 6.149999999999906e-05, 6.098699999999846e-05, 6.0999999999998555e-05, 6.151400000000556e-05, 6.180499999999811e-05, 6.134700000000326e-05, 6.111100000000258e-05, 6.186100000000333e-05, 6.154099999999829e-05]</msg>
<status status="PASS" starttime="20201110 08:34:14.698" endtime="20201110 08:34:14.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.687" endtime="20201110 08:34:14.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.711" endtime="20201110 08:34:14.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:14.719" endtime="20201110 08:34:14.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.714" endtime="20201110 08:34:14.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.706" endtime="20201110 08:34:14.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.203" endtime="20201110 08:34:14.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.201" endtime="20201110 08:34:14.744"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.767" endtime="20201110 08:34:14.788"></status>
</kw>
<msg timestamp="20201110 08:34:14.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.764" endtime="20201110 08:34:14.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:14.796" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:14.791" endtime="20201110 08:34:14.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.798" endtime="20201110 08:34:14.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.757" endtime="20201110 08:34:14.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.751" endtime="20201110 08:34:14.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:14.822" endtime="20201110 08:34:15.153"></status>
</kw>
<msg timestamp="20201110 08:34:15.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042459444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042522194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:14.819" endtime="20201110 08:34:15.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042459444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042522194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:15.162" endtime="20201110 08:34:15.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.181" endtime="20201110 08:34:15.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.811" endtime="20201110 08:34:15.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.807" endtime="20201110 08:34:15.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.202" level="INFO">${RESULT} = [{'time': 0.042522194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.27500000000003e-05, 'source_diff': 6.27500000000003e-05}, {'time': 0.042594194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:15.193" endtime="20201110 08:34:15.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.233" level="INFO">${ACCURACY} = {'time': [0.042522194, 0.042594194, 0.042663208, 0.042729208, 0.042799236, 0.042865236, 0.042935236, 0.043001236, 0.043071292, 0.043136264, 0.043202278, 0.043268264, 0.043336292, 0.043403292, 0.043471...</msg>
<status status="PASS" starttime="20201110 08:34:15.204" endtime="20201110 08:34:15.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.244" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.241" endtime="20201110 08:34:15.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.249" level="INFO">VALUE: [6.27500000000003e-05, 6.223600000000024e-05, 6.250000000000006e-05, 6.261099999999714e-05, 6.226399999999938e-05, 6.244400000000178e-05, 6.211100000000358e-05, 6.195800000000085e-05, 6.266699999999542e-05, 6.27500000000003e-05, 6.250000000000006e-05, 6.286099999999739e-05, 6.276399999999988e-05, 6.223600000000024e-05, 6.230499999999861e-05, 6.237499999999646e-05, 6.290300000000304e-05, 6.288899999999653e-05, 6.280599999999859e-05, 6.288900000000347e-05, 6.268100000000193e-05, 6.223600000000024e-05, 6.276399999999988e-05, 6.28750000000039e-05, 6.234699999999732e-05, 6.237499999999646e-05, 6.236099999999689e-05, 6.247200000000092e-05, 6.254099999999929e-05, 6.248599999999355e-05, 6.288899999999653e-05, 6.286099999999739e-05, 6.2582999999998e-05, 6.259799999999704e-05, 6.288899999999653e-05, 6.22499999999998e-05, 6.261100000000408e-05, 6.211099999999664e-05, 6.266700000000236e-05, 6.223600000000024e-05, 6.20829999999975e-05, 6.219400000000153e-05, 6.229199999999852e-05, 6.27500000000003e-05, 6.193100000000118e-05, 6.284699999999782e-05, 6.250000000000006e-05, 6.199999999999956e-05, 6.248699999999996e-05, 6.269399999999509e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.246" endtime="20201110 08:34:15.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.235" endtime="20201110 08:34:15.252"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.259" endtime="20201110 08:34:15.261"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.267" endtime="20201110 08:34:15.289"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.263" endtime="20201110 08:34:15.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.254" endtime="20201110 08:34:15.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.747" endtime="20201110 08:34:15.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:14.745" endtime="20201110 08:34:15.293"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.315" endtime="20201110 08:34:15.337"></status>
</kw>
<msg timestamp="20201110 08:34:15.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.312" endtime="20201110 08:34:15.338"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.340" endtime="20201110 08:34:15.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.346" endtime="20201110 08:34:15.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.305" endtime="20201110 08:34:15.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.299" endtime="20201110 08:34:15.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.370" endtime="20201110 08:34:15.702"></status>
</kw>
<msg timestamp="20201110 08:34:15.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04240625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042469722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:15.366" endtime="20201110 08:34:15.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04240625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042469722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:15.711" endtime="20201110 08:34:15.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.730" endtime="20201110 08:34:15.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.359" endtime="20201110 08:34:15.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.355" endtime="20201110 08:34:15.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:15.749" level="INFO">${RESULT} = [{'time': 0.042469722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.347200000000192e-05, 'source_diff': 6.347200000000192e-05}, {'time': 0.042542708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:15.740" endtime="20201110 08:34:15.749"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:15.779" level="INFO">${ACCURACY} = {'time': [0.042469722, 0.042542708, 0.042613778, 0.042682736, 0.042748736, 0.04282075, 0.042891764, 0.042962764, 0.043035819, 0.043107778, 0.043178806, 0.043249792, 0.043318806, 0.043384806, 0.0434548...</msg>
<status status="PASS" starttime="20201110 08:34:15.751" endtime="20201110 08:34:15.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.790" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:34:15.788" endtime="20201110 08:34:15.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.796" level="INFO">VALUE: [6.347200000000192e-05, 6.334699999999832e-05, 6.366699999999642e-05, 6.37500000000013e-05, 6.372200000000217e-05, 6.337499999999746e-05, 6.337499999999746e-05, 6.336099999999789e-05, 6.366600000000389e-05, 6.387499999999796e-05, 6.361199999999761e-05, 6.348600000000149e-05, 6.33620000000043e-05, 6.361199999999761e-05, 6.3582999999999e-05, 6.386099999999839e-05, 6.300000000000056e-05, 6.391699999999667e-05, 6.312499999999721e-05, 6.386099999999839e-05, 6.350000000000106e-05, 6.369399999999609e-05, 6.297200000000142e-05, 6.32359999999943e-05, 6.297200000000142e-05, 6.309699999999807e-05, 6.361099999999814e-05, 6.358400000000541e-05, 6.309799999999754e-05, 6.341699999999617e-05, 6.298700000000046e-05, 6.348600000000149e-05, 6.311099999999764e-05, 6.32359999999943e-05, 6.359699999999857e-05, 6.294400000000228e-05, 6.337499999999746e-05, 6.312499999999721e-05, 6.32080000000021e-05, 6.305599999999884e-05, 6.37500000000013e-05, 6.298600000000099e-05, 6.377700000000097e-05, 6.336100000000483e-05, 6.323700000000071e-05, 6.388799999999806e-05, 6.376400000000088e-05, 6.376399999999394e-05, 6.354199999999977e-05, 6.337499999999746e-05]</msg>
<status status="PASS" starttime="20201110 08:34:15.792" endtime="20201110 08:34:15.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.781" endtime="20201110 08:34:15.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.805" endtime="20201110 08:34:15.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:15.814" endtime="20201110 08:34:15.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.810" endtime="20201110 08:34:15.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.801" endtime="20201110 08:34:15.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.295" endtime="20201110 08:34:15.840"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.294" endtime="20201110 08:34:15.840"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.863" endtime="20201110 08:34:15.884"></status>
</kw>
<msg timestamp="20201110 08:34:15.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.860" endtime="20201110 08:34:15.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:15.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:15.887" endtime="20201110 08:34:15.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.894" endtime="20201110 08:34:15.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.853" endtime="20201110 08:34:15.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.847" endtime="20201110 08:34:15.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:15.917" endtime="20201110 08:34:16.233"></status>
</kw>
<msg timestamp="20201110 08:34:16.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042257264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04232175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:15.914" endtime="20201110 08:34:16.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042257264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04232175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:16.243" endtime="20201110 08:34:16.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.262" endtime="20201110 08:34:16.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.906" endtime="20201110 08:34:16.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.902" endtime="20201110 08:34:16.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.281" level="INFO">${RESULT} = [{'time': 0.04232175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.448599999999555e-05, 'source_diff': 6.448599999999555e-05}, {'time': 0.042393764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:34:16.272" endtime="20201110 08:34:16.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.311" level="INFO">${ACCURACY} = {'time': [0.04232175, 0.042393764, 0.042460764, 0.042529778, 0.042597778, 0.042666792, 0.042733806, 0.042803806, 0.042872819, 0.042943819, 0.043013833, 0.043080833, 0.043149847, 0.043221847, 0.0432908...</msg>
<status status="PASS" starttime="20201110 08:34:16.283" endtime="20201110 08:34:16.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.322" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.320" endtime="20201110 08:34:16.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.328" level="INFO">VALUE: [6.448599999999555e-05, 6.462499999999871e-05, 6.436099999999889e-05, 6.411099999999864e-05, 6.484699999999982e-05, 6.48479999999993e-05, 6.42500000000018e-05, 6.397300000000189e-05, 6.462499999999871e-05, 6.461099999999914e-05, 6.486099999999939e-05, 6.461099999999914e-05, 6.47359999999958e-05, 6.486099999999939e-05, 6.400000000000156e-05, 6.395800000000285e-05, 6.42500000000018e-05, 6.411099999999864e-05, 6.486099999999939e-05, 6.487499999999896e-05, 6.411099999999864e-05, 6.443099999999674e-05, 6.398600000000199e-05, 6.488799999999906e-05, 6.438900000000497e-05, 6.412499999999821e-05, 6.412499999999821e-05, 6.448600000000249e-05, 6.462499999999871e-05, 6.436099999999889e-05, 6.423600000000224e-05, 6.397200000000242e-05, 6.401400000000113e-05, 6.486099999999939e-05, 6.476400000000188e-05, 6.409699999999907e-05, 6.465200000000532e-05, 6.400000000000156e-05, 6.487499999999896e-05, 6.401399999999419e-05, 6.461199999999861e-05, 6.436100000000583e-05, 6.472200000000317e-05, 6.462499999999871e-05, 6.444400000000378e-05, 6.469400000000403e-05, 6.474999999999537e-05, 6.409699999999907e-05, 6.47500000000023e-05, 6.436099999999889e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.325" endtime="20201110 08:34:16.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.313" endtime="20201110 08:34:16.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.337" endtime="20201110 08:34:16.340"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.345" endtime="20201110 08:34:16.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.341" endtime="20201110 08:34:16.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.332" endtime="20201110 08:34:16.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.842" endtime="20201110 08:34:16.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:15.841" endtime="20201110 08:34:16.371"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.394" endtime="20201110 08:34:16.415"></status>
</kw>
<msg timestamp="20201110 08:34:16.416" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.390" endtime="20201110 08:34:16.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.418" endtime="20201110 08:34:16.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.425" endtime="20201110 08:34:16.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.383" endtime="20201110 08:34:16.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.378" endtime="20201110 08:34:16.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.448" endtime="20201110 08:34:16.781"></status>
</kw>
<msg timestamp="20201110 08:34:16.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042075125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042140903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.444" endtime="20201110 08:34:16.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042075125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042140903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.790" endtime="20201110 08:34:16.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.809" endtime="20201110 08:34:16.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.437" endtime="20201110 08:34:16.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.433" endtime="20201110 08:34:16.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:16.828" level="INFO">${RESULT} = [{'time': 0.042140903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.577800000000245e-05, 'source_diff': 6.577800000000245e-05}, {'time': 0.042214903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:16.819" endtime="20201110 08:34:16.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:16.859" level="INFO">${ACCURACY} = {'time': [0.042140903, 0.042214903, 0.042285931, 0.042353917, 0.042423917, 0.042498944, 0.042565944, 0.042633958, 0.042704958, 0.042777958, 0.042845972, 0.042919972, 0.042994986, 0.043062986, 0.043138...</msg>
<status status="PASS" starttime="20201110 08:34:16.830" endtime="20201110 08:34:16.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.870" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:34:16.868" endtime="20201110 08:34:16.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.876" level="INFO">VALUE: [6.577800000000245e-05, 6.587499999999996e-05, 6.58480000000003e-05, 6.536099999999989e-05, 6.511099999999964e-05, 6.512499999999921e-05, 6.495800000000385e-05, 6.52500000000028e-05, 6.500000000000256e-05, 6.522199999999673e-05, 6.573600000000374e-05, 6.498600000000299e-05, 6.561100000000014e-05, 6.536099999999989e-05, 6.580600000000159e-05, 6.499999999999562e-05, 6.534700000000032e-05, 6.587499999999996e-05, 6.573600000000374e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.587499999999996e-05, 6.499999999999562e-05, 6.584700000000082e-05, 6.550000000000306e-05, 6.52359999999963e-05, 6.512499999999921e-05, 6.576399999999594e-05, 6.500000000000256e-05, 6.495799999999691e-05, 6.548599999999655e-05, 6.549999999999612e-05, 6.554200000000177e-05, 6.505500000000136e-05, 6.573600000000374e-05, 6.565199999999938e-05, 6.498599999999605e-05, 6.536199999999937e-05, 6.562499999999971e-05, 6.576400000000288e-05, 6.52500000000028e-05, 6.586100000000039e-05, 6.55280000000022e-05, 6.586100000000039e-05, 6.549999999999612e-05, 6.511099999999964e-05, 6.572200000000417e-05, 6.499999999999562e-05, 6.586100000000039e-05, 6.538899999999903e-05]</msg>
<status status="PASS" starttime="20201110 08:34:16.873" endtime="20201110 08:34:16.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.861" endtime="20201110 08:34:16.879"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.886" endtime="20201110 08:34:16.889"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:16.894" endtime="20201110 08:34:16.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.890" endtime="20201110 08:34:16.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.881" endtime="20201110 08:34:16.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.373" endtime="20201110 08:34:16.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.372" endtime="20201110 08:34:16.920"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.943" endtime="20201110 08:34:16.963"></status>
</kw>
<msg timestamp="20201110 08:34:16.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.939" endtime="20201110 08:34:16.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:16.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:16.967" endtime="20201110 08:34:16.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.973" endtime="20201110 08:34:16.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.932" endtime="20201110 08:34:16.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.926" endtime="20201110 08:34:16.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:16.996" endtime="20201110 08:34:17.327"></status>
</kw>
<msg timestamp="20201110 08:34:17.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041936375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042002569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:16.993" endtime="20201110 08:34:17.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041936375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042002569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.336" endtime="20201110 08:34:17.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.355" endtime="20201110 08:34:17.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.986" endtime="20201110 08:34:17.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.981" endtime="20201110 08:34:17.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.376" level="INFO">${RESULT} = [{'time': 0.042002569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.619399999999859e-05, 'source_diff': 6.619399999999859e-05}, {'time': 0.042074583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.367" endtime="20201110 08:34:17.377"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.410" level="INFO">${ACCURACY} = {'time': [0.042002569, 0.042074583, 0.042148597, 0.042218597, 0.042291625, 0.042361611, 0.042435639, 0.042506625, 0.042581653, 0.042655681, 0.042726667, 0.042798667, 0.042868667, 0.042944694, 0.043015...</msg>
<status status="PASS" starttime="20201110 08:34:17.379" endtime="20201110 08:34:17.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.421" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.419" endtime="20201110 08:34:17.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.428" level="INFO">VALUE: [6.619399999999859e-05, 6.648599999999755e-05, 6.611100000000064e-05, 6.636099999999395e-05, 6.674999999999737e-05, 6.598599999999705e-05, 6.684699999999488e-05, 6.686100000000139e-05, 6.61109999999937e-05, 6.677800000000345e-05, 6.650000000000406e-05, 6.624999999999687e-05, 6.683400000000173e-05, 6.637500000000046e-05, 6.673699999999727e-05, 6.631900000000218e-05, 6.687500000000096e-05, 6.66109999999942e-05, 6.67500000000043e-05, 6.67500000000043e-05, 6.687500000000096e-05, 6.686100000000139e-05, 6.648599999999755e-05, 6.644399999999884e-05, 6.66109999999942e-05, 6.687500000000096e-05, 6.673600000000474e-05, 6.600000000000356e-05, 6.650000000000406e-05, 6.612500000000021e-05, 6.633400000000123e-05, 6.611100000000064e-05, 6.684699999999488e-05, 6.659699999999463e-05, 6.609700000000107e-05, 6.661100000000114e-05, 6.688900000000053e-05, 6.597199999999748e-05, 6.612500000000021e-05, 6.674999999999737e-05, 6.642999999999927e-05, 6.688900000000053e-05, 6.67359999999978e-05, 6.662499999999377e-05, 6.650000000000406e-05, 6.623699999999677e-05, 6.601400000000313e-05, 6.604199999999533e-05, 6.62359999999973e-05, 6.661100000000114e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.424" endtime="20201110 08:34:17.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.412" endtime="20201110 08:34:17.432"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.439" endtime="20201110 08:34:17.443"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.450" endtime="20201110 08:34:17.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.445" endtime="20201110 08:34:17.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.434" endtime="20201110 08:34:17.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.922" endtime="20201110 08:34:17.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:16.921" endtime="20201110 08:34:17.475"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.498" endtime="20201110 08:34:17.519"></status>
</kw>
<msg timestamp="20201110 08:34:17.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.495" endtime="20201110 08:34:17.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:17.523" endtime="20201110 08:34:17.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.529" endtime="20201110 08:34:17.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.488" endtime="20201110 08:34:17.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.482" endtime="20201110 08:34:17.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.552" endtime="20201110 08:34:17.885"></status>
</kw>
<msg timestamp="20201110 08:34:17.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042191083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042258097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.549" endtime="20201110 08:34:17.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042191083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042258097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:17.894" endtime="20201110 08:34:17.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.913" endtime="20201110 08:34:17.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.542" endtime="20201110 08:34:17.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.537" endtime="20201110 08:34:17.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:17.932" level="INFO">${RESULT} = [{'time': 0.042258097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.701400000000413e-05, 'source_diff': 6.701400000000413e-05}, {'time': 0.042332097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:17.923" endtime="20201110 08:34:17.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:17.963" level="INFO">${ACCURACY} = {'time': [0.042258097, 0.042332097, 0.042405111, 0.042480111, 0.042551125, 0.042624153, 0.042699167, 0.042769153, 0.042843153, 0.042916167, 0.042993181, 0.043066222, 0.043141194, 0.043211194, 0.043283...</msg>
<status status="PASS" starttime="20201110 08:34:17.935" endtime="20201110 08:34:17.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.974" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:34:17.972" endtime="20201110 08:34:17.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:17.980" level="INFO">VALUE: [6.701400000000413e-05, 6.706899999999599e-05, 6.748600000000549e-05, 6.72359999999983e-05, 6.723600000000524e-05, 6.763900000000128e-05, 6.759800000000205e-05, 6.712499999999427e-05, 6.734700000000232e-05, 6.774999999999837e-05, 6.787499999999502e-05, 6.70280000000037e-05, 6.762500000000171e-05, 6.768000000000052e-05, 6.724999999999787e-05, 6.711100000000164e-05, 6.788900000000153e-05, 6.72359999999983e-05, 6.697200000000542e-05, 6.737500000000146e-05, 6.749999999999812e-05, 6.699999999999762e-05, 6.72359999999983e-05, 6.737499999999452e-05, 6.77229999999987e-05, 6.767999999999358e-05, 6.749999999999812e-05, 6.700000000000456e-05, 6.706900000000293e-05, 6.77359999999988e-05, 6.761100000000214e-05, 6.748599999999855e-05, 6.72359999999983e-05, 6.774999999999837e-05, 6.762499999999477e-05, 6.77359999999988e-05, 6.698599999999805e-05, 6.772199999999923e-05, 6.699999999999762e-05, 6.786100000000239e-05, 6.774999999999837e-05, 6.748599999999855e-05, 6.749999999999812e-05, 6.787500000000196e-05, 6.699999999999762e-05, 6.77500000000053e-05, 6.744399999999984e-05, 6.774999999999837e-05, 6.722199999999873e-05, 6.697199999999848e-05]</msg>
<status status="PASS" starttime="20201110 08:34:17.977" endtime="20201110 08:34:17.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.965" endtime="20201110 08:34:17.983"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:17.989" endtime="20201110 08:34:17.992"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:17.997" endtime="20201110 08:34:18.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.993" endtime="20201110 08:34:18.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.985" endtime="20201110 08:34:18.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.478" endtime="20201110 08:34:18.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:17.476" endtime="20201110 08:34:18.023"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.046" endtime="20201110 08:34:18.067"></status>
</kw>
<msg timestamp="20201110 08:34:18.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.043" endtime="20201110 08:34:18.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.071" endtime="20201110 08:34:18.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.077" endtime="20201110 08:34:18.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.035" endtime="20201110 08:34:18.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.030" endtime="20201110 08:34:18.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.100" endtime="20201110 08:34:18.432"></status>
</kw>
<msg timestamp="20201110 08:34:18.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042209847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042278431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.097" endtime="20201110 08:34:18.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.458" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042209847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042278431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.441" endtime="20201110 08:34:18.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.460" endtime="20201110 08:34:18.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.090" endtime="20201110 08:34:18.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.085" endtime="20201110 08:34:18.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:18.479" level="INFO">${RESULT} = [{'time': 0.042278431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.858399999999654e-05, 'source_diff': 6.858399999999654e-05}, {'time': 0.042351431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:18.470" endtime="20201110 08:34:18.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:18.510" level="INFO">${ACCURACY} = {'time': [0.042278431, 0.042351431, 0.042425444, 0.042498444, 0.042570472, 0.042641472, 0.0427135, 0.0427915, 0.042863486, 0.042936486, 0.0430105, 0.043083583, 0.043155514, 0.043233528, 0.043308528, 0...</msg>
<status status="PASS" starttime="20201110 08:34:18.481" endtime="20201110 08:34:18.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.521" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:34:18.518" endtime="20201110 08:34:18.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.526" level="INFO">VALUE: [6.858399999999654e-05, 6.847299999999945e-05, 6.887500000000296e-05, 6.834700000000332e-05, 6.838899999999509e-05, 6.812500000000221e-05, 6.865300000000185e-05, 6.87500000000063e-05, 6.836099999999595e-05, 6.836100000000289e-05, 6.822199999999973e-05, 6.868000000000152e-05, 6.87359999999998e-05, 6.834700000000332e-05, 6.881999999999722e-05, 6.830499999999767e-05, 6.861100000000314e-05, 6.873700000000621e-05, 6.874999999999937e-05, 6.836099999999595e-05, 6.799999999999862e-05, 6.86109999999962e-05, 6.812499999999527e-05, 6.837500000000246e-05, 6.836100000000289e-05, 6.87359999999998e-05, 6.847199999999998e-05, 6.801399999999819e-05, 6.811100000000264e-05, 6.798600000000599e-05, 6.838900000000203e-05, 6.848599999999955e-05, 6.886200000000287e-05, 6.847299999999945e-05, 6.843100000000074e-05, 6.886099999999645e-05, 6.836099999999595e-05, 6.86109999999962e-05, 6.886099999999645e-05, 6.813900000000178e-05, 6.876399999999894e-05, 6.887499999999602e-05, 6.826399999999844e-05, 6.886100000000339e-05, 6.837499999999552e-05, 6.81109999999957e-05, 6.82359999999993e-05, 6.823699999999877e-05, 6.836200000000237e-05, 6.887500000000296e-05]</msg>
<status status="PASS" starttime="20201110 08:34:18.523" endtime="20201110 08:34:18.528"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.511" endtime="20201110 08:34:18.529"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.536" endtime="20201110 08:34:18.538"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:18.544" endtime="20201110 08:34:18.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.540" endtime="20201110 08:34:18.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.531" endtime="20201110 08:34:18.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.025" endtime="20201110 08:34:18.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.024" endtime="20201110 08:34:18.570"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.592" endtime="20201110 08:34:18.613"></status>
</kw>
<msg timestamp="20201110 08:34:18.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.589" endtime="20201110 08:34:18.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:18.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:18.616" endtime="20201110 08:34:18.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.623" endtime="20201110 08:34:18.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.582" endtime="20201110 08:34:18.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.576" endtime="20201110 08:34:18.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:18.646" endtime="20201110 08:34:18.977"></status>
</kw>
<msg timestamp="20201110 08:34:18.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.642" endtime="20201110 08:34:18.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042025125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042094389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:18.987" endtime="20201110 08:34:19.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.006" endtime="20201110 08:34:19.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.635" endtime="20201110 08:34:19.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.631" endtime="20201110 08:34:19.014"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.025" level="INFO">${RESULT} = [{'time': 0.042094389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.926399999999944e-05, 'source_diff': 6.926399999999944e-05}, {'time': 0.042171417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:19.016" endtime="20201110 08:34:19.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.055" level="INFO">${ACCURACY} = {'time': [0.042094389, 0.042171417, 0.042249417, 0.042326417, 0.042404486, 0.042480458, 0.042552444, 0.042625458, 0.042701472, 0.042780472, 0.042855472, 0.042931486, 0.043004542, 0.043079514, 0.043157...</msg>
<status status="PASS" starttime="20201110 08:34:19.027" endtime="20201110 08:34:19.056"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.066" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.064" endtime="20201110 08:34:19.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.072" level="INFO">VALUE: [6.926399999999944e-05, 6.938900000000303e-05, 6.97360000000008e-05, 6.97360000000008e-05, 6.980499999999917e-05, 6.894400000000134e-05, 6.940200000000313e-05, 6.937499999999652e-05, 6.899999999999962e-05, 6.975000000000037e-05, 6.972200000000123e-05, 6.912499999999627e-05, 6.991700000000267e-05, 6.899999999999962e-05, 6.931999999999772e-05, 6.924999999999987e-05, 6.97360000000008e-05, 6.988799999999712e-05, 6.937500000000346e-05, 6.958400000000448e-05, 6.986199999999693e-05, 6.913899999999584e-05, 6.92360000000003e-05, 6.962500000000371e-05, 6.937499999999652e-05, 6.986099999999745e-05, 6.91109999999967e-05, 6.948600000000055e-05, 6.97360000000008e-05, 6.950000000000012e-05, 6.898600000000005e-05, 6.951399999999969e-05, 6.911100000000364e-05, 6.895900000000038e-05, 6.963799999999687e-05, 6.99030000000031e-05, 6.92360000000003e-05, 6.898600000000005e-05, 6.975000000000037e-05, 6.924999999999987e-05, 6.968000000000252e-05, 6.94030000000026e-05, 6.922200000000073e-05, 6.936099999999695e-05, 6.92360000000003e-05, 6.92360000000003e-05, 6.980499999999917e-05, 6.899999999999962e-05, 6.937500000000346e-05, 6.980599999999865e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.069" endtime="20201110 08:34:19.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.057" endtime="20201110 08:34:19.075"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.081" endtime="20201110 08:34:19.084"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.089" endtime="20201110 08:34:19.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.085" endtime="20201110 08:34:19.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.077" endtime="20201110 08:34:19.114"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.572" endtime="20201110 08:34:19.115"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:18.570" endtime="20201110 08:34:19.115"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.138" endtime="20201110 08:34:19.159"></status>
</kw>
<msg timestamp="20201110 08:34:19.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.134" endtime="20201110 08:34:19.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.163" endtime="20201110 08:34:19.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.169" endtime="20201110 08:34:19.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.127" endtime="20201110 08:34:19.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.121" endtime="20201110 08:34:19.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.195" endtime="20201110 08:34:19.527"></status>
</kw>
<msg timestamp="20201110 08:34:19.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042192708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.192" endtime="20201110 08:34:19.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042192708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.536" endtime="20201110 08:34:19.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.555" endtime="20201110 08:34:19.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.185" endtime="20201110 08:34:19.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.179" endtime="20201110 08:34:19.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:19.575" level="INFO">${RESULT} = [{'time': 0.042192708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.99160000000032e-05, 'source_diff': 6.99160000000032e-05}, {'time': 0.042272722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:19.567" endtime="20201110 08:34:19.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:19.606" level="INFO">${ACCURACY} = {'time': [0.042192708, 0.042272722, 0.042351736, 0.042426736, 0.042502736, 0.04257475, 0.042652806, 0.042730764, 0.042807792, 0.042882806, 0.042959847, 0.043035792, 0.043114806, 0.043193875, 0.0432728...</msg>
<status status="PASS" starttime="20201110 08:34:19.578" endtime="20201110 08:34:19.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.617" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:34:19.615" endtime="20201110 08:34:19.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.622" level="INFO">VALUE: [6.99160000000032e-05, 7.062499999999777e-05, 7.05689999999995e-05, 7.000000000000062e-05, 7.048600000000155e-05, 7.000000000000062e-05, 7.012500000000421e-05, 6.998599999999411e-05, 7.026400000000044e-05, 7.038900000000403e-05, 7.018000000000302e-05, 7.086100000000539e-05, 7.00979999999976e-05, 7.004199999999933e-05, 7.008299999999856e-05, 7.075000000000137e-05, 6.998600000000105e-05, 7.086099999999845e-05, 7.075000000000137e-05, 7.052800000000026e-05, 7.051400000000069e-05, 7.088899999999759e-05, 6.998600000000105e-05, 7.0763999999994e-05, 7.048600000000155e-05, 7.02360000000013e-05, 7.051300000000121e-05, 7.065300000000385e-05, 7.037499999999752e-05, 7.048599999999461e-05, 7.087499999999802e-05, 7.037500000000446e-05, 7.061100000000514e-05, 7.001400000000019e-05, 7.086100000000539e-05, 7.059700000000557e-05, 6.997200000000148e-05, 7.048600000000155e-05, 7.084700000000582e-05, 7.086099999999845e-05, 7.013900000000378e-05, 7.026299999999402e-05, 7.038899999999709e-05, 7.002799999999976e-05, 6.997199999999454e-05, 7.07360000000018e-05, 7.022200000000173e-05, 7.009699999999813e-05, 7.037499999999752e-05, 7.050000000000112e-05]</msg>
<status status="PASS" starttime="20201110 08:34:19.619" endtime="20201110 08:34:19.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.608" endtime="20201110 08:34:19.625"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.632" endtime="20201110 08:34:19.634"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:19.640" endtime="20201110 08:34:19.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.636" endtime="20201110 08:34:19.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.627" endtime="20201110 08:34:19.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.117" endtime="20201110 08:34:19.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.116" endtime="20201110 08:34:19.666"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.688" endtime="20201110 08:34:19.710"></status>
</kw>
<msg timestamp="20201110 08:34:19.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.685" endtime="20201110 08:34:19.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:19.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:19.714" endtime="20201110 08:34:19.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.720" endtime="20201110 08:34:19.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.678" endtime="20201110 08:34:19.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.672" endtime="20201110 08:34:19.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:19.743" endtime="20201110 08:34:20.077"></status>
</kw>
<msg timestamp="20201110 08:34:20.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041962625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042034458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:19.740" endtime="20201110 08:34:20.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041962625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042034458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.087" endtime="20201110 08:34:20.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.105" endtime="20201110 08:34:20.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.733" endtime="20201110 08:34:20.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.728" endtime="20201110 08:34:20.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.124" level="INFO">${RESULT} = [{'time': 0.042034458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.183299999999337e-05, 'source_diff': 7.183299999999337e-05}, {'time': 0.042115458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.115" endtime="20201110 08:34:20.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.155" level="INFO">${ACCURACY} = {'time': [0.042034458, 0.042115458, 0.042194472, 0.042273472, 0.042351486, 0.0424295, 0.0425085, 0.042588542, 0.042662528, 0.042740528, 0.042820542, 0.042896556, 0.042977556, 0.043057569, 0.043134569,...</msg>
<status status="PASS" starttime="20201110 08:34:20.126" endtime="20201110 08:34:20.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.166" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.163" endtime="20201110 08:34:20.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.171" level="INFO">VALUE: [7.183299999999337e-05, 7.109699999999913e-05, 7.098599999999511e-05, 7.11109999999987e-05, 7.11109999999987e-05, 7.148600000000255e-05, 7.134699999999938e-05, 7.183399999999979e-05, 7.123599999999536e-05, 7.100000000000162e-05, 7.186100000000639e-05, 7.175000000000237e-05, 7.119500000000306e-05, 7.16109999999992e-05, 7.123599999999536e-05, 7.188900000000553e-05, 7.125000000000187e-05, 7.137499999999852e-05, 7.159699999999963e-05, 7.130600000000015e-05, 7.126400000000144e-05, 7.136099999999895e-05, 7.134699999999938e-05, 7.186099999999945e-05, 7.112499999999827e-05, 7.138899999999809e-05, 7.136099999999895e-05, 7.137499999999852e-05, 7.100000000000162e-05, 7.125000000000187e-05, 7.098600000000205e-05, 7.11109999999987e-05, 7.163900000000528e-05, 7.116699999999698e-05, 7.091700000000367e-05, 7.162499999999877e-05, 7.162500000000571e-05, 7.100000000000162e-05, 7.106999999999947e-05, 7.170900000000313e-05, 7.148600000000255e-05, 7.111199999999818e-05, 7.162500000000571e-05, 7.159799999999911e-05, 7.134699999999938e-05, 7.140299999999766e-05, 7.161100000000614e-05, 7.12360000000023e-05, 7.100000000000162e-05, 7.174999999999543e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.168" endtime="20201110 08:34:20.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.157" endtime="20201110 08:34:20.174"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.181" endtime="20201110 08:34:20.183"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.189" endtime="20201110 08:34:20.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.184" endtime="20201110 08:34:20.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.176" endtime="20201110 08:34:20.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.668" endtime="20201110 08:34:20.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:19.667" endtime="20201110 08:34:20.214"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.237" endtime="20201110 08:34:20.258"></status>
</kw>
<msg timestamp="20201110 08:34:20.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.234" endtime="20201110 08:34:20.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.262" endtime="20201110 08:34:20.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.268" endtime="20201110 08:34:20.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.226" endtime="20201110 08:34:20.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.221" endtime="20201110 08:34:20.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.291" endtime="20201110 08:34:20.624"></status>
</kw>
<msg timestamp="20201110 08:34:20.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041747542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.288" endtime="20201110 08:34:20.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041675458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041747542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.634" endtime="20201110 08:34:20.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.652" endtime="20201110 08:34:20.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.281" endtime="20201110 08:34:20.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.276" endtime="20201110 08:34:20.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:20.672" level="INFO">${RESULT} = [{'time': 0.041747542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.208400000000004e-05, 'source_diff': 7.208400000000004e-05}, {'time': 0.041827542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:20.662" endtime="20201110 08:34:20.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:20.702" level="INFO">${ACCURACY} = {'time': [0.041747542, 0.041827542, 0.041908556, 0.041983556, 0.042058569, 0.042140653, 0.042219583, 0.042298611, 0.042377611, 0.042453611, 0.042529625, 0.042609625, 0.042686639, 0.042762667, 0.042840...</msg>
<status status="PASS" starttime="20201110 08:34:20.674" endtime="20201110 08:34:20.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.713" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:34:20.711" endtime="20201110 08:34:20.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.719" level="INFO">VALUE: [7.208400000000004e-05, 7.236099999999995e-05, 7.195899999999644e-05, 7.198699999999558e-05, 7.272199999999729e-05, 7.265299999999891e-05, 7.273599999999686e-05, 7.251400000000269e-05, 7.198600000000305e-05, 7.198600000000305e-05, 7.237499999999952e-05, 7.209700000000013e-05, 7.237499999999952e-05, 7.219499999999712e-05, 7.248599999999661e-05, 7.237499999999952e-05, 7.284800000000036e-05, 7.224999999999593e-05, 7.282000000000122e-05, 7.212499999999927e-05, 7.287500000000002e-05, 7.236099999999995e-05, 7.198599999999611e-05, 7.237499999999952e-05, 7.277700000000303e-05, 7.22360000000033e-05, 7.225000000000287e-05, 7.259700000000063e-05, 7.224999999999593e-05, 7.26110000000002e-05, 7.21109999999997e-05, 7.273699999999633e-05, 7.219500000000406e-05, 7.248600000000355e-05, 7.202700000000228e-05, 7.20560000000009e-05, 7.225000000000287e-05, 7.21109999999997e-05, 7.275000000000337e-05, 7.197200000000348e-05, 7.223599999999636e-05, 7.213899999999884e-05, 7.237500000000646e-05, 7.288899999999959e-05, 7.19309999999973e-05, 7.286100000000045e-05, 7.200000000000262e-05, 7.211199999999918e-05, 7.222200000000373e-05, 7.250000000000312e-05]</msg>
<status status="PASS" starttime="20201110 08:34:20.716" endtime="20201110 08:34:20.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.704" endtime="20201110 08:34:20.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.728" endtime="20201110 08:34:20.731"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:20.736" endtime="20201110 08:34:20.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.732" endtime="20201110 08:34:20.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.724" endtime="20201110 08:34:20.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.216" endtime="20201110 08:34:20.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.215" endtime="20201110 08:34:20.759"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.769" endtime="20201110 08:34:20.787"></status>
</kw>
<msg timestamp="20201110 08:34:20.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.768" endtime="20201110 08:34:20.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:20.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:20.789" endtime="20201110 08:34:20.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.792" endtime="20201110 08:34:20.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.764" endtime="20201110 08:34:20.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.762" endtime="20201110 08:34:20.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:20.803" endtime="20201110 08:34:21.112"></status>
</kw>
<msg timestamp="20201110 08:34:21.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024784625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024858292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:20.801" endtime="20201110 08:34:21.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024784625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024858292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.121" endtime="20201110 08:34:21.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.140" endtime="20201110 08:34:21.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.798" endtime="20201110 08:34:21.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.796" endtime="20201110 08:34:21.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.159" level="INFO">${RESULT} = [{'time': 0.024858292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.366699999999948e-05, 'source_diff': 7.366699999999948e-05}, {'time': 0.024934292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.150" endtime="20201110 08:34:21.159"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.189" level="INFO">${ACCURACY} = {'time': [0.024858292, 0.024934292, 0.025014319, 0.025095319, 0.025176319, 0.025253333, 0.025331361, 0.025407347, 0.025485389, 0.025568361, 0.025647375, 0.025730389, 0.025813389, 0.025889417, 0.025966...</msg>
<status status="PASS" starttime="20201110 08:34:21.161" endtime="20201110 08:34:21.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.200" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.198" endtime="20201110 08:34:21.201"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.206" level="INFO">VALUE: [7.366699999999948e-05, 7.348600000000108e-05, 7.363800000000087e-05, 7.37500000000009e-05, 7.297199999999754e-05, 7.381899999999927e-05, 7.300000000000015e-05, 7.334700000000138e-05, 7.327799999999954e-05, 7.336100000000095e-05, 7.36110000000012e-05, 7.323600000000083e-05, 7.322199999999779e-05, 7.333400000000129e-05, 7.31110000000007e-05, 7.293100000000177e-05, 7.363800000000087e-05, 7.348699999999708e-05, 7.298600000000058e-05, 7.372199999999829e-05, 7.388899999999712e-05, 7.300000000000015e-05, 7.300000000000015e-05, 7.326399999999997e-05, 7.319499999999812e-05, 7.386099999999798e-05, 7.301399999999972e-05, 7.386100000000145e-05, 7.372200000000176e-05, 7.37500000000009e-05, 7.31110000000007e-05, 7.337499999999705e-05, 7.300000000000015e-05, 7.297200000000101e-05, 7.333300000000181e-05, 7.354099999999988e-05, 7.388899999999712e-05, 7.32500000000004e-05, 7.301399999999972e-05, 7.36110000000012e-05, 7.316699999999898e-05, 7.298600000000058e-05, 7.299999999999668e-05, 7.37500000000009e-05, 7.376400000000047e-05, 7.366600000000001e-05, 7.32370000000003e-05, 7.387500000000102e-05, 7.347200000000151e-05, 7.297200000000101e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.202" endtime="20201110 08:34:21.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.191" endtime="20201110 08:34:21.209"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.215" endtime="20201110 08:34:21.218"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.223" endtime="20201110 08:34:21.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.219" endtime="20201110 08:34:21.247"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.211" endtime="20201110 08:34:21.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.760" endtime="20201110 08:34:21.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:20.759" endtime="20201110 08:34:21.249"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.272" endtime="20201110 08:34:21.293"></status>
</kw>
<msg timestamp="20201110 08:34:21.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.268" endtime="20201110 08:34:21.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.297" endtime="20201110 08:34:21.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.303" endtime="20201110 08:34:21.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.261" endtime="20201110 08:34:21.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.255" endtime="20201110 08:34:21.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.326" endtime="20201110 08:34:21.659"></status>
</kw>
<msg timestamp="20201110 08:34:21.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041991375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:21.323" endtime="20201110 08:34:21.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041991375, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:21.668" endtime="20201110 08:34:21.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.687" endtime="20201110 08:34:21.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.316" endtime="20201110 08:34:21.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.311" endtime="20201110 08:34:21.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:21.708" level="INFO">${RESULT} = [{'time': 0.041991375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.437499999999458e-05, 'source_diff': 7.437499999999458e-05}, {'time': 0.042070389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:21.699" endtime="20201110 08:34:21.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:21.738" level="INFO">${ACCURACY} = {'time': [0.041991375, 0.042070389, 0.042147389, 0.042227403, 0.042304403, 0.042387417, 0.042466417, 0.042550458, 0.042633444, 0.042711444, 0.042789472, 0.042867528, 0.0429495, 0.043031514, 0.04311048...</msg>
<status status="PASS" starttime="20201110 08:34:21.710" endtime="20201110 08:34:21.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.749" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:34:21.747" endtime="20201110 08:34:21.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.755" level="INFO">VALUE: [7.437499999999458e-05, 7.474999999999843e-05, 7.459700000000263e-05, 7.462499999999483e-05, 7.423599999999836e-05, 7.437499999999458e-05, 7.445899999999894e-05, 7.451399999999775e-05, 7.487500000000202e-05, 7.423599999999836e-05, 7.420799999999922e-05, 7.40560000000029e-05, 7.476400000000494e-05, 7.427799999999707e-05, 7.42360000000053e-05, 7.462500000000177e-05, 7.41110000000017e-05, 7.423599999999836e-05, 7.449999999999818e-05, 7.412500000000127e-05, 7.487500000000202e-05, 7.448699999999808e-05, 7.487500000000202e-05, 7.486100000000245e-05, 7.469499999999962e-05, 7.424999999999793e-05, 7.451399999999775e-05, 7.419399999999965e-05, 7.436100000000195e-05, 7.436100000000195e-05, 7.401400000000419e-05, 7.472199999999929e-05, 7.456999999999603e-05, 7.448599999999861e-05, 7.424999999999793e-05, 7.42769999999976e-05, 7.494499999999987e-05, 7.437499999999458e-05, 7.424999999999793e-05, 7.486099999999551e-05, 7.448599999999861e-05, 7.436099999999501e-05, 7.423599999999836e-05, 7.449999999999818e-05, 7.430499999999673e-05, 7.399999999999768e-05, 7.487500000000202e-05, 7.434700000000238e-05, 7.474999999999843e-05, 7.412499999999433e-05]</msg>
<status status="PASS" starttime="20201110 08:34:21.751" endtime="20201110 08:34:21.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.740" endtime="20201110 08:34:21.758"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.764" endtime="20201110 08:34:21.767"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:21.772" endtime="20201110 08:34:21.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.768" endtime="20201110 08:34:21.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.759" endtime="20201110 08:34:21.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.251" endtime="20201110 08:34:21.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.250" endtime="20201110 08:34:21.798"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.820" endtime="20201110 08:34:21.841"></status>
</kw>
<msg timestamp="20201110 08:34:21.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.817" endtime="20201110 08:34:21.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:21.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:21.845" endtime="20201110 08:34:21.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.851" endtime="20201110 08:34:21.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.810" endtime="20201110 08:34:21.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.804" endtime="20201110 08:34:21.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:21.874" endtime="20201110 08:34:22.209"></status>
</kw>
<msg timestamp="20201110 08:34:22.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041818014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:21.871" endtime="20201110 08:34:22.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041818014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041893347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.219" endtime="20201110 08:34:22.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.238" endtime="20201110 08:34:22.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.864" endtime="20201110 08:34:22.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.859" endtime="20201110 08:34:22.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.257" level="INFO">${RESULT} = [{'time': 0.041893347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.533299999999687e-05, 'source_diff': 7.533299999999687e-05}, {'time': 0.041976347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.248" endtime="20201110 08:34:22.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.287" level="INFO">${ACCURACY} = {'time': [0.041893347, 0.041976347, 0.042054361, 0.042133389, 0.042212375, 0.042297389, 0.042375403, 0.042454417, 0.042533417, 0.042618417, 0.042697431, 0.042778444, 0.042858444, 0.042941458, 0.043022...</msg>
<status status="PASS" starttime="20201110 08:34:22.259" endtime="20201110 08:34:22.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.298" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.296" endtime="20201110 08:34:22.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.304" level="INFO">VALUE: [7.533299999999687e-05, 7.533299999999687e-05, 7.499999999999868e-05, 7.53890000000021e-05, 7.52360000000063e-05, 7.512499999999533e-05, 7.574999999999943e-05, 7.536100000000295e-05, 7.549999999999918e-05, 7.573599999999986e-05, 7.562500000000277e-05, 7.524999999999893e-05, 7.523599999999936e-05, 7.587500000000302e-05, 7.513900000000184e-05, 7.572200000000029e-05, 7.56110000000032e-05, 7.587499999999608e-05, 7.561099999999626e-05, 7.548599999999961e-05, 7.586100000000345e-05, 7.587500000000302e-05, 7.494499999999987e-05, 7.536099999999601e-05, 7.501299999999878e-05, 7.587500000000302e-05, 7.508300000000356e-05, 7.563900000000234e-05, 7.586099999999651e-05, 7.55969999999967e-05, 7.534699999999644e-05, 7.561099999999626e-05, 7.587500000000302e-05, 7.541700000000123e-05, 7.584699999999694e-05, 7.504099999999791e-05, 7.588899999999565e-05, 7.536099999999601e-05, 7.56110000000032e-05, 7.572200000000029e-05, 7.497199999999954e-05, 7.551400000000569e-05, 7.551400000000569e-05, 7.573599999999986e-05, 7.5763999999999e-05, 7.562500000000277e-05, 7.523599999999936e-05, 7.58890000000026e-05, 7.56110000000032e-05, 7.512500000000227e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.301" endtime="20201110 08:34:22.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.289" endtime="20201110 08:34:22.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.313" endtime="20201110 08:34:22.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.322" endtime="20201110 08:34:22.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.317" endtime="20201110 08:34:22.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.309" endtime="20201110 08:34:22.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.800" endtime="20201110 08:34:22.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:21.799" endtime="20201110 08:34:22.347"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.370" endtime="20201110 08:34:22.392"></status>
</kw>
<msg timestamp="20201110 08:34:22.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.367" endtime="20201110 08:34:22.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.395" endtime="20201110 08:34:22.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.401" endtime="20201110 08:34:22.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.359" endtime="20201110 08:34:22.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.354" endtime="20201110 08:34:22.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.425" endtime="20201110 08:34:22.755"></status>
</kw>
<msg timestamp="20201110 08:34:22.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041991181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.421" endtime="20201110 08:34:22.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041914458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041991181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.764" endtime="20201110 08:34:22.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.783" endtime="20201110 08:34:22.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.414" endtime="20201110 08:34:22.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.409" endtime="20201110 08:34:22.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:22.802" level="INFO">${RESULT} = [{'time': 0.041991181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.672300000000076e-05, 'source_diff': 7.672300000000076e-05}, {'time': 0.042071167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:22.793" endtime="20201110 08:34:22.802"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:22.832" level="INFO">${ACCURACY} = {'time': [0.041991181, 0.042071167, 0.042154167, 0.042237181, 0.042322208, 0.042408194, 0.042490208, 0.042571236, 0.042654236, 0.04273325, 0.04281525, 0.042901264, 0.042986278, 0.043065292, 0.04315127...</msg>
<status status="PASS" starttime="20201110 08:34:22.804" endtime="20201110 08:34:22.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.843" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:34:22.841" endtime="20201110 08:34:22.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.849" level="INFO">VALUE: [7.672300000000076e-05, 7.624999999999993e-05, 7.673600000000086e-05, 7.659799999999717e-05, 7.613900000000284e-05, 7.61110000000037e-05, 7.687500000000402e-05, 7.624999999999993e-05, 7.612499999999633e-05, 7.663900000000334e-05, 7.612499999999633e-05, 7.650000000000018e-05, 7.663900000000334e-05, 7.651399999999975e-05, 7.636100000000395e-05, 7.675000000000043e-05, 7.675000000000043e-05, 7.624999999999993e-05, 7.673600000000086e-05, 7.686100000000445e-05, 7.634699999999744e-05, 7.655499999999898e-05, 7.634699999999744e-05, 7.633299999999787e-05, 7.688899999999665e-05, 7.637500000000352e-05, 7.622200000000079e-05, 7.637500000000352e-05, 7.662499999999683e-05, 7.599999999999968e-05, 7.675000000000043e-05, 7.624999999999993e-05, 7.637499999999658e-05, 7.61110000000037e-05, 7.66110000000042e-05, 7.618000000000208e-05, 7.598600000000011e-05, 7.637499999999658e-05, 7.651399999999975e-05, 7.662499999999683e-05, 7.601399999999925e-05, 7.68890000000036e-05, 7.597200000000054e-05, 7.599999999999968e-05, 7.661099999999726e-05, 7.679200000000608e-05, 7.650000000000018e-05, 7.690300000000316e-05, 7.6764e-05, 7.62639999999995e-05]</msg>
<status status="PASS" starttime="20201110 08:34:22.846" endtime="20201110 08:34:22.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.834" endtime="20201110 08:34:22.852"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.858" endtime="20201110 08:34:22.861"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:22.867" endtime="20201110 08:34:22.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.862" endtime="20201110 08:34:22.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.854" endtime="20201110 08:34:22.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.349" endtime="20201110 08:34:22.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.348" endtime="20201110 08:34:22.892"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.915" endtime="20201110 08:34:22.937"></status>
</kw>
<msg timestamp="20201110 08:34:22.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.912" endtime="20201110 08:34:22.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:22.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:22.940" endtime="20201110 08:34:22.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.947" endtime="20201110 08:34:22.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.905" endtime="20201110 08:34:22.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.899" endtime="20201110 08:34:22.953"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:22.970" endtime="20201110 08:34:23.302"></status>
</kw>
<msg timestamp="20201110 08:34:23.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042130528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042207625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:22.967" endtime="20201110 08:34:23.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042130528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042207625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.312" endtime="20201110 08:34:23.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.330" endtime="20201110 08:34:23.336"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.959" endtime="20201110 08:34:23.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.955" endtime="20201110 08:34:23.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.349" level="INFO">${RESULT} = [{'time': 0.042207625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.70969999999982e-05, 'source_diff': 7.70969999999982e-05}, {'time': 0.042287625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:23.340" endtime="20201110 08:34:23.350"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.380" level="INFO">${ACCURACY} = {'time': [0.042207625, 0.042287625, 0.042372653, 0.042456653, 0.042541667, 0.042627722, 0.042712681, 0.042793681, 0.042873694, 0.042960694, 0.043045764, 0.043131736, 0.043218736, 0.043300736, 0.043383...</msg>
<status status="PASS" starttime="20201110 08:34:23.351" endtime="20201110 08:34:23.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.391" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.389" endtime="20201110 08:34:23.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.396" level="INFO">VALUE: [7.70969999999982e-05, 7.76110000000052e-05, 7.701400000000025e-05, 7.724999999999399e-05, 7.775000000000143e-05, 7.716599999999657e-05, 7.725000000000093e-05, 7.734799999999792e-05, 7.74719999999951e-05, 7.748600000000161e-05, 7.700000000000068e-05, 7.726399999999356e-05, 7.712499999999733e-05, 7.784699999999894e-05, 7.711099999999776e-05, 7.7764000000001e-05, 7.775000000000143e-05, 7.712499999999733e-05, 7.71110000000047e-05, 7.758299999999912e-05, 7.788899999999765e-05, 7.723600000000136e-05, 7.787499999999808e-05, 7.774999999999449e-05, 7.723600000000136e-05, 7.736100000000495e-05, 7.701400000000025e-05, 7.773599999999492e-05, 7.775000000000143e-05, 7.698600000000111e-05, 7.738899999999715e-05, 7.750000000000118e-05, 7.737499999999758e-05, 7.788899999999765e-05, 7.762500000000477e-05, 7.697300000000101e-05, 7.78049999999933e-05, 7.787499999999808e-05, 7.784699999999894e-05, 7.763900000000434e-05, 7.788899999999765e-05, 7.78189999999998e-05, 7.737500000000452e-05, 7.711099999999776e-05, 7.718100000000255e-05, 7.7764000000001e-05, 7.75969999999987e-05, 7.700000000000068e-05, 7.742999999999639e-05, 7.762500000000477e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.393" endtime="20201110 08:34:23.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.382" endtime="20201110 08:34:23.399"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.406" endtime="20201110 08:34:23.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.414" endtime="20201110 08:34:23.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.410" endtime="20201110 08:34:23.437"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.401" endtime="20201110 08:34:23.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.895" endtime="20201110 08:34:23.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:22.893" endtime="20201110 08:34:23.440"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.462" endtime="20201110 08:34:23.484"></status>
</kw>
<msg timestamp="20201110 08:34:23.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.459" endtime="20201110 08:34:23.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:23.487" endtime="20201110 08:34:23.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.493" endtime="20201110 08:34:23.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.452" endtime="20201110 08:34:23.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.446" endtime="20201110 08:34:23.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.517" endtime="20201110 08:34:23.849"></status>
</kw>
<msg timestamp="20201110 08:34:23.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042303306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042381556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.513" endtime="20201110 08:34:23.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042303306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042381556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:23.858" endtime="20201110 08:34:23.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.877" endtime="20201110 08:34:23.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.506" endtime="20201110 08:34:23.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.501" endtime="20201110 08:34:23.888"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:23.898" level="INFO">${RESULT} = [{'time': 0.042381556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.825000000000193e-05, 'source_diff': 7.825000000000193e-05}, {'time': 0.042463556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:23.889" endtime="20201110 08:34:23.899"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:23.928" level="INFO">${ACCURACY} = {'time': [0.042381556, 0.042463556, 0.042545569, 0.042627569, 0.042712583, 0.042799597, 0.042879681, 0.042961653, 0.043045625, 0.043129639, 0.043211639, 0.043294667, 0.043378653, 0.043459667, 0.043542...</msg>
<status status="PASS" starttime="20201110 08:34:23.900" endtime="20201110 08:34:23.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.939" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:34:23.937" endtime="20201110 08:34:23.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:23.945" level="INFO">VALUE: [7.825000000000193e-05, 7.873700000000233e-05, 7.872199999999635e-05, 7.798599999999517e-05, 7.873599999999592e-05, 7.825000000000193e-05, 7.806999999999953e-05, 7.804200000000039e-05, 7.861099999999926e-05, 7.873599999999592e-05, 7.798600000000211e-05, 7.863900000000534e-05, 7.836100000000595e-05, 7.850000000000218e-05, 7.861099999999926e-05, 7.841700000000423e-05, 7.848600000000261e-05, 7.798600000000211e-05, 7.837499999999858e-05, 7.811099999999876e-05, 7.799999999999474e-05, 7.848600000000261e-05, 7.887499999999908e-05, 7.862499999999883e-05, 7.823599999999542e-05, 7.887499999999908e-05, 7.887499999999908e-05, 7.874999999999549e-05, 7.887500000000602e-05, 7.811199999999824e-05, 7.834699999999944e-05, 7.833299999999987e-05, 7.822199999999585e-05, 7.800000000000168e-05, 7.862499999999883e-05, 7.886099999999951e-05, 7.84169999999973e-05, 7.849999999999524e-05, 7.808300000000656e-05, 7.829100000000117e-05, 7.823599999999542e-05, 7.886099999999951e-05, 7.825000000000193e-05, 7.8764000000002e-05, 7.823599999999542e-05, 7.830600000000021e-05, 7.825000000000193e-05, 7.886099999999951e-05, 7.887499999999908e-05, 7.808299999999962e-05]</msg>
<status status="PASS" starttime="20201110 08:34:23.942" endtime="20201110 08:34:23.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.930" endtime="20201110 08:34:23.948"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:23.955" endtime="20201110 08:34:23.957"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:23.963" endtime="20201110 08:34:23.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.959" endtime="20201110 08:34:23.986"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.950" endtime="20201110 08:34:23.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.442" endtime="20201110 08:34:23.988"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.441" endtime="20201110 08:34:23.989"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.011" endtime="20201110 08:34:24.032"></status>
</kw>
<msg timestamp="20201110 08:34:24.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.008" endtime="20201110 08:34:24.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.036" endtime="20201110 08:34:24.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.042" endtime="20201110 08:34:24.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.001" endtime="20201110 08:34:24.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.995" endtime="20201110 08:34:24.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.065" endtime="20201110 08:34:24.398"></status>
</kw>
<msg timestamp="20201110 08:34:24.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042014181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.062" endtime="20201110 08:34:24.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042014181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042093333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.407" endtime="20201110 08:34:24.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.426" endtime="20201110 08:34:24.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.055" endtime="20201110 08:34:24.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.050" endtime="20201110 08:34:24.435"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.445" level="INFO">${RESULT} = [{'time': 0.042093333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.9151999999999e-05, 'source_diff': 7.9151999999999e-05}, {'time': 0.042177361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201110 08:34:24.436" endtime="20201110 08:34:24.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:24.476" level="INFO">${ACCURACY} = {'time': [0.042093333, 0.042177361, 0.042261375, 0.042349375, 0.042433389, 0.042515389, 0.042600389, 0.042688417, 0.042770417, 0.042859431, 0.042941444, 0.043026444, 0.043114444, 0.043198458, 0.043281...</msg>
<status status="PASS" starttime="20201110 08:34:24.447" endtime="20201110 08:34:24.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.489" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:34:24.486" endtime="20201110 08:34:24.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.495" level="INFO">VALUE: [7.9151999999999e-05, 7.899999999999574e-05, 7.951399999999581e-05, 7.900000000000268e-05, 7.938899999999915e-05, 7.937499999999958e-05, 7.90970000000002e-05, 7.901400000000225e-05, 7.974999999999649e-05, 7.948700000000308e-05, 7.976300000000353e-05, 7.962499999999983e-05, 7.961100000000026e-05, 7.900000000000268e-05, 7.988899999999965e-05, 7.923600000000336e-05, 7.951399999999581e-05, 7.913900000000584e-05, 7.972199999999735e-05, 7.949999999999624e-05, 7.955600000000146e-05, 7.923600000000336e-05, 7.948600000000361e-05, 7.974999999999649e-05, 7.97369999999964e-05, 7.891600000000526e-05, 7.912499999999933e-05, 7.936100000000001e-05, 7.925000000000293e-05, 7.95970000000007e-05, 7.948599999999667e-05, 7.891700000000473e-05, 7.990300000000616e-05, 7.937499999999958e-05, 7.912499999999933e-05, 7.92640000000025e-05, 7.949999999999624e-05, 7.98049999999953e-05, 7.95840000000006e-05, 7.948599999999667e-05, 7.943000000000533e-05, 7.911099999999976e-05, 7.924999999999599e-05, 7.936100000000001e-05, 7.923600000000336e-05, 7.961100000000026e-05, 7.987500000000008e-05, 7.948599999999667e-05, 7.962499999999983e-05, 7.934799999999992e-05]</msg>
<status status="PASS" starttime="20201110 08:34:24.491" endtime="20201110 08:34:24.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.479" endtime="20201110 08:34:24.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.504" endtime="20201110 08:34:24.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:24.512" endtime="20201110 08:34:24.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.508" endtime="20201110 08:34:24.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.499" endtime="20201110 08:34:24.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.991" endtime="20201110 08:34:24.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:23.990" endtime="20201110 08:34:24.538"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.561" endtime="20201110 08:34:24.583"></status>
</kw>
<msg timestamp="20201110 08:34:24.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.558" endtime="20201110 08:34:24.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:24.586" endtime="20201110 08:34:24.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.593" endtime="20201110 08:34:24.597"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.550" endtime="20201110 08:34:24.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.545" endtime="20201110 08:34:24.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.616" endtime="20201110 08:34:24.948"></status>
</kw>
<msg timestamp="20201110 08:34:24.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042263028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.613" endtime="20201110 08:34:24.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:24.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042263028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:24.958" endtime="20201110 08:34:24.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:24.977" endtime="20201110 08:34:24.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.605" endtime="20201110 08:34:24.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.601" endtime="20201110 08:34:24.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:24.996" level="INFO">${RESULT} = [{'time': 0.042263028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.043099999999886e-05, 'source_diff': 8.043099999999886e-05}, {'time': 0.042349069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:24.987" endtime="20201110 08:34:24.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.027" level="INFO">${ACCURACY} = {'time': [0.042263028, 0.042349069, 0.042432042, 0.042516042, 0.042600056, 0.042690069, 0.042773069, 0.042863069, 0.042946083, 0.043033097, 0.043116097, 0.043206125, 0.043296167, 0.043382125, 0.043469...</msg>
<status status="PASS" starttime="20201110 08:34:24.998" endtime="20201110 08:34:25.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.038" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.035" endtime="20201110 08:34:25.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.043" level="INFO">VALUE: [8.043099999999886e-05, 8.054100000000342e-05, 8.088900000000065e-05, 8.061099999999433e-05, 8.086199999999405e-05, 8.038799999999374e-05, 8.044399999999896e-05, 8.036099999999408e-05, 8.000000000000368e-05, 8.08049999999963e-05, 7.998599999999717e-05, 8.076399999999706e-05, 8.016700000000598e-05, 8.023599999999742e-05, 8.0764000000004e-05, 8.087500000000108e-05, 8.0846999999995e-05, 8.059800000000117e-05, 8.017999999999914e-05, 8.066699999999954e-05, 8.037500000000058e-05, 8.040299999999972e-05, 8.012500000000033e-05, 8.068099999999911e-05, 7.999999999999674e-05, 8.051399999999681e-05, 8.062500000000083e-05, 8.074999999999749e-05, 8.054100000000342e-05, 8.061100000000126e-05, 8.061100000000126e-05, 8.037500000000058e-05, 8.081899999999587e-05, 8.07919999999962e-05, 7.995799999999803e-05, 8.049999999999724e-05, 8.0846999999995e-05, 8.054199999999595e-05, 8.088900000000065e-05, 8.024999999999699e-05, 8.0764000000004e-05, 8.075000000000443e-05, 8.050000000000418e-05, 8.075000000000443e-05, 8.061100000000126e-05, 7.998700000000358e-05, 8.084700000000195e-05, 8.05970000000017e-05, 7.998599999999717e-05, 8.001400000000325e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.040" endtime="20201110 08:34:25.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.029" endtime="20201110 08:34:25.051"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.057" endtime="20201110 08:34:25.060"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.066" endtime="20201110 08:34:25.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.061" endtime="20201110 08:34:25.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.053" endtime="20201110 08:34:25.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.540" endtime="20201110 08:34:25.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:24.539" endtime="20201110 08:34:25.091"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.114" endtime="20201110 08:34:25.136"></status>
</kw>
<msg timestamp="20201110 08:34:25.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.111" endtime="20201110 08:34:25.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.139" endtime="20201110 08:34:25.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.146" endtime="20201110 08:34:25.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.103" endtime="20201110 08:34:25.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.098" endtime="20201110 08:34:25.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.170" endtime="20201110 08:34:25.513"></status>
</kw>
<msg timestamp="20201110 08:34:25.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042511736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.166" endtime="20201110 08:34:25.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042429917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042511736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:25.523" endtime="20201110 08:34:25.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.541" endtime="20201110 08:34:25.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.159" endtime="20201110 08:34:25.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.154" endtime="20201110 08:34:25.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:25.560" level="INFO">${RESULT} = [{'time': 0.042511736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.18190000000038e-05, 'source_diff': 8.18190000000038e-05}, {'time': 0.042602819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:25.551" endtime="20201110 08:34:25.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:25.591" level="INFO">${ACCURACY} = {'time': [0.042511736, 0.042602819, 0.042693764, 0.042777764, 0.042865778, 0.042954792, 0.043041792, 0.043128806, 0.043215819, 0.043301819, 0.043390833, 0.043478847, 0.043567847, 0.043652875, 0.043736...</msg>
<status status="PASS" starttime="20201110 08:34:25.562" endtime="20201110 08:34:25.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.602" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:34:25.600" endtime="20201110 08:34:25.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.607" level="INFO">VALUE: [8.18190000000038e-05, 8.156900000000356e-05, 8.175000000000543e-05, 8.136100000000202e-05, 8.112500000000133e-05, 8.137500000000158e-05, 8.111100000000177e-05, 8.174999999999849e-05, 8.097200000000554e-05, 8.14719999999991e-05, 8.136099999999508e-05, 8.174999999999849e-05, 8.14719999999991e-05, 8.186100000000252e-05, 8.140300000000072e-05, 8.148599999999867e-05, 8.16390000000014e-05, 8.149999999999824e-05, 8.136100000000202e-05, 8.186100000000252e-05, 8.149999999999824e-05, 8.137499999999465e-05, 8.098600000000511e-05, 8.162500000000183e-05, 8.136100000000202e-05, 8.166700000000054e-05, 8.174999999999849e-05, 8.161100000000227e-05, 8.111099999999483e-05, 8.148600000000561e-05, 8.175000000000543e-05, 8.16249999999949e-05, 8.111100000000177e-05, 8.151300000000528e-05, 8.148699999999814e-05, 8.098600000000511e-05, 8.102799999999688e-05, 8.134700000000245e-05, 8.162500000000183e-05, 8.100000000000468e-05, 8.112500000000133e-05, 8.123599999999842e-05, 8.14719999999991e-05, 8.187500000000208e-05, 8.124999999999799e-05, 8.126399999999756e-05, 8.137500000000158e-05, 8.098699999999764e-05, 8.137500000000158e-05, 8.193100000000036e-05]</msg>
<status status="PASS" starttime="20201110 08:34:25.604" endtime="20201110 08:34:25.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.593" endtime="20201110 08:34:25.610"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.617" endtime="20201110 08:34:25.620"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:25.625" endtime="20201110 08:34:25.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.621" endtime="20201110 08:34:25.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.612" endtime="20201110 08:34:25.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.093" endtime="20201110 08:34:25.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.092" endtime="20201110 08:34:25.651"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.674" endtime="20201110 08:34:25.697"></status>
</kw>
<msg timestamp="20201110 08:34:25.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.670" endtime="20201110 08:34:25.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:25.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:25.701" endtime="20201110 08:34:25.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.707" endtime="20201110 08:34:25.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.663" endtime="20201110 08:34:25.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.657" endtime="20201110 08:34:25.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:25.730" endtime="20201110 08:34:26.075"></status>
</kw>
<msg timestamp="20201110 08:34:26.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042606, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:25.727" endtime="20201110 08:34:26.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042523306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042606, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:26.084" endtime="20201110 08:34:26.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.103" endtime="20201110 08:34:26.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.720" endtime="20201110 08:34:26.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.715" endtime="20201110 08:34:26.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.125" level="INFO">${RESULT} = [{'time': 0.042606, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.269400000000121e-05, 'source_diff': 8.269400000000121e-05}, {'time': 0.042696, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.2...</msg>
<status status="PASS" starttime="20201110 08:34:26.116" endtime="20201110 08:34:26.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.155" level="INFO">${ACCURACY} = {'time': [0.042606, 0.042696, 0.042788083, 0.042872014, 0.042961056, 0.043048028, 0.043135097, 0.043226056, 0.043314139, 0.043405069, 0.043490139, 0.043581083, 0.043671097, 0.043759125, 0.043849125, 0...</msg>
<status status="PASS" starttime="20201110 08:34:26.127" endtime="20201110 08:34:26.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.167" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.164" endtime="20201110 08:34:26.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.172" level="INFO">VALUE: [8.269400000000121e-05, 8.274999999999949e-05, 8.231899999999737e-05, 8.199999999999874e-05, 8.215299999999454e-05, 8.261100000000327e-05, 8.21799999999942e-05, 8.274999999999949e-05, 8.244500000000043e-05, 8.261099999999633e-05, 8.26669999999946e-05, 8.248599999999967e-05, 8.248599999999967e-05, 8.22640000000055e-05, 8.218100000000061e-05, 8.262500000000284e-05, 8.22090000000067e-05, 8.231999999999684e-05, 8.261100000000327e-05, 8.234799999999598e-05, 8.212500000000234e-05, 8.198599999999917e-05, 8.21390000000019e-05, 8.251399999999881e-05, 8.265299999999504e-05, 8.283299999999744e-05, 8.244400000000096e-05, 8.262500000000284e-05, 8.248599999999967e-05, 8.24170000000013e-05, 8.202800000000482e-05, 8.198599999999917e-05, 8.211200000000224e-05, 8.27369999999994e-05, 8.219500000000018e-05, 8.224999999999899e-05, 8.198599999999917e-05, 8.287500000000309e-05, 8.220800000000028e-05, 8.21249999999954e-05, 8.200000000000568e-05, 8.229099999999823e-05, 8.276399999999906e-05, 8.241600000000182e-05, 8.255600000000446e-05, 8.249999999999924e-05, 8.237500000000259e-05, 8.26119999999958e-05, 8.272200000000035e-05, 8.238900000000215e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.169" endtime="20201110 08:34:26.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.157" endtime="20201110 08:34:26.176"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.183" endtime="20201110 08:34:26.186"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.191" endtime="20201110 08:34:26.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.187" endtime="20201110 08:34:26.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.178" endtime="20201110 08:34:26.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.653" endtime="20201110 08:34:26.217"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:25.652" endtime="20201110 08:34:26.217"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.240" endtime="20201110 08:34:26.261"></status>
</kw>
<msg timestamp="20201110 08:34:26.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.236" endtime="20201110 08:34:26.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.265" endtime="20201110 08:34:26.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.271" endtime="20201110 08:34:26.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.229" endtime="20201110 08:34:26.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.223" endtime="20201110 08:34:26.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.294" endtime="20201110 08:34:26.639"></status>
</kw>
<msg timestamp="20201110 08:34:26.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04201375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042097444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:26.291" endtime="20201110 08:34:26.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04201375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042097444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:26.648" endtime="20201110 08:34:26.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.667" endtime="20201110 08:34:26.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.284" endtime="20201110 08:34:26.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.279" endtime="20201110 08:34:26.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:26.686" level="INFO">${RESULT} = [{'time': 0.042097444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.369399999999527e-05, 'source_diff': 8.369399999999527e-05}, {'time': 0.042188417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:26.677" endtime="20201110 08:34:26.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:26.716" level="INFO">${ACCURACY} = {'time': [0.042097444, 0.042188417, 0.042280431, 0.0423695, 0.042459472, 0.042546458, 0.042638472, 0.042728486, 0.0428155, 0.042908514, 0.042995528, 0.043085528, 0.043178542, 0.043267583, 0.043356569,...</msg>
<status status="PASS" starttime="20201110 08:34:26.688" endtime="20201110 08:34:26.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.727" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:34:26.725" endtime="20201110 08:34:26.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.732" level="INFO">VALUE: [8.369399999999527e-05, 8.311099999999683e-05, 8.348700000000014e-05, 8.380599999999877e-05, 8.376400000000006e-05, 8.302699999999941e-05, 8.333299999999794e-05, 8.324999999999999e-05, 8.299999999999974e-05, 8.311100000000377e-05, 8.376400000000006e-05, 8.375000000000049e-05, 8.323600000000042e-05, 8.390199999999681e-05, 8.350000000000024e-05, 8.37370000000004e-05, 8.322200000000085e-05, 8.324999999999999e-05, 8.323600000000042e-05, 8.373600000000092e-05, 8.323600000000042e-05, 8.388899999999672e-05, 8.361099999999733e-05, 8.350000000000024e-05, 8.341600000000282e-05, 8.387499999999715e-05, 8.388900000000366e-05, 8.31249999999964e-05, 8.336100000000402e-05, 8.337499999999665e-05, 8.359699999999776e-05, 8.322199999999391e-05, 8.361099999999733e-05, 8.363899999999647e-05, 8.373600000000092e-05, 8.336099999999708e-05, 8.324999999999999e-05, 8.36249999999969e-05, 8.35970000000047e-05, 8.386099999999758e-05, 8.375000000000049e-05, 8.345800000000153e-05, 8.373600000000092e-05, 8.326399999999956e-05, 8.375000000000049e-05, 8.309699999999726e-05, 8.361100000000427e-05, 8.299999999999974e-05, 8.33469999999975e-05, 8.375000000000049e-05]</msg>
<status status="PASS" starttime="20201110 08:34:26.729" endtime="20201110 08:34:26.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.718" endtime="20201110 08:34:26.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.742" endtime="20201110 08:34:26.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:26.750" endtime="20201110 08:34:26.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.746" endtime="20201110 08:34:26.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.737" endtime="20201110 08:34:26.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.219" endtime="20201110 08:34:26.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.218" endtime="20201110 08:34:26.776"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.799" endtime="20201110 08:34:26.820"></status>
</kw>
<msg timestamp="20201110 08:34:26.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.795" endtime="20201110 08:34:26.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:26.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:26.823" endtime="20201110 08:34:26.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.830" endtime="20201110 08:34:26.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.788" endtime="20201110 08:34:26.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.782" endtime="20201110 08:34:26.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:26.853" endtime="20201110 08:34:27.197"></status>
</kw>
<msg timestamp="20201110 08:34:27.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042034236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042118889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:26.850" endtime="20201110 08:34:27.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.223" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042034236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042118889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.206" endtime="20201110 08:34:27.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.226" endtime="20201110 08:34:27.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.842" endtime="20201110 08:34:27.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.838" endtime="20201110 08:34:27.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.245" level="INFO">${RESULT} = [{'time': 0.042118889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.465299999999704e-05, 'source_diff': 8.465299999999704e-05}, {'time': 0.042212889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.236" endtime="20201110 08:34:27.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.275" level="INFO">${ACCURACY} = {'time': [0.042118889, 0.042212889, 0.042304917, 0.042395986, 0.042481917, 0.042572972, 0.042660958, 0.042747958, 0.042840958, 0.042929972, 0.043017986, 0.043109014, 0.043196014, 0.043285014, 0.043374...</msg>
<status status="PASS" starttime="20201110 08:34:27.247" endtime="20201110 08:34:27.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.286" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.284" endtime="20201110 08:34:27.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.291" level="INFO">VALUE: [8.465299999999704e-05, 8.486100000000552e-05, 8.476399999999412e-05, 8.469399999999627e-05, 8.397300000000107e-05, 8.479100000000073e-05, 8.401400000000031e-05, 8.398600000000117e-05, 8.398600000000117e-05, 8.423599999999448e-05, 8.400000000000074e-05, 8.401400000000031e-05, 8.451400000000081e-05, 8.474999999999455e-05, 8.412500000000434e-05, 8.41249999999974e-05, 8.450000000000124e-05, 8.44869999999942e-05, 8.456999999999909e-05, 8.425000000000099e-05, 8.400000000000074e-05, 8.416700000000304e-05, 8.487500000000509e-05, 8.425000000000099e-05, 8.41390000000039e-05, 8.46249999999979e-05, 8.41390000000039e-05, 8.400000000000074e-05, 8.434799999999798e-05, 8.436099999999808e-05, 8.475000000000149e-05, 8.423600000000142e-05, 8.424999999999405e-05, 8.400000000000074e-05, 8.488900000000466e-05, 8.436099999999808e-05, 8.412500000000434e-05, 8.450000000000124e-05, 8.480600000000671e-05, 8.412500000000434e-05, 8.475000000000149e-05, 8.486099999999858e-05, 8.423600000000142e-05, 8.486200000000499e-05, 8.490299999999729e-05, 8.486100000000552e-05, 8.461099999999833e-05, 8.412500000000434e-05, 8.39999999999938e-05, 8.423600000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.288" endtime="20201110 08:34:27.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.277" endtime="20201110 08:34:27.295"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.301" endtime="20201110 08:34:27.303"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.309" endtime="20201110 08:34:27.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.305" endtime="20201110 08:34:27.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.296" endtime="20201110 08:34:27.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.778" endtime="20201110 08:34:27.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:26.777" endtime="20201110 08:34:27.335"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.358" endtime="20201110 08:34:27.379"></status>
</kw>
<msg timestamp="20201110 08:34:27.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.354" endtime="20201110 08:34:27.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.383" endtime="20201110 08:34:27.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.389" endtime="20201110 08:34:27.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.347" endtime="20201110 08:34:27.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.341" endtime="20201110 08:34:27.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.412" endtime="20201110 08:34:27.727"></status>
</kw>
<msg timestamp="20201110 08:34:27.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042081069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042166847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.409" endtime="20201110 08:34:27.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042081069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042166847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.732" endtime="20201110 08:34:27.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.752" endtime="20201110 08:34:27.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.402" endtime="20201110 08:34:27.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.397" endtime="20201110 08:34:27.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:27.771" level="INFO">${RESULT} = [{'time': 0.042166847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.577800000000163e-05, 'source_diff': 8.577800000000163e-05}, {'time': 0.042261847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:27.762" endtime="20201110 08:34:27.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:27.801" level="INFO">${ACCURACY} = {'time': [0.042166847, 0.042261847, 0.042351917, 0.042443875, 0.042537875, 0.042632889, 0.042725903, 0.042817917, 0.042906931, 0.042994944, 0.043087958, 0.043177958, 0.043266958, 0.043361028, 0.043455...</msg>
<status status="PASS" starttime="20201110 08:34:27.773" endtime="20201110 08:34:27.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.812" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:34:27.810" endtime="20201110 08:34:27.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.817" level="INFO">VALUE: [8.577800000000163e-05, 8.511099999999883e-05, 8.543100000000386e-05, 8.500000000000174e-05, 8.556900000000062e-05, 8.51249999999984e-05, 8.500000000000174e-05, 8.51249999999984e-05, 8.537500000000559e-05, 8.538799999999874e-05, 8.576400000000206e-05, 8.581900000000087e-05, 8.523600000000242e-05, 8.527800000000113e-05, 8.572200000000335e-05, 8.572199999999641e-05, 8.501399999999437e-05, 8.551399999999487e-05, 8.522200000000285e-05, 8.536100000000602e-05, 8.572299999999589e-05, 8.588799999999924e-05, 8.584799999999948e-05, 8.537499999999865e-05, 8.544400000000396e-05, 8.576400000000206e-05, 8.561099999999933e-05, 8.575000000000249e-05, 8.511099999999883e-05, 8.51249999999984e-05, 8.501399999999437e-05, 8.523600000000242e-05, 8.550000000000224e-05, 8.548600000000267e-05, 8.583399999999991e-05, 8.550000000000224e-05, 8.556900000000062e-05, 8.580499999999436e-05, 8.504100000000098e-05, 8.513899999999797e-05, 8.590299999999829e-05, 8.538899999999822e-05, 8.505500000000055e-05, 8.573600000000292e-05, 8.574999999999555e-05, 8.500000000000174e-05, 8.587499999999915e-05, 8.525000000000199e-05, 8.526400000000156e-05, 8.537499999999865e-05]</msg>
<status status="PASS" starttime="20201110 08:34:27.814" endtime="20201110 08:34:27.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.803" endtime="20201110 08:34:27.821"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.827" endtime="20201110 08:34:27.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:27.835" endtime="20201110 08:34:27.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.831" endtime="20201110 08:34:27.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.822" endtime="20201110 08:34:27.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.337" endtime="20201110 08:34:27.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.336" endtime="20201110 08:34:27.861"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.884" endtime="20201110 08:34:27.906"></status>
</kw>
<msg timestamp="20201110 08:34:27.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.880" endtime="20201110 08:34:27.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:27.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:27.910" endtime="20201110 08:34:27.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.916" endtime="20201110 08:34:27.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.873" endtime="20201110 08:34:27.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.868" endtime="20201110 08:34:27.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:27.939" endtime="20201110 08:34:28.272"></status>
</kw>
<msg timestamp="20201110 08:34:28.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042459847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:27.936" endtime="20201110 08:34:28.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042459847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042545833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.281" endtime="20201110 08:34:28.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.300" endtime="20201110 08:34:28.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.929" endtime="20201110 08:34:28.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.924" endtime="20201110 08:34:28.310"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.321" level="INFO">${RESULT} = [{'time': 0.042545833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.598599999999623e-05, 'source_diff': 8.598599999999623e-05}, {'time': 0.042636861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.312" endtime="20201110 08:34:28.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.351" level="INFO">${ACCURACY} = {'time': [0.042545833, 0.042636861, 0.042728861, 0.042822861, 0.042917889, 0.043013903, 0.043105903, 0.043199903, 0.043293944, 0.043388931, 0.043481931, 0.043571944, 0.043662958, 0.043758972, 0.043851...</msg>
<status status="PASS" starttime="20201110 08:34:28.323" endtime="20201110 08:34:28.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.362" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.360" endtime="20201110 08:34:28.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.368" level="INFO">VALUE: [8.598599999999623e-05, 8.601399999999537e-05, 8.686100000000058e-05, 8.611099999999983e-05, 8.676400000000306e-05, 8.609700000000026e-05, 8.687500000000015e-05, 8.604199999999451e-05, 8.672199999999741e-05, 8.66249999999999e-05, 8.647300000000357e-05, 8.611099999999983e-05, 8.600000000000274e-05, 8.625000000000299e-05, 8.675000000000349e-05, 8.618099999999768e-05, 8.640299999999879e-05, 8.650000000000324e-05, 8.634699999999357e-05, 8.626400000000256e-05, 8.661100000000033e-05, 8.630600000000127e-05, 8.647299999999664e-05, 8.68199999999944e-05, 8.650000000000324e-05, 8.672199999999741e-05, 8.650000000000324e-05, 8.687500000000015e-05, 8.623600000000342e-05, 8.602800000000188e-05, 8.663899999999947e-05, 8.598600000000317e-05, 8.675000000000349e-05, 8.609799999999973e-05, 8.638800000000668e-05, 8.636100000000008e-05, 8.661100000000033e-05, 8.674999999999655e-05, 8.620799999999734e-05, 8.61249999999994e-05, 8.620799999999734e-05, 8.638899999999922e-05, 8.637500000000659e-05, 8.650000000000324e-05, 8.672199999999741e-05, 8.658400000000066e-05, 8.66249999999999e-05, 8.600000000000274e-05, 8.687500000000015e-05, 8.622200000000385e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.365" endtime="20201110 08:34:28.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.353" endtime="20201110 08:34:28.371"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.378" endtime="20201110 08:34:28.380"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.386" endtime="20201110 08:34:28.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.381" endtime="20201110 08:34:28.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.373" endtime="20201110 08:34:28.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.863" endtime="20201110 08:34:28.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:27.862" endtime="20201110 08:34:28.412"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.434" endtime="20201110 08:34:28.457"></status>
</kw>
<msg timestamp="20201110 08:34:28.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.431" endtime="20201110 08:34:28.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.464" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.460" endtime="20201110 08:34:28.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.466" endtime="20201110 08:34:28.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.424" endtime="20201110 08:34:28.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.418" endtime="20201110 08:34:28.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.490" endtime="20201110 08:34:28.822"></status>
</kw>
<msg timestamp="20201110 08:34:28.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042371056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042458583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.486" endtime="20201110 08:34:28.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042371056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042458583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:28.832" endtime="20201110 08:34:28.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.850" endtime="20201110 08:34:28.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.479" endtime="20201110 08:34:28.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.474" endtime="20201110 08:34:28.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:28.869" level="INFO">${RESULT} = [{'time': 0.042458583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.752700000000391e-05, 'source_diff': 8.752700000000391e-05}, {'time': 0.042555583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:28.860" endtime="20201110 08:34:28.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:28.900" level="INFO">${ACCURACY} = {'time': [0.042458583, 0.042555583, 0.042651597, 0.042746625, 0.042840625, 0.042931625, 0.043028639, 0.043123667, 0.043216722, 0.043308681, 0.043403681, 0.043495694, 0.043587694, 0.043681708, 0.043775...</msg>
<status status="PASS" starttime="20201110 08:34:28.871" endtime="20201110 08:34:28.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.910" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:34:28.908" endtime="20201110 08:34:28.911"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:28.916" level="INFO">VALUE: [8.752700000000391e-05, 8.711100000000083e-05, 8.723599999999748e-05, 8.776400000000406e-05, 8.723599999999748e-05, 8.711100000000083e-05, 8.786100000000158e-05, 8.788900000000072e-05, 8.755499999999611e-05, 8.737500000000065e-05, 8.772299999999789e-05, 8.770799999999884e-05, 8.773600000000492e-05, 8.711100000000083e-05, 8.743000000000639e-05, 8.704200000000245e-05, 8.736100000000108e-05, 8.784699999999507e-05, 8.761100000000133e-05, 8.700000000000374e-05, 8.741599999999988e-05, 8.76250000000009e-05, 8.750000000000424e-05, 8.754199999999601e-05, 8.773599999999798e-05, 8.729199999999576e-05, 8.713899999999997e-05, 8.745799999999859e-05, 8.743099999999893e-05, 8.787500000000115e-05, 8.705499999999561e-05, 8.711100000000083e-05, 8.711100000000083e-05, 8.737500000000065e-05, 8.719399999999877e-05, 8.787499999999421e-05, 8.775000000000449e-05, 8.76669999999996e-05, 8.737500000000065e-05, 8.736100000000108e-05, 8.707000000000159e-05, 8.737500000000065e-05, 8.69999999999968e-05, 8.76250000000009e-05, 8.709699999999432e-05, 8.726399999999662e-05, 8.763800000000099e-05, 8.723699999999696e-05, 8.775000000000449e-05, 8.737500000000065e-05]</msg>
<status status="PASS" starttime="20201110 08:34:28.913" endtime="20201110 08:34:28.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.901" endtime="20201110 08:34:28.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.926" endtime="20201110 08:34:28.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:28.934" endtime="20201110 08:34:28.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.930" endtime="20201110 08:34:28.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.921" endtime="20201110 08:34:28.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.414" endtime="20201110 08:34:28.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.412" endtime="20201110 08:34:28.960"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:28.982" endtime="20201110 08:34:29.005"></status>
</kw>
<msg timestamp="20201110 08:34:29.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:28.979" endtime="20201110 08:34:29.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.008" endtime="20201110 08:34:29.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.014" endtime="20201110 08:34:29.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.972" endtime="20201110 08:34:29.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.966" endtime="20201110 08:34:29.021"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.037" endtime="20201110 08:34:29.371"></status>
</kw>
<msg timestamp="20201110 08:34:29.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042055514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.034" endtime="20201110 08:34:29.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041966875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042055514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.380" endtime="20201110 08:34:29.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.399" endtime="20201110 08:34:29.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.027" endtime="20201110 08:34:29.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.022" endtime="20201110 08:34:29.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:29.418" level="INFO">${RESULT} = [{'time': 0.042055514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.863900000000147e-05, 'source_diff': 8.863900000000147e-05}, {'time': 0.042150472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.409" endtime="20201110 08:34:29.418"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:29.448" level="INFO">${ACCURACY} = {'time': [0.042055514, 0.042150472, 0.042241486, 0.042338486, 0.0424355, 0.042532514, 0.042630514, 0.042726542, 0.042824542, 0.042915556, 0.043013569, 0.043105583, 0.043200597, 0.043296597, 0.04338961...</msg>
<status status="PASS" starttime="20201110 08:34:29.420" endtime="20201110 08:34:29.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.459" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:34:29.457" endtime="20201110 08:34:29.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.465" level="INFO">VALUE: [8.863900000000147e-05, 8.886100000000258e-05, 8.84999999999983e-05, 8.873599999999898e-05, 8.880600000000377e-05, 8.837500000000165e-05, 8.861100000000233e-05, 8.813900000000097e-05, 8.824999999999805e-05, 8.81250000000014e-05, 8.81250000000014e-05, 8.851400000000481e-05, 8.888900000000172e-05, 8.843000000000045e-05, 8.887500000000215e-05, 8.854199999999701e-05, 8.874999999999855e-05, 8.795799999999909e-05, 8.809799999999479e-05, 8.848599999999873e-05, 8.837500000000165e-05, 8.836200000000155e-05, 8.797299999999814e-05, 8.837500000000165e-05, 8.848600000000567e-05, 8.891699999999392e-05, 8.847199999999916e-05, 8.826399999999762e-05, 8.837500000000165e-05, 8.861100000000233e-05, 8.81250000000014e-05, 8.84999999999983e-05, 8.825000000000499e-05, 8.886100000000258e-05, 8.847199999999916e-05, 8.851400000000481e-05, 8.875000000000549e-05, 8.877699999999822e-05, 8.81250000000014e-05, 8.819499999999925e-05, 8.84999999999983e-05, 8.873599999999898e-05, 8.854199999999701e-05, 8.79999999999978e-05, 8.862499999999496e-05, 8.886099999999564e-05, 8.85129999999984e-05, 8.887500000000215e-05, 8.836100000000208e-05, 8.873599999999898e-05]</msg>
<status status="PASS" starttime="20201110 08:34:29.462" endtime="20201110 08:34:29.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.450" endtime="20201110 08:34:29.468"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.474" endtime="20201110 08:34:29.477"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:29.482" endtime="20201110 08:34:29.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.478" endtime="20201110 08:34:29.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.470" endtime="20201110 08:34:29.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.962" endtime="20201110 08:34:29.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:28.960" endtime="20201110 08:34:29.508"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.531" endtime="20201110 08:34:29.553"></status>
</kw>
<msg timestamp="20201110 08:34:29.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.527" endtime="20201110 08:34:29.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:29.556" endtime="20201110 08:34:29.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.562" endtime="20201110 08:34:29.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.520" endtime="20201110 08:34:29.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.515" endtime="20201110 08:34:29.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.586" endtime="20201110 08:34:29.945"></status>
</kw>
<msg timestamp="20201110 08:34:29.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041726139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041815833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.582" endtime="20201110 08:34:29.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:29.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041726139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041815833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:29.955" endtime="20201110 08:34:29.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:29.976" endtime="20201110 08:34:29.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.575" endtime="20201110 08:34:29.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.570" endtime="20201110 08:34:29.987"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.000" level="INFO">${RESULT} = [{'time': 0.041815833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.969399999999433e-05, 'source_diff': 8.969399999999433e-05}, {'time': 0.041910847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:29.989" endtime="20201110 08:34:30.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.033" level="INFO">${ACCURACY} = {'time': [0.041815833, 0.041910847, 0.042002875, 0.042095875, 0.042186875, 0.042279889, 0.042373903, 0.042470903, 0.042565972, 0.042658931, 0.042753944, 0.042847944, 0.042946972, 0.043044972, 0.043141...</msg>
<status status="PASS" starttime="20201110 08:34:30.002" endtime="20201110 08:34:30.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.047" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.044" endtime="20201110 08:34:30.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.054" level="INFO">VALUE: [8.969399999999433e-05, 8.89999999999988e-05, 8.987500000000315e-05, 8.937499999999571e-05, 8.898599999999923e-05, 8.937500000000265e-05, 8.974999999999955e-05, 8.923599999999948e-05, 8.930499999999786e-05, 8.912499999999546e-05, 8.89999999999988e-05, 8.923599999999948e-05, 8.923599999999948e-05, 8.96250000000029e-05, 8.924999999999905e-05, 8.986099999999664e-05, 8.974999999999955e-05, 8.961100000000333e-05, 8.950000000000624e-05, 8.922199999999991e-05, 8.91250000000024e-05, 8.912499999999546e-05, 8.930599999999733e-05, 8.959700000000376e-05, 8.959700000000376e-05, 8.951399999999887e-05, 8.990300000000229e-05, 8.94999999999993e-05, 8.91250000000024e-05, 8.962499999999596e-05, 8.950000000000624e-05, 8.961100000000333e-05, 8.987500000000315e-05, 8.937500000000265e-05, 8.89999999999988e-05, 8.89999999999988e-05, 8.912499999999546e-05, 8.938900000000222e-05, 8.923599999999948e-05, 8.897199999999966e-05, 8.911100000000283e-05, 8.895800000000009e-05, 8.948599999999973e-05, 8.973599999999998e-05, 8.948599999999973e-05, 8.96800000000017e-05, 8.937500000000265e-05, 8.986100000000358e-05, 8.94999999999993e-05, 8.902799999999794e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.050" endtime="20201110 08:34:30.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.036" endtime="20201110 08:34:30.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.070" endtime="20201110 08:34:30.074"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.081" endtime="20201110 08:34:30.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.075" endtime="20201110 08:34:30.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.065" endtime="20201110 08:34:30.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.510" endtime="20201110 08:34:30.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:29.509" endtime="20201110 08:34:30.109"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.134" endtime="20201110 08:34:30.156"></status>
</kw>
<msg timestamp="20201110 08:34:30.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.130" endtime="20201110 08:34:30.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.160" endtime="20201110 08:34:30.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.166" endtime="20201110 08:34:30.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.123" endtime="20201110 08:34:30.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.117" endtime="20201110 08:34:30.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.189" endtime="20201110 08:34:30.522"></status>
</kw>
<msg timestamp="20201110 08:34:30.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045832347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045922292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.186" endtime="20201110 08:34:30.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045832347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045922292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.531" endtime="20201110 08:34:30.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.550" endtime="20201110 08:34:30.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.179" endtime="20201110 08:34:30.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.174" endtime="20201110 08:34:30.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:30.571" level="INFO">${RESULT} = [{'time': 0.045922292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.9945000000001e-05, 'source_diff': 8.9945000000001e-05}, {'time': 0.046016319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9...</msg>
<status status="PASS" starttime="20201110 08:34:30.562" endtime="20201110 08:34:30.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:30.601" level="INFO">${ACCURACY} = {'time': [0.045922292, 0.046016319, 0.046109306, 0.046206333, 0.046300333, 0.046393361, 0.046489361, 0.046583361, 0.046683375, 0.046778389, 0.046874403, 0.046966403, 0.047061431, 0.047157444, 0.047257...</msg>
<status status="PASS" starttime="20201110 08:34:30.573" endtime="20201110 08:34:30.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.612" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:34:30.610" endtime="20201110 08:34:30.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.617" level="INFO">VALUE: [8.9945000000001e-05, 9.087499999999721e-05, 9.06120000000038e-05, 9.038900000000322e-05, 9.037499999999671e-05, 9.063900000000347e-05, 9.037499999999671e-05, 9.036099999999714e-05, 9.025000000000005e-05, 9.074999999999361e-05, 9.025000000000005e-05, 8.99999999999998e-05, 8.99999999999998e-05, 9.03879999999968e-05, 9.047300000000064e-05, 9.076400000000012e-05, 9.026399999999962e-05, 9.062499999999696e-05, 9.005500000000555e-05, 9.006899999999818e-05, 9.062499999999696e-05, 9.06250000000039e-05, 9.06250000000039e-05, 9.072199999999447e-05, 9.037499999999671e-05, 9.03879999999968e-05, 9.023699999999996e-05, 9.059699999999782e-05, 9.002800000000588e-05, 8.997200000000066e-05, 9.011099999999689e-05, 9.05000000000003e-05, 9.073599999999404e-05, 9.087499999999721e-05, 9.08199999999984e-05, 8.99999999999998e-05, 9.025000000000005e-05, 9.065199999999662e-05, 9.086100000000458e-05, 9.088899999999678e-05, 9.057000000000509e-05, 9.061099999999739e-05, 9.036099999999714e-05, 8.99999999999998e-05, 9.076400000000012e-05, 8.99999999999998e-05, 9.061099999999739e-05, 8.995900000000057e-05, 9.086100000000458e-05, 9.061199999999686e-05]</msg>
<status status="PASS" starttime="20201110 08:34:30.614" endtime="20201110 08:34:30.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.603" endtime="20201110 08:34:30.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.627" endtime="20201110 08:34:30.629"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:30.635" endtime="20201110 08:34:30.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.631" endtime="20201110 08:34:30.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.622" endtime="20201110 08:34:30.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.112" endtime="20201110 08:34:30.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.110" endtime="20201110 08:34:30.661"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.683" endtime="20201110 08:34:30.705"></status>
</kw>
<msg timestamp="20201110 08:34:30.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.680" endtime="20201110 08:34:30.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:30.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:30.709" endtime="20201110 08:34:30.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.715" endtime="20201110 08:34:30.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.673" endtime="20201110 08:34:30.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.667" endtime="20201110 08:34:30.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:30.740" endtime="20201110 08:34:31.072"></status>
</kw>
<msg timestamp="20201110 08:34:31.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041785611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041877194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:30.736" endtime="20201110 08:34:31.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041785611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041877194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.081" endtime="20201110 08:34:31.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.100" endtime="20201110 08:34:31.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.729" endtime="20201110 08:34:31.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.723" endtime="20201110 08:34:31.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.119" level="INFO">${RESULT} = [{'time': 0.041877194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.158299999999925e-05, 'source_diff': 9.158299999999925e-05}, {'time': 0.041972194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.110" endtime="20201110 08:34:31.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.149" level="INFO">${ACCURACY} = {'time': [0.041877194, 0.041972194, 0.042072208, 0.042169208, 0.042263222, 0.042363222, 0.042461278, 0.04255825, 0.042656278, 0.042756278, 0.042857292, 0.042957306, 0.043056319, 0.043153333, 0.0432503...</msg>
<status status="PASS" starttime="20201110 08:34:31.121" endtime="20201110 08:34:31.150"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.160" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.158" endtime="20201110 08:34:31.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.166" level="INFO">VALUE: [9.158299999999925e-05, 9.10000000000008e-05, 9.137499999999771e-05, 9.141599999999694e-05, 9.16250000000049e-05, 9.169399999999633e-05, 9.166699999999667e-05, 9.175000000000155e-05, 9.101400000000037e-05, 9.10000000000008e-05, 9.175000000000155e-05, 9.159799999999829e-05, 9.137500000000465e-05, 9.16250000000049e-05, 9.148600000000173e-05, 9.125000000000105e-05, 9.112499999999746e-05, 9.108299999999875e-05, 9.175000000000155e-05, 9.136099999999814e-05, 9.123600000000148e-05, 9.136099999999814e-05, 9.147199999999522e-05, 9.111099999999789e-05, 9.188899999999778e-05, 9.175000000000155e-05, 9.16670000000036e-05, 9.111100000000483e-05, 9.141699999999642e-05, 9.113899999999703e-05, 9.186099999999864e-05, 9.109700000000526e-05, 9.188899999999778e-05, 9.120900000000182e-05, 9.15000000000013e-05, 9.117999999999626e-05, 9.163799999999805e-05, 9.123599999999454e-05, 9.136099999999814e-05, 9.184699999999907e-05, 9.126400000000062e-05, 9.115300000000354e-05, 9.098600000000123e-05, 9.148600000000173e-05, 9.111099999999789e-05, 9.094499999999506e-05, 9.175000000000155e-05, 9.186099999999864e-05, 9.16250000000049e-05, 9.162499999999796e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.162" endtime="20201110 08:34:31.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.151" endtime="20201110 08:34:31.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.175" endtime="20201110 08:34:31.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.183" endtime="20201110 08:34:31.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.179" endtime="20201110 08:34:31.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.170" endtime="20201110 08:34:31.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.663" endtime="20201110 08:34:31.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:30.662" endtime="20201110 08:34:31.209"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.234" endtime="20201110 08:34:31.256"></status>
</kw>
<msg timestamp="20201110 08:34:31.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.231" endtime="20201110 08:34:31.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.259" endtime="20201110 08:34:31.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.266" endtime="20201110 08:34:31.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.223" endtime="20201110 08:34:31.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.215" endtime="20201110 08:34:31.272"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.289" endtime="20201110 08:34:31.619"></status>
</kw>
<msg timestamp="20201110 08:34:31.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044569556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044662431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.286" endtime="20201110 08:34:31.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044569556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044662431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.629" endtime="20201110 08:34:31.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.647" endtime="20201110 08:34:31.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.278" endtime="20201110 08:34:31.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.274" endtime="20201110 08:34:31.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:31.666" level="INFO">${RESULT} = [{'time': 0.044662431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.287499999999921e-05, 'source_diff': 9.287499999999921e-05}, {'time': 0.044761431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:31.657" endtime="20201110 08:34:31.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:31.697" level="INFO">${ACCURACY} = {'time': [0.044662431, 0.044761431, 0.044857472, 0.044954458, 0.045054472, 0.045150486, 0.0452465, 0.045341514, 0.045438514, 0.045533528, 0.045629528, 0.045730542, 0.045829556, 0.045930583, 0.04602958...</msg>
<status status="PASS" starttime="20201110 08:34:31.668" endtime="20201110 08:34:31.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.707" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:34:31.705" endtime="20201110 08:34:31.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.713" level="INFO">VALUE: [9.287499999999921e-05, 9.268099999999724e-05, 9.201400000000137e-05, 9.248600000000273e-05, 9.212499999999846e-05, 9.262499999999896e-05, 9.21250000000054e-05, 9.213899999999803e-05, 9.248600000000273e-05, 9.237499999999871e-05, 9.198600000000223e-05, 9.274999999999561e-05, 9.225000000000205e-05, 9.236099999999914e-05, 9.223599999999554e-05, 9.275000000000255e-05, 9.251399999999493e-05, 9.291699999999792e-05, 9.223600000000248e-05, 9.211099999999889e-05, 9.225000000000205e-05, 9.286099999999964e-05, 9.20000000000018e-05, 9.198600000000223e-05, 9.195800000000309e-05, 9.25000000000023e-05, 9.281900000000093e-05, 9.209699999999932e-05, 9.20000000000018e-05, 9.199999999999486e-05, 9.275000000000255e-05, 9.247199999999622e-05, 9.273600000000298e-05, 9.262499999999896e-05, 9.262499999999896e-05, 9.20130000000019e-05, 9.236199999999861e-05, 9.245799999999665e-05, 9.213900000000497e-05, 9.212499999999846e-05, 9.197199999999572e-05, 9.21250000000054e-05, 9.206900000000018e-05, 9.25279999999945e-05, 9.286099999999964e-05, 9.262499999999896e-05, 9.238899999999828e-05, 9.25000000000023e-05, 9.286099999999964e-05, 9.273600000000298e-05]</msg>
<status status="PASS" starttime="20201110 08:34:31.710" endtime="20201110 08:34:31.714"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.698" endtime="20201110 08:34:31.716"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.722" endtime="20201110 08:34:31.725"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:31.731" endtime="20201110 08:34:31.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.726" endtime="20201110 08:34:31.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.718" endtime="20201110 08:34:31.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.211" endtime="20201110 08:34:31.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.210" endtime="20201110 08:34:31.757"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.779" endtime="20201110 08:34:31.802"></status>
</kw>
<msg timestamp="20201110 08:34:31.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.776" endtime="20201110 08:34:31.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:31.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:31.805" endtime="20201110 08:34:31.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.811" endtime="20201110 08:34:31.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.769" endtime="20201110 08:34:31.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.763" endtime="20201110 08:34:31.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:31.835" endtime="20201110 08:34:32.165"></status>
</kw>
<msg timestamp="20201110 08:34:32.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042037861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:31.831" endtime="20201110 08:34:32.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042037861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042131486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.175" endtime="20201110 08:34:32.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.193" endtime="20201110 08:34:32.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.824" endtime="20201110 08:34:32.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.819" endtime="20201110 08:34:32.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.212" level="INFO">${RESULT} = [{'time': 0.042131486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.362499999999996e-05, 'source_diff': 9.362499999999996e-05}, {'time': 0.042228486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.203" endtime="20201110 08:34:32.212"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.242" level="INFO">${ACCURACY} = {'time': [0.042131486, 0.042228486, 0.042329472, 0.0424285, 0.0425315, 0.042632514, 0.042731528, 0.042834542, 0.042935556, 0.043033556, 0.043134569, 0.043236597, 0.043336583, 0.043436653, 0.043532625,...</msg>
<status status="PASS" starttime="20201110 08:34:32.214" endtime="20201110 08:34:32.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.253" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.251" endtime="20201110 08:34:32.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.259" level="INFO">VALUE: [9.362499999999996e-05, 9.337499999999971e-05, 9.334700000000057e-05, 9.337499999999971e-05, 9.374999999999661e-05, 9.387500000000021e-05, 9.312499999999946e-05, 9.375000000000355e-05, 9.325000000000305e-05, 9.308400000000022e-05, 9.34859999999968e-05, 9.351400000000287e-05, 9.367999999999876e-05, 9.355600000000158e-05, 9.326399999999568e-05, 9.362499999999996e-05, 9.386100000000064e-05, 9.361100000000039e-05, 9.38200000000014e-05, 9.374999999999661e-05, 9.349999999999636e-05, 9.359800000000029e-05, 9.325000000000305e-05, 9.325000000000305e-05, 9.324999999999611e-05, 9.309699999999338e-05, 9.358300000000125e-05, 9.376400000000312e-05, 9.381900000000193e-05, 9.373599999999704e-05, 9.373599999999704e-05, 9.298600000000323e-05, 9.386200000000011e-05, 9.387500000000021e-05, 9.312499999999946e-05, 9.375000000000355e-05, 9.35000000000033e-05, 9.376399999999618e-05, 9.362499999999996e-05, 9.373599999999704e-05, 9.301399999999543e-05, 9.299999999999586e-05, 9.348600000000373e-05, 9.30000000000028e-05, 9.323700000000296e-05, 9.298600000000323e-05, 9.35000000000033e-05, 9.30000000000028e-05, 9.361100000000039e-05, 9.35000000000033e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.256" endtime="20201110 08:34:32.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.244" endtime="20201110 08:34:32.262"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.268" endtime="20201110 08:34:32.271"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.277" endtime="20201110 08:34:32.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.272" endtime="20201110 08:34:32.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.263" endtime="20201110 08:34:32.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.759" endtime="20201110 08:34:32.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:31.757" endtime="20201110 08:34:32.302"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.325" endtime="20201110 08:34:32.348"></status>
</kw>
<msg timestamp="20201110 08:34:32.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.322" endtime="20201110 08:34:32.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.351" endtime="20201110 08:34:32.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.358" endtime="20201110 08:34:32.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.315" endtime="20201110 08:34:32.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.309" endtime="20201110 08:34:32.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.383" endtime="20201110 08:34:32.712"></status>
</kw>
<msg timestamp="20201110 08:34:32.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041917597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042012111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.379" endtime="20201110 08:34:32.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041917597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042012111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.722" endtime="20201110 08:34:32.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.740" endtime="20201110 08:34:32.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.372" endtime="20201110 08:34:32.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.367" endtime="20201110 08:34:32.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:32.761" level="INFO">${RESULT} = [{'time': 0.042012111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.451399999999693e-05, 'source_diff': 9.451399999999693e-05}, {'time': 0.042116097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:32.752" endtime="20201110 08:34:32.762"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:32.792" level="INFO">${ACCURACY} = {'time': [0.042012111, 0.042116097, 0.042213111, 0.042312125, 0.042412125, 0.042514139, 0.042613153, 0.042717167, 0.042821194, 0.042925222, 0.043025208, 0.043124208, 0.043224222, 0.043324236, 0.043426...</msg>
<status status="PASS" starttime="20201110 08:34:32.763" endtime="20201110 08:34:32.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.802" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:34:32.800" endtime="20201110 08:34:32.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.808" level="INFO">VALUE: [9.451399999999693e-05, 9.437500000000071e-05, 9.423599999999754e-05, 9.424999999999711e-05, 9.436100000000114e-05, 9.474999999999761e-05, 9.40000000000038e-05, 9.449999999999736e-05, 9.463800000000105e-05, 9.474999999999761e-05, 9.425000000000405e-05, 9.424999999999711e-05, 9.424999999999711e-05, 9.425000000000405e-05, 9.447199999999822e-05, 9.423599999999754e-05, 9.4333000000002e-05, 9.461100000000139e-05, 9.462500000000096e-05, 9.427699999999678e-05, 9.487500000000121e-05, 9.462500000000096e-05, 9.487499999999427e-05, 9.438900000000028e-05, 9.462500000000096e-05, 9.425000000000405e-05, 9.48200000000024e-05, 9.427800000000319e-05, 9.411100000000089e-05, 9.425000000000405e-05, 9.423599999999754e-05, 9.412500000000046e-05, 9.412499999999352e-05, 9.406899999999524e-05, 9.436100000000114e-05, 9.425000000000405e-05, 9.487500000000121e-05, 9.473599999999804e-05, 9.449999999999736e-05, 9.398600000000423e-05, 9.436100000000114e-05, 9.441599999999994e-05, 9.398600000000423e-05, 9.406900000000218e-05, 9.487500000000121e-05, 9.404199999999557e-05, 9.486100000000164e-05, 9.461100000000139e-05, 9.402800000000294e-05, 9.429200000000276e-05]</msg>
<status status="PASS" starttime="20201110 08:34:32.805" endtime="20201110 08:34:32.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.793" endtime="20201110 08:34:32.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.818" endtime="20201110 08:34:32.820"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:32.826" endtime="20201110 08:34:32.847"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.822" endtime="20201110 08:34:32.849"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.813" endtime="20201110 08:34:32.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.304" endtime="20201110 08:34:32.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.303" endtime="20201110 08:34:32.852"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.874" endtime="20201110 08:34:32.896"></status>
</kw>
<msg timestamp="20201110 08:34:32.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.871" endtime="20201110 08:34:32.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:32.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:32.899" endtime="20201110 08:34:32.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.906" endtime="20201110 08:34:32.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.864" endtime="20201110 08:34:32.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.858" endtime="20201110 08:34:32.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:32.929" endtime="20201110 08:34:33.261"></status>
</kw>
<msg timestamp="20201110 08:34:33.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041730375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041825417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:32.926" endtime="20201110 08:34:33.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041730375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041825417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.270" endtime="20201110 08:34:33.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.289" endtime="20201110 08:34:33.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.919" endtime="20201110 08:34:33.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.914" endtime="20201110 08:34:33.297"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.308" level="INFO">${RESULT} = [{'time': 0.041825417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.504199999999657e-05, 'source_diff': 9.504199999999657e-05}, {'time': 0.041930431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.299" endtime="20201110 08:34:33.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.338" level="INFO">${ACCURACY} = {'time': [0.041825417, 0.041930431, 0.042030458, 0.042133444, 0.042232458, 0.042330514, 0.042429486, 0.0425305, 0.0426295, 0.042730528, 0.042832542, 0.042931569, 0.043031542, 0.043131639, 0.043234583,...</msg>
<status status="PASS" starttime="20201110 08:34:33.310" endtime="20201110 08:34:33.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.349" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.347" endtime="20201110 08:34:33.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.355" level="INFO">VALUE: [9.504199999999657e-05, 9.522299999999845e-05, 9.588900000000178e-05, 9.536100000000214e-05, 9.549999999999836e-05, 9.522199999999897e-05, 9.58330000000035e-05, 9.537500000000171e-05, 9.536100000000214e-05, 9.522199999999897e-05, 9.512500000000146e-05, 9.527700000000472e-05, 9.49729999999982e-05, 9.505599999999614e-05, 9.58330000000035e-05, 9.50000000000048e-05, 9.537499999999477e-05, 9.573599999999904e-05, 9.587500000000221e-05, 9.499999999999786e-05, 9.513900000000103e-05, 9.5027999999997e-05, 9.537500000000171e-05, 9.569400000000033e-05, 9.587500000000221e-05, 9.577799999999775e-05, 9.574999999999861e-05, 9.494399999999958e-05, 9.513900000000103e-05, 9.574999999999861e-05, 9.509700000000232e-05, 9.545799999999965e-05, 9.513899999999409e-05, 9.498600000000523e-05, 9.549999999999836e-05, 9.574999999999861e-05, 9.499999999999786e-05, 9.547199999999922e-05, 9.574999999999861e-05, 9.531899999999649e-05, 9.562500000000196e-05, 9.511099999999495e-05, 9.549999999999836e-05, 9.524999999999811e-05, 9.549999999999836e-05, 9.574999999999861e-05, 9.545899999999913e-05, 9.562500000000196e-05, 9.562499999999502e-05, 9.541700000000042e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.351" endtime="20201110 08:34:33.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.340" endtime="20201110 08:34:33.358"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.364" endtime="20201110 08:34:33.367"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.372" endtime="20201110 08:34:33.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.368" endtime="20201110 08:34:33.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.360" endtime="20201110 08:34:33.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.854" endtime="20201110 08:34:33.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:32.852" endtime="20201110 08:34:33.399"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.422" endtime="20201110 08:34:33.445"></status>
</kw>
<msg timestamp="20201110 08:34:33.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.419" endtime="20201110 08:34:33.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.448" endtime="20201110 08:34:33.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.454" endtime="20201110 08:34:33.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.411" endtime="20201110 08:34:33.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.405" endtime="20201110 08:34:33.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.477" endtime="20201110 08:34:33.806"></status>
</kw>
<msg timestamp="20201110 08:34:33.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043793861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043890444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.474" endtime="20201110 08:34:33.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043793861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043890444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:33.815" endtime="20201110 08:34:33.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.834" endtime="20201110 08:34:33.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.467" endtime="20201110 08:34:33.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.462" endtime="20201110 08:34:33.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:33.853" level="INFO">${RESULT} = [{'time': 0.043890444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.658299999999731e-05, 'source_diff': 9.658299999999731e-05}, {'time': 0.043992444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:33.844" endtime="20201110 08:34:33.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:33.883" level="INFO">${ACCURACY} = {'time': [0.043890444, 0.043992444, 0.044093458, 0.044195472, 0.044301542, 0.0444065, 0.044511514, 0.044613528, 0.044715528, 0.044817542, 0.044921556, 0.045026597, 0.045132569, 0.045231611, 0.04533159...</msg>
<status status="PASS" starttime="20201110 08:34:33.855" endtime="20201110 08:34:33.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.894" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:34:33.892" endtime="20201110 08:34:33.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.900" level="INFO">VALUE: [9.658299999999731e-05, 9.673600000000004e-05, 9.599999999999886e-05, 9.644400000000108e-05, 9.693100000000149e-05, 9.609700000000332e-05, 9.662500000000296e-05, 9.687499999999627e-05, 9.643099999999405e-05, 9.687500000000321e-05, 9.599999999999886e-05, 9.626399999999868e-05, 9.611099999999595e-05, 9.651399999999893e-05, 9.637500000000271e-05, 9.66530000000021e-05, 9.674999999999961e-05, 9.691700000000192e-05, 9.679200000000526e-05, 9.637500000000271e-05, 9.637500000000271e-05, 9.611099999999595e-05, 9.626399999999868e-05, 9.651400000000587e-05, 9.651399999999893e-05, 9.677799999999875e-05, 9.598600000000623e-05, 9.601399999999843e-05, 9.686100000000364e-05, 9.673600000000004e-05, 9.60000000000058e-05, 9.659699999999688e-05, 9.649999999999936e-05, 9.640299999999491e-05, 9.674999999999961e-05, 9.640299999999491e-05, 9.623599999999954e-05, 9.661100000000339e-05, 9.637500000000271e-05, 9.626399999999868e-05, 9.651399999999893e-05, 9.611099999999595e-05, 9.68609999999967e-05, 9.605600000000408e-05, 9.677699999999928e-05, 9.687500000000321e-05, 9.615199999999519e-05, 9.637499999999577e-05, 9.638899999999534e-05, 9.641700000000142e-05]</msg>
<status status="PASS" starttime="20201110 08:34:33.897" endtime="20201110 08:34:33.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.885" endtime="20201110 08:34:33.903"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.909" endtime="20201110 08:34:33.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:33.918" endtime="20201110 08:34:33.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.913" endtime="20201110 08:34:33.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.905" endtime="20201110 08:34:33.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.401" endtime="20201110 08:34:33.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.399" endtime="20201110 08:34:33.943"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.966" endtime="20201110 08:34:33.988"></status>
</kw>
<msg timestamp="20201110 08:34:33.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.963" endtime="20201110 08:34:33.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:33.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:33.992" endtime="20201110 08:34:33.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:33.998" endtime="20201110 08:34:34.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.955" endtime="20201110 08:34:34.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.950" endtime="20201110 08:34:34.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.021" endtime="20201110 08:34:34.354"></status>
</kw>
<msg timestamp="20201110 08:34:34.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041789583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.018" endtime="20201110 08:34:34.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041789583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041887167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.363" endtime="20201110 08:34:34.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.382" endtime="20201110 08:34:34.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.011" endtime="20201110 08:34:34.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.006" endtime="20201110 08:34:34.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.401" level="INFO">${RESULT} = [{'time': 0.041887167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.758400000000472e-05, 'source_diff': 9.758400000000472e-05}, {'time': 0.041991181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.392" endtime="20201110 08:34:34.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.431" level="INFO">${ACCURACY} = {'time': [0.041887167, 0.041991181, 0.042094208, 0.042196208, 0.042302236, 0.042407236, 0.042514278, 0.042617264, 0.042719264, 0.042823292, 0.042929292, 0.043029319, 0.043136306, 0.043240333, 0.043342...</msg>
<status status="PASS" starttime="20201110 08:34:34.403" endtime="20201110 08:34:34.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.443" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.441" endtime="20201110 08:34:34.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.449" level="INFO">VALUE: [9.758400000000472e-05, 9.712500000000346e-05, 9.750000000000036e-05, 9.699999999999986e-05, 9.695800000000115e-05, 9.712500000000346e-05, 9.727799999999925e-05, 9.787500000000421e-05, 9.775000000000061e-05, 9.706999999999771e-05, 9.712500000000346e-05, 9.73880000000038e-05, 9.725000000000011e-05, 9.701399999999943e-05, 9.731999999999796e-05, 9.775000000000061e-05, 9.716599999999576e-05, 9.76530000000031e-05, 9.762500000000396e-05, 9.725000000000011e-05, 9.726399999999968e-05, 9.74860000000008e-05, 9.786100000000464e-05, 9.750000000000036e-05, 9.712499999999652e-05, 9.750000000000036e-05, 9.750000000000036e-05, 9.773600000000104e-05, 9.725000000000011e-05, 9.788900000000378e-05, 9.762499999999702e-05, 9.723600000000054e-05, 9.69860000000003e-05, 9.69860000000003e-05, 9.775000000000061e-05, 9.737500000000371e-05, 9.737500000000371e-05, 9.773600000000104e-05, 9.71530000000026e-05, 9.74860000000008e-05, 9.712500000000346e-05, 9.725000000000011e-05, 9.701400000000637e-05, 9.734700000000457e-05, 9.777700000000028e-05, 9.750000000000036e-05, 9.723600000000054e-05, 9.775000000000061e-05, 9.775000000000061e-05, 9.761100000000439e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.445" endtime="20201110 08:34:34.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.433" endtime="20201110 08:34:34.452"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.459" endtime="20201110 08:34:34.461"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:34.467" endtime="20201110 08:34:34.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.463" endtime="20201110 08:34:34.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.454" endtime="20201110 08:34:34.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.945" endtime="20201110 08:34:34.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:33.944" endtime="20201110 08:34:34.493"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.516" endtime="20201110 08:34:34.539"></status>
</kw>
<msg timestamp="20201110 08:34:34.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.512" endtime="20201110 08:34:34.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:34.542" endtime="20201110 08:34:34.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.549" endtime="20201110 08:34:34.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.505" endtime="20201110 08:34:34.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.499" endtime="20201110 08:34:34.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.572" endtime="20201110 08:34:34.903"></status>
</kw>
<msg timestamp="20201110 08:34:34.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.569" endtime="20201110 08:34:34.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042008486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:34.912" endtime="20201110 08:34:34.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:34.931" endtime="20201110 08:34:34.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.562" endtime="20201110 08:34:34.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.557" endtime="20201110 08:34:34.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:34.952" level="INFO">${RESULT} = [{'time': 0.042106903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.841700000000342e-05, 'source_diff': 9.841700000000342e-05}, {'time': 0.042208819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:34.943" endtime="20201110 08:34:34.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:34.982" level="INFO">${ACCURACY} = {'time': [0.042106903, 0.042208819, 0.042312847, 0.042413861, 0.042520861, 0.042622875, 0.042725889, 0.042833889, 0.042941903, 0.043043931, 0.043147931, 0.043251958, 0.043355944, 0.043463958, 0.043563...</msg>
<status status="PASS" starttime="20201110 08:34:34.954" endtime="20201110 08:34:34.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.993" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:34:34.991" endtime="20201110 08:34:34.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:34.999" level="INFO">VALUE: [9.841700000000342e-05, 9.811100000000489e-05, 9.837499999999777e-05, 9.794399999999565e-05, 9.812499999999752e-05, 9.837499999999777e-05, 9.825000000000111e-05, 9.859699999999888e-05, 9.849999999999443e-05, 9.84730000000017e-05, 9.812499999999752e-05, 9.851400000000093e-05, 9.79860000000013e-05, 9.87359999999951e-05, 9.800000000000086e-05, 9.800000000000086e-05, 9.875000000000161e-05, 9.812499999999752e-05, 9.797199999999479e-05, 9.811099999999795e-05, 9.801400000000043e-05, 9.873700000000152e-05, 9.825000000000111e-05, 9.862499999999802e-05, 9.862499999999802e-05, 9.88609999999987e-05, 9.873600000000204e-05, 9.798599999999436e-05, 9.84860000000018e-05, 9.811100000000489e-05, 9.88609999999987e-05, 9.837500000000471e-05, 9.876300000000171e-05, 9.862500000000496e-05, 9.83609999999982e-05, 9.800000000000086e-05, 9.838899999999734e-05, 9.827800000000025e-05, 9.850000000000136e-05, 9.827800000000025e-05, 9.811099999999795e-05, 9.830499999999992e-05, 9.875000000000161e-05, 9.812499999999752e-05, 9.825000000000111e-05, 9.837499999999777e-05, 9.850000000000136e-05, 9.800000000000086e-05, 9.822200000000197e-05, 9.861099999999845e-05]</msg>
<status status="PASS" starttime="20201110 08:34:34.995" endtime="20201110 08:34:35.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.984" endtime="20201110 08:34:35.002"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.008" endtime="20201110 08:34:35.011"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.017" endtime="20201110 08:34:35.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.012" endtime="20201110 08:34:35.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.004" endtime="20201110 08:34:35.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.495" endtime="20201110 08:34:35.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:34.494" endtime="20201110 08:34:35.042"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.065" endtime="20201110 08:34:35.087"></status>
</kw>
<msg timestamp="20201110 08:34:35.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.062" endtime="20201110 08:34:35.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.091" endtime="20201110 08:34:35.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.097" endtime="20201110 08:34:35.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.055" endtime="20201110 08:34:35.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.049" endtime="20201110 08:34:35.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.120" endtime="20201110 08:34:35.452"></status>
</kw>
<msg timestamp="20201110 08:34:35.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042075972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042175083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.117" endtime="20201110 08:34:35.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042075972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042175083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:35.462" endtime="20201110 08:34:35.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.481" endtime="20201110 08:34:35.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.110" endtime="20201110 08:34:35.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.105" endtime="20201110 08:34:35.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:35.501" level="INFO">${RESULT} = [{'time': 0.042175083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.911099999999895e-05, 'source_diff': 9.911099999999895e-05}, {'time': 0.042280097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:35.492" endtime="20201110 08:34:35.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:35.531" level="INFO">${ACCURACY} = {'time': [0.042175083, 0.042280097, 0.042382181, 0.042491125, 0.042593153, 0.042700167, 0.042806153, 0.042913167, 0.043022181, 0.043130208, 0.043236208, 0.043342236, 0.043448236, 0.043556236, 0.043662...</msg>
<status status="PASS" starttime="20201110 08:34:35.503" endtime="20201110 08:34:35.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.542" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:34:35.540" endtime="20201110 08:34:35.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.547" level="INFO">VALUE: [9.911099999999895e-05, 9.923600000000254e-05, 9.969499999999687e-05, 9.922199999999604e-05, 9.975000000000261e-05, 9.963899999999859e-05, 9.983400000000003e-05, 9.94860000000028e-05, 9.987499999999927e-05, 9.94860000000028e-05, 9.924999999999518e-05, 9.976400000000218e-05, 9.94860000000028e-05, 9.898599999999536e-05, 9.987499999999927e-05, 9.909700000000632e-05, 9.963899999999859e-05, 9.913899999999809e-05, 9.911099999999895e-05, 9.933300000000006e-05, 9.894399999999665e-05, 9.950000000000236e-05, 9.979200000000132e-05, 9.906900000000024e-05, 9.930500000000092e-05, 9.963900000000553e-05, 9.901400000000143e-05, 9.926400000000168e-05, 9.925000000000211e-05, 9.936100000000614e-05, 9.961199999999892e-05, 9.973600000000304e-05, 9.911099999999895e-05, 9.962499999999902e-05, 9.922200000000297e-05, 9.915299999999766e-05, 9.955600000000064e-05, 9.89860000000023e-05, 9.983400000000003e-05, 9.89860000000023e-05, 9.963800000000606e-05, 9.98609999999997e-05, 9.987499999999927e-05, 9.974999999999568e-05, 9.924999999999518e-05, 9.937499999999877e-05, 9.89860000000023e-05, 9.973600000000304e-05, 9.923600000000254e-05, 9.926400000000168e-05]</msg>
<status status="PASS" starttime="20201110 08:34:35.544" endtime="20201110 08:34:35.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.533" endtime="20201110 08:34:35.555"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.562" endtime="20201110 08:34:35.564"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:35.570" endtime="20201110 08:34:35.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.566" endtime="20201110 08:34:35.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.557" endtime="20201110 08:34:35.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.044" endtime="20201110 08:34:35.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.043" endtime="20201110 08:34:35.596"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.618" endtime="20201110 08:34:35.639"></status>
</kw>
<msg timestamp="20201110 08:34:35.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.615" endtime="20201110 08:34:35.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:35.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:35.641" endtime="20201110 08:34:35.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.644" endtime="20201110 08:34:35.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.608" endtime="20201110 08:34:35.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.602" endtime="20201110 08:34:35.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:35.655" endtime="20201110 08:34:35.975"></status>
</kw>
<msg timestamp="20201110 08:34:35.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041801972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:35.653" endtime="20201110 08:34:35.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041801972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:35.984" endtime="20201110 08:34:36.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.003" endtime="20201110 08:34:36.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.650" endtime="20201110 08:34:36.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.648" endtime="20201110 08:34:36.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.021" level="INFO">${RESULT} = [{'time': 0.041902, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000100028000000002, 'source_diff': 0.000100028000000002}, {'time': 0.042008014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0....</msg>
<status status="PASS" starttime="20201110 08:34:36.013" endtime="20201110 08:34:36.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.051" level="INFO">${ACCURACY} = {'time': [0.041902, 0.042008014, 0.042114042, 0.042222056, 0.042327069, 0.042437139, 0.042540069, 0.042644083, 0.042747111, 0.042851111, 0.042958125, 0.043065139, 0.043173139, 0.043282167, 0.043392181...</msg>
<status status="PASS" starttime="20201110 08:34:36.023" endtime="20201110 08:34:36.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.062" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.060" endtime="20201110 08:34:36.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.068" level="INFO">VALUE: [0.000100028000000002, 0.0001008610000000007, 0.00010026399999999575, 0.00010013899999999909, 0.00010001300000000296, 0.0001003060000000014, 0.00010020799999999747, 0.00010011099999999995, 0.00010047199999999729, 0.00010074999999999668, 0.00010074999999999668, 0.0001008610000000007, 0.00010011099999999995, 0.00010025000000000311, 0.00010062500000000002, 0.00010015299999999866, 0.00010025000000000311, 0.00010038899999999934, 0.0001001939999999979, 0.00010011099999999995, 0.00010062500000000002, 0.00010012499999999952, 0.00010062500000000002, 0.00010065299999999916, 0.00010000000000000286, 0.0001008610000000007, 0.00010051300000000346, 0.00010073600000000404, 0.00010049999999999643, 9.99860000000033e-05, 0.00010037499999999977, 0.0001007359999999971, 9.999999999999593e-05, 0.00010036099999999326, 0.0001005410000000026, 0.00010077700000000328, 0.00010009799999999985, 0.00010073600000000404, 0.00010074999999999668, 0.00010058299999999437, 0.00010077800000000275, 0.00010059700000000088, 0.00010016699999999823, 0.000100513999999996, 0.00010051400000000293, 0.000100028000000002, 9.998599999999636e-05, 0.00010090299999999941, 0.00010086200000000017, 0.00010008300000000081]</msg>
<status status="PASS" starttime="20201110 08:34:36.065" endtime="20201110 08:34:36.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.053" endtime="20201110 08:34:36.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.077" endtime="20201110 08:34:36.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.086" endtime="20201110 08:34:36.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.081" endtime="20201110 08:34:36.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.072" endtime="20201110 08:34:36.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.598" endtime="20201110 08:34:36.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:35.596" endtime="20201110 08:34:36.111"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.134" endtime="20201110 08:34:36.158"></status>
</kw>
<msg timestamp="20201110 08:34:36.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.131" endtime="20201110 08:34:36.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.161" endtime="20201110 08:34:36.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.167" endtime="20201110 08:34:36.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.124" endtime="20201110 08:34:36.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.118" endtime="20201110 08:34:36.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.191" endtime="20201110 08:34:36.524"></status>
</kw>
<msg timestamp="20201110 08:34:36.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041940042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042041431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.188" endtime="20201110 08:34:36.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041940042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042041431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.533" endtime="20201110 08:34:36.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.551" endtime="20201110 08:34:36.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.180" endtime="20201110 08:34:36.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.176" endtime="20201110 08:34:36.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:36.570" level="INFO">${RESULT} = [{'time': 0.042041431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010138900000000034, 'source_diff': 0.00010138900000000034}, {'time': 0.042151444, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:36.561" endtime="20201110 08:34:36.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:36.600" level="INFO">${ACCURACY} = {'time': [0.042041431, 0.042151444, 0.042262444, 0.042369458, 0.042473472, 0.0425815, 0.0426885, 0.042794514, 0.042904514, 0.043010528, 0.043114556, 0.043223556, 0.043332583, 0.043441583, 0.043549583,...</msg>
<status status="PASS" starttime="20201110 08:34:36.572" endtime="20201110 08:34:36.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.610" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:34:36.608" endtime="20201110 08:34:36.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.616" level="INFO">VALUE: [0.00010138900000000034, 0.00010161100000000145, 0.0001013610000000012, 0.00010099999999999693, 0.00010186099999999476, 0.00010147199999999829, 0.0001012359999999976, 0.00010099999999999693, 0.0001013610000000012, 0.00010112500000000052, 0.00010133400000000153, 0.00010187500000000127, 0.00010101400000000343, 0.00010187500000000127, 0.00010147200000000522, 0.00010183300000000256, 0.00010125000000000411, 0.00010137500000000077, 0.00010162500000000102, 0.00010100000000000386, 0.00010186099999999476, 0.00010161100000000145, 0.00010100000000000386, 0.00010149999999999743, 0.00010187500000000127, 0.00010187500000000127, 0.00010162500000000102, 0.00010104200000000257, 0.0001010139999999965, 0.00010188900000000084, 0.0001013610000000012, 0.00010137500000000077, 0.00010122300000000445, 0.00010115299999999966, 0.0001013610000000012, 0.00010097199999999779, 0.0001018610000000017, 0.00010174999999999768, 0.0001019160000000005, 0.00010172199999999854, 0.00010149999999999743, 0.00010172299999999801, 0.00010106900000000224, 0.00010100000000000386, 0.00010163900000000059, 0.00010112500000000052, 0.00010187500000000127, 0.00010175000000000461, 0.00010175000000000461, 0.00010138900000000034]</msg>
<status status="PASS" starttime="20201110 08:34:36.613" endtime="20201110 08:34:36.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.601" endtime="20201110 08:34:36.619"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.625" endtime="20201110 08:34:36.628"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:36.633" endtime="20201110 08:34:36.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.629" endtime="20201110 08:34:36.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.621" endtime="20201110 08:34:36.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.113" endtime="20201110 08:34:36.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.112" endtime="20201110 08:34:36.659"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.682" endtime="20201110 08:34:36.705"></status>
</kw>
<msg timestamp="20201110 08:34:36.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.679" endtime="20201110 08:34:36.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:36.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:36.708" endtime="20201110 08:34:36.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.715" endtime="20201110 08:34:36.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.671" endtime="20201110 08:34:36.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.666" endtime="20201110 08:34:36.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:36.738" endtime="20201110 08:34:37.070"></status>
</kw>
<msg timestamp="20201110 08:34:37.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042279736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:36.735" endtime="20201110 08:34:37.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042279736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042382389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.079" endtime="20201110 08:34:37.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.097" endtime="20201110 08:34:37.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.727" endtime="20201110 08:34:37.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.723" endtime="20201110 08:34:37.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.118" level="INFO">${RESULT} = [{'time': 0.042382389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010265300000000116, 'source_diff': 0.00010265300000000116}, {'time': 0.042490403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.109" endtime="20201110 08:34:37.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.148" level="INFO">${ACCURACY} = {'time': [0.042382389, 0.042490403, 0.042595417, 0.042703417, 0.042809444, 0.042919444, 0.043029458, 0.043134472, 0.043243486, 0.043350486, 0.043460514, 0.043568514, 0.043675528, 0.043783542, 0.043891...</msg>
<status status="PASS" starttime="20201110 08:34:37.120" endtime="20201110 08:34:37.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.159" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.157" endtime="20201110 08:34:37.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.164" level="INFO">VALUE: [0.00010265300000000116, 0.00010250000000000536, 0.00010287499999999533, 0.0001028480000000026, 0.00010213800000000162, 0.00010224999999999818, 0.0001022359999999986, 0.00010237500000000177, 0.00010261099999999551, 0.0001027359999999991, 0.00010262500000000202, 0.00010287500000000227, 0.00010287499999999533, 0.00010287500000000227, 0.00010254099999999766, 0.00010222299999999851, 0.0001027359999999991, 0.00010276399999999825, 0.00010248599999999886, 0.00010237500000000177, 0.00010262500000000202, 0.00010287500000000227, 0.00010223600000000554, 0.00010263900000000159, 0.00010237499999999483, 0.00010216700000000023, 0.00010261099999999551, 0.00010262499999999508, 0.00010211099999999501, 0.00010265299999999422, 0.00010287500000000227, 0.00010209700000000238, 0.0001027359999999991, 0.00010213900000000109, 0.00010236099999999526, 0.00010236099999999526, 0.00010261199999999499, 0.0001022359999999986, 0.00010248599999999886, 0.00010200000000000486, 0.000102028000000004, 0.00010229200000000382, 0.0001028610000000027, 0.00010195899999999869, 0.00010272199999999954, 0.0001028610000000027, 0.00010225000000000511, 0.00010262500000000202, 0.00010236099999999526, 0.00010197199999999879]</msg>
<status status="PASS" starttime="20201110 08:34:37.161" endtime="20201110 08:34:37.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.150" endtime="20201110 08:34:37.167"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.173" endtime="20201110 08:34:37.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.182" endtime="20201110 08:34:37.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.177" endtime="20201110 08:34:37.205"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.169" endtime="20201110 08:34:37.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.661" endtime="20201110 08:34:37.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:36.660" endtime="20201110 08:34:37.207"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.230" endtime="20201110 08:34:37.254"></status>
</kw>
<msg timestamp="20201110 08:34:37.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.227" endtime="20201110 08:34:37.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.257" endtime="20201110 08:34:37.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.263" endtime="20201110 08:34:37.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.219" endtime="20201110 08:34:37.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.214" endtime="20201110 08:34:37.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.287" endtime="20201110 08:34:37.618"></status>
</kw>
<msg timestamp="20201110 08:34:37.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041664278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.283" endtime="20201110 08:34:37.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041664278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041767764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.627" endtime="20201110 08:34:37.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.645" endtime="20201110 08:34:37.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.276" endtime="20201110 08:34:37.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.271" endtime="20201110 08:34:37.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:37.664" level="INFO">${RESULT} = [{'time': 0.041767764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010348599999999986, 'source_diff': 0.00010348599999999986}, {'time': 0.041873778, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:37.655" endtime="20201110 08:34:37.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:37.694" level="INFO">${ACCURACY} = {'time': [0.041767764, 0.041873778, 0.041981792, 0.042091819, 0.042202806, 0.042313833, 0.042418847, 0.042530847, 0.042636861, 0.042749875, 0.042858903, 0.042969931, 0.043078917, 0.043187958, 0.043299...</msg>
<status status="PASS" starttime="20201110 08:34:37.666" endtime="20201110 08:34:37.694"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.710" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:34:37.707" endtime="20201110 08:34:37.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.717" level="INFO">VALUE: [0.00010348599999999986, 0.00010312500000000252, 0.00010374999999999968, 0.00010345800000000072, 0.00010336200000000267, 0.00010330500000000492, 0.00010301400000000543, 0.00010373599999999317, 0.00010299999999999893, 0.00010337500000000277, 0.00010297199999999979, 0.00010315300000000166, 0.0001038480000000036, 0.00010365199999999575, 0.00010324999999999918, 0.00010386099999999676, 0.00010374999999999968, 0.00010361099999999651, 0.0001037360000000001, 0.0001038889999999959, 0.00010324999999999918, 0.00010320800000000047, 0.00010322299999999951, 0.00010306999999999678, 0.00010299999999999893, 0.0001038339999999971, 0.00010333299999999712, 0.00010387499999999633, 0.00010349999999999943, 0.00010352799999999857, 0.00010391700000000198, 0.00010348599999999986, 0.00010362499999999608, 0.0001038339999999971, 0.00010311100000000295, 0.00010311200000000242, 0.00010331899999999755, 0.00010309699999999644, 0.00010361099999999651, 0.00010322200000000004, 0.0001032359999999996, 0.0001037360000000001, 0.00010376400000000618, 0.0001030139999999985, 0.00010362499999999608, 0.00010349999999999943, 0.0001037360000000001, 0.00010338900000000234, 0.00010370800000000097, 0.00010363899999999565]</msg>
<status status="PASS" starttime="20201110 08:34:37.713" endtime="20201110 08:34:37.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.696" endtime="20201110 08:34:37.722"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.730" endtime="20201110 08:34:37.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:37.741" endtime="20201110 08:34:37.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.736" endtime="20201110 08:34:37.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.725" endtime="20201110 08:34:37.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.209" endtime="20201110 08:34:37.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.208" endtime="20201110 08:34:37.768"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.791" endtime="20201110 08:34:37.813"></status>
</kw>
<msg timestamp="20201110 08:34:37.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.787" endtime="20201110 08:34:37.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:37.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:37.817" endtime="20201110 08:34:37.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.823" endtime="20201110 08:34:37.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.780" endtime="20201110 08:34:37.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.774" endtime="20201110 08:34:37.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:37.847" endtime="20201110 08:34:38.185"></status>
</kw>
<msg timestamp="20201110 08:34:38.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042847125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042951583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:37.844" endtime="20201110 08:34:38.192"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042847125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042951583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:38.194" endtime="20201110 08:34:38.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.212" endtime="20201110 08:34:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.836" endtime="20201110 08:34:38.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.831" endtime="20201110 08:34:38.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.231" level="INFO">${RESULT} = [{'time': 0.042951583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010445800000000172, 'source_diff': 0.00010445800000000172}, {'time': 0.043062597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:38.222" endtime="20201110 08:34:38.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.261" level="INFO">${ACCURACY} = {'time': [0.042951583, 0.043062597, 0.043170597, 0.043284625, 0.043394625, 0.043502625, 0.043616639, 0.043725667, 0.043837667, 0.043947694, 0.044058694, 0.044165708, 0.044276722, 0.044389722, 0.044500...</msg>
<status status="PASS" starttime="20201110 08:34:38.233" endtime="20201110 08:34:38.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.272" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.270" endtime="20201110 08:34:38.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.277" level="INFO">VALUE: [0.00010445800000000172, 0.00010462500000000402, 0.00010461099999999751, 0.00010475000000000068, 0.00010437499999999683, 0.00010456900000000574, 0.0001042360000000006, 0.00010425000000000018, 0.00010412499999999658, 0.00010475000000000068, 0.00010398600000000036, 0.0001047360000000011, 0.00010425000000000018, 0.0001042360000000006, 0.00010398600000000036, 0.00010440300000000291, 0.00010488900000000384, 0.00010452700000000009, 0.00010437500000000377, 0.00010462499999999708, 0.00010437499999999683, 0.00010487499999999733, 0.00010425000000000018, 0.0001040139999999995, 0.00010437500000000377, 0.00010450000000000043, 0.00010412499999999658, 0.00010450000000000043, 0.00010424999999999324, 0.00010463899999999665, 0.00010486200000000417, 0.00010487500000000427, 0.00010411100000000395, 0.00010425000000000018, 0.0001047360000000011, 0.00010412500000000352, 0.00010447200000000129, 0.0001040139999999995, 0.00010476400000000025, 0.00010425000000000018, 0.00010440200000000344, 0.00010411099999999701, 0.00010413900000000309, 0.0001039160000000025, 0.0001048610000000047, 0.00010426399999999975, 0.00010475000000000068, 0.00010398600000000036, 0.00010450000000000043, 0.00010463899999999665]</msg>
<status status="PASS" starttime="20201110 08:34:38.274" endtime="20201110 08:34:38.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.263" endtime="20201110 08:34:38.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.287" endtime="20201110 08:34:38.289"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.295" endtime="20201110 08:34:38.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.291" endtime="20201110 08:34:38.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.282" endtime="20201110 08:34:38.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.770" endtime="20201110 08:34:38.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:37.768" endtime="20201110 08:34:38.321"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.343" endtime="20201110 08:34:38.367"></status>
</kw>
<msg timestamp="20201110 08:34:38.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.340" endtime="20201110 08:34:38.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.370" endtime="20201110 08:34:38.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.376" endtime="20201110 08:34:38.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.333" endtime="20201110 08:34:38.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.327" endtime="20201110 08:34:38.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.400" endtime="20201110 08:34:38.732"></status>
</kw>
<msg timestamp="20201110 08:34:38.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042122528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:38.397" endtime="20201110 08:34:38.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.757" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042122528, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:34:38.741" endtime="20201110 08:34:38.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.759" endtime="20201110 08:34:38.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.389" endtime="20201110 08:34:38.767"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.385" endtime="20201110 08:34:38.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:38.778" level="INFO">${RESULT} = [{'time': 0.042122528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010502800000000007, 'source_diff': 0.00010502800000000007}, {'time': 0.042232528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:38.769" endtime="20201110 08:34:38.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:38.808" level="INFO">${ACCURACY} = {'time': [0.042122528, 0.042232528, 0.042341528, 0.042454556, 0.042564556, 0.042672556, 0.042783611, 0.042893597, 0.043008597, 0.043116611, 0.043225611, 0.043335625, 0.043449639, 0.043561653, 0.043669...</msg>
<status status="PASS" starttime="20201110 08:34:38.780" endtime="20201110 08:34:38.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.819" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:34:38.817" endtime="20201110 08:34:38.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.825" level="INFO">VALUE: [0.00010502800000000007, 0.00010525000000000118, 0.0001052360000000016, 0.00010563899999999765, 0.00010587500000000527, 0.00010573700000000158, 0.00010552800000000057, 0.00010563899999999765, 0.00010559700000000588, 0.00010525000000000118, 0.00010511099999999801, 0.0001052360000000016, 0.00010525000000000118, 0.0001058339999999991, 0.00010562500000000502, 0.00010501300000000102, 0.00010565299999999722, 0.00010548599999999492, 0.00010572200000000254, 0.00010558299999999937, 0.00010525000000000118, 0.00010500000000000093, 0.0001050140000000005, 0.00010551399999999406, 0.00010515200000000419, 0.00010526300000000127, 0.00010548700000000133, 0.00010561099999999851, 0.00010563900000000459, 0.00010562499999999808, 0.00010525000000000118, 0.00010500000000000093, 0.00010587500000000527, 0.00010534799999999817, 0.00010523599999999467, 0.00010536099999999826, 0.00010498700000000083, 0.0001053889999999974, 0.00010577800000000082, 0.00010531999999999903, 0.00010576400000000125, 0.00010583299999999962, 0.00010534700000000563, 0.00010509700000000538, 0.00010512499999999758, 0.00010576399999999431, 0.00010511199999999749, 0.00010575000000000168, 0.0001050140000000005, 0.0001051940000000029]</msg>
<status status="PASS" starttime="20201110 08:34:38.822" endtime="20201110 08:34:38.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.810" endtime="20201110 08:34:38.828"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.834" endtime="20201110 08:34:38.837"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:38.842" endtime="20201110 08:34:38.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.838" endtime="20201110 08:34:38.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.829" endtime="20201110 08:34:38.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.323" endtime="20201110 08:34:38.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.322" endtime="20201110 08:34:38.868"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.890" endtime="20201110 08:34:38.914"></status>
</kw>
<msg timestamp="20201110 08:34:38.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.887" endtime="20201110 08:34:38.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:38.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:38.917" endtime="20201110 08:34:38.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.924" endtime="20201110 08:34:38.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.880" endtime="20201110 08:34:38.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.874" endtime="20201110 08:34:38.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:38.947" endtime="20201110 08:34:39.278"></status>
</kw>
<msg timestamp="20201110 08:34:39.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041817, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041923583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:38.944" endtime="20201110 08:34:39.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041817, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041923583, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:39.287" endtime="20201110 08:34:39.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.306" endtime="20201110 08:34:39.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.936" endtime="20201110 08:34:39.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.932" endtime="20201110 08:34:39.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.327" level="INFO">${RESULT} = [{'time': 0.041923583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010658300000000037, 'source_diff': 0.00010658300000000037}, {'time': 0.042032597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.318" endtime="20201110 08:34:39.327"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.357" level="INFO">${ACCURACY} = {'time': [0.041923583, 0.042032597, 0.042142611, 0.042256653, 0.042372639, 0.042487653, 0.042602681, 0.042717694, 0.042833708, 0.042949694, 0.043064722, 0.043180764, 0.043296736, 0.043405778, 0.043521...</msg>
<status status="PASS" starttime="20201110 08:34:39.329" endtime="20201110 08:34:39.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.367" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.365" endtime="20201110 08:34:39.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.373" level="INFO">VALUE: [0.00010658300000000037, 0.00010612499999999858, 0.00010672200000000354, 0.00010627800000000132, 0.00010637499999999883, 0.00010662499999999908, 0.00010638900000000534, 0.00010659699999999994, 0.0001068889999999989, 0.00010645799999999678, 0.00010637499999999883, 0.00010679200000000139, 0.00010662499999999908, 0.00010615299999999772, 0.00010663899999999865, 0.00010649999999999549, 0.00010636099999999926, 0.00010612499999999858, 0.00010661099999999951, 0.0001065690000000008, 0.00010613899999999815, 0.0001066810000000043, 0.00010636099999999926, 0.00010693099999999761, 0.00010661099999999951, 0.00010650000000000243, 0.00010661099999999951, 0.00010674999999999574, 0.00010686199999999924, 0.00010637499999999883, 0.00010648599999999592, 0.00010650000000000243, 0.0001060140000000015, 0.00010624999999999524, 0.00010658300000000037, 0.00010613900000000509, 0.00010674999999999574, 0.00010612499999999858, 0.00010679200000000139, 0.00010637499999999883, 0.0001067219999999966, 0.00010597199999999585, 0.00010661099999999951, 0.00010665299999999822, 0.00010624999999999524, 0.00010624999999999524, 0.00010669500000000387, 0.00010687499999999933, 0.00010623700000000208, 0.00010662500000000602]</msg>
<status status="PASS" starttime="20201110 08:34:39.370" endtime="20201110 08:34:39.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.358" endtime="20201110 08:34:39.376"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.382" endtime="20201110 08:34:39.385"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.390" endtime="20201110 08:34:39.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.386" endtime="20201110 08:34:39.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.378" endtime="20201110 08:34:39.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.870" endtime="20201110 08:34:39.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:38.869" endtime="20201110 08:34:39.416"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.439" endtime="20201110 08:34:39.462"></status>
</kw>
<msg timestamp="20201110 08:34:39.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.435" endtime="20201110 08:34:39.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.465" endtime="20201110 08:34:39.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.471" endtime="20201110 08:34:39.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.428" endtime="20201110 08:34:39.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.422" endtime="20201110 08:34:39.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.495" endtime="20201110 08:34:39.828"></status>
</kw>
<msg timestamp="20201110 08:34:39.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041820417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041928111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.491" endtime="20201110 08:34:39.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041820417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041928111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:39.837" endtime="20201110 08:34:39.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.855" endtime="20201110 08:34:39.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.484" endtime="20201110 08:34:39.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.479" endtime="20201110 08:34:39.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:39.874" level="INFO">${RESULT} = [{'time': 0.041928111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010769399999999846, 'source_diff': 0.00010769399999999846}, {'time': 0.042040125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:39.865" endtime="20201110 08:34:39.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:39.904" level="INFO">${ACCURACY} = {'time': [0.041928111, 0.042040125, 0.042152167, 0.042262125, 0.042375139, 0.042492153, 0.042606167, 0.04272025, 0.042837194, 0.042947194, 0.043060208, 0.043171222, 0.043282292, 0.04339325, 0.04350626...</msg>
<status status="PASS" starttime="20201110 08:34:39.876" endtime="20201110 08:34:39.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.915" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:34:39.913" endtime="20201110 08:34:39.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:39.920" level="INFO">VALUE: [0.00010769399999999846, 0.00010765299999999922, 0.00010713899999999915, 0.00010737499999999983, 0.00010724999999999624, 0.00010787500000000033, 0.00010737499999999983, 0.00010719399999999796, 0.00010787500000000033, 0.00010736100000000026, 0.00010781900000000205, 0.00010787500000000033, 0.00010726400000000275, 0.00010762500000000008, 0.00010775000000000368, 0.00010711100000000001, 0.00010698599999999642, 0.00010737499999999983, 0.00010737499999999983, 0.00010712499999999958, 0.00010787500000000033, 0.00010793099999999861, 0.00010698600000000336, 0.00010762500000000008, 0.00010709700000000044, 0.00010712500000000652, 0.00010749999999999649, 0.00010737499999999983, 0.00010749999999999649, 0.00010699999999999599, 0.00010784700000000119, 0.00010763899999999965, 0.00010736100000000026, 0.0001077360000000041, 0.00010774999999999674, 0.00010724999999999624, 0.00010774999999999674, 0.00010737499999999983, 0.0001075560000000017, 0.00010725000000000318, 0.00010695799999999728, 0.00010775000000000368, 0.00010737499999999983, 0.0001078889999999999, 0.00010725000000000318, 0.0001078889999999999, 0.00010786100000000076, 0.0001074019999999995, 0.00010786100000000076, 0.000107514000000003]</msg>
<status status="PASS" starttime="20201110 08:34:39.917" endtime="20201110 08:34:39.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.906" endtime="20201110 08:34:39.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.930" endtime="20201110 08:34:39.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:39.938" endtime="20201110 08:34:39.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.934" endtime="20201110 08:34:39.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.925" endtime="20201110 08:34:39.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.418" endtime="20201110 08:34:39.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.417" endtime="20201110 08:34:39.964"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:39.986" endtime="20201110 08:34:40.009"></status>
</kw>
<msg timestamp="20201110 08:34:40.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:39.983" endtime="20201110 08:34:40.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.013" endtime="20201110 08:34:40.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.019" endtime="20201110 08:34:40.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.976" endtime="20201110 08:34:40.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.970" endtime="20201110 08:34:40.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.042" endtime="20201110 08:34:40.375"></status>
</kw>
<msg timestamp="20201110 08:34:40.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042099083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042207292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.039" endtime="20201110 08:34:40.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042099083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042207292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.384" endtime="20201110 08:34:40.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.402" endtime="20201110 08:34:40.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.031" endtime="20201110 08:34:40.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.027" endtime="20201110 08:34:40.411"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.421" level="INFO">${RESULT} = [{'time': 0.042207292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000108208999999998, 'source_diff': 0.000108208999999998}, {'time': 0.042321306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:34:40.412" endtime="20201110 08:34:40.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.451" level="INFO">${ACCURACY} = {'time': [0.042207292, 0.042321306, 0.042436306, 0.042548319, 0.042661347, 0.042774375, 0.042889375, 0.043000389, 0.043115403, 0.043231403, 0.043349417, 0.043464417, 0.043578431, 0.043690486, 0.043803...</msg>
<status status="PASS" starttime="20201110 08:34:40.423" endtime="20201110 08:34:40.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.462" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.460" endtime="20201110 08:34:40.462"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.467" level="INFO">VALUE: [0.000108208999999998, 0.00010825000000000418, 0.00010873699999999764, 0.00010862500000000108, 0.00010836100000000126, 0.0001082360000000046, 0.00010826400000000375, 0.00010876399999999731, 0.00010838899999999346, 0.0001087089999999985, 0.00010825000000000418, 0.00010886099999999482, 0.00010848699999999739, 0.00010879200000000339, 0.00010825000000000418, 0.00010873599999999817, 0.00010849999999999749, 0.00010888899999999396, 0.00010824999999999724, 0.00010813900000000015, 0.00010876400000000425, 0.00010812500000000058, 0.00010887500000000133, 0.00010815299999999972, 0.00010798599999999742, 0.00010824999999999724, 0.00010822200000000504, 0.00010811100000000101, 0.00010874999999999774, 0.00010887500000000133, 0.00010837500000000083, 0.00010848599999999792, 0.00010872299999999807, 0.00010837500000000083, 0.00010795799999999828, 0.0001080140000000035, 0.00010866699999999979, 0.00010812500000000058, 0.00010837500000000083, 0.00010848600000000486, 0.00010822299999999757, 0.00010826399999999681, 0.0001080560000000022, 0.00010851399999999706, 0.00010811100000000101, 0.0001087360000000051, 0.00010800000000000393, 0.00010812500000000058, 0.00010837500000000083, 0.00010823599999999767]</msg>
<status status="PASS" starttime="20201110 08:34:40.464" endtime="20201110 08:34:40.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.453" endtime="20201110 08:34:40.470"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.477" endtime="20201110 08:34:40.479"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:40.485" endtime="20201110 08:34:40.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.481" endtime="20201110 08:34:40.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.472" endtime="20201110 08:34:40.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.966" endtime="20201110 08:34:40.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:39.965" endtime="20201110 08:34:40.511"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.534" endtime="20201110 08:34:40.557"></status>
</kw>
<msg timestamp="20201110 08:34:40.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.530" endtime="20201110 08:34:40.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:40.561" endtime="20201110 08:34:40.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.567" endtime="20201110 08:34:40.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.523" endtime="20201110 08:34:40.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.517" endtime="20201110 08:34:40.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.590" endtime="20201110 08:34:40.927"></status>
</kw>
<msg timestamp="20201110 08:34:40.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042133472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042243361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.587" endtime="20201110 08:34:40.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042133472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042243361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:40.936" endtime="20201110 08:34:40.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:40.954" endtime="20201110 08:34:40.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.580" endtime="20201110 08:34:40.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.575" endtime="20201110 08:34:40.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:40.973" level="INFO">${RESULT} = [{'time': 0.042243361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001098890000000019, 'source_diff': 0.0001098890000000019}, {'time': 0.042359361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:40.964" endtime="20201110 08:34:40.973"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:40.994" level="INFO">${ACCURACY} = {'time': [0.042243361, 0.042359361, 0.042472375, 0.042591403, 0.042704403, 0.042818417, 0.042933431, 0.043052458, 0.043169458, 0.043282458, 0.043399472, 0.043513486, 0.043629514, 0.043746514, 0.043863...</msg>
<status status="PASS" starttime="20201110 08:34:40.975" endtime="20201110 08:34:40.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:40.999" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:34:40.998" endtime="20201110 08:34:40.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.002" level="INFO">VALUE: [0.0001098890000000019, 0.00010973599999999917, 0.00010937500000000183, 0.0001098890000000019, 0.00010948599999999892, 0.00010898599999999842, 0.00010898699999999789, 0.00010976400000000525, 0.00010948599999999892, 0.00010945799999999978, 0.00010924999999999824, 0.00010937499999999489, 0.00010961100000000251, 0.00010936100000000226, 0.00010912500000000158, 0.00010951399999999806, 0.00010937500000000183, 0.00010912499999999464, 0.00010911100000000201, 0.00010931899999999661, 0.00010974999999999874, 0.00010925000000000518, 0.00010961100000000251, 0.00010966700000000079, 0.00010962500000000208, 0.00010949999999999849, 0.00010962499999999514, 0.0001093340000000026, 0.00010924999999999824, 0.00010952800000000457, 0.00010937499999999489, 0.00010974999999999874, 0.00010923599999999867, 0.0001090969999999955, 0.00010924999999999824, 0.00010959800000000242, 0.00010937500000000183, 0.00010936100000000226, 0.00010909700000000244, 0.00010973599999999917, 0.00010949999999999849, 0.00010951399999999806, 0.00010970800000000003, 0.00010962500000000208, 0.00010975000000000568, 0.00010923599999999867, 0.00010987500000000233, 0.00010963900000000165, 0.00010912500000000158, 0.00010899999999999799]</msg>
<status status="PASS" starttime="20201110 08:34:41.000" endtime="20201110 08:34:41.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.995" endtime="20201110 08:34:41.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.007" endtime="20201110 08:34:41.008"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.011" endtime="20201110 08:34:41.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.009" endtime="20201110 08:34:41.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.004" endtime="20201110 08:34:41.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.513" endtime="20201110 08:34:41.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:40.512" endtime="20201110 08:34:41.032"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.043" endtime="20201110 08:34:41.063"></status>
</kw>
<msg timestamp="20201110 08:34:41.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.041" endtime="20201110 08:34:41.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.065" endtime="20201110 08:34:41.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.068" endtime="20201110 08:34:41.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.038" endtime="20201110 08:34:41.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.035" endtime="20201110 08:34:41.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.079" endtime="20201110 08:34:41.410"></status>
</kw>
<msg timestamp="20201110 08:34:41.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.077" endtime="20201110 08:34:41.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024738847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024848931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.419" endtime="20201110 08:34:41.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.437" endtime="20201110 08:34:41.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.074" endtime="20201110 08:34:41.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.071" endtime="20201110 08:34:41.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:41.458" level="INFO">${RESULT} = [{'time': 0.024848931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011008399999999988, 'source_diff': 0.00011008399999999988}, {'time': 0.024962944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:41.449" endtime="20201110 08:34:41.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:41.488" level="INFO">${ACCURACY} = {'time': [0.024848931, 0.024962944, 0.025081972, 0.025194986, 0.025309986, 0.025428056, 0.025547, 0.025665014, 0.025781069, 0.025899056, 0.026014111, 0.026128069, 0.026242097, 0.026358111, 0.026475111...</msg>
<status status="PASS" starttime="20201110 08:34:41.460" endtime="20201110 08:34:41.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.499" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:34:41.497" endtime="20201110 08:34:41.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.504" level="INFO">VALUE: [0.00011008399999999988, 0.00011024999999999924, 0.00010998599999999942, 0.00011013899999999868, 0.00011024999999999924, 0.00011005600000000074, 0.00011086100000000029, 0.0001105700000000008, 0.00011088799999999996, 0.00011062499999999961, 0.00011066699999999832, 0.00011062499999999961, 0.00011013899999999868, 0.00011088899999999943, 0.00010995800000000028, 0.00011049999999999949, 0.00011001400000000203, 0.00011048599999999992, 0.00011061100000000004, 0.00011052699999999915, 0.00010995899999999975, 0.00011049999999999949, 0.00011036099999999979, 0.00011063899999999918, 0.00011049999999999949, 0.00011074999999999974, 0.00011029200000000142, 0.00010998599999999942, 0.00010999999999999899, 0.00011048599999999992, 0.00011037499999999936, 0.00011059700000000047, 0.00011087499999999986, 0.00010998599999999942, 0.00011063899999999918, 0.00011012500000000258, 0.00011026399999999881, 0.00010998599999999942, 0.00011012499999999911, 0.00011049999999999949, 0.00011011099999999954, 0.00010998600000000289, 0.00011087500000000333, 0.00010998599999999942, 0.00011087499999999986, 0.00010998599999999942, 0.00011062499999999961, 0.00011026399999999881, 0.00011086100000000029, 0.00011013800000000268]</msg>
<status status="PASS" starttime="20201110 08:34:41.501" endtime="20201110 08:34:41.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.490" endtime="20201110 08:34:41.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.514" endtime="20201110 08:34:41.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:41.522" endtime="20201110 08:34:41.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.518" endtime="20201110 08:34:41.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.509" endtime="20201110 08:34:41.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.033" endtime="20201110 08:34:41.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.033" endtime="20201110 08:34:41.548"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.571" endtime="20201110 08:34:41.594"></status>
</kw>
<msg timestamp="20201110 08:34:41.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.568" endtime="20201110 08:34:41.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:41.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:41.598" endtime="20201110 08:34:41.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.604" endtime="20201110 08:34:41.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.560" endtime="20201110 08:34:41.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.555" endtime="20201110 08:34:41.611"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:41.628" endtime="20201110 08:34:41.975"></status>
</kw>
<msg timestamp="20201110 08:34:41.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042366889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.624" endtime="20201110 08:34:41.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042366889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:41.984" endtime="20201110 08:34:42.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.002" endtime="20201110 08:34:42.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.617" endtime="20201110 08:34:42.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.612" endtime="20201110 08:34:42.011"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.021" level="INFO">${RESULT} = [{'time': 0.042366889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011184699999999825, 'source_diff': 0.00011184699999999825}, {'time': 0.042480903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:42.012" endtime="20201110 08:34:42.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.051" level="INFO">${ACCURACY} = {'time': [0.042366889, 0.042480903, 0.042598903, 0.042717903, 0.042838931, 0.042959931, 0.043077944, 0.043193958, 0.043309972, 0.043426986, 0.043543, 0.043660028, 0.043779028, 0.043898056, 0.044015097...</msg>
<status status="PASS" starttime="20201110 08:34:42.023" endtime="20201110 08:34:42.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.062" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.060" endtime="20201110 08:34:42.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.068" level="INFO">VALUE: [0.00011184699999999825, 0.00011151400000000006, 0.00011125000000000024, 0.00011111100000000401, 0.00011163899999999671, 0.00011173700000000064, 0.00011187499999999739, 0.00011162499999999714, 0.00011150000000000049, 0.00011136099999999732, 0.00011162499999999714, 0.00011099999999999999, 0.00011187499999999739, 0.00011138899999999646, 0.00011152799999999963, 0.00011161099999999757, 0.00011112499999999664, 0.00011166700000000279, 0.00011150000000000049, 0.00011112499999999664, 0.00011162499999999714, 0.00011176399999999337, 0.0001117220000000016, 0.00011187500000000433, 0.00011149999999999355, 0.00011162499999999714, 0.00011112500000000358, 0.00011138899999999646, 0.00011175000000000074, 0.0001110969999999975, 0.00011098600000000042, 0.00011175000000000074, 0.00011173600000000117, 0.00011112500000000358, 0.00011099999999999999, 0.00011099999999999999, 0.00011112499999999664, 0.00011125000000000024, 0.00011162500000000408, 0.00011175000000000074, 0.00011111099999999707, 0.00011136099999999732, 0.00011136100000000426, 0.00011118100000000186, 0.00011138799999999699, 0.00011113899999999621, 0.00011137499999999689, 0.00011176400000000031, 0.00011125000000000024, 0.0001117499999999938]</msg>
<status status="PASS" starttime="20201110 08:34:42.065" endtime="20201110 08:34:42.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.053" endtime="20201110 08:34:42.071"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.077" endtime="20201110 08:34:42.080"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.085" endtime="20201110 08:34:42.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.081" endtime="20201110 08:34:42.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.073" endtime="20201110 08:34:42.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.550" endtime="20201110 08:34:42.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:41.549" endtime="20201110 08:34:42.111"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.134" endtime="20201110 08:34:42.158"></status>
</kw>
<msg timestamp="20201110 08:34:42.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.131" endtime="20201110 08:34:42.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.162" endtime="20201110 08:34:42.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.168" endtime="20201110 08:34:42.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.124" endtime="20201110 08:34:42.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.118" endtime="20201110 08:34:42.175"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.191" endtime="20201110 08:34:42.536"></status>
</kw>
<msg timestamp="20201110 08:34:42.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042281722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042394597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.188" endtime="20201110 08:34:42.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042281722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042394597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.545" endtime="20201110 08:34:42.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.563" endtime="20201110 08:34:42.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.180" endtime="20201110 08:34:42.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.176" endtime="20201110 08:34:42.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:42.582" level="INFO">${RESULT} = [{'time': 0.042394597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001128749999999984, 'source_diff': 0.0001128749999999984}, {'time': 0.042510597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:34:42.573" endtime="20201110 08:34:42.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:42.612" level="INFO">${ACCURACY} = {'time': [0.042394597, 0.042510597, 0.042626611, 0.042744611, 0.042865625, 0.042982653, 0.043097653, 0.043211667, 0.043327681, 0.043448708, 0.043568708, 0.043684722, 0.043800736, 0.04392175, 0.0440387...</msg>
<status status="PASS" starttime="20201110 08:34:42.584" endtime="20201110 08:34:42.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.623" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:34:42.621" endtime="20201110 08:34:42.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.628" level="INFO">VALUE: [0.0001128749999999984, 0.0001123749999999979, 0.00011276400000000131, 0.0001128749999999984, 0.0001127499999999948, 0.00011262500000000508, 0.00011283399999999916, 0.00011200000000000099, 0.00011212499999999764, 0.00011237500000000483, 0.00011198599999999448, 0.00011250000000000149, 0.00011275000000000174, 0.00011261100000000551, 0.0001120969999999985, 0.00011198600000000142, 0.00011201400000000056, 0.00011198600000000142, 0.00011263799999999824, 0.00011250000000000149, 0.00011197199999999491, 0.00011273600000000217, 0.0001128749999999984, 0.00011244499999999574, 0.00011225000000000124, 0.00011211099999999807, 0.00011281999999999959, 0.00011283399999999916, 0.0001122499999999943, 0.00011247200000000235, 0.00011236099999999832, 0.00011226400000000081, 0.0001129169999999971, 0.00011194400000000271, 0.0001128749999999984, 0.00011237500000000483, 0.0001127499999999948, 0.00011212499999999764, 0.00011212499999999764, 0.00011261100000000551, 0.00011290299999999753, 0.0001122220000000021, 0.00011197200000000185, 0.00011248600000000192, 0.00011273599999999523, 0.00011236099999999832, 0.00011248600000000192, 0.00011204100000000022, 0.00011225000000000124, 0.00011211099999999807]</msg>
<status status="PASS" starttime="20201110 08:34:42.625" endtime="20201110 08:34:42.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.614" endtime="20201110 08:34:42.631"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.638" endtime="20201110 08:34:42.640"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:42.646" endtime="20201110 08:34:42.668"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.642" endtime="20201110 08:34:42.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.633" endtime="20201110 08:34:42.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.113" endtime="20201110 08:34:42.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.112" endtime="20201110 08:34:42.672"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.695" endtime="20201110 08:34:42.719"></status>
</kw>
<msg timestamp="20201110 08:34:42.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.691" endtime="20201110 08:34:42.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:42.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:42.722" endtime="20201110 08:34:42.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.729" endtime="20201110 08:34:42.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.684" endtime="20201110 08:34:42.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.678" endtime="20201110 08:34:42.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:42.752" endtime="20201110 08:34:43.097"></status>
</kw>
<msg timestamp="20201110 08:34:43.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042808097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042921833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:42.749" endtime="20201110 08:34:43.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042808097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042921833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.106" endtime="20201110 08:34:43.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.124" endtime="20201110 08:34:43.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.742" endtime="20201110 08:34:43.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.737" endtime="20201110 08:34:43.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.143" level="INFO">${RESULT} = [{'time': 0.042921833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011373599999999623, 'source_diff': 0.00011373599999999623}, {'time': 0.043039847, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:43.134" endtime="20201110 08:34:43.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.173" level="INFO">${ACCURACY} = {'time': [0.042921833, 0.043039847, 0.043159889, 0.043282875, 0.043403889, 0.043519903, 0.043641944, 0.043763931, 0.043884958, 0.044002958, 0.044125986, 0.044241986, 0.044362, 0.044483014, 0.044600028...</msg>
<status status="PASS" starttime="20201110 08:34:43.145" endtime="20201110 08:34:43.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.184" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.182" endtime="20201110 08:34:43.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.189" level="INFO">VALUE: [0.00011373599999999623, 0.0001137499999999958, 0.00011315299999999778, 0.0001132499999999953, 0.00011386099999999982, 0.00011295899999999581, 0.0001137220000000036, 0.0001133749999999989, 0.00011295800000000328, 0.0001132220000000031, 0.00011351400000000206, 0.0001133749999999989, 0.00011349999999999555, 0.0001133749999999989, 0.0001133749999999989, 0.00011372199999999666, 0.00011373599999999623, 0.00011312499999999864, 0.00011338899999999846, 0.0001133749999999989, 0.0001137499999999958, 0.00011326400000000181, 0.00011319399999999702, 0.00011350000000000249, 0.00011362499999999914, 0.00011376399999999537, 0.0001138749999999994, 0.00011312499999999864, 0.0001138749999999994, 0.00011337500000000583, 0.00011313899999999821, 0.00011323599999999573, 0.00011297200000000285, 0.00011351399999999512, 0.00011375000000000274, 0.00011312499999999864, 0.00011375000000000274, 0.00011358399999999991, 0.00011376400000000231, 0.00011319499999999649, 0.00011336099999999932, 0.00011387500000000633, 0.00011376400000000231, 0.00011351400000000206, 0.0001139299999999982, 0.00011375000000000274, 0.00011312499999999864, 0.000113597, 0.00011338899999999846, 0.00011312499999999864]</msg>
<status status="PASS" starttime="20201110 08:34:43.186" endtime="20201110 08:34:43.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.175" endtime="20201110 08:34:43.192"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.199" endtime="20201110 08:34:43.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.207" endtime="20201110 08:34:43.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.203" endtime="20201110 08:34:43.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.194" endtime="20201110 08:34:43.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.674" endtime="20201110 08:34:43.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:42.673" endtime="20201110 08:34:43.233"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.256" endtime="20201110 08:34:43.279"></status>
</kw>
<msg timestamp="20201110 08:34:43.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.252" endtime="20201110 08:34:43.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.283" endtime="20201110 08:34:43.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.289" endtime="20201110 08:34:43.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.245" endtime="20201110 08:34:43.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.240" endtime="20201110 08:34:43.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.312" endtime="20201110 08:34:43.657"></status>
</kw>
<msg timestamp="20201110 08:34:43.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042278542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042392611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.309" endtime="20201110 08:34:43.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042278542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042392611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.666" endtime="20201110 08:34:43.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.684" endtime="20201110 08:34:43.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.302" endtime="20201110 08:34:43.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.297" endtime="20201110 08:34:43.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:43.705" level="INFO">${RESULT} = [{'time': 0.042392611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011406899999999442, 'source_diff': 0.00011406899999999442}, {'time': 0.042516625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:43.697" endtime="20201110 08:34:43.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:43.735" level="INFO">${ACCURACY} = {'time': [0.042392611, 0.042516625, 0.042639653, 0.042758653, 0.042881681, 0.043001708, 0.043123694, 0.043244708, 0.043365722, 0.043486736, 0.043606806, 0.043728792, 0.043845792, 0.043969806, 0.044087...</msg>
<status status="PASS" starttime="20201110 08:34:43.707" endtime="20201110 08:34:43.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.747" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:34:43.744" endtime="20201110 08:34:43.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.752" level="INFO">VALUE: [0.00011406899999999442, 0.00011412499999999964, 0.00011463899999999971, 0.0001148750000000004, 0.0001142499999999963, 0.00011402700000000265, 0.00011412499999999964, 0.0001147499999999968, 0.0001143749999999999, 0.00011436100000000032, 0.00011455599999999483, 0.00011422300000000357, 0.00011488899999999996, 0.00011434800000000023, 0.0001147499999999968, 0.0001143749999999999, 0.0001148750000000004, 0.00011412499999999964, 0.00011449999999999655, 0.00011413899999999921, 0.00011401400000000256, 0.00011450000000000349, 0.00011463899999999971, 0.00011398599999999648, 0.0001148750000000004, 0.0001142499999999963, 0.00011451399999999612, 0.00011412500000000658, 0.00011427800000000238, 0.00011473599999999723, 0.0001147499999999968, 0.0001143749999999999, 0.00011422299999999663, 0.00011412499999999964, 0.00011463899999999971, 0.00011462500000000014, 0.0001143749999999999, 0.00011423599999999673, 0.00011397199999999691, 0.00011473599999999723, 0.00011413899999999921, 0.00011476399999999637, 0.00011444500000000468, 0.00011451300000000358, 0.00011398599999999648, 0.0001142499999999963, 0.00011451400000000306, 0.00011448599999999698, 0.00011451400000000306, 0.00011476400000000331]</msg>
<status status="PASS" starttime="20201110 08:34:43.749" endtime="20201110 08:34:43.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.737" endtime="20201110 08:34:43.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.763" endtime="20201110 08:34:43.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:43.771" endtime="20201110 08:34:43.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.767" endtime="20201110 08:34:43.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.758" endtime="20201110 08:34:43.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.235" endtime="20201110 08:34:43.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.234" endtime="20201110 08:34:43.797"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.820" endtime="20201110 08:34:43.843"></status>
</kw>
<msg timestamp="20201110 08:34:43.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.817" endtime="20201110 08:34:43.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:43.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:43.847" endtime="20201110 08:34:43.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.853" endtime="20201110 08:34:43.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.809" endtime="20201110 08:34:43.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.803" endtime="20201110 08:34:43.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:43.876" endtime="20201110 08:34:44.209"></status>
</kw>
<msg timestamp="20201110 08:34:44.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042144375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042259375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:43.873" endtime="20201110 08:34:44.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042144375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042259375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:44.218" endtime="20201110 08:34:44.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.237" endtime="20201110 08:34:44.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.866" endtime="20201110 08:34:44.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.861" endtime="20201110 08:34:44.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:44.256" level="INFO">${RESULT} = [{'time': 0.042259375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011500000000000399, 'source_diff': 0.00011500000000000399}, {'time': 0.042381375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:34:44.247" endtime="20201110 08:34:44.256"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:34:44.286" level="INFO">${ACCURACY} = {'time': [0.042259375, 0.042381375, 0.042504417, 0.042628417, 0.042749417, 0.042871431, 0.042990444, 0.043109458, 0.043232472, 0.0433555, 0.0434805, 0.043601514, 0.043726556, 0.043850528, 0.043973542,...</msg>
<status status="PASS" starttime="20201110 08:34:44.258" endtime="20201110 08:34:44.286"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.297" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:34:44.294" endtime="20201110 08:34:44.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.302" level="INFO">VALUE: [0.00011500000000000399, 0.00011511100000000107, 0.00011527800000000338, 0.00011563900000000071, 0.00011536100000000132, 0.00011562500000000114, 0.00011562500000000114, 0.0001153750000000009, 0.00011525000000000424, 0.00011549999999999755, 0.00011520799999999859, 0.00011498599999999748, 0.00011540300000000003, 0.000115597000000002, 0.00011509799999999404, 0.0001152499999999973, 0.0001152499999999973, 0.00011522199999999816, 0.0001152499999999973, 0.00011498599999999748, 0.00011512500000000064, 0.00011577799999999694, 0.00011538900000000046, 0.00011586100000000182, 0.00011525000000000424, 0.0001153750000000009, 0.00011588900000000096, 0.00011562500000000114, 0.00011513900000000021, 0.00011547199999999841, 0.00011526400000000381, 0.0001153750000000009, 0.00011586100000000182, 0.00011549999999999755, 0.00011494499999999824, 0.00011549999999999755, 0.0001158750000000014, 0.00011511100000000107, 0.0001153750000000009, 0.00011575000000000474, 0.00011495799999999834, 0.0001158750000000014, 0.00011562500000000114, 0.0001159300000000002, 0.00011525000000000424, 0.0001153750000000009, 0.0001152499999999973, 0.00011512500000000064, 0.00011586100000000182, 0.0001158049999999966]</msg>
<status status="PASS" starttime="20201110 08:34:44.299" endtime="20201110 08:34:44.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.288" endtime="20201110 08:34:44.305"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:44.311" endtime="20201110 08:34:44.314"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.320" endtime="20201110 08:34:44.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.316" endtime="20201110 08:34:44.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.307" endtime="20201110 08:34:44.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.799" endtime="20201110 08:34:44.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:43.798" endtime="20201110 08:34:44.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:33:48.774" endtime="20201110 08:34:44.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:44.347" endtime="20201110 08:34:44.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.345" endtime="20201110 08:34:44.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.343" endtime="20201110 08:34:44.367"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:33:48.647" endtime="20201110 08:34:44.368" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:32:47.817" endtime="20201110 08:34:44.372"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:34:44.452" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:34:44.468" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:34:45.268" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:34:44.448" endtime="20201110 08:34:45.269"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.275" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:34:45.271" endtime="20201110 08:34:48.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.446" endtime="20201110 08:34:48.278"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.282" endtime="20201110 08:34:48.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.280" endtime="20201110 08:34:48.704"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.733" endtime="20201110 08:34:48.754"></status>
</kw>
<msg timestamp="20201110 08:34:48.755" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.729" endtime="20201110 08:34:48.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.762" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.758" endtime="20201110 08:34:48.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.768" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:48.764" endtime="20201110 08:34:48.769"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:48.723" endtime="20201110 08:34:48.771"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:48.718" endtime="20201110 08:34:48.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.715" endtime="20201110 08:34:48.773"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:48.781" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:48.779" endtime="20201110 08:34:48.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.775" endtime="20201110 08:34:48.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.713" endtime="20201110 08:34:48.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.712" endtime="20201110 08:34:48.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.785" endtime="20201110 08:34:48.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.709" endtime="20201110 08:34:48.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.792" endtime="20201110 08:34:48.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.705" endtime="20201110 08:34:48.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:44.443" endtime="20201110 08:34:48.798"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:48.812" endtime="20201110 08:34:48.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.808" endtime="20201110 08:34:48.837"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.877" endtime="20201110 08:34:48.896"></status>
</kw>
<msg timestamp="20201110 08:34:48.897" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.873" endtime="20201110 08:34:48.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.903" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:34:48.899" endtime="20201110 08:34:48.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:34:48.911" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:34:48.906" endtime="20201110 08:34:48.911"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:48.865" endtime="20201110 08:34:48.913"></status>
</kw>
<status status="FAIL" starttime="20201110 08:34:48.857" endtime="20201110 08:34:48.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.854" endtime="20201110 08:34:48.916"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:34:48.924" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:34:48.923" endtime="20201110 08:34:48.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.918" endtime="20201110 08:34:48.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.851" endtime="20201110 08:34:48.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.849" endtime="20201110 08:34:48.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.928" endtime="20201110 08:34:48.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.844" endtime="20201110 08:34:48.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.839" endtime="20201110 08:34:48.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.806" endtime="20201110 08:34:48.936"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:48.943" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:48.964" endtime="20201110 08:34:51.075"></status>
</kw>
<msg timestamp="20201110 08:34:51.076" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3716337, 'start-iter': 1, 'wakeups': [3726344, 3736346, 3746346, 37563...</msg>
<status status="PASS" starttime="20201110 08:34:48.961" endtime="20201110 08:34:51.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.083" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3716337, 'start-iter': 1, 'wakeups': [3726344, 3736346, 3746346, 37563...</msg>
<status status="PASS" starttime="20201110 08:34:51.079" endtime="20201110 08:34:51.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.086" endtime="20201110 08:34:51.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.953" endtime="20201110 08:34:51.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.948" endtime="20201110 08:34:51.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.101" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [3726344, 3736346, 3746346, 3756346, 3766346, 3776346, 3786346, 3796346, 3806346, 3816346, 3826346, 3836346, 3846346, 3856346, 3866346, 3876346, 3886346, 3896346, 3906346...</msg>
<status status="PASS" starttime="20201110 08:34:51.096" endtime="20201110 08:34:51.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.113" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:51.110" endtime="20201110 08:34:51.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.119" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:51.116" endtime="20201110 08:34:51.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.104" endtime="20201110 08:34:51.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.134" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:51.131" endtime="20201110 08:34:51.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.139" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:51.136" endtime="20201110 08:34:51.140"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.123" endtime="20201110 08:34:51.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.153" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:51.151" endtime="20201110 08:34:51.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.158" level="INFO">VALUE: 3716337</msg>
<status status="PASS" starttime="20201110 08:34:51.156" endtime="20201110 08:34:51.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.144" endtime="20201110 08:34:51.160"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.170" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:51.168" endtime="20201110 08:34:51.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.175" level="INFO">VALUE: [3726344, 3736346, 3746346, 3756346, 3766346, 3776346, 3786346, 3796346, 3806346, 3816346, 3826346, 3836346, 3846346, 3856346, 3866346, 3876346, 3886346, 3896346, 3906346, 3916346, 3926346, 3936346, 3946346, 3956346, 3966346, 3976346, 3986346, 3996346, 4006346, 4016346, 4026346, 4036346, 4046346, 4056346, 4066346, 4076346, 4086346, 4096346, 4106346, 4116346, 4126346, 4136346, 4146346, 4156346, 4166346, 4176346, 4186346, 4196346, 4206346, 4216346, 4226346, 4236346, 4246346, 4256346, 4266346, 4276346, 4286346, 4296346, 4306346, 4316346, 4326346, 4336346, 4346346, 4356346, 4366346, 4376346, 4386346, 4396346, 4406346, 4416346, 4426346, 4436346, 4446346, 4456346, 4466346, 4476346, 4486346, 4496346, 4506346, 4516346, 4526346, 4536346, 4546346, 4556346, 4566346, 4576346, 4586346, 4596346, 4606346, 4616346, 4626346, 4636346, 4646346, 4656346, 4666346, 4676346, 4686346, 4696346, 4706346, 4716346]</msg>
<status status="PASS" starttime="20201110 08:34:51.172" endtime="20201110 08:34:51.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.161" endtime="20201110 08:34:51.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.194" endtime="20201110 08:34:51.542"></status>
</kw>
<msg timestamp="20201110 08:34:51.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143560347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.153569875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.191" endtime="20201110 08:34:51.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143560347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.153569875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:51.551" endtime="20201110 08:34:51.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.568" endtime="20201110 08:34:51.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.183" endtime="20201110 08:34:51.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.179" endtime="20201110 08:34:51.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:51.632" level="INFO">${RESULT} = {'time': [0.143560347, 0.153569875, 0.163573083, 0.173574042, 0.183575194, 0.193576236, 0.203577375, 0.213578458, 0.223579556, 0.233580583, 0.243581736, 0.253582778, 0.263583917, 0.273584944, 0.283586...</msg>
<status status="PASS" starttime="20201110 08:34:51.577" endtime="20201110 08:34:51.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.643" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:51.640" endtime="20201110 08:34:51.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.647" level="INFO">VALUE: 0.143560347</msg>
<status status="PASS" starttime="20201110 08:34:51.645" endtime="20201110 08:34:51.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.634" endtime="20201110 08:34:51.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.661" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:51.658" endtime="20201110 08:34:51.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:51.665" level="INFO">VALUE: [0.153569875, 0.163573083, 0.173574042, 0.183575194, 0.193576236, 0.203577375, 0.213578458, 0.223579556, 0.233580583, 0.243581736, 0.253582778, 0.263583917, 0.273584944, 0.283586097, 0.293587125, 0.303588292, 0.313589319, 0.323590458, 0.333591486, 0.343592639, 0.353593667, 0.363594833, 0.373595903, 0.383597, 0.393598069, 0.403599194, 0.413600208, 0.423601375, 0.433602389, 0.443603542, 0.453604625, 0.463605722, 0.47360675, 0.483607972, 0.493608931, 0.503610097, 0.513611111, 0.523612264, 0.533613292, 0.543614444, 0.553615472, 0.563616667, 0.573617653, 0.583618847, 0.593619847, 0.603620986, 0.613622014, 0.623623167, 0.633624194, 0.643625347, 0.653626431, 0.663627528, 0.673628556, 0.683629694, 0.693630722, 0.703631889, 0.713632889, 0.723634042, 0.733635056, 0.743636264, 0.753637236, 0.763638389, 0.773639444, 0.783640556, 0.793641569, 0.803642722, 0.813643736, 0.823644903, 0.833645917, 0.843647097, 0.853648083, 0.863649236, 0.873650292, 0.883651403, 0.893652417, 0.903653639, 0.913654611, 0.92365575, 0.933656764, 0.943657917, 0.953658944, 0.963660111, 0.973661181, 0.983662306, 0.993663333, 1.003664472, 1.013665458, 1.023666625, 1.033667625, 1.043668861, 1.053669806, 1.063670958, 1.073671972, 1.083673153, 1.093674167, 1.103675306, 1.113676319, 1.123677486, 1.133678514, 1.143679653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:51.663" endtime="20201110 08:34:51.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.651" endtime="20201110 08:34:51.668"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.674" endtime="20201110 08:34:51.677"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:51.682" endtime="20201110 08:34:51.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.678" endtime="20201110 08:34:51.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.669" endtime="20201110 08:34:51.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.944" endtime="20201110 08:34:51.707"></status>
</kw>
<msg timestamp="20201110 08:34:51.708" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:51.729" endtime="20201110 08:34:53.840"></status>
</kw>
<msg timestamp="20201110 08:34:53.841" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6479149, 'start-iter': 1, 'wakeups': [6489156, 6499158, 6509158, 65191...</msg>
<status status="PASS" starttime="20201110 08:34:51.725" endtime="20201110 08:34:53.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.848" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6479149, 'start-iter': 1, 'wakeups': [6489156, 6499158, 6509158, 65191...</msg>
<status status="PASS" starttime="20201110 08:34:53.844" endtime="20201110 08:34:53.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.851" endtime="20201110 08:34:53.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.718" endtime="20201110 08:34:53.856"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.713" endtime="20201110 08:34:53.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:53.864" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [6489156, 6499158, 6509158, 6519158, 6529158, 6539158, 6549158, 6559158, 6569158, 6579158, 6589158, 6599158, 6609158, 6619158, 6629158, 6639158, 6649158, 6659158, 6669158...</msg>
<status status="PASS" starttime="20201110 08:34:53.859" endtime="20201110 08:34:53.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.878" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:53.871" endtime="20201110 08:34:53.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.882" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:53.880" endtime="20201110 08:34:53.883"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.865" endtime="20201110 08:34:53.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.895" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:53.892" endtime="20201110 08:34:53.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.901" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:53.897" endtime="20201110 08:34:53.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.886" endtime="20201110 08:34:53.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.913" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:53.911" endtime="20201110 08:34:53.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.918" level="INFO">VALUE: 6479149</msg>
<status status="PASS" starttime="20201110 08:34:53.916" endtime="20201110 08:34:53.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.905" endtime="20201110 08:34:53.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.930" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:53.928" endtime="20201110 08:34:53.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:53.935" level="INFO">VALUE: [6489156, 6499158, 6509158, 6519158, 6529158, 6539158, 6549158, 6559158, 6569158, 6579158, 6589158, 6599158, 6609158, 6619158, 6629158, 6639158, 6649158, 6659158, 6669158, 6679158, 6689158, 6699158, 6709158, 6719158, 6729158, 6739158, 6749158, 6759158, 6769158, 6779158, 6789158, 6799158, 6809158, 6819158, 6829158, 6839158, 6849158, 6859158, 6869158, 6879158, 6889158, 6899158, 6909158, 6919158, 6929158, 6939158, 6949158, 6959158, 6969158, 6979158, 6989158, 6999158, 7009158, 7019158, 7029158, 7039158, 7049158, 7059158, 7069158, 7079158, 7089158, 7099158, 7109158, 7119158, 7129158, 7139158, 7149158, 7159158, 7169158, 7179158, 7189158, 7199158, 7209158, 7219158, 7229158, 7239158, 7249158, 7259158, 7269158, 7279158, 7289158, 7299158, 7309158, 7319158, 7329158, 7339158, 7349158, 7359158, 7369158, 7379158, 7389158, 7399158, 7409158, 7419158, 7429158, 7439158, 7449158, 7459158, 7469158, 7479158]</msg>
<status status="PASS" starttime="20201110 08:34:53.932" endtime="20201110 08:34:53.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.921" endtime="20201110 08:34:53.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:53.954" endtime="20201110 08:34:54.297"></status>
</kw>
<msg timestamp="20201110 08:34:54.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037806472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047816, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:53.951" endtime="20201110 08:34:54.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037806472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047816, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:34:54.306" endtime="20201110 08:34:54.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.323" endtime="20201110 08:34:54.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.943" endtime="20201110 08:34:54.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:53.938" endtime="20201110 08:34:54.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:54.385" level="INFO">${RESULT} = {'time': [0.037806472, 0.047816, 0.057819153, 0.067820167, 0.077821333, 0.087822361, 0.0978235, 0.107824542, 0.117825681, 0.127826694, 0.137827875, 0.147828903, 0.157830028, 0.167831056, 0.177832236, ...</msg>
<status status="PASS" starttime="20201110 08:34:54.332" endtime="20201110 08:34:54.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.395" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:54.393" endtime="20201110 08:34:54.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.400" level="INFO">VALUE: 0.037806472</msg>
<status status="PASS" starttime="20201110 08:34:54.398" endtime="20201110 08:34:54.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.386" endtime="20201110 08:34:54.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.415" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:54.413" endtime="20201110 08:34:54.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:54.420" level="INFO">VALUE: [0.047816, 0.057819153, 0.067820167, 0.077821333, 0.087822361, 0.0978235, 0.107824542, 0.117825681, 0.127826694, 0.137827875, 0.147828903, 0.157830028, 0.167831056, 0.177832236, 0.187833222, 0.197834389, 0.207835417, 0.217836653, 0.227837597, 0.237838792, 0.247839778, 0.257840944, 0.267841972, 0.277843097, 0.287844139, 0.297845278, 0.307846292, 0.317847472, 0.327848472, 0.337849639, 0.347850653, 0.357851833, 0.367852833, 0.377854, 0.387855042, 0.397856194, 0.407857194, 0.417858361, 0.427859389, 0.437860528, 0.447861639, 0.457862722, 0.467863736, 0.477864889, 0.487865903, 0.497867097, 0.507868097, 0.517869292, 0.527870319, 0.537871431, 0.547872486, 0.557873611, 0.567874639, 0.577875819, 0.587876819, 0.597877972, 0.607879, 0.617880153, 0.627881167, 0.637882361, 0.647883347, 0.6578845, 0.667885542, 0.677886694, 0.687887694, 0.697888861, 0.707889875, 0.717891056, 0.727892056, 0.737893222, 0.747894236, 0.757895403, 0.767896486, 0.777897569, 0.787898625, 0.797899792, 0.807900792, 0.817901931, 0.827902958, 0.837904111, 0.847905125, 0.857906292, 0.867907306, 0.877908472, 0.887909486, 0.897910653, 0.907911653, 0.917912819, 0.927913819, 0.937914986, 0.947915986, 0.957917153, 0.967918181, 0.977919306, 0.987920319, 0.997921472, 1.0079225, 1.017923653, 1.027924722, 1.037925819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:54.417" endtime="20201110 08:34:54.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.404" endtime="20201110 08:34:54.422"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.428" endtime="20201110 08:34:54.431"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:54.437" endtime="20201110 08:34:54.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.432" endtime="20201110 08:34:54.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.424" endtime="20201110 08:34:54.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:51.709" endtime="20201110 08:34:54.462"></status>
</kw>
<msg timestamp="20201110 08:34:54.462" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:54.483" endtime="20201110 08:34:56.595"></status>
</kw>
<msg timestamp="20201110 08:34:56.596" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 9233831, 'start-iter': 1, 'wakeups': [9243839, 9253840, 9263840, 92738...</msg>
<status status="PASS" starttime="20201110 08:34:54.480" endtime="20201110 08:34:56.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 9233831, 'start-iter': 1, 'wakeups': [9243839, 9253840, 9263840, 92738...</msg>
<status status="PASS" starttime="20201110 08:34:56.598" endtime="20201110 08:34:56.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.605" endtime="20201110 08:34:56.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.473" endtime="20201110 08:34:56.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.468" endtime="20201110 08:34:56.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:56.618" level="INFO">${RESULT} = {'timer-count': 1, 'wakeups': [9243839, 9253840, 9263840, 9273840, 9283840, 9293840, 9303840, 9313840, 9323840, 9333840, 9343840, 9353840, 9363840, 9373840, 9383840, 9393840, 9403840, 9413840, 9423840...</msg>
<status status="PASS" starttime="20201110 08:34:56.614" endtime="20201110 08:34:56.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.628" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:56.626" endtime="20201110 08:34:56.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.633" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:56.630" endtime="20201110 08:34:56.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.620" endtime="20201110 08:34:56.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.645" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:56.642" endtime="20201110 08:34:56.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.649" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:56.647" endtime="20201110 08:34:56.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.636" endtime="20201110 08:34:56.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.662" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:56.660" endtime="20201110 08:34:56.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.667" level="INFO">VALUE: 9233831</msg>
<status status="PASS" starttime="20201110 08:34:56.665" endtime="20201110 08:34:56.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.653" endtime="20201110 08:34:56.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.679" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:56.677" endtime="20201110 08:34:56.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:56.684" level="INFO">VALUE: [9243839, 9253840, 9263840, 9273840, 9283840, 9293840, 9303840, 9313840, 9323840, 9333840, 9343840, 9353840, 9363840, 9373840, 9383840, 9393840, 9403840, 9413840, 9423840, 9433840, 9443840, 9453840, 9463840, 9473840, 9483840, 9493840, 9503840, 9513840, 9523840, 9533840, 9543840, 9553840, 9563840, 9573840, 9583840, 9593840, 9603840, 9613840, 9623840, 9633840, 9643840, 9653840, 9663840, 9673840, 9683840, 9693840, 9703840, 9713840, 9723840, 9733840, 9743840, 9753840, 9763840, 9773840, 9783840, 9793840, 9803840, 9813840, 9823840, 9833840, 9843840, 9853840, 9863840, 9873840, 9883840, 9893840, 9903840, 9913840, 9923840, 9933840, 9943840, 9953840, 9963840, 9973840, 9983840, 9993840, 10003840, 10013840, 10023840, 10033840, 10043840, 10053840, 10063840, 10073840, 10083840, 10093840, 10103840, 10113840, 10123840, 10133840, 10143840, 10153840, 10163840, 10173840, 10183840, 10193840, 10203840, 10213840, 10223840, 10233840]</msg>
<status status="PASS" starttime="20201110 08:34:56.681" endtime="20201110 08:34:56.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.670" endtime="20201110 08:34:56.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:56.705" endtime="20201110 08:34:57.045"></status>
</kw>
<msg timestamp="20201110 08:34:57.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037913611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047923458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:56.699" endtime="20201110 08:34:57.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037913611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047923458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:34:57.054" endtime="20201110 08:34:57.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.071" endtime="20201110 08:34:57.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.692" endtime="20201110 08:34:57.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:56.687" endtime="20201110 08:34:57.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:57.133" level="INFO">${RESULT} = {'time': [0.037913611, 0.047923458, 0.057925611, 0.067926625, 0.077927792, 0.087928806, 0.097929958, 0.107930972, 0.117932139, 0.127933181, 0.137934306, 0.147935319, 0.157936486, 0.167937514, 0.177938...</msg>
<status status="PASS" starttime="20201110 08:34:57.079" endtime="20201110 08:34:57.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.144" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:34:57.141" endtime="20201110 08:34:57.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.148" level="INFO">VALUE: 0.037913611</msg>
<status status="PASS" starttime="20201110 08:34:57.146" endtime="20201110 08:34:57.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.135" endtime="20201110 08:34:57.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.162" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:57.159" endtime="20201110 08:34:57.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:57.166" level="INFO">VALUE: [0.047923458, 0.057925611, 0.067926625, 0.077927792, 0.087928806, 0.097929958, 0.107930972, 0.117932139, 0.127933181, 0.137934306, 0.147935319, 0.157936486, 0.167937514, 0.177938653, 0.187939667, 0.197940833, 0.207941889, 0.217943014, 0.227944028, 0.237945194, 0.247946222, 0.257947403, 0.267948361, 0.277949556, 0.287950542, 0.297951708, 0.307952722, 0.317953903, 0.327954889, 0.337956042, 0.347957069, 0.357958236, 0.367959236, 0.377960444, 0.387961417, 0.397962569, 0.407963597, 0.41796475, 0.427965764, 0.437966972, 0.447967944, 0.457969139, 0.467970125, 0.477971278, 0.487972319, 0.497973444, 0.507974472, 0.517975653, 0.527976653, 0.537977819, 0.547978833, 0.557979986, 0.567981, 0.577982153, 0.587983167, 0.597984347, 0.607985347, 0.6179865, 0.627987514, 0.637988681, 0.647989764, 0.657990847, 0.667991875, 0.677993028, 0.687994042, 0.697995208, 0.707996236, 0.717997403, 0.727998403, 0.737999625, 0.748000569, 0.758001736, 0.768002792, 0.778003903, 0.788004931, 0.798006097, 0.808007097, 0.818008278, 0.828009292, 0.838010444, 0.848011444, 0.858012611, 0.868013639, 0.878014833, 0.888015806, 0.898016958, 0.908018014, 0.918019181, 0.928020167, 0.938021333, 0.948022319, 0.958023486, 0.9680245, 0.978025667, 0.988026681, 0.998027847, 1.008028847, 1.018030014, 1.028031042, 1.038032181] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:57.164" endtime="20201110 08:34:57.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.152" endtime="20201110 08:34:57.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.176" endtime="20201110 08:34:57.179"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:57.185" endtime="20201110 08:34:57.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.180" endtime="20201110 08:34:57.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.171" endtime="20201110 08:34:57.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:54.464" endtime="20201110 08:34:57.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.940" endtime="20201110 08:34:57.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.938" endtime="20201110 08:34:57.211"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:34:57.217" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:57.238" endtime="20201110 08:34:59.345"></status>
</kw>
<msg timestamp="20201110 08:34:59.346" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11990395, 'start-iter': 1, 'wakeups': [12000410, 12010410, 12020410, 1...</msg>
<status status="PASS" starttime="20201110 08:34:57.235" endtime="20201110 08:34:59.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.353" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 11990395, 'start-iter': 1, 'wakeups': [12000410, 12010410, 12020410, 1...</msg>
<status status="PASS" starttime="20201110 08:34:59.348" endtime="20201110 08:34:59.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.355" endtime="20201110 08:34:59.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.228" endtime="20201110 08:34:59.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.222" endtime="20201110 08:34:59.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.368" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [12000410, 12010410, 12020410, 12030410, 12040410, 12050410, 12060410, 12070410, 12080410, 12090410, 12100410, 12110410, 12120410, 12130410, 12140410, 12150410, 12160410,...</msg>
<status status="PASS" starttime="20201110 08:34:59.364" endtime="20201110 08:34:59.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.379" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:34:59.376" endtime="20201110 08:34:59.379"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.383" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:34:59.381" endtime="20201110 08:34:59.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.370" endtime="20201110 08:34:59.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.395" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:34:59.393" endtime="20201110 08:34:59.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.400" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:34:59.397" endtime="20201110 08:34:59.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.387" endtime="20201110 08:34:59.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.412" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:59.410" endtime="20201110 08:34:59.413"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.416" level="INFO">VALUE: 11990395</msg>
<status status="PASS" starttime="20201110 08:34:59.414" endtime="20201110 08:34:59.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.403" endtime="20201110 08:34:59.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.429" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:59.426" endtime="20201110 08:34:59.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.434" level="INFO">VALUE: [12000410, 12010410, 12020410, 12030410, 12040410, 12050410, 12060410, 12070410, 12080410, 12090410, 12100410, 12110410, 12120410, 12130410, 12140410, 12150410, 12160410, 12170410, 12180410, 12190410, 12200410, 12210410, 12220410, 12230410, 12240410, 12250410, 12260410, 12270410, 12280410, 12290410, 12300410, 12310410, 12320410, 12330410, 12340410, 12350410, 12360410, 12370410, 12380410, 12390410, 12400410, 12410410, 12420410, 12430410, 12440410, 12450410, 12460410, 12470410, 12480410, 12490410, 12500410, 12510410, 12520410, 12530410, 12540410, 12550410, 12560410, 12570410, 12580410, 12590410, 12600410, 12610410, 12620410, 12630410, 12640410, 12650410, 12660410, 12670410, 12680410, 12690410, 12700410, 12710410, 12720410, 12730410, 12740410, 12750410, 12760410, 12770410, 12780410, 12790410, 12800410, 12810410, 12820410, 12830410, 12840410, 12850410, 12860410, 12870410, 12880410, 12890410, 12900410, 12910410, 12920410, 12930410, 12940410, 12950410, 12960410, 12970410, 12980410, 12990410]</msg>
<status status="PASS" starttime="20201110 08:34:59.431" endtime="20201110 08:34:59.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.420" endtime="20201110 08:34:59.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.453" endtime="20201110 08:34:59.796"></status>
</kw>
<msg timestamp="20201110 08:34:59.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04646325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056480583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:59.450" endtime="20201110 08:34:59.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04646325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056480583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:34:59.804" endtime="20201110 08:34:59.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.821" endtime="20201110 08:34:59.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.443" endtime="20201110 08:34:59.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.438" endtime="20201110 08:34:59.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:34:59.884" level="INFO">${RESULT} = {'time': [0.04646325, 0.056480583, 0.066481806, 0.076482764, 0.086483903, 0.096484917, 0.106486097, 0.116487097, 0.12648825, 0.136489264, 0.146490444, 0.156491444, 0.166492597, 0.176493611, 0.18649476...</msg>
<status status="PASS" starttime="20201110 08:34:59.830" endtime="20201110 08:34:59.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.894" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:34:59.892" endtime="20201110 08:34:59.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.899" level="INFO">VALUE: 0.04646325</msg>
<status status="PASS" starttime="20201110 08:34:59.897" endtime="20201110 08:34:59.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.886" endtime="20201110 08:34:59.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.912" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:34:59.910" endtime="20201110 08:34:59.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:34:59.917" level="INFO">VALUE: [0.056480583, 0.066481806, 0.076482764, 0.086483903, 0.096484917, 0.106486097, 0.116487097, 0.12648825, 0.136489264, 0.146490444, 0.156491444, 0.166492597, 0.176493611, 0.186494764, 0.196495778, 0.206496931, 0.216497944, 0.226499111, 0.236500125, 0.246501292, 0.256502292, 0.2665035, 0.276504472, 0.286505639, 0.296506639, 0.306507792, 0.316508819, 0.326509972, 0.336511028, 0.346512194, 0.356513167, 0.366514333, 0.376515333, 0.386516486, 0.3965175, 0.406518653, 0.416519667, 0.426520819, 0.436521833, 0.446522986, 0.456523986, 0.466525139, 0.476526167, 0.486527319, 0.496528333, 0.506529486, 0.516530486, 0.526531667, 0.536532653, 0.546533819, 0.556534833, 0.566535986, 0.576536986, 0.586538153, 0.596539167, 0.606540306, 0.616541319, 0.626542472, 0.636543486, 0.646544639, 0.656545653, 0.666546819, 0.676547819, 0.686548972, 0.696550028, 0.706551139, 0.716552181, 0.726553306, 0.736554319, 0.746555472, 0.756556528, 0.766557653, 0.776558653, 0.786559806, 0.796560847, 0.806561972, 0.816562986, 0.826564139, 0.836565153, 0.846566306, 0.856567347, 0.866568472, 0.876569486, 0.886570653, 0.896571708, 0.906572806, 0.916573819, 0.926574972, 0.936575986, 0.946577139, 0.956578167, 0.966579306, 0.976580333, 0.986581472, 0.9965825, 1.006583667, 1.016584681, 1.026585847, 1.036586875, 1.046588014] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:34:59.914" endtime="20201110 08:34:59.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.902" endtime="20201110 08:34:59.919"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.925" endtime="20201110 08:34:59.928"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:34:59.934" endtime="20201110 08:34:59.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.929" endtime="20201110 08:34:59.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.921" endtime="20201110 08:34:59.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.219" endtime="20201110 08:34:59.960"></status>
</kw>
<msg timestamp="20201110 08:34:59.960" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:34:59.981" endtime="20201110 08:35:02.086"></status>
</kw>
<msg timestamp="20201110 08:35:02.088" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14731705, 'start-iter': 1, 'wakeups': [14741720, 14751720, 14761720, 1...</msg>
<status status="PASS" starttime="20201110 08:34:59.978" endtime="20201110 08:35:02.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.095" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14731705, 'start-iter': 1, 'wakeups': [14741720, 14751720, 14761720, 1...</msg>
<status status="PASS" starttime="20201110 08:35:02.090" endtime="20201110 08:35:02.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.097" endtime="20201110 08:35:02.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.971" endtime="20201110 08:35:02.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.965" endtime="20201110 08:35:02.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.110" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [14741720, 14751720, 14761720, 14771720, 14781720, 14791720, 14801720, 14811720, 14821720, 14831720, 14841720, 14851720, 14861720, 14871720, 14881720, 14891720, 14901720,...</msg>
<status status="PASS" starttime="20201110 08:35:02.105" endtime="20201110 08:35:02.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.120" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:02.118" endtime="20201110 08:35:02.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.125" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:02.123" endtime="20201110 08:35:02.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.112" endtime="20201110 08:35:02.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.137" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:02.135" endtime="20201110 08:35:02.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.141" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:02.139" endtime="20201110 08:35:02.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.128" endtime="20201110 08:35:02.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.156" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:02.153" endtime="20201110 08:35:02.156"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.160" level="INFO">VALUE: 14731705</msg>
<status status="PASS" starttime="20201110 08:35:02.158" endtime="20201110 08:35:02.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.145" endtime="20201110 08:35:02.163"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.172" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:02.170" endtime="20201110 08:35:02.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.177" level="INFO">VALUE: [14741720, 14751720, 14761720, 14771720, 14781720, 14791720, 14801720, 14811720, 14821720, 14831720, 14841720, 14851720, 14861720, 14871720, 14881720, 14891720, 14901720, 14911720, 14921720, 14931720, 14941720, 14951720, 14961720, 14971720, 14981720, 14991720, 15001720, 15011720, 15021720, 15031720, 15041720, 15051720, 15061720, 15071720, 15081720, 15091720, 15101720, 15111720, 15121720, 15131720, 15141720, 15151720, 15161720, 15171720, 15181720, 15191720, 15201720, 15211720, 15221720, 15231720, 15241720, 15251720, 15261720, 15271720, 15281720, 15291720, 15301720, 15311720, 15321720, 15331720, 15341720, 15351720, 15361720, 15371720, 15381720, 15391720, 15401720, 15411720, 15421720, 15431720, 15441720, 15451720, 15461720, 15471720, 15481720, 15491720, 15501720, 15511720, 15521720, 15531720, 15541720, 15551720, 15561720, 15571720, 15581720, 15591720, 15601720, 15611720, 15621720, 15631720, 15641720, 15651720, 15661720, 15671720, 15681720, 15691720, 15701720, 15711720, 15721720, 15731720]</msg>
<status status="PASS" starttime="20201110 08:35:02.175" endtime="20201110 08:35:02.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.164" endtime="20201110 08:35:02.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.197" endtime="20201110 08:35:02.538"></status>
</kw>
<msg timestamp="20201110 08:35:02.544" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038781694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048799028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.194" endtime="20201110 08:35:02.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038781694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048799028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:02.547" endtime="20201110 08:35:02.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.564" endtime="20201110 08:35:02.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.186" endtime="20201110 08:35:02.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.181" endtime="20201110 08:35:02.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:02.626" level="INFO">${RESULT} = {'time': [0.038781694, 0.048799028, 0.058800181, 0.068801208, 0.078802375, 0.088803417, 0.098804583, 0.108805556, 0.118806722, 0.128807736, 0.138808917, 0.148809917, 0.158811083, 0.168812097, 0.178813...</msg>
<status status="PASS" starttime="20201110 08:35:02.572" endtime="20201110 08:35:02.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.637" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:02.635" endtime="20201110 08:35:02.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.641" level="INFO">VALUE: 0.038781694</msg>
<status status="PASS" starttime="20201110 08:35:02.639" endtime="20201110 08:35:02.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.628" endtime="20201110 08:35:02.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.655" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:02.652" endtime="20201110 08:35:02.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:02.659" level="INFO">VALUE: [0.048799028, 0.058800181, 0.068801208, 0.078802375, 0.088803417, 0.098804583, 0.108805556, 0.118806722, 0.128807736, 0.138808917, 0.148809917, 0.158811083, 0.168812097, 0.178813278, 0.188814278, 0.198815444, 0.208816458, 0.218817653, 0.228818639, 0.238819792, 0.248820833, 0.258821986, 0.268823, 0.278824153, 0.288825194, 0.298826333, 0.308827375, 0.318828528, 0.328829556, 0.338830694, 0.348831722, 0.358832875, 0.368833903, 0.378835056, 0.388836097, 0.39883725, 0.408838264, 0.418839431, 0.428840458, 0.438841597, 0.448842625, 0.458843778, 0.468844806, 0.478845958, 0.488846986, 0.498848167, 0.508849167, 0.518850361, 0.528851347, 0.538852514, 0.548853542, 0.558854681, 0.568855708, 0.578856875, 0.588857889, 0.598859069, 0.608860083, 0.618861222, 0.628862264, 0.638863403, 0.648864431, 0.658865597, 0.668866653, 0.678867778, 0.688868792, 0.698869972, 0.708870972, 0.718872153, 0.728873153, 0.738874319, 0.748875347, 0.7588765, 0.768877528, 0.778878694, 0.788879694, 0.798880875, 0.808881875, 0.818883042, 0.828884083, 0.838885236, 0.848886292, 0.858887403, 0.868888431, 0.878889583, 0.888890597, 0.898891764, 0.908892778, 0.918893944, 0.928894958, 0.938896139, 0.948897153, 0.958898319, 0.968899319, 0.978900486, 0.9889015, 0.998902667, 1.008903681, 1.018904861, 1.028905903, 1.038907028] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:02.657" endtime="20201110 08:35:02.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.645" endtime="20201110 08:35:02.661"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.668" endtime="20201110 08:35:02.672"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:02.677" endtime="20201110 08:35:02.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.673" endtime="20201110 08:35:02.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.663" endtime="20201110 08:35:02.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:59.962" endtime="20201110 08:35:02.703"></status>
</kw>
<msg timestamp="20201110 08:35:02.703" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:02.724" endtime="20201110 08:35:04.830"></status>
</kw>
<msg timestamp="20201110 08:35:04.831" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 17474514, 'start-iter': 1, 'wakeups': [17484530, 17494529, 17504529, 1...</msg>
<status status="PASS" starttime="20201110 08:35:02.721" endtime="20201110 08:35:04.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.845" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 17474514, 'start-iter': 1, 'wakeups': [17484530, 17494529, 17504529, 1...</msg>
<status status="PASS" starttime="20201110 08:35:04.840" endtime="20201110 08:35:04.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.847" endtime="20201110 08:35:04.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.713" endtime="20201110 08:35:04.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.708" endtime="20201110 08:35:04.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:04.860" level="INFO">${RESULT} = {'timer-count': 2, 'wakeups': [17484530, 17494529, 17504529, 17514529, 17524529, 17534529, 17544529, 17554529, 17564529, 17574529, 17584529, 17594529, 17604529, 17614529, 17624529, 17634529, 17644529,...</msg>
<status status="PASS" starttime="20201110 08:35:04.856" endtime="20201110 08:35:04.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.870" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:04.868" endtime="20201110 08:35:04.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.875" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:04.873" endtime="20201110 08:35:04.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.862" endtime="20201110 08:35:04.877"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.887" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:04.885" endtime="20201110 08:35:04.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.892" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:04.889" endtime="20201110 08:35:04.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.878" endtime="20201110 08:35:04.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.904" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:04.902" endtime="20201110 08:35:04.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.908" level="INFO">VALUE: 17474514</msg>
<status status="PASS" starttime="20201110 08:35:04.906" endtime="20201110 08:35:04.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.895" endtime="20201110 08:35:04.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.921" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:04.919" endtime="20201110 08:35:04.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:04.926" level="INFO">VALUE: [17484530, 17494529, 17504529, 17514529, 17524529, 17534529, 17544529, 17554529, 17564529, 17574529, 17584529, 17594529, 17604529, 17614529, 17624529, 17634529, 17644529, 17654529, 17664529, 17674529, 17684529, 17694529, 17704529, 17714529, 17724529, 17734529, 17744529, 17754529, 17764529, 17774529, 17784529, 17794529, 17804529, 17814529, 17824529, 17834529, 17844529, 17854529, 17864529, 17874529, 17884529, 17894529, 17904529, 17914529, 17924529, 17934529, 17944529, 17954529, 17964529, 17974529, 17984529, 17994529, 18004529, 18014529, 18024529, 18034529, 18044529, 18054529, 18064529, 18074529, 18084529, 18094529, 18104529, 18114529, 18124529, 18134529, 18144529, 18154529, 18164529, 18174529, 18184529, 18194529, 18204529, 18214529, 18224529, 18234529, 18244529, 18254529, 18264529, 18274529, 18284529, 18294529, 18304529, 18314529, 18324529, 18334529, 18344529, 18354529, 18364529, 18374529, 18384529, 18394529, 18404529, 18414529, 18424529, 18434529, 18444529, 18454529, 18464529, 18474529]</msg>
<status status="PASS" starttime="20201110 08:35:04.923" endtime="20201110 08:35:04.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.912" endtime="20201110 08:35:04.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:04.945" endtime="20201110 08:35:05.289"></status>
</kw>
<msg timestamp="20201110 08:35:05.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037879569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047897556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:04.941" endtime="20201110 08:35:05.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037879569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047897556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:05.298" endtime="20201110 08:35:05.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.316" endtime="20201110 08:35:05.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.934" endtime="20201110 08:35:05.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:04.929" endtime="20201110 08:35:05.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:05.377" level="INFO">${RESULT} = {'time': [0.037879569, 0.047897556, 0.057897722, 0.067898736, 0.077899903, 0.087900931, 0.097902139, 0.107903097, 0.11790425, 0.127905264, 0.137906417, 0.147907444, 0.157908597, 0.167909625, 0.1779107...</msg>
<status status="PASS" starttime="20201110 08:35:05.324" endtime="20201110 08:35:05.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.388" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:35:05.386" endtime="20201110 08:35:05.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.392" level="INFO">VALUE: 0.037879569</msg>
<status status="PASS" starttime="20201110 08:35:05.390" endtime="20201110 08:35:05.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.379" endtime="20201110 08:35:05.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.406" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:05.403" endtime="20201110 08:35:05.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:05.410" level="INFO">VALUE: [0.047897556, 0.057897722, 0.067898736, 0.077899903, 0.087900931, 0.097902139, 0.107903097, 0.11790425, 0.127905264, 0.137906417, 0.147907444, 0.157908597, 0.167909625, 0.177910792, 0.187911792, 0.197912972, 0.207913986, 0.217915139, 0.227916167, 0.237917306, 0.247918333, 0.257919486, 0.267920514, 0.277921667, 0.287922694, 0.297923847, 0.307924861, 0.317926042, 0.327927042, 0.337928208, 0.347929222, 0.357930375, 0.367931444, 0.377932569, 0.387933639, 0.397934736, 0.407935764, 0.417936917, 0.427937931, 0.437939097, 0.447940111, 0.457941278, 0.467942306, 0.477943472, 0.487944486, 0.497945653, 0.507946653, 0.517947819, 0.527948833, 0.537950028, 0.547951028, 0.557952167, 0.567953194, 0.577954361, 0.587955375, 0.597956528, 0.607957542, 0.617958708, 0.627959722, 0.637960931, 0.647961903, 0.657963069, 0.667964083, 0.67796525, 0.687966264, 0.697967431, 0.707968444, 0.717969597, 0.727970639, 0.737971806, 0.747972792, 0.757973958, 0.767974972, 0.777976153, 0.787977153, 0.797978333, 0.807979361, 0.817980514, 0.827981514, 0.837982667, 0.847983694, 0.857984917, 0.867985875, 0.877987056, 0.887988056, 0.897989208, 0.907990222, 0.917991389, 0.927992417, 0.937993569, 0.947994583, 0.95799575, 0.967996764, 0.977998, 0.987998958, 0.998000097, 1.008001125, 1.018002292, 1.028003361, 1.038004472] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:05.408" endtime="20201110 08:35:05.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.396" endtime="20201110 08:35:05.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.419" endtime="20201110 08:35:05.421"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:05.427" endtime="20201110 08:35:05.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.423" endtime="20201110 08:35:05.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.414" endtime="20201110 08:35:05.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:02.705" endtime="20201110 08:35:05.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.214" endtime="20201110 08:35:05.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:57.212" endtime="20201110 08:35:05.454"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:05.460" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:05.482" endtime="20201110 08:35:07.589"></status>
</kw>
<msg timestamp="20201110 08:35:07.590" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20233955, 'start-iter': 1, 'wakeups': [20243980, 20253979, 20263979, 2...</msg>
<status status="PASS" starttime="20201110 08:35:05.478" endtime="20201110 08:35:07.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.597" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20233955, 'start-iter': 1, 'wakeups': [20243980, 20253979, 20263979, 2...</msg>
<status status="PASS" starttime="20201110 08:35:07.592" endtime="20201110 08:35:07.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.599" endtime="20201110 08:35:07.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.470" endtime="20201110 08:35:07.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.465" endtime="20201110 08:35:07.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:07.613" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [20243980, 20253979, 20263979, 20273979, 20283979, 20293979, 20303979, 20313979, 20323979, 20333979, 20343979, 20353979, 20363979, 20373979, 20383979, 20393979, 20403979,...</msg>
<status status="PASS" starttime="20201110 08:35:07.608" endtime="20201110 08:35:07.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.623" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:07.621" endtime="20201110 08:35:07.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.628" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:07.626" endtime="20201110 08:35:07.629"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.615" endtime="20201110 08:35:07.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.640" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:07.638" endtime="20201110 08:35:07.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.645" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:07.642" endtime="20201110 08:35:07.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.631" endtime="20201110 08:35:07.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.656" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:07.655" endtime="20201110 08:35:07.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.659" level="INFO">VALUE: 20233955</msg>
<status status="PASS" starttime="20201110 08:35:07.658" endtime="20201110 08:35:07.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.648" endtime="20201110 08:35:07.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.664" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:07.663" endtime="20201110 08:35:07.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:07.667" level="INFO">VALUE: [20243980, 20253979, 20263979, 20273979, 20283979, 20293979, 20303979, 20313979, 20323979, 20333979, 20343979, 20353979, 20363979, 20373979, 20383979, 20393979, 20403979, 20413979, 20423979, 20433979, 20443979, 20453979, 20463979, 20473979, 20483979, 20493979, 20503979, 20513979, 20523979, 20533979, 20543979, 20553979, 20563979, 20573979, 20583979, 20593979, 20603979, 20613979, 20623979, 20633979, 20643979, 20653979, 20663979, 20673979, 20683979, 20693979, 20703979, 20713979, 20723979, 20733979, 20743979, 20753979, 20763979, 20773979, 20783979, 20793979, 20803979, 20813979, 20823979, 20833979, 20843979, 20853979, 20863979, 20873979, 20883979, 20893979, 20903979, 20913979, 20923979, 20933979, 20943979, 20953979, 20963979, 20973979, 20983979, 20993979, 21003979, 21013979, 21023979, 21033979, 21043979, 21053979, 21063979, 21073979, 21083979, 21093979, 21103979, 21113979, 21123979, 21133979, 21143979, 21153979, 21163979, 21173979, 21183979, 21193979, 21203979, 21213979, 21223979, 21233979]</msg>
<status status="PASS" starttime="20201110 08:35:07.666" endtime="20201110 08:35:07.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.660" endtime="20201110 08:35:07.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:07.676" endtime="20201110 08:35:08.011"></status>
</kw>
<msg timestamp="20201110 08:35:08.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047750667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057777361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:07.674" endtime="20201110 08:35:08.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047750667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057777361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:08.020" endtime="20201110 08:35:08.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.038" endtime="20201110 08:35:08.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.671" endtime="20201110 08:35:08.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:07.668" endtime="20201110 08:35:08.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:08.107" level="INFO">${RESULT} = {'time': [0.047750667, 0.057777361, 0.067778403, 0.077779444, 0.087780611, 0.097781569, 0.107782736, 0.117783764, 0.127784986, 0.137785917, 0.147787083, 0.157788097, 0.16778925, 0.177790264, 0.1877914...</msg>
<status status="PASS" starttime="20201110 08:35:08.047" endtime="20201110 08:35:08.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.119" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:08.117" endtime="20201110 08:35:08.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.124" level="INFO">VALUE: 0.047750667</msg>
<status status="PASS" starttime="20201110 08:35:08.121" endtime="20201110 08:35:08.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.110" endtime="20201110 08:35:08.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.138" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:08.136" endtime="20201110 08:35:08.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:08.143" level="INFO">VALUE: [0.057777361, 0.067778403, 0.077779444, 0.087780611, 0.097781569, 0.107782736, 0.117783764, 0.127784986, 0.137785917, 0.147787083, 0.157788097, 0.16778925, 0.177790264, 0.187791444, 0.197792444, 0.207793597, 0.217794625, 0.227795778, 0.237796806, 0.247797958, 0.257798958, 0.267800139, 0.277801139, 0.287802292, 0.297803319, 0.307804542, 0.317805486, 0.327806639, 0.337807667, 0.347808819, 0.357809847, 0.367811014, 0.377812028, 0.387813167, 0.397814194, 0.407815347, 0.417816361, 0.427817528, 0.437818542, 0.447819694, 0.457820722, 0.467821875, 0.477822889, 0.487824056, 0.497825069, 0.507826236, 0.51782725, 0.527828389, 0.537829444, 0.547830569, 0.557831639, 0.56783275, 0.577833764, 0.587834917, 0.597836, 0.607837097, 0.617838125, 0.627839264, 0.637840292, 0.647841444, 0.657842458, 0.667843639, 0.677844653, 0.687845861, 0.697846806, 0.707847972, 0.717848986, 0.727850139, 0.737851181, 0.747852319, 0.757853361, 0.767854556, 0.777855556, 0.787856681, 0.797857694, 0.807858861, 0.817859917, 0.827861028, 0.837862042, 0.847863194, 0.857864222, 0.867865375, 0.877866389, 0.887867542, 0.897868569, 0.907869722, 0.91787075, 0.927871889, 0.937872944, 0.947874069, 0.957875083, 0.96787625, 0.977877278, 0.987878417, 0.997879486, 1.007880611, 1.017881625, 1.027882764, 1.037883792, 1.047884944] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:08.141" endtime="20201110 08:35:08.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.128" endtime="20201110 08:35:08.147"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.153" endtime="20201110 08:35:08.156"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:08.162" endtime="20201110 08:35:08.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.158" endtime="20201110 08:35:08.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.149" endtime="20201110 08:35:08.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.461" endtime="20201110 08:35:08.188"></status>
</kw>
<msg timestamp="20201110 08:35:08.189" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:08.211" endtime="20201110 08:35:10.316"></status>
</kw>
<msg timestamp="20201110 08:35:10.318" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22961883, 'start-iter': 1, 'wakeups': [22971909, 22981907, 22991907, 2...</msg>
<status status="PASS" starttime="20201110 08:35:08.208" endtime="20201110 08:35:10.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.325" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 22961883, 'start-iter': 1, 'wakeups': [22971909, 22981907, 22991907, 2...</msg>
<status status="PASS" starttime="20201110 08:35:10.320" endtime="20201110 08:35:10.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.328" endtime="20201110 08:35:10.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.200" endtime="20201110 08:35:10.333"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.194" endtime="20201110 08:35:10.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.342" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [22971909, 22981907, 22991907, 23001907, 23011907, 23021907, 23031907, 23041907, 23051907, 23061907, 23071907, 23081907, 23091907, 23101907, 23111907, 23121907, 23131907,...</msg>
<status status="PASS" starttime="20201110 08:35:10.337" endtime="20201110 08:35:10.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.355" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:10.351" endtime="20201110 08:35:10.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.361" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:10.358" endtime="20201110 08:35:10.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.345" endtime="20201110 08:35:10.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.376" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:10.373" endtime="20201110 08:35:10.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.380" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:10.378" endtime="20201110 08:35:10.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.366" endtime="20201110 08:35:10.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.396" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:10.393" endtime="20201110 08:35:10.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.401" level="INFO">VALUE: 22961883</msg>
<status status="PASS" starttime="20201110 08:35:10.398" endtime="20201110 08:35:10.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.386" endtime="20201110 08:35:10.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.414" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:10.411" endtime="20201110 08:35:10.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.419" level="INFO">VALUE: [22971909, 22981907, 22991907, 23001907, 23011907, 23021907, 23031907, 23041907, 23051907, 23061907, 23071907, 23081907, 23091907, 23101907, 23111907, 23121907, 23131907, 23141907, 23151907, 23161907, 23171907, 23181907, 23191907, 23201907, 23211907, 23221907, 23231907, 23241907, 23251907, 23261907, 23271907, 23281907, 23291907, 23301907, 23311907, 23321907, 23331907, 23341907, 23351907, 23361907, 23371907, 23381907, 23391907, 23401907, 23411907, 23421907, 23431907, 23441907, 23451907, 23461907, 23471907, 23481907, 23491907, 23501907, 23511907, 23521907, 23531907, 23541907, 23551907, 23561907, 23571907, 23581907, 23591907, 23601907, 23611907, 23621907, 23631907, 23641907, 23651907, 23661907, 23671907, 23681907, 23691907, 23701907, 23711907, 23721907, 23731907, 23741907, 23751907, 23761907, 23771907, 23781907, 23791907, 23801907, 23811907, 23821907, 23831907, 23841907, 23851907, 23861907, 23871907, 23881907, 23891907, 23901907, 23911907, 23921907, 23931907, 23941907, 23951907, 23961907]</msg>
<status status="PASS" starttime="20201110 08:35:10.417" endtime="20201110 08:35:10.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.405" endtime="20201110 08:35:10.422"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.440" endtime="20201110 08:35:10.776"></status>
</kw>
<msg timestamp="20201110 08:35:10.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040572319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050599347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.436" endtime="20201110 08:35:10.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040572319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050599347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:10.784" endtime="20201110 08:35:10.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.802" endtime="20201110 08:35:10.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.428" endtime="20201110 08:35:10.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.423" endtime="20201110 08:35:10.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:10.863" level="INFO">${RESULT} = {'time': [0.040572319, 0.050599347, 0.060599375, 0.070600403, 0.080601542, 0.090602569, 0.10060375, 0.110604736, 0.120605903, 0.130606903, 0.140608056, 0.150609083, 0.160610236, 0.17061125, 0.18061240...</msg>
<status status="PASS" starttime="20201110 08:35:10.810" endtime="20201110 08:35:10.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.874" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:10.871" endtime="20201110 08:35:10.874"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.878" level="INFO">VALUE: 0.040572319</msg>
<status status="PASS" starttime="20201110 08:35:10.876" endtime="20201110 08:35:10.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.865" endtime="20201110 08:35:10.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.893" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:10.891" endtime="20201110 08:35:10.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:10.898" level="INFO">VALUE: [0.050599347, 0.060599375, 0.070600403, 0.080601542, 0.090602569, 0.10060375, 0.110604736, 0.120605903, 0.130606903, 0.140608056, 0.150609083, 0.160610236, 0.17061125, 0.180612403, 0.190613486, 0.200614583, 0.210615583, 0.220616792, 0.230617764, 0.240618917, 0.250619944, 0.260621097, 0.270622125, 0.280623264, 0.290624278, 0.300625431, 0.310626444, 0.320627611, 0.330628694, 0.340629792, 0.350630792, 0.360631958, 0.370632972, 0.380634139, 0.390635139, 0.400636306, 0.410637319, 0.420638472, 0.430639486, 0.440640667, 0.450641667, 0.460642819, 0.470643833, 0.480645, 0.490646028, 0.500647167, 0.510648194, 0.520649347, 0.530650361, 0.540651528, 0.550652569, 0.560653681, 0.570654708, 0.580655861, 0.590656875, 0.600658028, 0.610659056, 0.620660222, 0.63066125, 0.640662403, 0.650663403, 0.660664569, 0.670665569, 0.680666736, 0.69066775, 0.700668903, 0.710669917, 0.720671069, 0.730672111, 0.740673264, 0.750674292, 0.760675417, 0.770676458, 0.780677653, 0.790678625, 0.800679764, 0.810680792, 0.820681944, 0.830682958, 0.840684194, 0.850685153, 0.860686292, 0.870687306, 0.880688458, 0.890689472, 0.900690667, 0.910691653, 0.920692806, 0.930693819, 0.940695, 0.950696014, 0.960697167, 0.970698181, 0.980699333, 0.990700347, 1.000701556, 1.010702514, 1.020703681, 1.030704694, 1.040705861] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:10.896" endtime="20201110 08:35:10.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.883" endtime="20201110 08:35:10.901"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.907" endtime="20201110 08:35:10.910"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:10.915" endtime="20201110 08:35:10.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.911" endtime="20201110 08:35:10.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.902" endtime="20201110 08:35:10.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:08.190" endtime="20201110 08:35:10.941"></status>
</kw>
<msg timestamp="20201110 08:35:10.941" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:10.962" endtime="20201110 08:35:13.068"></status>
</kw>
<msg timestamp="20201110 08:35:13.069" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 25712319, 'start-iter': 1, 'wakeups': [25722345, 25732343, 25742343, 2...</msg>
<status status="PASS" starttime="20201110 08:35:10.959" endtime="20201110 08:35:13.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.076" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 25712319, 'start-iter': 1, 'wakeups': [25722345, 25732343, 25742343, 2...</msg>
<status status="PASS" starttime="20201110 08:35:13.071" endtime="20201110 08:35:13.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.078" endtime="20201110 08:35:13.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.951" endtime="20201110 08:35:13.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.946" endtime="20201110 08:35:13.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.091" level="INFO">${RESULT} = {'timer-count': 3, 'wakeups': [25722345, 25732343, 25742343, 25752343, 25762343, 25772343, 25782343, 25792343, 25802343, 25812343, 25822343, 25832343, 25842343, 25852343, 25862343, 25872343, 25882343,...</msg>
<status status="PASS" starttime="20201110 08:35:13.087" endtime="20201110 08:35:13.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.101" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:13.099" endtime="20201110 08:35:13.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.106" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:13.104" endtime="20201110 08:35:13.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.093" endtime="20201110 08:35:13.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.118" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:13.116" endtime="20201110 08:35:13.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.123" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:13.120" endtime="20201110 08:35:13.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.109" endtime="20201110 08:35:13.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.136" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:13.132" endtime="20201110 08:35:13.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.140" level="INFO">VALUE: 25712319</msg>
<status status="PASS" starttime="20201110 08:35:13.138" endtime="20201110 08:35:13.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.126" endtime="20201110 08:35:13.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.152" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:13.150" endtime="20201110 08:35:13.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.157" level="INFO">VALUE: [25722345, 25732343, 25742343, 25752343, 25762343, 25772343, 25782343, 25792343, 25802343, 25812343, 25822343, 25832343, 25842343, 25852343, 25862343, 25872343, 25882343, 25892343, 25902343, 25912343, 25922343, 25932343, 25942343, 25952343, 25962343, 25972343, 25982343, 25992343, 26002343, 26012343, 26022343, 26032343, 26042343, 26052343, 26062343, 26072343, 26082343, 26092343, 26102343, 26112343, 26122343, 26132343, 26142343, 26152343, 26162343, 26172343, 26182343, 26192343, 26202343, 26212343, 26222343, 26232343, 26242343, 26252343, 26262343, 26272343, 26282343, 26292343, 26302343, 26312343, 26322343, 26332343, 26342343, 26352343, 26362343, 26372343, 26382343, 26392343, 26402343, 26412343, 26422343, 26432343, 26442343, 26452343, 26462343, 26472343, 26482343, 26492343, 26502343, 26512343, 26522343, 26532343, 26542343, 26552343, 26562343, 26572343, 26582343, 26592343, 26602343, 26612343, 26622343, 26632343, 26642343, 26652343, 26662343, 26672343, 26682343, 26692343, 26702343, 26712343]</msg>
<status status="PASS" starttime="20201110 08:35:13.155" endtime="20201110 08:35:13.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.144" endtime="20201110 08:35:13.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.178" endtime="20201110 08:35:13.519"></status>
</kw>
<msg timestamp="20201110 08:35:13.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048107861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.175" endtime="20201110 08:35:13.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048107861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:13.528" endtime="20201110 08:35:13.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.545" endtime="20201110 08:35:13.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.166" endtime="20201110 08:35:13.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.161" endtime="20201110 08:35:13.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:13.606" level="INFO">${RESULT} = {'time': [0.038080819, 0.048107861, 0.058107861, 0.068108875, 0.078110042, 0.088111069, 0.098112236, 0.10811325, 0.118114403, 0.128115431, 0.138116583, 0.148117625, 0.158118764, 0.168119792, 0.1781209...</msg>
<status status="PASS" starttime="20201110 08:35:13.553" endtime="20201110 08:35:13.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.617" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:35:13.615" endtime="20201110 08:35:13.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.621" level="INFO">VALUE: 0.038080819</msg>
<status status="PASS" starttime="20201110 08:35:13.619" endtime="20201110 08:35:13.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.608" endtime="20201110 08:35:13.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.634" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:13.632" endtime="20201110 08:35:13.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:13.639" level="INFO">VALUE: [0.048107861, 0.058107861, 0.068108875, 0.078110042, 0.088111069, 0.098112236, 0.10811325, 0.118114403, 0.128115431, 0.138116583, 0.148117625, 0.158118764, 0.168119792, 0.178120958, 0.188121972, 0.198123125, 0.208124153, 0.218125319, 0.228126333, 0.238127528, 0.248128514, 0.258129681, 0.268130708, 0.278131875, 0.288132889, 0.298134056, 0.308135097, 0.318136222, 0.32813725, 0.338138417, 0.348139444, 0.358140597, 0.368141625, 0.378142778, 0.388143819, 0.398144958, 0.408145986, 0.418147153, 0.428148167, 0.438149347, 0.448150347, 0.458151528, 0.468152528, 0.478153694, 0.488154736, 0.498155875, 0.508156917, 0.518158069, 0.528159097, 0.53816025, 0.548161264, 0.558162431, 0.568163458, 0.578164611, 0.588165639, 0.598166806, 0.608167889, 0.618168986, 0.62817, 0.638171167, 0.648172181, 0.658173347, 0.668174375, 0.678175528, 0.688176583, 0.698177708, 0.708178722, 0.718179875, 0.728180903, 0.738182069, 0.748183069, 0.758184236, 0.76818525, 0.778186389, 0.788187417, 0.798188569, 0.808189597, 0.81819075, 0.828191764, 0.838192917, 0.848193944, 0.858195083, 0.868196097, 0.878197264, 0.888198292, 0.898199431, 0.908200458, 0.918201625, 0.928202625, 0.938203778, 0.948204806, 0.958206028, 0.968206972, 0.978208139, 0.988209167, 0.998210306, 1.008211333, 1.018212514, 1.028213528, 1.038214667] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:13.637" endtime="20201110 08:35:13.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.625" endtime="20201110 08:35:13.642"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.649" endtime="20201110 08:35:13.651"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:13.657" endtime="20201110 08:35:13.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.652" endtime="20201110 08:35:13.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.644" endtime="20201110 08:35:13.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:10.942" endtime="20201110 08:35:13.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.456" endtime="20201110 08:35:13.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:05.455" endtime="20201110 08:35:13.683"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:13.689" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:13.712" endtime="20201110 08:35:15.818"></status>
</kw>
<msg timestamp="20201110 08:35:15.819" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28462755, 'start-iter': 1, 'wakeups': [28472791, 28482790, 28492790, 2...</msg>
<status status="PASS" starttime="20201110 08:35:13.709" endtime="20201110 08:35:15.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.827" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28462755, 'start-iter': 1, 'wakeups': [28472791, 28482790, 28492790, 2...</msg>
<status status="PASS" starttime="20201110 08:35:15.822" endtime="20201110 08:35:15.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.829" endtime="20201110 08:35:15.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.699" endtime="20201110 08:35:15.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.694" endtime="20201110 08:35:15.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:15.842" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [28472791, 28482790, 28492790, 28502790, 28512790, 28522790, 28532790, 28542790, 28552790, 28562790, 28572790, 28582790, 28592790, 28602790, 28612790, 28622790, 28632790,...</msg>
<status status="PASS" starttime="20201110 08:35:15.837" endtime="20201110 08:35:15.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.852" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:15.850" endtime="20201110 08:35:15.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.857" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:15.854" endtime="20201110 08:35:15.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.844" endtime="20201110 08:35:15.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.869" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:15.867" endtime="20201110 08:35:15.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.873" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:15.871" endtime="20201110 08:35:15.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.860" endtime="20201110 08:35:15.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.885" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:15.883" endtime="20201110 08:35:15.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.890" level="INFO">VALUE: 28462755</msg>
<status status="PASS" starttime="20201110 08:35:15.888" endtime="20201110 08:35:15.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.877" endtime="20201110 08:35:15.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.902" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:15.900" endtime="20201110 08:35:15.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:15.912" level="INFO">VALUE: [28472791, 28482790, 28492790, 28502790, 28512790, 28522790, 28532790, 28542790, 28552790, 28562790, 28572790, 28582790, 28592790, 28602790, 28612790, 28622790, 28632790, 28642790, 28652790, 28662790, 28672790, 28682790, 28692790, 28702790, 28712790, 28722790, 28732790, 28742790, 28752790, 28762790, 28772790, 28782790, 28792790, 28802790, 28812790, 28822790, 28832790, 28842790, 28852790, 28862790, 28872790, 28882790, 28892790, 28902790, 28912790, 28922790, 28932790, 28942790, 28952790, 28962790, 28972790, 28982790, 28992790, 29002790, 29012790, 29022790, 29032790, 29042790, 29052790, 29062790, 29072790, 29082790, 29092790, 29102790, 29112790, 29122790, 29132790, 29142790, 29152790, 29162790, 29172790, 29182790, 29192790, 29202790, 29212790, 29222790, 29232790, 29242790, 29252790, 29262790, 29272790, 29282790, 29292790, 29302790, 29312790, 29322790, 29332790, 29342790, 29352790, 29362790, 29372790, 29382790, 29392790, 29402790, 29412790, 29422790, 29432790, 29442790, 29452790, 29462790]</msg>
<status status="PASS" starttime="20201110 08:35:15.904" endtime="20201110 08:35:15.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.893" endtime="20201110 08:35:15.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:15.931" endtime="20201110 08:35:16.272"></status>
</kw>
<msg timestamp="20201110 08:35:16.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047034694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057072458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:15.928" endtime="20201110 08:35:16.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047034694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057072458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:16.285" endtime="20201110 08:35:16.303"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.305" endtime="20201110 08:35:16.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.920" endtime="20201110 08:35:16.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:15.916" endtime="20201110 08:35:16.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:16.393" level="INFO">${RESULT} = {'time': [0.047034694, 0.057072458, 0.067072361, 0.077073389, 0.087074542, 0.097075569, 0.107076722, 0.117077764, 0.127078903, 0.137079931, 0.147081083, 0.157082111, 0.167083264, 0.177084278, 0.187085...</msg>
<status status="PASS" starttime="20201110 08:35:16.327" endtime="20201110 08:35:16.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.409" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:16.406" endtime="20201110 08:35:16.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.416" level="INFO">VALUE: 0.047034694</msg>
<status status="PASS" starttime="20201110 08:35:16.413" endtime="20201110 08:35:16.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.396" endtime="20201110 08:35:16.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.437" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:16.433" endtime="20201110 08:35:16.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:16.444" level="INFO">VALUE: [0.057072458, 0.067072361, 0.077073389, 0.087074542, 0.097075569, 0.107076722, 0.117077764, 0.127078903, 0.137079931, 0.147081083, 0.157082111, 0.167083264, 0.177084278, 0.187085458, 0.197086528, 0.207087625, 0.217088653, 0.227089833, 0.237090819, 0.247092, 0.257093056, 0.267094181, 0.277095236, 0.287096361, 0.297097361, 0.307098528, 0.317099542, 0.327100708, 0.337101792, 0.347102903, 0.357103903, 0.367105069, 0.377106097, 0.387107264, 0.397108319, 0.407109431, 0.417110458, 0.427111653, 0.437112639, 0.447113806, 0.457114847, 0.467115972, 0.477117014, 0.487118153, 0.497119181, 0.507120333, 0.517121361, 0.527122514, 0.537123542, 0.547124694, 0.557125736, 0.567126972, 0.577127903, 0.587129069, 0.597130083, 0.607131264, 0.617132264, 0.627133431, 0.637134472, 0.647135681, 0.657136639, 0.667137819, 0.677138806, 0.687139986, 0.697141, 0.707142153, 0.717143181, 0.727144333, 0.737145361, 0.747146569, 0.757147542, 0.767148694, 0.777149736, 0.787150875, 0.797151917, 0.807153069, 0.817154083, 0.827155236, 0.837156264, 0.847157431, 0.857158444, 0.867159611, 0.877160625, 0.887161778, 0.897162819, 0.907163958, 0.917164986, 0.927166181, 0.937167167, 0.947168333, 0.957169347, 0.967170514, 0.977171528, 0.987172694, 0.997173708, 1.007174875, 1.017175903, 1.027177056, 1.037178069, 1.047179236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:16.440" endtime="20201110 08:35:16.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.422" endtime="20201110 08:35:16.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.458" endtime="20201110 08:35:16.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:16.472" endtime="20201110 08:35:16.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.465" endtime="20201110 08:35:16.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.451" endtime="20201110 08:35:16.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.690" endtime="20201110 08:35:16.500"></status>
</kw>
<msg timestamp="20201110 08:35:16.501" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:16.522" endtime="20201110 08:35:18.627"></status>
</kw>
<msg timestamp="20201110 08:35:18.628" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31271943, 'start-iter': 1, 'wakeups': [31281978, 31291978, 31301978, 3...</msg>
<status status="PASS" starttime="20201110 08:35:16.518" endtime="20201110 08:35:18.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.635" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31271943, 'start-iter': 1, 'wakeups': [31281978, 31291978, 31301978, 3...</msg>
<status status="PASS" starttime="20201110 08:35:18.631" endtime="20201110 08:35:18.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.638" endtime="20201110 08:35:18.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.511" endtime="20201110 08:35:18.643"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.506" endtime="20201110 08:35:18.644"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:18.651" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [31281978, 31291978, 31301978, 31311978, 31321978, 31331978, 31341978, 31351978, 31361978, 31371978, 31381978, 31391978, 31401978, 31411978, 31421978, 31431978, 31441978,...</msg>
<status status="PASS" starttime="20201110 08:35:18.646" endtime="20201110 08:35:18.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.661" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:18.658" endtime="20201110 08:35:18.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.665" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:18.663" endtime="20201110 08:35:18.666"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.652" endtime="20201110 08:35:18.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.677" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:18.675" endtime="20201110 08:35:18.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.682" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:18.680" endtime="20201110 08:35:18.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.669" endtime="20201110 08:35:18.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.696" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:18.694" endtime="20201110 08:35:18.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.700" level="INFO">VALUE: 31271943</msg>
<status status="PASS" starttime="20201110 08:35:18.698" endtime="20201110 08:35:18.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.685" endtime="20201110 08:35:18.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.713" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:18.711" endtime="20201110 08:35:18.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:18.718" level="INFO">VALUE: [31281978, 31291978, 31301978, 31311978, 31321978, 31331978, 31341978, 31351978, 31361978, 31371978, 31381978, 31391978, 31401978, 31411978, 31421978, 31431978, 31441978, 31451978, 31461978, 31471978, 31481978, 31491978, 31501978, 31511978, 31521978, 31531978, 31541978, 31551978, 31561978, 31571978, 31581978, 31591978, 31601978, 31611978, 31621978, 31631978, 31641978, 31651978, 31661978, 31671978, 31681978, 31691978, 31701978, 31711978, 31721978, 31731978, 31741978, 31751978, 31761978, 31771978, 31781978, 31791978, 31801978, 31811978, 31821978, 31831978, 31841978, 31851978, 31861978, 31871978, 31881978, 31891978, 31901978, 31911978, 31921978, 31931978, 31941978, 31951978, 31961978, 31971978, 31981978, 31991978, 32001978, 32011978, 32021978, 32031978, 32041978, 32051978, 32061978, 32071978, 32081978, 32091978, 32101978, 32111978, 32121978, 32131978, 32141978, 32151978, 32161978, 32171978, 32181978, 32191978, 32201978, 32211978, 32221978, 32231978, 32241978, 32251978, 32261978, 32271978]</msg>
<status status="PASS" starttime="20201110 08:35:18.715" endtime="20201110 08:35:18.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.704" endtime="20201110 08:35:18.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:18.737" endtime="20201110 08:35:19.079"></status>
</kw>
<msg timestamp="20201110 08:35:19.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050009819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:18.734" endtime="20201110 08:35:19.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039972222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050009819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:19.088" endtime="20201110 08:35:19.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.105" endtime="20201110 08:35:19.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.727" endtime="20201110 08:35:19.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:18.721" endtime="20201110 08:35:19.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:19.166" level="INFO">${RESULT} = {'time': [0.039972222, 0.050009819, 0.060010569, 0.070011611, 0.08001275, 0.090013764, 0.100014931, 0.110015944, 0.120017111, 0.130018125, 0.140019278, 0.150020292, 0.160021472, 0.170022486, 0.1800236...</msg>
<status status="PASS" starttime="20201110 08:35:19.113" endtime="20201110 08:35:19.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.177" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:19.175" endtime="20201110 08:35:19.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.181" level="INFO">VALUE: 0.039972222</msg>
<status status="PASS" starttime="20201110 08:35:19.179" endtime="20201110 08:35:19.182"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.168" endtime="20201110 08:35:19.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.195" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:19.192" endtime="20201110 08:35:19.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:19.200" level="INFO">VALUE: [0.050009819, 0.060010569, 0.070011611, 0.08001275, 0.090013764, 0.100014931, 0.110015944, 0.120017111, 0.130018125, 0.140019278, 0.150020292, 0.160021472, 0.170022486, 0.180023625, 0.190024667, 0.200025833, 0.210026847, 0.220027986, 0.230029, 0.240030208, 0.250031194, 0.260032361, 0.270033361, 0.280034514, 0.290035542, 0.300036736, 0.310037722, 0.320038903, 0.330039903, 0.340041056, 0.350042083, 0.360043236, 0.37004425, 0.380045417, 0.390046431, 0.400047611, 0.410048611, 0.420049764, 0.430050792, 0.440051986, 0.450053014, 0.460054139, 0.470055139, 0.480056306, 0.490057347, 0.500058486, 0.510059514, 0.520060667, 0.530061681, 0.540062833, 0.550063861, 0.560065014, 0.570066069, 0.580067194, 0.590068222, 0.600069375, 0.610070389, 0.620071569, 0.630072611, 0.640073736, 0.650074778, 0.660075917, 0.670076944, 0.680078097, 0.690079125, 0.700080264, 0.710081292, 0.720082514, 0.730083472, 0.740084625, 0.750085639, 0.760086806, 0.770087819, 0.780088986, 0.79009, 0.800091167, 0.810092181, 0.820093333, 0.830094361, 0.840095542, 0.850096542, 0.860097708, 0.870098708, 0.880099889, 0.890100903, 0.900102069, 0.910103069, 0.920104236, 0.93010525, 0.940106444, 0.950107444, 0.960108583, 0.970109611, 0.980110764, 0.990111806, 1.000112944, 1.010113958, 1.020115125, 1.030116139, 1.040117319] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:19.197" endtime="20201110 08:35:19.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.185" endtime="20201110 08:35:19.203"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.209" endtime="20201110 08:35:19.212"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:19.218" endtime="20201110 08:35:19.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.213" endtime="20201110 08:35:19.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.205" endtime="20201110 08:35:19.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:16.502" endtime="20201110 08:35:19.243"></status>
</kw>
<msg timestamp="20201110 08:35:19.243" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:19.264" endtime="20201110 08:35:21.370"></status>
</kw>
<msg timestamp="20201110 08:35:21.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34014379, 'start-iter': 1, 'wakeups': [34024415, 34034414, 34044414, 3...</msg>
<status status="PASS" starttime="20201110 08:35:19.261" endtime="20201110 08:35:21.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.379" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34014379, 'start-iter': 1, 'wakeups': [34024415, 34034414, 34044414, 3...</msg>
<status status="PASS" starttime="20201110 08:35:21.374" endtime="20201110 08:35:21.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.381" endtime="20201110 08:35:21.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.254" endtime="20201110 08:35:21.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.248" endtime="20201110 08:35:21.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.394" level="INFO">${RESULT} = {'timer-count': 4, 'wakeups': [34024415, 34034414, 34044414, 34054414, 34064414, 34074414, 34084414, 34094414, 34104414, 34114414, 34124414, 34134414, 34144414, 34154414, 34164414, 34174414, 34184414,...</msg>
<status status="PASS" starttime="20201110 08:35:21.389" endtime="20201110 08:35:21.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.404" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:21.402" endtime="20201110 08:35:21.405"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.409" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:21.406" endtime="20201110 08:35:21.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.396" endtime="20201110 08:35:21.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.421" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:21.419" endtime="20201110 08:35:21.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.425" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:21.423" endtime="20201110 08:35:21.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.412" endtime="20201110 08:35:21.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.438" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:21.435" endtime="20201110 08:35:21.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.442" level="INFO">VALUE: 34014379</msg>
<status status="PASS" starttime="20201110 08:35:21.440" endtime="20201110 08:35:21.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.429" endtime="20201110 08:35:21.444"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.454" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:21.452" endtime="20201110 08:35:21.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.459" level="INFO">VALUE: [34024415, 34034414, 34044414, 34054414, 34064414, 34074414, 34084414, 34094414, 34104414, 34114414, 34124414, 34134414, 34144414, 34154414, 34164414, 34174414, 34184414, 34194414, 34204414, 34214414, 34224414, 34234414, 34244414, 34254414, 34264414, 34274414, 34284414, 34294414, 34304414, 34314414, 34324414, 34334414, 34344414, 34354414, 34364414, 34374414, 34384414, 34394414, 34404414, 34414414, 34424414, 34434414, 34444414, 34454414, 34464414, 34474414, 34484414, 34494414, 34504414, 34514414, 34524414, 34534414, 34544414, 34554414, 34564414, 34574414, 34584414, 34594414, 34604414, 34614414, 34624414, 34634414, 34644414, 34654414, 34664414, 34674414, 34684414, 34694414, 34704414, 34714414, 34724414, 34734414, 34744414, 34754414, 34764414, 34774414, 34784414, 34794414, 34804414, 34814414, 34824414, 34834414, 34844414, 34854414, 34864414, 34874414, 34884414, 34894414, 34904414, 34914414, 34924414, 34934414, 34944414, 34954414, 34964414, 34974414, 34984414, 34994414, 35004414, 35014414]</msg>
<status status="PASS" starttime="20201110 08:35:21.457" endtime="20201110 08:35:21.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.446" endtime="20201110 08:35:21.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.469" endtime="20201110 08:35:21.795"></status>
</kw>
<msg timestamp="20201110 08:35:21.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037934153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047971931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.466" endtime="20201110 08:35:21.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037934153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047971931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:21.803" endtime="20201110 08:35:21.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.821" endtime="20201110 08:35:21.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.463" endtime="20201110 08:35:21.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.460" endtime="20201110 08:35:21.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:21.885" level="INFO">${RESULT} = {'time': [0.037934153, 0.047971931, 0.057971833, 0.067972847, 0.077974014, 0.087975028, 0.097976222, 0.107977194, 0.117978375, 0.127979375, 0.137980556, 0.147981556, 0.157982722, 0.167983722, 0.177984...</msg>
<status status="PASS" starttime="20201110 08:35:21.830" endtime="20201110 08:35:21.885"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.898" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:35:21.895" endtime="20201110 08:35:21.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.904" level="INFO">VALUE: 0.037934153</msg>
<status status="PASS" starttime="20201110 08:35:21.901" endtime="20201110 08:35:21.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.888" endtime="20201110 08:35:21.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.920" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:21.917" endtime="20201110 08:35:21.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:21.925" level="INFO">VALUE: [0.047971931, 0.057971833, 0.067972847, 0.077974014, 0.087975028, 0.097976222, 0.107977194, 0.117978375, 0.127979375, 0.137980556, 0.147981556, 0.157982722, 0.167983722, 0.177984875, 0.187985917, 0.197987056, 0.207988083, 0.217989292, 0.22799025, 0.237991403, 0.247992431, 0.257993597, 0.267994681, 0.27799575, 0.287996833, 0.297997931, 0.307998972, 0.318000125, 0.328001125, 0.338002278, 0.348003361, 0.3580045, 0.368005486, 0.378006639, 0.388007653, 0.398008806, 0.408009819, 0.418010986, 0.428012014, 0.438013167, 0.448014236, 0.458015347, 0.468016347, 0.478017569, 0.488018528, 0.498019694, 0.508020708, 0.518021861, 0.528022889, 0.538024069, 0.548025069, 0.558026222, 0.568027236, 0.578028417, 0.588029417, 0.598030569, 0.608031583, 0.61803275, 0.628033764, 0.638034917, 0.648035944, 0.658037097, 0.668038111, 0.678039306, 0.688040306, 0.698041444, 0.708042486, 0.718043639, 0.728044639, 0.738045806, 0.748046833, 0.758047972, 0.768049, 0.778050153, 0.788051181, 0.798052347, 0.808053347, 0.818054556, 0.828055528, 0.838056694, 0.848057694, 0.858058875, 0.868059875, 0.878061028, 0.888062056, 0.898063208, 0.908064222, 0.918065389, 0.928066444, 0.938067597, 0.948068569, 0.95806975, 0.96807075, 0.978071931, 0.988072944, 0.998074083, 1.008075097, 1.018076264, 1.028077319, 1.038078444] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:21.922" endtime="20201110 08:35:21.926"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.908" endtime="20201110 08:35:21.927"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.934" endtime="20201110 08:35:21.936"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:21.942" endtime="20201110 08:35:21.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.938" endtime="20201110 08:35:21.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.929" endtime="20201110 08:35:21.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:19.245" endtime="20201110 08:35:21.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.686" endtime="20201110 08:35:21.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:13.684" endtime="20201110 08:35:21.969"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:21.975" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:21.998" endtime="20201110 08:35:24.103"></status>
</kw>
<msg timestamp="20201110 08:35:24.105" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36748193, 'start-iter': 1, 'wakeups': [36758240, 36768240, 36778240, 3...</msg>
<status status="PASS" starttime="20201110 08:35:21.993" endtime="20201110 08:35:24.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.112" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36748193, 'start-iter': 1, 'wakeups': [36758240, 36768240, 36778240, 3...</msg>
<status status="PASS" starttime="20201110 08:35:24.107" endtime="20201110 08:35:24.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.114" endtime="20201110 08:35:24.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.986" endtime="20201110 08:35:24.120"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.980" endtime="20201110 08:35:24.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.128" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [36758240, 36768240, 36778240, 36788240, 36798240, 36808240, 36818240, 36828240, 36838240, 36848240, 36858240, 36868240, 36878240, 36888240, 36898240, 36908240, 36918240,...</msg>
<status status="PASS" starttime="20201110 08:35:24.123" endtime="20201110 08:35:24.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.138" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:24.136" endtime="20201110 08:35:24.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.142" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:24.140" endtime="20201110 08:35:24.143"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.130" endtime="20201110 08:35:24.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.155" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:24.152" endtime="20201110 08:35:24.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.159" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:24.157" endtime="20201110 08:35:24.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.146" endtime="20201110 08:35:24.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.171" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.169" endtime="20201110 08:35:24.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.176" level="INFO">VALUE: 36748193</msg>
<status status="PASS" starttime="20201110 08:35:24.174" endtime="20201110 08:35:24.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.163" endtime="20201110 08:35:24.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.188" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.186" endtime="20201110 08:35:24.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.193" level="INFO">VALUE: [36758240, 36768240, 36778240, 36788240, 36798240, 36808240, 36818240, 36828240, 36838240, 36848240, 36858240, 36868240, 36878240, 36888240, 36898240, 36908240, 36918240, 36928240, 36938240, 36948240, 36958240, 36968240, 36978240, 36988240, 36998240, 37008240, 37018240, 37028240, 37038240, 37048240, 37058240, 37068240, 37078240, 37088240, 37098240, 37108240, 37118240, 37128240, 37138240, 37148240, 37158240, 37168240, 37178240, 37188240, 37198240, 37208240, 37218240, 37228240, 37238240, 37248240, 37258240, 37268240, 37278240, 37288240, 37298240, 37308240, 37318240, 37328240, 37338240, 37348240, 37358240, 37368240, 37378240, 37388240, 37398240, 37408240, 37418240, 37428240, 37438240, 37448240, 37458240, 37468240, 37478240, 37488240, 37498240, 37508240, 37518240, 37528240, 37538240, 37548240, 37558240, 37568240, 37578240, 37588240, 37598240, 37608240, 37618240, 37628240, 37638240, 37648240, 37658240, 37668240, 37678240, 37688240, 37698240, 37708240, 37718240, 37728240, 37738240, 37748240]</msg>
<status status="PASS" starttime="20201110 08:35:24.190" endtime="20201110 08:35:24.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.179" endtime="20201110 08:35:24.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.212" endtime="20201110 08:35:24.555"></status>
</kw>
<msg timestamp="20201110 08:35:24.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047445181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057494653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.208" endtime="20201110 08:35:24.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047445181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057494653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:24.563" endtime="20201110 08:35:24.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.581" endtime="20201110 08:35:24.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.201" endtime="20201110 08:35:24.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.197" endtime="20201110 08:35:24.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:24.644" level="INFO">${RESULT} = {'time': [0.047445181, 0.057494653, 0.067495556, 0.077496569, 0.087497722, 0.097498736, 0.107499889, 0.117500944, 0.127502083, 0.137503083, 0.14750425, 0.15750525, 0.167506431, 0.177507431, 0.18750859...</msg>
<status status="PASS" starttime="20201110 08:35:24.589" endtime="20201110 08:35:24.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.655" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:24.652" endtime="20201110 08:35:24.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.659" level="INFO">VALUE: 0.047445181</msg>
<status status="PASS" starttime="20201110 08:35:24.657" endtime="20201110 08:35:24.660"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.646" endtime="20201110 08:35:24.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.673" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:24.670" endtime="20201110 08:35:24.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:24.678" level="INFO">VALUE: [0.057494653, 0.067495556, 0.077496569, 0.087497722, 0.097498736, 0.107499889, 0.117500944, 0.127502083, 0.137503083, 0.14750425, 0.15750525, 0.167506431, 0.177507431, 0.187508597, 0.197509639, 0.20751075, 0.217511778, 0.227512944, 0.237513944, 0.247515097, 0.257516139, 0.267517292, 0.277518306, 0.287519444, 0.297520472, 0.307521639, 0.317522639, 0.327523792, 0.337524889, 0.347525972, 0.357526986, 0.367528153, 0.377529167, 0.387530319, 0.397531333, 0.407532542, 0.417533528, 0.427534667, 0.437535681, 0.447536847, 0.457537861, 0.467539014, 0.477540028, 0.487541194, 0.497542222, 0.507543375, 0.517544389, 0.527545542, 0.537546556, 0.547547708, 0.55754875, 0.567549903, 0.577550944, 0.587552111, 0.597553097, 0.607554236, 0.617555292, 0.627556431, 0.637557431, 0.647558583, 0.657559597, 0.667560778, 0.677561778, 0.687562931, 0.697563972, 0.707565111, 0.717566139, 0.727567278, 0.737568306, 0.747569458, 0.757570472, 0.767571639, 0.777572653, 0.787573806, 0.797574819, 0.807575972, 0.817577069, 0.827578153, 0.837579167, 0.847580347, 0.857581347, 0.867582542, 0.877583514, 0.887584694, 0.897585694, 0.907586847, 0.917587875, 0.927589083, 0.937590042, 0.947591194, 0.957592222, 0.967593375, 0.977594403, 0.987595542, 0.997596569, 1.007597722, 1.017598736, 1.027599903, 1.037600931, 1.047602069] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:24.675" endtime="20201110 08:35:24.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.662" endtime="20201110 08:35:24.681"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.688" endtime="20201110 08:35:24.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:24.698" endtime="20201110 08:35:24.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.693" endtime="20201110 08:35:24.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.683" endtime="20201110 08:35:24.723"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.976" endtime="20201110 08:35:24.724"></status>
</kw>
<msg timestamp="20201110 08:35:24.724" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:24.745" endtime="20201110 08:35:26.851"></status>
</kw>
<msg timestamp="20201110 08:35:26.853" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39495127, 'start-iter': 1, 'wakeups': [39505175, 39515174, 39525174, 3...</msg>
<status status="PASS" starttime="20201110 08:35:24.742" endtime="20201110 08:35:26.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.859" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39495127, 'start-iter': 1, 'wakeups': [39505175, 39515174, 39525174, 3...</msg>
<status status="PASS" starttime="20201110 08:35:26.855" endtime="20201110 08:35:26.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.862" endtime="20201110 08:35:26.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.735" endtime="20201110 08:35:26.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.729" endtime="20201110 08:35:26.869"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:26.875" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [39505175, 39515174, 39525174, 39535174, 39545174, 39555174, 39565174, 39575174, 39585174, 39595174, 39605174, 39615174, 39625174, 39635174, 39645174, 39655174, 39665174,...</msg>
<status status="PASS" starttime="20201110 08:35:26.870" endtime="20201110 08:35:26.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.885" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:26.883" endtime="20201110 08:35:26.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.895" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:26.892" endtime="20201110 08:35:26.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.877" endtime="20201110 08:35:26.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.907" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:26.905" endtime="20201110 08:35:26.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.913" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:26.909" endtime="20201110 08:35:26.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.898" endtime="20201110 08:35:26.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.926" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:26.923" endtime="20201110 08:35:26.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.930" level="INFO">VALUE: 39495127</msg>
<status status="PASS" starttime="20201110 08:35:26.928" endtime="20201110 08:35:26.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.917" endtime="20201110 08:35:26.932"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.942" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:26.940" endtime="20201110 08:35:26.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:26.947" level="INFO">VALUE: [39505175, 39515174, 39525174, 39535174, 39545174, 39555174, 39565174, 39575174, 39585174, 39595174, 39605174, 39615174, 39625174, 39635174, 39645174, 39655174, 39665174, 39675174, 39685174, 39695174, 39705174, 39715174, 39725174, 39735174, 39745174, 39755174, 39765174, 39775174, 39785174, 39795174, 39805174, 39815174, 39825174, 39835174, 39845174, 39855174, 39865174, 39875174, 39885174, 39895174, 39905174, 39915174, 39925174, 39935174, 39945174, 39955174, 39965174, 39975174, 39985174, 39995174, 40005174, 40015174, 40025174, 40035174, 40045174, 40055174, 40065174, 40075174, 40085174, 40095174, 40105174, 40115174, 40125174, 40135174, 40145174, 40155174, 40165174, 40175174, 40185174, 40195174, 40205174, 40215174, 40225174, 40235174, 40245174, 40255174, 40265174, 40275174, 40285174, 40295174, 40305174, 40315174, 40325174, 40335174, 40345174, 40355174, 40365174, 40375174, 40385174, 40395174, 40405174, 40415174, 40425174, 40435174, 40445174, 40455174, 40465174, 40475174, 40485174, 40495174]</msg>
<status status="PASS" starttime="20201110 08:35:26.945" endtime="20201110 08:35:26.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.934" endtime="20201110 08:35:26.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:26.966" endtime="20201110 08:35:27.295"></status>
</kw>
<msg timestamp="20201110 08:35:27.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047930292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:26.963" endtime="20201110 08:35:27.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037880486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047930292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:27.299" endtime="20201110 08:35:27.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.307" endtime="20201110 08:35:27.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.956" endtime="20201110 08:35:27.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:26.951" endtime="20201110 08:35:27.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:27.342" level="INFO">${RESULT} = {'time': [0.037880486, 0.047930292, 0.057930194, 0.067931208, 0.077932361, 0.087933403, 0.097934569, 0.107935569, 0.117936736, 0.12793775, 0.137938903, 0.147939931, 0.157941097, 0.167942111, 0.1779432...</msg>
<status status="PASS" starttime="20201110 08:35:27.311" endtime="20201110 08:35:27.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.353" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:27.350" endtime="20201110 08:35:27.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.357" level="INFO">VALUE: 0.037880486</msg>
<status status="PASS" starttime="20201110 08:35:27.355" endtime="20201110 08:35:27.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.344" endtime="20201110 08:35:27.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.372" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:27.370" endtime="20201110 08:35:27.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:27.377" level="INFO">VALUE: [0.047930292, 0.057930194, 0.067931208, 0.077932361, 0.087933403, 0.097934569, 0.107935569, 0.117936736, 0.12793775, 0.137938903, 0.147939931, 0.157941097, 0.167942111, 0.177943264, 0.187944292, 0.197945444, 0.207946528, 0.217947625, 0.227948653, 0.237949819, 0.247950889, 0.257952014, 0.267953014, 0.277954194, 0.287955208, 0.297956361, 0.307957375, 0.317958556, 0.327959556, 0.337960722, 0.347961736, 0.357962903, 0.367963917, 0.377965083, 0.387966097, 0.397967264, 0.407968292, 0.417969444, 0.427970486, 0.437971625, 0.447972667, 0.457973806, 0.467974889, 0.477975986, 0.487977014, 0.497978181, 0.507979194, 0.517980347, 0.527981389, 0.537982528, 0.547983569, 0.557984736, 0.567985736, 0.577986889, 0.587987917, 0.597989083, 0.607990097, 0.617991264, 0.627992278, 0.637993431, 0.647994458, 0.657995611, 0.667996667, 0.677997806, 0.687998833, 0.697999972, 0.708001, 0.718002167, 0.728003181, 0.738004333, 0.748005361, 0.758006514, 0.768007556, 0.778008708, 0.788009722, 0.798010875, 0.808011903, 0.818013125, 0.828014097, 0.838015236, 0.84801625, 0.858017417, 0.868018431, 0.878019667, 0.888020611, 0.898021792, 0.908022792, 0.918023972, 0.928024972, 0.938026222, 0.948027167, 0.958028361, 0.968029333, 0.978030514, 0.988031528, 0.998032681, 1.008033764, 1.018034903, 1.028035875, 1.038037042] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:27.375" endtime="20201110 08:35:27.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.363" endtime="20201110 08:35:27.379"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.386" endtime="20201110 08:35:27.389"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:27.394" endtime="20201110 08:35:27.416"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.390" endtime="20201110 08:35:27.417"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.381" endtime="20201110 08:35:27.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:24.726" endtime="20201110 08:35:27.419"></status>
</kw>
<msg timestamp="20201110 08:35:27.420" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:27.441" endtime="20201110 08:35:29.546"></status>
</kw>
<msg timestamp="20201110 08:35:29.548" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42190573, 'start-iter': 1, 'wakeups': [42200621, 42210620, 42220620, 4...</msg>
<status status="PASS" starttime="20201110 08:35:27.437" endtime="20201110 08:35:29.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.554" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42190573, 'start-iter': 1, 'wakeups': [42200621, 42210620, 42220620, 4...</msg>
<status status="PASS" starttime="20201110 08:35:29.550" endtime="20201110 08:35:29.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.557" endtime="20201110 08:35:29.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.430" endtime="20201110 08:35:29.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.425" endtime="20201110 08:35:29.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:29.570" level="INFO">${RESULT} = {'timer-count': 5, 'wakeups': [42200621, 42210620, 42220620, 42230620, 42240620, 42250620, 42260620, 42270620, 42280620, 42290620, 42300620, 42310620, 42320620, 42330620, 42340620, 42350620, 42360620,...</msg>
<status status="PASS" starttime="20201110 08:35:29.565" endtime="20201110 08:35:29.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.580" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:29.577" endtime="20201110 08:35:29.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.584" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:29.582" endtime="20201110 08:35:29.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.571" endtime="20201110 08:35:29.586"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.596" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:29.594" endtime="20201110 08:35:29.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.601" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:29.599" endtime="20201110 08:35:29.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.588" endtime="20201110 08:35:29.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.614" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:29.612" endtime="20201110 08:35:29.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.618" level="INFO">VALUE: 42190573</msg>
<status status="PASS" starttime="20201110 08:35:29.616" endtime="20201110 08:35:29.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.605" endtime="20201110 08:35:29.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.631" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:29.628" endtime="20201110 08:35:29.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:29.635" level="INFO">VALUE: [42200621, 42210620, 42220620, 42230620, 42240620, 42250620, 42260620, 42270620, 42280620, 42290620, 42300620, 42310620, 42320620, 42330620, 42340620, 42350620, 42360620, 42370620, 42380620, 42390620, 42400620, 42410620, 42420620, 42430620, 42440620, 42450620, 42460620, 42470620, 42480620, 42490620, 42500620, 42510620, 42520620, 42530620, 42540620, 42550620, 42560620, 42570620, 42580620, 42590620, 42600620, 42610620, 42620620, 42630620, 42640620, 42650620, 42660620, 42670620, 42680620, 42690620, 42700620, 42710620, 42720620, 42730620, 42740620, 42750620, 42760620, 42770620, 42780620, 42790620, 42800620, 42810620, 42820620, 42830620, 42840620, 42850620, 42860620, 42870620, 42880620, 42890620, 42900620, 42910620, 42920620, 42930620, 42940620, 42950620, 42960620, 42970620, 42980620, 42990620, 43000620, 43010620, 43020620, 43030620, 43040620, 43050620, 43060620, 43070620, 43080620, 43090620, 43100620, 43110620, 43120620, 43130620, 43140620, 43150620, 43160620, 43170620, 43180620, 43190620]</msg>
<status status="PASS" starttime="20201110 08:35:29.633" endtime="20201110 08:35:29.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.622" endtime="20201110 08:35:29.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:29.656" endtime="20201110 08:35:29.995"></status>
</kw>
<msg timestamp="20201110 08:35:30.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037678986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04772875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:29.653" endtime="20201110 08:35:30.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037678986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04772875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:30.004" endtime="20201110 08:35:30.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.021" endtime="20201110 08:35:30.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.644" endtime="20201110 08:35:30.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:29.639" endtime="20201110 08:35:30.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:30.083" level="INFO">${RESULT} = {'time': [0.037678986, 0.04772875, 0.057728653, 0.067729667, 0.077730819, 0.087731833, 0.097733, 0.107734014, 0.117735167, 0.127736181, 0.137737389, 0.147738361, 0.157739528, 0.167740542, 0.177741694,...</msg>
<status status="PASS" starttime="20201110 08:35:30.030" endtime="20201110 08:35:30.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.093" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:35:30.091" endtime="20201110 08:35:30.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.098" level="INFO">VALUE: 0.037678986</msg>
<status status="PASS" starttime="20201110 08:35:30.096" endtime="20201110 08:35:30.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.084" endtime="20201110 08:35:30.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.111" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:30.109" endtime="20201110 08:35:30.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:30.116" level="INFO">VALUE: [0.04772875, 0.057728653, 0.067729667, 0.077730819, 0.087731833, 0.097733, 0.107734014, 0.117735167, 0.127736181, 0.137737389, 0.147738361, 0.157739528, 0.167740542, 0.177741694, 0.187742722, 0.197743903, 0.207744889, 0.217746083, 0.227747083, 0.237748222, 0.247749319, 0.257750458, 0.267751431, 0.277752583, 0.287753597, 0.297754764, 0.307755792, 0.317756944, 0.327757958, 0.337759125, 0.347760181, 0.357761292, 0.367762319, 0.377763472, 0.387764514, 0.397765681, 0.407766667, 0.417767847, 0.427768861, 0.437770014, 0.447771028, 0.457772194, 0.467773208, 0.477774361, 0.487775431, 0.497776542, 0.507777569, 0.517778722, 0.52777975, 0.537780986, 0.547781917, 0.557783097, 0.567784097, 0.577785264, 0.587786278, 0.597787431, 0.607788458, 0.617789611, 0.627790639, 0.637791792, 0.647792833, 0.657793972, 0.667795, 0.677796153, 0.687797167, 0.697798333, 0.707799347, 0.717800514, 0.727801542, 0.737802694, 0.747803708, 0.757804903, 0.767805903, 0.777807042, 0.787808056, 0.797809222, 0.807810236, 0.817811403, 0.827812431, 0.837813569, 0.847814597, 0.857815764, 0.867816792, 0.877817931, 0.887818972, 0.897820111, 0.907821125, 0.917822292, 0.927823319, 0.937824472, 0.947825486, 0.957826653, 0.967827708, 0.977828819, 0.987829847, 0.997831014, 1.007832028, 1.017833181, 1.027834208, 1.037835375] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:30.113" endtime="20201110 08:35:30.117"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.101" endtime="20201110 08:35:30.119"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.125" endtime="20201110 08:35:30.128"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:30.133" endtime="20201110 08:35:30.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.129" endtime="20201110 08:35:30.157"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.121" endtime="20201110 08:35:30.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:27.421" endtime="20201110 08:35:30.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.971" endtime="20201110 08:35:30.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:21.970" endtime="20201110 08:35:30.160"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:30.165" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:30.188" endtime="20201110 08:35:32.292"></status>
</kw>
<msg timestamp="20201110 08:35:32.294" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44937499, 'start-iter': 1, 'wakeups': [44947561, 44957560, 44967560, 4...</msg>
<status status="PASS" starttime="20201110 08:35:30.184" endtime="20201110 08:35:32.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.301" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 44937499, 'start-iter': 1, 'wakeups': [44947561, 44957560, 44967560, 4...</msg>
<status status="PASS" starttime="20201110 08:35:32.297" endtime="20201110 08:35:32.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.304" endtime="20201110 08:35:32.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.176" endtime="20201110 08:35:32.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.170" endtime="20201110 08:35:32.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.318" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [44947561, 44957560, 44967560, 44977560, 44987560, 44997560, 45007560, 45017560, 45027560, 45037560, 45047560, 45057560, 45067560, 45077560, 45087560, 45097560, 45107560,...</msg>
<status status="PASS" starttime="20201110 08:35:32.313" endtime="20201110 08:35:32.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.329" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:32.326" endtime="20201110 08:35:32.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.333" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:32.331" endtime="20201110 08:35:32.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.320" endtime="20201110 08:35:32.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.346" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:32.343" endtime="20201110 08:35:32.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.350" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:32.348" endtime="20201110 08:35:32.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.337" endtime="20201110 08:35:32.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.362" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.360" endtime="20201110 08:35:32.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.367" level="INFO">VALUE: 44937499</msg>
<status status="PASS" starttime="20201110 08:35:32.365" endtime="20201110 08:35:32.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.354" endtime="20201110 08:35:32.369"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.379" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.377" endtime="20201110 08:35:32.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.383" level="INFO">VALUE: [44947561, 44957560, 44967560, 44977560, 44987560, 44997560, 45007560, 45017560, 45027560, 45037560, 45047560, 45057560, 45067560, 45077560, 45087560, 45097560, 45107560, 45117560, 45127560, 45137560, 45147560, 45157560, 45167560, 45177560, 45187560, 45197560, 45207560, 45217560, 45227560, 45237560, 45247560, 45257560, 45267560, 45277560, 45287560, 45297560, 45307560, 45317560, 45327560, 45337560, 45347560, 45357560, 45367560, 45377560, 45387560, 45397560, 45407560, 45417560, 45427560, 45437560, 45447560, 45457560, 45467560, 45477560, 45487560, 45497560, 45507560, 45517560, 45527560, 45537560, 45547560, 45557560, 45567560, 45577560, 45587560, 45597560, 45607560, 45617560, 45627560, 45637560, 45647560, 45657560, 45667560, 45677560, 45687560, 45697560, 45707560, 45717560, 45727560, 45737560, 45747560, 45757560, 45767560, 45777560, 45787560, 45797560, 45807560, 45817560, 45827560, 45837560, 45847560, 45857560, 45867560, 45877560, 45887560, 45897560, 45907560, 45917560, 45927560, 45937560]</msg>
<status status="PASS" starttime="20201110 08:35:32.381" endtime="20201110 08:35:32.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.370" endtime="20201110 08:35:32.384"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.392" endtime="20201110 08:35:32.701"></status>
</kw>
<msg timestamp="20201110 08:35:32.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045441125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05550425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:32.390" endtime="20201110 08:35:32.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045441125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05550425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:35:32.710" endtime="20201110 08:35:32.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.727" endtime="20201110 08:35:32.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.387" endtime="20201110 08:35:32.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.385" endtime="20201110 08:35:32.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:32.791" level="INFO">${RESULT} = {'time': [0.045441125, 0.05550425, 0.065504764, 0.075505792, 0.085506931, 0.095507958, 0.105509111, 0.115510125, 0.125511306, 0.135512306, 0.145513444, 0.155514528, 0.165515625, 0.175516639, 0.1855178...</msg>
<status status="PASS" starttime="20201110 08:35:32.735" endtime="20201110 08:35:32.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.801" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:32.799" endtime="20201110 08:35:32.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.806" level="INFO">VALUE: 0.045441125</msg>
<status status="PASS" starttime="20201110 08:35:32.804" endtime="20201110 08:35:32.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.793" endtime="20201110 08:35:32.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.819" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:32.817" endtime="20201110 08:35:32.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:32.824" level="INFO">VALUE: [0.05550425, 0.065504764, 0.075505792, 0.085506931, 0.095507958, 0.105509111, 0.115510125, 0.125511306, 0.135512306, 0.145513444, 0.155514528, 0.165515625, 0.175516639, 0.185517806, 0.195518833, 0.205519986, 0.215521, 0.225522153, 0.235523181, 0.245524333, 0.255525347, 0.2655265, 0.275527514, 0.285528736, 0.295529681, 0.305530847, 0.315531861, 0.325533028, 0.335534056, 0.345535194, 0.35553625, 0.365537389, 0.375538389, 0.385539542, 0.395540569, 0.405541792, 0.41554275, 0.425543958, 0.435544972, 0.445546083, 0.455547097, 0.465548319, 0.475549264, 0.485550431, 0.495551458, 0.505552597, 0.515553639, 0.525554778, 0.535555792, 0.545556972, 0.555557986, 0.565559181, 0.575560139, 0.585561306, 0.595562319, 0.6055635, 0.615564514, 0.625565653, 0.635566681, 0.645567833, 0.655568847, 0.665570014, 0.675571028, 0.685572181, 0.695573208, 0.705574361, 0.715575403, 0.725576528, 0.735577569, 0.745578722, 0.755579736, 0.765580889, 0.775581917, 0.785583097, 0.795584069, 0.805585292, 0.81558625, 0.825587417, 0.835588431, 0.845589583, 0.855590611, 0.865591764, 0.875592778, 0.885593931, 0.895595042, 0.905596111, 0.915597125, 0.925598292, 0.935599306, 0.945600458, 0.955601486, 0.965602653, 0.975603653, 0.985604833, 0.995605833, 1.005606986, 1.015608083, 1.025609167, 1.035610181, 1.045611347] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:32.821" endtime="20201110 08:35:32.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.809" endtime="20201110 08:35:32.826"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.832" endtime="20201110 08:35:32.835"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:32.841" endtime="20201110 08:35:32.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.837" endtime="20201110 08:35:32.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.828" endtime="20201110 08:35:32.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.167" endtime="20201110 08:35:32.867"></status>
</kw>
<msg timestamp="20201110 08:35:32.867" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:32.888" endtime="20201110 08:35:34.994"></status>
</kw>
<msg timestamp="20201110 08:35:34.995" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47637937, 'start-iter': 1, 'wakeups': [47647999, 47657998, 47667998, 4...</msg>
<status status="PASS" starttime="20201110 08:35:32.885" endtime="20201110 08:35:34.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.002" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47637937, 'start-iter': 1, 'wakeups': [47647999, 47657998, 47667998, 4...</msg>
<status status="PASS" starttime="20201110 08:35:34.998" endtime="20201110 08:35:35.003"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.005" endtime="20201110 08:35:35.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.877" endtime="20201110 08:35:35.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.872" endtime="20201110 08:35:35.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.018" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [47647999, 47657998, 47667998, 47677998, 47687998, 47697998, 47707998, 47717998, 47727998, 47737998, 47747998, 47757998, 47767998, 47777998, 47787998, 47797998, 47807998,...</msg>
<status status="PASS" starttime="20201110 08:35:35.013" endtime="20201110 08:35:35.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.028" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:35.025" endtime="20201110 08:35:35.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.032" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:35.030" endtime="20201110 08:35:35.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.019" endtime="20201110 08:35:35.034"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.046" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:35.044" endtime="20201110 08:35:35.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.051" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:35.049" endtime="20201110 08:35:35.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.036" endtime="20201110 08:35:35.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.063" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.061" endtime="20201110 08:35:35.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.068" level="INFO">VALUE: 47637937</msg>
<status status="PASS" starttime="20201110 08:35:35.066" endtime="20201110 08:35:35.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.055" endtime="20201110 08:35:35.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.080" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.078" endtime="20201110 08:35:35.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.085" level="INFO">VALUE: [47647999, 47657998, 47667998, 47677998, 47687998, 47697998, 47707998, 47717998, 47727998, 47737998, 47747998, 47757998, 47767998, 47777998, 47787998, 47797998, 47807998, 47817998, 47827998, 47837998, 47847998, 47857998, 47867998, 47877998, 47887998, 47897998, 47907998, 47917998, 47927998, 47937998, 47947998, 47957998, 47967998, 47977998, 47987998, 47997998, 48007998, 48017998, 48027998, 48037998, 48047998, 48057998, 48067998, 48077998, 48087998, 48097998, 48107998, 48117998, 48127998, 48137998, 48147998, 48157998, 48167998, 48177998, 48187998, 48197998, 48207998, 48217998, 48227998, 48237998, 48247998, 48257998, 48267998, 48277998, 48287998, 48297998, 48307998, 48317998, 48327998, 48337998, 48347998, 48357998, 48367998, 48377998, 48387998, 48397998, 48407998, 48417998, 48427998, 48437998, 48447998, 48457998, 48467998, 48477998, 48487998, 48497998, 48507998, 48517998, 48527998, 48537998, 48547998, 48557998, 48567998, 48577998, 48587998, 48597998, 48607998, 48617998, 48627998, 48637998]</msg>
<status status="PASS" starttime="20201110 08:35:35.082" endtime="20201110 08:35:35.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.071" endtime="20201110 08:35:35.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.105" endtime="20201110 08:35:35.441"></status>
</kw>
<msg timestamp="20201110 08:35:35.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038542375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048605514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.101" endtime="20201110 08:35:35.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038542375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048605514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:35.445" endtime="20201110 08:35:35.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.452" endtime="20201110 08:35:35.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.094" endtime="20201110 08:35:35.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.089" endtime="20201110 08:35:35.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:35.480" level="INFO">${RESULT} = {'time': [0.038542375, 0.048605514, 0.058606028, 0.068607056, 0.078608208, 0.088609208, 0.098610361, 0.108611375, 0.118612542, 0.128613556, 0.138614708, 0.148615722, 0.158616889, 0.168617917, 0.178619...</msg>
<status status="PASS" starttime="20201110 08:35:35.457" endtime="20201110 08:35:35.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.486" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:35.484" endtime="20201110 08:35:35.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.488" level="INFO">VALUE: 0.038542375</msg>
<status status="PASS" starttime="20201110 08:35:35.487" endtime="20201110 08:35:35.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.481" endtime="20201110 08:35:35.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.494" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:35.493" endtime="20201110 08:35:35.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:35.496" level="INFO">VALUE: [0.048605514, 0.058606028, 0.068607056, 0.078608208, 0.088609208, 0.098610361, 0.108611375, 0.118612542, 0.128613556, 0.138614708, 0.148615722, 0.158616889, 0.168617917, 0.178619056, 0.188620083, 0.198621222, 0.20862225, 0.218623417, 0.228624431, 0.238625583, 0.248626667, 0.25862775, 0.268628778, 0.278629917, 0.288630944, 0.298632083, 0.308633111, 0.318634278, 0.328635278, 0.338636431, 0.348637458, 0.358638625, 0.368639639, 0.378640806, 0.388641806, 0.398642972, 0.408643972, 0.418645125, 0.428646153, 0.438647306, 0.448648319, 0.458649556, 0.4686505, 0.478651653, 0.488652667, 0.498653819, 0.508654847, 0.518656014, 0.528657014, 0.538658167, 0.548659194, 0.558660347, 0.568661375, 0.578662583, 0.588663556, 0.598664694, 0.608665708, 0.618666875, 0.628667889, 0.638669042, 0.648670056, 0.658671208, 0.668672236, 0.678673389, 0.688674472, 0.698675556, 0.708676597, 0.718677736, 0.728678778, 0.738679917, 0.748680958, 0.758682097, 0.768683111, 0.778684278, 0.788685333, 0.798686431, 0.808687444, 0.818688597, 0.828689625, 0.838690778, 0.848691792, 0.858692972, 0.868693972, 0.878695125, 0.888696181, 0.898697319, 0.908698319, 0.918699486, 0.928700486, 0.938701639, 0.948702667, 0.958703847, 0.968704847, 0.978705986, 0.988707056, 0.998708167, 1.008709181, 1.018710347, 1.028711361, 1.038712514] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:35.495" endtime="20201110 08:35:35.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.489" endtime="20201110 08:35:35.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.501" endtime="20201110 08:35:35.502"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:35.505" endtime="20201110 08:35:35.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.502" endtime="20201110 08:35:35.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.498" endtime="20201110 08:35:35.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:32.869" endtime="20201110 08:35:35.528"></status>
</kw>
<msg timestamp="20201110 08:35:35.528" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:35.549" endtime="20201110 08:35:37.654"></status>
</kw>
<msg timestamp="20201110 08:35:37.655" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 50298639, 'start-iter': 1, 'wakeups': [50308700, 50318700, 50328700, 5...</msg>
<status status="PASS" starttime="20201110 08:35:35.545" endtime="20201110 08:35:37.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.663" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 50298639, 'start-iter': 1, 'wakeups': [50308700, 50318700, 50328700, 5...</msg>
<status status="PASS" starttime="20201110 08:35:37.658" endtime="20201110 08:35:37.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.665" endtime="20201110 08:35:37.669"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.538" endtime="20201110 08:35:37.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.533" endtime="20201110 08:35:37.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:37.678" level="INFO">${RESULT} = {'timer-count': 6, 'wakeups': [50308700, 50318700, 50328700, 50338700, 50348700, 50358700, 50368700, 50378700, 50388700, 50398700, 50408700, 50418700, 50428700, 50438700, 50448700, 50458700, 50468700,...</msg>
<status status="PASS" starttime="20201110 08:35:37.673" endtime="20201110 08:35:37.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.688" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:37.686" endtime="20201110 08:35:37.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.693" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:37.690" endtime="20201110 08:35:37.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.680" endtime="20201110 08:35:37.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.705" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:37.703" endtime="20201110 08:35:37.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.710" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:37.708" endtime="20201110 08:35:37.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.696" endtime="20201110 08:35:37.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.722" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:37.720" endtime="20201110 08:35:37.723"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.726" level="INFO">VALUE: 50298639</msg>
<status status="PASS" starttime="20201110 08:35:37.724" endtime="20201110 08:35:37.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.713" endtime="20201110 08:35:37.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.739" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:37.736" endtime="20201110 08:35:37.739"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:37.743" level="INFO">VALUE: [50308700, 50318700, 50328700, 50338700, 50348700, 50358700, 50368700, 50378700, 50388700, 50398700, 50408700, 50418700, 50428700, 50438700, 50448700, 50458700, 50468700, 50478700, 50488700, 50498700, 50508700, 50518700, 50528700, 50538700, 50548700, 50558700, 50568700, 50578700, 50588700, 50598700, 50608700, 50618700, 50628700, 50638700, 50648700, 50658700, 50668700, 50678700, 50688700, 50698700, 50708700, 50718700, 50728700, 50738700, 50748700, 50758700, 50768700, 50778700, 50788700, 50798700, 50808700, 50818700, 50828700, 50838700, 50848700, 50858700, 50868700, 50878700, 50888700, 50898700, 50908700, 50918700, 50928700, 50938700, 50948700, 50958700, 50968700, 50978700, 50988700, 50998700, 51008700, 51018700, 51028700, 51038700, 51048700, 51058700, 51068700, 51078700, 51088700, 51098700, 51108700, 51118700, 51128700, 51138700, 51148700, 51158700, 51168700, 51178700, 51188700, 51198700, 51208700, 51218700, 51228700, 51238700, 51248700, 51258700, 51268700, 51278700, 51288700, 51298700]</msg>
<status status="PASS" starttime="20201110 08:35:37.741" endtime="20201110 08:35:37.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.730" endtime="20201110 08:35:37.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:37.764" endtime="20201110 08:35:38.105"></status>
</kw>
<msg timestamp="20201110 08:35:38.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036186667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046249417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:37.761" endtime="20201110 08:35:38.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036186667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046249417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:38.114" endtime="20201110 08:35:38.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.131" endtime="20201110 08:35:38.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.754" endtime="20201110 08:35:38.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:37.747" endtime="20201110 08:35:38.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:38.194" level="INFO">${RESULT} = {'time': [0.036186667, 0.046249417, 0.056250931, 0.066251944, 0.076253097, 0.086254111, 0.096255278, 0.106256306, 0.116257458, 0.126258486, 0.136259653, 0.146260667, 0.156261819, 0.166262861, 0.176264...</msg>
<status status="PASS" starttime="20201110 08:35:38.140" endtime="20201110 08:35:38.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.204" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:35:38.202" endtime="20201110 08:35:38.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.209" level="INFO">VALUE: 0.036186667</msg>
<status status="PASS" starttime="20201110 08:35:38.207" endtime="20201110 08:35:38.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.196" endtime="20201110 08:35:38.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.222" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:38.220" endtime="20201110 08:35:38.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:38.227" level="INFO">VALUE: [0.046249417, 0.056250931, 0.066251944, 0.076253097, 0.086254111, 0.096255278, 0.106256306, 0.116257458, 0.126258486, 0.136259653, 0.146260667, 0.156261819, 0.166262861, 0.176264, 0.186265028, 0.196266181, 0.206267222, 0.216268375, 0.226269389, 0.236270542, 0.246271569, 0.256272736, 0.266273764, 0.276275, 0.286275931, 0.296277097, 0.306278125, 0.316279278, 0.326280306, 0.336281458, 0.346282542, 0.356283639, 0.366284653, 0.376285833, 0.386286847, 0.396288028, 0.406289028, 0.416290194, 0.426291208, 0.436292417, 0.446293403, 0.456294542, 0.466295569, 0.476296736, 0.48629775, 0.496298917, 0.506299944, 0.516301125, 0.526302111, 0.536303278, 0.546304306, 0.556305458, 0.566306472, 0.576307681, 0.586308653, 0.596309847, 0.606310833, 0.616312014, 0.626313028, 0.636314181, 0.646315194, 0.656316361, 0.666317375, 0.676318542, 0.686319569, 0.696320722, 0.706321792, 0.716322944, 0.726323917, 0.736325083, 0.746326125, 0.756327278, 0.766328292, 0.776329458, 0.786330458, 0.796331625, 0.806332639, 0.816333806, 0.826334819, 0.836335986, 0.846337, 0.856338167, 0.866339208, 0.876340375, 0.886341375, 0.896342514, 0.906343542, 0.916344708, 0.92634575, 0.936346875, 0.946347917, 0.956349056, 0.966350083, 0.976351236, 0.986352264, 0.996353417, 1.006354444, 1.016355597, 1.026356611, 1.036357792] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:38.224" endtime="20201110 08:35:38.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.212" endtime="20201110 08:35:38.229"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.235" endtime="20201110 08:35:38.238"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:38.244" endtime="20201110 08:35:38.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.239" endtime="20201110 08:35:38.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.231" endtime="20201110 08:35:38.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:35.529" endtime="20201110 08:35:38.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.162" endtime="20201110 08:35:38.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:30.160" endtime="20201110 08:35:38.270"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:38.276" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:38.298" endtime="20201110 08:35:40.404"></status>
</kw>
<msg timestamp="20201110 08:35:40.405" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53048069, 'start-iter': 1, 'wakeups': [53058146, 53068145, 53078145, 5...</msg>
<status status="PASS" starttime="20201110 08:35:38.295" endtime="20201110 08:35:40.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.412" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53048069, 'start-iter': 1, 'wakeups': [53058146, 53068145, 53078145, 5...</msg>
<status status="PASS" starttime="20201110 08:35:40.408" endtime="20201110 08:35:40.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.415" endtime="20201110 08:35:40.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.286" endtime="20201110 08:35:40.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.281" endtime="20201110 08:35:40.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.429" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [53058146, 53068145, 53078145, 53088145, 53098145, 53108145, 53118145, 53128145, 53138145, 53148145, 53158145, 53168145, 53178145, 53188145, 53198145, 53208145, 53218145,...</msg>
<status status="PASS" starttime="20201110 08:35:40.424" endtime="20201110 08:35:40.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.439" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:40.437" endtime="20201110 08:35:40.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.443" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:40.441" endtime="20201110 08:35:40.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.431" endtime="20201110 08:35:40.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.458" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:40.455" endtime="20201110 08:35:40.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.463" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:40.460" endtime="20201110 08:35:40.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.447" endtime="20201110 08:35:40.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.475" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.473" endtime="20201110 08:35:40.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.480" level="INFO">VALUE: 53048069</msg>
<status status="PASS" starttime="20201110 08:35:40.478" endtime="20201110 08:35:40.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.466" endtime="20201110 08:35:40.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.492" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.490" endtime="20201110 08:35:40.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.497" level="INFO">VALUE: [53058146, 53068145, 53078145, 53088145, 53098145, 53108145, 53118145, 53128145, 53138145, 53148145, 53158145, 53168145, 53178145, 53188145, 53198145, 53208145, 53218145, 53228145, 53238145, 53248145, 53258145, 53268145, 53278145, 53288145, 53298145, 53308145, 53318145, 53328145, 53338145, 53348145, 53358145, 53368145, 53378145, 53388145, 53398145, 53408145, 53418145, 53428145, 53438145, 53448145, 53458145, 53468145, 53478145, 53488145, 53498145, 53508145, 53518145, 53528145, 53538145, 53548145, 53558145, 53568145, 53578145, 53588145, 53598145, 53608145, 53618145, 53628145, 53638145, 53648145, 53658145, 53668145, 53678145, 53688145, 53698145, 53708145, 53718145, 53728145, 53738145, 53748145, 53758145, 53768145, 53778145, 53788145, 53798145, 53808145, 53818145, 53828145, 53838145, 53848145, 53858145, 53868145, 53878145, 53888145, 53898145, 53908145, 53918145, 53928145, 53938145, 53948145, 53958145, 53968145, 53978145, 53988145, 53998145, 54008145, 54018145, 54028145, 54038145, 54048145]</msg>
<status status="PASS" starttime="20201110 08:35:40.495" endtime="20201110 08:35:40.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.483" endtime="20201110 08:35:40.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.516" endtime="20201110 08:35:40.856"></status>
</kw>
<msg timestamp="20201110 08:35:40.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045660583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055738819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.513" endtime="20201110 08:35:40.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045660583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055738819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:40.864" endtime="20201110 08:35:40.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.881" endtime="20201110 08:35:40.885"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.506" endtime="20201110 08:35:40.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.501" endtime="20201110 08:35:40.888"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:40.944" level="INFO">${RESULT} = {'time': [0.045660583, 0.055738819, 0.065739319, 0.075740347, 0.085741528, 0.095742514, 0.105743667, 0.115744681, 0.125745847, 0.135746861, 0.145748028, 0.155749042, 0.165750194, 0.175751222, 0.185752...</msg>
<status status="PASS" starttime="20201110 08:35:40.890" endtime="20201110 08:35:40.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.955" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:40.953" endtime="20201110 08:35:40.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.960" level="INFO">VALUE: 0.045660583</msg>
<status status="PASS" starttime="20201110 08:35:40.958" endtime="20201110 08:35:40.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.947" endtime="20201110 08:35:40.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.973" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:40.971" endtime="20201110 08:35:40.974"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:40.978" level="INFO">VALUE: [0.055738819, 0.065739319, 0.075740347, 0.085741528, 0.095742514, 0.105743667, 0.115744681, 0.125745847, 0.135746861, 0.145748028, 0.155749042, 0.165750194, 0.175751222, 0.185752361, 0.195753444, 0.205754556, 0.215755556, 0.225756722, 0.235757736, 0.245758903, 0.255759917, 0.265761111, 0.275762083, 0.28576325, 0.295764264, 0.305765458, 0.315766444, 0.325767597, 0.335768639, 0.345769819, 0.355770847, 0.365771958, 0.375772986, 0.385774125, 0.395775153, 0.405776347, 0.415777319, 0.425778486, 0.435779542, 0.445780667, 0.455781681, 0.465782861, 0.475783847, 0.485785028, 0.495786042, 0.505787208, 0.515788236, 0.525789361, 0.535790389, 0.545791597, 0.555792556, 0.565793736, 0.575794736, 0.585795986, 0.595797, 0.605798069, 0.615799111, 0.625800264, 0.635801264, 0.645802431, 0.655803514, 0.665804611, 0.675805625, 0.685806778, 0.695807819, 0.705808958, 0.715809972, 0.725811139, 0.735812153, 0.745813319, 0.755814361, 0.765815486, 0.775816514, 0.785817667, 0.795818681, 0.805819847, 0.815820861, 0.825822014, 0.835823042, 0.845824208, 0.855825236, 0.865826375, 0.875827403, 0.885828556, 0.895829597, 0.905830736, 0.915831764, 0.925832903, 0.935833917, 0.945835097, 0.955836111, 0.965837264, 0.975838292, 0.985839431, 0.995840472, 1.005841625, 1.015842625, 1.025843792, 1.035844806, 1.045845972] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:40.976" endtime="20201110 08:35:40.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.963" endtime="20201110 08:35:40.980"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:40.987" endtime="20201110 08:35:40.989"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:40.995" endtime="20201110 08:35:41.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.991" endtime="20201110 08:35:41.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:40.982" endtime="20201110 08:35:41.020"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.277" endtime="20201110 08:35:41.020"></status>
</kw>
<msg timestamp="20201110 08:35:41.021" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:41.042" endtime="20201110 08:35:43.147"></status>
</kw>
<msg timestamp="20201110 08:35:43.148" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55791373, 'start-iter': 1, 'wakeups': [55801449, 55811449, 55821449, 5...</msg>
<status status="PASS" starttime="20201110 08:35:41.038" endtime="20201110 08:35:43.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.155" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55791373, 'start-iter': 1, 'wakeups': [55801449, 55811449, 55821449, 5...</msg>
<status status="PASS" starttime="20201110 08:35:43.150" endtime="20201110 08:35:43.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.157" endtime="20201110 08:35:43.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.031" endtime="20201110 08:35:43.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.026" endtime="20201110 08:35:43.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.170" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [55801449, 55811449, 55821449, 55831449, 55841449, 55851449, 55861449, 55871449, 55881449, 55891449, 55901449, 55911449, 55921449, 55931449, 55941449, 55951449, 55961449,...</msg>
<status status="PASS" starttime="20201110 08:35:43.166" endtime="20201110 08:35:43.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.180" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:43.178" endtime="20201110 08:35:43.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.185" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:43.182" endtime="20201110 08:35:43.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.172" endtime="20201110 08:35:43.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.202" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:43.200" endtime="20201110 08:35:43.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.207" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:43.204" endtime="20201110 08:35:43.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.193" endtime="20201110 08:35:43.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.220" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.218" endtime="20201110 08:35:43.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.222" level="INFO">VALUE: 55791373</msg>
<status status="PASS" starttime="20201110 08:35:43.221" endtime="20201110 08:35:43.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.210" endtime="20201110 08:35:43.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.228" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.227" endtime="20201110 08:35:43.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.230" level="INFO">VALUE: [55801449, 55811449, 55821449, 55831449, 55841449, 55851449, 55861449, 55871449, 55881449, 55891449, 55901449, 55911449, 55921449, 55931449, 55941449, 55951449, 55961449, 55971449, 55981449, 55991449, 56001449, 56011449, 56021449, 56031449, 56041449, 56051449, 56061449, 56071449, 56081449, 56091449, 56101449, 56111449, 56121449, 56131449, 56141449, 56151449, 56161449, 56171449, 56181449, 56191449, 56201449, 56211449, 56221449, 56231449, 56241449, 56251449, 56261449, 56271449, 56281449, 56291449, 56301449, 56311449, 56321449, 56331449, 56341449, 56351449, 56361449, 56371449, 56381449, 56391449, 56401449, 56411449, 56421449, 56431449, 56441449, 56451449, 56461449, 56471449, 56481449, 56491449, 56501449, 56511449, 56521449, 56531449, 56541449, 56551449, 56561449, 56571449, 56581449, 56591449, 56601449, 56611449, 56621449, 56631449, 56641449, 56651449, 56661449, 56671449, 56681449, 56691449, 56701449, 56711449, 56721449, 56731449, 56741449, 56751449, 56761449, 56771449, 56781449, 56791449]</msg>
<status status="PASS" starttime="20201110 08:35:43.229" endtime="20201110 08:35:43.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.224" endtime="20201110 08:35:43.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.239" endtime="20201110 08:35:43.569"></status>
</kw>
<msg timestamp="20201110 08:35:43.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037897014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047974917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.237" endtime="20201110 08:35:43.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037897014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047974917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:43.578" endtime="20201110 08:35:43.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.595" endtime="20201110 08:35:43.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.234" endtime="20201110 08:35:43.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.232" endtime="20201110 08:35:43.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:43.658" level="INFO">${RESULT} = {'time': [0.037897014, 0.047974917, 0.057976458, 0.0679775, 0.077978625, 0.087979625, 0.097980778, 0.107981792, 0.117982944, 0.127983972, 0.137985125, 0.147986125, 0.157987306, 0.167988306, 0.17798947...</msg>
<status status="PASS" starttime="20201110 08:35:43.604" endtime="20201110 08:35:43.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.669" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:43.667" endtime="20201110 08:35:43.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.674" level="INFO">VALUE: 0.037897014</msg>
<status status="PASS" starttime="20201110 08:35:43.672" endtime="20201110 08:35:43.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.660" endtime="20201110 08:35:43.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.689" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:43.686" endtime="20201110 08:35:43.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:43.693" level="INFO">VALUE: [0.047974917, 0.057976458, 0.0679775, 0.077978625, 0.087979625, 0.097980778, 0.107981792, 0.117982944, 0.127983972, 0.137985125, 0.147986125, 0.157987306, 0.167988306, 0.177989472, 0.187990472, 0.197991639, 0.207992667, 0.217993806, 0.227994847, 0.237995986, 0.247997, 0.257998167, 0.267999167, 0.278000347, 0.288001347, 0.2980025, 0.308003542, 0.318004681, 0.328005708, 0.338006861, 0.348007875, 0.358009042, 0.368010069, 0.378011208, 0.388012236, 0.398013389, 0.408014417, 0.418015556, 0.428016569, 0.43801775, 0.44801875, 0.458019903, 0.468020931, 0.478022125, 0.488023097, 0.498024264, 0.508025278, 0.518026431, 0.528027444, 0.538028611, 0.548029625, 0.558030792, 0.568031806, 0.578032972, 0.588033972, 0.598035153, 0.608036167, 0.618037306, 0.628038375, 0.638039486, 0.648040528, 0.658041681, 0.668042681, 0.678043833, 0.688044847, 0.698046014, 0.708047028, 0.718048181, 0.72804925, 0.738050361, 0.748051375, 0.758052556, 0.768053556, 0.778054708, 0.788055736, 0.798056944, 0.808057903, 0.818059111, 0.828060083, 0.83806125, 0.848062264, 0.858063431, 0.868064444, 0.878065597, 0.888066625, 0.898067764, 0.908068778, 0.918069958, 0.928070958, 0.938072111, 0.948073167, 0.958074306, 0.968075306, 0.978076472, 0.988077486, 0.998078639, 1.008079667, 1.018080819, 1.028081833, 1.038083014] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:43.691" endtime="20201110 08:35:43.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.678" endtime="20201110 08:35:43.697"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.704" endtime="20201110 08:35:43.706"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:43.712" endtime="20201110 08:35:43.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.708" endtime="20201110 08:35:43.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.699" endtime="20201110 08:35:43.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:41.022" endtime="20201110 08:35:43.737"></status>
</kw>
<msg timestamp="20201110 08:35:43.738" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:43.758" endtime="20201110 08:35:45.863"></status>
</kw>
<msg timestamp="20201110 08:35:45.865" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 58508061, 'start-iter': 1, 'wakeups': [58518137, 58528137, 58538137, 5...</msg>
<status status="PASS" starttime="20201110 08:35:43.755" endtime="20201110 08:35:45.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.872" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 58508061, 'start-iter': 1, 'wakeups': [58518137, 58528137, 58538137, 5...</msg>
<status status="PASS" starttime="20201110 08:35:45.867" endtime="20201110 08:35:45.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.874" endtime="20201110 08:35:45.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.748" endtime="20201110 08:35:45.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.743" endtime="20201110 08:35:45.881"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:45.887" level="INFO">${RESULT} = {'timer-count': 7, 'wakeups': [58518137, 58528137, 58538137, 58548137, 58558137, 58568137, 58578137, 58588137, 58598137, 58608137, 58618137, 58628137, 58638137, 58648137, 58658137, 58668137, 58678137,...</msg>
<status status="PASS" starttime="20201110 08:35:45.883" endtime="20201110 08:35:45.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.897" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:45.895" endtime="20201110 08:35:45.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.902" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:45.900" endtime="20201110 08:35:45.903"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.889" endtime="20201110 08:35:45.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.914" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:45.912" endtime="20201110 08:35:45.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.919" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:45.916" endtime="20201110 08:35:45.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.905" endtime="20201110 08:35:45.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.931" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:45.929" endtime="20201110 08:35:45.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.936" level="INFO">VALUE: 58508061</msg>
<status status="PASS" starttime="20201110 08:35:45.934" endtime="20201110 08:35:45.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.922" endtime="20201110 08:35:45.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.948" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:45.946" endtime="20201110 08:35:45.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:45.953" level="INFO">VALUE: [58518137, 58528137, 58538137, 58548137, 58558137, 58568137, 58578137, 58588137, 58598137, 58608137, 58618137, 58628137, 58638137, 58648137, 58658137, 58668137, 58678137, 58688137, 58698137, 58708137, 58718137, 58728137, 58738137, 58748137, 58758137, 58768137, 58778137, 58788137, 58798137, 58808137, 58818137, 58828137, 58838137, 58848137, 58858137, 58868137, 58878137, 58888137, 58898137, 58908137, 58918137, 58928137, 58938137, 58948137, 58958137, 58968137, 58978137, 58988137, 58998137, 59008137, 59018137, 59028137, 59038137, 59048137, 59058137, 59068137, 59078137, 59088137, 59098137, 59108137, 59118137, 59128137, 59138137, 59148137, 59158137, 59168137, 59178137, 59188137, 59198137, 59208137, 59218137, 59228137, 59238137, 59248137, 59258137, 59268137, 59278137, 59288137, 59298137, 59308137, 59318137, 59328137, 59338137, 59348137, 59358137, 59368137, 59378137, 59388137, 59398137, 59408137, 59418137, 59428137, 59438137, 59448137, 59458137, 59468137, 59478137, 59488137, 59498137, 59508137]</msg>
<status status="PASS" starttime="20201110 08:35:45.951" endtime="20201110 08:35:45.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.940" endtime="20201110 08:35:45.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:45.974" endtime="20201110 08:35:46.319"></status>
</kw>
<msg timestamp="20201110 08:35:46.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037849875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047927778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:45.969" endtime="20201110 08:35:46.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037849875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047927778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:46.328" endtime="20201110 08:35:46.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.345" endtime="20201110 08:35:46.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.961" endtime="20201110 08:35:46.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:45.957" endtime="20201110 08:35:46.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:46.407" level="INFO">${RESULT} = {'time': [0.037849875, 0.047927778, 0.057929278, 0.067930292, 0.077931444, 0.087932458, 0.097933681, 0.107934639, 0.117935792, 0.127936806, 0.137937958, 0.147938986, 0.157940125, 0.167941139, 0.177942...</msg>
<status status="PASS" starttime="20201110 08:35:46.354" endtime="20201110 08:35:46.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.417" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:35:46.415" endtime="20201110 08:35:46.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.422" level="INFO">VALUE: 0.037849875</msg>
<status status="PASS" starttime="20201110 08:35:46.420" endtime="20201110 08:35:46.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.409" endtime="20201110 08:35:46.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.435" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:46.433" endtime="20201110 08:35:46.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:46.440" level="INFO">VALUE: [0.047927778, 0.057929278, 0.067930292, 0.077931444, 0.087932458, 0.097933681, 0.107934639, 0.117935792, 0.127936806, 0.137937958, 0.147938986, 0.157940125, 0.167941139, 0.177942319, 0.187943375, 0.197944472, 0.207945528, 0.217946639, 0.227947653, 0.237948819, 0.247949847, 0.257950986, 0.267952, 0.277953153, 0.287954181, 0.297955347, 0.307956361, 0.3179575, 0.327958556, 0.337959681, 0.347960694, 0.357961861, 0.367962861, 0.377964028, 0.387965056, 0.397966208, 0.407967208, 0.417968361, 0.427969417, 0.437970542, 0.447971569, 0.457972708, 0.467973736, 0.477974889, 0.487975903, 0.497977083, 0.507978111, 0.517979222, 0.52798025, 0.537981417, 0.547982417, 0.557983583, 0.567984597, 0.57798575, 0.587986764, 0.597987931, 0.607988944, 0.617990111, 0.627991111, 0.637992278, 0.647993306, 0.657994444, 0.667995444, 0.677996597, 0.687997611, 0.697998778, 0.707999806, 0.718000931, 0.728001958, 0.738003097, 0.748004125, 0.758005264, 0.768006264, 0.778007417, 0.788008431, 0.798009583, 0.808010597, 0.81801175, 0.828012764, 0.838013917, 0.848014931, 0.858016083, 0.868017097, 0.87801825, 0.888019278, 0.898020431, 0.908021431, 0.918022583, 0.928023597, 0.93802475, 0.948025764, 0.958026931, 0.968027944, 0.978029069, 0.988030083, 0.998031278, 1.00803225, 1.018033444, 1.028034431, 1.038035597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:46.438" endtime="20201110 08:35:46.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.426" endtime="20201110 08:35:46.443"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.449" endtime="20201110 08:35:46.452"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:46.458" endtime="20201110 08:35:46.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.453" endtime="20201110 08:35:46.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.445" endtime="20201110 08:35:46.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:43.739" endtime="20201110 08:35:46.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.273" endtime="20201110 08:35:46.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:38.271" endtime="20201110 08:35:46.485"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:46.490" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:46.513" endtime="20201110 08:35:48.618"></status>
</kw>
<msg timestamp="20201110 08:35:48.619" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61262873, 'start-iter': 1, 'wakeups': [61272964, 61282966, 61292966, 6...</msg>
<status status="PASS" starttime="20201110 08:35:46.508" endtime="20201110 08:35:48.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.626" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61262873, 'start-iter': 1, 'wakeups': [61272964, 61282966, 61292966, 6...</msg>
<status status="PASS" starttime="20201110 08:35:48.622" endtime="20201110 08:35:48.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.629" endtime="20201110 08:35:48.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.501" endtime="20201110 08:35:48.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.496" endtime="20201110 08:35:48.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:48.642" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [61272964, 61282966, 61292966, 61302966, 61312966, 61322966, 61332966, 61342966, 61352966, 61362966, 61372966, 61382966, 61392966, 61402966, 61412966, 61422966, 61432966,...</msg>
<status status="PASS" starttime="20201110 08:35:48.637" endtime="20201110 08:35:48.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.652" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:48.649" endtime="20201110 08:35:48.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.656" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:48.654" endtime="20201110 08:35:48.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.643" endtime="20201110 08:35:48.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.668" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:48.666" endtime="20201110 08:35:48.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.673" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:48.670" endtime="20201110 08:35:48.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.660" endtime="20201110 08:35:48.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.685" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:48.683" endtime="20201110 08:35:48.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.689" level="INFO">VALUE: 61262873</msg>
<status status="PASS" starttime="20201110 08:35:48.687" endtime="20201110 08:35:48.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.676" endtime="20201110 08:35:48.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.702" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:48.699" endtime="20201110 08:35:48.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:48.745" level="INFO">VALUE: [61272964, 61282966, 61292966, 61302966, 61312966, 61322966, 61332966, 61342966, 61352966, 61362966, 61372966, 61382966, 61392966, 61402966, 61412966, 61422966, 61432966, 61442966, 61452966, 61462966, 61472966, 61482966, 61492966, 61502966, 61512966, 61522966, 61532966, 61542966, 61552966, 61562966, 61572966, 61582966, 61592966, 61602966, 61612966, 61622966, 61632966, 61642966, 61652966, 61662966, 61672966, 61682966, 61692966, 61702966, 61712966, 61722966, 61732966, 61742966, 61752966, 61762966, 61772966, 61782966, 61792966, 61802966, 61812966, 61822966, 61832966, 61842966, 61852966, 61862966, 61872966, 61882966, 61892966, 61902966, 61912966, 61922966, 61932966, 61942966, 61952966, 61962966, 61972966, 61982966, 61992966, 62002966, 62012966, 62022966, 62032966, 62042966, 62052966, 62062966, 62072966, 62082966, 62092966, 62102966, 62112966, 62122966, 62132966, 62142966, 62152966, 62162966, 62172966, 62182966, 62192966, 62202966, 62212966, 62222966, 62232966, 62242966, 62252966, 62262966]</msg>
<status status="PASS" starttime="20201110 08:35:48.704" endtime="20201110 08:35:48.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.693" endtime="20201110 08:35:48.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:48.764" endtime="20201110 08:35:49.099"></status>
</kw>
<msg timestamp="20201110 08:35:49.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046907264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056999222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:48.760" endtime="20201110 08:35:49.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046907264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056999222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:49.103" endtime="20201110 08:35:49.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.111" endtime="20201110 08:35:49.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.753" endtime="20201110 08:35:49.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:48.749" endtime="20201110 08:35:49.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:49.139" level="INFO">${RESULT} = {'time': [0.046907264, 0.056999222, 0.067002458, 0.077003472, 0.087004625, 0.097005653, 0.107006819, 0.117007819, 0.127009056, 0.137010014, 0.147011167, 0.157012181, 0.167013333, 0.177014361, 0.187015...</msg>
<status status="PASS" starttime="20201110 08:35:49.115" endtime="20201110 08:35:49.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.145" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:49.143" endtime="20201110 08:35:49.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.147" level="INFO">VALUE: 0.046907264</msg>
<status status="PASS" starttime="20201110 08:35:49.146" endtime="20201110 08:35:49.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.140" endtime="20201110 08:35:49.148"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.153" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:49.152" endtime="20201110 08:35:49.153"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:49.155" level="INFO">VALUE: [0.056999222, 0.067002458, 0.077003472, 0.087004625, 0.097005653, 0.107006819, 0.117007819, 0.127009056, 0.137010014, 0.147011167, 0.157012181, 0.167013333, 0.177014361, 0.187015514, 0.197016611, 0.207017694, 0.217018736, 0.227019889, 0.237020903, 0.247022069, 0.257023069, 0.267024236, 0.27702525, 0.287026403, 0.297027431, 0.307028583, 0.317029611, 0.327030833, 0.337031792, 0.347032972, 0.357033958, 0.367035139, 0.377036153, 0.387037306, 0.397038333, 0.4070395, 0.417040514, 0.427041667, 0.437042681, 0.447043847, 0.457044861, 0.467046028, 0.477047083, 0.487048222, 0.497049222, 0.507050375, 0.517051403, 0.527052556, 0.537053597, 0.547054778, 0.557055764, 0.567056917, 0.577057944, 0.587059111, 0.597060125, 0.607061278, 0.617062292, 0.627063458, 0.637064486, 0.647065639, 0.657066653, 0.667067833, 0.677068861, 0.68707, 0.697071028, 0.707072194, 0.717073194, 0.727074361, 0.737075403, 0.747076528, 0.757077556, 0.767078708, 0.777079736, 0.787080944, 0.797081958, 0.807083083, 0.817084083, 0.827085264, 0.837086264, 0.847087431, 0.857088472, 0.867089611, 0.877090625, 0.887091792, 0.897092806, 0.907093972, 0.917094986, 0.927096153, 0.937097167, 0.947098319, 0.957099403, 0.9671005, 0.977101528, 0.987102681, 0.997103708, 1.007104861, 1.017105903, 1.027107042, 1.037108056, 1.047109222] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:49.154" endtime="20201110 08:35:49.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.148" endtime="20201110 08:35:49.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.159" endtime="20201110 08:35:49.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:49.163" endtime="20201110 08:35:49.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.161" endtime="20201110 08:35:49.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.157" endtime="20201110 08:35:49.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.492" endtime="20201110 08:35:49.188"></status>
</kw>
<msg timestamp="20201110 08:35:49.188" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:49.209" endtime="20201110 08:35:51.315"></status>
</kw>
<msg timestamp="20201110 08:35:51.317" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63958813, 'start-iter': 1, 'wakeups': [63968904, 63978906, 63988906, 6...</msg>
<status status="PASS" starttime="20201110 08:35:49.206" endtime="20201110 08:35:51.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.323" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 63958813, 'start-iter': 1, 'wakeups': [63968904, 63978906, 63988906, 6...</msg>
<status status="PASS" starttime="20201110 08:35:51.319" endtime="20201110 08:35:51.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.326" endtime="20201110 08:35:51.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.199" endtime="20201110 08:35:51.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.193" endtime="20201110 08:35:51.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:51.338" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [63968904, 63978906, 63988906, 63998906, 64008906, 64018906, 64028906, 64038906, 64048906, 64058906, 64068906, 64078906, 64088906, 64098906, 64108906, 64118906, 64128906,...</msg>
<status status="PASS" starttime="20201110 08:35:51.334" endtime="20201110 08:35:51.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.349" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:51.346" endtime="20201110 08:35:51.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.353" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:51.351" endtime="20201110 08:35:51.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.340" endtime="20201110 08:35:51.355"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.365" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:51.363" endtime="20201110 08:35:51.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.372" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:51.368" endtime="20201110 08:35:51.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.357" endtime="20201110 08:35:51.374"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.384" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:51.382" endtime="20201110 08:35:51.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.389" level="INFO">VALUE: 63958813</msg>
<status status="PASS" starttime="20201110 08:35:51.387" endtime="20201110 08:35:51.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.375" endtime="20201110 08:35:51.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.401" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:51.399" endtime="20201110 08:35:51.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.406" level="INFO">VALUE: [63968904, 63978906, 63988906, 63998906, 64008906, 64018906, 64028906, 64038906, 64048906, 64058906, 64068906, 64078906, 64088906, 64098906, 64108906, 64118906, 64128906, 64138906, 64148906, 64158906, 64168906, 64178906, 64188906, 64198906, 64208906, 64218906, 64228906, 64238906, 64248906, 64258906, 64268906, 64278906, 64288906, 64298906, 64308906, 64318906, 64328906, 64338906, 64348906, 64358906, 64368906, 64378906, 64388906, 64398906, 64408906, 64418906, 64428906, 64438906, 64448906, 64458906, 64468906, 64478906, 64488906, 64498906, 64508906, 64518906, 64528906, 64538906, 64548906, 64558906, 64568906, 64578906, 64588906, 64598906, 64608906, 64618906, 64628906, 64638906, 64648906, 64658906, 64668906, 64678906, 64688906, 64698906, 64708906, 64718906, 64728906, 64738906, 64748906, 64758906, 64768906, 64778906, 64788906, 64798906, 64808906, 64818906, 64828906, 64838906, 64848906, 64858906, 64868906, 64878906, 64888906, 64898906, 64908906, 64918906, 64928906, 64938906, 64948906, 64958906]</msg>
<status status="PASS" starttime="20201110 08:35:51.403" endtime="20201110 08:35:51.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.392" endtime="20201110 08:35:51.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.425" endtime="20201110 08:35:51.766"></status>
</kw>
<msg timestamp="20201110 08:35:51.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037891139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047983083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.422" endtime="20201110 08:35:51.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037891139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047983083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:51.775" endtime="20201110 08:35:51.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.792" endtime="20201110 08:35:51.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.415" endtime="20201110 08:35:51.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.409" endtime="20201110 08:35:51.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:51.853" level="INFO">${RESULT} = {'time': [0.037891139, 0.047983083, 0.057986333, 0.067987333, 0.077988556, 0.087989528, 0.097990667, 0.107991681, 0.117992861, 0.127993889, 0.137995014, 0.147996042, 0.157997208, 0.167998208, 0.177999...</msg>
<status status="PASS" starttime="20201110 08:35:51.800" endtime="20201110 08:35:51.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.864" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:51.862" endtime="20201110 08:35:51.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.868" level="INFO">VALUE: 0.037891139</msg>
<status status="PASS" starttime="20201110 08:35:51.866" endtime="20201110 08:35:51.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.855" endtime="20201110 08:35:51.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.883" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:51.881" endtime="20201110 08:35:51.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:51.888" level="INFO">VALUE: [0.047983083, 0.057986333, 0.067987333, 0.077988556, 0.087989528, 0.097990667, 0.107991681, 0.117992861, 0.127993889, 0.137995014, 0.147996042, 0.157997208, 0.167998208, 0.177999389, 0.188000403, 0.198001611, 0.208002569, 0.21800375, 0.22800475, 0.238005917, 0.248006917, 0.258008069, 0.268009097, 0.27801025, 0.288011278, 0.298012444, 0.308013444, 0.318014611, 0.328015639, 0.338016806, 0.348017806, 0.358018958, 0.36802, 0.378021181, 0.388022181, 0.398023347, 0.408024333, 0.4180255, 0.428026528, 0.438027694, 0.448028708, 0.458029847, 0.468030889, 0.478032028, 0.488033042, 0.498034208, 0.508035222, 0.518036389, 0.528037417, 0.538038583, 0.548039597, 0.558040736, 0.568041778, 0.578042917, 0.588043931, 0.598045139, 0.608046125, 0.618047333, 0.628048292, 0.638049472, 0.648050486, 0.658051639, 0.668052653, 0.678053833, 0.688054833, 0.698056, 0.708057028, 0.718058222, 0.728059181, 0.738060333, 0.748061375, 0.758062514, 0.768063542, 0.77806475, 0.788065722, 0.798066875, 0.808067903, 0.818069111, 0.828070069, 0.838071222, 0.84807225, 0.858073417, 0.868074444, 0.878075625, 0.888076597, 0.898077778, 0.908078778, 0.918079972, 0.928080972, 0.938082111, 0.948083153, 0.958084333, 0.968085333, 0.978086472, 0.9880875, 0.998088653, 1.008089736, 1.018090833, 1.028091847, 1.038093028] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:51.885" endtime="20201110 08:35:51.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.873" endtime="20201110 08:35:51.890"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.897" endtime="20201110 08:35:51.899"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:51.905" endtime="20201110 08:35:51.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.900" endtime="20201110 08:35:51.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.892" endtime="20201110 08:35:51.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:49.190" endtime="20201110 08:35:51.931"></status>
</kw>
<msg timestamp="20201110 08:35:51.931" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:51.953" endtime="20201110 08:35:54.058"></status>
</kw>
<msg timestamp="20201110 08:35:54.060" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 66702888, 'start-iter': 1, 'wakeups': [66712979, 66722981, 66732981, 6...</msg>
<status status="PASS" starttime="20201110 08:35:51.950" endtime="20201110 08:35:54.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.073" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 66702888, 'start-iter': 1, 'wakeups': [66712979, 66722981, 66732981, 6...</msg>
<status status="PASS" starttime="20201110 08:35:54.068" endtime="20201110 08:35:54.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.076" endtime="20201110 08:35:54.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.942" endtime="20201110 08:35:54.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.936" endtime="20201110 08:35:54.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:54.089" level="INFO">${RESULT} = {'timer-count': 8, 'wakeups': [66712979, 66722981, 66732981, 66742981, 66752981, 66762981, 66772981, 66782981, 66792981, 66802981, 66812981, 66822981, 66832981, 66842981, 66852981, 66862981, 66872981,...</msg>
<status status="PASS" starttime="20201110 08:35:54.084" endtime="20201110 08:35:54.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.099" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:54.097" endtime="20201110 08:35:54.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.103" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:54.101" endtime="20201110 08:35:54.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.091" endtime="20201110 08:35:54.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.116" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:54.113" endtime="20201110 08:35:54.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.120" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:54.118" endtime="20201110 08:35:54.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.107" endtime="20201110 08:35:54.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.132" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:54.130" endtime="20201110 08:35:54.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.137" level="INFO">VALUE: 66702888</msg>
<status status="PASS" starttime="20201110 08:35:54.135" endtime="20201110 08:35:54.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.124" endtime="20201110 08:35:54.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.149" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:54.147" endtime="20201110 08:35:54.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.154" level="INFO">VALUE: [66712979, 66722981, 66732981, 66742981, 66752981, 66762981, 66772981, 66782981, 66792981, 66802981, 66812981, 66822981, 66832981, 66842981, 66852981, 66862981, 66872981, 66882981, 66892981, 66902981, 66912981, 66922981, 66932981, 66942981, 66952981, 66962981, 66972981, 66982981, 66992981, 67002981, 67012981, 67022981, 67032981, 67042981, 67052981, 67062981, 67072981, 67082981, 67092981, 67102981, 67112981, 67122981, 67132981, 67142981, 67152981, 67162981, 67172981, 67182981, 67192981, 67202981, 67212981, 67222981, 67232981, 67242981, 67252981, 67262981, 67272981, 67282981, 67292981, 67302981, 67312981, 67322981, 67332981, 67342981, 67352981, 67362981, 67372981, 67382981, 67392981, 67402981, 67412981, 67422981, 67432981, 67442981, 67452981, 67462981, 67472981, 67482981, 67492981, 67502981, 67512981, 67522981, 67532981, 67542981, 67552981, 67562981, 67572981, 67582981, 67592981, 67602981, 67612981, 67622981, 67632981, 67642981, 67652981, 67662981, 67672981, 67682981, 67692981, 67702981]</msg>
<status status="PASS" starttime="20201110 08:35:54.151" endtime="20201110 08:35:54.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.140" endtime="20201110 08:35:54.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.175" endtime="20201110 08:35:54.516"></status>
</kw>
<msg timestamp="20201110 08:35:54.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039780139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049872417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.171" endtime="20201110 08:35:54.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039780139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049872417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:54.524" endtime="20201110 08:35:54.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.542" endtime="20201110 08:35:54.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.162" endtime="20201110 08:35:54.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.158" endtime="20201110 08:35:54.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:54.605" level="INFO">${RESULT} = {'time': [0.039780139, 0.049872417, 0.059875653, 0.069876681, 0.079877833, 0.089878861, 0.099880069, 0.109881014, 0.119882181, 0.129883194, 0.139884347, 0.149885361, 0.159886528, 0.169887542, 0.179888...</msg>
<status status="PASS" starttime="20201110 08:35:54.551" endtime="20201110 08:35:54.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.616" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:35:54.613" endtime="20201110 08:35:54.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.620" level="INFO">VALUE: 0.039780139</msg>
<status status="PASS" starttime="20201110 08:35:54.618" endtime="20201110 08:35:54.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.607" endtime="20201110 08:35:54.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.633" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:54.631" endtime="20201110 08:35:54.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:54.638" level="INFO">VALUE: [0.049872417, 0.059875653, 0.069876681, 0.079877833, 0.089878861, 0.099880069, 0.109881014, 0.119882181, 0.129883194, 0.139884347, 0.149885361, 0.159886528, 0.169887542, 0.179888694, 0.189889722, 0.199890889, 0.209891889, 0.219893083, 0.229894056, 0.239895222, 0.249896236, 0.259897431, 0.269898417, 0.279899569, 0.289900583, 0.299901736, 0.309902764, 0.319903931, 0.329904931, 0.339906097, 0.349907111, 0.359908333, 0.369909292, 0.379910444, 0.389911472, 0.399912625, 0.409913639, 0.419914806, 0.429915806, 0.439916972, 0.449917986, 0.459919139, 0.469920167, 0.479921333, 0.489922389, 0.499923514, 0.509924542, 0.519925667, 0.529926694, 0.539927917, 0.549928861, 0.559930042, 0.569931069, 0.579932208, 0.589933222, 0.599934375, 0.609935389, 0.619936583, 0.629937583, 0.639938778, 0.649939819, 0.659940958, 0.669941986, 0.679943069, 0.689944097, 0.69994525, 0.709946264, 0.719947472, 0.729948444, 0.739949611, 0.749950625, 0.759951778, 0.769952792, 0.779953944, 0.789954986, 0.799956139, 0.809957153, 0.819958319, 0.829959319, 0.839960486, 0.8499615, 0.859962653, 0.869963667, 0.879964819, 0.889965847, 0.899967, 0.909968028, 0.919969194, 0.929970208, 0.939971347, 0.949972375, 0.959973542, 0.969974556, 0.979975722, 0.989976736, 0.999977931, 1.009978889, 1.019980056, 1.029981069, 1.039982236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:54.636" endtime="20201110 08:35:54.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.624" endtime="20201110 08:35:54.640"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.647" endtime="20201110 08:35:54.649"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:54.655" endtime="20201110 08:35:54.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.651" endtime="20201110 08:35:54.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.642" endtime="20201110 08:35:54.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:51.932" endtime="20201110 08:35:54.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.487" endtime="20201110 08:35:54.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:46.486" endtime="20201110 08:35:54.681"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:35:54.687" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:54.709" endtime="20201110 08:35:56.814"></status>
</kw>
<msg timestamp="20201110 08:35:56.816" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69458810, 'start-iter': 1, 'wakeups': [69468921, 69478919, 69488919, 6...</msg>
<status status="PASS" starttime="20201110 08:35:54.706" endtime="20201110 08:35:56.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.823" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69458810, 'start-iter': 1, 'wakeups': [69468921, 69478919, 69488919, 6...</msg>
<status status="PASS" starttime="20201110 08:35:56.818" endtime="20201110 08:35:56.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.825" endtime="20201110 08:35:56.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.697" endtime="20201110 08:35:56.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.692" endtime="20201110 08:35:56.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:56.839" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [69468921, 69478919, 69488919, 69498919, 69508919, 69518919, 69528919, 69538919, 69548919, 69558919, 69568919, 69578919, 69588919, 69598919, 69608919, 69618919, 69628919,...</msg>
<status status="PASS" starttime="20201110 08:35:56.834" endtime="20201110 08:35:56.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.849" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:56.847" endtime="20201110 08:35:56.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.853" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:56.851" endtime="20201110 08:35:56.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.841" endtime="20201110 08:35:56.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.865" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:56.863" endtime="20201110 08:35:56.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.870" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:56.868" endtime="20201110 08:35:56.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.857" endtime="20201110 08:35:56.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.882" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:56.880" endtime="20201110 08:35:56.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.887" level="INFO">VALUE: 69458810</msg>
<status status="PASS" starttime="20201110 08:35:56.885" endtime="20201110 08:35:56.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.873" endtime="20201110 08:35:56.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.899" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:56.897" endtime="20201110 08:35:56.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:56.904" level="INFO">VALUE: [69468921, 69478919, 69488919, 69498919, 69508919, 69518919, 69528919, 69538919, 69548919, 69558919, 69568919, 69578919, 69588919, 69598919, 69608919, 69618919, 69628919, 69638919, 69648919, 69658919, 69668919, 69678919, 69688919, 69698919, 69708919, 69718919, 69728919, 69738919, 69748919, 69758919, 69768919, 69778919, 69788919, 69798919, 69808919, 69818919, 69828919, 69838919, 69848919, 69858919, 69868919, 69878919, 69888919, 69898919, 69908919, 69918919, 69928919, 69938919, 69948919, 69958919, 69968919, 69978919, 69988919, 69998919, 70008919, 70018919, 70028919, 70038919, 70048919, 70058919, 70068919, 70078919, 70088919, 70098919, 70108919, 70118919, 70128919, 70138919, 70148919, 70158919, 70168919, 70178919, 70188919, 70198919, 70208919, 70218919, 70228919, 70238919, 70248919, 70258919, 70268919, 70278919, 70288919, 70298919, 70308919, 70318919, 70328919, 70338919, 70348919, 70358919, 70368919, 70378919, 70388919, 70398919, 70408919, 70418919, 70428919, 70438919, 70448919, 70458919]</msg>
<status status="PASS" starttime="20201110 08:35:56.901" endtime="20201110 08:35:56.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.890" endtime="20201110 08:35:56.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:56.923" endtime="20201110 08:35:57.262"></status>
</kw>
<msg timestamp="20201110 08:35:57.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045613125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055725917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:56.919" endtime="20201110 08:35:57.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045613125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055725917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:57.270" endtime="20201110 08:35:57.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.287" endtime="20201110 08:35:57.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.912" endtime="20201110 08:35:57.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:56.908" endtime="20201110 08:35:57.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:57.350" level="INFO">${RESULT} = {'time': [0.045613125, 0.055725917, 0.065725056, 0.075726069, 0.085727222, 0.095728236, 0.105729403, 0.115730431, 0.125731569, 0.135732653, 0.145733736, 0.155734764, 0.165735917, 0.175736958, 0.185738...</msg>
<status status="PASS" starttime="20201110 08:35:57.296" endtime="20201110 08:35:57.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.361" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:57.359" endtime="20201110 08:35:57.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.366" level="INFO">VALUE: 0.045613125</msg>
<status status="PASS" starttime="20201110 08:35:57.364" endtime="20201110 08:35:57.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.353" endtime="20201110 08:35:57.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.379" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:57.377" endtime="20201110 08:35:57.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:57.384" level="INFO">VALUE: [0.055725917, 0.065725056, 0.075726069, 0.085727222, 0.095728236, 0.105729403, 0.115730431, 0.125731569, 0.135732653, 0.145733736, 0.155734764, 0.165735917, 0.175736958, 0.185738083, 0.195739097, 0.20574025, 0.215741306, 0.225742431, 0.235743444, 0.245744611, 0.255745611, 0.265746806, 0.275747792, 0.285748944, 0.295749972, 0.305751111, 0.315752125, 0.325753292, 0.335754306, 0.345755458, 0.355756472, 0.365757625, 0.375758667, 0.385759806, 0.395760833, 0.405761972, 0.415763, 0.425764167, 0.435765167, 0.445766319, 0.455767333, 0.465768514, 0.475769514, 0.485770667, 0.495771708, 0.505772847, 0.515773875, 0.525775014, 0.535776028, 0.545777194, 0.555778236, 0.565779375, 0.575780375, 0.585781528, 0.595782569, 0.605783708, 0.615784722, 0.625785889, 0.635786903, 0.645788069, 0.655789069, 0.665790222, 0.67579125, 0.685792403, 0.695793431, 0.705794583, 0.715795653, 0.72579675, 0.735797819, 0.745798917, 0.755799958, 0.765801083, 0.775802111, 0.785803278, 0.795804278, 0.805805431, 0.815806444, 0.825807611, 0.835808667, 0.845809792, 0.855810806, 0.865811958, 0.875812986, 0.885814125, 0.895815194, 0.905816333, 0.915817347, 0.925818486, 0.935819514, 0.945820667, 0.955821681, 0.965822819, 0.975823847, 0.985825, 0.995826014, 1.005827167, 1.015828181, 1.025829361, 1.035830347, 1.045831514] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:35:57.381" endtime="20201110 08:35:57.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.369" endtime="20201110 08:35:57.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.392" endtime="20201110 08:35:57.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:35:57.401" endtime="20201110 08:35:57.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.396" endtime="20201110 08:35:57.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.388" endtime="20201110 08:35:57.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.688" endtime="20201110 08:35:57.426"></status>
</kw>
<msg timestamp="20201110 08:35:57.427" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:57.447" endtime="20201110 08:35:59.553"></status>
</kw>
<msg timestamp="20201110 08:35:59.555" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72196749, 'start-iter': 1, 'wakeups': [72206859, 72216858, 72226858, 7...</msg>
<status status="PASS" starttime="20201110 08:35:57.444" endtime="20201110 08:35:59.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.561" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72196749, 'start-iter': 1, 'wakeups': [72206859, 72216858, 72226858, 7...</msg>
<status status="PASS" starttime="20201110 08:35:59.557" endtime="20201110 08:35:59.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.564" endtime="20201110 08:35:59.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.437" endtime="20201110 08:35:59.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.431" endtime="20201110 08:35:59.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:35:59.577" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [72206859, 72216858, 72226858, 72236858, 72246858, 72256858, 72266858, 72276858, 72286858, 72296858, 72306858, 72316858, 72326858, 72336858, 72346858, 72356858, 72366858,...</msg>
<status status="PASS" starttime="20201110 08:35:59.572" endtime="20201110 08:35:59.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.587" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:35:59.585" endtime="20201110 08:35:59.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.591" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:35:59.589" endtime="20201110 08:35:59.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.579" endtime="20201110 08:35:59.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.610" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:35:59.608" endtime="20201110 08:35:59.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.615" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:35:59.612" endtime="20201110 08:35:59.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.601" endtime="20201110 08:35:59.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.629" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:35:59.627" endtime="20201110 08:35:59.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.633" level="INFO">VALUE: 72196749</msg>
<status status="PASS" starttime="20201110 08:35:59.631" endtime="20201110 08:35:59.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.618" endtime="20201110 08:35:59.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.645" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:35:59.643" endtime="20201110 08:35:59.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:35:59.650" level="INFO">VALUE: [72206859, 72216858, 72226858, 72236858, 72246858, 72256858, 72266858, 72276858, 72286858, 72296858, 72306858, 72316858, 72326858, 72336858, 72346858, 72356858, 72366858, 72376858, 72386858, 72396858, 72406858, 72416858, 72426858, 72436858, 72446858, 72456858, 72466858, 72476858, 72486858, 72496858, 72506858, 72516858, 72526858, 72536858, 72546858, 72556858, 72566858, 72576858, 72586858, 72596858, 72606858, 72616858, 72626858, 72636858, 72646858, 72656858, 72666858, 72676858, 72686858, 72696858, 72706858, 72716858, 72726858, 72736858, 72746858, 72756858, 72766858, 72776858, 72786858, 72796858, 72806858, 72816858, 72826858, 72836858, 72846858, 72856858, 72866858, 72876858, 72886858, 72896858, 72906858, 72916858, 72926858, 72936858, 72946858, 72956858, 72966858, 72976858, 72986858, 72996858, 73006858, 73016858, 73026858, 73036858, 73046858, 73056858, 73066858, 73076858, 73086858, 73096858, 73106858, 73116858, 73126858, 73136858, 73146858, 73156858, 73166858, 73176858, 73186858, 73196858]</msg>
<status status="PASS" starttime="20201110 08:35:59.648" endtime="20201110 08:35:59.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.637" endtime="20201110 08:35:59.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:35:59.669" endtime="20201110 08:36:00.010"></status>
</kw>
<msg timestamp="20201110 08:36:00.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037825375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:35:59.666" endtime="20201110 08:36:00.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037825375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047937472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:00.019" endtime="20201110 08:36:00.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.036" endtime="20201110 08:36:00.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.659" endtime="20201110 08:36:00.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:59.654" endtime="20201110 08:36:00.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:00.097" level="INFO">${RESULT} = {'time': [0.037825375, 0.047937472, 0.057937625, 0.067938667, 0.077939806, 0.087940819, 0.097942028, 0.107943014, 0.117944181, 0.127945194, 0.137946333, 0.147947361, 0.157948514, 0.167949556, 0.177950...</msg>
<status status="PASS" starttime="20201110 08:36:00.044" endtime="20201110 08:36:00.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.108" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:00.106" endtime="20201110 08:36:00.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.113" level="INFO">VALUE: 0.037825375</msg>
<status status="PASS" starttime="20201110 08:36:00.110" endtime="20201110 08:36:00.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.099" endtime="20201110 08:36:00.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.127" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:00.124" endtime="20201110 08:36:00.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:00.133" level="INFO">VALUE: [0.047937472, 0.057937625, 0.067938667, 0.077939806, 0.087940819, 0.097942028, 0.107943014, 0.117944181, 0.127945194, 0.137946333, 0.147947361, 0.157948514, 0.167949556, 0.177950694, 0.187951722, 0.197952875, 0.207953889, 0.217955069, 0.227956069, 0.23795725, 0.24795825, 0.257959417, 0.267960417, 0.277961569, 0.287962583, 0.297963736, 0.307964778, 0.317965931, 0.327966986, 0.337968083, 0.347969097, 0.35797025, 0.367971292, 0.377972431, 0.387973444, 0.397974611, 0.407975611, 0.417976778, 0.427977806, 0.437978944, 0.447979972, 0.457981111, 0.467982125, 0.477983292, 0.487984292, 0.497985528, 0.507986528, 0.517987625, 0.527988639, 0.537989792, 0.547990806, 0.557991986, 0.567992986, 0.577994139, 0.587995167, 0.597996333, 0.607997347, 0.617998486, 0.6279995, 0.638000653, 0.648001681, 0.658002833, 0.668003861, 0.678005028, 0.688006042, 0.698007181, 0.708008194, 0.718009347, 0.728010361, 0.738011583, 0.748012556, 0.758013708, 0.768014722, 0.778015903, 0.788016889, 0.798018042, 0.808019069, 0.818020222, 0.828021236, 0.838022389, 0.848023403, 0.858024569, 0.868025583, 0.87802675, 0.88802775, 0.898028917, 0.908029944, 0.918031083, 0.928032097, 0.93803325, 0.948034292, 0.958035444, 0.968036458, 0.978037611, 0.988038611, 0.998039778, 1.008040792, 1.018041944, 1.028042972, 1.038044139] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:00.129" endtime="20201110 08:36:00.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.116" endtime="20201110 08:36:00.136"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.142" endtime="20201110 08:36:00.145"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:00.151" endtime="20201110 08:36:00.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.146" endtime="20201110 08:36:00.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.138" endtime="20201110 08:36:00.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:57.428" endtime="20201110 08:36:00.176"></status>
</kw>
<msg timestamp="20201110 08:36:00.177" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:00.198" endtime="20201110 08:36:02.303"></status>
</kw>
<msg timestamp="20201110 08:36:02.304" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 74947557, 'start-iter': 1, 'wakeups': [74957668, 74967666, 74977666, 7...</msg>
<status status="PASS" starttime="20201110 08:36:00.194" endtime="20201110 08:36:02.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.311" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 74947557, 'start-iter': 1, 'wakeups': [74957668, 74967666, 74977666, 7...</msg>
<status status="PASS" starttime="20201110 08:36:02.307" endtime="20201110 08:36:02.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.314" endtime="20201110 08:36:02.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.187" endtime="20201110 08:36:02.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.181" endtime="20201110 08:36:02.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.327" level="INFO">${RESULT} = {'timer-count': 9, 'wakeups': [74957668, 74967666, 74977666, 74987666, 74997666, 75007666, 75017666, 75027666, 75037666, 75047666, 75057666, 75067666, 75077666, 75087666, 75097666, 75107666, 75117666,...</msg>
<status status="PASS" starttime="20201110 08:36:02.322" endtime="20201110 08:36:02.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.337" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:02.335" endtime="20201110 08:36:02.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.341" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:02.339" endtime="20201110 08:36:02.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.329" endtime="20201110 08:36:02.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.354" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:02.351" endtime="20201110 08:36:02.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.358" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:02.356" endtime="20201110 08:36:02.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.345" endtime="20201110 08:36:02.361"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.371" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:02.368" endtime="20201110 08:36:02.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.376" level="INFO">VALUE: 74947557</msg>
<status status="PASS" starttime="20201110 08:36:02.374" endtime="20201110 08:36:02.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.362" endtime="20201110 08:36:02.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.388" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:02.386" endtime="20201110 08:36:02.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.393" level="INFO">VALUE: [74957668, 74967666, 74977666, 74987666, 74997666, 75007666, 75017666, 75027666, 75037666, 75047666, 75057666, 75067666, 75077666, 75087666, 75097666, 75107666, 75117666, 75127666, 75137666, 75147666, 75157666, 75167666, 75177666, 75187666, 75197666, 75207666, 75217666, 75227666, 75237666, 75247666, 75257666, 75267666, 75277666, 75287666, 75297666, 75307666, 75317666, 75327666, 75337666, 75347666, 75357666, 75367666, 75377666, 75387666, 75397666, 75407666, 75417666, 75427666, 75437666, 75447666, 75457666, 75467666, 75477666, 75487666, 75497666, 75507666, 75517666, 75527666, 75537666, 75547666, 75557666, 75567666, 75577666, 75587666, 75597666, 75607666, 75617666, 75627666, 75637666, 75647666, 75657666, 75667666, 75677666, 75687666, 75697666, 75707666, 75717666, 75727666, 75737666, 75747666, 75757666, 75767666, 75777666, 75787666, 75797666, 75807666, 75817666, 75827666, 75837666, 75847666, 75857666, 75867666, 75877666, 75887666, 75897666, 75907666, 75917666, 75927666, 75937666, 75947666]</msg>
<status status="PASS" starttime="20201110 08:36:02.390" endtime="20201110 08:36:02.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.379" endtime="20201110 08:36:02.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.412" endtime="20201110 08:36:02.754"></status>
</kw>
<msg timestamp="20201110 08:36:02.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048779417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:02.408" endtime="20201110 08:36:02.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048779417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:36:02.762" endtime="20201110 08:36:02.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.780" endtime="20201110 08:36:02.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.401" endtime="20201110 08:36:02.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.397" endtime="20201110 08:36:02.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:02.840" level="INFO">${RESULT} = {'time': [0.038667, 0.048779417, 0.058778583, 0.068779597, 0.078780764, 0.088781778, 0.098782931, 0.108783944, 0.118785111, 0.128786125, 0.138787278, 0.148788319, 0.158789458, 0.168790472, 0.178791639...</msg>
<status status="PASS" starttime="20201110 08:36:02.788" endtime="20201110 08:36:02.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.851" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:36:02.849" endtime="20201110 08:36:02.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.856" level="INFO">VALUE: 0.038667</msg>
<status status="PASS" starttime="20201110 08:36:02.853" endtime="20201110 08:36:02.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.842" endtime="20201110 08:36:02.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.869" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:02.867" endtime="20201110 08:36:02.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:02.874" level="INFO">VALUE: [0.048779417, 0.058778583, 0.068779597, 0.078780764, 0.088781778, 0.098782931, 0.108783944, 0.118785111, 0.128786125, 0.138787278, 0.148788319, 0.158789458, 0.168790472, 0.178791639, 0.188792694, 0.198793806, 0.208794833, 0.218795986, 0.228797056, 0.238798167, 0.248799208, 0.258800347, 0.268801361, 0.278802514, 0.288803528, 0.298804694, 0.308805722, 0.318806889, 0.328807917, 0.338809056, 0.348810111, 0.358811236, 0.368812264, 0.378813403, 0.3888145, 0.398815583, 0.408816667, 0.418817764, 0.428818778, 0.438819972, 0.448820972, 0.458822111, 0.468823208, 0.478824292, 0.488825306, 0.498826514, 0.5088275, 0.518828667, 0.528829667, 0.538830833, 0.548831847, 0.558833, 0.568834028, 0.57883525, 0.588836222, 0.598837389, 0.608838375, 0.618839542, 0.628840556, 0.638841764, 0.648842736, 0.658843889, 0.668844917, 0.678846083, 0.688847111, 0.698848278, 0.708849264, 0.718850431, 0.728851444, 0.738852611, 0.748853625, 0.758854778, 0.768855806, 0.778856958, 0.788857986, 0.798859139, 0.808860153, 0.818861333, 0.828862333, 0.838863514, 0.848864514, 0.858865681, 0.868866708, 0.878867861, 0.888868903, 0.898870028, 0.908871083, 0.918872208, 0.928873222, 0.938874417, 0.948875417, 0.958876611, 0.968877583, 0.978878736, 0.988879764, 0.998880931, 1.008881958, 1.018883097, 1.028884111, 1.038885278] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:02.871" endtime="20201110 08:36:02.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.859" endtime="20201110 08:36:02.877"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.883" endtime="20201110 08:36:02.886"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:02.891" endtime="20201110 08:36:02.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.887" endtime="20201110 08:36:02.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.879" endtime="20201110 08:36:02.916"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:00.178" endtime="20201110 08:36:02.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.684" endtime="20201110 08:36:02.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:35:54.682" endtime="20201110 08:36:02.918"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:36:02.923" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:02.946" endtime="20201110 08:36:05.051"></status>
</kw>
<msg timestamp="20201110 08:36:05.053" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77695110, 'start-iter': 1, 'wakeups': [77705241, 77715240, 77725240,...</msg>
<status status="PASS" starttime="20201110 08:36:02.941" endtime="20201110 08:36:05.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.059" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77695110, 'start-iter': 1, 'wakeups': [77705241, 77715240, 77725240,...</msg>
<status status="PASS" starttime="20201110 08:36:05.055" endtime="20201110 08:36:05.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.062" endtime="20201110 08:36:05.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.933" endtime="20201110 08:36:05.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.928" endtime="20201110 08:36:05.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.075" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [77705241, 77715240, 77725240, 77735240, 77745240, 77755240, 77765240, 77775240, 77785240, 77795240, 77805240, 77815240, 77825240, 77835240, 77845240, 77855240, 77865240...</msg>
<status status="PASS" starttime="20201110 08:36:05.070" endtime="20201110 08:36:05.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.085" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:05.083" endtime="20201110 08:36:05.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.090" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:05.088" endtime="20201110 08:36:05.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.077" endtime="20201110 08:36:05.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.102" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:05.100" endtime="20201110 08:36:05.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.107" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:05.105" endtime="20201110 08:36:05.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.093" endtime="20201110 08:36:05.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.119" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:05.117" endtime="20201110 08:36:05.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.123" level="INFO">VALUE: 77695110</msg>
<status status="PASS" starttime="20201110 08:36:05.121" endtime="20201110 08:36:05.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.110" endtime="20201110 08:36:05.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.136" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:05.133" endtime="20201110 08:36:05.136"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.141" level="INFO">VALUE: [77705241, 77715240, 77725240, 77735240, 77745240, 77755240, 77765240, 77775240, 77785240, 77795240, 77805240, 77815240, 77825240, 77835240, 77845240, 77855240, 77865240, 77875240, 77885240, 77895240, 77905240, 77915240, 77925240, 77935240, 77945240, 77955240, 77965240, 77975240, 77985240, 77995240, 78005240, 78015240, 78025240, 78035240, 78045240, 78055240, 78065240, 78075240, 78085240, 78095240, 78105240, 78115240, 78125240, 78135240, 78145240, 78155240, 78165240, 78175240, 78185240, 78195240, 78205240, 78215240, 78225240, 78235240, 78245240, 78255240, 78265240, 78275240, 78285240, 78295240, 78305240, 78315240, 78325240, 78335240, 78345240, 78355240, 78365240, 78375240, 78385240, 78395240, 78405240, 78415240, 78425240, 78435240, 78445240, 78455240, 78465240, 78475240, 78485240, 78495240, 78505240, 78515240, 78525240, 78535240, 78545240, 78555240, 78565240, 78575240, 78585240, 78595240, 78605240, 78615240, 78625240, 78635240, 78645240, 78655240, 78665240, 78675240, 78685240, 78695240]</msg>
<status status="PASS" starttime="20201110 08:36:05.138" endtime="20201110 08:36:05.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.127" endtime="20201110 08:36:05.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.160" endtime="20201110 08:36:05.513"></status>
</kw>
<msg timestamp="20201110 08:36:05.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045591014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055723889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.157" endtime="20201110 08:36:05.520"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045591014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055723889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:05.522" endtime="20201110 08:36:05.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.539" endtime="20201110 08:36:05.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.150" endtime="20201110 08:36:05.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.145" endtime="20201110 08:36:05.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:05.601" level="INFO">${RESULT} = {'time': [0.045591014, 0.055723889, 0.065724444, 0.075725431, 0.085726597, 0.095727597, 0.105728764, 0.115729806, 0.125731, 0.135731986, 0.145733111, 0.155734139, 0.165735292, 0.175736292, 0.185737444...</msg>
<status status="PASS" starttime="20201110 08:36:05.547" endtime="20201110 08:36:05.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.612" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:05.610" endtime="20201110 08:36:05.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.617" level="INFO">VALUE: 0.045591014</msg>
<status status="PASS" starttime="20201110 08:36:05.614" endtime="20201110 08:36:05.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.603" endtime="20201110 08:36:05.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.630" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:05.627" endtime="20201110 08:36:05.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:05.634" level="INFO">VALUE: [0.055723889, 0.065724444, 0.075725431, 0.085726597, 0.095727597, 0.105728764, 0.115729806, 0.125731, 0.135731986, 0.145733111, 0.155734139, 0.165735292, 0.175736292, 0.185737444, 0.1957385, 0.205739625, 0.215740639, 0.225741806, 0.235742819, 0.245744014, 0.255745, 0.265746139, 0.275747153, 0.285748333, 0.295749347, 0.305750486, 0.3157515, 0.325752681, 0.335753681, 0.345754847, 0.355755861, 0.365757056, 0.375758028, 0.385759194, 0.395760208, 0.405761389, 0.415762389, 0.425763528, 0.435764556, 0.445765722, 0.455766722, 0.465767903, 0.475768958, 0.485770083, 0.495771083, 0.505772236, 0.51577325, 0.525774403, 0.535775431, 0.545776583, 0.555777597, 0.56577875, 0.575779806, 0.585780958, 0.595781944, 0.605783111, 0.615784125, 0.625785278, 0.635786292, 0.645787472, 0.655788472, 0.665789639, 0.675790653, 0.685791889, 0.695792833, 0.705793972, 0.715795, 0.725796153, 0.735797222, 0.745798361, 0.755799361, 0.765800569, 0.775801514, 0.785802694, 0.795803708, 0.805804847, 0.815805875, 0.825807028, 0.835808042, 0.845809222, 0.855810208, 0.865811403, 0.875812403, 0.885813542, 0.895814569, 0.905815736, 0.915816736, 0.925817903, 0.935818917, 0.945820083, 0.955821083, 0.96582225, 0.975823264, 0.985824417, 0.995825431, 1.005826611, 1.015827611, 1.025828764, 1.035829778, 1.045830944] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:05.632" endtime="20201110 08:36:05.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.620" endtime="20201110 08:36:05.637"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.643" endtime="20201110 08:36:05.646"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:05.651" endtime="20201110 08:36:05.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.647" endtime="20201110 08:36:05.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.639" endtime="20201110 08:36:05.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.925" endtime="20201110 08:36:05.677"></status>
</kw>
<msg timestamp="20201110 08:36:05.678" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:05.699" endtime="20201110 08:36:07.805"></status>
</kw>
<msg timestamp="20201110 08:36:07.806" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80448172, 'start-iter': 1, 'wakeups': [80458303, 80468302, 80478302,...</msg>
<status status="PASS" starttime="20201110 08:36:05.696" endtime="20201110 08:36:07.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.813" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80448172, 'start-iter': 1, 'wakeups': [80458303, 80468302, 80478302,...</msg>
<status status="PASS" starttime="20201110 08:36:07.808" endtime="20201110 08:36:07.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.815" endtime="20201110 08:36:07.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.688" endtime="20201110 08:36:07.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.683" endtime="20201110 08:36:07.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:07.828" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [80458303, 80468302, 80478302, 80488302, 80498302, 80508302, 80518302, 80528302, 80538302, 80548302, 80558302, 80568302, 80578302, 80588302, 80598302, 80608302, 80618302...</msg>
<status status="PASS" starttime="20201110 08:36:07.824" endtime="20201110 08:36:07.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.838" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:07.836" endtime="20201110 08:36:07.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.843" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:07.841" endtime="20201110 08:36:07.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.830" endtime="20201110 08:36:07.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.855" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:07.853" endtime="20201110 08:36:07.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.863" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:07.857" endtime="20201110 08:36:07.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.846" endtime="20201110 08:36:07.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.875" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:07.873" endtime="20201110 08:36:07.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.880" level="INFO">VALUE: 80448172</msg>
<status status="PASS" starttime="20201110 08:36:07.878" endtime="20201110 08:36:07.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.867" endtime="20201110 08:36:07.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.892" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:07.890" endtime="20201110 08:36:07.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:07.897" level="INFO">VALUE: [80458303, 80468302, 80478302, 80488302, 80498302, 80508302, 80518302, 80528302, 80538302, 80548302, 80558302, 80568302, 80578302, 80588302, 80598302, 80608302, 80618302, 80628302, 80638302, 80648302, 80658302, 80668302, 80678302, 80688302, 80698302, 80708302, 80718302, 80728302, 80738302, 80748302, 80758302, 80768302, 80778302, 80788302, 80798302, 80808302, 80818302, 80828302, 80838302, 80848302, 80858302, 80868302, 80878302, 80888302, 80898302, 80908302, 80918302, 80928302, 80938302, 80948302, 80958302, 80968302, 80978302, 80988302, 80998302, 81008302, 81018302, 81028302, 81038302, 81048302, 81058302, 81068302, 81078302, 81088302, 81098302, 81108302, 81118302, 81128302, 81138302, 81148302, 81158302, 81168302, 81178302, 81188302, 81198302, 81208302, 81218302, 81228302, 81238302, 81248302, 81258302, 81268302, 81278302, 81288302, 81298302, 81308302, 81318302, 81328302, 81338302, 81348302, 81358302, 81368302, 81378302, 81388302, 81398302, 81408302, 81418302, 81428302, 81438302, 81448302]</msg>
<status status="PASS" starttime="20201110 08:36:07.894" endtime="20201110 08:36:07.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.883" endtime="20201110 08:36:07.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:07.916" endtime="20201110 08:36:08.245"></status>
</kw>
<msg timestamp="20201110 08:36:08.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038919278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049052153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:07.913" endtime="20201110 08:36:08.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038919278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049052153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:08.256" endtime="20201110 08:36:08.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.275" endtime="20201110 08:36:08.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.906" endtime="20201110 08:36:08.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:07.900" endtime="20201110 08:36:08.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:08.337" level="INFO">${RESULT} = {'time': [0.038919278, 0.049052153, 0.059052681, 0.069053694, 0.079054861, 0.089055875, 0.099057042, 0.109058056, 0.119059208, 0.129060208, 0.139061361, 0.149062431, 0.159063542, 0.169064556, 0.179065...</msg>
<status status="PASS" starttime="20201110 08:36:08.284" endtime="20201110 08:36:08.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.348" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:08.346" endtime="20201110 08:36:08.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.352" level="INFO">VALUE: 0.038919278</msg>
<status status="PASS" starttime="20201110 08:36:08.350" endtime="20201110 08:36:08.354"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.339" endtime="20201110 08:36:08.356"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.367" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:08.365" endtime="20201110 08:36:08.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:08.372" level="INFO">VALUE: [0.049052153, 0.059052681, 0.069053694, 0.079054861, 0.089055875, 0.099057042, 0.109058056, 0.119059208, 0.129060208, 0.139061361, 0.149062431, 0.159063542, 0.169064556, 0.179065708, 0.189066722, 0.199067875, 0.209068889, 0.219070069, 0.229071069, 0.239072222, 0.249073236, 0.259074403, 0.269075417, 0.279076569, 0.289077597, 0.299078736, 0.30907975, 0.319080903, 0.329081958, 0.339083125, 0.349084097, 0.35908525, 0.369086264, 0.379087431, 0.389088444, 0.399089597, 0.409090611, 0.419091792, 0.429092806, 0.439093958, 0.449094958, 0.459096125, 0.469097139, 0.479098306, 0.489099306, 0.499100458, 0.5091015, 0.519102639, 0.529103653, 0.539104806, 0.549105819, 0.559106986, 0.569108014, 0.579109153, 0.589110208, 0.599111333, 0.609112389, 0.619113514, 0.629114556, 0.639115667, 0.649116708, 0.659117847, 0.669118861, 0.679120069, 0.689121028, 0.699122208, 0.709123208, 0.719124375, 0.729125375, 0.739126542, 0.749127569, 0.759128708, 0.769129736, 0.779130875, 0.789131903, 0.799133069, 0.809134069, 0.81913525, 0.829136236, 0.839137417, 0.849138458, 0.859139569, 0.869140597, 0.879141764, 0.889142764, 0.899143931, 0.909144931, 0.919146111, 0.929147111, 0.939148264, 0.949149278, 0.959150431, 0.969151458, 0.979152611, 0.989153653, 0.999154778, 1.009155792, 1.019156958, 1.029157986, 1.039159125] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:08.369" endtime="20201110 08:36:08.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.357" endtime="20201110 08:36:08.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.380" endtime="20201110 08:36:08.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:08.389" endtime="20201110 08:36:08.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.384" endtime="20201110 08:36:08.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.376" endtime="20201110 08:36:08.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:05.679" endtime="20201110 08:36:08.415"></status>
</kw>
<msg timestamp="20201110 08:36:08.416" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:08.438" endtime="20201110 08:36:10.544"></status>
</kw>
<msg timestamp="20201110 08:36:10.546" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 83187237, 'start-iter': 1, 'wakeups': [83197368, 83207367, 83217367,...</msg>
<status status="PASS" starttime="20201110 08:36:08.434" endtime="20201110 08:36:10.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.559" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 83187237, 'start-iter': 1, 'wakeups': [83197368, 83207367, 83217367,...</msg>
<status status="PASS" starttime="20201110 08:36:10.554" endtime="20201110 08:36:10.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.561" endtime="20201110 08:36:10.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.427" endtime="20201110 08:36:10.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.421" endtime="20201110 08:36:10.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:10.574" level="INFO">${RESULT} = {'timer-count': 10, 'wakeups': [83197368, 83207367, 83217367, 83227367, 83237367, 83247367, 83257367, 83267367, 83277367, 83287367, 83297367, 83307367, 83317367, 83327367, 83337367, 83347367, 83357367...</msg>
<status status="PASS" starttime="20201110 08:36:10.570" endtime="20201110 08:36:10.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.585" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:36:10.582" endtime="20201110 08:36:10.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.589" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:36:10.587" endtime="20201110 08:36:10.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.576" endtime="20201110 08:36:10.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.601" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:36:10.599" endtime="20201110 08:36:10.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.606" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:36:10.604" endtime="20201110 08:36:10.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.593" endtime="20201110 08:36:10.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.618" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:10.616" endtime="20201110 08:36:10.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.623" level="INFO">VALUE: 83187237</msg>
<status status="PASS" starttime="20201110 08:36:10.621" endtime="20201110 08:36:10.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.609" endtime="20201110 08:36:10.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.635" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:10.633" endtime="20201110 08:36:10.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:10.640" level="INFO">VALUE: [83197368, 83207367, 83217367, 83227367, 83237367, 83247367, 83257367, 83267367, 83277367, 83287367, 83297367, 83307367, 83317367, 83327367, 83337367, 83347367, 83357367, 83367367, 83377367, 83387367, 83397367, 83407367, 83417367, 83427367, 83437367, 83447367, 83457367, 83467367, 83477367, 83487367, 83497367, 83507367, 83517367, 83527367, 83537367, 83547367, 83557367, 83567367, 83577367, 83587367, 83597367, 83607367, 83617367, 83627367, 83637367, 83647367, 83657367, 83667367, 83677367, 83687367, 83697367, 83707367, 83717367, 83727367, 83737367, 83747367, 83757367, 83767367, 83777367, 83787367, 83797367, 83807367, 83817367, 83827367, 83837367, 83847367, 83857367, 83867367, 83877367, 83887367, 83897367, 83907367, 83917367, 83927367, 83937367, 83947367, 83957367, 83967367, 83977367, 83987367, 83997367, 84007367, 84017367, 84027367, 84037367, 84047367, 84057367, 84067367, 84077367, 84087367, 84097367, 84107367, 84117367, 84127367, 84137367, 84147367, 84157367, 84167367, 84177367, 84187367]</msg>
<status status="PASS" starttime="20201110 08:36:10.638" endtime="20201110 08:36:10.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.627" endtime="20201110 08:36:10.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:10.661" endtime="20201110 08:36:11.001"></status>
</kw>
<msg timestamp="20201110 08:36:11.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040681222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050813722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:10.658" endtime="20201110 08:36:11.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040681222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050813722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:11.010" endtime="20201110 08:36:11.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.028" endtime="20201110 08:36:11.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.649" endtime="20201110 08:36:11.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:10.644" endtime="20201110 08:36:11.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:11.089" level="INFO">${RESULT} = {'time': [0.040681222, 0.050813722, 0.060814319, 0.070815347, 0.0808165, 0.090817514, 0.100818667, 0.110819694, 0.120820889, 0.130821889, 0.140823028, 0.150824097, 0.160825222, 0.170826236, 0.18082740...</msg>
<status status="PASS" starttime="20201110 08:36:11.036" endtime="20201110 08:36:11.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.099" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:36:11.097" endtime="20201110 08:36:11.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.104" level="INFO">VALUE: 0.040681222</msg>
<status status="PASS" starttime="20201110 08:36:11.102" endtime="20201110 08:36:11.105"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.091" endtime="20201110 08:36:11.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.117" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:36:11.115" endtime="20201110 08:36:11.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:11.122" level="INFO">VALUE: [0.050813722, 0.060814319, 0.070815347, 0.0808165, 0.090817514, 0.100818667, 0.110819694, 0.120820889, 0.130821889, 0.140823028, 0.150824097, 0.160825222, 0.170826236, 0.180827403, 0.190828417, 0.200829597, 0.210830597, 0.22083175, 0.230832792, 0.240833931, 0.250834986, 0.260836111, 0.270837139, 0.280838375, 0.290839319, 0.300840514, 0.310841514, 0.320842667, 0.330843681, 0.340844861, 0.350845861, 0.360847042, 0.370848056, 0.380849222, 0.390850222, 0.400851389, 0.410852472, 0.420853569, 0.430854583, 0.440855764, 0.450856792, 0.460857931, 0.470858958, 0.480860111, 0.490861153, 0.500862292, 0.510863319, 0.520864486, 0.5308655, 0.540866653, 0.550867681, 0.560868847, 0.570869861, 0.580871014, 0.590872042, 0.600873222, 0.610874222, 0.620875444, 0.630876403, 0.640877569, 0.650878625, 0.660879736, 0.670880778, 0.680881917, 0.690882944, 0.700884097, 0.710885139, 0.720886278, 0.730887319, 0.740888514, 0.750889486, 0.760890639, 0.770891667, 0.780892819, 0.790893861, 0.800895, 0.810896042, 0.820897181, 0.830898194, 0.840899361, 0.850900389, 0.860901514, 0.870902542, 0.880903681, 0.89090475, 0.900905861, 0.910906875, 0.920908028, 0.930909042, 0.940910194, 0.950911208, 0.960912361, 0.970913375, 0.980914556, 0.990915556, 1.000916708, 1.010917722, 1.020918903, 1.030919903, 1.040921083] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:36:11.119" endtime="20201110 08:36:11.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.107" endtime="20201110 08:36:11.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:11.131" endtime="20201110 08:36:11.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:11.139" endtime="20201110 08:36:11.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.134" endtime="20201110 08:36:11.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:11.126" endtime="20201110 08:36:11.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:08.417" endtime="20201110 08:36:11.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.920" endtime="20201110 08:36:11.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:02.918" endtime="20201110 08:36:11.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:34:48.937" endtime="20201110 08:36:11.161"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:34:48.799" endtime="20201110 08:36:11.162" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:34:44.382" endtime="20201110 08:36:11.165"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:32:08.959" endtime="20201110 08:36:11.183"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
