<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201110 08:36:47.946" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:49.209" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:49.226" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:50.125" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:49.205" endtime="20201110 08:36:50.127"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.132" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:36:50.129" endtime="20201110 08:36:53.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.202" endtime="20201110 08:36:53.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.140" endtime="20201110 08:36:53.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.137" endtime="20201110 08:36:53.480"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.512" endtime="20201110 08:36:53.533"></status>
</kw>
<msg timestamp="20201110 08:36:53.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.508" endtime="20201110 08:36:53.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.541" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['0.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.536" endtime="20201110 08:36:53.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.548" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:53.543" endtime="20201110 08:36:53.549"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:53.502" endtime="20201110 08:36:53.551"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:53.495" endtime="20201110 08:36:53.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.492" endtime="20201110 08:36:53.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:53.562" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:53.560" endtime="20201110 08:36:53.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.555" endtime="20201110 08:36:53.563"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.490" endtime="20201110 08:36:53.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.489" endtime="20201110 08:36:53.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.566" endtime="20201110 08:36:53.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.485" endtime="20201110 08:36:53.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.573" endtime="20201110 08:36:53.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.481" endtime="20201110 08:36:53.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:49.199" endtime="20201110 08:36:53.579"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:53.595" endtime="20201110 08:36:53.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.591" endtime="20201110 08:36:53.619"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.657" endtime="20201110 08:36:53.676"></status>
</kw>
<msg timestamp="20201110 08:36:53.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.653" endtime="20201110 08:36:53.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.685" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.680" endtime="20201110 08:36:53.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.692" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:53.687" endtime="20201110 08:36:53.692"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:53.646" endtime="20201110 08:36:53.694"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:53.638" endtime="20201110 08:36:53.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.634" endtime="20201110 08:36:53.697"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:53.705" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:53.704" endtime="20201110 08:36:53.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.699" endtime="20201110 08:36:53.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.632" endtime="20201110 08:36:53.707"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.630" endtime="20201110 08:36:53.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.709" endtime="20201110 08:36:53.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.625" endtime="20201110 08:36:53.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.621" endtime="20201110 08:36:53.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.588" endtime="20201110 08:36:53.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.735" endtime="20201110 08:36:53.749"></status>
</kw>
<msg timestamp="20201110 08:36:53.750" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.731" endtime="20201110 08:36:53.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.757" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:53.753" endtime="20201110 08:36:53.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:53.759" endtime="20201110 08:36:53.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.723" endtime="20201110 08:36:53.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.718" endtime="20201110 08:36:53.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.777" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201110 08:36:53.774" endtime="20201110 08:36:53.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.782" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201110 08:36:53.779" endtime="20201110 08:36:53.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.768" endtime="20201110 08:36:53.784"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:53.581" endtime="20201110 08:36:53.786" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:48.209" endtime="20201110 08:36:53.793"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:36:53.933" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:36:53.951" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:36:54.829" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:36:53.928" endtime="20201110 08:36:54.830"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:36:57.836" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:36:54.833" endtime="20201110 08:36:57.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.924" endtime="20201110 08:36:57.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:57.844" endtime="20201110 08:36:58.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:57.841" endtime="20201110 08:36:58.185"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.215" endtime="20201110 08:36:58.238"></status>
</kw>
<msg timestamp="20201110 08:36:58.240" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.212" endtime="20201110 08:36:58.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.246" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.242" endtime="20201110 08:36:58.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.254" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:58.249" endtime="20201110 08:36:58.254"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:58.206" endtime="20201110 08:36:58.256"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:58.200" endtime="20201110 08:36:58.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.197" endtime="20201110 08:36:58.259"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:58.267" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:58.266" endtime="20201110 08:36:58.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.261" endtime="20201110 08:36:58.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.196" endtime="20201110 08:36:58.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.194" endtime="20201110 08:36:58.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.271" endtime="20201110 08:36:58.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.190" endtime="20201110 08:36:58.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.279" endtime="20201110 08:36:58.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.187" endtime="20201110 08:36:58.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:53.920" endtime="20201110 08:36:58.285"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:58.299" endtime="20201110 08:36:58.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.295" endtime="20201110 08:36:58.323"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.425" endtime="20201110 08:36:58.453"></status>
</kw>
<msg timestamp="20201110 08:36:58.454" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.422" endtime="20201110 08:36:58.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.456" endtime="20201110 08:36:58.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.468" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:36:58.463" endtime="20201110 08:36:58.469"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:58.414" endtime="20201110 08:36:58.471"></status>
</kw>
<status status="FAIL" starttime="20201110 08:36:58.342" endtime="20201110 08:36:58.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.339" endtime="20201110 08:36:58.473"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:36:58.481" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:36:58.480" endtime="20201110 08:36:58.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.475" endtime="20201110 08:36:58.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.337" endtime="20201110 08:36:58.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.335" endtime="20201110 08:36:58.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.485" endtime="20201110 08:36:58.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.331" endtime="20201110 08:36:58.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.326" endtime="20201110 08:36:58.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.292" endtime="20201110 08:36:58.493"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure GPIO Overhead</arg>
</arguments>
<msg timestamp="20201110 08:36:58.497" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.519" endtime="20201110 08:36:58.532"></status>
</kw>
<msg timestamp="20201110 08:36:58.533" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.515" endtime="20201110 08:36:58.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:58.536" endtime="20201110 08:36:58.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.544" endtime="20201110 08:36:58.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.507" endtime="20201110 08:36:58.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.502" endtime="20201110 08:36:58.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.582" endtime="20201110 08:36:58.949"></status>
</kw>
<msg timestamp="20201110 08:36:58.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.210130111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.210137722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.578" endtime="20201110 08:36:58.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.210130111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.210137722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:58.955" endtime="20201110 08:36:58.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:58.969" endtime="20201110 08:36:58.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.566" endtime="20201110 08:36:58.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.556" endtime="20201110 08:36:58.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.986" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:58.983" endtime="20201110 08:36:58.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:58.995" level="INFO">VALUE: [{'time': 0.210130111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.210137722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6109999999907085e-06, 'source_diff': 7.6109999999907085e-06}, {'time': 0.210142806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083999999988542e-06, 'source_diff': 5.083999999988542e-06}, {'time': 0.210148042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.236000000019558e-06, 'source_diff': 5.236000000019558e-06}, {'time': 0.210152264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.221999999998172e-06, 'source_diff': 4.221999999998172e-06}, {'time': 0.210155889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6250000000070948e-06, 'source_diff': 3.6250000000070948e-06}, {'time': 0.210164528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.63899999997697e-06, 'source_diff': 8.63899999997697e-06}, {'time': 0.210171806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2779999999994516e-06, 'source_diff': 7.2779999999994516e-06}, {'time': 0.210174097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291000000015364e-06, 'source_diff': 2.291000000015364e-06}, {'time': 0.210183208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.111000000006086e-06, 'source_diff': 9.111000000006086e-06}, {'time': 0.210189569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.3609999999825195e-06, 'source_diff': 6.3609999999825195e-06}, {'time': 0.210196528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.210205042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.51400000001501e-06, 'source_diff': 8.51400000001501e-06}, {'time': 0.210208667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.624999999979339e-06, 'source_diff': 3.624999999979339e-06}, {'time': 0.210213514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.210222278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.764000000022198e-06, 'source_diff': 8.764000000022198e-06}, {'time': 0.210230333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.054999999979051e-06, 'source_diff': 8.054999999979051e-06}, {'time': 0.210232958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6250000000060947e-06, 'source_diff': 2.6250000000060947e-06}, {'time': 0.210236806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.210245444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638000000005253e-06, 'source_diff': 8.638000000005253e-06}, {'time': 0.210250847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.402999999987168e-06, 'source_diff': 5.402999999987168e-06}, {'time': 0.210257361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.514000000013009e-06, 'source_diff': 6.514000000013009e-06}, {'time': 0.210259653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.291999999987082e-06, 'source_diff': 2.291999999987082e-06}, {'time': 0.210266597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000008721e-06, 'source_diff': 6.944000000008721e-06}, {'time': 0.210273014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.417000000008555e-06, 'source_diff': 6.417000000008555e-06}, {'time': 0.210275972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.21027825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.277999999994451e-06, 'source_diff': 2.277999999994451e-06}, {'time': 0.210283458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.208000000006541e-06, 'source_diff': 5.208000000006541e-06}, {'time': 0.210288958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999991623e-06, 'source_diff': 5.499999999991623e-06}, {'time': 0.210298125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.167000000004366e-06, 'source_diff': 9.167000000004366e-06}, {'time': 0.210305417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.291999999992083e-06, 'source_diff': 7.291999999992083e-06}, {'time': 0.210308528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.111000000000086e-06, 'source_diff': 3.111000000000086e-06}, {'time': 0.210316903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.375000000004906e-06, 'source_diff': 8.375000000004906e-06}, {'time': 0.210319306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4030000000119234e-06, 'source_diff': 2.4030000000119234e-06}, {'time': 0.210327694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.387999999998064e-06, 'source_diff': 8.387999999998064e-06}, {'time': 0.210335222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999978885e-06, 'source_diff': 7.527999999978885e-06}, {'time': 0.210343944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.72200000001655e-06, 'source_diff': 8.72200000001655e-06}, {'time': 0.210348264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3200000000021e-06, 'source_diff': 4.3200000000021e-06}, {'time': 0.210356542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}, {'time': 0.210359944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4019999999856942e-06, 'source_diff': 3.4019999999856942e-06}, {'time': 0.210367472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.5280000000066405e-06, 'source_diff': 7.5280000000066405e-06}, {'time': 0.210372472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0000000000050004e-06, 'source_diff': 5.0000000000050004e-06}, {'time': 0.210376597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.124999999993717e-06, 'source_diff': 4.124999999993717e-06}, {'time': 0.210383333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000007181e-06, 'source_diff': 6.736000000007181e-06}, {'time': 0.210392181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.84800000000574e-06, 'source_diff': 8.84800000000574e-06}, {'time': 0.210400375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193999999989154e-06, 'source_diff': 8.193999999989154e-06}, {'time': 0.210406764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.388999999995537e-06, 'source_diff': 6.388999999995537e-06}, {'time': 0.210411653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.889000000007915e-06, 'source_diff': 4.889000000007915e-06}, {'time': 0.210416792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.138999999987348e-06, 'source_diff': 5.138999999987348e-06}, {'time': 0.210422431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:58.988" endtime="20201110 08:36:58.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.977" endtime="20201110 08:36:58.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:59.029" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:58.999" endtime="20201110 08:36:59.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.038" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:59.036" endtime="20201110 08:36:59.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.046" level="INFO">VALUE: {'sourceeventsource_diff': [0, 7.6109999999907085e-06, 5.083999999988542e-06, 5.236000000019558e-06, 4.221999999998172e-06, 3.6250000000070948e-06, 8.63899999997697e-06, 7.2779999999994516e-06, 2.291000000015364e-06, 9.111000000006086e-06, 6.3609999999825195e-06, 6.959000000000826e-06, 8.51400000001501e-06, 3.624999999979339e-06, 4.847000000002266e-06, 8.764000000022198e-06, 8.054999999979051e-06, 2.6250000000060947e-06, 3.84800000000074e-06, 8.638000000005253e-06, 5.402999999987168e-06, 6.514000000013009e-06, 2.291999999987082e-06, 6.944000000008721e-06, 6.417000000008555e-06, 2.9579999999973516e-06, 2.277999999994451e-06, 5.208000000006541e-06, 5.499999999991623e-06, 9.167000000004366e-06, 7.291999999992083e-06, 3.111000000000086e-06, 8.375000000004906e-06, 2.4030000000119234e-06, 8.387999999998064e-06, 7.527999999978885e-06, 8.72200000001655e-06, 4.3200000000021e-06, 8.278000000000452e-06, 3.4019999999856942e-06, 7.5280000000066405e-06, 5.0000000000050004e-06, 4.124999999993717e-06, 6.736000000007181e-06, 8.84800000000574e-06, 8.193999999989154e-06, 6.388999999995537e-06, 4.889000000007915e-06, 5.138999999987348e-06, 5.639000000001726e-06], 'diff': [0, 7.6109999999907085e-06, 5.083999999988542e-06, 5.236000000019558e-06, 4.221999999998172e-06, 3.6250000000070948e-06, 8.63899999997697e-06, 7.2779999999994516e-06, 2.291000000015364e-06, 9.111000000006086e-06, 6.3609999999825195e-06, 6.959000000000826e-06, 8.51400000001501e-06, 3.624999999979339e-06, 4.847000000002266e-06, 8.764000000022198e-06, 8.054999999979051e-06, 2.6250000000060947e-06, 3.84800000000074e-06, 8.638000000005253e-06, 5.402999999987168e-06, 6.514000000013009e-06, 2.291999999987082e-06, 6.944000000008721e-06, 6.417000000008555e-06, 2.9579999999973516e-06, 2.277999999994451e-06, 5.208000000006541e-06, 5.499999999991623e-06, 9.167000000004366e-06, 7.291999999992083e-06, 3.111000000000086e-06, 8.375000000004906e-06, 2.4030000000119234e-06, 8.387999999998064e-06, 7.527999999978885e-06, 8.72200000001655e-06, 4.3200000000021e-06, 8.278000000000452e-06, 3.4019999999856942e-06, 7.5280000000066405e-06, 5.0000000000050004e-06, 4.124999999993717e-06, 6.736000000007181e-06, 8.84800000000574e-06, 8.193999999989154e-06, 6.388999999995537e-06, 4.889000000007915e-06, 5.138999999987348e-06, 5.639000000001726e-06], 'time': [0.210130111, 0.210137722, 0.210142806, 0.210148042, 0.210152264, 0.210155889, 0.210164528, 0.210171806, 0.210174097, 0.210183208, 0.210189569, 0.210196528, 0.210205042, 0.210208667, 0.210213514, 0.210222278, 0.210230333, 0.210232958, 0.210236806, 0.210245444, 0.210250847, 0.210257361, 0.210259653, 0.210266597, 0.210273014, 0.210275972, 0.21027825, 0.210283458, 0.210288958, 0.210298125, 0.210305417, 0.210308528, 0.210316903, 0.210319306, 0.210327694, 0.210335222, 0.210343944, 0.210348264, 0.210356542, 0.210359944, 0.210367472, 0.210372472, 0.210376597, 0.210383333, 0.210392181, 0.210400375, 0.210406764, 0.210411653, 0.210416792, 0.210422431]}</msg>
<status status="PASS" starttime="20201110 08:36:59.041" endtime="20201110 08:36:59.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.031" endtime="20201110 08:36:59.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.058" level="INFO">${RESULT} = [{'time': 0.210137722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6109999999907085e-06, 'source_diff': 7.6109999999907085e-06}, {'time': 0.210148042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:59.051" endtime="20201110 08:36:59.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:59.077" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:59.060" endtime="20201110 08:36:59.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:59.085" endtime="20201110 08:36:59.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.092" level="INFO">VALUE: [7.6109999999907085e-06, 5.236000000019558e-06, 3.6250000000070948e-06, 7.2779999999994516e-06, 9.111000000006086e-06, 6.959000000000826e-06, 3.624999999979339e-06, 8.764000000022198e-06, 2.6250000000060947e-06, 8.638000000005253e-06, 6.514000000013009e-06, 6.944000000008721e-06, 2.9579999999973516e-06, 5.208000000006541e-06, 9.167000000004366e-06, 3.111000000000086e-06, 2.4030000000119234e-06, 7.527999999978885e-06, 4.3200000000021e-06, 3.4019999999856942e-06, 5.0000000000050004e-06, 6.736000000007181e-06, 8.193999999989154e-06, 4.889000000007915e-06, 5.639000000001726e-06]</msg>
<status status="PASS" starttime="20201110 08:36:59.089" endtime="20201110 08:36:59.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.078" endtime="20201110 08:36:59.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.101" endtime="20201110 08:36:59.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.110" endtime="20201110 08:36:59.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.105" endtime="20201110 08:36:59.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.097" endtime="20201110 08:36:59.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.498" endtime="20201110 08:36:59.137"></status>
</kw>
<msg timestamp="20201110 08:36:59.137" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.158" endtime="20201110 08:36:59.172"></status>
</kw>
<msg timestamp="20201110 08:36:59.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.155" endtime="20201110 08:36:59.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.180" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.176" endtime="20201110 08:36:59.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.182" endtime="20201110 08:36:59.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.148" endtime="20201110 08:36:59.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.142" endtime="20201110 08:36:59.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.207" endtime="20201110 08:36:59.542"></status>
</kw>
<msg timestamp="20201110 08:36:59.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038135694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038142986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.204" endtime="20201110 08:36:59.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038135694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038142986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.549" endtime="20201110 08:36:59.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.562" endtime="20201110 08:36:59.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.196" endtime="20201110 08:36:59.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.191" endtime="20201110 08:36:59.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.579" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:36:59.576" endtime="20201110 08:36:59.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.587" level="INFO">VALUE: [{'time': 0.038135694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038142986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.038151278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.038153694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4160000000050808e-06, 'source_diff': 2.4160000000050808e-06}, {'time': 0.038161417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.723000000001146e-06, 'source_diff': 7.723000000001146e-06}, {'time': 0.038165042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.038167333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.2909999999945474e-06, 'source_diff': 2.2909999999945474e-06}, {'time': 0.038172514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.03817525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.038179764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.03818875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.986000000002492e-06, 'source_diff': 8.986000000002492e-06}, {'time': 0.038192153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.038198319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.038205736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.416999999995677e-06, 'source_diff': 7.416999999995677e-06}, {'time': 0.038214139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.038221889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.038225375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4859999999969915e-06, 'source_diff': 3.4859999999969915e-06}, {'time': 0.038232708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.332999999998258e-06, 'source_diff': 7.332999999998258e-06}, {'time': 0.038237292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.58400000000192e-06, 'source_diff': 4.58400000000192e-06}, {'time': 0.038241028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.038247208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.179999999994523e-06, 'source_diff': 6.179999999994523e-06}, {'time': 0.038254875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.038257583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7079999999971016e-06, 'source_diff': 2.7079999999971016e-06}, {'time': 0.03826575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.167000000003366e-06, 'source_diff': 8.167000000003366e-06}, {'time': 0.038268153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.038277347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.038284736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.388999999996537e-06, 'source_diff': 7.388999999996537e-06}, {'time': 0.038287139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.03829, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.038299056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.038301694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.637999999999252e-06, 'source_diff': 2.637999999999252e-06}, {'time': 0.038305972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.27800000000339e-06, 'source_diff': 4.27800000000339e-06}, {'time': 0.038314042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.038320139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.097000000003516e-06, 'source_diff': 6.097000000003516e-06}, {'time': 0.038322306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1669999999973655e-06, 'source_diff': 2.1669999999973655e-06}, {'time': 0.038330056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.750000000000812e-06, 'source_diff': 7.750000000000812e-06}, {'time': 0.038333111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.038340181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.038349264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.038358069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}, {'time': 0.038364736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.667000000001866e-06, 'source_diff': 6.667000000001866e-06}, {'time': 0.038369708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.038372431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.722999999996145e-06, 'source_diff': 2.722999999996145e-06}, {'time': 0.038379375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944000000001782e-06, 'source_diff': 6.944000000001782e-06}, {'time': 0.038386, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.038393403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.03839625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.038405, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038407944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9439999999977817e-06, 'source_diff': 2.9439999999977817e-06}, {'time': 0.038416583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}]</msg>
<status status="PASS" starttime="20201110 08:36:59.581" endtime="20201110 08:36:59.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.570" endtime="20201110 08:36:59.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:36:59.622" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:59.592" endtime="20201110 08:36:59.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.631" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:36:59.629" endtime="20201110 08:36:59.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.639" level="INFO">VALUE: {'sourceeventsource_diff': [0, 7.2919999999990215e-06, 8.292000000000022e-06, 2.4160000000050808e-06, 7.723000000001146e-06, 3.625000000000156e-06, 2.2909999999945474e-06, 5.180999999999936e-06, 2.7360000000031803e-06, 4.513999999997131e-06, 8.986000000002492e-06, 3.4029999999990457e-06, 6.166000000001892e-06, 7.416999999995677e-06, 8.403000000004046e-06, 7.750000000000812e-06, 3.4859999999969915e-06, 7.332999999998258e-06, 4.58400000000192e-06, 3.7360000000041804e-06, 6.179999999994523e-06, 7.667000000002866e-06, 2.7079999999971016e-06, 8.167000000003366e-06, 2.4029999999980456e-06, 9.194000000004032e-06, 7.388999999996537e-06, 2.4029999999980456e-06, 2.860999999999836e-06, 9.056000000000342e-06, 2.637999999999252e-06, 4.27800000000339e-06, 8.069999999998911e-06, 6.097000000003516e-06, 2.1669999999973655e-06, 7.750000000000812e-06, 3.0550000000018063e-06, 7.069999999997911e-06, 9.083000000000008e-06, 8.805000000000618e-06, 6.667000000001866e-06, 4.971999999998922e-06, 2.722999999996145e-06, 6.944000000001782e-06, 6.625000000003156e-06, 7.402999999996107e-06, 2.847000000000266e-06, 8.750000000001812e-06, 2.9439999999977817e-06, 8.638999999997787e-06], 'diff': [0, 7.2919999999990215e-06, 8.292000000000022e-06, 2.4160000000050808e-06, 7.723000000001146e-06, 3.625000000000156e-06, 2.2909999999945474e-06, 5.180999999999936e-06, 2.7360000000031803e-06, 4.513999999997131e-06, 8.986000000002492e-06, 3.4029999999990457e-06, 6.166000000001892e-06, 7.416999999995677e-06, 8.403000000004046e-06, 7.750000000000812e-06, 3.4859999999969915e-06, 7.332999999998258e-06, 4.58400000000192e-06, 3.7360000000041804e-06, 6.179999999994523e-06, 7.667000000002866e-06, 2.7079999999971016e-06, 8.167000000003366e-06, 2.4029999999980456e-06, 9.194000000004032e-06, 7.388999999996537e-06, 2.4029999999980456e-06, 2.860999999999836e-06, 9.056000000000342e-06, 2.637999999999252e-06, 4.27800000000339e-06, 8.069999999998911e-06, 6.097000000003516e-06, 2.1669999999973655e-06, 7.750000000000812e-06, 3.0550000000018063e-06, 7.069999999997911e-06, 9.083000000000008e-06, 8.805000000000618e-06, 6.667000000001866e-06, 4.971999999998922e-06, 2.722999999996145e-06, 6.944000000001782e-06, 6.625000000003156e-06, 7.402999999996107e-06, 2.847000000000266e-06, 8.750000000001812e-06, 2.9439999999977817e-06, 8.638999999997787e-06], 'time': [0.038135694, 0.038142986, 0.038151278, 0.038153694, 0.038161417, 0.038165042, 0.038167333, 0.038172514, 0.03817525, 0.038179764, 0.03818875, 0.038192153, 0.038198319, 0.038205736, 0.038214139, 0.038221889, 0.038225375, 0.038232708, 0.038237292, 0.038241028, 0.038247208, 0.038254875, 0.038257583, 0.03826575, 0.038268153, 0.038277347, 0.038284736, 0.038287139, 0.03829, 0.038299056, 0.038301694, 0.038305972, 0.038314042, 0.038320139, 0.038322306, 0.038330056, 0.038333111, 0.038340181, 0.038349264, 0.038358069, 0.038364736, 0.038369708, 0.038372431, 0.038379375, 0.038386, 0.038393403, 0.03839625, 0.038405, 0.038407944, 0.038416583]}</msg>
<status status="PASS" starttime="20201110 08:36:59.634" endtime="20201110 08:36:59.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.624" endtime="20201110 08:36:59.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:36:59.651" level="INFO">${RESULT} = [{'time': 0.038142986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.038153694, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:36:59.643" endtime="20201110 08:36:59.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:36:59.674" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:36:59.653" endtime="20201110 08:36:59.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.688" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:36:59.685" endtime="20201110 08:36:59.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.695" level="INFO">VALUE: [7.2919999999990215e-06, 2.4160000000050808e-06, 3.625000000000156e-06, 5.180999999999936e-06, 4.513999999997131e-06, 3.4029999999990457e-06, 7.416999999995677e-06, 7.750000000000812e-06, 7.332999999998258e-06, 3.7360000000041804e-06, 7.667000000002866e-06, 8.167000000003366e-06, 9.194000000004032e-06, 2.4029999999980456e-06, 9.056000000000342e-06, 4.27800000000339e-06, 6.097000000003516e-06, 7.750000000000812e-06, 7.069999999997911e-06, 8.805000000000618e-06, 4.971999999998922e-06, 6.944000000001782e-06, 7.402999999996107e-06, 8.750000000001812e-06, 8.638999999997787e-06]</msg>
<status status="PASS" starttime="20201110 08:36:59.691" endtime="20201110 08:36:59.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.677" endtime="20201110 08:36:59.698"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.708" endtime="20201110 08:36:59.711"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:36:59.718" endtime="20201110 08:36:59.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.713" endtime="20201110 08:36:59.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.702" endtime="20201110 08:36:59.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.138" endtime="20201110 08:36:59.744"></status>
</kw>
<msg timestamp="20201110 08:36:59.744" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.765" endtime="20201110 08:36:59.778"></status>
</kw>
<msg timestamp="20201110 08:36:59.779" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.761" endtime="20201110 08:36:59.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:36:59.785" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:36:59.781" endtime="20201110 08:36:59.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.788" endtime="20201110 08:36:59.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.754" endtime="20201110 08:36:59.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.749" endtime="20201110 08:36:59.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:36:59.812" endtime="20201110 08:37:00.142"></status>
</kw>
<msg timestamp="20201110 08:37:00.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037510236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037517181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:36:59.808" endtime="20201110 08:37:00.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037510236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037517181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.151" endtime="20201110 08:37:00.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.167" endtime="20201110 08:37:00.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.801" endtime="20201110 08:37:00.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.796" endtime="20201110 08:37:00.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.191" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:00.186" endtime="20201110 08:37:00.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.201" level="INFO">VALUE: [{'time': 0.037510236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037517181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944999999994317e-06, 'source_diff': 6.944999999994317e-06}, {'time': 0.037522361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.037528014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.037534444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.430000000001712e-06, 'source_diff': 6.430000000001712e-06}, {'time': 0.037542125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.681000000002436e-06, 'source_diff': 7.681000000002436e-06}, {'time': 0.037546306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.037553944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.637999999997314e-06, 'source_diff': 7.637999999997314e-06}, {'time': 0.037556125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1810000000038743e-06, 'source_diff': 2.1810000000038743e-06}, {'time': 0.037565264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.037568694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.429999999998712e-06, 'source_diff': 3.429999999998712e-06}, {'time': 0.037573875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.037582167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037587569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402000000001572e-06, 'source_diff': 5.402000000001572e-06}, {'time': 0.037591375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.80600000000203e-06, 'source_diff': 3.80600000000203e-06}, {'time': 0.037598931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037602556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.037609514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.957999999994413e-06, 'source_diff': 6.957999999994413e-06}, {'time': 0.037612486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9720000000038604e-06, 'source_diff': 2.9720000000038604e-06}, {'time': 0.037619556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.037626847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.037633583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037639319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.037646625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.30600000000553e-06, 'source_diff': 7.30600000000553e-06}, {'time': 0.037654694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.037663417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.722999999995207e-06, 'source_diff': 8.722999999995207e-06}, {'time': 0.037669389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.037678, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.037682736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.037689153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037693764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.610999999994647e-06, 'source_diff': 4.610999999994647e-06}, {'time': 0.037702292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.037708458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.166000000001892e-06, 'source_diff': 6.166000000001892e-06}, {'time': 0.037711, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}, {'time': 0.037713264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.26400000000182e-06, 'source_diff': 2.26400000000182e-06}, {'time': 0.037717444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.037723736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.037732806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.037740319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.037745653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.333999999995731e-06, 'source_diff': 5.333999999995731e-06}, {'time': 0.037751917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2640000000058205e-06, 'source_diff': 6.2640000000058205e-06}, {'time': 0.0377585, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5829999999975075e-06, 'source_diff': 6.5829999999975075e-06}, {'time': 0.037763833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.332999999996257e-06, 'source_diff': 5.332999999996257e-06}, {'time': 0.037772236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.037777931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.695000000000006e-06, 'source_diff': 5.695000000000006e-06}, {'time': 0.037781486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5550000000023063e-06, 'source_diff': 3.5550000000023063e-06}, {'time': 0.037785667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.037788403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7359999999962414e-06, 'source_diff': 2.7359999999962414e-06}, {'time': 0.037797361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.037802542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:00.194" endtime="20201110 08:37:00.203"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.179" endtime="20201110 08:37:00.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:00.237" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.207" endtime="20201110 08:37:00.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.250" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:00.247" endtime="20201110 08:37:00.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.257" level="INFO">VALUE: {'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 6.944999999994317e-06, 5.180000000000462e-06, 5.653000000001296e-06, 6.430000000001712e-06, 7.681000000002436e-06, 4.1809999999989356e-06, 7.637999999997314e-06, 2.1810000000038743e-06, 9.138999999998287e-06, 3.429999999998712e-06, 5.180999999999936e-06, 8.292000000000022e-06, 5.402000000001572e-06, 3.80600000000203e-06, 7.555999999998841e-06, 3.625000000000156e-06, 6.957999999994413e-06, 2.9720000000038604e-06, 7.069999999997911e-06, 7.290999999999548e-06, 6.736000000000242e-06, 5.735999999999242e-06, 7.30600000000553e-06, 8.068999999999438e-06, 8.722999999995207e-06, 5.971999999999922e-06, 8.611000000005586e-06, 4.735999999998242e-06, 6.417000000001616e-06, 4.610999999994647e-06, 8.528000000000702e-06, 6.166000000001892e-06, 2.54200000000121e-06, 2.26400000000182e-06, 4.179999999999462e-06, 6.291999999998021e-06, 9.069999999999911e-06, 7.513000000000658e-06, 5.333999999995731e-06, 6.2640000000058205e-06, 6.5829999999975075e-06, 5.332999999996257e-06, 8.403000000004046e-06, 5.695000000000006e-06, 3.5550000000023063e-06, 4.1809999999989356e-06, 2.7359999999962414e-06, 8.958000000003352e-06, 5.180999999999936e-06], 'diff': [0, 6.944999999994317e-06, 5.180000000000462e-06, 5.653000000001296e-06, 6.430000000001712e-06, 7.681000000002436e-06, 4.1809999999989356e-06, 7.637999999997314e-06, 2.1810000000038743e-06, 9.138999999998287e-06, 3.429999999998712e-06, 5.180999999999936e-06, 8.292000000000022e-06, 5.402000000001572e-06, 3.80600000000203e-06, 7.555999999998841e-06, 3.625000000000156e-06, 6.957999999994413e-06, 2.9720000000038604e-06, 7.069999999997911e-06, 7.290999999999548e-06, 6.736000000000242e-06, 5.735999999999242e-06, 7.30600000000553e-06, 8.068999999999438e-06, 8.722999999995207e-06, 5.971999999999922e-06, 8.611000000005586e-06, 4.735999999998242e-06, 6.417000000001616e-06, 4.610999999994647e-06, 8.528000000000702e-06, 6.166000000001892e-06, 2.54200000000121e-06, 2.26400000000182e-06, 4.179999999999462e-06, 6.291999999998021e-06, 9.069999999999911e-06, 7.513000000000658e-06, 5.333999999995731e-06, 6.2640000000058205e-06, 6.5829999999975075e-06, 5.332999999996257e-06, 8.403000000004046e-06, 5.695000000000006e-06, 3.5550000000023063e-06, 4.1809999999989356e-06, 2.7359999999962414e-06, 8.958000000003352e-06, 5.180999999999936e-06], 'time': [0.037510236, 0.037517181, 0.037522361, 0.037528014, 0.037534444, 0.037542125, 0.037546306, 0.037553944, 0.037556125, 0.037565264, 0.037568694, 0.037573875, 0.037582167, 0.037587569, 0.037591375, 0.037598931, 0.037602556, 0.037609514, 0.037612486, 0.037619556, 0.037626847, 0.037633583, 0.037639319, 0.037646625, 0.037654694, 0.037663417, 0.037669389, 0.037678, 0.037682736, 0.037689153, 0.037693764, 0.037702292, 0.037708458, 0.037711, 0.037713264, 0.037717444, 0.037723736, 0.037732806, 0.037740319, 0.037745653, 0.037751917, 0.0377585, 0.037763833, 0.037772236, 0.037777931, 0.037781486, 0.037785667, 0.037788403, 0.037797361, 0.037802542]}</msg>
<status status="PASS" starttime="20201110 08:37:00.252" endtime="20201110 08:37:00.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.239" endtime="20201110 08:37:00.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.269" level="INFO">${RESULT} = [{'time': 0.037517181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.944999999994317e-06, 'source_diff': 6.944999999994317e-06}, {'time': 0.037528014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.262" endtime="20201110 08:37:00.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.288" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.272" endtime="20201110 08:37:00.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.298" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:00.296" endtime="20201110 08:37:00.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.303" level="INFO">VALUE: [6.944999999994317e-06, 5.653000000001296e-06, 7.681000000002436e-06, 7.637999999997314e-06, 9.138999999998287e-06, 5.180999999999936e-06, 5.402000000001572e-06, 7.555999999998841e-06, 6.957999999994413e-06, 7.069999999997911e-06, 6.736000000000242e-06, 7.30600000000553e-06, 8.722999999995207e-06, 8.611000000005586e-06, 6.417000000001616e-06, 8.528000000000702e-06, 2.54200000000121e-06, 4.179999999999462e-06, 9.069999999999911e-06, 5.333999999995731e-06, 6.5829999999975075e-06, 8.403000000004046e-06, 3.5550000000023063e-06, 2.7359999999962414e-06, 5.180999999999936e-06]</msg>
<status status="PASS" starttime="20201110 08:37:00.301" endtime="20201110 08:37:00.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.290" endtime="20201110 08:37:00.306"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.313" endtime="20201110 08:37:00.316"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.321" endtime="20201110 08:37:00.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.317" endtime="20201110 08:37:00.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.308" endtime="20201110 08:37:00.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:59.746" endtime="20201110 08:37:00.348"></status>
</kw>
<msg timestamp="20201110 08:37:00.348" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.368" endtime="20201110 08:37:00.381"></status>
</kw>
<msg timestamp="20201110 08:37:00.382" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.365" endtime="20201110 08:37:00.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.384" endtime="20201110 08:37:00.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.391" endtime="20201110 08:37:00.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.357" endtime="20201110 08:37:00.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.353" endtime="20201110 08:37:00.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.415" endtime="20201110 08:37:00.752"></status>
</kw>
<msg timestamp="20201110 08:37:00.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037566931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037572667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.411" endtime="20201110 08:37:00.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037566931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037572667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:00.761" endtime="20201110 08:37:00.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.777" endtime="20201110 08:37:00.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.404" endtime="20201110 08:37:00.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.399" endtime="20201110 08:37:00.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.797" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:00.795" endtime="20201110 08:37:00.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.806" level="INFO">VALUE: [{'time': 0.037566931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037572667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.037576403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.037585347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.943999999996843e-06, 'source_diff': 8.943999999996843e-06}, {'time': 0.037589528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.037597375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}, {'time': 0.037606069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.693999999996593e-06, 'source_diff': 8.693999999996593e-06}, {'time': 0.037611639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.57000000000335e-06, 'source_diff': 5.57000000000335e-06}, {'time': 0.037620722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.037624444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.037630292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.84800000000274e-06, 'source_diff': 5.84800000000274e-06}, {'time': 0.03763325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.037642444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.037648903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.459000000000326e-06, 'source_diff': 6.459000000000326e-06}, {'time': 0.037651903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0000000000030003e-06, 'source_diff': 3.0000000000030003e-06}, {'time': 0.037658861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.037662069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2079999999976017e-06, 'source_diff': 3.2079999999976017e-06}, {'time': 0.037669556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4870000000004655e-06, 'source_diff': 7.4870000000004655e-06}, {'time': 0.037678681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.124999999998717e-06, 'source_diff': 9.124999999998717e-06}, {'time': 0.03768525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5690000000048765e-06, 'source_diff': 6.5690000000048765e-06}, {'time': 0.037688653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.037697292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.037704181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.037712639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.457999999995913e-06, 'source_diff': 8.457999999995913e-06}, {'time': 0.037720167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037725556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.389000000001476e-06, 'source_diff': 5.389000000001476e-06}, {'time': 0.037728417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.037730819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.401999999998572e-06, 'source_diff': 2.401999999998572e-06}, {'time': 0.037735903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.037740417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.037744694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2770000000039166e-06, 'source_diff': 4.2770000000039166e-06}, {'time': 0.037753583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.888999999998037e-06, 'source_diff': 8.888999999998037e-06}, {'time': 0.037760278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.695000000001006e-06, 'source_diff': 6.695000000001006e-06}, {'time': 0.037762569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.037765972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.037769486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5139999999961313e-06, 'source_diff': 3.5139999999961313e-06}, {'time': 0.037777556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.069999999998911e-06, 'source_diff': 8.069999999998911e-06}, {'time': 0.037786069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513000000001658e-06, 'source_diff': 8.513000000001658e-06}, {'time': 0.037791708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.037794778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.037801847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.037808167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.319999999997161e-06, 'source_diff': 6.319999999997161e-06}, {'time': 0.037815972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.805000000006557e-06, 'source_diff': 7.805000000006557e-06}, {'time': 0.037819278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.305999999994591e-06, 'source_diff': 3.305999999994591e-06}, {'time': 0.037824611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.333000000003196e-06, 'source_diff': 5.333000000003196e-06}, {'time': 0.037832514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.902999999996607e-06, 'source_diff': 7.902999999996607e-06}, {'time': 0.037835694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1800000000054007e-06, 'source_diff': 3.1800000000054007e-06}, {'time': 0.037843431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736999999993777e-06, 'source_diff': 7.736999999993777e-06}, {'time': 0.037849611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.037852153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.54200000000121e-06, 'source_diff': 2.54200000000121e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:00.800" endtime="20201110 08:37:00.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.787" endtime="20201110 08:37:00.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:00.842" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.811" endtime="20201110 08:37:00.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.852" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:00.849" endtime="20201110 08:37:00.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.859" level="INFO">VALUE: {'sourceeventsource_diff': [0, 5.735999999999242e-06, 3.7360000000041804e-06, 8.943999999996843e-06, 4.1809999999989356e-06, 7.847000000005266e-06, 8.693999999996593e-06, 5.57000000000335e-06, 9.083000000000008e-06, 3.7219999999976716e-06, 5.84800000000274e-06, 2.9579999999973516e-06, 9.193999999997093e-06, 6.459000000000326e-06, 3.0000000000030003e-06, 6.958000000001352e-06, 3.2079999999976017e-06, 7.4870000000004655e-06, 9.124999999998717e-06, 6.5690000000048765e-06, 3.4029999999990457e-06, 8.638999999997787e-06, 6.889000000002976e-06, 8.457999999995913e-06, 7.527999999999702e-06, 5.389000000001476e-06, 2.860999999999836e-06, 2.401999999998572e-06, 5.08400000000242e-06, 4.513999999997131e-06, 4.2770000000039166e-06, 8.888999999998037e-06, 6.695000000001006e-06, 2.2910000000014863e-06, 3.4029999999990457e-06, 3.5139999999961313e-06, 8.069999999998911e-06, 8.513000000001658e-06, 5.639000000001726e-06, 3.07000000000085e-06, 7.068999999998438e-06, 6.319999999997161e-06, 7.805000000006557e-06, 3.305999999994591e-06, 5.333000000003196e-06, 7.902999999996607e-06, 3.1800000000054007e-06, 7.736999999993777e-06, 6.180000000001462e-06, 2.54200000000121e-06], 'diff': [0, 5.735999999999242e-06, 3.7360000000041804e-06, 8.943999999996843e-06, 4.1809999999989356e-06, 7.847000000005266e-06, 8.693999999996593e-06, 5.57000000000335e-06, 9.083000000000008e-06, 3.7219999999976716e-06, 5.84800000000274e-06, 2.9579999999973516e-06, 9.193999999997093e-06, 6.459000000000326e-06, 3.0000000000030003e-06, 6.958000000001352e-06, 3.2079999999976017e-06, 7.4870000000004655e-06, 9.124999999998717e-06, 6.5690000000048765e-06, 3.4029999999990457e-06, 8.638999999997787e-06, 6.889000000002976e-06, 8.457999999995913e-06, 7.527999999999702e-06, 5.389000000001476e-06, 2.860999999999836e-06, 2.401999999998572e-06, 5.08400000000242e-06, 4.513999999997131e-06, 4.2770000000039166e-06, 8.888999999998037e-06, 6.695000000001006e-06, 2.2910000000014863e-06, 3.4029999999990457e-06, 3.5139999999961313e-06, 8.069999999998911e-06, 8.513000000001658e-06, 5.639000000001726e-06, 3.07000000000085e-06, 7.068999999998438e-06, 6.319999999997161e-06, 7.805000000006557e-06, 3.305999999994591e-06, 5.333000000003196e-06, 7.902999999996607e-06, 3.1800000000054007e-06, 7.736999999993777e-06, 6.180000000001462e-06, 2.54200000000121e-06], 'time': [0.037566931, 0.037572667, 0.037576403, 0.037585347, 0.037589528, 0.037597375, 0.037606069, 0.037611639, 0.037620722, 0.037624444, 0.037630292, 0.03763325, 0.037642444, 0.037648903, 0.037651903, 0.037658861, 0.037662069, 0.037669556, 0.037678681, 0.03768525, 0.037688653, 0.037697292, 0.037704181, 0.037712639, 0.037720167, 0.037725556, 0.037728417, 0.037730819, 0.037735903, 0.037740417, 0.037744694, 0.037753583, 0.037760278, 0.037762569, 0.037765972, 0.037769486, 0.037777556, 0.037786069, 0.037791708, 0.037794778, 0.037801847, 0.037808167, 0.037815972, 0.037819278, 0.037824611, 0.037832514, 0.037835694, 0.037843431, 0.037849611, 0.037852153]}</msg>
<status status="PASS" starttime="20201110 08:37:00.854" endtime="20201110 08:37:00.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.844" endtime="20201110 08:37:00.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:00.871" level="INFO">${RESULT} = [{'time': 0.037572667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.037585347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:00.863" endtime="20201110 08:37:00.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:00.889" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:00.873" endtime="20201110 08:37:00.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.900" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:00.897" endtime="20201110 08:37:00.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.905" level="INFO">VALUE: [5.735999999999242e-06, 8.943999999996843e-06, 7.847000000005266e-06, 5.57000000000335e-06, 3.7219999999976716e-06, 2.9579999999973516e-06, 6.459000000000326e-06, 6.958000000001352e-06, 7.4870000000004655e-06, 6.5690000000048765e-06, 8.638999999997787e-06, 8.457999999995913e-06, 5.389000000001476e-06, 2.401999999998572e-06, 4.513999999997131e-06, 8.888999999998037e-06, 2.2910000000014863e-06, 3.5139999999961313e-06, 8.513000000001658e-06, 3.07000000000085e-06, 6.319999999997161e-06, 3.305999999994591e-06, 7.902999999996607e-06, 7.736999999993777e-06, 2.54200000000121e-06]</msg>
<status status="PASS" starttime="20201110 08:37:00.902" endtime="20201110 08:37:00.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.891" endtime="20201110 08:37:00.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.915" endtime="20201110 08:37:00.918"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:00.923" endtime="20201110 08:37:00.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.919" endtime="20201110 08:37:00.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.910" endtime="20201110 08:37:00.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.349" endtime="20201110 08:37:00.949"></status>
</kw>
<msg timestamp="20201110 08:37:00.950" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.970" endtime="20201110 08:37:00.983"></status>
</kw>
<msg timestamp="20201110 08:37:00.984" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.966" endtime="20201110 08:37:00.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:00.991" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:00.987" endtime="20201110 08:37:00.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:00.993" endtime="20201110 08:37:00.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.959" endtime="20201110 08:37:00.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.954" endtime="20201110 08:37:01.000"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.017" endtime="20201110 08:37:01.344"></status>
</kw>
<msg timestamp="20201110 08:37:01.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037373861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037377833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.014" endtime="20201110 08:37:01.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037373861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037377833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.351" endtime="20201110 08:37:01.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.363" endtime="20201110 08:37:01.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.006" endtime="20201110 08:37:01.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.002" endtime="20201110 08:37:01.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.382" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:01.380" endtime="20201110 08:37:01.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.390" level="INFO">VALUE: [{'time': 0.037373861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037377833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.037383056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.222999999998645e-06, 'source_diff': 5.222999999998645e-06}, {'time': 0.037389931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.037395139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.037403764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037410403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.639000000002726e-06, 'source_diff': 6.639000000002726e-06}, {'time': 0.037413792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.037416153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.037423833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.679999999996023e-06, 'source_diff': 7.679999999996023e-06}, {'time': 0.037426694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.861000000006775e-06, 'source_diff': 2.861000000006775e-06}, {'time': 0.037434319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.037441264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.945000000001256e-06, 'source_diff': 6.945000000001256e-06}, {'time': 0.037448792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037453514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.037458139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.037462431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.037468833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.402000000002572e-06, 'source_diff': 6.402000000002572e-06}, {'time': 0.037474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.985999999999492e-06, 'source_diff': 5.985999999999492e-06}, {'time': 0.037482875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.055999999999341e-06, 'source_diff': 8.055999999999341e-06}, {'time': 0.037486264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.037493333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.037497069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.037501708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.037505764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.055999999995341e-06, 'source_diff': 4.055999999995341e-06}, {'time': 0.037508542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.77800000000189e-06, 'source_diff': 2.77800000000189e-06}, {'time': 0.037516236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694000000002532e-06, 'source_diff': 7.694000000002532e-06}, {'time': 0.037521875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.037527264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.037535, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.037538736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.037546986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.249999999994373e-06, 'source_diff': 8.249999999994373e-06}, {'time': 0.037552792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.80600000000403e-06, 'source_diff': 5.80600000000403e-06}, {'time': 0.037556736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.037563264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.037571486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.0375805, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.014000000001632e-06, 'source_diff': 9.014000000001632e-06}, {'time': 0.037584792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.037591306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037594042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.037597333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2909999999955475e-06, 'source_diff': 3.2909999999955475e-06}, {'time': 0.037600847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.037606083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.235999999998742e-06, 'source_diff': 5.235999999998742e-06}, {'time': 0.037614222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.139000000004226e-06, 'source_diff': 8.139000000004226e-06}, {'time': 0.037618722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4999999999975615e-06, 'source_diff': 4.4999999999975615e-06}, {'time': 0.037627014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.03763375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037636486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7359999999962414e-06, 'source_diff': 2.7359999999962414e-06}, {'time': 0.037642347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.037648625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:01.384" endtime="20201110 08:37:01.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.373" endtime="20201110 08:37:01.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:01.427" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:01.396" endtime="20201110 08:37:01.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.440" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:01.437" endtime="20201110 08:37:01.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.450" level="INFO">VALUE: {'sourceeventsource_diff': [0, 3.971999999997922e-06, 5.222999999998645e-06, 6.875000000003406e-06, 5.207999999999602e-06, 8.624999999998217e-06, 6.639000000002726e-06, 3.3889999999994758e-06, 2.360999999999336e-06, 7.679999999996023e-06, 2.861000000006775e-06, 7.624999999997217e-06, 6.945000000001256e-06, 7.527999999999702e-06, 4.721999999998672e-06, 4.625000000001156e-06, 4.291999999996021e-06, 6.402000000002572e-06, 5.985999999999492e-06, 8.055999999999341e-06, 3.3889999999994758e-06, 7.068999999998438e-06, 3.7360000000041804e-06, 4.639000000000726e-06, 4.055999999995341e-06, 2.77800000000189e-06, 7.694000000002532e-06, 5.639000000001726e-06, 5.388999999994537e-06, 7.736000000001242e-06, 3.7360000000041804e-06, 8.249999999994373e-06, 5.80600000000403e-06, 3.943999999998782e-06, 6.5279999999987015e-06, 8.222000000002172e-06, 9.014000000001632e-06, 4.291999999996021e-06, 6.513999999999132e-06, 2.7360000000031803e-06, 3.2909999999955475e-06, 3.5140000000030702e-06, 5.235999999998742e-06, 8.139000000004226e-06, 4.4999999999975615e-06, 8.292000000000022e-06, 6.736000000000242e-06, 2.7359999999962414e-06, 5.861000000002836e-06, 6.2779999999984515e-06], 'diff': [0, 3.971999999997922e-06, 5.222999999998645e-06, 6.875000000003406e-06, 5.207999999999602e-06, 8.624999999998217e-06, 6.639000000002726e-06, 3.3889999999994758e-06, 2.360999999999336e-06, 7.679999999996023e-06, 2.861000000006775e-06, 7.624999999997217e-06, 6.945000000001256e-06, 7.527999999999702e-06, 4.721999999998672e-06, 4.625000000001156e-06, 4.291999999996021e-06, 6.402000000002572e-06, 5.985999999999492e-06, 8.055999999999341e-06, 3.3889999999994758e-06, 7.068999999998438e-06, 3.7360000000041804e-06, 4.639000000000726e-06, 4.055999999995341e-06, 2.77800000000189e-06, 7.694000000002532e-06, 5.639000000001726e-06, 5.388999999994537e-06, 7.736000000001242e-06, 3.7360000000041804e-06, 8.249999999994373e-06, 5.80600000000403e-06, 3.943999999998782e-06, 6.5279999999987015e-06, 8.222000000002172e-06, 9.014000000001632e-06, 4.291999999996021e-06, 6.513999999999132e-06, 2.7360000000031803e-06, 3.2909999999955475e-06, 3.5140000000030702e-06, 5.235999999998742e-06, 8.139000000004226e-06, 4.4999999999975615e-06, 8.292000000000022e-06, 6.736000000000242e-06, 2.7359999999962414e-06, 5.861000000002836e-06, 6.2779999999984515e-06], 'time': [0.037373861, 0.037377833, 0.037383056, 0.037389931, 0.037395139, 0.037403764, 0.037410403, 0.037413792, 0.037416153, 0.037423833, 0.037426694, 0.037434319, 0.037441264, 0.037448792, 0.037453514, 0.037458139, 0.037462431, 0.037468833, 0.037474819, 0.037482875, 0.037486264, 0.037493333, 0.037497069, 0.037501708, 0.037505764, 0.037508542, 0.037516236, 0.037521875, 0.037527264, 0.037535, 0.037538736, 0.037546986, 0.037552792, 0.037556736, 0.037563264, 0.037571486, 0.0375805, 0.037584792, 0.037591306, 0.037594042, 0.037597333, 0.037600847, 0.037606083, 0.037614222, 0.037618722, 0.037627014, 0.03763375, 0.037636486, 0.037642347, 0.037648625]}</msg>
<status status="PASS" starttime="20201110 08:37:01.443" endtime="20201110 08:37:01.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.430" endtime="20201110 08:37:01.454"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:01.466" level="INFO">${RESULT} = [{'time': 0.037377833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.037389931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:01.456" endtime="20201110 08:37:01.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:01.486" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:01.469" endtime="20201110 08:37:01.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.497" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:01.495" endtime="20201110 08:37:01.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.502" level="INFO">VALUE: [3.971999999997922e-06, 6.875000000003406e-06, 8.624999999998217e-06, 3.3889999999994758e-06, 7.679999999996023e-06, 7.624999999997217e-06, 7.527999999999702e-06, 4.625000000001156e-06, 6.402000000002572e-06, 8.055999999999341e-06, 7.068999999998438e-06, 4.639000000000726e-06, 2.77800000000189e-06, 5.639000000001726e-06, 7.736000000001242e-06, 8.249999999994373e-06, 3.943999999998782e-06, 8.222000000002172e-06, 4.291999999996021e-06, 2.7360000000031803e-06, 3.5140000000030702e-06, 8.139000000004226e-06, 8.292000000000022e-06, 2.7359999999962414e-06, 6.2779999999984515e-06]</msg>
<status status="PASS" starttime="20201110 08:37:01.499" endtime="20201110 08:37:01.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.488" endtime="20201110 08:37:01.505"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.512" endtime="20201110 08:37:01.515"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:01.520" endtime="20201110 08:37:01.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.516" endtime="20201110 08:37:01.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.507" endtime="20201110 08:37:01.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:00.951" endtime="20201110 08:37:01.546"></status>
</kw>
<msg timestamp="20201110 08:37:01.547" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.567" endtime="20201110 08:37:01.581"></status>
</kw>
<msg timestamp="20201110 08:37:01.582" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.564" endtime="20201110 08:37:01.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.588" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:01.584" endtime="20201110 08:37:01.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.590" endtime="20201110 08:37:01.594"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.556" endtime="20201110 08:37:01.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.551" endtime="20201110 08:37:01.597"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.616" endtime="20201110 08:37:01.954"></status>
</kw>
<msg timestamp="20201110 08:37:01.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037510764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037513833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.611" endtime="20201110 08:37:01.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037510764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037513833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:01.963" endtime="20201110 08:37:01.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:01.977" endtime="20201110 08:37:01.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.604" endtime="20201110 08:37:01.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.599" endtime="20201110 08:37:01.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:01.996" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:01.994" endtime="20201110 08:37:01.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.005" level="INFO">VALUE: [{'time': 0.037510764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037513833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.037518014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.037524306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.037527264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.037533778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037537069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.037539583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.037542792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2089999999970753e-06, 'source_diff': 3.2089999999970753e-06}, {'time': 0.037548389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.597000000003016e-06, 'source_diff': 5.597000000003016e-06}, {'time': 0.037555125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.03755775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.037563153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.037570222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.037577292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.037583583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.037588722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.139000000001226e-06, 'source_diff': 5.139000000001226e-06}, {'time': 0.037596278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.555999999998841e-06, 'source_diff': 7.555999999998841e-06}, {'time': 0.037604681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.037608861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.037613042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.03762125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.208000000002602e-06, 'source_diff': 8.208000000002602e-06}, {'time': 0.037629917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.666999999996927e-06, 'source_diff': 8.666999999996927e-06}, {'time': 0.037638472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.555000000000368e-06, 'source_diff': 8.555000000000368e-06}, {'time': 0.037647556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083999999999481e-06, 'source_diff': 9.083999999999481e-06}, {'time': 0.037652736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.180000000000462e-06, 'source_diff': 5.180000000000462e-06}, {'time': 0.037655806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.037661333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.526999999998228e-06, 'source_diff': 5.526999999998228e-06}, {'time': 0.037668833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037671236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.037678653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.417000000002616e-06, 'source_diff': 7.417000000002616e-06}, {'time': 0.037683931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.277999999997451e-06, 'source_diff': 5.277999999997451e-06}, {'time': 0.037691333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402000000003572e-06, 'source_diff': 7.402000000003572e-06}, {'time': 0.037700181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847999999998801e-06, 'source_diff': 8.847999999998801e-06}, {'time': 0.037704139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.037707944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.8050000000025563e-06, 'source_diff': 3.8050000000025563e-06}, {'time': 0.037712875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.930999999999686e-06, 'source_diff': 4.930999999999686e-06}, {'time': 0.037721458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.582999999999508e-06, 'source_diff': 8.582999999999508e-06}, {'time': 0.037727528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.07000000000385e-06, 'source_diff': 6.07000000000385e-06}, {'time': 0.037731708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.179999999999462e-06, 'source_diff': 4.179999999999462e-06}, {'time': 0.037740111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037742514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.037746931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.037752569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638000000002252e-06, 'source_diff': 5.638000000002252e-06}, {'time': 0.037755056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.487000000002404e-06, 'source_diff': 2.487000000002404e-06}, {'time': 0.037758014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.037763972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.958000000000352e-06, 'source_diff': 5.958000000000352e-06}, {'time': 0.037770389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.417000000001616e-06, 'source_diff': 6.417000000001616e-06}, {'time': 0.037773236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.037777083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.847000000001266e-06, 'source_diff': 3.847000000001266e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:01.999" endtime="20201110 08:37:02.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.987" endtime="20201110 08:37:02.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:02.042" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:02.011" endtime="20201110 08:37:02.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.051" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:02.049" endtime="20201110 08:37:02.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.058" level="INFO">VALUE: {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'], 'eventsource_diff': [0, 3.069000000001376e-06, 4.1809999999989356e-06, 6.291999999998021e-06, 2.9579999999973516e-06, 6.513999999999132e-06, 3.2910000000024864e-06, 2.51400000000207e-06, 3.2089999999970753e-06, 5.597000000003016e-06, 6.736000000000242e-06, 2.6249999999991558e-06, 5.403000000001046e-06, 7.068999999998438e-06, 7.069999999997911e-06, 6.290999999998548e-06, 5.139000000001226e-06, 7.555999999998841e-06, 8.403000000004046e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 8.208000000002602e-06, 8.666999999996927e-06, 8.555000000000368e-06, 9.083999999999481e-06, 5.180000000000462e-06, 3.07000000000085e-06, 5.526999999998228e-06, 7.500000000000562e-06, 2.4029999999980456e-06, 7.417000000002616e-06, 5.277999999997451e-06, 7.402000000003572e-06, 8.847999999998801e-06, 3.957999999998352e-06, 3.8050000000025563e-06, 4.930999999999686e-06, 8.582999999999508e-06, 6.07000000000385e-06, 4.179999999999462e-06, 8.402999999997107e-06, 2.4029999999980456e-06, 4.416999999999616e-06, 5.638000000002252e-06, 2.487000000002404e-06, 2.9579999999973516e-06, 5.958000000000352e-06, 6.417000000001616e-06, 2.847000000000266e-06, 3.847000000001266e-06], 'diff': [0, 3.069000000001376e-06, 4.1809999999989356e-06, 6.291999999998021e-06, 2.9579999999973516e-06, 6.513999999999132e-06, 3.2910000000024864e-06, 2.51400000000207e-06, 3.2089999999970753e-06, 5.597000000003016e-06, 6.736000000000242e-06, 2.6249999999991558e-06, 5.403000000001046e-06, 7.068999999998438e-06, 7.069999999997911e-06, 6.290999999998548e-06, 5.139000000001226e-06, 7.555999999998841e-06, 8.403000000004046e-06, 4.179999999999462e-06, 4.1809999999989356e-06, 8.208000000002602e-06, 8.666999999996927e-06, 8.555000000000368e-06, 9.083999999999481e-06, 5.180000000000462e-06, 3.07000000000085e-06, 5.526999999998228e-06, 7.500000000000562e-06, 2.4029999999980456e-06, 7.417000000002616e-06, 5.277999999997451e-06, 7.402000000003572e-06, 8.847999999998801e-06, 3.957999999998352e-06, 3.8050000000025563e-06, 4.930999999999686e-06, 8.582999999999508e-06, 6.07000000000385e-06, 4.179999999999462e-06, 8.402999999997107e-06, 2.4029999999980456e-06, 4.416999999999616e-06, 5.638000000002252e-06, 2.487000000002404e-06, 2.9579999999973516e-06, 5.958000000000352e-06, 6.417000000001616e-06, 2.847000000000266e-06, 3.847000000001266e-06], 'time': [0.037510764, 0.037513833, 0.037518014, 0.037524306, 0.037527264, 0.037533778, 0.037537069, 0.037539583, 0.037542792, 0.037548389, 0.037555125, 0.03755775, 0.037563153, 0.037570222, 0.037577292, 0.037583583, 0.037588722, 0.037596278, 0.037604681, 0.037608861, 0.037613042, 0.03762125, 0.037629917, 0.037638472, 0.037647556, 0.037652736, 0.037655806, 0.037661333, 0.037668833, 0.037671236, 0.037678653, 0.037683931, 0.037691333, 0.037700181, 0.037704139, 0.037707944, 0.037712875, 0.037721458, 0.037727528, 0.037731708, 0.037740111, 0.037742514, 0.037746931, 0.037752569, 0.037755056, 0.037758014, 0.037763972, 0.037770389, 0.037773236, 0.037777083]}</msg>
<status status="PASS" starttime="20201110 08:37:02.054" endtime="20201110 08:37:02.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.043" endtime="20201110 08:37:02.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.070" level="INFO">${RESULT} = [{'time': 0.037513833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.037524306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:02.063" endtime="20201110 08:37:02.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:02.089" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:02.072" endtime="20201110 08:37:02.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.099" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:02.097" endtime="20201110 08:37:02.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.105" level="INFO">VALUE: [3.069000000001376e-06, 6.291999999998021e-06, 6.513999999999132e-06, 2.51400000000207e-06, 5.597000000003016e-06, 2.6249999999991558e-06, 7.068999999998438e-06, 6.290999999998548e-06, 7.555999999998841e-06, 4.179999999999462e-06, 8.208000000002602e-06, 8.555000000000368e-06, 5.180000000000462e-06, 5.526999999998228e-06, 2.4029999999980456e-06, 5.277999999997451e-06, 8.847999999998801e-06, 3.8050000000025563e-06, 8.582999999999508e-06, 4.179999999999462e-06, 2.4029999999980456e-06, 5.638000000002252e-06, 2.9579999999973516e-06, 6.417000000001616e-06, 3.847000000001266e-06]</msg>
<status status="PASS" starttime="20201110 08:37:02.102" endtime="20201110 08:37:02.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.091" endtime="20201110 08:37:02.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.114" endtime="20201110 08:37:02.117"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.122" endtime="20201110 08:37:02.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.118" endtime="20201110 08:37:02.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.109" endtime="20201110 08:37:02.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:01.548" endtime="20201110 08:37:02.148"></status>
</kw>
<msg timestamp="20201110 08:37:02.149" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.169" endtime="20201110 08:37:02.182"></status>
</kw>
<msg timestamp="20201110 08:37:02.183" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.166" endtime="20201110 08:37:02.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.190" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.186" endtime="20201110 08:37:02.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.192" endtime="20201110 08:37:02.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.158" endtime="20201110 08:37:02.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.154" endtime="20201110 08:37:02.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.218" endtime="20201110 08:37:02.554"></status>
</kw>
<msg timestamp="20201110 08:37:02.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037419056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03742825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:02.213" endtime="20201110 08:37:02.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037419056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03742825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:02.561" endtime="20201110 08:37:02.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.574" endtime="20201110 08:37:02.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.206" endtime="20201110 08:37:02.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.200" endtime="20201110 08:37:02.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.590" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:02.588" endtime="20201110 08:37:02.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.599" level="INFO">VALUE: [{'time': 0.037419056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03742825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.037433417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.166999999993427e-06, 'source_diff': 5.166999999993427e-06}, {'time': 0.037437764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.347000000001766e-06, 'source_diff': 4.347000000001766e-06}, {'time': 0.037444903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.139000000003226e-06, 'source_diff': 7.139000000003226e-06}, {'time': 0.037447306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.037454597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.290999999999548e-06, 'source_diff': 7.290999999999548e-06}, {'time': 0.037460667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.07000000000385e-06, 'source_diff': 6.07000000000385e-06}, {'time': 0.03746775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.037473917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.167000000001366e-06, 'source_diff': 6.167000000001366e-06}, {'time': 0.037478208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2909999999965476e-06, 'source_diff': 4.2909999999965476e-06}, {'time': 0.037480625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4169999999976155e-06, 'source_diff': 2.4169999999976155e-06}, {'time': 0.037484236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.611000000000586e-06, 'source_diff': 3.611000000000586e-06}, {'time': 0.037488986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.75000000000475e-06, 'source_diff': 4.75000000000475e-06}, {'time': 0.037494597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.610999999995647e-06, 'source_diff': 5.610999999995647e-06}, {'time': 0.037500778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.037503625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.037511028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.403000000003046e-06, 'source_diff': 7.403000000003046e-06}, {'time': 0.037518569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.540999999999798e-06, 'source_diff': 7.540999999999798e-06}, {'time': 0.037522403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.83400000000117e-06, 'source_diff': 3.83400000000117e-06}, {'time': 0.037531472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.037540014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.541999999993333e-06, 'source_diff': 8.541999999993333e-06}, {'time': 0.037546375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.361000000003336e-06, 'source_diff': 6.361000000003336e-06}, {'time': 0.037554444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.037560667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2229999999996455e-06, 'source_diff': 6.2229999999996455e-06}, {'time': 0.037567375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.708000000001102e-06, 'source_diff': 6.708000000001102e-06}, {'time': 0.037576, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037581514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.037587611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.096999999996577e-06, 'source_diff': 6.096999999996577e-06}, {'time': 0.037590778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1669999999983656e-06, 'source_diff': 3.1669999999983656e-06}, {'time': 0.037596278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.037602139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.861000000002836e-06, 'source_diff': 5.861000000002836e-06}, {'time': 0.037609639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037612042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.037614222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1800000000044006e-06, 'source_diff': 2.1800000000044006e-06}, {'time': 0.037620292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.069999999996911e-06, 'source_diff': 6.069999999996911e-06}, {'time': 0.037625028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.735999999998242e-06, 'source_diff': 4.735999999998242e-06}, {'time': 0.037629986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.957999999999352e-06, 'source_diff': 4.957999999999352e-06}, {'time': 0.037635056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.037642236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.180000000002462e-06, 'source_diff': 7.180000000002462e-06}, {'time': 0.037647875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.638999999994787e-06, 'source_diff': 5.638999999994787e-06}, {'time': 0.037654931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.05600000000528e-06, 'source_diff': 7.05600000000528e-06}, {'time': 0.037660569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.6379999999953134e-06, 'source_diff': 5.6379999999953134e-06}, {'time': 0.037666292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7229999999991454e-06, 'source_diff': 5.7229999999991454e-06}, {'time': 0.037672486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194000000001032e-06, 'source_diff': 6.194000000001032e-06}, {'time': 0.037674875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.3889999999984757e-06, 'source_diff': 2.3889999999984757e-06}, {'time': 0.037680611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.736000000006181e-06, 'source_diff': 5.736000000006181e-06}, {'time': 0.037689458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.037695431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.9729999999993955e-06, 'source_diff': 5.9729999999993955e-06}, {'time': 0.037703069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.637999999997314e-06, 'source_diff': 7.637999999997314e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:02.593" endtime="20201110 08:37:02.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.582" endtime="20201110 08:37:02.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:02.635" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:02.605" endtime="20201110 08:37:02.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.645" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:02.642" endtime="20201110 08:37:02.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.652" level="INFO">VALUE: {'sourceeventsource_diff': [0, 9.194000000004032e-06, 5.166999999993427e-06, 4.347000000001766e-06, 7.139000000003226e-06, 2.4029999999980456e-06, 7.290999999999548e-06, 6.07000000000385e-06, 7.0829999999980076e-06, 6.167000000001366e-06, 4.2909999999965476e-06, 2.4169999999976155e-06, 3.611000000000586e-06, 4.75000000000475e-06, 5.610999999995647e-06, 6.181000000000936e-06, 2.847000000000266e-06, 7.403000000003046e-06, 7.540999999999798e-06, 3.83400000000117e-06, 9.069000000000438e-06, 8.541999999993333e-06, 6.361000000003336e-06, 8.068999999999438e-06, 6.2229999999996455e-06, 6.708000000001102e-06, 8.624999999998217e-06, 5.51400000000507e-06, 6.096999999996577e-06, 3.1669999999983656e-06, 5.499999999998562e-06, 5.861000000002836e-06, 7.500000000000562e-06, 2.4029999999980456e-06, 2.1800000000044006e-06, 6.069999999996911e-06, 4.735999999998242e-06, 4.957999999999352e-06, 5.07000000000285e-06, 7.180000000002462e-06, 5.638999999994787e-06, 7.05600000000528e-06, 5.6379999999953134e-06, 5.7229999999991454e-06, 6.194000000001032e-06, 2.3889999999984757e-06, 5.736000000006181e-06, 8.846999999999328e-06, 5.9729999999993955e-06, 7.637999999997314e-06], 'diff': [0, 9.194000000004032e-06, 5.166999999993427e-06, 4.347000000001766e-06, 7.139000000003226e-06, 2.4029999999980456e-06, 7.290999999999548e-06, 6.07000000000385e-06, 7.0829999999980076e-06, 6.167000000001366e-06, 4.2909999999965476e-06, 2.4169999999976155e-06, 3.611000000000586e-06, 4.75000000000475e-06, 5.610999999995647e-06, 6.181000000000936e-06, 2.847000000000266e-06, 7.403000000003046e-06, 7.540999999999798e-06, 3.83400000000117e-06, 9.069000000000438e-06, 8.541999999993333e-06, 6.361000000003336e-06, 8.068999999999438e-06, 6.2229999999996455e-06, 6.708000000001102e-06, 8.624999999998217e-06, 5.51400000000507e-06, 6.096999999996577e-06, 3.1669999999983656e-06, 5.499999999998562e-06, 5.861000000002836e-06, 7.500000000000562e-06, 2.4029999999980456e-06, 2.1800000000044006e-06, 6.069999999996911e-06, 4.735999999998242e-06, 4.957999999999352e-06, 5.07000000000285e-06, 7.180000000002462e-06, 5.638999999994787e-06, 7.05600000000528e-06, 5.6379999999953134e-06, 5.7229999999991454e-06, 6.194000000001032e-06, 2.3889999999984757e-06, 5.736000000006181e-06, 8.846999999999328e-06, 5.9729999999993955e-06, 7.637999999997314e-06], 'time': [0.037419056, 0.03742825, 0.037433417, 0.037437764, 0.037444903, 0.037447306, 0.037454597, 0.037460667, 0.03746775, 0.037473917, 0.037478208, 0.037480625, 0.037484236, 0.037488986, 0.037494597, 0.037500778, 0.037503625, 0.037511028, 0.037518569, 0.037522403, 0.037531472, 0.037540014, 0.037546375, 0.037554444, 0.037560667, 0.037567375, 0.037576, 0.037581514, 0.037587611, 0.037590778, 0.037596278, 0.037602139, 0.037609639, 0.037612042, 0.037614222, 0.037620292, 0.037625028, 0.037629986, 0.037635056, 0.037642236, 0.037647875, 0.037654931, 0.037660569, 0.037666292, 0.037672486, 0.037674875, 0.037680611, 0.037689458, 0.037695431, 0.037703069]}</msg>
<status status="PASS" starttime="20201110 08:37:02.647" endtime="20201110 08:37:02.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.637" endtime="20201110 08:37:02.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:02.664" level="INFO">${RESULT} = [{'time': 0.03742825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.037437764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:02.656" endtime="20201110 08:37:02.664"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:02.682" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:02.666" endtime="20201110 08:37:02.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.692" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:02.690" endtime="20201110 08:37:02.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.698" level="INFO">VALUE: [9.194000000004032e-06, 4.347000000001766e-06, 2.4029999999980456e-06, 6.07000000000385e-06, 6.167000000001366e-06, 2.4169999999976155e-06, 4.75000000000475e-06, 6.181000000000936e-06, 7.403000000003046e-06, 3.83400000000117e-06, 8.541999999993333e-06, 8.068999999999438e-06, 6.708000000001102e-06, 5.51400000000507e-06, 3.1669999999983656e-06, 5.861000000002836e-06, 2.4029999999980456e-06, 6.069999999996911e-06, 4.957999999999352e-06, 7.180000000002462e-06, 7.05600000000528e-06, 5.7229999999991454e-06, 2.3889999999984757e-06, 8.846999999999328e-06, 7.637999999997314e-06]</msg>
<status status="PASS" starttime="20201110 08:37:02.695" endtime="20201110 08:37:02.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.684" endtime="20201110 08:37:02.701"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.707" endtime="20201110 08:37:02.710"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:02.716" endtime="20201110 08:37:02.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.711" endtime="20201110 08:37:02.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.702" endtime="20201110 08:37:02.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.150" endtime="20201110 08:37:02.742"></status>
</kw>
<msg timestamp="20201110 08:37:02.742" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.763" endtime="20201110 08:37:02.775"></status>
</kw>
<msg timestamp="20201110 08:37:02.776" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.759" endtime="20201110 08:37:02.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:02.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:02.779" endtime="20201110 08:37:02.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.785" endtime="20201110 08:37:02.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.752" endtime="20201110 08:37:02.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.747" endtime="20201110 08:37:02.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:02.810" endtime="20201110 08:37:03.127"></status>
</kw>
<msg timestamp="20201110 08:37:03.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037324514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037329347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:02.807" endtime="20201110 08:37:03.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037324514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037329347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.134" endtime="20201110 08:37:03.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.147" endtime="20201110 08:37:03.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.798" endtime="20201110 08:37:03.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.793" endtime="20201110 08:37:03.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.163" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:03.161" endtime="20201110 08:37:03.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.172" level="INFO">VALUE: [{'time': 0.037324514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037329347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999995757e-06, 'source_diff': 4.832999999995757e-06}, {'time': 0.037334875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.037344056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.037348806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037353639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.037356139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.037362667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.52800000000564e-06, 'source_diff': 6.52800000000564e-06}, {'time': 0.037371625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.957999999996413e-06, 'source_diff': 8.957999999996413e-06}, {'time': 0.037378694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.037384194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5000000000055005e-06, 'source_diff': 5.5000000000055005e-06}, {'time': 0.037391486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.037395889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.037404958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.037408472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5139999999961313e-06, 'source_diff': 3.5139999999961313e-06}, {'time': 0.037411389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9170000000050544e-06, 'source_diff': 2.9170000000050544e-06}, {'time': 0.037414389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9999999999960614e-06, 'source_diff': 2.9999999999960614e-06}, {'time': 0.037417806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.037421639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.833000000001696e-06, 'source_diff': 3.833000000001696e-06}, {'time': 0.037425931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.037431125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.037439736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.610999999998648e-06, 'source_diff': 8.610999999998648e-06}, {'time': 0.037442264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.52800000000164e-06, 'source_diff': 2.52800000000164e-06}, {'time': 0.037447319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0549999999968676e-06, 'source_diff': 5.0549999999968676e-06}, {'time': 0.037455736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.417000000003616e-06, 'source_diff': 8.417000000003616e-06}, {'time': 0.037462819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.0829999999980076e-06, 'source_diff': 7.0829999999980076e-06}, {'time': 0.037470319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037474764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.037477236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4719999999964215e-06, 'source_diff': 2.4719999999964215e-06}, {'time': 0.037486083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.847000000006267e-06, 'source_diff': 8.847000000006267e-06}, {'time': 0.037494722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.037501014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.037505083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.037508361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2779999999954512e-06, 'source_diff': 3.2779999999954512e-06}, {'time': 0.037511542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1810000000048744e-06, 'source_diff': 3.1810000000048744e-06}, {'time': 0.037517861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.318999999997688e-06, 'source_diff': 6.318999999997688e-06}, {'time': 0.037526236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.037529306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.037536944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.638000000004252e-06, 'source_diff': 7.638000000004252e-06}, {'time': 0.037545569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.037553528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.037559819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.037567028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.209000000001076e-06, 'source_diff': 7.209000000001076e-06}, {'time': 0.037570722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.693999999998532e-06, 'source_diff': 3.693999999998532e-06}, {'time': 0.037576472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.749999999998812e-06, 'source_diff': 5.749999999998812e-06}, {'time': 0.037585319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.037590278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.037597014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037599639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.037608444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.805000000000618e-06, 'source_diff': 8.805000000000618e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:03.166" endtime="20201110 08:37:03.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.155" endtime="20201110 08:37:03.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:03.208" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:03.177" endtime="20201110 08:37:03.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.219" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:03.217" endtime="20201110 08:37:03.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.228" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.832999999995757e-06, 5.527999999997701e-06, 9.181000000003936e-06, 4.7499999999978115e-06, 4.833000000002696e-06, 2.4999999999955613e-06, 6.52800000000564e-06, 8.957999999996413e-06, 7.068999999998438e-06, 5.5000000000055005e-06, 7.2919999999990215e-06, 4.403000000000046e-06, 9.069000000000438e-06, 3.5139999999961313e-06, 2.9170000000050544e-06, 2.9999999999960614e-06, 3.4169999999986156e-06, 3.833000000001696e-06, 4.29200000000296e-06, 5.194000000000032e-06, 8.610999999998648e-06, 2.52800000000164e-06, 5.0549999999968676e-06, 8.417000000003616e-06, 7.0829999999980076e-06, 7.500000000000562e-06, 4.4449999999987555e-06, 2.4719999999964215e-06, 8.847000000006267e-06, 8.638999999997787e-06, 6.291999999998021e-06, 4.069000000002376e-06, 3.2779999999954512e-06, 3.1810000000048744e-06, 6.318999999997688e-06, 8.374999999997967e-06, 3.07000000000085e-06, 7.638000000004252e-06, 8.624999999998217e-06, 7.959000000001826e-06, 6.290999999998548e-06, 7.209000000001076e-06, 3.693999999998532e-06, 5.749999999998812e-06, 8.846999999999328e-06, 4.9589999999988255e-06, 6.736000000000242e-06, 2.6249999999991558e-06, 8.805000000000618e-06], 'diff': [0, 4.832999999995757e-06, 5.527999999997701e-06, 9.181000000003936e-06, 4.7499999999978115e-06, 4.833000000002696e-06, 2.4999999999955613e-06, 6.52800000000564e-06, 8.957999999996413e-06, 7.068999999998438e-06, 5.5000000000055005e-06, 7.2919999999990215e-06, 4.403000000000046e-06, 9.069000000000438e-06, 3.5139999999961313e-06, 2.9170000000050544e-06, 2.9999999999960614e-06, 3.4169999999986156e-06, 3.833000000001696e-06, 4.29200000000296e-06, 5.194000000000032e-06, 8.610999999998648e-06, 2.52800000000164e-06, 5.0549999999968676e-06, 8.417000000003616e-06, 7.0829999999980076e-06, 7.500000000000562e-06, 4.4449999999987555e-06, 2.4719999999964215e-06, 8.847000000006267e-06, 8.638999999997787e-06, 6.291999999998021e-06, 4.069000000002376e-06, 3.2779999999954512e-06, 3.1810000000048744e-06, 6.318999999997688e-06, 8.374999999997967e-06, 3.07000000000085e-06, 7.638000000004252e-06, 8.624999999998217e-06, 7.959000000001826e-06, 6.290999999998548e-06, 7.209000000001076e-06, 3.693999999998532e-06, 5.749999999998812e-06, 8.846999999999328e-06, 4.9589999999988255e-06, 6.736000000000242e-06, 2.6249999999991558e-06, 8.805000000000618e-06], 'time': [0.037324514, 0.037329347, 0.037334875, 0.037344056, 0.037348806, 0.037353639, 0.037356139, 0.037362667, 0.037371625, 0.037378694, 0.037384194, 0.037391486, 0.037395889, 0.037404958, 0.037408472, 0.037411389, 0.037414389, 0.037417806, 0.037421639, 0.037425931, 0.037431125, 0.037439736, 0.037442264, 0.037447319, 0.037455736, 0.037462819, 0.037470319, 0.037474764, 0.037477236, 0.037486083, 0.037494722, 0.037501014, 0.037505083, 0.037508361, 0.037511542, 0.037517861, 0.037526236, 0.037529306, 0.037536944, 0.037545569, 0.037553528, 0.037559819, 0.037567028, 0.037570722, 0.037576472, 0.037585319, 0.037590278, 0.037597014, 0.037599639, 0.037608444]}</msg>
<status status="PASS" starttime="20201110 08:37:03.222" endtime="20201110 08:37:03.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.210" endtime="20201110 08:37:03.231"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.242" level="INFO">${RESULT} = [{'time': 0.037329347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.832999999995757e-06, 'source_diff': 4.832999999995757e-06}, {'time': 0.037344056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:03.233" endtime="20201110 08:37:03.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:03.261" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:03.244" endtime="20201110 08:37:03.262"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.272" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:03.270" endtime="20201110 08:37:03.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.277" level="INFO">VALUE: [4.832999999995757e-06, 9.181000000003936e-06, 4.833000000002696e-06, 6.52800000000564e-06, 7.068999999998438e-06, 7.2919999999990215e-06, 9.069000000000438e-06, 2.9170000000050544e-06, 3.4169999999986156e-06, 4.29200000000296e-06, 8.610999999998648e-06, 5.0549999999968676e-06, 7.0829999999980076e-06, 4.4449999999987555e-06, 8.847000000006267e-06, 6.291999999998021e-06, 3.2779999999954512e-06, 6.318999999997688e-06, 3.07000000000085e-06, 8.624999999998217e-06, 6.290999999998548e-06, 3.693999999998532e-06, 8.846999999999328e-06, 6.736000000000242e-06, 8.805000000000618e-06]</msg>
<status status="PASS" starttime="20201110 08:37:03.274" endtime="20201110 08:37:03.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.263" endtime="20201110 08:37:03.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.287" endtime="20201110 08:37:03.290"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.295" endtime="20201110 08:37:03.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.291" endtime="20201110 08:37:03.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.282" endtime="20201110 08:37:03.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:02.743" endtime="20201110 08:37:03.321"></status>
</kw>
<msg timestamp="20201110 08:37:03.322" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.342" endtime="20201110 08:37:03.355"></status>
</kw>
<msg timestamp="20201110 08:37:03.357" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.338" endtime="20201110 08:37:03.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.363" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.359" endtime="20201110 08:37:03.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.366" endtime="20201110 08:37:03.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.331" endtime="20201110 08:37:03.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.326" endtime="20201110 08:37:03.373"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.393" endtime="20201110 08:37:03.708"></status>
</kw>
<msg timestamp="20201110 08:37:03.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037325708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037327889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.389" endtime="20201110 08:37:03.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037325708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037327889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.715" endtime="20201110 08:37:03.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.731" endtime="20201110 08:37:03.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.380" endtime="20201110 08:37:03.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.375" endtime="20201110 08:37:03.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.748" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:03.746" endtime="20201110 08:37:03.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.756" level="INFO">VALUE: [{'time': 0.037325708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037327889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1810000000038743e-06, 'source_diff': 2.1810000000038743e-06}, {'time': 0.037337097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.207999999996663e-06, 'source_diff': 9.207999999996663e-06}, {'time': 0.037341042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.037348319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.037354417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.09800000000299e-06, 'source_diff': 6.09800000000299e-06}, {'time': 0.037359569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.152000000001322e-06, 'source_diff': 5.152000000001322e-06}, {'time': 0.03736775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.037376542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.792000000000522e-06, 'source_diff': 8.792000000000522e-06}, {'time': 0.037384667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.125000000004656e-06, 'source_diff': 8.125000000004656e-06}, {'time': 0.037387736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0689999999944373e-06, 'source_diff': 3.0689999999944373e-06}, {'time': 0.037391278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.54200000000221e-06, 'source_diff': 3.54200000000221e-06}, {'time': 0.037396986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.708000000000102e-06, 'source_diff': 5.708000000000102e-06}, {'time': 0.037400278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.037407681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.037411972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.0374195, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}, {'time': 0.037427, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.037429306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.037436042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.037443167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.124999999996717e-06, 'source_diff': 7.124999999996717e-06}, {'time': 0.037446306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.037449361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0550000000018063e-06, 'source_diff': 3.0550000000018063e-06}, {'time': 0.037452542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1809999999979355e-06, 'source_diff': 3.1809999999979355e-06}, {'time': 0.037457306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.76400000000432e-06, 'source_diff': 4.76400000000432e-06}, {'time': 0.037462236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.037466194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.037468417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.222999999995645e-06, 'source_diff': 2.222999999995645e-06}, {'time': 0.037476222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.804999999999618e-06, 'source_diff': 7.804999999999618e-06}, {'time': 0.037479069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.037487708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.639000000004726e-06, 'source_diff': 8.639000000004726e-06}, {'time': 0.037495653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.944999999995317e-06, 'source_diff': 7.944999999995317e-06}, {'time': 0.037504847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.194000000004032e-06, 'source_diff': 9.194000000004032e-06}, {'time': 0.037512931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.083999999998481e-06, 'source_diff': 8.083999999998481e-06}, {'time': 0.03752175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.819000000000188e-06, 'source_diff': 8.819000000000188e-06}, {'time': 0.037524819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.037527667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.037533972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.304999999998118e-06, 'source_diff': 6.304999999998118e-06}, {'time': 0.037536819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.037539569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7500000000027502e-06, 'source_diff': 2.7500000000027502e-06}, {'time': 0.037543167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5980000000004897e-06, 'source_diff': 3.5980000000004897e-06}, {'time': 0.037548806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.638999999994787e-06, 'source_diff': 5.638999999994787e-06}, {'time': 0.037557083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.277000000000978e-06, 'source_diff': 8.277000000000978e-06}, {'time': 0.037561944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.037565083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1389999999992257e-06, 'source_diff': 3.1389999999992257e-06}, {'time': 0.037570542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4589999999993255e-06, 'source_diff': 5.4589999999993255e-06}, {'time': 0.037574833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.037581556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7230000000001455e-06, 'source_diff': 6.7230000000001455e-06}, {'time': 0.037587403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.037591694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:03.750" endtime="20201110 08:37:03.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.740" endtime="20201110 08:37:03.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:03.793" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:03.762" endtime="20201110 08:37:03.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.803" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:03.800" endtime="20201110 08:37:03.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.810" level="INFO">VALUE: {'sourceeventsource_diff': [0, 2.1810000000038743e-06, 9.207999999996663e-06, 3.9449999999982555e-06, 7.276999999999978e-06, 6.09800000000299e-06, 5.152000000001322e-06, 8.180999999995997e-06, 8.792000000000522e-06, 8.125000000004656e-06, 3.0689999999944373e-06, 3.54200000000221e-06, 5.708000000000102e-06, 3.29200000000196e-06, 7.402999999996107e-06, 4.2910000000034865e-06, 7.527999999999702e-06, 7.500000000000562e-06, 2.30600000000053e-06, 6.736000000000242e-06, 7.124999999996717e-06, 3.1389999999992257e-06, 3.0550000000018063e-06, 3.1809999999979355e-06, 4.76400000000432e-06, 4.930000000000212e-06, 3.957999999998352e-06, 2.222999999995645e-06, 7.804999999999618e-06, 2.847000000000266e-06, 8.639000000004726e-06, 7.944999999995317e-06, 9.194000000004032e-06, 8.083999999998481e-06, 8.819000000000188e-06, 3.069000000001376e-06, 2.8479999999997396e-06, 6.304999999998118e-06, 2.847000000000266e-06, 2.7500000000027502e-06, 3.5980000000004897e-06, 5.638999999994787e-06, 8.277000000000978e-06, 4.861000000001836e-06, 3.1389999999992257e-06, 5.4589999999993255e-06, 4.2910000000034865e-06, 6.7230000000001455e-06, 5.846999999996327e-06, 4.2910000000034865e-06], 'diff': [0, 2.1810000000038743e-06, 9.207999999996663e-06, 3.9449999999982555e-06, 7.276999999999978e-06, 6.09800000000299e-06, 5.152000000001322e-06, 8.180999999995997e-06, 8.792000000000522e-06, 8.125000000004656e-06, 3.0689999999944373e-06, 3.54200000000221e-06, 5.708000000000102e-06, 3.29200000000196e-06, 7.402999999996107e-06, 4.2910000000034865e-06, 7.527999999999702e-06, 7.500000000000562e-06, 2.30600000000053e-06, 6.736000000000242e-06, 7.124999999996717e-06, 3.1389999999992257e-06, 3.0550000000018063e-06, 3.1809999999979355e-06, 4.76400000000432e-06, 4.930000000000212e-06, 3.957999999998352e-06, 2.222999999995645e-06, 7.804999999999618e-06, 2.847000000000266e-06, 8.639000000004726e-06, 7.944999999995317e-06, 9.194000000004032e-06, 8.083999999998481e-06, 8.819000000000188e-06, 3.069000000001376e-06, 2.8479999999997396e-06, 6.304999999998118e-06, 2.847000000000266e-06, 2.7500000000027502e-06, 3.5980000000004897e-06, 5.638999999994787e-06, 8.277000000000978e-06, 4.861000000001836e-06, 3.1389999999992257e-06, 5.4589999999993255e-06, 4.2910000000034865e-06, 6.7230000000001455e-06, 5.846999999996327e-06, 4.2910000000034865e-06], 'time': [0.037325708, 0.037327889, 0.037337097, 0.037341042, 0.037348319, 0.037354417, 0.037359569, 0.03736775, 0.037376542, 0.037384667, 0.037387736, 0.037391278, 0.037396986, 0.037400278, 0.037407681, 0.037411972, 0.0374195, 0.037427, 0.037429306, 0.037436042, 0.037443167, 0.037446306, 0.037449361, 0.037452542, 0.037457306, 0.037462236, 0.037466194, 0.037468417, 0.037476222, 0.037479069, 0.037487708, 0.037495653, 0.037504847, 0.037512931, 0.03752175, 0.037524819, 0.037527667, 0.037533972, 0.037536819, 0.037539569, 0.037543167, 0.037548806, 0.037557083, 0.037561944, 0.037565083, 0.037570542, 0.037574833, 0.037581556, 0.037587403, 0.037591694]}</msg>
<status status="PASS" starttime="20201110 08:37:03.805" endtime="20201110 08:37:03.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.795" endtime="20201110 08:37:03.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:03.822" level="INFO">${RESULT} = [{'time': 0.037327889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1810000000038743e-06, 'source_diff': 2.1810000000038743e-06}, {'time': 0.037341042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:03.815" endtime="20201110 08:37:03.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:03.841" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:03.824" endtime="20201110 08:37:03.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.851" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:03.849" endtime="20201110 08:37:03.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.856" level="INFO">VALUE: [2.1810000000038743e-06, 3.9449999999982555e-06, 6.09800000000299e-06, 8.180999999995997e-06, 8.125000000004656e-06, 3.54200000000221e-06, 3.29200000000196e-06, 4.2910000000034865e-06, 7.500000000000562e-06, 6.736000000000242e-06, 3.1389999999992257e-06, 3.1809999999979355e-06, 4.930000000000212e-06, 2.222999999995645e-06, 2.847000000000266e-06, 7.944999999995317e-06, 8.083999999998481e-06, 3.069000000001376e-06, 6.304999999998118e-06, 2.7500000000027502e-06, 5.638999999994787e-06, 4.861000000001836e-06, 5.4589999999993255e-06, 6.7230000000001455e-06, 4.2910000000034865e-06]</msg>
<status status="PASS" starttime="20201110 08:37:03.853" endtime="20201110 08:37:03.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.842" endtime="20201110 08:37:03.859"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.866" endtime="20201110 08:37:03.869"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:03.874" endtime="20201110 08:37:03.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.870" endtime="20201110 08:37:03.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.861" endtime="20201110 08:37:03.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.323" endtime="20201110 08:37:03.900"></status>
</kw>
<msg timestamp="20201110 08:37:03.900" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.921" endtime="20201110 08:37:03.934"></status>
</kw>
<msg timestamp="20201110 08:37:03.936" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.917" endtime="20201110 08:37:03.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:03.942" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:03.938" endtime="20201110 08:37:03.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.944" endtime="20201110 08:37:03.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.910" endtime="20201110 08:37:03.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.905" endtime="20201110 08:37:03.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:03.970" endtime="20201110 08:37:04.284"></status>
</kw>
<msg timestamp="20201110 08:37:04.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037325458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:03.967" endtime="20201110 08:37:04.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037325458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:04.291" endtime="20201110 08:37:04.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.304" endtime="20201110 08:37:04.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.959" endtime="20201110 08:37:04.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.952" endtime="20201110 08:37:04.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.321" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:04.319" endtime="20201110 08:37:04.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.331" level="INFO">VALUE: [{'time': 0.037322278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037325458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.037330542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.08400000000242e-06, 'source_diff': 5.08400000000242e-06}, {'time': 0.037335153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.037340444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.290999999997548e-06, 'source_diff': 5.290999999997548e-06}, {'time': 0.037343417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.972999999996395e-06, 'source_diff': 2.972999999996395e-06}, {'time': 0.037350486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.0690000000053765e-06, 'source_diff': 7.0690000000053765e-06}, {'time': 0.037354778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.291999999996021e-06, 'source_diff': 4.291999999996021e-06}, {'time': 0.037360625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.037366694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.037375875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.037378722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.037384917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.194999999993567e-06, 'source_diff': 6.194999999993567e-06}, {'time': 0.037387875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9580000000042905e-06, 'source_diff': 2.9580000000042905e-06}, {'time': 0.037393722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.037395958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2360000000026803e-06, 'source_diff': 2.2360000000026803e-06}, {'time': 0.037400181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.222999999997645e-06, 'source_diff': 4.222999999997645e-06}, {'time': 0.037403917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7360000000041804e-06, 'source_diff': 3.7360000000041804e-06}, {'time': 0.037408889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.0374145, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.037421903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.402999999996107e-06, 'source_diff': 7.402999999996107e-06}, {'time': 0.037430306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.037432931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.037440889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999995413e-06, 'source_diff': 7.957999999995413e-06}, {'time': 0.037447403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.513999999999132e-06, 'source_diff': 6.513999999999132e-06}, {'time': 0.037455139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.037458319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.037462167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.84800000000074e-06, 'source_diff': 3.84800000000074e-06}, {'time': 0.037465681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.5140000000030702e-06, 'source_diff': 3.5140000000030702e-06}, {'time': 0.037468194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5130000000025965e-06, 'source_diff': 2.5130000000025965e-06}, {'time': 0.037473278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.083999999995481e-06, 'source_diff': 5.083999999995481e-06}, {'time': 0.037482014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.736000000002242e-06, 'source_diff': 8.736000000002242e-06}, {'time': 0.037486083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.037489708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.624999999993217e-06, 'source_diff': 3.624999999993217e-06}, {'time': 0.037496778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.037504417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.638999999996787e-06, 'source_diff': 7.638999999996787e-06}, {'time': 0.037508583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.165999999999892e-06, 'source_diff': 4.165999999999892e-06}, {'time': 0.037513208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.0375175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.037526472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.971999999995983e-06, 'source_diff': 8.971999999995983e-06}, {'time': 0.037534431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.037541264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.037543444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1800000000044006e-06, 'source_diff': 2.1800000000044006e-06}, {'time': 0.037545625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1809999999969354e-06, 'source_diff': 2.1809999999969354e-06}, {'time': 0.037552583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.037560875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037568944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.068999999999438e-06, 'source_diff': 8.068999999999438e-06}, {'time': 0.037575569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.03757925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.6809999999984355e-06, 'source_diff': 3.6809999999984355e-06}, {'time': 0.037585278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:04.324" endtime="20201110 08:37:04.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.312" endtime="20201110 08:37:04.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:04.370" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:04.338" endtime="20201110 08:37:04.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.380" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:04.377" endtime="20201110 08:37:04.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.387" level="INFO">VALUE: {'sourceeventsource_diff': [0, 3.179999999998462e-06, 5.08400000000242e-06, 4.611000000001586e-06, 5.290999999997548e-06, 2.972999999996395e-06, 7.0690000000053765e-06, 4.291999999996021e-06, 5.847000000003266e-06, 6.0689999999974376e-06, 9.181000000003936e-06, 2.847000000000266e-06, 6.194999999993567e-06, 2.9580000000042905e-06, 5.846999999996327e-06, 2.2360000000026803e-06, 4.222999999997645e-06, 3.7360000000041804e-06, 4.971999999998922e-06, 5.611000000002586e-06, 7.402999999996107e-06, 8.403000000004046e-06, 2.6249999999991558e-06, 7.957999999995413e-06, 6.513999999999132e-06, 7.736000000001242e-06, 3.179999999998462e-06, 3.84800000000074e-06, 3.5140000000030702e-06, 2.5130000000025965e-06, 5.083999999995481e-06, 8.736000000002242e-06, 4.069000000002376e-06, 3.624999999993217e-06, 7.07000000000485e-06, 7.638999999996787e-06, 4.165999999999892e-06, 4.625000000001156e-06, 4.29200000000296e-06, 8.971999999995983e-06, 7.959000000001826e-06, 6.8329999999977575e-06, 2.1800000000044006e-06, 2.1809999999969354e-06, 6.958000000001352e-06, 8.292000000000022e-06, 8.068999999999438e-06, 6.625000000003156e-06, 3.6809999999984355e-06, 6.0279999999982015e-06], 'diff': [0, 3.179999999998462e-06, 5.08400000000242e-06, 4.611000000001586e-06, 5.290999999997548e-06, 2.972999999996395e-06, 7.0690000000053765e-06, 4.291999999996021e-06, 5.847000000003266e-06, 6.0689999999974376e-06, 9.181000000003936e-06, 2.847000000000266e-06, 6.194999999993567e-06, 2.9580000000042905e-06, 5.846999999996327e-06, 2.2360000000026803e-06, 4.222999999997645e-06, 3.7360000000041804e-06, 4.971999999998922e-06, 5.611000000002586e-06, 7.402999999996107e-06, 8.403000000004046e-06, 2.6249999999991558e-06, 7.957999999995413e-06, 6.513999999999132e-06, 7.736000000001242e-06, 3.179999999998462e-06, 3.84800000000074e-06, 3.5140000000030702e-06, 2.5130000000025965e-06, 5.083999999995481e-06, 8.736000000002242e-06, 4.069000000002376e-06, 3.624999999993217e-06, 7.07000000000485e-06, 7.638999999996787e-06, 4.165999999999892e-06, 4.625000000001156e-06, 4.29200000000296e-06, 8.971999999995983e-06, 7.959000000001826e-06, 6.8329999999977575e-06, 2.1800000000044006e-06, 2.1809999999969354e-06, 6.958000000001352e-06, 8.292000000000022e-06, 8.068999999999438e-06, 6.625000000003156e-06, 3.6809999999984355e-06, 6.0279999999982015e-06], 'time': [0.037322278, 0.037325458, 0.037330542, 0.037335153, 0.037340444, 0.037343417, 0.037350486, 0.037354778, 0.037360625, 0.037366694, 0.037375875, 0.037378722, 0.037384917, 0.037387875, 0.037393722, 0.037395958, 0.037400181, 0.037403917, 0.037408889, 0.0374145, 0.037421903, 0.037430306, 0.037432931, 0.037440889, 0.037447403, 0.037455139, 0.037458319, 0.037462167, 0.037465681, 0.037468194, 0.037473278, 0.037482014, 0.037486083, 0.037489708, 0.037496778, 0.037504417, 0.037508583, 0.037513208, 0.0375175, 0.037526472, 0.037534431, 0.037541264, 0.037543444, 0.037545625, 0.037552583, 0.037560875, 0.037568944, 0.037575569, 0.03757925, 0.037585278]}</msg>
<status status="PASS" starttime="20201110 08:37:04.382" endtime="20201110 08:37:04.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.372" endtime="20201110 08:37:04.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:04.399" level="INFO">${RESULT} = [{'time': 0.037325458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.179999999998462e-06, 'source_diff': 3.179999999998462e-06}, {'time': 0.037335153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.391" endtime="20201110 08:37:04.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:04.418" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:04.401" endtime="20201110 08:37:04.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.429" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:04.427" endtime="20201110 08:37:04.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.435" level="INFO">VALUE: [3.179999999998462e-06, 4.611000000001586e-06, 2.972999999996395e-06, 4.291999999996021e-06, 6.0689999999974376e-06, 2.847000000000266e-06, 2.9580000000042905e-06, 2.2360000000026803e-06, 3.7360000000041804e-06, 5.611000000002586e-06, 8.403000000004046e-06, 7.957999999995413e-06, 7.736000000001242e-06, 3.84800000000074e-06, 2.5130000000025965e-06, 8.736000000002242e-06, 3.624999999993217e-06, 7.638999999996787e-06, 4.625000000001156e-06, 8.971999999995983e-06, 6.8329999999977575e-06, 2.1809999999969354e-06, 8.292000000000022e-06, 6.625000000003156e-06, 6.0279999999982015e-06]</msg>
<status status="PASS" starttime="20201110 08:37:04.432" endtime="20201110 08:37:04.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.420" endtime="20201110 08:37:04.438"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.444" endtime="20201110 08:37:04.447"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:04.453" endtime="20201110 08:37:04.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.448" endtime="20201110 08:37:04.476"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.440" endtime="20201110 08:37:04.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:03.902" endtime="20201110 08:37:04.479"></status>
</kw>
<msg timestamp="20201110 08:37:04.479" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.499" endtime="20201110 08:37:04.512"></status>
</kw>
<msg timestamp="20201110 08:37:04.513" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.496" endtime="20201110 08:37:04.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.524" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:04.519" endtime="20201110 08:37:04.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.527" endtime="20201110 08:37:04.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.488" endtime="20201110 08:37:04.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.484" endtime="20201110 08:37:04.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.554" endtime="20201110 08:37:04.886"></status>
</kw>
<msg timestamp="20201110 08:37:04.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158181, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:37:04.551" endtime="20201110 08:37:04.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158181, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:37:04.893" endtime="20201110 08:37:04.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:04.905" endtime="20201110 08:37:04.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.543" endtime="20201110 08:37:04.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.538" endtime="20201110 08:37:04.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.922" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:04.920" endtime="20201110 08:37:04.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.932" level="INFO">VALUE: [{'time': 0.03715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037158181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.037164861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.680000000001962e-06, 'source_diff': 6.680000000001962e-06}, {'time': 0.037168319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4579999999978517e-06, 'source_diff': 3.4579999999978517e-06}, {'time': 0.037171625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.30600000000153e-06, 'source_diff': 3.30600000000153e-06}, {'time': 0.037176347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.037180861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.51400000000407e-06, 'source_diff': 4.51400000000407e-06}, {'time': 0.037189153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037197556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.037200639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.083000000000946e-06, 'source_diff': 3.083000000000946e-06}, {'time': 0.037205028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.037211097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.037216389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.29200000000396e-06, 'source_diff': 5.29200000000396e-06}, {'time': 0.037220792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.037223306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5139999999951312e-06, 'source_diff': 2.5139999999951312e-06}, {'time': 0.037226375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.037230681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.037238083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.4019999999966335e-06, 'source_diff': 7.4019999999966335e-06}, {'time': 0.037245931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.84800000000474e-06, 'source_diff': 7.84800000000474e-06}, {'time': 0.037253792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.860999999997897e-06, 'source_diff': 7.860999999997897e-06}, {'time': 0.037257292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4999999999965614e-06, 'source_diff': 3.4999999999965614e-06}, {'time': 0.037261583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.2910000000034865e-06, 'source_diff': 4.2910000000034865e-06}, {'time': 0.037265, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.037269389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.389000000000476e-06, 'source_diff': 4.389000000000476e-06}, {'time': 0.037275917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.03728075, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.037289042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.292000000000022e-06, 'source_diff': 8.292000000000022e-06}, {'time': 0.037292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9579999999973516e-06, 'source_diff': 2.9579999999973516e-06}, {'time': 0.037301181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.181000000003936e-06, 'source_diff': 9.181000000003936e-06}, {'time': 0.037309486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305000000000118e-06, 'source_diff': 8.305000000000118e-06}, {'time': 0.037314208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.721999999998672e-06, 'source_diff': 4.721999999998672e-06}, {'time': 0.037319056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.84800000000174e-06, 'source_diff': 4.84800000000174e-06}, {'time': 0.037326792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.735999999994303e-06, 'source_diff': 7.735999999994303e-06}, {'time': 0.037329083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.037333528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.4449999999987555e-06, 'source_diff': 4.4449999999987555e-06}, {'time': 0.037338375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.037340528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1529999999977956e-06, 'source_diff': 2.1529999999977956e-06}, {'time': 0.03734825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.722000000001672e-06, 'source_diff': 7.722000000001672e-06}, {'time': 0.037355319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.068999999998438e-06, 'source_diff': 7.068999999998438e-06}, {'time': 0.037358389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.037365903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.037373875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.972000000001922e-06, 'source_diff': 7.972000000001922e-06}, {'time': 0.037380514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.037383014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.037389639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.037396486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.037405333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.846999999999328e-06, 'source_diff': 8.846999999999328e-06}, {'time': 0.037410625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.29200000000396e-06, 'source_diff': 5.29200000000396e-06}, {'time': 0.037415375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.037420778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:04.924" endtime="20201110 08:37:04.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.913" endtime="20201110 08:37:04.937"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:04.972" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:04.940" endtime="20201110 08:37:04.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.981" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:04.979" endtime="20201110 08:37:04.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:04.989" level="INFO">VALUE: {'sourceeventsource_diff': [0, 8.180999999995997e-06, 6.680000000001962e-06, 3.4579999999978517e-06, 3.30600000000153e-06, 4.721999999998672e-06, 4.51400000000407e-06, 8.292000000000022e-06, 8.402999999997107e-06, 3.083000000000946e-06, 4.389000000000476e-06, 6.0689999999974376e-06, 5.29200000000396e-06, 4.403000000000046e-06, 2.5139999999951312e-06, 3.069000000001376e-06, 4.30600000000253e-06, 7.4019999999966335e-06, 7.84800000000474e-06, 7.860999999997897e-06, 3.4999999999965614e-06, 4.2910000000034865e-06, 3.4169999999986156e-06, 4.389000000000476e-06, 6.5279999999987015e-06, 4.833000000002696e-06, 8.292000000000022e-06, 2.9579999999973516e-06, 9.181000000003936e-06, 8.305000000000118e-06, 4.721999999998672e-06, 4.84800000000174e-06, 7.735999999994303e-06, 2.2910000000014863e-06, 4.4449999999987555e-06, 4.847000000002266e-06, 2.1529999999977956e-06, 7.722000000001672e-06, 7.068999999998438e-06, 3.07000000000085e-06, 7.514000000000132e-06, 7.972000000001922e-06, 6.638999999995787e-06, 2.5000000000025002e-06, 6.625000000003156e-06, 6.8469999999973274e-06, 8.846999999999328e-06, 5.29200000000396e-06, 4.7499999999978115e-06, 5.403000000001046e-06], 'diff': [0, 8.180999999995997e-06, 6.680000000001962e-06, 3.4579999999978517e-06, 3.30600000000153e-06, 4.721999999998672e-06, 4.51400000000407e-06, 8.292000000000022e-06, 8.402999999997107e-06, 3.083000000000946e-06, 4.389000000000476e-06, 6.0689999999974376e-06, 5.29200000000396e-06, 4.403000000000046e-06, 2.5139999999951312e-06, 3.069000000001376e-06, 4.30600000000253e-06, 7.4019999999966335e-06, 7.84800000000474e-06, 7.860999999997897e-06, 3.4999999999965614e-06, 4.2910000000034865e-06, 3.4169999999986156e-06, 4.389000000000476e-06, 6.5279999999987015e-06, 4.833000000002696e-06, 8.292000000000022e-06, 2.9579999999973516e-06, 9.181000000003936e-06, 8.305000000000118e-06, 4.721999999998672e-06, 4.84800000000174e-06, 7.735999999994303e-06, 2.2910000000014863e-06, 4.4449999999987555e-06, 4.847000000002266e-06, 2.1529999999977956e-06, 7.722000000001672e-06, 7.068999999998438e-06, 3.07000000000085e-06, 7.514000000000132e-06, 7.972000000001922e-06, 6.638999999995787e-06, 2.5000000000025002e-06, 6.625000000003156e-06, 6.8469999999973274e-06, 8.846999999999328e-06, 5.29200000000396e-06, 4.7499999999978115e-06, 5.403000000001046e-06], 'time': [0.03715, 0.037158181, 0.037164861, 0.037168319, 0.037171625, 0.037176347, 0.037180861, 0.037189153, 0.037197556, 0.037200639, 0.037205028, 0.037211097, 0.037216389, 0.037220792, 0.037223306, 0.037226375, 0.037230681, 0.037238083, 0.037245931, 0.037253792, 0.037257292, 0.037261583, 0.037265, 0.037269389, 0.037275917, 0.03728075, 0.037289042, 0.037292, 0.037301181, 0.037309486, 0.037314208, 0.037319056, 0.037326792, 0.037329083, 0.037333528, 0.037338375, 0.037340528, 0.03734825, 0.037355319, 0.037358389, 0.037365903, 0.037373875, 0.037380514, 0.037383014, 0.037389639, 0.037396486, 0.037405333, 0.037410625, 0.037415375, 0.037420778]}</msg>
<status status="PASS" starttime="20201110 08:37:04.984" endtime="20201110 08:37:04.990"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.974" endtime="20201110 08:37:04.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.000" level="INFO">${RESULT} = [{'time': 0.037158181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.180999999995997e-06, 'source_diff': 8.180999999995997e-06}, {'time': 0.037168319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:04.993" endtime="20201110 08:37:05.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:05.019" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:05.002" endtime="20201110 08:37:05.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.029" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:05.027" endtime="20201110 08:37:05.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.035" level="INFO">VALUE: [8.180999999995997e-06, 3.4579999999978517e-06, 4.721999999998672e-06, 8.292000000000022e-06, 3.083000000000946e-06, 6.0689999999974376e-06, 4.403000000000046e-06, 3.069000000001376e-06, 7.4019999999966335e-06, 7.860999999997897e-06, 4.2910000000034865e-06, 4.389000000000476e-06, 4.833000000002696e-06, 2.9579999999973516e-06, 8.305000000000118e-06, 4.84800000000174e-06, 2.2910000000014863e-06, 4.847000000002266e-06, 7.722000000001672e-06, 3.07000000000085e-06, 7.972000000001922e-06, 2.5000000000025002e-06, 6.8469999999973274e-06, 5.29200000000396e-06, 5.403000000001046e-06]</msg>
<status status="PASS" starttime="20201110 08:37:05.032" endtime="20201110 08:37:05.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.020" endtime="20201110 08:37:05.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.045" endtime="20201110 08:37:05.048"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.055" endtime="20201110 08:37:05.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.050" endtime="20201110 08:37:05.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.040" endtime="20201110 08:37:05.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:04.480" endtime="20201110 08:37:05.080"></status>
</kw>
<msg timestamp="20201110 08:37:05.081" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.102" endtime="20201110 08:37:05.115"></status>
</kw>
<msg timestamp="20201110 08:37:05.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.097" endtime="20201110 08:37:05.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.122" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.118" endtime="20201110 08:37:05.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.125" endtime="20201110 08:37:05.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.090" endtime="20201110 08:37:05.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.085" endtime="20201110 08:37:05.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.152" endtime="20201110 08:37:05.464"></status>
</kw>
<msg timestamp="20201110 08:37:05.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038132736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038139583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.149" endtime="20201110 08:37:05.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038132736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038139583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:05.471" endtime="20201110 08:37:05.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.483" endtime="20201110 08:37:05.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.142" endtime="20201110 08:37:05.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.136" endtime="20201110 08:37:05.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.500" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:05.498" endtime="20201110 08:37:05.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.508" level="INFO">VALUE: [{'time': 0.038132736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038139583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.038146542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.038153944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.402000000003572e-06, 'source_diff': 7.402000000003572e-06}, {'time': 0.038161125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.180999999994997e-06, 'source_diff': 7.180999999994997e-06}, {'time': 0.038165417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.29200000000296e-06, 'source_diff': 4.29200000000296e-06}, {'time': 0.038174611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.193999999997093e-06, 'source_diff': 9.193999999997093e-06}, {'time': 0.038180125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.51400000000507e-06, 'source_diff': 5.51400000000507e-06}, {'time': 0.038184306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.038191819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.513000000000658e-06, 'source_diff': 7.513000000000658e-06}, {'time': 0.038197486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.038203514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0279999999982015e-06, 'source_diff': 6.0279999999982015e-06}, {'time': 0.038207583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.038216542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999995887e-06, 'source_diff': 8.958999999995887e-06}, {'time': 0.038225292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038233236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.943999999995843e-06, 'source_diff': 7.943999999995843e-06}, {'time': 0.038237542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.038242819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.038245681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.8619999999993095e-06, 'source_diff': 2.8619999999993095e-06}, {'time': 0.038248639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9580000000042905e-06, 'source_diff': 2.9580000000042905e-06}, {'time': 0.038253583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.038262333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.750000000001812e-06, 'source_diff': 8.750000000001812e-06}, {'time': 0.038265625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.291999999995021e-06, 'source_diff': 3.291999999995021e-06}, {'time': 0.038272347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.038276653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.038280708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.0549999999958675e-06, 'source_diff': 4.0549999999958675e-06}, {'time': 0.038287, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.29200000000496e-06, 'source_diff': 6.29200000000496e-06}, {'time': 0.038293778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.7779999999989515e-06, 'source_diff': 6.7779999999989515e-06}, {'time': 0.038297486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7079999999981017e-06, 'source_diff': 3.7079999999981017e-06}, {'time': 0.038302889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.038308403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.03831325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.038317319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.038320389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.07000000000085e-06, 'source_diff': 3.07000000000085e-06}, {'time': 0.038324583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.193999999999032e-06, 'source_diff': 4.193999999999032e-06}, {'time': 0.038331639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.055999999998341e-06, 'source_diff': 7.055999999998341e-06}, {'time': 0.038338611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.038344556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.038349181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.038357694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.51299999999472e-06, 'source_diff': 8.51299999999472e-06}, {'time': 0.038363222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.038368097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.874999999994467e-06, 'source_diff': 4.874999999994467e-06}, {'time': 0.038373708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.611000000002586e-06, 'source_diff': 5.611000000002586e-06}, {'time': 0.03837775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.04200000000271e-06, 'source_diff': 4.04200000000271e-06}, {'time': 0.038386833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.038395778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.944999999996317e-06, 'source_diff': 8.944999999996317e-06}, {'time': 0.038400306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.03840725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.943999999994843e-06, 'source_diff': 6.943999999994843e-06}, {'time': 0.038409542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038412736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1940000000049706e-06, 'source_diff': 3.1940000000049706e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:05.502" endtime="20201110 08:37:05.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.492" endtime="20201110 08:37:05.512"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:05.544" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:05.513" endtime="20201110 08:37:05.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.553" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:05.551" endtime="20201110 08:37:05.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.560" level="INFO">VALUE: {'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 6.8469999999973274e-06, 6.959000000000826e-06, 7.402000000003572e-06, 7.180999999994997e-06, 4.29200000000296e-06, 9.193999999997093e-06, 5.51400000000507e-06, 4.1809999999989356e-06, 7.513000000000658e-06, 5.667000000000866e-06, 6.0279999999982015e-06, 4.069000000002376e-06, 8.958999999995887e-06, 8.750000000001812e-06, 7.943999999995843e-06, 4.30600000000253e-06, 5.276999999997978e-06, 2.8619999999993095e-06, 2.9580000000042905e-06, 4.943999999999782e-06, 8.750000000001812e-06, 3.291999999995021e-06, 6.722000000000672e-06, 4.30600000000253e-06, 4.0549999999958675e-06, 6.29200000000496e-06, 6.7779999999989515e-06, 3.7079999999981017e-06, 5.403000000001046e-06, 5.5139999999981315e-06, 4.847000000002266e-06, 4.069000000002376e-06, 3.07000000000085e-06, 4.193999999999032e-06, 7.055999999998341e-06, 6.972000000000922e-06, 5.945000000000256e-06, 4.625000000001156e-06, 8.51299999999472e-06, 5.52800000000464e-06, 4.874999999994467e-06, 5.611000000002586e-06, 4.04200000000271e-06, 9.083000000000008e-06, 8.944999999996317e-06, 4.52800000000364e-06, 6.943999999994843e-06, 2.29200000000096e-06, 3.1940000000049706e-06], 'diff': [0, 6.8469999999973274e-06, 6.959000000000826e-06, 7.402000000003572e-06, 7.180999999994997e-06, 4.29200000000296e-06, 9.193999999997093e-06, 5.51400000000507e-06, 4.1809999999989356e-06, 7.513000000000658e-06, 5.667000000000866e-06, 6.0279999999982015e-06, 4.069000000002376e-06, 8.958999999995887e-06, 8.750000000001812e-06, 7.943999999995843e-06, 4.30600000000253e-06, 5.276999999997978e-06, 2.8619999999993095e-06, 2.9580000000042905e-06, 4.943999999999782e-06, 8.750000000001812e-06, 3.291999999995021e-06, 6.722000000000672e-06, 4.30600000000253e-06, 4.0549999999958675e-06, 6.29200000000496e-06, 6.7779999999989515e-06, 3.7079999999981017e-06, 5.403000000001046e-06, 5.5139999999981315e-06, 4.847000000002266e-06, 4.069000000002376e-06, 3.07000000000085e-06, 4.193999999999032e-06, 7.055999999998341e-06, 6.972000000000922e-06, 5.945000000000256e-06, 4.625000000001156e-06, 8.51299999999472e-06, 5.52800000000464e-06, 4.874999999994467e-06, 5.611000000002586e-06, 4.04200000000271e-06, 9.083000000000008e-06, 8.944999999996317e-06, 4.52800000000364e-06, 6.943999999994843e-06, 2.29200000000096e-06, 3.1940000000049706e-06], 'time': [0.038132736, 0.038139583, 0.038146542, 0.038153944, 0.038161125, 0.038165417, 0.038174611, 0.038180125, 0.038184306, 0.038191819, 0.038197486, 0.038203514, 0.038207583, 0.038216542, 0.038225292, 0.038233236, 0.038237542, 0.038242819, 0.038245681, 0.038248639, 0.038253583, 0.038262333, 0.038265625, 0.038272347, 0.038276653, 0.038280708, 0.038287, 0.038293778, 0.038297486, 0.038302889, 0.038308403, 0.03831325, 0.038317319, 0.038320389, 0.038324583, 0.038331639, 0.038338611, 0.038344556, 0.038349181, 0.038357694, 0.038363222, 0.038368097, 0.038373708, 0.03837775, 0.038386833, 0.038395778, 0.038400306, 0.03840725, 0.038409542, 0.038412736]}</msg>
<status status="PASS" starttime="20201110 08:37:05.556" endtime="20201110 08:37:05.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.546" endtime="20201110 08:37:05.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:05.572" level="INFO">${RESULT} = [{'time': 0.038139583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.038153944, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:05.565" endtime="20201110 08:37:05.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:05.590" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:05.574" endtime="20201110 08:37:05.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.600" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:05.598" endtime="20201110 08:37:05.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.605" level="INFO">VALUE: [6.8469999999973274e-06, 7.402000000003572e-06, 4.29200000000296e-06, 5.51400000000507e-06, 7.513000000000658e-06, 6.0279999999982015e-06, 8.958999999995887e-06, 7.943999999995843e-06, 5.276999999997978e-06, 2.9580000000042905e-06, 8.750000000001812e-06, 6.722000000000672e-06, 4.0549999999958675e-06, 6.7779999999989515e-06, 5.403000000001046e-06, 4.847000000002266e-06, 3.07000000000085e-06, 7.055999999998341e-06, 5.945000000000256e-06, 8.51299999999472e-06, 4.874999999994467e-06, 4.04200000000271e-06, 8.944999999996317e-06, 6.943999999994843e-06, 3.1940000000049706e-06]</msg>
<status status="PASS" starttime="20201110 08:37:05.602" endtime="20201110 08:37:05.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.592" endtime="20201110 08:37:05.608"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.614" endtime="20201110 08:37:05.617"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:05.623" endtime="20201110 08:37:05.644"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.618" endtime="20201110 08:37:05.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.610" endtime="20201110 08:37:05.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.082" endtime="20201110 08:37:05.648"></status>
</kw>
<msg timestamp="20201110 08:37:05.649" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.674" endtime="20201110 08:37:05.688"></status>
</kw>
<msg timestamp="20201110 08:37:05.689" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.669" endtime="20201110 08:37:05.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:05.697" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:05.692" endtime="20201110 08:37:05.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.700" endtime="20201110 08:37:05.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.658" endtime="20201110 08:37:05.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.653" endtime="20201110 08:37:05.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:05.731" endtime="20201110 08:37:06.051"></status>
</kw>
<msg timestamp="20201110 08:37:06.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042588764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04259175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:05.728" endtime="20201110 08:37:06.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042588764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04259175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:06.058" endtime="20201110 08:37:06.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.070" endtime="20201110 08:37:06.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.720" endtime="20201110 08:37:06.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.709" endtime="20201110 08:37:06.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.087" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:06.085" endtime="20201110 08:37:06.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.096" level="INFO">VALUE: [{'time': 0.042588764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04259175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9859999999964915e-06, 'source_diff': 2.9859999999964915e-06}, {'time': 0.042597569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8190000000041264e-06, 'source_diff': 5.8190000000041264e-06}, {'time': 0.042600764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1949999999975054e-06, 'source_diff': 3.1949999999975054e-06}, {'time': 0.042606597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.833000000003696e-06, 'source_diff': 5.833000000003696e-06}, {'time': 0.042615333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.735999999995303e-06, 'source_diff': 8.735999999995303e-06}, {'time': 0.042619958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.042622806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8479999999997396e-06, 'source_diff': 2.8479999999997396e-06}, {'time': 0.042626, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1939999999980317e-06, 'source_diff': 3.1939999999980317e-06}, {'time': 0.042630944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.943999999999782e-06, 'source_diff': 4.943999999999782e-06}, {'time': 0.042637125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.042646208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.083000000000008e-06, 'source_diff': 9.083000000000008e-06}, {'time': 0.042652208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.999999999999062e-06, 'source_diff': 5.999999999999062e-06}, {'time': 0.042655014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.80600000000103e-06, 'source_diff': 2.80600000000103e-06}, {'time': 0.042661903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.889000000002976e-06, 'source_diff': 6.889000000002976e-06}, {'time': 0.042669361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.458000000001852e-06, 'source_diff': 7.458000000001852e-06}, {'time': 0.042674875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.0426835, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.042690611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.042696986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.374999999995967e-06, 'source_diff': 6.374999999995967e-06}, {'time': 0.042701181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1949999999985055e-06, 'source_diff': 4.1949999999985055e-06}, {'time': 0.042706806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.042711333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.526999999997228e-06, 'source_diff': 4.526999999997228e-06}, {'time': 0.042717486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.153000000001796e-06, 'source_diff': 6.153000000001796e-06}, {'time': 0.042722889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.042725292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.042731472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.042734764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.29200000000196e-06, 'source_diff': 3.29200000000196e-06}, {'time': 0.042738181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.042743458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.276999999997978e-06, 'source_diff': 5.276999999997978e-06}, {'time': 0.042746861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.042753486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.042758778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.04276275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.042771472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.721999999995733e-06, 'source_diff': 8.721999999995733e-06}, {'time': 0.042779208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.736000000001242e-06, 'source_diff': 7.736000000001242e-06}, {'time': 0.042784611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.042793125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.042799194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.042806639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.445000000001756e-06, 'source_diff': 7.445000000001756e-06}, {'time': 0.042815236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.042820014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.77800000000389e-06, 'source_diff': 4.77800000000389e-06}, {'time': 0.042828542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.527999999993763e-06, 'source_diff': 8.527999999993763e-06}, {'time': 0.042831681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1390000000061646e-06, 'source_diff': 3.1390000000061646e-06}, {'time': 0.042838736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.054999999998868e-06, 'source_diff': 7.054999999998868e-06}, {'time': 0.042846403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.666999999995927e-06, 'source_diff': 7.666999999995927e-06}, {'time': 0.042849444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.0410000000022364e-06, 'source_diff': 3.0410000000022364e-06}, {'time': 0.042856667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.2230000000006456e-06, 'source_diff': 7.2230000000006456e-06}, {'time': 0.042865125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.457999999995913e-06, 'source_diff': 8.457999999995913e-06}, {'time': 0.042869986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:06.090" endtime="20201110 08:37:06.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.079" endtime="20201110 08:37:06.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:06.131" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:06.101" endtime="20201110 08:37:06.131"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.140" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:06.138" endtime="20201110 08:37:06.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.148" level="INFO">VALUE: {'sourceevent': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'source_diff': [0, 2.9859999999964915e-06, 5.8190000000041264e-06, 3.1949999999975054e-06, 5.833000000003696e-06, 8.735999999995303e-06, 4.625000000001156e-06, 2.8479999999997396e-06, 3.1939999999980317e-06, 4.943999999999782e-06, 6.181000000000936e-06, 9.083000000000008e-06, 5.999999999999062e-06, 2.80600000000103e-06, 6.889000000002976e-06, 7.458000000001852e-06, 5.5139999999981315e-06, 8.624999999998217e-06, 7.111000000004086e-06, 6.374999999995967e-06, 4.1949999999985055e-06, 5.625000000002156e-06, 4.526999999997228e-06, 6.153000000001796e-06, 5.403000000001046e-06, 2.4029999999980456e-06, 6.180000000001462e-06, 3.29200000000196e-06, 3.4169999999986156e-06, 5.276999999997978e-06, 3.4029999999990457e-06, 6.625000000003156e-06, 5.291999999997021e-06, 3.9720000000048605e-06, 8.721999999995733e-06, 7.736000000001242e-06, 5.403000000001046e-06, 8.514000000001132e-06, 6.0689999999974376e-06, 7.445000000001756e-06, 8.596999999999078e-06, 4.77800000000389e-06, 8.527999999993763e-06, 3.1390000000061646e-06, 7.054999999998868e-06, 7.666999999995927e-06, 3.0410000000022364e-06, 7.2230000000006456e-06, 8.457999999995913e-06, 4.861000000001836e-06], 'diff': [0, 2.9859999999964915e-06, 5.8190000000041264e-06, 3.1949999999975054e-06, 5.833000000003696e-06, 8.735999999995303e-06, 4.625000000001156e-06, 2.8479999999997396e-06, 3.1939999999980317e-06, 4.943999999999782e-06, 6.181000000000936e-06, 9.083000000000008e-06, 5.999999999999062e-06, 2.80600000000103e-06, 6.889000000002976e-06, 7.458000000001852e-06, 5.5139999999981315e-06, 8.624999999998217e-06, 7.111000000004086e-06, 6.374999999995967e-06, 4.1949999999985055e-06, 5.625000000002156e-06, 4.526999999997228e-06, 6.153000000001796e-06, 5.403000000001046e-06, 2.4029999999980456e-06, 6.180000000001462e-06, 3.29200000000196e-06, 3.4169999999986156e-06, 5.276999999997978e-06, 3.4029999999990457e-06, 6.625000000003156e-06, 5.291999999997021e-06, 3.9720000000048605e-06, 8.721999999995733e-06, 7.736000000001242e-06, 5.403000000001046e-06, 8.514000000001132e-06, 6.0689999999974376e-06, 7.445000000001756e-06, 8.596999999999078e-06, 4.77800000000389e-06, 8.527999999993763e-06, 3.1390000000061646e-06, 7.054999999998868e-06, 7.666999999995927e-06, 3.0410000000022364e-06, 7.2230000000006456e-06, 8.457999999995913e-06, 4.861000000001836e-06], 'time': [0.042588764, 0.04259175, 0.042597569, 0.042600764, 0.042606597, 0.042615333, 0.042619958, 0.042622806, 0.042626, 0.042630944, 0.042637125, 0.042646208, 0.042652208, 0.042655014, 0.042661903, 0.042669361, 0.042674875, 0.0426835, 0.042690611, 0.042696986, 0.042701181, 0.042706806, 0.042711333, 0.042717486, 0.042722889, 0.042725292, 0.042731472, 0.042734764, 0.042738181, 0.042743458, 0.042746861, 0.042753486, 0.042758778, 0.04276275, 0.042771472, 0.042779208, 0.042784611, 0.042793125, 0.042799194, 0.042806639, 0.042815236, 0.042820014, 0.042828542, 0.042831681, 0.042838736, 0.042846403, 0.042849444, 0.042856667, 0.042865125, 0.042869986]}</msg>
<status status="PASS" starttime="20201110 08:37:06.143" endtime="20201110 08:37:06.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.133" endtime="20201110 08:37:06.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.160" level="INFO">${RESULT} = [{'time': 0.04259175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9859999999964915e-06, 'source_diff': 2.9859999999964915e-06}, {'time': 0.042600764, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:06.152" endtime="20201110 08:37:06.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:06.178" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:06.162" endtime="20201110 08:37:06.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.189" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:06.186" endtime="20201110 08:37:06.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.194" level="INFO">VALUE: [2.9859999999964915e-06, 3.1949999999975054e-06, 8.735999999995303e-06, 2.8479999999997396e-06, 4.943999999999782e-06, 9.083000000000008e-06, 2.80600000000103e-06, 7.458000000001852e-06, 8.624999999998217e-06, 6.374999999995967e-06, 5.625000000002156e-06, 6.153000000001796e-06, 2.4029999999980456e-06, 3.29200000000196e-06, 5.276999999997978e-06, 6.625000000003156e-06, 3.9720000000048605e-06, 7.736000000001242e-06, 8.514000000001132e-06, 7.445000000001756e-06, 4.77800000000389e-06, 3.1390000000061646e-06, 7.666999999995927e-06, 7.2230000000006456e-06, 4.861000000001836e-06]</msg>
<status status="PASS" starttime="20201110 08:37:06.191" endtime="20201110 08:37:06.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.180" endtime="20201110 08:37:06.197"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.203" endtime="20201110 08:37:06.206"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.212" endtime="20201110 08:37:06.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.207" endtime="20201110 08:37:06.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.198" endtime="20201110 08:37:06.237"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:05.650" endtime="20201110 08:37:06.237"></status>
</kw>
<msg timestamp="20201110 08:37:06.238" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.259" endtime="20201110 08:37:06.273"></status>
</kw>
<msg timestamp="20201110 08:37:06.274" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.254" endtime="20201110 08:37:06.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.280" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.276" endtime="20201110 08:37:06.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.283" endtime="20201110 08:37:06.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.247" endtime="20201110 08:37:06.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.242" endtime="20201110 08:37:06.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.307" endtime="20201110 08:37:06.626"></status>
</kw>
<msg timestamp="20201110 08:37:06.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038531861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038539361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.303" endtime="20201110 08:37:06.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038531861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038539361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:06.633" endtime="20201110 08:37:06.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.646" endtime="20201110 08:37:06.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.296" endtime="20201110 08:37:06.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.291" endtime="20201110 08:37:06.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.662" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:06.660" endtime="20201110 08:37:06.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.671" level="INFO">VALUE: [{'time': 0.038531861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038539361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.038544403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.041999999996771e-06, 'source_diff': 5.041999999996771e-06}, {'time': 0.038550625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.222000000000172e-06, 'source_diff': 6.222000000000172e-06}, {'time': 0.038554569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.943999999998782e-06, 'source_diff': 3.943999999998782e-06}, {'time': 0.038563542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.973000000002396e-06, 'source_diff': 8.973000000002396e-06}, {'time': 0.038570375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8329999999977575e-06, 'source_diff': 6.8329999999977575e-06}, {'time': 0.038577667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.29200000000596e-06, 'source_diff': 7.29200000000596e-06}, {'time': 0.038580958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2909999999955475e-06, 'source_diff': 3.2909999999955475e-06}, {'time': 0.038585028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.038592653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.038596736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.038599167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4309999999971854e-06, 'source_diff': 2.4309999999971854e-06}, {'time': 0.038607861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.694000000003532e-06, 'source_diff': 8.694000000003532e-06}, {'time': 0.038611597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7359999999972415e-06, 'source_diff': 3.7359999999972415e-06}, {'time': 0.038620792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.195000000003506e-06, 'source_diff': 9.195000000003506e-06}, {'time': 0.038629972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.179999999997523e-06, 'source_diff': 9.179999999997523e-06}, {'time': 0.038637042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.038642347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.304999999997118e-06, 'source_diff': 5.304999999997118e-06}, {'time': 0.038651403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.038659694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.038664431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.736999999997715e-06, 'source_diff': 4.736999999997715e-06}, {'time': 0.038667722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}, {'time': 0.038671792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.07000000000185e-06, 'source_diff': 4.07000000000185e-06}, {'time': 0.038673986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1939999999970317e-06, 'source_diff': 2.1939999999970317e-06}, {'time': 0.038678819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.833000000002696e-06, 'source_diff': 4.833000000002696e-06}, {'time': 0.038681125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305999999993591e-06, 'source_diff': 2.305999999993591e-06}, {'time': 0.03868775, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.038694028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.2779999999984515e-06, 'source_diff': 6.2779999999984515e-06}, {'time': 0.038700875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.038709403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.528000000000702e-06, 'source_diff': 8.528000000000702e-06}, {'time': 0.038715125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.721999999999672e-06, 'source_diff': 5.721999999999672e-06}, {'time': 0.038719431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.305999999995591e-06, 'source_diff': 4.305999999995591e-06}, {'time': 0.038725819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.388000000003002e-06, 'source_diff': 6.388000000003002e-06}, {'time': 0.038734236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}, {'time': 0.038738847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.038746181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.333999999997731e-06, 'source_diff': 7.333999999997731e-06}, {'time': 0.038752625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.444000000001282e-06, 'source_diff': 6.444000000001282e-06}, {'time': 0.038760292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.667000000002866e-06, 'source_diff': 7.667000000002866e-06}, {'time': 0.038765375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.038771986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.038779944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999995413e-06, 'source_diff': 7.957999999995413e-06}, {'time': 0.038789056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.11200000000556e-06, 'source_diff': 9.11200000000556e-06}, {'time': 0.038793986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.930000000000212e-06, 'source_diff': 4.930000000000212e-06}, {'time': 0.038798819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.832999999995757e-06, 'source_diff': 4.832999999995757e-06}, {'time': 0.038807889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.038815736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.847000000005266e-06, 'source_diff': 7.847000000005266e-06}, {'time': 0.038819694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.957999999998352e-06, 'source_diff': 3.957999999998352e-06}, {'time': 0.038825111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.417000000000616e-06, 'source_diff': 5.417000000000616e-06}, {'time': 0.038833389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.278000000000452e-06, 'source_diff': 8.278000000000452e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:06.665" endtime="20201110 08:37:06.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.654" endtime="20201110 08:37:06.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:06.706" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:06.676" endtime="20201110 08:37:06.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.715" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:06.713" endtime="20201110 08:37:06.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.723" level="INFO">VALUE: {'sourceeventsource_diff': [0, 7.500000000000562e-06, 5.041999999996771e-06, 6.222000000000172e-06, 3.943999999998782e-06, 8.973000000002396e-06, 6.8329999999977575e-06, 7.29200000000596e-06, 3.2909999999955475e-06, 4.07000000000185e-06, 7.624999999997217e-06, 4.083000000001946e-06, 2.4309999999971854e-06, 8.694000000003532e-06, 3.7359999999972415e-06, 9.195000000003506e-06, 9.179999999997523e-06, 7.07000000000485e-06, 5.304999999997118e-06, 9.056000000000342e-06, 8.291000000000548e-06, 4.736999999997715e-06, 3.2910000000024864e-06, 4.07000000000185e-06, 2.1939999999970317e-06, 4.833000000002696e-06, 2.305999999993591e-06, 6.625000000003156e-06, 6.2779999999984515e-06, 6.847000000004266e-06, 8.528000000000702e-06, 5.721999999999672e-06, 4.305999999995591e-06, 6.388000000003002e-06, 8.416999999996677e-06, 4.611000000001586e-06, 7.333999999997731e-06, 6.444000000001282e-06, 7.667000000002866e-06, 5.082999999996007e-06, 6.611000000003586e-06, 7.957999999995413e-06, 9.11200000000556e-06, 4.930000000000212e-06, 4.832999999995757e-06, 9.069999999999911e-06, 7.847000000005266e-06, 3.957999999998352e-06, 5.417000000000616e-06, 8.278000000000452e-06], 'diff': [0, 7.500000000000562e-06, 5.041999999996771e-06, 6.222000000000172e-06, 3.943999999998782e-06, 8.973000000002396e-06, 6.8329999999977575e-06, 7.29200000000596e-06, 3.2909999999955475e-06, 4.07000000000185e-06, 7.624999999997217e-06, 4.083000000001946e-06, 2.4309999999971854e-06, 8.694000000003532e-06, 3.7359999999972415e-06, 9.195000000003506e-06, 9.179999999997523e-06, 7.07000000000485e-06, 5.304999999997118e-06, 9.056000000000342e-06, 8.291000000000548e-06, 4.736999999997715e-06, 3.2910000000024864e-06, 4.07000000000185e-06, 2.1939999999970317e-06, 4.833000000002696e-06, 2.305999999993591e-06, 6.625000000003156e-06, 6.2779999999984515e-06, 6.847000000004266e-06, 8.528000000000702e-06, 5.721999999999672e-06, 4.305999999995591e-06, 6.388000000003002e-06, 8.416999999996677e-06, 4.611000000001586e-06, 7.333999999997731e-06, 6.444000000001282e-06, 7.667000000002866e-06, 5.082999999996007e-06, 6.611000000003586e-06, 7.957999999995413e-06, 9.11200000000556e-06, 4.930000000000212e-06, 4.832999999995757e-06, 9.069999999999911e-06, 7.847000000005266e-06, 3.957999999998352e-06, 5.417000000000616e-06, 8.278000000000452e-06], 'time': [0.038531861, 0.038539361, 0.038544403, 0.038550625, 0.038554569, 0.038563542, 0.038570375, 0.038577667, 0.038580958, 0.038585028, 0.038592653, 0.038596736, 0.038599167, 0.038607861, 0.038611597, 0.038620792, 0.038629972, 0.038637042, 0.038642347, 0.038651403, 0.038659694, 0.038664431, 0.038667722, 0.038671792, 0.038673986, 0.038678819, 0.038681125, 0.03868775, 0.038694028, 0.038700875, 0.038709403, 0.038715125, 0.038719431, 0.038725819, 0.038734236, 0.038738847, 0.038746181, 0.038752625, 0.038760292, 0.038765375, 0.038771986, 0.038779944, 0.038789056, 0.038793986, 0.038798819, 0.038807889, 0.038815736, 0.038819694, 0.038825111, 0.038833389]}</msg>
<status status="PASS" starttime="20201110 08:37:06.718" endtime="20201110 08:37:06.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.708" endtime="20201110 08:37:06.725"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:06.738" level="INFO">${RESULT} = [{'time': 0.038539361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.500000000000562e-06, 'source_diff': 7.500000000000562e-06}, {'time': 0.038550625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:06.727" endtime="20201110 08:37:06.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:06.757" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:06.740" endtime="20201110 08:37:06.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.768" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:06.765" endtime="20201110 08:37:06.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.773" level="INFO">VALUE: [7.500000000000562e-06, 6.222000000000172e-06, 8.973000000002396e-06, 7.29200000000596e-06, 4.07000000000185e-06, 4.083000000001946e-06, 8.694000000003532e-06, 9.195000000003506e-06, 7.07000000000485e-06, 9.056000000000342e-06, 4.736999999997715e-06, 4.07000000000185e-06, 4.833000000002696e-06, 6.625000000003156e-06, 6.847000000004266e-06, 5.721999999999672e-06, 6.388000000003002e-06, 4.611000000001586e-06, 6.444000000001282e-06, 5.082999999996007e-06, 7.957999999995413e-06, 4.930000000000212e-06, 9.069999999999911e-06, 3.957999999998352e-06, 8.278000000000452e-06]</msg>
<status status="PASS" starttime="20201110 08:37:06.770" endtime="20201110 08:37:06.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.759" endtime="20201110 08:37:06.776"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.782" endtime="20201110 08:37:06.785"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:06.791" endtime="20201110 08:37:06.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.786" endtime="20201110 08:37:06.814"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.778" endtime="20201110 08:37:06.816"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.239" endtime="20201110 08:37:06.817"></status>
</kw>
<msg timestamp="20201110 08:37:06.817" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.839" endtime="20201110 08:37:06.852"></status>
</kw>
<msg timestamp="20201110 08:37:06.853" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.834" endtime="20201110 08:37:06.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:06.860" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:06.855" endtime="20201110 08:37:06.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.862" endtime="20201110 08:37:06.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.827" endtime="20201110 08:37:06.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.822" endtime="20201110 08:37:06.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:06.886" endtime="20201110 08:37:07.204"></status>
</kw>
<msg timestamp="20201110 08:37:07.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03897325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038977333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:06.883" endtime="20201110 08:37:07.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03897325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038977333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:07.210" endtime="20201110 08:37:07.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.223" endtime="20201110 08:37:07.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.875" endtime="20201110 08:37:07.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.870" endtime="20201110 08:37:07.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.240" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:07.238" endtime="20201110 08:37:07.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.248" level="INFO">VALUE: [{'time': 0.03897325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038977333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.038983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.485999999999992e-06, 'source_diff': 6.485999999999992e-06}, {'time': 0.038988778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.03899175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9719999999969215e-06, 'source_diff': 2.9719999999969215e-06}, {'time': 0.038995028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.27800000000239e-06, 'source_diff': 3.27800000000239e-06}, {'time': 0.038999653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.0390055, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.846999999996327e-06, 'source_diff': 5.846999999996327e-06}, {'time': 0.039014597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.096999999999578e-06, 'source_diff': 9.096999999999578e-06}, {'time': 0.039018097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5000000000035003e-06, 'source_diff': 3.5000000000035003e-06}, {'time': 0.039027083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.985999999995553e-06, 'source_diff': 8.985999999995553e-06}, {'time': 0.039033458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.375000000002906e-06, 'source_diff': 6.375000000002906e-06}, {'time': 0.03903975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.291999999998021e-06, 'source_diff': 6.291999999998021e-06}, {'time': 0.039045778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.02800000000514e-06, 'source_diff': 6.02800000000514e-06}, {'time': 0.039052125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.346999999996827e-06, 'source_diff': 6.346999999996827e-06}, {'time': 0.039057292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.167000000000366e-06, 'source_diff': 5.167000000000366e-06}, {'time': 0.039063167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.875000000002406e-06, 'source_diff': 5.875000000002406e-06}, {'time': 0.039071444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.276999999994039e-06, 'source_diff': 8.276999999994039e-06}, {'time': 0.039078611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.039085014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.039093639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.039098722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.083000000002946e-06, 'source_diff': 5.083000000002946e-06}, {'time': 0.039101583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.039110736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.152999999997857e-06, 'source_diff': 9.152999999997857e-06}, {'time': 0.039113583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.039121889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.305999999999591e-06, 'source_diff': 8.305999999999591e-06}, {'time': 0.039127514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.039130347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.833000000000696e-06, 'source_diff': 2.833000000000696e-06}, {'time': 0.039133306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.9589999999968253e-06, 'source_diff': 2.9589999999968253e-06}, {'time': 0.039141264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.039145778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.03915275, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.972000000000922e-06, 'source_diff': 6.972000000000922e-06}, {'time': 0.039161167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.416999999996677e-06, 'source_diff': 8.416999999996677e-06}, {'time': 0.039170028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.861000000005836e-06, 'source_diff': 8.861000000005836e-06}, {'time': 0.039178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.374999999997967e-06, 'source_diff': 8.374999999997967e-06}, {'time': 0.039180694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.039185208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513999999997131e-06, 'source_diff': 4.513999999997131e-06}, {'time': 0.039191736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.5279999999987015e-06, 'source_diff': 6.5279999999987015e-06}, {'time': 0.039196472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7360000000051805e-06, 'source_diff': 4.7360000000051805e-06}, {'time': 0.039202653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180999999993997e-06, 'source_diff': 6.180999999993997e-06}, {'time': 0.039210486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.833000000005697e-06, 'source_diff': 7.833000000005697e-06}, {'time': 0.039219, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.513999999994193e-06, 'source_diff': 8.513999999994193e-06}, {'time': 0.039227861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.861000000005836e-06, 'source_diff': 8.861000000005836e-06}, {'time': 0.039231694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.832999999994757e-06, 'source_diff': 3.832999999994757e-06}, {'time': 0.039235444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7500000000037503e-06, 'source_diff': 3.7500000000037503e-06}, {'time': 0.039241833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.388999999995537e-06, 'source_diff': 6.388999999995537e-06}, {'time': 0.039248458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.039250861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.039256597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.735999999999242e-06, 'source_diff': 5.735999999999242e-06}, {'time': 0.039264125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.527999999999702e-06, 'source_diff': 7.527999999999702e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:07.243" endtime="20201110 08:37:07.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.232" endtime="20201110 08:37:07.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:07.288" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:07.254" endtime="20201110 08:37:07.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.299" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:07.297" endtime="20201110 08:37:07.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.308" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.083000000001946e-06, 6.485999999999992e-06, 4.9589999999988255e-06, 2.9719999999969215e-06, 3.27800000000239e-06, 4.625000000001156e-06, 5.846999999996327e-06, 9.096999999999578e-06, 3.5000000000035003e-06, 8.985999999995553e-06, 6.375000000002906e-06, 6.291999999998021e-06, 6.02800000000514e-06, 6.346999999996827e-06, 5.167000000000366e-06, 5.875000000002406e-06, 8.276999999994039e-06, 7.167000000002366e-06, 6.403000000002046e-06, 8.624999999998217e-06, 5.083000000002946e-06, 2.860999999999836e-06, 9.152999999997857e-06, 2.847000000000266e-06, 8.305999999999591e-06, 5.625000000002156e-06, 2.833000000000696e-06, 2.9589999999968253e-06, 7.958000000002352e-06, 4.513999999997131e-06, 6.972000000000922e-06, 8.416999999996677e-06, 8.861000000005836e-06, 8.374999999997967e-06, 2.2910000000014863e-06, 4.513999999997131e-06, 6.5279999999987015e-06, 4.7360000000051805e-06, 6.180999999993997e-06, 7.833000000005697e-06, 8.513999999994193e-06, 8.861000000005836e-06, 3.832999999994757e-06, 3.7500000000037503e-06, 6.388999999995537e-06, 6.625000000003156e-06, 2.4029999999980456e-06, 5.735999999999242e-06, 7.527999999999702e-06], 'diff': [0, 4.083000000001946e-06, 6.485999999999992e-06, 4.9589999999988255e-06, 2.9719999999969215e-06, 3.27800000000239e-06, 4.625000000001156e-06, 5.846999999996327e-06, 9.096999999999578e-06, 3.5000000000035003e-06, 8.985999999995553e-06, 6.375000000002906e-06, 6.291999999998021e-06, 6.02800000000514e-06, 6.346999999996827e-06, 5.167000000000366e-06, 5.875000000002406e-06, 8.276999999994039e-06, 7.167000000002366e-06, 6.403000000002046e-06, 8.624999999998217e-06, 5.083000000002946e-06, 2.860999999999836e-06, 9.152999999997857e-06, 2.847000000000266e-06, 8.305999999999591e-06, 5.625000000002156e-06, 2.833000000000696e-06, 2.9589999999968253e-06, 7.958000000002352e-06, 4.513999999997131e-06, 6.972000000000922e-06, 8.416999999996677e-06, 8.861000000005836e-06, 8.374999999997967e-06, 2.2910000000014863e-06, 4.513999999997131e-06, 6.5279999999987015e-06, 4.7360000000051805e-06, 6.180999999993997e-06, 7.833000000005697e-06, 8.513999999994193e-06, 8.861000000005836e-06, 3.832999999994757e-06, 3.7500000000037503e-06, 6.388999999995537e-06, 6.625000000003156e-06, 2.4029999999980456e-06, 5.735999999999242e-06, 7.527999999999702e-06], 'time': [0.03897325, 0.038977333, 0.038983819, 0.038988778, 0.03899175, 0.038995028, 0.038999653, 0.0390055, 0.039014597, 0.039018097, 0.039027083, 0.039033458, 0.03903975, 0.039045778, 0.039052125, 0.039057292, 0.039063167, 0.039071444, 0.039078611, 0.039085014, 0.039093639, 0.039098722, 0.039101583, 0.039110736, 0.039113583, 0.039121889, 0.039127514, 0.039130347, 0.039133306, 0.039141264, 0.039145778, 0.03915275, 0.039161167, 0.039170028, 0.039178403, 0.039180694, 0.039185208, 0.039191736, 0.039196472, 0.039202653, 0.039210486, 0.039219, 0.039227861, 0.039231694, 0.039235444, 0.039241833, 0.039248458, 0.039250861, 0.039256597, 0.039264125]}</msg>
<status status="PASS" starttime="20201110 08:37:07.302" endtime="20201110 08:37:07.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.290" endtime="20201110 08:37:07.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.321" level="INFO">${RESULT} = [{'time': 0.038977333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.083000000001946e-06, 'source_diff': 4.083000000001946e-06}, {'time': 0.038988778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:07.313" endtime="20201110 08:37:07.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:07.340" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:07.323" endtime="20201110 08:37:07.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.350" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:07.348" endtime="20201110 08:37:07.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.356" level="INFO">VALUE: [4.083000000001946e-06, 4.9589999999988255e-06, 3.27800000000239e-06, 5.846999999996327e-06, 3.5000000000035003e-06, 6.375000000002906e-06, 6.02800000000514e-06, 5.167000000000366e-06, 8.276999999994039e-06, 6.403000000002046e-06, 5.083000000002946e-06, 9.152999999997857e-06, 8.305999999999591e-06, 2.833000000000696e-06, 7.958000000002352e-06, 6.972000000000922e-06, 8.861000000005836e-06, 2.2910000000014863e-06, 6.5279999999987015e-06, 6.180999999993997e-06, 8.513999999994193e-06, 3.832999999994757e-06, 6.388999999995537e-06, 2.4029999999980456e-06, 7.527999999999702e-06]</msg>
<status status="PASS" starttime="20201110 08:37:07.353" endtime="20201110 08:37:07.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.342" endtime="20201110 08:37:07.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.365" endtime="20201110 08:37:07.368"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.374" endtime="20201110 08:37:07.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.369" endtime="20201110 08:37:07.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.360" endtime="20201110 08:37:07.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:06.818" endtime="20201110 08:37:07.399"></status>
</kw>
<msg timestamp="20201110 08:37:07.400" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.422" endtime="20201110 08:37:07.435"></status>
</kw>
<msg timestamp="20201110 08:37:07.436" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.417" endtime="20201110 08:37:07.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.443" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.439" endtime="20201110 08:37:07.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.445" endtime="20201110 08:37:07.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.409" endtime="20201110 08:37:07.450"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.405" endtime="20201110 08:37:07.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.469" endtime="20201110 08:37:07.790"></status>
</kw>
<msg timestamp="20201110 08:37:07.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038858806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.465" endtime="20201110 08:37:07.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038858806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:07.796" endtime="20201110 08:37:07.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.809" endtime="20201110 08:37:07.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.458" endtime="20201110 08:37:07.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.453" endtime="20201110 08:37:07.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.826" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:07.824" endtime="20201110 08:37:07.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.834" level="INFO">VALUE: [{'time': 0.038856153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038858806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6530000000052345e-06, 'source_diff': 2.6530000000052345e-06}, {'time': 0.038864625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.8189999999971875e-06, 'source_diff': 5.8189999999971875e-06}, {'time': 0.038872583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.038880278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.694999999995067e-06, 'source_diff': 7.694999999995067e-06}, {'time': 0.038885389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.111000000002086e-06, 'source_diff': 5.111000000002086e-06}, {'time': 0.038892236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.038898153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.917000000001116e-06, 'source_diff': 5.917000000001116e-06}, {'time': 0.03890475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.597000000004016e-06, 'source_diff': 6.597000000004016e-06}, {'time': 0.038913653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.038917528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.875000000000406e-06, 'source_diff': 3.875000000000406e-06}, {'time': 0.0389235, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.038926569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.069000000001376e-06, 'source_diff': 3.069000000001376e-06}, {'time': 0.038930514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9449999999982555e-06, 'source_diff': 3.9449999999982555e-06}, {'time': 0.038936028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.038939222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.1940000000049706e-06, 'source_diff': 3.1940000000049706e-06}, {'time': 0.0389415, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.277999999994451e-06, 'source_diff': 2.277999999994451e-06}, {'time': 0.038945458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.958000000005291e-06, 'source_diff': 3.958000000005291e-06}, {'time': 0.038949875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.416999999999616e-06, 'source_diff': 4.416999999999616e-06}, {'time': 0.038954486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.038959375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.888999999994037e-06, 'source_diff': 4.888999999994037e-06}, {'time': 0.038964625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2500000000052505e-06, 'source_diff': 5.2500000000052505e-06}, {'time': 0.038968708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.082999999995007e-06, 'source_diff': 4.082999999995007e-06}, {'time': 0.038977764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.056000000000342e-06, 'source_diff': 9.056000000000342e-06}, {'time': 0.038979944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1800000000044006e-06, 'source_diff': 2.1800000000044006e-06}, {'time': 0.038986069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.124999999995717e-06, 'source_diff': 6.124999999995717e-06}, {'time': 0.038994653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.583999999998981e-06, 'source_diff': 8.583999999998981e-06}, {'time': 0.039001278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.039008889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}, {'time': 0.039014097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.207999999999602e-06, 'source_diff': 5.207999999999602e-06}, {'time': 0.039018361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.26400000000382e-06, 'source_diff': 4.26400000000382e-06}, {'time': 0.039021208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.039029847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.638999999997787e-06, 'source_diff': 8.638999999997787e-06}, {'time': 0.039034028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.039040653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.039046722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.039052347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.039057431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.083999999995481e-06, 'source_diff': 5.083999999995481e-06}, {'time': 0.039064597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.166000000002892e-06, 'source_diff': 7.166000000002892e-06}, {'time': 0.039071556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.959000000000826e-06, 'source_diff': 6.959000000000826e-06}, {'time': 0.039076306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.039080917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.039086111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.194000000000032e-06, 'source_diff': 5.194000000000032e-06}, {'time': 0.039089611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.5000000000035003e-06, 'source_diff': 3.5000000000035003e-06}, {'time': 0.039098389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.777999999994013e-06, 'source_diff': 8.777999999994013e-06}, {'time': 0.039105264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.875000000003406e-06, 'source_diff': 6.875000000003406e-06}, {'time': 0.039113486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.222000000002172e-06, 'source_diff': 8.222000000002172e-06}, {'time': 0.039118556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.069999999995911e-06, 'source_diff': 5.069999999995911e-06}, {'time': 0.039123069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.513000000004597e-06, 'source_diff': 4.513000000004597e-06}, {'time': 0.039130139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:07.828" endtime="20201110 08:37:07.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.817" endtime="20201110 08:37:07.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:07.869" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:07.840" endtime="20201110 08:37:07.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.879" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:07.877" endtime="20201110 08:37:07.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.886" level="INFO">VALUE: {'sourceeventsource_diff': [0, 2.6530000000052345e-06, 5.8189999999971875e-06, 7.958000000002352e-06, 7.694999999995067e-06, 5.111000000002086e-06, 6.8469999999973274e-06, 5.917000000001116e-06, 6.597000000004016e-06, 8.902999999997607e-06, 3.875000000000406e-06, 5.971999999999922e-06, 3.069000000001376e-06, 3.9449999999982555e-06, 5.5139999999981315e-06, 3.1940000000049706e-06, 2.277999999994451e-06, 3.958000000005291e-06, 4.416999999999616e-06, 4.611000000001586e-06, 4.888999999994037e-06, 5.2500000000052505e-06, 4.082999999995007e-06, 9.056000000000342e-06, 2.1800000000044006e-06, 6.124999999995717e-06, 8.583999999998981e-06, 6.625000000003156e-06, 7.6109999999976474e-06, 5.207999999999602e-06, 4.26400000000382e-06, 2.847000000000266e-06, 8.638999999997787e-06, 4.1809999999989356e-06, 6.625000000003156e-06, 6.0689999999974376e-06, 5.625000000002156e-06, 5.083999999995481e-06, 7.166000000002892e-06, 6.959000000000826e-06, 4.7499999999978115e-06, 4.611000000001586e-06, 5.194000000000032e-06, 3.5000000000035003e-06, 8.777999999994013e-06, 6.875000000003406e-06, 8.222000000002172e-06, 5.069999999995911e-06, 4.513000000004597e-06, 7.069999999997911e-06], 'diff': [0, 2.6530000000052345e-06, 5.8189999999971875e-06, 7.958000000002352e-06, 7.694999999995067e-06, 5.111000000002086e-06, 6.8469999999973274e-06, 5.917000000001116e-06, 6.597000000004016e-06, 8.902999999997607e-06, 3.875000000000406e-06, 5.971999999999922e-06, 3.069000000001376e-06, 3.9449999999982555e-06, 5.5139999999981315e-06, 3.1940000000049706e-06, 2.277999999994451e-06, 3.958000000005291e-06, 4.416999999999616e-06, 4.611000000001586e-06, 4.888999999994037e-06, 5.2500000000052505e-06, 4.082999999995007e-06, 9.056000000000342e-06, 2.1800000000044006e-06, 6.124999999995717e-06, 8.583999999998981e-06, 6.625000000003156e-06, 7.6109999999976474e-06, 5.207999999999602e-06, 4.26400000000382e-06, 2.847000000000266e-06, 8.638999999997787e-06, 4.1809999999989356e-06, 6.625000000003156e-06, 6.0689999999974376e-06, 5.625000000002156e-06, 5.083999999995481e-06, 7.166000000002892e-06, 6.959000000000826e-06, 4.7499999999978115e-06, 4.611000000001586e-06, 5.194000000000032e-06, 3.5000000000035003e-06, 8.777999999994013e-06, 6.875000000003406e-06, 8.222000000002172e-06, 5.069999999995911e-06, 4.513000000004597e-06, 7.069999999997911e-06], 'time': [0.038856153, 0.038858806, 0.038864625, 0.038872583, 0.038880278, 0.038885389, 0.038892236, 0.038898153, 0.03890475, 0.038913653, 0.038917528, 0.0389235, 0.038926569, 0.038930514, 0.038936028, 0.038939222, 0.0389415, 0.038945458, 0.038949875, 0.038954486, 0.038959375, 0.038964625, 0.038968708, 0.038977764, 0.038979944, 0.038986069, 0.038994653, 0.039001278, 0.039008889, 0.039014097, 0.039018361, 0.039021208, 0.039029847, 0.039034028, 0.039040653, 0.039046722, 0.039052347, 0.039057431, 0.039064597, 0.039071556, 0.039076306, 0.039080917, 0.039086111, 0.039089611, 0.039098389, 0.039105264, 0.039113486, 0.039118556, 0.039123069, 0.039130139]}</msg>
<status status="PASS" starttime="20201110 08:37:07.881" endtime="20201110 08:37:07.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.871" endtime="20201110 08:37:07.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:07.898" level="INFO">${RESULT} = [{'time': 0.038858806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6530000000052345e-06, 'source_diff': 2.6530000000052345e-06}, {'time': 0.038872583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:07.891" endtime="20201110 08:37:07.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:07.916" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:07.900" endtime="20201110 08:37:07.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.927" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:07.925" endtime="20201110 08:37:07.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:07.932" level="INFO">VALUE: [2.6530000000052345e-06, 7.958000000002352e-06, 5.111000000002086e-06, 5.917000000001116e-06, 8.902999999997607e-06, 5.971999999999922e-06, 3.9449999999982555e-06, 3.1940000000049706e-06, 3.958000000005291e-06, 4.611000000001586e-06, 5.2500000000052505e-06, 9.056000000000342e-06, 6.124999999995717e-06, 6.625000000003156e-06, 5.207999999999602e-06, 2.847000000000266e-06, 4.1809999999989356e-06, 6.0689999999974376e-06, 5.083999999995481e-06, 6.959000000000826e-06, 4.611000000001586e-06, 3.5000000000035003e-06, 6.875000000003406e-06, 5.069999999995911e-06, 7.069999999997911e-06]</msg>
<status status="PASS" starttime="20201110 08:37:07.929" endtime="20201110 08:37:07.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.918" endtime="20201110 08:37:07.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.942" endtime="20201110 08:37:07.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:07.950" endtime="20201110 08:37:07.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.946" endtime="20201110 08:37:07.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.937" endtime="20201110 08:37:07.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.401" endtime="20201110 08:37:07.976"></status>
</kw>
<msg timestamp="20201110 08:37:07.976" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:07.998" endtime="20201110 08:37:08.011"></status>
</kw>
<msg timestamp="20201110 08:37:08.012" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:07.993" endtime="20201110 08:37:08.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.018" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.014" endtime="20201110 08:37:08.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.021" endtime="20201110 08:37:08.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.986" endtime="20201110 08:37:08.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.981" endtime="20201110 08:37:08.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.045" endtime="20201110 08:37:08.365"></status>
</kw>
<msg timestamp="20201110 08:37:08.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03880825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038813569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:08.042" endtime="20201110 08:37:08.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03880825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038813569, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:08.372" endtime="20201110 08:37:08.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.385" endtime="20201110 08:37:08.389"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.035" endtime="20201110 08:37:08.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.030" endtime="20201110 08:37:08.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.402" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:08.399" endtime="20201110 08:37:08.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.410" level="INFO">VALUE: [{'time': 0.03880825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038813569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3189999999966875e-06, 'source_diff': 5.3189999999966875e-06}, {'time': 0.038822472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.902999999997607e-06, 'source_diff': 8.902999999997607e-06}, {'time': 0.038828097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.0388335, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.403000000001046e-06, 'source_diff': 5.403000000001046e-06}, {'time': 0.038841014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.514000000000132e-06, 'source_diff': 7.514000000000132e-06}, {'time': 0.038844417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.038851375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.958000000001352e-06, 'source_diff': 6.958000000001352e-06}, {'time': 0.038856014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.639000000000726e-06, 'source_diff': 4.639000000000726e-06}, {'time': 0.038858861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.847000000000266e-06, 'source_diff': 2.847000000000266e-06}, {'time': 0.038863917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.055999999996341e-06, 'source_diff': 5.055999999996341e-06}, {'time': 0.038872, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.038878611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.038883681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.038888528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.038893514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.985999999998492e-06, 'source_diff': 4.985999999998492e-06}, {'time': 0.038902111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.597000000006016e-06, 'source_diff': 8.597000000006016e-06}, {'time': 0.038907417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.305999999996591e-06, 'source_diff': 5.305999999996591e-06}, {'time': 0.038916375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.958000000003352e-06, 'source_diff': 8.958000000003352e-06}, {'time': 0.038922444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.038929278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.833999999997231e-06, 'source_diff': 6.833999999997231e-06}, {'time': 0.038937569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.291000000000548e-06, 'source_diff': 8.291000000000548e-06}, {'time': 0.03894075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1810000000048744e-06, 'source_diff': 3.1810000000048744e-06}, {'time': 0.038945292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.541999999996271e-06, 'source_diff': 4.541999999996271e-06}, {'time': 0.038953792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.500000000001562e-06, 'source_diff': 8.500000000001562e-06}, {'time': 0.038957861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.038960264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.038967, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.038973736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.038979389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.653000000001296e-06, 'source_diff': 5.653000000001296e-06}, {'time': 0.038985764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.374999999995967e-06, 'source_diff': 6.374999999995967e-06}, {'time': 0.038990194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429999999999712e-06, 'source_diff': 4.429999999999712e-06}, {'time': 0.038997458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.263999999999882e-06, 'source_diff': 7.263999999999882e-06}, {'time': 0.039001764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.30600000000253e-06, 'source_diff': 4.30600000000253e-06}, {'time': 0.039004264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.039011111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.847000000004266e-06, 'source_diff': 6.847000000004266e-06}, {'time': 0.039018403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.2919999999990215e-06, 'source_diff': 7.2919999999990215e-06}, {'time': 0.03902525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.8469999999973274e-06, 'source_diff': 6.8469999999973274e-06}, {'time': 0.039031431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.181000000000936e-06, 'source_diff': 6.181000000000936e-06}, {'time': 0.039036403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.971999999998922e-06, 'source_diff': 4.971999999998922e-06}, {'time': 0.039039792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.039042306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.51400000000207e-06, 'source_diff': 2.51400000000207e-06}, {'time': 0.039049931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000004156e-06, 'source_diff': 7.625000000004156e-06}, {'time': 0.039056222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.290999999998548e-06, 'source_diff': 6.290999999998548e-06}, {'time': 0.039060194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.039064653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.458999999998325e-06, 'source_diff': 4.458999999998325e-06}, {'time': 0.039067847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.1940000000049706e-06, 'source_diff': 3.1940000000049706e-06}, {'time': 0.039076625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.777999999994013e-06, 'source_diff': 8.777999999994013e-06}, {'time': 0.039083806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.181000000001936e-06, 'source_diff': 7.181000000001936e-06}, {'time': 0.039087097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.2910000000024864e-06, 'source_diff': 3.2910000000024864e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:08.404" endtime="20201110 08:37:08.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.393" endtime="20201110 08:37:08.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:08.445" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:08.415" endtime="20201110 08:37:08.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.455" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:08.452" endtime="20201110 08:37:08.455"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.462" level="INFO">VALUE: {'sourceeventsource_diff': [0, 5.3189999999966875e-06, 8.902999999997607e-06, 5.625000000002156e-06, 5.403000000001046e-06, 7.514000000000132e-06, 3.4029999999990457e-06, 6.958000000001352e-06, 4.639000000000726e-06, 2.847000000000266e-06, 5.055999999996341e-06, 8.082999999999008e-06, 6.611000000003586e-06, 5.07000000000285e-06, 4.846999999995327e-06, 4.985999999998492e-06, 8.597000000006016e-06, 5.305999999996591e-06, 8.958000000003352e-06, 6.0689999999974376e-06, 6.833999999997231e-06, 8.291000000000548e-06, 3.1810000000048744e-06, 4.541999999996271e-06, 8.500000000001562e-06, 4.069000000002376e-06, 2.4029999999980456e-06, 6.736000000000242e-06, 6.736000000000242e-06, 5.653000000001296e-06, 6.374999999995967e-06, 4.429999999999712e-06, 7.263999999999882e-06, 4.30600000000253e-06, 2.4999999999955613e-06, 6.847000000004266e-06, 7.2919999999990215e-06, 6.8469999999973274e-06, 6.181000000000936e-06, 4.971999999998922e-06, 3.3889999999994758e-06, 2.51400000000207e-06, 7.625000000004156e-06, 6.290999999998548e-06, 3.971999999997922e-06, 4.458999999998325e-06, 3.1940000000049706e-06, 8.777999999994013e-06, 7.181000000001936e-06, 3.2910000000024864e-06], 'diff': [0, 5.3189999999966875e-06, 8.902999999997607e-06, 5.625000000002156e-06, 5.403000000001046e-06, 7.514000000000132e-06, 3.4029999999990457e-06, 6.958000000001352e-06, 4.639000000000726e-06, 2.847000000000266e-06, 5.055999999996341e-06, 8.082999999999008e-06, 6.611000000003586e-06, 5.07000000000285e-06, 4.846999999995327e-06, 4.985999999998492e-06, 8.597000000006016e-06, 5.305999999996591e-06, 8.958000000003352e-06, 6.0689999999974376e-06, 6.833999999997231e-06, 8.291000000000548e-06, 3.1810000000048744e-06, 4.541999999996271e-06, 8.500000000001562e-06, 4.069000000002376e-06, 2.4029999999980456e-06, 6.736000000000242e-06, 6.736000000000242e-06, 5.653000000001296e-06, 6.374999999995967e-06, 4.429999999999712e-06, 7.263999999999882e-06, 4.30600000000253e-06, 2.4999999999955613e-06, 6.847000000004266e-06, 7.2919999999990215e-06, 6.8469999999973274e-06, 6.181000000000936e-06, 4.971999999998922e-06, 3.3889999999994758e-06, 2.51400000000207e-06, 7.625000000004156e-06, 6.290999999998548e-06, 3.971999999997922e-06, 4.458999999998325e-06, 3.1940000000049706e-06, 8.777999999994013e-06, 7.181000000001936e-06, 3.2910000000024864e-06], 'time': [0.03880825, 0.038813569, 0.038822472, 0.038828097, 0.0388335, 0.038841014, 0.038844417, 0.038851375, 0.038856014, 0.038858861, 0.038863917, 0.038872, 0.038878611, 0.038883681, 0.038888528, 0.038893514, 0.038902111, 0.038907417, 0.038916375, 0.038922444, 0.038929278, 0.038937569, 0.03894075, 0.038945292, 0.038953792, 0.038957861, 0.038960264, 0.038967, 0.038973736, 0.038979389, 0.038985764, 0.038990194, 0.038997458, 0.039001764, 0.039004264, 0.039011111, 0.039018403, 0.03902525, 0.039031431, 0.039036403, 0.039039792, 0.039042306, 0.039049931, 0.039056222, 0.039060194, 0.039064653, 0.039067847, 0.039076625, 0.039083806, 0.039087097]}</msg>
<status status="PASS" starttime="20201110 08:37:08.457" endtime="20201110 08:37:08.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.447" endtime="20201110 08:37:08.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:08.474" level="INFO">${RESULT} = [{'time': 0.038813569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3189999999966875e-06, 'source_diff': 5.3189999999966875e-06}, {'time': 0.038828097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:08.466" endtime="20201110 08:37:08.474"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:08.492" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:08.476" endtime="20201110 08:37:08.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.502" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:08.500" endtime="20201110 08:37:08.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.507" level="INFO">VALUE: [5.3189999999966875e-06, 5.625000000002156e-06, 7.514000000000132e-06, 6.958000000001352e-06, 2.847000000000266e-06, 8.082999999999008e-06, 5.07000000000285e-06, 4.985999999998492e-06, 5.305999999996591e-06, 6.0689999999974376e-06, 8.291000000000548e-06, 4.541999999996271e-06, 4.069000000002376e-06, 6.736000000000242e-06, 5.653000000001296e-06, 4.429999999999712e-06, 4.30600000000253e-06, 6.847000000004266e-06, 6.8469999999973274e-06, 4.971999999998922e-06, 2.51400000000207e-06, 6.290999999998548e-06, 4.458999999998325e-06, 8.777999999994013e-06, 3.2910000000024864e-06]</msg>
<status status="PASS" starttime="20201110 08:37:08.505" endtime="20201110 08:37:08.509"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.494" endtime="20201110 08:37:08.510"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.517" endtime="20201110 08:37:08.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:08.526" endtime="20201110 08:37:08.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.521" endtime="20201110 08:37:08.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.512" endtime="20201110 08:37:08.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:07.978" endtime="20201110 08:37:08.552"></status>
</kw>
<msg timestamp="20201110 08:37:08.552" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.576" endtime="20201110 08:37:08.589"></status>
</kw>
<msg timestamp="20201110 08:37:08.590" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.570" endtime="20201110 08:37:08.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.597" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:08.592" endtime="20201110 08:37:08.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.599" endtime="20201110 08:37:08.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.562" endtime="20201110 08:37:08.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.557" endtime="20201110 08:37:08.606"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.623" endtime="20201110 08:37:08.942"></status>
</kw>
<msg timestamp="20201110 08:37:08.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040752569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040757319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.619" endtime="20201110 08:37:08.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040752569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040757319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:08.949" endtime="20201110 08:37:08.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:08.962" endtime="20201110 08:37:08.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.612" endtime="20201110 08:37:08.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.607" endtime="20201110 08:37:08.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.979" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:08.976" endtime="20201110 08:37:08.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:08.987" level="INFO">VALUE: [{'time': 0.040752569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040757319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.040763264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.945000000000256e-06, 'source_diff': 5.945000000000256e-06}, {'time': 0.040771375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.110999999998147e-06, 'source_diff': 8.110999999998147e-06}, {'time': 0.040776625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.2499999999983116e-06, 'source_diff': 5.2499999999983116e-06}, {'time': 0.040785278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.653000000004296e-06, 'source_diff': 8.653000000004296e-06}, {'time': 0.040790875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.596999999996077e-06, 'source_diff': 5.596999999996077e-06}, {'time': 0.040796625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7500000000057505e-06, 'source_diff': 5.7500000000057505e-06}, {'time': 0.040800014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.040805333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.3189999999966875e-06, 'source_diff': 5.3189999999966875e-06}, {'time': 0.040811944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.611000000003586e-06, 'source_diff': 6.611000000003586e-06}, {'time': 0.040815667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.7229999999971453e-06, 'source_diff': 3.7229999999971453e-06}, {'time': 0.040821306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.639000000001726e-06, 'source_diff': 5.639000000001726e-06}, {'time': 0.040827194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8879999999955634e-06, 'source_diff': 5.8879999999955634e-06}, {'time': 0.040830986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.79200000000246e-06, 'source_diff': 3.79200000000246e-06}, {'time': 0.040837389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.040840028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.6389999999987257e-06, 'source_diff': 2.6389999999987257e-06}, {'time': 0.040845528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.499999999998562e-06, 'source_diff': 5.499999999998562e-06}, {'time': 0.040853486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.040861111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.624999999997217e-06, 'source_diff': 7.624999999997217e-06}, {'time': 0.040868181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.07000000000485e-06, 'source_diff': 7.07000000000485e-06}, {'time': 0.040873806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.624999999995217e-06, 'source_diff': 5.624999999995217e-06}, {'time': 0.040881986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.180000000003462e-06, 'source_diff': 8.180000000003462e-06}, {'time': 0.040887514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.527999999997701e-06, 'source_diff': 5.527999999997701e-06}, {'time': 0.040891486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.971999999997922e-06, 'source_diff': 3.971999999997922e-06}, {'time': 0.040896111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.040899833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7219999999976716e-06, 'source_diff': 3.7219999999976716e-06}, {'time': 0.040907014, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.181000000001936e-06, 'source_diff': 7.181000000001936e-06}, {'time': 0.040911875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.861000000001836e-06, 'source_diff': 4.861000000001836e-06}, {'time': 0.040915264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.3889999999994758e-06, 'source_diff': 3.3889999999994758e-06}, {'time': 0.040917569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.305000000001056e-06, 'source_diff': 2.305000000001056e-06}, {'time': 0.040924917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.347999999997301e-06, 'source_diff': 7.347999999997301e-06}, {'time': 0.040930597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.680000000000962e-06, 'source_diff': 5.680000000000962e-06}, {'time': 0.040938556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.959000000001826e-06, 'source_diff': 7.959000000001826e-06}, {'time': 0.040945833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.276999999999978e-06, 'source_diff': 7.276999999999978e-06}, {'time': 0.040951458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.040953986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.527999999994701e-06, 'source_diff': 2.527999999994701e-06}, {'time': 0.040959056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.07000000000285e-06, 'source_diff': 5.07000000000285e-06}, {'time': 0.040968222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.165999999997954e-06, 'source_diff': 9.165999999997954e-06}, {'time': 0.040972194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9720000000048605e-06, 'source_diff': 3.9720000000048605e-06}, {'time': 0.040974694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4999999999955613e-06, 'source_diff': 2.4999999999955613e-06}, {'time': 0.040976875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1810000000038743e-06, 'source_diff': 2.1810000000038743e-06}, {'time': 0.040981958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.082999999996007e-06, 'source_diff': 5.082999999996007e-06}, {'time': 0.040989125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.167000000002366e-06, 'source_diff': 7.167000000002366e-06}, {'time': 0.040995194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.0689999999974376e-06, 'source_diff': 6.0689999999974376e-06}, {'time': 0.0409975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.30600000000053e-06, 'source_diff': 2.30600000000053e-06}, {'time': 0.041, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.5000000000025002e-06, 'source_diff': 2.5000000000025002e-06}, {'time': 0.041007958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.957999999995413e-06, 'source_diff': 7.957999999995413e-06}, {'time': 0.041011167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.209000000004014e-06, 'source_diff': 3.209000000004014e-06}, {'time': 0.041018778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.6109999999976474e-06, 'source_diff': 7.6109999999976474e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:08.981" endtime="20201110 08:37:08.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.970" endtime="20201110 08:37:08.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:09.029" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:08.998" endtime="20201110 08:37:09.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.039" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:09.036" endtime="20201110 08:37:09.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.046" level="INFO">VALUE: {'sourceeventsource_diff': [0, 4.7499999999978115e-06, 5.945000000000256e-06, 8.110999999998147e-06, 5.2499999999983116e-06, 8.653000000004296e-06, 5.596999999996077e-06, 5.7500000000057505e-06, 3.3889999999994758e-06, 5.3189999999966875e-06, 6.611000000003586e-06, 3.7229999999971453e-06, 5.639000000001726e-06, 5.8879999999955634e-06, 3.79200000000246e-06, 6.403000000002046e-06, 2.6389999999987257e-06, 5.499999999998562e-06, 7.958000000002352e-06, 7.624999999997217e-06, 7.07000000000485e-06, 5.624999999995217e-06, 8.180000000003462e-06, 5.527999999997701e-06, 3.971999999997922e-06, 4.625000000001156e-06, 3.7219999999976716e-06, 7.181000000001936e-06, 4.861000000001836e-06, 3.3889999999994758e-06, 2.305000000001056e-06, 7.347999999997301e-06, 5.680000000000962e-06, 7.959000000001826e-06, 7.276999999999978e-06, 5.625000000002156e-06, 2.527999999994701e-06, 5.07000000000285e-06, 9.165999999997954e-06, 3.9720000000048605e-06, 2.4999999999955613e-06, 2.1810000000038743e-06, 5.082999999996007e-06, 7.167000000002366e-06, 6.0689999999974376e-06, 2.30600000000053e-06, 2.5000000000025002e-06, 7.957999999995413e-06, 3.209000000004014e-06, 7.6109999999976474e-06], 'diff': [0, 4.7499999999978115e-06, 5.945000000000256e-06, 8.110999999998147e-06, 5.2499999999983116e-06, 8.653000000004296e-06, 5.596999999996077e-06, 5.7500000000057505e-06, 3.3889999999994758e-06, 5.3189999999966875e-06, 6.611000000003586e-06, 3.7229999999971453e-06, 5.639000000001726e-06, 5.8879999999955634e-06, 3.79200000000246e-06, 6.403000000002046e-06, 2.6389999999987257e-06, 5.499999999998562e-06, 7.958000000002352e-06, 7.624999999997217e-06, 7.07000000000485e-06, 5.624999999995217e-06, 8.180000000003462e-06, 5.527999999997701e-06, 3.971999999997922e-06, 4.625000000001156e-06, 3.7219999999976716e-06, 7.181000000001936e-06, 4.861000000001836e-06, 3.3889999999994758e-06, 2.305000000001056e-06, 7.347999999997301e-06, 5.680000000000962e-06, 7.959000000001826e-06, 7.276999999999978e-06, 5.625000000002156e-06, 2.527999999994701e-06, 5.07000000000285e-06, 9.165999999997954e-06, 3.9720000000048605e-06, 2.4999999999955613e-06, 2.1810000000038743e-06, 5.082999999996007e-06, 7.167000000002366e-06, 6.0689999999974376e-06, 2.30600000000053e-06, 2.5000000000025002e-06, 7.957999999995413e-06, 3.209000000004014e-06, 7.6109999999976474e-06], 'time': [0.040752569, 0.040757319, 0.040763264, 0.040771375, 0.040776625, 0.040785278, 0.040790875, 0.040796625, 0.040800014, 0.040805333, 0.040811944, 0.040815667, 0.040821306, 0.040827194, 0.040830986, 0.040837389, 0.040840028, 0.040845528, 0.040853486, 0.040861111, 0.040868181, 0.040873806, 0.040881986, 0.040887514, 0.040891486, 0.040896111, 0.040899833, 0.040907014, 0.040911875, 0.040915264, 0.040917569, 0.040924917, 0.040930597, 0.040938556, 0.040945833, 0.040951458, 0.040953986, 0.040959056, 0.040968222, 0.040972194, 0.040974694, 0.040976875, 0.040981958, 0.040989125, 0.040995194, 0.0409975, 0.041, 0.041007958, 0.041011167, 0.041018778]}</msg>
<status status="PASS" starttime="20201110 08:37:09.041" endtime="20201110 08:37:09.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.031" endtime="20201110 08:37:09.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.057" level="INFO">${RESULT} = [{'time': 0.040757319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7499999999978115e-06, 'source_diff': 4.7499999999978115e-06}, {'time': 0.040771375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:09.050" endtime="20201110 08:37:09.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:09.076" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:09.060" endtime="20201110 08:37:09.077"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.087" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:09.084" endtime="20201110 08:37:09.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.092" level="INFO">VALUE: [4.7499999999978115e-06, 8.110999999998147e-06, 8.653000000004296e-06, 5.7500000000057505e-06, 5.3189999999966875e-06, 3.7229999999971453e-06, 5.8879999999955634e-06, 6.403000000002046e-06, 5.499999999998562e-06, 7.624999999997217e-06, 5.624999999995217e-06, 5.527999999997701e-06, 4.625000000001156e-06, 7.181000000001936e-06, 3.3889999999994758e-06, 7.347999999997301e-06, 7.959000000001826e-06, 5.625000000002156e-06, 5.07000000000285e-06, 3.9720000000048605e-06, 2.1810000000038743e-06, 7.167000000002366e-06, 2.30600000000053e-06, 7.957999999995413e-06, 7.6109999999976474e-06]</msg>
<status status="PASS" starttime="20201110 08:37:09.089" endtime="20201110 08:37:09.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.078" endtime="20201110 08:37:09.095"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.101" endtime="20201110 08:37:09.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.109" endtime="20201110 08:37:09.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.105" endtime="20201110 08:37:09.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.096" endtime="20201110 08:37:09.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:08.553" endtime="20201110 08:37:09.135"></status>
</kw>
<msg timestamp="20201110 08:37:09.136" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.157" endtime="20201110 08:37:09.171"></status>
</kw>
<msg timestamp="20201110 08:37:09.173" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.152" endtime="20201110 08:37:09.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.181" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.176" endtime="20201110 08:37:09.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.183" endtime="20201110 08:37:09.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.145" endtime="20201110 08:37:09.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.140" endtime="20201110 08:37:09.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.211" endtime="20201110 08:37:09.532"></status>
</kw>
<msg timestamp="20201110 08:37:09.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038552694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038561653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.207" endtime="20201110 08:37:09.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038552694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038561653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.539" endtime="20201110 08:37:09.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.552" endtime="20201110 08:37:09.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.199" endtime="20201110 08:37:09.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.193" endtime="20201110 08:37:09.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.568" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:09.566" endtime="20201110 08:37:09.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.577" level="INFO">VALUE: [{'time': 0.038552694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038561653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.038568764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.110999999997147e-06, 'source_diff': 7.110999999997147e-06}, {'time': 0.038577903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.038583847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.944000000000782e-06, 'source_diff': 5.944000000000782e-06}, {'time': 0.038589375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.52800000000464e-06, 'source_diff': 5.52800000000464e-06}, {'time': 0.038598444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.069000000000438e-06, 'source_diff': 9.069000000000438e-06}, {'time': 0.038604583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.138999999995287e-06, 'source_diff': 6.138999999995287e-06}, {'time': 0.038608403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.8200000000016e-06, 'source_diff': 3.8200000000016e-06}, {'time': 0.038610764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.360999999999336e-06, 'source_diff': 2.360999999999336e-06}, {'time': 0.038616278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.038622028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7500000000057505e-06, 'source_diff': 5.7500000000057505e-06}, {'time': 0.038625431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.038632153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.038640111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.957999999995413e-06, 'source_diff': 7.957999999995413e-06}, {'time': 0.038642972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.860999999999836e-06, 'source_diff': 2.860999999999836e-06}, {'time': 0.038649694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.722000000000672e-06, 'source_diff': 6.722000000000672e-06}, {'time': 0.038654653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.038663056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.038672208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.151999999998384e-06, 'source_diff': 9.151999999998384e-06}, {'time': 0.038681347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 9.138999999998287e-06, 'source_diff': 9.138999999998287e-06}, {'time': 0.038690375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.028000000001202e-06, 'source_diff': 9.028000000001202e-06}, {'time': 0.038698333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.958000000002352e-06, 'source_diff': 7.958000000002352e-06}, {'time': 0.038703625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.291999999997021e-06, 'source_diff': 5.291999999997021e-06}, {'time': 0.038708917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.29200000000396e-06, 'source_diff': 5.29200000000396e-06}, {'time': 0.038717097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.179999999996523e-06, 'source_diff': 8.179999999996523e-06}, {'time': 0.038724722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.625000000004156e-06, 'source_diff': 7.625000000004156e-06}, {'time': 0.038731792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.069999999997911e-06, 'source_diff': 7.069999999997911e-06}, {'time': 0.038739986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.193999999996093e-06, 'source_diff': 8.193999999996093e-06}, {'time': 0.038745833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.847000000003266e-06, 'source_diff': 5.847000000003266e-06}, {'time': 0.038750458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.625000000001156e-06, 'source_diff': 4.625000000001156e-06}, {'time': 0.038754806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.34800000000124e-06, 'source_diff': 4.34800000000124e-06}, {'time': 0.038761708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.9019999999961335e-06, 'source_diff': 6.9019999999961335e-06}, {'time': 0.038767333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.625000000002156e-06, 'source_diff': 5.625000000002156e-06}, {'time': 0.038773194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.038775361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1670000000043044e-06, 'source_diff': 2.1670000000043044e-06}, {'time': 0.038777764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.4029999999980456e-06, 'source_diff': 2.4029999999980456e-06}, {'time': 0.038780389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.6249999999991558e-06, 'source_diff': 2.6249999999991558e-06}, {'time': 0.038783806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4169999999986156e-06, 'source_diff': 3.4169999999986156e-06}, {'time': 0.038792417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.038797042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.624999999994217e-06, 'source_diff': 4.624999999994217e-06}, {'time': 0.038799333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2910000000014863e-06, 'source_diff': 2.2910000000014863e-06}, {'time': 0.038807528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.195000000002506e-06, 'source_diff': 8.195000000002506e-06}, {'time': 0.038813708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.180000000001462e-06, 'source_diff': 6.180000000001462e-06}, {'time': 0.038816, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.29200000000096e-06, 'source_diff': 2.29200000000096e-06}, {'time': 0.038818167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1669999999973655e-06, 'source_diff': 2.1669999999973655e-06}, {'time': 0.038826681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.038834764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.082999999999008e-06, 'source_diff': 8.082999999999008e-06}, {'time': 0.038840431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.667000000000866e-06, 'source_diff': 5.667000000000866e-06}, {'time': 0.038845222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790999999997048e-06, 'source_diff': 4.790999999997048e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:09.571" endtime="20201110 08:37:09.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.560" endtime="20201110 08:37:09.581"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:09.613" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:09.583" endtime="20201110 08:37:09.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.623" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:09.620" endtime="20201110 08:37:09.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.630" level="INFO">VALUE: {'sourceeventsource_diff': [0, 8.959000000002826e-06, 7.110999999997147e-06, 9.138999999998287e-06, 5.944000000000782e-06, 5.52800000000464e-06, 9.069000000000438e-06, 6.138999999995287e-06, 3.8200000000016e-06, 2.360999999999336e-06, 5.5139999999981315e-06, 5.7500000000057505e-06, 3.4029999999990457e-06, 6.722000000000672e-06, 7.957999999995413e-06, 2.860999999999836e-06, 6.722000000000672e-06, 4.9589999999988255e-06, 8.403000000004046e-06, 9.151999999998384e-06, 9.138999999998287e-06, 9.028000000001202e-06, 7.958000000002352e-06, 5.291999999997021e-06, 5.29200000000396e-06, 8.179999999996523e-06, 7.625000000004156e-06, 7.069999999997911e-06, 8.193999999996093e-06, 5.847000000003266e-06, 4.625000000001156e-06, 4.34800000000124e-06, 6.9019999999961335e-06, 5.625000000002156e-06, 5.860999999995897e-06, 2.1670000000043044e-06, 2.4029999999980456e-06, 2.6249999999991558e-06, 3.4169999999986156e-06, 8.611000000005586e-06, 4.624999999994217e-06, 2.2910000000014863e-06, 8.195000000002506e-06, 6.180000000001462e-06, 2.29200000000096e-06, 2.1669999999973655e-06, 8.514000000001132e-06, 8.082999999999008e-06, 5.667000000000866e-06, 4.790999999997048e-06], 'diff': [0, 8.959000000002826e-06, 7.110999999997147e-06, 9.138999999998287e-06, 5.944000000000782e-06, 5.52800000000464e-06, 9.069000000000438e-06, 6.138999999995287e-06, 3.8200000000016e-06, 2.360999999999336e-06, 5.5139999999981315e-06, 5.7500000000057505e-06, 3.4029999999990457e-06, 6.722000000000672e-06, 7.957999999995413e-06, 2.860999999999836e-06, 6.722000000000672e-06, 4.9589999999988255e-06, 8.403000000004046e-06, 9.151999999998384e-06, 9.138999999998287e-06, 9.028000000001202e-06, 7.958000000002352e-06, 5.291999999997021e-06, 5.29200000000396e-06, 8.179999999996523e-06, 7.625000000004156e-06, 7.069999999997911e-06, 8.193999999996093e-06, 5.847000000003266e-06, 4.625000000001156e-06, 4.34800000000124e-06, 6.9019999999961335e-06, 5.625000000002156e-06, 5.860999999995897e-06, 2.1670000000043044e-06, 2.4029999999980456e-06, 2.6249999999991558e-06, 3.4169999999986156e-06, 8.611000000005586e-06, 4.624999999994217e-06, 2.2910000000014863e-06, 8.195000000002506e-06, 6.180000000001462e-06, 2.29200000000096e-06, 2.1669999999973655e-06, 8.514000000001132e-06, 8.082999999999008e-06, 5.667000000000866e-06, 4.790999999997048e-06], 'time': [0.038552694, 0.038561653, 0.038568764, 0.038577903, 0.038583847, 0.038589375, 0.038598444, 0.038604583, 0.038608403, 0.038610764, 0.038616278, 0.038622028, 0.038625431, 0.038632153, 0.038640111, 0.038642972, 0.038649694, 0.038654653, 0.038663056, 0.038672208, 0.038681347, 0.038690375, 0.038698333, 0.038703625, 0.038708917, 0.038717097, 0.038724722, 0.038731792, 0.038739986, 0.038745833, 0.038750458, 0.038754806, 0.038761708, 0.038767333, 0.038773194, 0.038775361, 0.038777764, 0.038780389, 0.038783806, 0.038792417, 0.038797042, 0.038799333, 0.038807528, 0.038813708, 0.038816, 0.038818167, 0.038826681, 0.038834764, 0.038840431, 0.038845222]}</msg>
<status status="PASS" starttime="20201110 08:37:09.625" endtime="20201110 08:37:09.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.615" endtime="20201110 08:37:09.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:09.642" level="INFO">${RESULT} = [{'time': 0.038561653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.959000000002826e-06, 'source_diff': 8.959000000002826e-06}, {'time': 0.038577903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:09.635" endtime="20201110 08:37:09.642"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:09.660" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:09.644" endtime="20201110 08:37:09.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.671" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:09.669" endtime="20201110 08:37:09.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.676" level="INFO">VALUE: [8.959000000002826e-06, 9.138999999998287e-06, 5.52800000000464e-06, 6.138999999995287e-06, 2.360999999999336e-06, 5.7500000000057505e-06, 6.722000000000672e-06, 2.860999999999836e-06, 4.9589999999988255e-06, 9.151999999998384e-06, 9.028000000001202e-06, 5.291999999997021e-06, 8.179999999996523e-06, 7.069999999997911e-06, 5.847000000003266e-06, 4.34800000000124e-06, 5.625000000002156e-06, 2.1670000000043044e-06, 2.6249999999991558e-06, 8.611000000005586e-06, 2.2910000000014863e-06, 6.180000000001462e-06, 2.1669999999973655e-06, 8.082999999999008e-06, 4.790999999997048e-06]</msg>
<status status="PASS" starttime="20201110 08:37:09.673" endtime="20201110 08:37:09.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.662" endtime="20201110 08:37:09.679"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.686" endtime="20201110 08:37:09.688"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:09.694" endtime="20201110 08:37:09.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.690" endtime="20201110 08:37:09.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.681" endtime="20201110 08:37:09.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.137" endtime="20201110 08:37:09.720"></status>
</kw>
<msg timestamp="20201110 08:37:09.720" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.745" endtime="20201110 08:37:09.759"></status>
</kw>
<msg timestamp="20201110 08:37:09.760" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.737" endtime="20201110 08:37:09.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:09.766" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:09.762" endtime="20201110 08:37:09.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.768" endtime="20201110 08:37:09.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.730" endtime="20201110 08:37:09.774"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.725" endtime="20201110 08:37:09.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:09.792" endtime="20201110 08:37:10.104"></status>
</kw>
<msg timestamp="20201110 08:37:10.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042099528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:09.789" endtime="20201110 08:37:10.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042099528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.110" endtime="20201110 08:37:10.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.123" endtime="20201110 08:37:10.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.781" endtime="20201110 08:37:10.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.777" endtime="20201110 08:37:10.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-uncompressed</arg>
<arg>${RESULT['data']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.139" level="INFO">NAME: debug-uncompressed</msg>
<status status="PASS" starttime="20201110 08:37:10.137" endtime="20201110 08:37:10.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.147" level="INFO">VALUE: [{'time': 0.042099528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.042114556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.402999999997107e-06, 'source_diff': 8.402999999997107e-06}, {'time': 0.042121667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.111000000004086e-06, 'source_diff': 7.111000000004086e-06}, {'time': 0.04212725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.582999999996507e-06, 'source_diff': 5.582999999996507e-06}, {'time': 0.042131236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.9860000000044304e-06, 'source_diff': 3.9860000000044304e-06}, {'time': 0.042139833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.596999999999078e-06, 'source_diff': 8.596999999999078e-06}, {'time': 0.042148792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.958999999995887e-06, 'source_diff': 8.958999999995887e-06}, {'time': 0.042152417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.625000000000156e-06, 'source_diff': 3.625000000000156e-06}, {'time': 0.042154819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.402000000005511e-06, 'source_diff': 2.402000000005511e-06}, {'time': 0.042158222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.4029999999990457e-06, 'source_diff': 3.4029999999990457e-06}, {'time': 0.042166847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.624999999998217e-06, 'source_diff': 8.624999999998217e-06}, {'time': 0.042171028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.1809999999989356e-06, 'source_diff': 4.1809999999989356e-06}, {'time': 0.042178875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.846999999998328e-06, 'source_diff': 7.846999999998328e-06}, {'time': 0.042184056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.180999999999936e-06, 'source_diff': 5.180999999999936e-06}, {'time': 0.042187917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.861000000000836e-06, 'source_diff': 3.861000000000836e-06}, {'time': 0.042191319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.401999999999572e-06, 'source_diff': 3.401999999999572e-06}, {'time': 0.042193597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.042198556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.9589999999988255e-06, 'source_diff': 4.9589999999988255e-06}, {'time': 0.042204069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.512999999998658e-06, 'source_diff': 5.512999999998658e-06}, {'time': 0.042208472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.403000000000046e-06, 'source_diff': 4.403000000000046e-06}, {'time': 0.042217542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.069999999999911e-06, 'source_diff': 9.069999999999911e-06}, {'time': 0.042219736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.1940000000039706e-06, 'source_diff': 2.1940000000039706e-06}, {'time': 0.042226375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.638999999995787e-06, 'source_diff': 6.638999999995787e-06}, {'time': 0.042228653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.27800000000139e-06, 'source_diff': 2.27800000000139e-06}, {'time': 0.042237056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.403000000004046e-06, 'source_diff': 8.403000000004046e-06}, {'time': 0.042239792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.7359999999962414e-06, 'source_diff': 2.7359999999962414e-06}, {'time': 0.042247097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.304999999999118e-06, 'source_diff': 7.304999999999118e-06}, {'time': 0.042250819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 3.7220000000046105e-06, 'source_diff': 3.7220000000046105e-06}, {'time': 0.042253347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.527999999994701e-06, 'source_diff': 2.527999999994701e-06}, {'time': 0.042261958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 8.611000000005586e-06, 'source_diff': 8.611000000005586e-06}, {'time': 0.042264694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7359999999962414e-06, 'source_diff': 2.7359999999962414e-06}, {'time': 0.042270208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.5139999999981315e-06, 'source_diff': 5.5139999999981315e-06}, {'time': 0.042276944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.736000000000242e-06, 'source_diff': 6.736000000000242e-06}, {'time': 0.042279681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 2.737000000002654e-06, 'source_diff': 2.737000000002654e-06}, {'time': 0.042282417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7360000000031803e-06, 'source_diff': 2.7360000000031803e-06}, {'time': 0.042290417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 7.999999999994123e-06, 'source_diff': 7.999999999994123e-06}, {'time': 0.042293, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.583000000000446e-06, 'source_diff': 2.583000000000446e-06}, {'time': 0.042299403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 6.403000000002046e-06, 'source_diff': 6.403000000002046e-06}, {'time': 0.042307917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.514000000001132e-06, 'source_diff': 8.514000000001132e-06}, {'time': 0.042311986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.069000000002376e-06, 'source_diff': 4.069000000002376e-06}, {'time': 0.042317958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.971999999999922e-06, 'source_diff': 5.971999999999922e-06}, {'time': 0.042323347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 5.388999999994537e-06, 'source_diff': 5.388999999994537e-06}, {'time': 0.042327875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.52800000000364e-06, 'source_diff': 4.52800000000364e-06}, {'time': 0.042332486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.611000000001586e-06, 'source_diff': 4.611000000001586e-06}, {'time': 0.042337889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.402999999994107e-06, 'source_diff': 5.402999999994107e-06}, {'time': 0.042342736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.847000000002266e-06, 'source_diff': 4.847000000002266e-06}, {'time': 0.042350375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.639000000003726e-06, 'source_diff': 7.639000000003726e-06}, {'time': 0.042355222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 4.846999999995327e-06, 'source_diff': 4.846999999995327e-06}, {'time': 0.042359306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.08400000000142e-06, 'source_diff': 4.08400000000142e-06}]</msg>
<status status="PASS" starttime="20201110 08:37:10.142" endtime="20201110 08:37:10.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.131" endtime="20201110 08:37:10.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug-compressed}</var>
</assign>
<msg timestamp="20201110 08:37:10.182" level="INFO">${debug-compressed} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:10.153" endtime="20201110 08:37:10.182"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>debug-compressed</arg>
<arg>${debug-compressed}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.191" level="INFO">NAME: debug-compressed</msg>
<status status="PASS" starttime="20201110 08:37:10.189" endtime="20201110 08:37:10.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.198" level="INFO">VALUE: {'sourceeventsource_diff': [0, 6.625000000003156e-06, 8.402999999997107e-06, 7.111000000004086e-06, 5.582999999996507e-06, 3.9860000000044304e-06, 8.596999999999078e-06, 8.958999999995887e-06, 3.625000000000156e-06, 2.402000000005511e-06, 3.4029999999990457e-06, 8.624999999998217e-06, 4.1809999999989356e-06, 7.846999999998328e-06, 5.180999999999936e-06, 3.861000000000836e-06, 3.401999999999572e-06, 2.27800000000139e-06, 4.9589999999988255e-06, 5.512999999998658e-06, 4.403000000000046e-06, 9.069999999999911e-06, 2.1940000000039706e-06, 6.638999999995787e-06, 2.27800000000139e-06, 8.403000000004046e-06, 2.7359999999962414e-06, 7.304999999999118e-06, 3.7220000000046105e-06, 2.527999999994701e-06, 8.611000000005586e-06, 2.7359999999962414e-06, 5.5139999999981315e-06, 6.736000000000242e-06, 2.737000000002654e-06, 2.7360000000031803e-06, 7.999999999994123e-06, 2.583000000000446e-06, 6.403000000002046e-06, 8.514000000001132e-06, 4.069000000002376e-06, 5.971999999999922e-06, 5.388999999994537e-06, 4.52800000000364e-06, 4.611000000001586e-06, 5.402999999994107e-06, 4.847000000002266e-06, 7.639000000003726e-06, 4.846999999995327e-06, 4.08400000000142e-06], 'diff': [0, 6.625000000003156e-06, 8.402999999997107e-06, 7.111000000004086e-06, 5.582999999996507e-06, 3.9860000000044304e-06, 8.596999999999078e-06, 8.958999999995887e-06, 3.625000000000156e-06, 2.402000000005511e-06, 3.4029999999990457e-06, 8.624999999998217e-06, 4.1809999999989356e-06, 7.846999999998328e-06, 5.180999999999936e-06, 3.861000000000836e-06, 3.401999999999572e-06, 2.27800000000139e-06, 4.9589999999988255e-06, 5.512999999998658e-06, 4.403000000000046e-06, 9.069999999999911e-06, 2.1940000000039706e-06, 6.638999999995787e-06, 2.27800000000139e-06, 8.403000000004046e-06, 2.7359999999962414e-06, 7.304999999999118e-06, 3.7220000000046105e-06, 2.527999999994701e-06, 8.611000000005586e-06, 2.7359999999962414e-06, 5.5139999999981315e-06, 6.736000000000242e-06, 2.737000000002654e-06, 2.7360000000031803e-06, 7.999999999994123e-06, 2.583000000000446e-06, 6.403000000002046e-06, 8.514000000001132e-06, 4.069000000002376e-06, 5.971999999999922e-06, 5.388999999994537e-06, 4.52800000000364e-06, 4.611000000001586e-06, 5.402999999994107e-06, 4.847000000002266e-06, 7.639000000003726e-06, 4.846999999995327e-06, 4.08400000000142e-06], 'time': [0.042099528, 0.042106153, 0.042114556, 0.042121667, 0.04212725, 0.042131236, 0.042139833, 0.042148792, 0.042152417, 0.042154819, 0.042158222, 0.042166847, 0.042171028, 0.042178875, 0.042184056, 0.042187917, 0.042191319, 0.042193597, 0.042198556, 0.042204069, 0.042208472, 0.042217542, 0.042219736, 0.042226375, 0.042228653, 0.042237056, 0.042239792, 0.042247097, 0.042250819, 0.042253347, 0.042261958, 0.042264694, 0.042270208, 0.042276944, 0.042279681, 0.042282417, 0.042290417, 0.042293, 0.042299403, 0.042307917, 0.042311986, 0.042317958, 0.042323347, 0.042327875, 0.042332486, 0.042337889, 0.042342736, 0.042350375, 0.042355222, 0.042359306]}</msg>
<status status="PASS" starttime="20201110 08:37:10.193" endtime="20201110 08:37:10.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.184" endtime="20201110 08:37:10.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.210" level="INFO">${RESULT} = [{'time': 0.042106153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.625000000003156e-06, 'source_diff': 6.625000000003156e-06}, {'time': 0.042121667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:10.202" endtime="20201110 08:37:10.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:10.228" level="INFO">${GPIO_OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:10.212" endtime="20201110 08:37:10.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.238" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201110 08:37:10.236" endtime="20201110 08:37:10.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.243" level="INFO">VALUE: [6.625000000003156e-06, 7.111000000004086e-06, 3.9860000000044304e-06, 8.958999999995887e-06, 2.402000000005511e-06, 8.624999999998217e-06, 7.846999999998328e-06, 3.861000000000836e-06, 2.27800000000139e-06, 5.512999999998658e-06, 9.069999999999911e-06, 6.638999999995787e-06, 8.403000000004046e-06, 7.304999999999118e-06, 2.527999999994701e-06, 2.7359999999962414e-06, 6.736000000000242e-06, 2.7360000000031803e-06, 2.583000000000446e-06, 8.514000000001132e-06, 5.971999999999922e-06, 4.52800000000364e-06, 5.402999999994107e-06, 7.639000000003726e-06, 4.08400000000142e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.240" endtime="20201110 08:37:10.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.230" endtime="20201110 08:37:10.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.252" endtime="20201110 08:37:10.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.261" endtime="20201110 08:37:10.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.256" endtime="20201110 08:37:10.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.248" endtime="20201110 08:37:10.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:09.721" endtime="20201110 08:37:10.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:36:58.495" endtime="20201110 08:37:10.287"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.296" endtime="20201110 08:37:10.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.292" endtime="20201110 08:37:10.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.289" endtime="20201110 08:37:10.320"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:36:58.286" endtime="20201110 08:37:10.321" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.338" endtime="20201110 08:37:10.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.334" endtime="20201110 08:37:10.362"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.396" endtime="20201110 08:37:10.413"></status>
</kw>
<msg timestamp="20201110 08:37:10.415" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.392" endtime="20201110 08:37:10.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.421" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.417" endtime="20201110 08:37:10.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.428" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:10.423" endtime="20201110 08:37:10.428"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:10.385" endtime="20201110 08:37:10.430"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:10.379" endtime="20201110 08:37:10.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.376" endtime="20201110 08:37:10.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:10.440" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:10.439" endtime="20201110 08:37:10.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.434" endtime="20201110 08:37:10.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.374" endtime="20201110 08:37:10.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.372" endtime="20201110 08:37:10.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.444" endtime="20201110 08:37:10.448"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.368" endtime="20201110 08:37:10.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.364" endtime="20201110 08:37:10.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.331" endtime="20201110 08:37:10.451"></status>
</kw>
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>20</arg>
<arg>Measure Timer Now Overhead</arg>
</arguments>
<msg timestamp="20201110 08:37:10.455" level="INFO">Repeating keyword, round 1/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.475" endtime="20201110 08:37:10.492"></status>
</kw>
<msg timestamp="20201110 08:37:10.493" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.471" endtime="20201110 08:37:10.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.499" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:10.495" endtime="20201110 08:37:10.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.501" endtime="20201110 08:37:10.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.464" endtime="20201110 08:37:10.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.459" endtime="20201110 08:37:10.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.525" endtime="20201110 08:37:10.874"></status>
</kw>
<msg timestamp="20201110 08:37:10.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129716083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129717792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.521" endtime="20201110 08:37:10.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.129716083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.129717792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:10.884" endtime="20201110 08:37:10.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.902" endtime="20201110 08:37:10.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.514" endtime="20201110 08:37:10.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.510" endtime="20201110 08:37:10.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:10.920" level="INFO">${RESULT} = [{'time': 0.129717792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7089999999886363e-06, 'source_diff': 1.7089999999886363e-06}, {'time': 0.129721917, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:10.911" endtime="20201110 08:37:10.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:10.952" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:10.922" endtime="20201110 08:37:10.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.962" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:10.960" endtime="20201110 08:37:10.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:10.968" level="INFO">VALUE: [1.7089999999886363e-06, 1.6529999999903566e-06, 1.6660000000112696e-06, 1.7090000000163919e-06, 1.7079999999891626e-06, 1.7080000000169182e-06, 1.6939999999965316e-06, 1.7080000000169182e-06, 1.7090000000163919e-06, 1.7080000000169182e-06, 1.7230000000090229e-06, 1.7080000000169182e-06, 1.7360000000021802e-06, 1.7090000000163919e-06, 1.7220000000095492e-06, 1.6939999999965316e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.7079999999891626e-06, 1.7090000000163919e-06, 1.7089999999886363e-06, 1.7360000000021802e-06, 1.7080000000169182e-06, 1.7639999999874423e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7220000000095492e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.6939999999965316e-06, 1.7089999999886363e-06, 1.7089999999886363e-06, 1.7090000000163919e-06, 1.6949999999960053e-06, 1.7640000000151979e-06, 1.7089999999886363e-06, 1.6530000000181122e-06, 1.7089999999886363e-06, 1.7090000000163919e-06, 1.7500000000225668e-06, 1.7080000000169182e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7229999999812673e-06, 1.7089999999886363e-06, 1.7079999999891626e-06, 1.7079999999891626e-06, 1.7089999999886363e-06, 1.7089999999886363e-06, 1.6810000000033742e-06]</msg>
<status status="PASS" starttime="20201110 08:37:10.965" endtime="20201110 08:37:10.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.954" endtime="20201110 08:37:10.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:10.977" endtime="20201110 08:37:10.979"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:10.985" endtime="20201110 08:37:11.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.981" endtime="20201110 08:37:11.008"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.972" endtime="20201110 08:37:11.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.456" endtime="20201110 08:37:11.010"></status>
</kw>
<msg timestamp="20201110 08:37:11.011" level="INFO">Repeating keyword, round 2/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.031" endtime="20201110 08:37:11.046"></status>
</kw>
<msg timestamp="20201110 08:37:11.047" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.028" endtime="20201110 08:37:11.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.053" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.049" endtime="20201110 08:37:11.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.055" endtime="20201110 08:37:11.059"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.021" endtime="20201110 08:37:11.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.016" endtime="20201110 08:37:11.062"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.080" endtime="20201110 08:37:11.413"></status>
</kw>
<msg timestamp="20201110 08:37:11.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038341361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038343069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.077" endtime="20201110 08:37:11.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038341361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038343069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.423" endtime="20201110 08:37:11.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.442" endtime="20201110 08:37:11.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.068" endtime="20201110 08:37:11.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.063" endtime="20201110 08:37:11.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:11.464" level="INFO">${RESULT} = [{'time': 0.038343069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.038352097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:11.450" endtime="20201110 08:37:11.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:11.498" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:11.467" endtime="20201110 08:37:11.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.511" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:11.508" endtime="20201110 08:37:11.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.517" level="INFO">VALUE: [1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.6799999999969617e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7089999999955752e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6949999999960053e-06, 1.7089999999955752e-06, 1.6809999999964353e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201110 08:37:11.514" endtime="20201110 08:37:11.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.500" endtime="20201110 08:37:11.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.527" endtime="20201110 08:37:11.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:11.536" endtime="20201110 08:37:11.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.532" endtime="20201110 08:37:11.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.523" endtime="20201110 08:37:11.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.013" endtime="20201110 08:37:11.562"></status>
</kw>
<msg timestamp="20201110 08:37:11.562" level="INFO">Repeating keyword, round 3/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.582" endtime="20201110 08:37:11.597"></status>
</kw>
<msg timestamp="20201110 08:37:11.599" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.579" endtime="20201110 08:37:11.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:11.605" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:11.601" endtime="20201110 08:37:11.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.607" endtime="20201110 08:37:11.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.572" endtime="20201110 08:37:11.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.567" endtime="20201110 08:37:11.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:11.630" endtime="20201110 08:37:11.992"></status>
</kw>
<msg timestamp="20201110 08:37:12.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037799153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037800861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:11.627" endtime="20201110 08:37:12.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037799153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037800861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.004" endtime="20201110 08:37:12.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.027" endtime="20201110 08:37:12.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.620" endtime="20201110 08:37:12.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.615" endtime="20201110 08:37:12.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.047" level="INFO">${RESULT} = [{'time': 0.037800861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999961015e-06, 'source_diff': 1.7079999999961015e-06}, {'time': 0.037811319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.038" endtime="20201110 08:37:12.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:12.077" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:12.049" endtime="20201110 08:37:12.078"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.087" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:12.085" endtime="20201110 08:37:12.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.093" level="INFO">VALUE: [1.7079999999961015e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6660000000043307e-06, 1.6249999999981557e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.6949999999960053e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.6939999999965316e-06, 1.6950000000029442e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.6950000000029442e-06, 1.6949999999960053e-06, 1.6799999999969617e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.6950000000029442e-06, 1.7770000000014163e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.777999999993951e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6799999999969617e-06, 1.7089999999955752e-06, 1.709000000002514e-06]</msg>
<status status="PASS" starttime="20201110 08:37:12.090" endtime="20201110 08:37:12.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.079" endtime="20201110 08:37:12.096"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.102" endtime="20201110 08:37:12.105"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.111" endtime="20201110 08:37:12.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.106" endtime="20201110 08:37:12.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.098" endtime="20201110 08:37:12.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:11.563" endtime="20201110 08:37:12.136"></status>
</kw>
<msg timestamp="20201110 08:37:12.137" level="INFO">Repeating keyword, round 4/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.158" endtime="20201110 08:37:12.174"></status>
</kw>
<msg timestamp="20201110 08:37:12.176" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.153" endtime="20201110 08:37:12.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.184" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.179" endtime="20201110 08:37:12.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.187" endtime="20201110 08:37:12.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.146" endtime="20201110 08:37:12.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.141" endtime="20201110 08:37:12.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.214" endtime="20201110 08:37:12.547"></status>
</kw>
<msg timestamp="20201110 08:37:12.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040161069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040162764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.211" endtime="20201110 08:37:12.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040161069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040162764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:12.557" endtime="20201110 08:37:12.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.578" endtime="20201110 08:37:12.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.203" endtime="20201110 08:37:12.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.198" endtime="20201110 08:37:12.587"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:12.600" level="INFO">${RESULT} = [{'time': 0.040162764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6949999999960053e-06, 'source_diff': 1.6949999999960053e-06}, {'time': 0.040166556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:12.589" endtime="20201110 08:37:12.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:12.632" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:12.602" endtime="20201110 08:37:12.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.642" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:12.640" endtime="20201110 08:37:12.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.648" level="INFO">VALUE: [1.6949999999960053e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6800000000039006e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6800000000039006e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7359999999952413e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.6800000000039006e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201110 08:37:12.645" endtime="20201110 08:37:12.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.634" endtime="20201110 08:37:12.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.657" endtime="20201110 08:37:12.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:12.666" endtime="20201110 08:37:12.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.661" endtime="20201110 08:37:12.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.653" endtime="20201110 08:37:12.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.138" endtime="20201110 08:37:12.692"></status>
</kw>
<msg timestamp="20201110 08:37:12.692" level="INFO">Repeating keyword, round 5/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.713" endtime="20201110 08:37:12.728"></status>
</kw>
<msg timestamp="20201110 08:37:12.730" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.710" endtime="20201110 08:37:12.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:12.736" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:12.732" endtime="20201110 08:37:12.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.738" endtime="20201110 08:37:12.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.702" endtime="20201110 08:37:12.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.697" endtime="20201110 08:37:12.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:12.764" endtime="20201110 08:37:13.098"></status>
</kw>
<msg timestamp="20201110 08:37:13.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03994675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:12.760" endtime="20201110 08:37:13.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039945028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03994675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:13.109" endtime="20201110 08:37:13.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.127" endtime="20201110 08:37:13.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.752" endtime="20201110 08:37:13.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.746" endtime="20201110 08:37:13.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.147" level="INFO">${RESULT} = [{'time': 0.03994675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.039952889, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:13.137" endtime="20201110 08:37:13.147"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:13.179" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:13.149" endtime="20201110 08:37:13.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.189" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:13.187" endtime="20201110 08:37:13.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.195" level="INFO">VALUE: [1.7220000000026103e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.709000000002514e-06, 1.6659999999973918e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6810000000033742e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.6530000000042344e-06, 1.791999999993521e-06, 1.6109999999985858e-06, 1.6939999999965316e-06, 1.6950000000029442e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.77800000000089e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.723000000002084e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.6950000000029442e-06, 1.6799999999969617e-06, 1.6669999999968654e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6940000000034705e-06]</msg>
<status status="PASS" starttime="20201110 08:37:13.191" endtime="20201110 08:37:13.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.181" endtime="20201110 08:37:13.198"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.204" endtime="20201110 08:37:13.207"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.212" endtime="20201110 08:37:13.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.208" endtime="20201110 08:37:13.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.200" endtime="20201110 08:37:13.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:12.693" endtime="20201110 08:37:13.238"></status>
</kw>
<msg timestamp="20201110 08:37:13.239" level="INFO">Repeating keyword, round 6/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.259" endtime="20201110 08:37:13.275"></status>
</kw>
<msg timestamp="20201110 08:37:13.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.256" endtime="20201110 08:37:13.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.282" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.278" endtime="20201110 08:37:13.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.285" endtime="20201110 08:37:13.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.248" endtime="20201110 08:37:13.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.243" endtime="20201110 08:37:13.292"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.309" endtime="20201110 08:37:13.641"></status>
</kw>
<msg timestamp="20201110 08:37:13.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039044639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039046347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.305" endtime="20201110 08:37:13.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039044639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039046347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.651" endtime="20201110 08:37:13.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.673" endtime="20201110 08:37:13.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.298" endtime="20201110 08:37:13.680"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.293" endtime="20201110 08:37:13.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:13.693" level="INFO">${RESULT} = [{'time': 0.039046347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.039055708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:13.684" endtime="20201110 08:37:13.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:13.725" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:13.695" endtime="20201110 08:37:13.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.736" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:13.733" endtime="20201110 08:37:13.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.742" level="INFO">VALUE: [1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.6669999999968654e-06, 1.637999999998252e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.6660000000043307e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.6799999999969617e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6810000000033742e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.6799999999969617e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.77800000000089e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201110 08:37:13.738" endtime="20201110 08:37:13.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.727" endtime="20201110 08:37:13.745"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.752" endtime="20201110 08:37:13.755"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:13.760" endtime="20201110 08:37:13.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.756" endtime="20201110 08:37:13.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.747" endtime="20201110 08:37:13.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.240" endtime="20201110 08:37:13.786"></status>
</kw>
<msg timestamp="20201110 08:37:13.786" level="INFO">Repeating keyword, round 7/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.806" endtime="20201110 08:37:13.820"></status>
</kw>
<msg timestamp="20201110 08:37:13.822" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.803" endtime="20201110 08:37:13.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:13.828" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:13.824" endtime="20201110 08:37:13.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.830" endtime="20201110 08:37:13.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.796" endtime="20201110 08:37:13.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.791" endtime="20201110 08:37:13.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:13.853" endtime="20201110 08:37:14.192"></status>
</kw>
<msg timestamp="20201110 08:37:14.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037763486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037765153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:13.850" endtime="20201110 08:37:14.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037763486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037765153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.202" endtime="20201110 08:37:14.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.220" endtime="20201110 08:37:14.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.843" endtime="20201110 08:37:14.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.838" endtime="20201110 08:37:14.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.238" level="INFO">${RESULT} = [{'time': 0.037765153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6670000000038043e-06, 'source_diff': 1.6670000000038043e-06}, {'time': 0.037769069, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:14.229" endtime="20201110 08:37:14.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:14.269" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:14.240" endtime="20201110 08:37:14.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.280" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:14.277" endtime="20201110 08:37:14.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.285" level="INFO">VALUE: [1.6670000000038043e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6669999999968654e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.6529999999972955e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.6940000000034705e-06, 1.6669999999968654e-06, 1.77800000000089e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.6949999999960053e-06, 1.6950000000029442e-06, 1.7770000000014163e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6810000000033742e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.723000000002084e-06]</msg>
<status status="PASS" starttime="20201110 08:37:14.282" endtime="20201110 08:37:14.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.271" endtime="20201110 08:37:14.288"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.295" endtime="20201110 08:37:14.298"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.303" endtime="20201110 08:37:14.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.299" endtime="20201110 08:37:14.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.290" endtime="20201110 08:37:14.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:13.787" endtime="20201110 08:37:14.330"></status>
</kw>
<msg timestamp="20201110 08:37:14.331" level="INFO">Repeating keyword, round 8/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.355" endtime="20201110 08:37:14.372"></status>
</kw>
<msg timestamp="20201110 08:37:14.373" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.351" endtime="20201110 08:37:14.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.380" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.376" endtime="20201110 08:37:14.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.382" endtime="20201110 08:37:14.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.342" endtime="20201110 08:37:14.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.337" endtime="20201110 08:37:14.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.405" endtime="20201110 08:37:14.742"></status>
</kw>
<msg timestamp="20201110 08:37:14.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045243417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.402" endtime="20201110 08:37:14.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045241694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045243417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.751" endtime="20201110 08:37:14.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.771" endtime="20201110 08:37:14.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.395" endtime="20201110 08:37:14.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.390" endtime="20201110 08:37:14.778"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:14.789" level="INFO">${RESULT} = [{'time': 0.045243417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.723000000002084e-06, 'source_diff': 1.723000000002084e-06}, {'time': 0.045247653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:14.780" endtime="20201110 08:37:14.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:14.821" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:14.791" endtime="20201110 08:37:14.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.831" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:14.829" endtime="20201110 08:37:14.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.837" level="INFO">VALUE: [1.723000000002084e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.6530000000042344e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7920000000004599e-06, 1.6809999999964353e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.6939999999965316e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.6949999999960053e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.76400000000132e-06, 1.709000000002514e-06, 1.7370000000016539e-06, 1.7089999999955752e-06, 1.6249999999981557e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201110 08:37:14.833" endtime="20201110 08:37:14.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.823" endtime="20201110 08:37:14.840"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.846" endtime="20201110 08:37:14.849"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:14.854" endtime="20201110 08:37:14.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.850" endtime="20201110 08:37:14.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.842" endtime="20201110 08:37:14.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.332" endtime="20201110 08:37:14.880"></status>
</kw>
<msg timestamp="20201110 08:37:14.880" level="INFO">Repeating keyword, round 9/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.900" endtime="20201110 08:37:14.914"></status>
</kw>
<msg timestamp="20201110 08:37:14.916" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.897" endtime="20201110 08:37:14.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:14.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:14.918" endtime="20201110 08:37:14.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.924" endtime="20201110 08:37:14.928"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.890" endtime="20201110 08:37:14.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.885" endtime="20201110 08:37:14.931"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:14.947" endtime="20201110 08:37:15.287"></status>
</kw>
<msg timestamp="20201110 08:37:15.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037433528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037435222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:14.944" endtime="20201110 08:37:15.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037433528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037435222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.296" endtime="20201110 08:37:15.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.315" endtime="20201110 08:37:15.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.937" endtime="20201110 08:37:15.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.932" endtime="20201110 08:37:15.322"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.332" level="INFO">${RESULT} = [{'time': 0.037435222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6939999999965316e-06, 'source_diff': 1.6939999999965316e-06}, {'time': 0.037440903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:15.323" endtime="20201110 08:37:15.333"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:15.365" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:15.335" endtime="20201110 08:37:15.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.376" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:15.372" endtime="20201110 08:37:15.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.381" level="INFO">VALUE: [1.6939999999965316e-06, 1.6949999999960053e-06, 1.6530000000042344e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.6949999999960053e-06, 1.6669999999968654e-06, 1.7089999999955752e-06, 1.7089999999955752e-06, 1.7089999999955752e-06, 1.7360000000021802e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.6940000000034705e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201110 08:37:15.378" endtime="20201110 08:37:15.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.366" endtime="20201110 08:37:15.385"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.391" endtime="20201110 08:37:15.394"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.399" endtime="20201110 08:37:15.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.395" endtime="20201110 08:37:15.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.386" endtime="20201110 08:37:15.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:14.881" endtime="20201110 08:37:15.425"></status>
</kw>
<msg timestamp="20201110 08:37:15.425" level="INFO">Repeating keyword, round 10/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.445" endtime="20201110 08:37:15.459"></status>
</kw>
<msg timestamp="20201110 08:37:15.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.441" endtime="20201110 08:37:15.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.462" endtime="20201110 08:37:15.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.469" endtime="20201110 08:37:15.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.434" endtime="20201110 08:37:15.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.430" endtime="20201110 08:37:15.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.492" endtime="20201110 08:37:15.828"></status>
</kw>
<msg timestamp="20201110 08:37:15.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037582222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037583917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.489" endtime="20201110 08:37:15.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037582222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037583917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:15.838" endtime="20201110 08:37:15.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.857" endtime="20201110 08:37:15.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.482" endtime="20201110 08:37:15.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.477" endtime="20201110 08:37:15.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:15.874" level="INFO">${RESULT} = [{'time': 0.037583917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6950000000029442e-06, 'source_diff': 1.6950000000029442e-06}, {'time': 0.037588514, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:15.865" endtime="20201110 08:37:15.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:15.905" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:15.876" endtime="20201110 08:37:15.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.915" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:15.913" endtime="20201110 08:37:15.916"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:15.920" level="INFO">VALUE: [1.6950000000029442e-06, 1.7360000000021802e-06, 1.7219999999956714e-06, 1.6809999999964353e-06, 1.709000000002514e-06, 1.7499999999948113e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7499999999948113e-06, 1.76400000000132e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7079999999961015e-06, 1.6390000000046645e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6810000000033742e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.723000000002084e-06, 1.7630000000018464e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.7500000000017502e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201110 08:37:15.917" endtime="20201110 08:37:15.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.907" endtime="20201110 08:37:15.924"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.931" endtime="20201110 08:37:15.934"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:15.940" endtime="20201110 08:37:15.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.936" endtime="20201110 08:37:15.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.926" endtime="20201110 08:37:15.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.426" endtime="20201110 08:37:15.965"></status>
</kw>
<msg timestamp="20201110 08:37:15.966" level="INFO">Repeating keyword, round 11/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:15.985" endtime="20201110 08:37:16.000"></status>
</kw>
<msg timestamp="20201110 08:37:16.001" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:15.982" endtime="20201110 08:37:16.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.007" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.003" endtime="20201110 08:37:16.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.010" endtime="20201110 08:37:16.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.975" endtime="20201110 08:37:16.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.970" endtime="20201110 08:37:16.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.033" endtime="20201110 08:37:16.374"></status>
</kw>
<msg timestamp="20201110 08:37:16.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037496014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037497736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.030" endtime="20201110 08:37:16.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037496014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037497736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.383" endtime="20201110 08:37:16.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.402" endtime="20201110 08:37:16.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.022" endtime="20201110 08:37:16.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.018" endtime="20201110 08:37:16.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.420" level="INFO">${RESULT} = [{'time': 0.037497736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7219999999956714e-06, 'source_diff': 1.7219999999956714e-06}, {'time': 0.037503861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:16.411" endtime="20201110 08:37:16.420"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:16.450" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:16.422" endtime="20201110 08:37:16.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.460" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:16.458" endtime="20201110 08:37:16.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.466" level="INFO">VALUE: [1.7219999999956714e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7220000000026103e-06, 1.7359999999952413e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6670000000038043e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7500000000017502e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.7639999999943812e-06, 1.6809999999964353e-06, 1.723000000002084e-06, 1.7500000000017502e-06, 1.7360000000021802e-06, 1.6940000000034705e-06]</msg>
<status status="PASS" starttime="20201110 08:37:16.463" endtime="20201110 08:37:16.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.452" endtime="20201110 08:37:16.469"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.476" endtime="20201110 08:37:16.478"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:16.484" endtime="20201110 08:37:16.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.479" endtime="20201110 08:37:16.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.471" endtime="20201110 08:37:16.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:15.967" endtime="20201110 08:37:16.511"></status>
</kw>
<msg timestamp="20201110 08:37:16.511" level="INFO">Repeating keyword, round 12/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.531" endtime="20201110 08:37:16.546"></status>
</kw>
<msg timestamp="20201110 08:37:16.547" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.527" endtime="20201110 08:37:16.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.553" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:16.549" endtime="20201110 08:37:16.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.555" endtime="20201110 08:37:16.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.520" endtime="20201110 08:37:16.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.516" endtime="20201110 08:37:16.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.578" endtime="20201110 08:37:16.916"></status>
</kw>
<msg timestamp="20201110 08:37:16.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037598903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037600611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.575" endtime="20201110 08:37:16.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:16.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037598903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037600611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:16.926" endtime="20201110 08:37:16.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:16.944" endtime="20201110 08:37:16.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.568" endtime="20201110 08:37:16.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.563" endtime="20201110 08:37:16.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:16.962" level="INFO">${RESULT} = [{'time': 0.037600611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999961015e-06, 'source_diff': 1.7079999999961015e-06}, {'time': 0.037609417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:16.953" endtime="20201110 08:37:16.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:16.992" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:16.964" endtime="20201110 08:37:16.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.002" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:17.000" endtime="20201110 08:37:17.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.008" level="INFO">VALUE: [1.7079999999961015e-06, 1.6809999999964353e-06, 1.6949999999960053e-06, 1.77800000000089e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7499999999948113e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7910000000009862e-06, 1.77800000000089e-06, 1.7089999999955752e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7500000000017502e-06, 1.6949999999960053e-06, 1.6809999999964353e-06, 1.6950000000029442e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.722999999995145e-06, 1.7079999999961015e-06, 1.6809999999964353e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7219999999956714e-06]</msg>
<status status="PASS" starttime="20201110 08:37:17.005" endtime="20201110 08:37:17.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.994" endtime="20201110 08:37:17.011"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.017" endtime="20201110 08:37:17.020"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.026" endtime="20201110 08:37:17.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.021" endtime="20201110 08:37:17.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.013" endtime="20201110 08:37:17.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:16.512" endtime="20201110 08:37:17.051"></status>
</kw>
<msg timestamp="20201110 08:37:17.052" level="INFO">Repeating keyword, round 13/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.073" endtime="20201110 08:37:17.087"></status>
</kw>
<msg timestamp="20201110 08:37:17.089" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.070" endtime="20201110 08:37:17.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.095" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.091" endtime="20201110 08:37:17.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.097" endtime="20201110 08:37:17.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.062" endtime="20201110 08:37:17.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.056" endtime="20201110 08:37:17.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.120" endtime="20201110 08:37:17.474"></status>
</kw>
<msg timestamp="20201110 08:37:17.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039041597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039043306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.117" endtime="20201110 08:37:17.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039041597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039043306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.491" endtime="20201110 08:37:17.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.526" endtime="20201110 08:37:17.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.110" endtime="20201110 08:37:17.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.105" endtime="20201110 08:37:17.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:17.557" level="INFO">${RESULT} = [{'time': 0.039043306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.709000000002514e-06, 'source_diff': 1.709000000002514e-06}, {'time': 0.039048097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:17.541" endtime="20201110 08:37:17.558"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:17.594" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:17.561" endtime="20201110 08:37:17.595"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.604" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:17.602" endtime="20201110 08:37:17.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.610" level="INFO">VALUE: [1.709000000002514e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7920000000004599e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.777999999993951e-06, 1.6939999999965316e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.76400000000132e-06, 1.7079999999961015e-06, 1.6949999999960053e-06, 1.6809999999964353e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.6939999999965316e-06, 1.7500000000017502e-06, 1.77800000000089e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06]</msg>
<status status="PASS" starttime="20201110 08:37:17.607" endtime="20201110 08:37:17.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.596" endtime="20201110 08:37:17.613"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.619" endtime="20201110 08:37:17.622"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:17.628" endtime="20201110 08:37:17.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.623" endtime="20201110 08:37:17.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.615" endtime="20201110 08:37:17.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.053" endtime="20201110 08:37:17.653"></status>
</kw>
<msg timestamp="20201110 08:37:17.654" level="INFO">Repeating keyword, round 14/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.673" endtime="20201110 08:37:17.688"></status>
</kw>
<msg timestamp="20201110 08:37:17.689" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.670" endtime="20201110 08:37:17.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:17.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:17.691" endtime="20201110 08:37:17.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.698" endtime="20201110 08:37:17.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.663" endtime="20201110 08:37:17.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.658" endtime="20201110 08:37:17.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:17.723" endtime="20201110 08:37:18.057"></status>
</kw>
<msg timestamp="20201110 08:37:18.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037503167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037504875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:17.719" endtime="20201110 08:37:18.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037503167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037504875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.067" endtime="20201110 08:37:18.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.085" endtime="20201110 08:37:18.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.712" endtime="20201110 08:37:18.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.708" endtime="20201110 08:37:18.092"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.103" level="INFO">${RESULT} = [{'time': 0.037504875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7080000000030404e-06, 'source_diff': 1.7080000000030404e-06}, {'time': 0.037508681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:18.094" endtime="20201110 08:37:18.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:18.133" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:18.105" endtime="20201110 08:37:18.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.143" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:18.141" endtime="20201110 08:37:18.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.149" level="INFO">VALUE: [1.7080000000030404e-06, 1.723000000002084e-06, 1.6949999999960053e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.7770000000014163e-06, 1.6950000000029442e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.77800000000089e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.6659999999973918e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.709000000002514e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6670000000038043e-06, 1.6949999999960053e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6810000000033742e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.77800000000089e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7089999999955752e-06]</msg>
<status status="PASS" starttime="20201110 08:37:18.146" endtime="20201110 08:37:18.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.135" endtime="20201110 08:37:18.152"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.159" endtime="20201110 08:37:18.161"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.167" endtime="20201110 08:37:18.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.162" endtime="20201110 08:37:18.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.154" endtime="20201110 08:37:18.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:17.655" endtime="20201110 08:37:18.192"></status>
</kw>
<msg timestamp="20201110 08:37:18.193" level="INFO">Repeating keyword, round 15/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.213" endtime="20201110 08:37:18.228"></status>
</kw>
<msg timestamp="20201110 08:37:18.229" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.209" endtime="20201110 08:37:18.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.235" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.231" endtime="20201110 08:37:18.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.237" endtime="20201110 08:37:18.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.202" endtime="20201110 08:37:18.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.198" endtime="20201110 08:37:18.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.262" endtime="20201110 08:37:18.622"></status>
</kw>
<msg timestamp="20201110 08:37:18.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037828472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037830111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.259" endtime="20201110 08:37:18.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037828472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037830111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.632" endtime="20201110 08:37:18.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.653" endtime="20201110 08:37:18.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.250" endtime="20201110 08:37:18.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.246" endtime="20201110 08:37:18.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:18.672" level="INFO">${RESULT} = [{'time': 0.037830111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6389999999977256e-06, 'source_diff': 1.6389999999977256e-06}, {'time': 0.037839028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:18.662" endtime="20201110 08:37:18.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:18.704" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:18.674" endtime="20201110 08:37:18.704"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.715" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:18.712" endtime="20201110 08:37:18.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.721" level="INFO">VALUE: [1.6389999999977256e-06, 1.7219999999956714e-06, 1.6669999999968654e-06, 1.7219999999956714e-06, 1.7089999999955752e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.6529999999972955e-06, 1.6950000000029442e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.6940000000034705e-06, 1.7629999999949075e-06, 1.7220000000026103e-06, 1.7360000000021802e-06, 1.76400000000132e-06, 1.6949999999960053e-06, 1.6950000000029442e-06, 1.6799999999969617e-06, 1.6939999999965316e-06, 1.6800000000039006e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7219999999956714e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.77800000000089e-06, 1.722999999995145e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.709000000002514e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.6810000000033742e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7080000000030404e-06]</msg>
<status status="PASS" starttime="20201110 08:37:18.717" endtime="20201110 08:37:18.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.706" endtime="20201110 08:37:18.724"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.731" endtime="20201110 08:37:18.734"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:18.740" endtime="20201110 08:37:18.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.735" endtime="20201110 08:37:18.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.726" endtime="20201110 08:37:18.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.194" endtime="20201110 08:37:18.766"></status>
</kw>
<msg timestamp="20201110 08:37:18.767" level="INFO">Repeating keyword, round 16/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.791" endtime="20201110 08:37:18.807"></status>
</kw>
<msg timestamp="20201110 08:37:18.808" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.787" endtime="20201110 08:37:18.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:18.815" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:18.811" endtime="20201110 08:37:18.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.818" endtime="20201110 08:37:18.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.779" endtime="20201110 08:37:18.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.772" endtime="20201110 08:37:18.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:18.843" endtime="20201110 08:37:19.181"></status>
</kw>
<msg timestamp="20201110 08:37:19.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042797153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042798875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:18.839" endtime="20201110 08:37:19.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042797153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042798875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.190" endtime="20201110 08:37:19.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.209" endtime="20201110 08:37:19.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.831" endtime="20201110 08:37:19.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.826" endtime="20201110 08:37:19.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.226" level="INFO">${RESULT} = [{'time': 0.042798875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.042805431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.217" endtime="20201110 08:37:19.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.256" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:19.228" endtime="20201110 08:37:19.257"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.267" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:19.264" endtime="20201110 08:37:19.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.272" level="INFO">VALUE: [1.7220000000026103e-06, 1.6809999999964353e-06, 1.6659999999973918e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6949999999960053e-06, 1.723000000002084e-06, 1.709000000002514e-06, 1.723000000002084e-06, 1.6809999999964353e-06, 1.709000000002514e-06, 1.7359999999952413e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.6800000000039006e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.76400000000132e-06, 1.6939999999965316e-06, 1.7770000000014163e-06, 1.723000000002084e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.6949999999960053e-06, 1.7089999999955752e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.7219999999956714e-06, 1.7500000000017502e-06, 1.709000000002514e-06, 1.6389999999977256e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7079999999961015e-06]</msg>
<status status="PASS" starttime="20201110 08:37:19.269" endtime="20201110 08:37:19.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.258" endtime="20201110 08:37:19.275"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.282" endtime="20201110 08:37:19.284"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.290" endtime="20201110 08:37:19.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.286" endtime="20201110 08:37:19.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.277" endtime="20201110 08:37:19.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:18.768" endtime="20201110 08:37:19.315"></status>
</kw>
<msg timestamp="20201110 08:37:19.316" level="INFO">Repeating keyword, round 17/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.336" endtime="20201110 08:37:19.350"></status>
</kw>
<msg timestamp="20201110 08:37:19.352" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.332" endtime="20201110 08:37:19.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.358" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.354" endtime="20201110 08:37:19.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.360" endtime="20201110 08:37:19.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.325" endtime="20201110 08:37:19.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.320" endtime="20201110 08:37:19.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.383" endtime="20201110 08:37:19.720"></status>
</kw>
<msg timestamp="20201110 08:37:19.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037532583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.380" endtime="20201110 08:37:19.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037530889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037532583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.730" endtime="20201110 08:37:19.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.748" endtime="20201110 08:37:19.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.373" endtime="20201110 08:37:19.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.368" endtime="20201110 08:37:19.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:19.766" level="INFO">${RESULT} = [{'time': 0.037532583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6940000000034705e-06, 'source_diff': 1.6940000000034705e-06}, {'time': 0.037537375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:19.757" endtime="20201110 08:37:19.767"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:19.798" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:19.768" endtime="20201110 08:37:19.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.809" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:19.806" endtime="20201110 08:37:19.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.814" level="INFO">VALUE: [1.6940000000034705e-06, 1.7079999999961015e-06, 1.723000000002084e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.7079999999961015e-06, 1.6529999999972955e-06, 1.7079999999961015e-06, 1.6800000000039006e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7080000000030404e-06, 1.7089999999955752e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6669999999968654e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.709000000002514e-06, 1.6799999999969617e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6939999999965316e-06, 1.7220000000026103e-06, 1.6669999999968654e-06, 1.6940000000034705e-06, 1.7360000000021802e-06]</msg>
<status status="PASS" starttime="20201110 08:37:19.811" endtime="20201110 08:37:19.821"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.800" endtime="20201110 08:37:19.823"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.830" endtime="20201110 08:37:19.832"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:19.838" endtime="20201110 08:37:19.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.833" endtime="20201110 08:37:19.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.825" endtime="20201110 08:37:19.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.317" endtime="20201110 08:37:19.863"></status>
</kw>
<msg timestamp="20201110 08:37:19.864" level="INFO">Repeating keyword, round 18/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.883" endtime="20201110 08:37:19.898"></status>
</kw>
<msg timestamp="20201110 08:37:19.900" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.880" endtime="20201110 08:37:19.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:19.906" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:19.902" endtime="20201110 08:37:19.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.908" endtime="20201110 08:37:19.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.873" endtime="20201110 08:37:19.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.868" endtime="20201110 08:37:19.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:19.932" endtime="20201110 08:37:20.286"></status>
</kw>
<msg timestamp="20201110 08:37:20.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037597639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037599347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:19.928" endtime="20201110 08:37:20.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037597639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037599347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.295" endtime="20201110 08:37:20.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.314" endtime="20201110 08:37:20.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.921" endtime="20201110 08:37:20.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.916" endtime="20201110 08:37:20.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.331" level="INFO">${RESULT} = [{'time': 0.037599347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7079999999961015e-06, 'source_diff': 1.7079999999961015e-06}, {'time': 0.037605806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.322" endtime="20201110 08:37:20.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:20.363" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:20.333" endtime="20201110 08:37:20.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.373" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:20.371" endtime="20201110 08:37:20.374"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.378" level="INFO">VALUE: [1.7079999999961015e-06, 1.7089999999955752e-06, 1.6659999999973918e-06, 1.7079999999961015e-06, 1.7500000000017502e-06, 1.7089999999955752e-06, 1.6810000000033742e-06, 1.6939999999965316e-06, 1.709000000002514e-06, 1.6939999999965316e-06, 1.7089999999955752e-06, 1.6949999999960053e-06, 1.7499999999948113e-06, 1.7360000000021802e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.6950000000029442e-06, 1.709000000002514e-06, 1.77800000000089e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.6950000000029442e-06, 1.6949999999960053e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.723000000002084e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.6390000000046645e-06, 1.722999999995145e-06, 1.6939999999965316e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6950000000029442e-06, 1.723000000002084e-06, 1.7089999999955752e-06, 1.6660000000043307e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.6949999999960053e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.7770000000014163e-06]</msg>
<status status="PASS" starttime="20201110 08:37:20.375" endtime="20201110 08:37:20.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.365" endtime="20201110 08:37:20.382"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.388" endtime="20201110 08:37:20.391"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.396" endtime="20201110 08:37:20.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.392" endtime="20201110 08:37:20.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.383" endtime="20201110 08:37:20.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:19.865" endtime="20201110 08:37:20.422"></status>
</kw>
<msg timestamp="20201110 08:37:20.422" level="INFO">Repeating keyword, round 19/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.442" endtime="20201110 08:37:20.457"></status>
</kw>
<msg timestamp="20201110 08:37:20.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.439" endtime="20201110 08:37:20.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.460" endtime="20201110 08:37:20.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.466" endtime="20201110 08:37:20.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.432" endtime="20201110 08:37:20.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.427" endtime="20201110 08:37:20.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.489" endtime="20201110 08:37:20.839"></status>
</kw>
<msg timestamp="20201110 08:37:20.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037630486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037632167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.486" endtime="20201110 08:37:20.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037630486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037632167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:20.849" endtime="20201110 08:37:20.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.867" endtime="20201110 08:37:20.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.479" endtime="20201110 08:37:20.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.474" endtime="20201110 08:37:20.874"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:20.885" level="INFO">${RESULT} = [{'time': 0.037632167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.6810000000033742e-06, 'source_diff': 1.6810000000033742e-06}, {'time': 0.037639097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:20.876" endtime="20201110 08:37:20.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:20.916" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:20.887" endtime="20201110 08:37:20.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.927" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:20.924" endtime="20201110 08:37:20.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:20.932" level="INFO">VALUE: [1.6810000000033742e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.6950000000029442e-06, 1.7770000000014163e-06, 1.6950000000029442e-06, 1.709000000002514e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.6940000000034705e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.7220000000026103e-06, 1.7080000000030404e-06, 1.6939999999965316e-06, 1.6669999999968654e-06, 1.6810000000033742e-06, 1.7769999999944774e-06, 1.709000000002514e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.7219999999956714e-06, 1.7079999999961015e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.6799999999969617e-06, 1.7080000000030404e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7079999999961015e-06, 1.7079999999961015e-06, 1.7220000000026103e-06, 1.7079999999961015e-06, 1.7080000000030404e-06, 1.6389999999977256e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.7499999999948113e-06, 1.7219999999956714e-06, 1.7220000000026103e-06, 1.6950000000029442e-06]</msg>
<status status="PASS" starttime="20201110 08:37:20.929" endtime="20201110 08:37:20.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.918" endtime="20201110 08:37:20.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.942" endtime="20201110 08:37:20.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:20.950" endtime="20201110 08:37:20.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.946" endtime="20201110 08:37:20.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.937" endtime="20201110 08:37:20.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.424" endtime="20201110 08:37:20.976"></status>
</kw>
<msg timestamp="20201110 08:37:20.977" level="INFO">Repeating keyword, round 20/20.</msg>
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:20.998" endtime="20201110 08:37:21.012"></status>
</kw>
<msg timestamp="20201110 08:37:21.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:20.994" endtime="20201110 08:37:21.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.020" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.016" endtime="20201110 08:37:21.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.022" endtime="20201110 08:37:21.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.986" endtime="20201110 08:37:21.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.981" endtime="20201110 08:37:21.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.045" endtime="20201110 08:37:21.389"></status>
</kw>
<msg timestamp="20201110 08:37:21.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039889375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039891097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.042" endtime="20201110 08:37:21.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039889375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039891097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.398" endtime="20201110 08:37:21.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.417" endtime="20201110 08:37:21.421"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.035" endtime="20201110 08:37:21.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.030" endtime="20201110 08:37:21.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:21.435" level="INFO">${RESULT} = [{'time': 0.039891097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7220000000026103e-06, 'source_diff': 1.7220000000026103e-06}, {'time': 0.039898861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:21.426" endtime="20201110 08:37:21.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:21.466" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:21.437" endtime="20201110 08:37:21.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.476" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201110 08:37:21.474" endtime="20201110 08:37:21.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.482" level="INFO">VALUE: [1.7220000000026103e-06, 1.6800000000039006e-06, 1.7219999999956714e-06, 1.723000000002084e-06, 1.7089999999955752e-06, 1.723000000002084e-06, 1.722999999995145e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6670000000038043e-06, 1.7359999999952413e-06, 1.709000000002514e-06, 1.6670000000038043e-06, 1.709000000002514e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.6940000000034705e-06, 1.6940000000034705e-06, 1.7080000000030404e-06, 1.6810000000033742e-06, 1.722999999995145e-06, 1.723000000002084e-06, 1.7089999999955752e-06, 1.7079999999961015e-06, 1.7360000000021802e-06, 1.6939999999965316e-06, 1.709000000002514e-06, 1.709000000002514e-06, 1.7089999999955752e-06, 1.6940000000034705e-06, 1.6939999999965316e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.7360000000021802e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.6940000000034705e-06, 1.76400000000132e-06, 1.7080000000030404e-06, 1.709000000002514e-06, 1.7080000000030404e-06, 1.7079999999961015e-06, 1.7089999999955752e-06, 1.76400000000132e-06, 1.6389999999977256e-06, 1.6939999999965316e-06, 1.7079999999961015e-06, 1.7920000000004599e-06]</msg>
<status status="PASS" starttime="20201110 08:37:21.479" endtime="20201110 08:37:21.483"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.468" endtime="20201110 08:37:21.485"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.491" endtime="20201110 08:37:21.494"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.500" endtime="20201110 08:37:21.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.495" endtime="20201110 08:37:21.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.487" endtime="20201110 08:37:21.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:20.978" endtime="20201110 08:37:21.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:10.453" endtime="20201110 08:37:21.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.535" endtime="20201110 08:37:21.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.531" endtime="20201110 08:37:21.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.528" endtime="20201110 08:37:21.559"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:10.325" endtime="20201110 08:37:21.560" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:21.577" endtime="20201110 08:37:21.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.573" endtime="20201110 08:37:21.600"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.633" endtime="20201110 08:37:21.651"></status>
</kw>
<msg timestamp="20201110 08:37:21.653" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.629" endtime="20201110 08:37:21.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.655" endtime="20201110 08:37:21.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.666" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:21.661" endtime="20201110 08:37:21.666"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:21.622" endtime="20201110 08:37:21.668"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:21.616" endtime="20201110 08:37:21.670"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.613" endtime="20201110 08:37:21.670"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:21.680" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:21.679" endtime="20201110 08:37:21.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.672" endtime="20201110 08:37:21.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.611" endtime="20201110 08:37:21.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.610" endtime="20201110 08:37:21.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.684" endtime="20201110 08:37:21.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.606" endtime="20201110 08:37:21.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.601" endtime="20201110 08:37:21.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.570" endtime="20201110 08:37:21.691"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.713" endtime="20201110 08:37:21.737"></status>
</kw>
<msg timestamp="20201110 08:37:21.738" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.710" endtime="20201110 08:37:21.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.744" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:21.740" endtime="20201110 08:37:21.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.747" endtime="20201110 08:37:21.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.702" endtime="20201110 08:37:21.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.697" endtime="20201110 08:37:21.753"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.758" endtime="20201110 08:37:21.763"></status>
</kw>
<msg timestamp="20201110 08:37:21.764" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:21.755" endtime="20201110 08:37:21.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.774" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:21.771" endtime="20201110 08:37:21.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.778" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:21.776" endtime="20201110 08:37:21.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.765" endtime="20201110 08:37:21.781"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.792" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:21.790" endtime="20201110 08:37:21.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:21.797" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:21.795" endtime="20201110 08:37:21.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.782" endtime="20201110 08:37:21.800"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:21.816" endtime="20201110 08:37:22.176"></status>
</kw>
<msg timestamp="20201110 08:37:22.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130642403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130647806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:21.813" endtime="20201110 08:37:22.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.130642403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.130647806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.186" endtime="20201110 08:37:22.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.205" endtime="20201110 08:37:22.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.806" endtime="20201110 08:37:22.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.801" endtime="20201110 08:37:22.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.222" level="INFO">${RESULT} = [{'time': 0.130647806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.403000000014924e-06, 'source_diff': 5.403000000014924e-06}, {'time': 0.130662361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.213" endtime="20201110 08:37:22.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:22.255" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:22.224" endtime="20201110 08:37:22.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.267" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:22.265" endtime="20201110 08:37:22.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.273" level="INFO">VALUE: [5.403000000014924e-06, 6.430000000001712e-06, 6.416999999980799e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.444000000022099e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.416000000009081e-06, 6.431000000001186e-06, 6.458999999986448e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.443999999994343e-06, 6.513000000013536e-06, 6.472000000007361e-06, 6.431000000001186e-06, 6.3609999999825195e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.514000000013009e-06, 6.444999999993817e-06, 6.514000000013009e-06, 6.443999999994343e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.472000000007361e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.457999999986974e-06, 6.445000000021572e-06, 6.459000000014203e-06, 6.51299999998578e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.431000000001186e-06, 6.4299999999739565e-06, 6.444000000022099e-06, 6.431000000001186e-06, 6.375000000002906e-06, 6.416999999980799e-06, 6.459000000014203e-06, 6.4299999999739565e-06, 6.430000000001712e-06, 6.4159999999813255e-06, 6.3469999999898885e-06, 6.431000000001186e-06, 6.431000000001186e-06]</msg>
<status status="PASS" starttime="20201110 08:37:22.270" endtime="20201110 08:37:22.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.257" endtime="20201110 08:37:22.276"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.282" endtime="20201110 08:37:22.285"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.290" endtime="20201110 08:37:22.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.286" endtime="20201110 08:37:22.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.277" endtime="20201110 08:37:22.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:21.692" endtime="20201110 08:37:22.316"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:21.564" endtime="20201110 08:37:22.317" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:22.334" endtime="20201110 08:37:22.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.330" endtime="20201110 08:37:22.357"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.396" endtime="20201110 08:37:22.415"></status>
</kw>
<msg timestamp="20201110 08:37:22.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.392" endtime="20201110 08:37:22.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.419" endtime="20201110 08:37:22.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.431" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:22.427" endtime="20201110 08:37:22.432"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:22.383" endtime="20201110 08:37:22.434"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:22.375" endtime="20201110 08:37:22.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.372" endtime="20201110 08:37:22.436"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:22.444" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:22.442" endtime="20201110 08:37:22.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.438" endtime="20201110 08:37:22.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.370" endtime="20201110 08:37:22.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.367" endtime="20201110 08:37:22.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.448" endtime="20201110 08:37:22.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.363" endtime="20201110 08:37:22.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.359" endtime="20201110 08:37:22.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.328" endtime="20201110 08:37:22.455"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.480" endtime="20201110 08:37:22.534"></status>
</kw>
<msg timestamp="20201110 08:37:22.535" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.477" endtime="20201110 08:37:22.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.541" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:22.537" endtime="20201110 08:37:22.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.543" endtime="20201110 08:37:22.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.469" endtime="20201110 08:37:22.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.461" endtime="20201110 08:37:22.550"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.555" endtime="20201110 08:37:22.559"></status>
</kw>
<msg timestamp="20201110 08:37:22.561" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:22.552" endtime="20201110 08:37:22.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.571" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:22.569" endtime="20201110 08:37:22.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.575" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:22.573" endtime="20201110 08:37:22.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.562" endtime="20201110 08:37:22.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.587" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:22.585" endtime="20201110 08:37:22.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.592" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:22.590" endtime="20201110 08:37:22.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.579" endtime="20201110 08:37:22.594"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.611" endtime="20201110 08:37:22.954"></status>
</kw>
<msg timestamp="20201110 08:37:22.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139873597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139886583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.607" endtime="20201110 08:37:22.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:22.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.139873597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.139886583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:22.963" endtime="20201110 08:37:22.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:22.981" endtime="20201110 08:37:22.985"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.600" endtime="20201110 08:37:22.987"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.595" endtime="20201110 08:37:22.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:22.999" level="INFO">${RESULT} = [{'time': 0.139886583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.298600000002037e-05, 'source_diff': 1.298600000002037e-05}, {'time': 0.140495736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:22.990" endtime="20201110 08:37:23.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:23.030" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:23.002" endtime="20201110 08:37:23.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.046" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:23.043" endtime="20201110 08:37:23.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.054" level="INFO">VALUE: [1.298600000002037e-05, 1.9889000000022916e-05, 1.987500000000253e-05, 1.9791999999990706e-05, 1.9862000000009372e-05, 1.9846999999989512e-05, 1.9806000000011093e-05, 1.993100000000081e-05, 1.988899999999516e-05, 1.988899999999516e-05, 1.9889000000022916e-05, 1.9874999999974774e-05, 1.988899999999516e-05, 1.9901999999988318e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.9888000000023442e-05, 1.993100000000081e-05, 1.9804999999983863e-05, 1.98610000000099e-05, 1.987500000000253e-05, 1.990299999998779e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.9917000000008178e-05, 1.990299999998779e-05, 1.987500000000253e-05, 1.9860999999982143e-05, 1.993100000000081e-05, 1.9874999999974774e-05, 1.987500000000253e-05, 1.990299999998779e-05, 1.987500000000253e-05, 1.988899999999516e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.9903000000015547e-05, 1.9860999999982143e-05, 1.9861999999981617e-05, 1.9846999999989512e-05, 1.990299999998779e-05, 1.987500000000253e-05, 1.98610000000099e-05, 1.987500000000253e-05, 1.987500000000253e-05, 1.98610000000099e-05, 1.98610000000099e-05, 1.987500000000253e-05, 1.990299999998779e-05, 1.987500000000253e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.048" endtime="20201110 08:37:23.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.035" endtime="20201110 08:37:23.058"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.065" endtime="20201110 08:37:23.069"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.076" endtime="20201110 08:37:23.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.071" endtime="20201110 08:37:23.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.060" endtime="20201110 08:37:23.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:22.456" endtime="20201110 08:37:23.103"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:22.321" endtime="20201110 08:37:23.105" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.122" endtime="20201110 08:37:23.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.118" endtime="20201110 08:37:23.145"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.179" endtime="20201110 08:37:23.196"></status>
</kw>
<msg timestamp="20201110 08:37:23.198" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.175" endtime="20201110 08:37:23.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.200" endtime="20201110 08:37:23.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.211" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:23.206" endtime="20201110 08:37:23.211"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:23.168" endtime="20201110 08:37:23.213"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:23.161" endtime="20201110 08:37:23.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.159" endtime="20201110 08:37:23.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:23.223" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:23.222" endtime="20201110 08:37:23.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.217" endtime="20201110 08:37:23.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.157" endtime="20201110 08:37:23.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.155" endtime="20201110 08:37:23.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.227" endtime="20201110 08:37:23.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.151" endtime="20201110 08:37:23.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.147" endtime="20201110 08:37:23.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.116" endtime="20201110 08:37:23.235"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.259" endtime="20201110 08:37:23.381"></status>
</kw>
<msg timestamp="20201110 08:37:23.382" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.256" endtime="20201110 08:37:23.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.389" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:23.385" endtime="20201110 08:37:23.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.391" endtime="20201110 08:37:23.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.247" endtime="20201110 08:37:23.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.241" endtime="20201110 08:37:23.398"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.402" endtime="20201110 08:37:23.407"></status>
</kw>
<msg timestamp="20201110 08:37:23.408" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:23.400" endtime="20201110 08:37:23.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.418" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:23.416" endtime="20201110 08:37:23.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.423" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:23.420" endtime="20201110 08:37:23.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.410" endtime="20201110 08:37:23.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.434" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:23.432" endtime="20201110 08:37:23.435"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.439" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:23.437" endtime="20201110 08:37:23.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.426" endtime="20201110 08:37:23.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.458" endtime="20201110 08:37:23.828"></status>
</kw>
<msg timestamp="20201110 08:37:23.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131024278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131047, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:23.454" endtime="20201110 08:37:23.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131024278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131047, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:23.839" endtime="20201110 08:37:23.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.860" endtime="20201110 08:37:23.865"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.447" endtime="20201110 08:37:23.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.442" endtime="20201110 08:37:23.868"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:23.879" level="INFO">${RESULT} = [{'time': 0.131047, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2722000000002796e-05, 'source_diff': 2.2722000000002796e-05}, {'time': 0.133053361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:23.870" endtime="20201110 08:37:23.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:23.913" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:23.882" endtime="20201110 08:37:23.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.926" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:23.923" endtime="20201110 08:37:23.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:23.931" level="INFO">VALUE: [2.2722000000002796e-05, 3.57220000000158e-05, 3.573600000000843e-05, 3.573599999998067e-05, 3.570799999999541e-05, 3.568100000000962e-05, 3.57220000000158e-05, 3.573600000000843e-05, 3.573600000000843e-05, 3.57220000000158e-05, 3.57220000000158e-05, 3.572199999998804e-05, 3.572199999998804e-05, 3.575000000000106e-05, 3.568100000000962e-05, 3.570799999999541e-05, 3.5722999999987515e-05, 3.5708999999994884e-05, 3.572199999998804e-05, 3.573600000000843e-05, 3.573600000000843e-05, 3.57370000000079e-05, 3.572199999998804e-05, 3.573599999998067e-05, 3.575000000000106e-05, 3.570799999999541e-05, 3.572300000001527e-05, 3.572199999998804e-05, 3.569500000000225e-05, 3.56380000000045e-05, 3.573600000000843e-05, 3.5778000000014076e-05, 3.5722999999987515e-05, 3.572300000001527e-05, 3.573600000000843e-05, 3.570799999999541e-05, 3.575000000000106e-05, 3.573600000000843e-05, 3.575000000000106e-05, 3.572199999998804e-05, 3.572199999998804e-05, 3.575000000000106e-05, 3.57220000000158e-05, 3.57220000000158e-05, 3.572199999998804e-05, 3.573600000000843e-05, 3.57220000000158e-05, 3.57220000000158e-05, 3.5708999999994884e-05, 3.573600000000843e-05]</msg>
<status status="PASS" starttime="20201110 08:37:23.928" endtime="20201110 08:37:23.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.916" endtime="20201110 08:37:23.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:23.941" endtime="20201110 08:37:23.944"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:23.950" endtime="20201110 08:37:23.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.945" endtime="20201110 08:37:23.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.936" endtime="20201110 08:37:23.983"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:23.236" endtime="20201110 08:37:23.984"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:23.109" endtime="20201110 08:37:23.987" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.013" endtime="20201110 08:37:24.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.007" endtime="20201110 08:37:24.043"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.098" endtime="20201110 08:37:24.117"></status>
</kw>
<msg timestamp="20201110 08:37:24.118" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.094" endtime="20201110 08:37:24.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.124" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.120" endtime="20201110 08:37:24.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.131" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:24.127" endtime="20201110 08:37:24.131"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.085" endtime="20201110 08:37:24.133"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.076" endtime="20201110 08:37:24.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.072" endtime="20201110 08:37:24.136"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:24.143" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:24.142" endtime="20201110 08:37:24.144"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.138" endtime="20201110 08:37:24.145"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.069" endtime="20201110 08:37:24.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.066" endtime="20201110 08:37:24.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.148" endtime="20201110 08:37:24.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.057" endtime="20201110 08:37:24.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.047" endtime="20201110 08:37:24.155"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.003" endtime="20201110 08:37:24.156"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.198" endtime="20201110 08:37:24.227"></status>
</kw>
<msg timestamp="20201110 08:37:24.228" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.188" endtime="20201110 08:37:24.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.234" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.230" endtime="20201110 08:37:24.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.237" endtime="20201110 08:37:24.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.178" endtime="20201110 08:37:24.242"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.169" endtime="20201110 08:37:24.244"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.248" endtime="20201110 08:37:24.253"></status>
</kw>
<msg timestamp="20201110 08:37:24.254" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:24.246" endtime="20201110 08:37:24.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.264" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:24.262" endtime="20201110 08:37:24.265"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.269" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:24.267" endtime="20201110 08:37:24.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.256" endtime="20201110 08:37:24.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.282" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:24.280" endtime="20201110 08:37:24.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.287" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:24.285" endtime="20201110 08:37:24.288"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.273" endtime="20201110 08:37:24.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.306" endtime="20201110 08:37:24.676"></status>
</kw>
<msg timestamp="20201110 08:37:24.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.18123975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.181245611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:24.303" endtime="20201110 08:37:24.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.18123975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.181245611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:24.686" endtime="20201110 08:37:24.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.704" endtime="20201110 08:37:24.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.296" endtime="20201110 08:37:24.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.291" endtime="20201110 08:37:24.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:24.723" level="INFO">${RESULT} = [{'time': 0.181245611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.860999999995897e-06, 'source_diff': 5.860999999995897e-06}, {'time': 0.181260514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:24.714" endtime="20201110 08:37:24.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:24.755" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:24.725" endtime="20201110 08:37:24.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.767" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201110 08:37:24.764" endtime="20201110 08:37:24.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.772" level="INFO">VALUE: [5.860999999995897e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.846999999975511e-06, 5.819999999989722e-06, 5.7769999999846e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.834000000010109e-06, 5.860999999995897e-06, 5.83299999998288e-06, 5.791000000004987e-06, 5.834000000010109e-06, 5.847000000003266e-06, 5.834000000010109e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.846999999975511e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.83299999998288e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.860999999995897e-06, 5.805999999997091e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.833000000010635e-06, 5.84800000000274e-06, 5.847000000003266e-06, 5.847000000003266e-06, 5.791999999976705e-06, 5.778000000011829e-06, 5.847000000003266e-06, 5.84800000000274e-06, 5.860999999995897e-06, 5.860999999995897e-06, 5.847000000003266e-06]</msg>
<status status="PASS" starttime="20201110 08:37:24.769" endtime="20201110 08:37:24.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.757" endtime="20201110 08:37:24.775"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.781" endtime="20201110 08:37:24.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.790" endtime="20201110 08:37:24.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.785" endtime="20201110 08:37:24.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.777" endtime="20201110 08:37:24.815"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.159" endtime="20201110 08:37:24.816"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:23.993" endtime="20201110 08:37:24.818" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:24.845" endtime="20201110 08:37:24.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.841" endtime="20201110 08:37:24.872"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.906" endtime="20201110 08:37:24.924"></status>
</kw>
<msg timestamp="20201110 08:37:24.926" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.902" endtime="20201110 08:37:24.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.932" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.928" endtime="20201110 08:37:24.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:24.939" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:24.934" endtime="20201110 08:37:24.939"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.895" endtime="20201110 08:37:24.941"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:24.888" endtime="20201110 08:37:24.943"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.885" endtime="20201110 08:37:24.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:24.952" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:24.951" endtime="20201110 08:37:24.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.946" endtime="20201110 08:37:24.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.884" endtime="20201110 08:37:24.954"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.882" endtime="20201110 08:37:24.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.956" endtime="20201110 08:37:24.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.878" endtime="20201110 08:37:24.961"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.873" endtime="20201110 08:37:24.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.836" endtime="20201110 08:37:24.963"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:24.985" endtime="20201110 08:37:25.040"></status>
</kw>
<msg timestamp="20201110 08:37:25.041" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:24.982" endtime="20201110 08:37:25.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.047" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.043" endtime="20201110 08:37:25.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.049" endtime="20201110 08:37:25.053"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.975" endtime="20201110 08:37:25.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.969" endtime="20201110 08:37:25.057"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.061" endtime="20201110 08:37:25.066"></status>
</kw>
<msg timestamp="20201110 08:37:25.067" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:25.058" endtime="20201110 08:37:25.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.079" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:25.075" endtime="20201110 08:37:25.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.084" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:25.081" endtime="20201110 08:37:25.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.069" endtime="20201110 08:37:25.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.096" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:25.093" endtime="20201110 08:37:25.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.100" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:25.098" endtime="20201110 08:37:25.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.087" endtime="20201110 08:37:25.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.120" endtime="20201110 08:37:25.471"></status>
</kw>
<msg timestamp="20201110 08:37:25.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131558139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131569958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.116" endtime="20201110 08:37:25.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131558139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131569958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:25.481" endtime="20201110 08:37:25.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.503" endtime="20201110 08:37:25.508"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.109" endtime="20201110 08:37:25.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.104" endtime="20201110 08:37:25.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:25.525" level="INFO">${RESULT} = [{'time': 0.131569958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.181899999999625e-05, 'source_diff': 1.181899999999625e-05}, {'time': 0.132178333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:25.515" endtime="20201110 08:37:25.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:25.557" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:25.528" endtime="20201110 08:37:25.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.569" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201110 08:37:25.566" endtime="20201110 08:37:25.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.574" level="INFO">VALUE: [1.181899999999625e-05, 1.181899999999625e-05, 1.181899999999625e-05, 1.1833999999988354e-05, 1.1819999999995723e-05, 1.1805000000003618e-05, 1.183299999998888e-05, 1.1806000000003092e-05, 1.181899999999625e-05, 1.1847000000009267e-05, 1.181899999999625e-05, 1.1819000000024005e-05, 1.1833000000016636e-05, 1.1819000000024005e-05, 1.1806000000003092e-05, 1.1805000000003618e-05, 1.1819000000024005e-05, 1.1833000000016636e-05, 1.181899999999625e-05, 1.181899999999625e-05, 1.1805000000003618e-05, 1.183299999998888e-05, 1.181899999999625e-05, 1.181899999999625e-05, 1.1805000000003618e-05, 1.183400000001611e-05, 1.181899999999625e-05, 1.177800000001783e-05, 1.181899999999625e-05, 1.1805000000003618e-05, 1.1805000000003618e-05, 1.183400000001611e-05, 1.1819999999995723e-05, 1.1791000000010987e-05, 1.1819999999995723e-05, 1.181899999999625e-05, 1.1791999999982705e-05, 1.1805000000003618e-05, 1.1819999999995723e-05, 1.1846999999981511e-05, 1.1763999999997443e-05, 1.1777999999990074e-05, 1.181899999999625e-05, 1.181899999999625e-05, 1.1819999999995723e-05, 1.1806000000003092e-05, 1.181899999999625e-05, 1.1833999999988354e-05, 1.181899999999625e-05, 1.181899999999625e-05]</msg>
<status status="PASS" starttime="20201110 08:37:25.571" endtime="20201110 08:37:25.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.559" endtime="20201110 08:37:25.577"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.583" endtime="20201110 08:37:25.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.591" endtime="20201110 08:37:25.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.587" endtime="20201110 08:37:25.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.578" endtime="20201110 08:37:25.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:24.964" endtime="20201110 08:37:25.617"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:24.829" endtime="20201110 08:37:25.618" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:25.636" endtime="20201110 08:37:25.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.632" endtime="20201110 08:37:25.659"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.694" endtime="20201110 08:37:25.712"></status>
</kw>
<msg timestamp="20201110 08:37:25.713" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.690" endtime="20201110 08:37:25.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.720" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.715" endtime="20201110 08:37:25.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.727" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:25.722" endtime="20201110 08:37:25.728"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:25.683" endtime="20201110 08:37:25.729"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:25.677" endtime="20201110 08:37:25.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.674" endtime="20201110 08:37:25.732"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:25.739" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:25.738" endtime="20201110 08:37:25.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.734" endtime="20201110 08:37:25.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.672" endtime="20201110 08:37:25.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.669" endtime="20201110 08:37:25.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.743" endtime="20201110 08:37:25.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.665" endtime="20201110 08:37:25.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.660" endtime="20201110 08:37:25.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.629" endtime="20201110 08:37:25.750"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.772" endtime="20201110 08:37:25.897"></status>
</kw>
<msg timestamp="20201110 08:37:25.898" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.769" endtime="20201110 08:37:25.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.905" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:25.901" endtime="20201110 08:37:25.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.908" endtime="20201110 08:37:25.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.762" endtime="20201110 08:37:25.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.756" endtime="20201110 08:37:25.917"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.922" endtime="20201110 08:37:25.927"></status>
</kw>
<msg timestamp="20201110 08:37:25.929" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201110 08:37:25.919" endtime="20201110 08:37:25.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.941" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201110 08:37:25.939" endtime="20201110 08:37:25.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.947" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201110 08:37:25.944" endtime="20201110 08:37:25.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.931" endtime="20201110 08:37:25.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.961" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201110 08:37:25.958" endtime="20201110 08:37:25.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:25.965" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201110 08:37:25.963" endtime="20201110 08:37:25.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.952" endtime="20201110 08:37:25.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:25.987" endtime="20201110 08:37:26.418"></status>
</kw>
<msg timestamp="20201110 08:37:26.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13175675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131774819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:25.983" endtime="20201110 08:37:26.427"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.13175675, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131774819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:26.429" endtime="20201110 08:37:26.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.448" endtime="20201110 08:37:26.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.974" endtime="20201110 08:37:26.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.969" endtime="20201110 08:37:26.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:26.466" level="INFO">${RESULT} = [{'time': 0.131774819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8068999999981683e-05, 'source_diff': 1.8068999999981683e-05}, {'time': 0.133786, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:26.457" endtime="20201110 08:37:26.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201110 08:37:26.499" level="INFO">${OVERHEAD} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:26.469" endtime="20201110 08:37:26.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.511" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201110 08:37:26.509" endtime="20201110 08:37:26.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.517" level="INFO">VALUE: [1.8068999999981683e-05, 1.8124999999979963e-05, 1.8084000000001543e-05, 1.8041999999995895e-05, 1.813900000000035e-05, 1.80969999999947e-05, 1.811099999998733e-05, 1.808300000000207e-05, 1.8070000000008912e-05, 1.8070000000008912e-05, 1.8097000000022456e-05, 1.8068999999981683e-05, 1.8111000000015087e-05, 1.811099999998733e-05, 1.8069999999981157e-05, 1.80969999999947e-05, 1.808300000000207e-05, 1.813900000000035e-05, 1.8070000000008912e-05, 1.8084000000001543e-05, 1.8070000000008912e-05, 1.8070000000008912e-05, 1.8055999999988526e-05, 1.806900000000944e-05, 1.805600000001628e-05, 1.806900000000944e-05, 1.806900000000944e-05, 1.808300000000207e-05, 1.8125000000007718e-05, 1.8070000000008912e-05, 1.8084000000001543e-05, 1.806900000000944e-05, 1.8069999999981157e-05, 1.8000000000018e-05, 1.806900000000944e-05, 1.8070000000008912e-05, 1.8068999999981683e-05, 1.806900000000944e-05, 1.806900000000944e-05, 1.813900000000035e-05, 1.8054999999989052e-05, 1.80969999999947e-05, 1.806900000000944e-05, 1.8068999999981683e-05, 1.805600000001628e-05, 1.8069999999981157e-05, 1.8082999999974314e-05, 1.808300000000207e-05, 1.809800000002193e-05, 1.805600000001628e-05]</msg>
<status status="PASS" starttime="20201110 08:37:26.513" endtime="20201110 08:37:26.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.501" endtime="20201110 08:37:26.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:26.527" endtime="20201110 08:37:26.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:26.536" endtime="20201110 08:37:26.558"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.531" endtime="20201110 08:37:26.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.522" endtime="20201110 08:37:26.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:25.751" endtime="20201110 08:37:26.562"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:25.623" endtime="20201110 08:37:26.564" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:36:53.807" endtime="20201110 08:37:26.592"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:37:26.783" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:37:26.799" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:37:27.628" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:37:26.779" endtime="20201110 08:37:27.630"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:37:30.635" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:37:27.632" endtime="20201110 08:37:30.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.776" endtime="20201110 08:37:30.638"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:30.643" endtime="20201110 08:37:30.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.640" endtime="20201110 08:37:30.973"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.004" endtime="20201110 08:37:31.026"></status>
</kw>
<msg timestamp="20201110 08:37:31.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201110 08:37:31.000" endtime="20201110 08:37:31.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.034" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': [': This is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success...</msg>
<status status="PASS" starttime="20201110 08:37:31.030" endtime="20201110 08:37:31.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.041" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:31.036" endtime="20201110 08:37:31.041"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:30.994" endtime="20201110 08:37:31.043"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:30.989" endtime="20201110 08:37:31.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.985" endtime="20201110 08:37:31.046"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:31.053" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:31.052" endtime="20201110 08:37:31.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.047" endtime="20201110 08:37:31.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.983" endtime="20201110 08:37:31.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.982" endtime="20201110 08:37:31.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.057" endtime="20201110 08:37:31.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.978" endtime="20201110 08:37:31.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.064" endtime="20201110 08:37:31.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:30.975" endtime="20201110 08:37:31.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:26.773" endtime="20201110 08:37:31.070"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.086" endtime="20201110 08:37:31.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.080" endtime="20201110 08:37:31.109"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.142" endtime="20201110 08:37:31.161"></status>
</kw>
<msg timestamp="20201110 08:37:31.162" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.139" endtime="20201110 08:37:31.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.168" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.164" endtime="20201110 08:37:31.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.175" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:37:31.171" endtime="20201110 08:37:31.175"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:31.132" endtime="20201110 08:37:31.177"></status>
</kw>
<status status="FAIL" starttime="20201110 08:37:31.125" endtime="20201110 08:37:31.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.123" endtime="20201110 08:37:31.180"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:37:31.188" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:37:31.187" endtime="20201110 08:37:31.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.181" endtime="20201110 08:37:31.189"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.121" endtime="20201110 08:37:31.190"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.119" endtime="20201110 08:37:31.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.192" endtime="20201110 08:37:31.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.115" endtime="20201110 08:37:31.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.111" endtime="20201110 08:37:31.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.077" endtime="20201110 08:37:31.199"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.223" endtime="20201110 08:37:31.242"></status>
</kw>
<msg timestamp="20201110 08:37:31.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.220" endtime="20201110 08:37:31.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.246" endtime="20201110 08:37:31.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.252" endtime="20201110 08:37:31.256"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.213" endtime="20201110 08:37:31.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.207" endtime="20201110 08:37:31.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.278" endtime="20201110 08:37:31.653"></status>
</kw>
<msg timestamp="20201110 08:37:31.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131139792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131157681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.275" endtime="20201110 08:37:31.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.131139792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.131157681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.664" endtime="20201110 08:37:31.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.683" endtime="20201110 08:37:31.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.265" endtime="20201110 08:37:31.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.260" endtime="20201110 08:37:31.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:31.702" level="INFO">${RESULT} = [{'time': 0.131157681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.788899999999316e-05, 'source_diff': 1.788899999999316e-05}, {'time': 0.131188708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:31.693" endtime="20201110 08:37:31.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:31.735" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:31.705" endtime="20201110 08:37:31.736"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.747" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201110 08:37:31.744" endtime="20201110 08:37:31.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.753" level="INFO">VALUE: [1.788899999999316e-05, 1.7582999999987692e-05, 1.8193999999999155e-05, 1.805600000001628e-05, 1.7959000000011827e-05, 1.762499999999334e-05, 1.755500000000243e-05, 1.7943999999991966e-05, 1.7957999999984597e-05, 1.8180000000006524e-05, 1.788899999999316e-05, 1.729100000000261e-05, 1.7735999999990426e-05, 1.761100000000071e-05, 1.7318999999987872e-05, 1.7500000000003624e-05, 1.8111000000015087e-05, 1.756899999999506e-05, 1.7431000000012187e-05, 1.759700000000808e-05, 1.781900000000225e-05, 1.773600000001818e-05, 1.7957999999984597e-05, 1.7305999999994714e-05, 1.7847000000015267e-05, 1.7292000000002083e-05, 1.7972000000004984e-05, 1.8055999999988526e-05, 1.7721999999997795e-05, 1.7985999999997615e-05, 1.7903000000013547e-05, 1.8181000000005998e-05, 1.7860999999980143e-05, 1.7846999999987512e-05, 1.7833999999994354e-05, 1.7735999999990426e-05, 1.7527999999988886e-05, 1.788899999999316e-05, 1.790299999998579e-05, 1.7862000000007372e-05, 1.772299999999727e-05, 1.729100000000261e-05, 1.808300000000207e-05, 1.751299999999678e-05, 1.734700000000089e-05, 1.806900000000944e-05, 1.780500000000962e-05, 1.7401999999999695e-05, 1.8054999999989052e-05, 1.759700000000808e-05]</msg>
<status status="PASS" starttime="20201110 08:37:31.749" endtime="20201110 08:37:31.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.737" endtime="20201110 08:37:31.756"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.763" endtime="20201110 08:37:31.766"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:31.772" endtime="20201110 08:37:31.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.767" endtime="20201110 08:37:31.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.758" endtime="20201110 08:37:31.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.203" endtime="20201110 08:37:31.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.202" endtime="20201110 08:37:31.805"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.840" endtime="20201110 08:37:31.858"></status>
</kw>
<msg timestamp="20201110 08:37:31.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.836" endtime="20201110 08:37:31.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:31.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:31.862" endtime="20201110 08:37:31.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.869" endtime="20201110 08:37:31.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.827" endtime="20201110 08:37:31.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.816" endtime="20201110 08:37:31.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:31.894" endtime="20201110 08:37:32.260"></status>
</kw>
<msg timestamp="20201110 08:37:32.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060985153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061003125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:31.890" endtime="20201110 08:37:32.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060985153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.061003125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.270" endtime="20201110 08:37:32.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.290" endtime="20201110 08:37:32.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.882" endtime="20201110 08:37:32.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.877" endtime="20201110 08:37:32.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.309" level="INFO">${RESULT} = [{'time': 0.061003125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7971999999998045e-05, 'source_diff': 1.7971999999998045e-05}, {'time': 0.061034125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:32.299" endtime="20201110 08:37:32.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.341" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:32.311" endtime="20201110 08:37:32.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.353" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.351" endtime="20201110 08:37:32.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.359" level="INFO">VALUE: [1.7971999999998045e-05, 1.7943999999998905e-05, 1.7985999999997615e-05, 1.7834000000001293e-05, 1.7528000000002764e-05, 1.7570000000001473e-05, 1.793099999999881e-05, 1.812500000000078e-05, 1.7500000000003624e-05, 1.766699999999899e-05, 1.7278000000002514e-05, 1.784700000000139e-05, 1.8070000000001973e-05, 1.7848000000000863e-05, 1.7848000000000863e-05, 1.7513999999996255e-05, 1.766699999999899e-05, 1.795899999999795e-05, 1.7638000000000376e-05, 1.744499999999788e-05, 1.809700000000164e-05, 1.761100000000071e-05, 1.7443999999998405e-05, 1.80690000000025e-05, 1.783300000000182e-05, 1.815299999999992e-05, 1.787500000000053e-05, 1.784700000000139e-05, 1.7458000000004914e-05, 1.816699999999949e-05, 1.759700000000114e-05, 1.7957999999998475e-05, 1.8166000000000015e-05, 1.8193999999999155e-05, 1.808299999999513e-05, 1.7542000000002334e-05, 1.811100000000121e-05, 1.811099999999427e-05, 1.809700000000164e-05, 1.743099999999831e-05, 1.7514000000003194e-05, 1.8222000000005234e-05, 1.7514000000003194e-05, 1.8221999999998295e-05, 1.763899999999985e-05, 1.7778000000003014e-05, 1.743099999999831e-05, 1.745899999999745e-05, 1.7292000000002083e-05, 1.765299999999942e-05]</msg>
<status status="PASS" starttime="20201110 08:37:32.356" endtime="20201110 08:37:32.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.343" endtime="20201110 08:37:32.363"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.374" endtime="20201110 08:37:32.377"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.383" endtime="20201110 08:37:32.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.379" endtime="20201110 08:37:32.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.365" endtime="20201110 08:37:32.409"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.809" endtime="20201110 08:37:32.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.807" endtime="20201110 08:37:32.410"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.433" endtime="20201110 08:37:32.452"></status>
</kw>
<msg timestamp="20201110 08:37:32.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.429" endtime="20201110 08:37:32.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:32.455" endtime="20201110 08:37:32.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.462" endtime="20201110 08:37:32.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.422" endtime="20201110 08:37:32.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.417" endtime="20201110 08:37:32.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.485" endtime="20201110 08:37:32.844"></status>
</kw>
<msg timestamp="20201110 08:37:32.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042414306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042432292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.481" endtime="20201110 08:37:32.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042414306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042432292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:32.854" endtime="20201110 08:37:32.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.872" endtime="20201110 08:37:32.876"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.474" endtime="20201110 08:37:32.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.470" endtime="20201110 08:37:32.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:32.890" level="INFO">${RESULT} = [{'time': 0.042432292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7986000000004554e-05, 'source_diff': 1.7986000000004554e-05}, {'time': 0.042462306, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:32.881" endtime="20201110 08:37:32.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:32.920" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:32.892" endtime="20201110 08:37:32.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.931" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201110 08:37:32.929" endtime="20201110 08:37:32.932"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:32.936" level="INFO">VALUE: [1.7986000000004554e-05, 1.7306000000001653e-05, 1.808300000000207e-05, 1.7612000000000183e-05, 1.783300000000182e-05, 1.7513999999996255e-05, 1.8013999999996755e-05, 1.758300000000157e-05, 1.808300000000207e-05, 1.8179999999999585e-05, 1.7735999999997365e-05, 1.80690000000025e-05, 1.7943999999998905e-05, 1.780499999999574e-05, 1.7542000000002334e-05, 1.755500000000243e-05, 1.763899999999985e-05, 1.8222000000005234e-05, 1.731900000000175e-05, 1.82089999999982e-05, 1.7943999999998905e-05, 1.7514000000003194e-05, 1.7458000000004914e-05, 1.790299999999967e-05, 1.8195000000005568e-05, 1.7500000000003624e-05, 1.829100000000361e-05, 1.762500000000028e-05, 1.743099999999831e-05, 1.783300000000182e-05, 1.762500000000028e-05, 1.763899999999985e-05, 1.8028000000003264e-05, 1.7735999999997365e-05, 1.795899999999795e-05, 1.8055999999995465e-05, 1.795899999999795e-05, 1.818099999999906e-05, 1.7723000000004208e-05, 1.8000000000004124e-05, 1.7999999999997185e-05, 1.772299999999727e-05, 1.7848000000000863e-05, 1.781899999999531e-05, 1.7638000000000376e-05, 1.754100000000286e-05, 1.808300000000207e-05, 1.751299999999678e-05, 1.8222000000005234e-05, 1.808299999999513e-05]</msg>
<status status="PASS" starttime="20201110 08:37:32.933" endtime="20201110 08:37:32.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.922" endtime="20201110 08:37:32.940"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:32.946" endtime="20201110 08:37:32.949"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:32.955" endtime="20201110 08:37:32.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.950" endtime="20201110 08:37:32.978"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.942" endtime="20201110 08:37:32.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.412" endtime="20201110 08:37:32.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.411" endtime="20201110 08:37:32.981"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.004" endtime="20201110 08:37:33.022"></status>
</kw>
<msg timestamp="20201110 08:37:33.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.000" endtime="20201110 08:37:33.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.025" endtime="20201110 08:37:33.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.031" endtime="20201110 08:37:33.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.993" endtime="20201110 08:37:33.037"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.987" endtime="20201110 08:37:33.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.061" endtime="20201110 08:37:33.410"></status>
</kw>
<msg timestamp="20201110 08:37:33.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042389694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:33.055" endtime="20201110 08:37:33.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423715, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042389694, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:37:33.420" endtime="20201110 08:37:33.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.439" endtime="20201110 08:37:33.443"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.047" endtime="20201110 08:37:33.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.039" endtime="20201110 08:37:33.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:33.457" level="INFO">${RESULT} = [{'time': 0.042389694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8193999999999155e-05, 'source_diff': 1.8193999999999155e-05}, {'time': 0.042418708, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:33.448" endtime="20201110 08:37:33.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:33.489" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:33.459" endtime="20201110 08:37:33.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.500" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201110 08:37:33.498" endtime="20201110 08:37:33.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.505" level="INFO">VALUE: [1.8193999999999155e-05, 1.7499999999996685e-05, 1.7499999999996685e-05, 1.729100000000261e-05, 1.805500000000293e-05, 1.7415999999999265e-05, 1.763899999999985e-05, 1.761100000000071e-05, 1.812500000000078e-05, 1.7444000000005344e-05, 1.736100000000046e-05, 1.7264000000002944e-05, 1.8013999999996755e-05, 1.7764000000003444e-05, 1.815299999999992e-05, 1.7278000000002514e-05, 1.809700000000164e-05, 1.7749999999996935e-05, 1.816699999999949e-05, 1.762500000000028e-05, 1.7791999999995645e-05, 1.766699999999899e-05, 1.733299999999438e-05, 1.7736000000004304e-05, 1.7749999999996935e-05, 1.786100000000096e-05, 1.740299999999917e-05, 1.7806000000002153e-05, 1.8167000000006428e-05, 1.769499999999813e-05, 1.795899999999795e-05, 1.740299999999917e-05, 1.7500000000003624e-05, 1.795899999999795e-05, 1.787500000000053e-05, 1.7777999999996075e-05, 1.8250000000004374e-05, 1.7737000000003778e-05, 1.7638000000000376e-05, 1.812500000000078e-05, 1.812499999999384e-05, 1.7888000000000626e-05, 1.733300000000132e-05, 1.7915999999999765e-05, 1.7930000000006274e-05, 1.729100000000261e-05, 1.806899999999556e-05, 1.7528000000002764e-05, 1.7999999999997185e-05, 1.7665999999999515e-05]</msg>
<status status="PASS" starttime="20201110 08:37:33.502" endtime="20201110 08:37:33.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.491" endtime="20201110 08:37:33.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.515" endtime="20201110 08:37:33.518"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:33.523" endtime="20201110 08:37:33.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.519" endtime="20201110 08:37:33.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.510" endtime="20201110 08:37:33.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.983" endtime="20201110 08:37:33.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:32.982" endtime="20201110 08:37:33.549"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.572" endtime="20201110 08:37:33.591"></status>
</kw>
<msg timestamp="20201110 08:37:33.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.569" endtime="20201110 08:37:33.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:33.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:33.594" endtime="20201110 08:37:33.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.601" endtime="20201110 08:37:33.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.561" endtime="20201110 08:37:33.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.556" endtime="20201110 08:37:33.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:33.627" endtime="20201110 08:37:34.030"></status>
</kw>
<msg timestamp="20201110 08:37:34.039" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041997625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042015847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:33.623" endtime="20201110 08:37:34.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041997625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042015847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.041" endtime="20201110 08:37:34.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.060" endtime="20201110 08:37:34.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.613" endtime="20201110 08:37:34.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.609" endtime="20201110 08:37:34.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.078" level="INFO">${RESULT} = [{'time': 0.042015847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.8222000000005234e-05, 'source_diff': 1.8222000000005234e-05}, {'time': 0.042042861, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.069" endtime="20201110 08:37:34.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.111" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:34.080" endtime="20201110 08:37:34.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.122" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.120" endtime="20201110 08:37:34.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.128" level="INFO">VALUE: [1.8222000000005234e-05, 1.731900000000175e-05, 1.80690000000025e-05, 1.7401999999999695e-05, 1.7915999999999765e-05, 1.761100000000071e-05, 1.755499999999549e-05, 1.783299999999488e-05, 1.7972000000004984e-05, 1.7527999999995825e-05, 1.734699999999395e-05, 1.765299999999942e-05, 1.8221999999998295e-05, 1.7721999999997795e-05, 1.7513999999996255e-05, 1.7499999999996685e-05, 1.793099999999881e-05, 1.783300000000182e-05, 1.7222000000004234e-05, 1.818099999999906e-05, 1.7806000000002153e-05, 1.8181000000005998e-05, 1.7500000000003624e-05, 1.7570000000001473e-05, 1.818099999999906e-05, 1.7528000000002764e-05, 1.7431000000005248e-05, 1.762500000000028e-05, 1.7791999999995645e-05, 1.7514000000003194e-05, 1.7445000000004818e-05, 1.8069999999995034e-05, 1.737500000000003e-05, 1.7249999999996435e-05, 1.7665999999999515e-05, 1.801299999999728e-05, 1.8180000000006524e-05, 1.7971999999998045e-05, 1.7735999999997365e-05, 1.7527999999995825e-05, 1.78890000000001e-05, 1.7722000000004734e-05, 1.80690000000025e-05, 1.80690000000025e-05, 1.7736000000004304e-05, 1.7999999999997185e-05, 1.7556000000001903e-05, 1.7443999999998405e-05, 1.740299999999917e-05, 1.7929999999999335e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.125" endtime="20201110 08:37:34.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.113" endtime="20201110 08:37:34.131"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.137" endtime="20201110 08:37:34.140"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.146" endtime="20201110 08:37:34.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.141" endtime="20201110 08:37:34.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.133" endtime="20201110 08:37:34.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.551" endtime="20201110 08:37:34.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:33.550" endtime="20201110 08:37:34.172"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.194" endtime="20201110 08:37:34.214"></status>
</kw>
<msg timestamp="20201110 08:37:34.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.191" endtime="20201110 08:37:34.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.218" endtime="20201110 08:37:34.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.224" endtime="20201110 08:37:34.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.184" endtime="20201110 08:37:34.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.178" endtime="20201110 08:37:34.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.248" endtime="20201110 08:37:34.591"></status>
</kw>
<msg timestamp="20201110 08:37:34.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042318847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042336167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.244" endtime="20201110 08:37:34.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042318847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042336167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.601" endtime="20201110 08:37:34.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.619" endtime="20201110 08:37:34.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.237" endtime="20201110 08:37:34.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.232" endtime="20201110 08:37:34.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:34.637" level="INFO">${RESULT} = [{'time': 0.042336167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7320000000001223e-05, 'source_diff': 1.7320000000001223e-05}, {'time': 0.042363153, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:34.628" endtime="20201110 08:37:34.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:34.668" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:34.639" endtime="20201110 08:37:34.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.679" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201110 08:37:34.677" endtime="20201110 08:37:34.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.685" level="INFO">VALUE: [1.7320000000001223e-05, 1.816699999999949e-05, 1.8084000000001543e-05, 1.7959000000004888e-05, 1.7306000000001653e-05, 1.7723000000004208e-05, 1.7986000000004554e-05, 1.7749999999996935e-05, 1.808300000000207e-05, 1.762500000000028e-05, 1.7445000000004818e-05, 1.7651999999999946e-05, 1.7722000000004734e-05, 1.8193999999999155e-05, 1.8152000000000446e-05, 1.7957999999998475e-05, 1.8179999999999585e-05, 1.762500000000028e-05, 1.7777999999996075e-05, 1.80690000000025e-05, 1.805499999999599e-05, 1.805500000000293e-05, 1.762500000000028e-05, 1.754099999999592e-05, 1.82089999999982e-05, 1.808299999999513e-05, 1.8179999999999585e-05, 1.7735999999997365e-05, 1.7749999999996935e-05, 1.783300000000182e-05, 1.784700000000139e-05, 1.802700000000379e-05, 1.7915999999999765e-05, 1.7403000000006108e-05, 1.7250000000003374e-05, 1.744499999999788e-05, 1.7292000000002083e-05, 1.763899999999985e-05, 1.812500000000078e-05, 1.8028000000003264e-05, 1.7777999999996075e-05, 1.784699999999445e-05, 1.786100000000096e-05, 1.7569999999994534e-05, 1.7667000000005928e-05, 1.7209000000004138e-05, 1.7292000000002083e-05, 1.7862000000000433e-05, 1.740299999999917e-05, 1.737500000000003e-05]</msg>
<status status="PASS" starttime="20201110 08:37:34.681" endtime="20201110 08:37:34.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.670" endtime="20201110 08:37:34.688"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.694" endtime="20201110 08:37:34.697"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:34.703" endtime="20201110 08:37:34.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.698" endtime="20201110 08:37:34.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.689" endtime="20201110 08:37:34.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.174" endtime="20201110 08:37:34.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.172" endtime="20201110 08:37:34.728"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.751" endtime="20201110 08:37:34.769"></status>
</kw>
<msg timestamp="20201110 08:37:34.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.748" endtime="20201110 08:37:34.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:34.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:34.773" endtime="20201110 08:37:34.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.779" endtime="20201110 08:37:34.782"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.740" endtime="20201110 08:37:34.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.735" endtime="20201110 08:37:34.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:34.802" endtime="20201110 08:37:35.146"></status>
</kw>
<msg timestamp="20201110 08:37:35.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041611903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:34.799" endtime="20201110 08:37:35.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041593917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041611903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.158" endtime="20201110 08:37:35.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.180" endtime="20201110 08:37:35.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.792" endtime="20201110 08:37:35.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.787" endtime="20201110 08:37:35.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.199" level="INFO">${RESULT} = [{'time': 0.041611903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7985999999997615e-05, 'source_diff': 1.7985999999997615e-05}, {'time': 0.041644903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:35.189" endtime="20201110 08:37:35.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.232" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:35.201" endtime="20201110 08:37:35.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.246" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.244" endtime="20201110 08:37:35.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.252" level="INFO">VALUE: [1.7985999999997615e-05, 1.8069999999995034e-05, 1.8069999999995034e-05, 1.797299999999752e-05, 1.8056000000002403e-05, 1.7848000000000863e-05, 1.8014000000003694e-05, 1.818099999999906e-05, 1.818099999999906e-05, 1.808300000000207e-05, 1.7931000000005748e-05, 1.7848000000000863e-05, 1.7612000000000183e-05, 1.7443999999998405e-05, 1.759700000000114e-05, 1.7999999999997185e-05, 1.737500000000003e-05, 1.784700000000139e-05, 1.7736000000004304e-05, 1.7401999999999695e-05, 1.808300000000207e-05, 1.7707999999998225e-05, 1.781900000000225e-05, 1.8194000000006094e-05, 1.805499999999599e-05, 1.7528000000002764e-05, 1.7556000000001903e-05, 1.7763999999996505e-05, 1.818099999999906e-05, 1.805500000000293e-05, 1.7736000000004304e-05, 1.741699999999874e-05, 1.7721999999997795e-05, 1.781899999999531e-05, 1.8098000000001113e-05, 1.816699999999949e-05, 1.7471999999997545e-05, 1.8221999999998295e-05, 1.819499999999863e-05, 1.8084000000001543e-05, 1.763899999999985e-05, 1.811100000000121e-05, 1.7542000000002334e-05, 1.7514000000003194e-05, 1.7985999999997615e-05, 1.7792000000002584e-05, 1.7528000000002764e-05, 1.736100000000046e-05, 1.7292000000002083e-05, 1.762500000000028e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.249" endtime="20201110 08:37:35.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.235" endtime="20201110 08:37:35.256"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.262" endtime="20201110 08:37:35.265"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.271" endtime="20201110 08:37:35.293"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.267" endtime="20201110 08:37:35.295"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.258" endtime="20201110 08:37:35.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.730" endtime="20201110 08:37:35.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:34.729" endtime="20201110 08:37:35.298"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.322" endtime="20201110 08:37:35.341"></status>
</kw>
<msg timestamp="20201110 08:37:35.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.319" endtime="20201110 08:37:35.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.345" endtime="20201110 08:37:35.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.352" endtime="20201110 08:37:35.356"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.311" endtime="20201110 08:37:35.358"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.305" endtime="20201110 08:37:35.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.377" endtime="20201110 08:37:35.729"></status>
</kw>
<msg timestamp="20201110 08:37:35.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044968236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044985556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.373" endtime="20201110 08:37:35.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044968236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044985556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.739" endtime="20201110 08:37:35.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.758" endtime="20201110 08:37:35.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.366" endtime="20201110 08:37:35.763"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.361" endtime="20201110 08:37:35.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:35.775" level="INFO">${RESULT} = [{'time': 0.044985556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7320000000001223e-05, 'source_diff': 1.7320000000001223e-05}, {'time': 0.045013569, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:35.766" endtime="20201110 08:37:35.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:35.806" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:35.777" endtime="20201110 08:37:35.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.817" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201110 08:37:35.815" endtime="20201110 08:37:35.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.824" level="INFO">VALUE: [1.7320000000001223e-05, 1.7402000000006634e-05, 1.7721999999997795e-05, 1.8070000000001973e-05, 1.751300000000372e-05, 1.733300000000132e-05, 1.7750000000003874e-05, 1.7693999999998655e-05, 1.727700000000304e-05, 1.8152000000000446e-05, 1.7749999999996935e-05, 1.7957999999998475e-05, 1.783300000000182e-05, 1.811100000000121e-05, 1.7735999999997365e-05, 1.740299999999917e-05, 1.813900000000035e-05, 1.783300000000182e-05, 1.740299999999917e-05, 1.793099999999881e-05, 1.805500000000293e-05, 1.7569000000002e-05, 1.768099999999856e-05, 1.82089999999982e-05, 1.784699999999445e-05, 1.816699999999949e-05, 1.7736000000004304e-05, 1.784700000000139e-05, 1.7736000000004304e-05, 1.740299999999917e-05, 1.761100000000071e-05, 1.795899999999795e-05, 1.819499999999863e-05, 1.795899999999795e-05, 1.812500000000078e-05, 1.797299999999752e-05, 1.7806000000002153e-05, 1.819499999999863e-05, 1.761100000000071e-05, 1.7570000000001473e-05, 1.7291999999995145e-05, 1.795899999999795e-05, 1.8069999999995034e-05, 1.7514000000003194e-05, 1.7443999999998405e-05, 1.7401999999999695e-05, 1.7236000000003804e-05, 1.7457999999997975e-05, 1.762500000000028e-05, 1.7443999999998405e-05]</msg>
<status status="PASS" starttime="20201110 08:37:35.819" endtime="20201110 08:37:35.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.808" endtime="20201110 08:37:35.833"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.839" endtime="20201110 08:37:35.842"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:35.848" endtime="20201110 08:37:35.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.843" endtime="20201110 08:37:35.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.835" endtime="20201110 08:37:35.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.300" endtime="20201110 08:37:35.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.299" endtime="20201110 08:37:35.874"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.897" endtime="20201110 08:37:35.915"></status>
</kw>
<msg timestamp="20201110 08:37:35.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.893" endtime="20201110 08:37:35.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:35.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:35.919" endtime="20201110 08:37:35.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.925" endtime="20201110 08:37:35.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.886" endtime="20201110 08:37:35.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.880" endtime="20201110 08:37:35.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:35.948" endtime="20201110 08:37:36.326"></status>
</kw>
<msg timestamp="20201110 08:37:36.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042023444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042041278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:35.945" endtime="20201110 08:37:36.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042023444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042041278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:36.336" endtime="20201110 08:37:36.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.355" endtime="20201110 08:37:36.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.938" endtime="20201110 08:37:36.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.933" endtime="20201110 08:37:36.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.373" level="INFO">${RESULT} = [{'time': 0.042041278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.7834000000001293e-05, 'source_diff': 1.7834000000001293e-05}, {'time': 0.042067292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:36.364" endtime="20201110 08:37:36.373"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.405" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:36.375" endtime="20201110 08:37:36.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.417" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.414" endtime="20201110 08:37:36.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.422" level="INFO">VALUE: [1.7834000000001293e-05, 1.7985999999997615e-05, 1.7999999999997185e-05, 1.822299999999777e-05, 1.794499999999838e-05, 1.8181000000005998e-05, 1.808299999999513e-05, 1.8056000000002403e-05, 1.752699999999635e-05, 1.801300000000422e-05, 1.811100000000121e-05, 1.7665999999999515e-05, 1.751300000000372e-05, 1.7888000000000626e-05, 1.78890000000001e-05, 1.7957999999998475e-05, 1.7750000000003874e-05, 1.7749999999996935e-05, 1.78890000000001e-05, 1.7527999999995825e-05, 1.809700000000164e-05, 1.7999999999997185e-05, 1.813900000000035e-05, 1.7999999999997185e-05, 1.741699999999874e-05, 1.7277999999995575e-05, 1.7291999999995145e-05, 1.808300000000207e-05, 1.73889999999996e-05, 1.736100000000046e-05, 1.7514000000003194e-05, 1.7291999999995145e-05, 1.8070000000001973e-05, 1.818099999999906e-05, 1.740299999999917e-05, 1.815299999999992e-05, 1.736100000000046e-05, 1.78890000000001e-05, 1.737500000000003e-05, 1.743099999999831e-05, 1.762500000000028e-05, 1.7499999999996685e-05, 1.795899999999795e-05, 1.741699999999874e-05, 1.8222000000005234e-05, 1.7707999999998225e-05, 1.7985999999997615e-05, 1.7500000000003624e-05, 1.734700000000089e-05, 1.7957999999998475e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.419" endtime="20201110 08:37:36.424"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.407" endtime="20201110 08:37:36.425"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.432" endtime="20201110 08:37:36.436"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:36.442" endtime="20201110 08:37:36.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.438" endtime="20201110 08:37:36.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.427" endtime="20201110 08:37:36.467"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.876" endtime="20201110 08:37:36.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:35.875" endtime="20201110 08:37:36.468"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.491" endtime="20201110 08:37:36.510"></status>
</kw>
<msg timestamp="20201110 08:37:36.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.488" endtime="20201110 08:37:36.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:36.514" endtime="20201110 08:37:36.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.521" endtime="20201110 08:37:36.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.480" endtime="20201110 08:37:36.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.474" endtime="20201110 08:37:36.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.546" endtime="20201110 08:37:36.901"></status>
</kw>
<msg timestamp="20201110 08:37:36.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04271525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042733431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:36.542" endtime="20201110 08:37:36.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04271525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042733431, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:36.911" endtime="20201110 08:37:36.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:36.931" endtime="20201110 08:37:36.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.535" endtime="20201110 08:37:36.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.530" endtime="20201110 08:37:36.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:36.950" level="INFO">${RESULT} = [{'time': 0.042733431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.818099999999906e-05, 'source_diff': 1.818099999999906e-05}, {'time': 0.042760444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:36.940" endtime="20201110 08:37:36.950"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:36.982" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:36.952" endtime="20201110 08:37:36.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:36.994" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201110 08:37:36.992" endtime="20201110 08:37:36.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.000" level="INFO">VALUE: [1.818099999999906e-05, 1.804100000000336e-05, 1.8194000000006094e-05, 1.761100000000071e-05, 1.783299999999488e-05, 1.727700000000304e-05, 1.812500000000078e-05, 1.78890000000001e-05, 1.737500000000003e-05, 1.811100000000121e-05, 1.7957999999998475e-05, 1.734700000000089e-05, 1.808300000000207e-05, 1.729099999999567e-05, 1.737500000000003e-05, 1.804099999999642e-05, 1.7957999999998475e-05, 1.7527999999995825e-05, 1.8221999999998295e-05, 1.762500000000028e-05, 1.7792000000002584e-05, 1.786100000000096e-05, 1.763899999999985e-05, 1.8222000000005234e-05, 1.7749999999996935e-05, 1.7514000000003194e-05, 1.7971999999998045e-05, 1.733300000000132e-05, 1.7735999999997365e-05, 1.7764000000003444e-05, 1.816699999999949e-05, 1.7459000000004388e-05, 1.812500000000078e-05, 1.7556000000001903e-05, 1.818099999999906e-05, 1.7598000000000613e-05, 1.804099999999642e-05, 1.7556000000001903e-05, 1.794499999999838e-05, 1.730499999999524e-05, 1.729100000000261e-05, 1.7415999999999265e-05, 1.8042000000002834e-05, 1.805500000000293e-05, 1.727700000000304e-05, 1.7943999999998905e-05, 1.8166000000000015e-05, 1.762500000000028e-05, 1.756899999999506e-05, 1.8179999999999585e-05]</msg>
<status status="PASS" starttime="20201110 08:37:36.997" endtime="20201110 08:37:37.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.984" endtime="20201110 08:37:37.004"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.010" endtime="20201110 08:37:37.013"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.019" endtime="20201110 08:37:37.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.015" endtime="20201110 08:37:37.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.006" endtime="20201110 08:37:37.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.470" endtime="20201110 08:37:37.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:36.469" endtime="20201110 08:37:37.046"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.072" endtime="20201110 08:37:37.092"></status>
</kw>
<msg timestamp="20201110 08:37:37.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.069" endtime="20201110 08:37:37.093"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.095" endtime="20201110 08:37:37.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.102" endtime="20201110 08:37:37.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.061" endtime="20201110 08:37:37.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.053" endtime="20201110 08:37:37.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.127" endtime="20201110 08:37:37.481"></status>
</kw>
<msg timestamp="20201110 08:37:37.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046297681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046316194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.124" endtime="20201110 08:37:37.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046297681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046316194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.490" endtime="20201110 08:37:37.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.509" endtime="20201110 08:37:37.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.116" endtime="20201110 08:37:37.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.111" endtime="20201110 08:37:37.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:37.527" level="INFO">${RESULT} = [{'time': 0.046316194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.851299999999778e-05, 'source_diff': 1.851299999999778e-05}, {'time': 0.046349194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:37.518" endtime="20201110 08:37:37.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:37.558" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:37.529" endtime="20201110 08:37:37.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.569" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201110 08:37:37.567" endtime="20201110 08:37:37.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.575" level="INFO">VALUE: [1.851299999999778e-05, 1.8972000000005984e-05, 1.855499999999649e-05, 1.8735999999998365e-05, 1.8930000000000335e-05, 1.8528000000003764e-05, 1.8680000000000085e-05, 1.8985999999998615e-05, 1.887499999999459e-05, 1.9166000000001016e-05, 1.88890000000011e-05, 1.9180000000000585e-05, 1.8985999999998615e-05, 1.884700000000239e-05, 1.8777999999997075e-05, 1.916700000000049e-05, 1.8957999999999475e-05, 1.8820000000002723e-05, 1.8485999999998115e-05, 1.834699999999495e-05, 1.869499999999913e-05, 1.895899999999895e-05, 1.884700000000239e-05, 1.886100000000196e-05, 1.8749999999997935e-05, 1.840300000000017e-05, 1.8945000000006318e-05, 1.8292000000003084e-05, 1.9070000000002973e-05, 1.8999999999998185e-05, 1.8499999999997685e-05, 1.8306000000002653e-05, 1.8513999999997255e-05, 1.890300000000067e-05, 1.883300000000282e-05, 1.8429999999999835e-05, 1.9041999999996895e-05, 1.8499999999997685e-05, 1.911100000000221e-05, 1.908300000000307e-05, 1.8707999999999225e-05, 1.82769999999971e-05, 1.863900000000085e-05, 1.8666000000000516e-05, 1.862500000000128e-05, 1.833299999999538e-05, 1.837500000000103e-05, 1.8986000000005554e-05, 1.8499999999997685e-05, 1.8778000000004014e-05]</msg>
<status status="PASS" starttime="20201110 08:37:37.572" endtime="20201110 08:37:37.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.560" endtime="20201110 08:37:37.578"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.585" endtime="20201110 08:37:37.588"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:37.593" endtime="20201110 08:37:37.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.589" endtime="20201110 08:37:37.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.580" endtime="20201110 08:37:37.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.048" endtime="20201110 08:37:37.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.047" endtime="20201110 08:37:37.619"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.642" endtime="20201110 08:37:37.663"></status>
</kw>
<msg timestamp="20201110 08:37:37.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.639" endtime="20201110 08:37:37.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:37.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:37.666" endtime="20201110 08:37:37.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.673" endtime="20201110 08:37:37.676"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.631" endtime="20201110 08:37:37.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.626" endtime="20201110 08:37:37.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:37.696" endtime="20201110 08:37:38.030"></status>
</kw>
<msg timestamp="20201110 08:37:38.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043608597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043628278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:37.693" endtime="20201110 08:37:38.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043608597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043628278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.040" endtime="20201110 08:37:38.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.059" endtime="20201110 08:37:38.062"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.686" endtime="20201110 08:37:38.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.681" endtime="20201110 08:37:38.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.076" level="INFO">${RESULT} = [{'time': 0.043628278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 1.968100000000056e-05, 'source_diff': 1.968100000000056e-05}, {'time': 0.043660278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:38.067" endtime="20201110 08:37:38.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.106" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:38.078" endtime="20201110 08:37:38.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.117" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.115" endtime="20201110 08:37:38.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.123" level="INFO">VALUE: [1.968100000000056e-05, 1.940299999999423e-05, 1.9277999999997575e-05, 1.9763999999998505e-05, 2.0027999999998325e-05, 1.995899999999995e-05, 2.0069999999997035e-05, 1.9750000000005874e-05, 2.0069999999997035e-05, 1.9723000000006208e-05, 1.9638000000002376e-05, 2.0097999999996174e-05, 2.012499999999584e-05, 2.0277999999998575e-05, 1.951299999999878e-05, 2.0235999999999865e-05, 1.9972000000000045e-05, 1.9944000000000905e-05, 1.9402000000001696e-05, 1.9235999999998865e-05, 2.0249999999999435e-05, 1.9499999999998685e-05, 1.98890000000021e-05, 1.9485999999999115e-05, 1.9972000000000045e-05, 2.0180000000001586e-05, 1.9972000000000045e-05, 1.9514000000005194e-05, 1.9457999999999975e-05, 1.984700000000339e-05, 1.9722000000006734e-05, 1.940300000000117e-05, 2.013900000000235e-05, 2.012500000000278e-05, 2.0041999999997895e-05, 2.019500000000063e-05, 1.9263999999998005e-05, 1.937500000000203e-05, 1.962499999999534e-05, 1.966699999999405e-05, 1.9721999999999795e-05, 1.943100000000031e-05, 1.963899999999491e-05, 2.018100000000106e-05, 2.018100000000106e-05, 1.9305999999996715e-05, 1.9749999999998935e-05, 1.9277999999997575e-05, 1.995899999999995e-05, 2.0070000000003974e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.120" endtime="20201110 08:37:38.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.108" endtime="20201110 08:37:38.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.133" endtime="20201110 08:37:38.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.141" endtime="20201110 08:37:38.162"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.137" endtime="20201110 08:37:38.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.128" endtime="20201110 08:37:38.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.621" endtime="20201110 08:37:38.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:37.620" endtime="20201110 08:37:38.167"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.189" endtime="20201110 08:37:38.209"></status>
</kw>
<msg timestamp="20201110 08:37:38.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.186" endtime="20201110 08:37:38.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.212" endtime="20201110 08:37:38.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.219" endtime="20201110 08:37:38.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.179" endtime="20201110 08:37:38.224"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.173" endtime="20201110 08:37:38.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.244" endtime="20201110 08:37:38.589"></status>
</kw>
<msg timestamp="20201110 08:37:38.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042340486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.240" endtime="20201110 08:37:38.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042319736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042340486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.600" endtime="20201110 08:37:38.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.620" endtime="20201110 08:37:38.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.231" endtime="20201110 08:37:38.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.227" endtime="20201110 08:37:38.627"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:38.638" level="INFO">${RESULT} = [{'time': 0.042340486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.0749999999999935e-05, 'source_diff': 2.0749999999999935e-05}, {'time': 0.042369542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:38.629" endtime="20201110 08:37:38.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:38.671" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:38.640" endtime="20201110 08:37:38.671"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.682" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201110 08:37:38.680" endtime="20201110 08:37:38.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.688" level="INFO">VALUE: [2.0749999999999935e-05, 2.0348000000003363e-05, 2.040300000000217e-05, 2.1055999999998465e-05, 2.040300000000217e-05, 2.0486000000000115e-05, 2.062499999999634e-05, 2.034699999999695e-05, 2.1151999999996507e-05, 2.0334000000003793e-05, 2.1084000000004544e-05, 2.118099999999512e-05, 2.0291999999998145e-05, 2.0458000000000975e-05, 2.03890000000026e-05, 2.066700000000199e-05, 2.0749999999999935e-05, 2.062499999999634e-05, 2.1098000000004113e-05, 2.0777999999999075e-05, 2.1083999999997605e-05, 2.062500000000328e-05, 2.0665999999995577e-05, 2.10690000000055e-05, 2.083299999999788e-05, 2.084700000000439e-05, 2.106899999999856e-05, 2.0986000000000615e-05, 2.087499999999659e-05, 2.0986000000000615e-05, 2.084699999999745e-05, 2.061100000000371e-05, 2.088899999999616e-05, 2.0291999999998145e-05, 2.0444000000001405e-05, 2.0499999999999685e-05, 2.0763999999999505e-05, 2.0764000000006444e-05, 2.116700000000249e-05, 2.086100000000396e-05, 2.063900000000285e-05, 2.0444000000001405e-05, 2.0777999999999075e-05, 2.1055999999998465e-05, 2.12090000000012e-05, 2.062499999999634e-05, 2.115300000000292e-05, 2.1013999999999755e-05, 2.066700000000199e-05, 2.0458000000000975e-05]</msg>
<status status="PASS" starttime="20201110 08:37:38.685" endtime="20201110 08:37:38.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.673" endtime="20201110 08:37:38.691"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.697" endtime="20201110 08:37:38.700"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:38.706" endtime="20201110 08:37:38.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.701" endtime="20201110 08:37:38.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.693" endtime="20201110 08:37:38.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.169" endtime="20201110 08:37:38.732"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.168" endtime="20201110 08:37:38.732"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.755" endtime="20201110 08:37:38.774"></status>
</kw>
<msg timestamp="20201110 08:37:38.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.752" endtime="20201110 08:37:38.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:38.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:38.777" endtime="20201110 08:37:38.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.784" endtime="20201110 08:37:38.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.744" endtime="20201110 08:37:38.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.739" endtime="20201110 08:37:38.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:38.807" endtime="20201110 08:37:39.149"></status>
</kw>
<msg timestamp="20201110 08:37:39.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042513028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042534986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:38.804" endtime="20201110 08:37:39.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042513028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042534986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.158" endtime="20201110 08:37:39.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.178" endtime="20201110 08:37:39.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.797" endtime="20201110 08:37:39.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.792" endtime="20201110 08:37:39.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.195" level="INFO">${RESULT} = [{'time': 0.042534986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.1957999999995537e-05, 'source_diff': 2.1957999999995537e-05}, {'time': 0.04257, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:39.186" endtime="20201110 08:37:39.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.226" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:39.197" endtime="20201110 08:37:39.227"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.237" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.235" endtime="20201110 08:37:39.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.243" level="INFO">VALUE: [2.1957999999995537e-05, 2.1735999999994426e-05, 2.136099999999752e-05, 2.1958000000002476e-05, 2.1264000000000005e-05, 2.1291999999999145e-05, 2.1319999999998285e-05, 2.188899999999716e-05, 2.195900000000195e-05, 2.218099999999612e-05, 2.1666000000003516e-05, 2.20969999999987e-05, 2.1778000000000075e-05, 2.147300000000102e-05, 2.1472000000001545e-05, 2.209700000000564e-05, 2.2083999999998605e-05, 2.218099999999612e-05, 2.195899999999501e-05, 2.218099999999612e-05, 2.1944000000002906e-05, 2.151300000000078e-05, 2.1902000000004196e-05, 2.2151999999997507e-05, 2.204100000000042e-05, 2.1415999999996327e-05, 2.1930000000003336e-05, 2.161099999999777e-05, 2.188899999999716e-05, 2.136099999999752e-05, 2.166699999999605e-05, 2.1527999999999825e-05, 2.18890000000041e-05, 2.181899999999931e-05, 2.181899999999931e-05, 2.165299999999648e-05, 2.19169999999963e-05, 2.1805999999999215e-05, 2.1514000000000255e-05, 2.212500000000478e-05, 2.1541999999999395e-05, 2.1277999999999575e-05, 2.215299999999698e-05, 2.1291999999999145e-05, 2.140299999999623e-05, 2.213900000000435e-05, 2.136100000000446e-05, 2.223700000000134e-05, 2.1819999999998785e-05, 2.19169999999963e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.240" endtime="20201110 08:37:39.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.228" endtime="20201110 08:37:39.246"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.253" endtime="20201110 08:37:39.255"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.261" endtime="20201110 08:37:39.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.257" endtime="20201110 08:37:39.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.248" endtime="20201110 08:37:39.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.734" endtime="20201110 08:37:39.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:38.733" endtime="20201110 08:37:39.287"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.310" endtime="20201110 08:37:39.329"></status>
</kw>
<msg timestamp="20201110 08:37:39.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.307" endtime="20201110 08:37:39.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.332" endtime="20201110 08:37:39.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.339" endtime="20201110 08:37:39.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.300" endtime="20201110 08:37:39.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.294" endtime="20201110 08:37:39.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.363" endtime="20201110 08:37:39.704"></status>
</kw>
<msg timestamp="20201110 08:37:39.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042813097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042835597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.359" endtime="20201110 08:37:39.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042813097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042835597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:39.714" endtime="20201110 08:37:39.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.733" endtime="20201110 08:37:39.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.352" endtime="20201110 08:37:39.739"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.347" endtime="20201110 08:37:39.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:39.751" level="INFO">${RESULT} = [{'time': 0.042835597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.2500000000001685e-05, 'source_diff': 2.2500000000001685e-05}, {'time': 0.042868597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:39.742" endtime="20201110 08:37:39.752"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:39.782" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:39.753" endtime="20201110 08:37:39.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.793" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201110 08:37:39.791" endtime="20201110 08:37:39.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.799" level="INFO">VALUE: [2.2500000000001685e-05, 2.311099999999927e-05, 2.266700000000399e-05, 2.2347999999998425e-05, 2.2305999999999715e-05, 2.2986000000002615e-05, 2.262499999999834e-05, 2.234699999999895e-05, 2.316699999999755e-05, 2.2735999999995427e-05, 2.2292000000000145e-05, 2.284699999999945e-05, 2.294500000000338e-05, 2.2278000000000575e-05, 2.288899999999816e-05, 2.311099999999927e-05, 2.240299999999723e-05, 2.2957999999996537e-05, 2.3070000000000035e-05, 2.2861999999998495e-05, 2.2637999999998437e-05, 2.30969999999997e-05, 2.2333999999998855e-05, 2.306900000000056e-05, 2.2401999999997757e-05, 2.286099999999902e-05, 2.265299999999748e-05, 2.241700000000374e-05, 2.236099999999852e-05, 2.229100000000067e-05, 2.2806000000000215e-05, 2.229100000000067e-05, 2.2861999999998495e-05, 2.236099999999852e-05, 2.283299999999988e-05, 2.2972000000003046e-05, 2.2736000000002365e-05, 2.2750000000001935e-05, 2.2486000000002115e-05, 2.2985999999995677e-05, 2.2292000000000145e-05, 2.2750000000001935e-05, 2.238899999999766e-05, 2.238899999999766e-05, 2.244499999999594e-05, 2.284699999999945e-05, 2.263899999999791e-05, 2.2722000000002796e-05, 2.2500000000001685e-05, 2.266700000000399e-05]</msg>
<status status="PASS" starttime="20201110 08:37:39.795" endtime="20201110 08:37:39.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.784" endtime="20201110 08:37:39.802"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.808" endtime="20201110 08:37:39.811"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:39.817" endtime="20201110 08:37:39.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.812" endtime="20201110 08:37:39.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.804" endtime="20201110 08:37:39.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.289" endtime="20201110 08:37:39.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.288" endtime="20201110 08:37:39.843"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.871" endtime="20201110 08:37:39.890"></status>
</kw>
<msg timestamp="20201110 08:37:39.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.868" endtime="20201110 08:37:39.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:39.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:39.894" endtime="20201110 08:37:39.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.900" endtime="20201110 08:37:39.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.860" endtime="20201110 08:37:39.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.854" endtime="20201110 08:37:39.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:39.924" endtime="20201110 08:37:40.267"></status>
</kw>
<msg timestamp="20201110 08:37:40.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04749475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:39.921" endtime="20201110 08:37:40.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047471125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04749475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:40.277" endtime="20201110 08:37:40.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.296" endtime="20201110 08:37:40.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.913" endtime="20201110 08:37:40.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.908" endtime="20201110 08:37:40.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.315" level="INFO">${RESULT} = [{'time': 0.04749475, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.362499999999934e-05, 'source_diff': 2.362499999999934e-05}, {'time': 0.04752675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:40.306" endtime="20201110 08:37:40.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.346" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:40.318" endtime="20201110 08:37:40.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.357" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.355" endtime="20201110 08:37:40.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.363" level="INFO">VALUE: [2.362499999999934e-05, 2.3514000000002255e-05, 2.334699999999995e-05, 2.3250000000002435e-05, 2.3570000000000535e-05, 2.4069999999994096e-05, 2.340299999999823e-05, 2.337499999999909e-05, 2.3556000000000965e-05, 2.33890000000056e-05, 2.331900000000081e-05, 2.42090000000042e-05, 2.420899999999726e-05, 2.3306000000000715e-05, 2.372299999999633e-05, 2.4070000000001035e-05, 2.395900000000395e-05, 2.330500000000124e-05, 2.3847999999999925e-05, 2.362499999999934e-05, 2.336099999999952e-05, 2.3957999999997537e-05, 2.4165999999999077e-05, 2.4193999999998217e-05, 2.408300000000113e-05, 2.411100000000027e-05, 2.361099999999977e-05, 2.362499999999934e-05, 2.362499999999934e-05, 2.4014000000002755e-05, 2.390299999999873e-05, 2.33890000000056e-05, 2.3542000000001395e-05, 2.406900000000156e-05, 2.365299999999848e-05, 2.413899999999941e-05, 2.3584000000000105e-05, 2.413899999999941e-05, 2.408300000000113e-05, 2.3291999999994206e-05, 2.3457999999997037e-05, 2.3500000000002685e-05, 2.4084000000000605e-05, 2.380500000000174e-05, 2.3527999999994886e-05, 2.3264000000002005e-05, 2.397300000000352e-05, 2.418100000000506e-05, 2.3750000000002935e-05, 2.4193999999998217e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.360" endtime="20201110 08:37:40.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.348" endtime="20201110 08:37:40.366"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.373" endtime="20201110 08:37:40.375"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.381" endtime="20201110 08:37:40.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.377" endtime="20201110 08:37:40.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.368" endtime="20201110 08:37:40.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.847" endtime="20201110 08:37:40.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:39.845" endtime="20201110 08:37:40.407"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.431" endtime="20201110 08:37:40.450"></status>
</kw>
<msg timestamp="20201110 08:37:40.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.427" endtime="20201110 08:37:40.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.453" endtime="20201110 08:37:40.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.460" endtime="20201110 08:37:40.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.420" endtime="20201110 08:37:40.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.414" endtime="20201110 08:37:40.467"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.483" endtime="20201110 08:37:40.824"></status>
</kw>
<msg timestamp="20201110 08:37:40.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043295625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043319931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.480" endtime="20201110 08:37:40.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043295625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043319931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:40.833" endtime="20201110 08:37:40.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.852" endtime="20201110 08:37:40.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.473" endtime="20201110 08:37:40.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.468" endtime="20201110 08:37:40.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:40.872" level="INFO">${RESULT} = [{'time': 0.043319931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.4306000000001715e-05, 'source_diff': 2.4306000000001715e-05}, {'time': 0.043355931, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:40.863" endtime="20201110 08:37:40.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:40.905" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:40.874" endtime="20201110 08:37:40.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.916" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201110 08:37:40.914" endtime="20201110 08:37:40.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:40.922" level="INFO">VALUE: [2.4306000000001715e-05, 2.497299999999758e-05, 2.4318999999994872e-05, 2.462500000000034e-05, 2.479100000000317e-05, 2.4735999999997427e-05, 2.486100000000102e-05, 2.4290999999995733e-05, 2.462500000000034e-05, 2.4332999999994442e-05, 2.5250000000004436e-05, 2.5193999999999217e-05, 2.4610999999993832e-05, 2.518100000000606e-05, 2.431900000000181e-05, 2.4304999999995303e-05, 2.462500000000034e-05, 2.490299999999973e-05, 2.4264000000003005e-05, 2.5082999999995192e-05, 2.431900000000181e-05, 2.4972000000005046e-05, 2.5084000000001605e-05, 2.4736000000004366e-05, 2.4735999999997427e-05, 2.518099999999912e-05, 2.4860999999994082e-05, 2.455500000000249e-05, 2.444500000000488e-05, 2.463900000000685e-05, 2.472299999999733e-05, 2.4834000000001355e-05, 2.495900000000495e-05, 2.493099999999887e-05, 2.4749999999996997e-05, 2.440300000000617e-05, 2.4985999999997677e-05, 2.436100000000052e-05, 2.5054999999996053e-05, 2.4290999999995733e-05, 2.486100000000102e-05, 2.4736000000004366e-05, 2.462500000000034e-05, 2.488900000000016e-05, 2.4277999999995636e-05, 2.4777999999996136e-05, 2.5082999999995192e-05, 2.443100000000531e-05, 2.5041999999995956e-05, 2.4957999999998537e-05]</msg>
<status status="PASS" starttime="20201110 08:37:40.919" endtime="20201110 08:37:40.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.907" endtime="20201110 08:37:40.930"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.937" endtime="20201110 08:37:40.940"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:40.946" endtime="20201110 08:37:40.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.941" endtime="20201110 08:37:40.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.932" endtime="20201110 08:37:40.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.409" endtime="20201110 08:37:40.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.408" endtime="20201110 08:37:40.972"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:40.995" endtime="20201110 08:37:41.014"></status>
</kw>
<msg timestamp="20201110 08:37:41.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:40.991" endtime="20201110 08:37:41.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.017" endtime="20201110 08:37:41.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.024" endtime="20201110 08:37:41.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.984" endtime="20201110 08:37:41.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.978" endtime="20201110 08:37:41.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.048" endtime="20201110 08:37:41.388"></status>
</kw>
<msg timestamp="20201110 08:37:41.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.044" endtime="20201110 08:37:41.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042450667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042476181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.397" endtime="20201110 08:37:41.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.416" endtime="20201110 08:37:41.420"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.037" endtime="20201110 08:37:41.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.032" endtime="20201110 08:37:41.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.434" level="INFO">${RESULT} = [{'time': 0.042476181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.5514000000004255e-05, 'source_diff': 2.5514000000004255e-05}, {'time': 0.042512222, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:41.425" endtime="20201110 08:37:41.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:41.466" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:41.436" endtime="20201110 08:37:41.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.477" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201110 08:37:41.475" endtime="20201110 08:37:41.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.483" level="INFO">VALUE: [2.5514000000004255e-05, 2.5443999999999467e-05, 2.5290999999996733e-05, 2.6179999999993708e-05, 2.5971999999999107e-05, 2.5638999999993972e-05, 2.5596999999995262e-05, 2.5514000000004255e-05, 2.5750000000004936e-05, 2.5916999999993362e-05, 2.562500000000134e-05, 2.54169999999998e-05, 2.558300000000263e-05, 2.5332999999995442e-05, 2.54169999999998e-05, 2.5848000000001925e-05, 2.562500000000134e-05, 2.566700000000005e-05, 2.5306000000002715e-05, 2.5624999999994402e-05, 2.608300000000313e-05, 2.5555999999996026e-05, 2.6084000000002605e-05, 2.5750000000004936e-05, 2.5277999999996636e-05, 2.5624999999994402e-05, 2.543099999999937e-05, 2.6070000000003035e-05, 2.54169999999998e-05, 2.5763999999997567e-05, 2.595900000000595e-05, 2.595899999999901e-05, 2.5527000000004352e-05, 2.6221999999999357e-05, 2.5957999999999537e-05, 2.565300000000048e-05, 2.5666000000000577e-05, 2.6194000000000217e-05, 2.605500000000399e-05, 2.5292000000003145e-05, 2.5763999999997567e-05, 2.6082999999996193e-05, 2.6263999999998067e-05, 2.6054999999997053e-05, 2.612500000000184e-05, 2.5999999999998247e-05, 2.5749999999997997e-05, 2.5291999999996206e-05, 2.6068999999996623e-05, 2.563900000000091e-05]</msg>
<status status="PASS" starttime="20201110 08:37:41.480" endtime="20201110 08:37:41.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.468" endtime="20201110 08:37:41.486"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.493" endtime="20201110 08:37:41.495"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:41.501" endtime="20201110 08:37:41.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.497" endtime="20201110 08:37:41.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.488" endtime="20201110 08:37:41.526"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.974" endtime="20201110 08:37:41.527"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:40.973" endtime="20201110 08:37:41.527"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.550" endtime="20201110 08:37:41.569"></status>
</kw>
<msg timestamp="20201110 08:37:41.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.547" endtime="20201110 08:37:41.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:41.572" endtime="20201110 08:37:41.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.579" endtime="20201110 08:37:41.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.539" endtime="20201110 08:37:41.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.534" endtime="20201110 08:37:41.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.602" endtime="20201110 08:37:41.942"></status>
</kw>
<msg timestamp="20201110 08:37:41.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042380264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042406639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.599" endtime="20201110 08:37:41.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:41.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042380264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042406639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:41.952" endtime="20201110 08:37:41.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:41.971" endtime="20201110 08:37:41.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.592" endtime="20201110 08:37:41.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.587" endtime="20201110 08:37:41.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:41.989" level="INFO">${RESULT} = [{'time': 0.042406639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.637500000000209e-05, 'source_diff': 2.637500000000209e-05}, {'time': 0.042447667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:41.980" endtime="20201110 08:37:41.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.021" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:41.991" endtime="20201110 08:37:42.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.033" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.030" endtime="20201110 08:37:42.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.038" level="INFO">VALUE: [2.637500000000209e-05, 2.6306000000003715e-05, 2.7194000000001217e-05, 2.6999999999999247e-05, 2.7208000000000787e-05, 2.6749999999998997e-05, 2.716700000000155e-05, 2.719500000000069e-05, 2.638900000000166e-05, 2.6834000000003355e-05, 2.672299999999933e-05, 2.6527999999997887e-05, 2.6791999999997707e-05, 2.6513999999998317e-05, 2.7235999999999927e-05, 2.640300000000123e-05, 2.6499999999998747e-05, 2.6290999999997733e-05, 2.6846999999996513e-05, 2.717999999999471e-05, 2.7068999999997623e-05, 2.717999999999471e-05, 2.6278000000004575e-05, 2.6958000000000537e-05, 2.6972000000000107e-05, 2.706900000000456e-05, 2.662500000000234e-05, 2.7096999999996763e-05, 2.7042000000004895e-05, 2.6332999999996443e-05, 2.663900000000191e-05, 2.6888999999995222e-05, 2.6292000000004145e-05, 2.6569999999996596e-05, 2.64170000000008e-05, 2.7041999999997957e-05, 2.6848000000002925e-05, 2.6542000000004395e-05, 2.6792000000004645e-05, 2.663900000000191e-05, 2.6485999999999177e-05, 2.694500000000044e-05, 2.7096999999996763e-05, 2.698699999999915e-05, 2.695900000000001e-05, 2.7070000000004035e-05, 2.6735999999999427e-05, 2.70970000000037e-05, 2.6568999999997123e-05, 2.6346999999996012e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.035" endtime="20201110 08:37:42.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.023" endtime="20201110 08:37:42.041"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.048" endtime="20201110 08:37:42.051"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.058" endtime="20201110 08:37:42.082"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.052" endtime="20201110 08:37:42.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.043" endtime="20201110 08:37:42.087"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.529" endtime="20201110 08:37:42.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:41.528" endtime="20201110 08:37:42.089"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.116" endtime="20201110 08:37:42.136"></status>
</kw>
<msg timestamp="20201110 08:37:42.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.113" endtime="20201110 08:37:42.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.139" endtime="20201110 08:37:42.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.146" endtime="20201110 08:37:42.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.106" endtime="20201110 08:37:42.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.098" endtime="20201110 08:37:42.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.169" endtime="20201110 08:37:42.522"></status>
</kw>
<msg timestamp="20201110 08:37:42.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051204042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051231292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.166" endtime="20201110 08:37:42.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.051204042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051231292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:42.531" endtime="20201110 08:37:42.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.550" endtime="20201110 08:37:42.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.159" endtime="20201110 08:37:42.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.154" endtime="20201110 08:37:42.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:42.568" level="INFO">${RESULT} = [{'time': 0.051231292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7249999999999497e-05, 'source_diff': 2.7249999999999497e-05}, {'time': 0.051271292, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:42.559" endtime="20201110 08:37:42.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:42.600" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:42.570" endtime="20201110 08:37:42.601"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.612" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201110 08:37:42.609" endtime="20201110 08:37:42.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.617" level="INFO">VALUE: [2.7249999999999497e-05, 2.762500000000334e-05, 2.7792000000005646e-05, 2.818100000000212e-05, 2.763900000000291e-05, 2.822300000000083e-05, 2.76379999999965e-05, 2.8250000000000497e-05, 2.7610999999996833e-05, 2.7776999999999663e-05, 2.784700000000445e-05, 2.7596999999997263e-05, 2.8000000000000247e-05, 2.7318999999997873e-05, 2.808300000000513e-05, 2.740300000000223e-05, 2.7832999999997943e-05, 2.7958000000001537e-05, 2.7277999999998637e-05, 2.7749999999999997e-05, 2.7818999999998373e-05, 2.819500000000169e-05, 2.8068999999998623e-05, 2.7638999999995972e-05, 2.788900000000316e-05, 2.7805999999998277e-05, 2.7499999999999747e-05, 2.790300000000273e-05, 2.7486000000000177e-05, 2.7763999999999567e-05, 2.7638999999995972e-05, 2.7402999999995292e-05, 2.77369999999999e-05, 2.7527999999998887e-05, 2.744500000000094e-05, 2.7513999999999317e-05, 2.8277999999999637e-05, 2.765199999999607e-05, 2.7776999999999663e-05, 2.7736000000000427e-05, 2.8180000000002647e-05, 2.7276999999999163e-05, 2.784700000000445e-05, 2.7749999999999997e-05, 2.762500000000334e-05, 2.7777999999999137e-05, 2.740300000000223e-05, 2.761100000000377e-05, 2.7402999999995292e-05, 2.8124999999996902e-05]</msg>
<status status="PASS" starttime="20201110 08:37:42.614" endtime="20201110 08:37:42.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.602" endtime="20201110 08:37:42.620"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.627" endtime="20201110 08:37:42.630"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:42.635" endtime="20201110 08:37:42.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.631" endtime="20201110 08:37:42.659"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.622" endtime="20201110 08:37:42.661"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.092" endtime="20201110 08:37:42.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.090" endtime="20201110 08:37:42.662"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.685" endtime="20201110 08:37:42.704"></status>
</kw>
<msg timestamp="20201110 08:37:42.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.682" endtime="20201110 08:37:42.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:42.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:42.707" endtime="20201110 08:37:42.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.714" endtime="20201110 08:37:42.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.674" endtime="20201110 08:37:42.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.669" endtime="20201110 08:37:42.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:42.738" endtime="20201110 08:37:43.093"></status>
</kw>
<msg timestamp="20201110 08:37:43.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042893931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042923, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:42.735" endtime="20201110 08:37:43.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042893931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042923, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:43.102" endtime="20201110 08:37:43.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.121" endtime="20201110 08:37:43.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.727" endtime="20201110 08:37:43.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.722" endtime="20201110 08:37:43.128"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.139" level="INFO">${RESULT} = [{'time': 0.042923, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9068999999999623e-05, 'source_diff': 2.9068999999999623e-05}, {'time': 0.04296, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2....</msg>
<status status="PASS" starttime="20201110 08:37:43.130" endtime="20201110 08:37:43.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:43.141" endtime="20201110 08:37:43.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.184" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.182" endtime="20201110 08:37:43.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.189" level="INFO">VALUE: [2.9068999999999623e-05, 2.8638999999996972e-05, 2.9000000000001247e-05, 2.9291000000000733e-05, 2.922300000000183e-05, 2.8277999999999637e-05, 2.862500000000434e-05, 2.8638999999996972e-05, 2.9180999999996182e-05, 2.8291999999999207e-05, 2.8819999999998847e-05, 2.8500000000000747e-05, 2.9222999999994892e-05, 2.9069999999999097e-05, 2.9055999999999527e-05, 2.9028000000000387e-05, 2.8958000000002537e-05, 2.919399999999628e-05, 2.865300000000348e-05, 2.9000000000001247e-05, 2.8360999999997583e-05, 2.8290999999999733e-05, 2.861100000000477e-05, 2.8318999999998873e-05, 2.8624999999997403e-05, 2.8694000000002717e-05, 2.8527999999999887e-05, 2.866700000000305e-05, 2.8764000000000567e-05, 2.8514000000000317e-05, 2.9000000000001247e-05, 2.8666999999996112e-05, 2.8514000000000317e-05, 2.844500000000194e-05, 2.843100000000237e-05, 2.890300000000373e-05, 2.895900000000201e-05, 2.8277999999999637e-05, 2.8388999999996722e-05, 2.867999999999621e-05, 2.9069999999999097e-05, 2.9069999999999097e-05, 2.840300000000323e-05, 2.8944000000002967e-05, 2.862500000000434e-05, 2.84170000000028e-05, 2.8513000000000843e-05, 2.8777000000000663e-05, 2.8721999999994918e-05, 2.8290999999999733e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.186" endtime="20201110 08:37:43.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.175" endtime="20201110 08:37:43.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.199" endtime="20201110 08:37:43.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.208" endtime="20201110 08:37:43.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.203" endtime="20201110 08:37:43.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.195" endtime="20201110 08:37:43.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.664" endtime="20201110 08:37:43.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:42.663" endtime="20201110 08:37:43.234"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.257" endtime="20201110 08:37:43.276"></status>
</kw>
<msg timestamp="20201110 08:37:43.277" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.253" endtime="20201110 08:37:43.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.280" endtime="20201110 08:37:43.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.286" endtime="20201110 08:37:43.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.246" endtime="20201110 08:37:43.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.240" endtime="20201110 08:37:43.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.310" endtime="20201110 08:37:43.661"></status>
</kw>
<msg timestamp="20201110 08:37:43.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042695375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042724931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.307" endtime="20201110 08:37:43.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042695375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042724931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:43.671" endtime="20201110 08:37:43.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.690" endtime="20201110 08:37:43.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.299" endtime="20201110 08:37:43.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.294" endtime="20201110 08:37:43.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:43.708" level="INFO">${RESULT} = [{'time': 0.042724931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9556000000000027e-05, 'source_diff': 2.9556000000000027e-05}, {'time': 0.042767903, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:43.699" endtime="20201110 08:37:43.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:43.740" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:43.711" endtime="20201110 08:37:43.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.752" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201110 08:37:43.749" endtime="20201110 08:37:43.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.758" level="INFO">VALUE: [2.9556000000000027e-05, 2.966700000000405e-05, 2.9485999999995238e-05, 2.994500000000344e-05, 2.9833999999999417e-05, 2.9305999999999777e-05, 2.9749999999995058e-05, 2.997300000000258e-05, 2.9862000000005495e-05, 2.997199999999617e-05, 3.0194000000004217e-05, 2.990300000000473e-05, 2.9764000000001567e-05, 2.9736000000002427e-05, 2.9624999999998403e-05, 3.0138999999998473e-05, 2.9680000000004148e-05, 2.9624999999998403e-05, 2.944399999999653e-05, 2.9958000000003537e-05, 2.9291000000000733e-05, 2.9305000000000303e-05, 3.0166999999997612e-05, 2.988900000000516e-05, 2.9750000000001997e-05, 2.9846999999999513e-05, 2.9708000000003287e-05, 2.9319999999999347e-05, 3.0083999999999667e-05, 2.962500000000534e-05, 2.9888999999998223e-05, 2.9819999999999847e-05, 2.9610999999998833e-05, 2.9320000000006285e-05, 2.9500000000001747e-05, 2.990300000000473e-05, 2.948700000000165e-05, 2.945900000000251e-05, 3.0124999999998903e-05, 2.9888999999998223e-05, 2.9736000000002427e-05, 2.9291000000000733e-05, 3.0069000000000623e-05, 2.9305000000000303e-05, 2.9930000000004398e-05, 2.961100000000577e-05, 2.9888999999998223e-05, 2.9388999999997723e-05, 2.9333000000006382e-05, 3.0194000000004217e-05]</msg>
<status status="PASS" starttime="20201110 08:37:43.755" endtime="20201110 08:37:43.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.742" endtime="20201110 08:37:43.761"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.768" endtime="20201110 08:37:43.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:43.778" endtime="20201110 08:37:43.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.773" endtime="20201110 08:37:43.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.763" endtime="20201110 08:37:43.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.236" endtime="20201110 08:37:43.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.235" endtime="20201110 08:37:43.804"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.827" endtime="20201110 08:37:43.847"></status>
</kw>
<msg timestamp="20201110 08:37:43.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.824" endtime="20201110 08:37:43.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:43.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:43.850" endtime="20201110 08:37:43.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.857" endtime="20201110 08:37:43.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.817" endtime="20201110 08:37:43.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.811" endtime="20201110 08:37:43.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:43.880" endtime="20201110 08:37:44.234"></status>
</kw>
<msg timestamp="20201110 08:37:44.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043418514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04344925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:43.877" endtime="20201110 08:37:44.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043418514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04344925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:44.243" endtime="20201110 08:37:44.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.262" endtime="20201110 08:37:44.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.870" endtime="20201110 08:37:44.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.865" endtime="20201110 08:37:44.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.280" level="INFO">${RESULT} = [{'time': 0.04344925, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.073600000000343e-05, 'source_diff': 3.073600000000343e-05}, {'time': 0.04349425, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:44.271" endtime="20201110 08:37:44.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.311" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:44.282" endtime="20201110 08:37:44.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.322" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.320" endtime="20201110 08:37:44.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.328" level="INFO">VALUE: [3.073600000000343e-05, 3.0292000000001207e-05, 3.0388999999998723e-05, 3.104200000000196e-05, 3.0513999999995378e-05, 3.088899999999922e-05, 3.09449999999975e-05, 3.095900000000401e-05, 3.095899999999707e-05, 3.073600000000343e-05, 3.04170000000048e-05, 3.080600000000128e-05, 3.06379999999995e-05, 3.0458000000004037e-05, 3.0750000000003e-05, 3.108300000000119e-05, 3.040199999999882e-05, 3.084700000000051e-05, 3.073600000000343e-05, 3.095800000000454e-05, 3.108300000000119e-05, 3.09579999999976e-05, 3.116599999999914e-05, 3.0750000000003e-05, 3.0277999999994698e-05, 3.073600000000343e-05, 3.0750000000003e-05, 3.04170000000048e-05, 3.055600000000103e-05, 3.118100000000512e-05, 3.076399999999563e-05, 3.063899999999897e-05, 3.115199999999957e-05, 3.084700000000051e-05, 3.104199999999502e-05, 3.0305999999993838e-05, 3.0862000000006495e-05, 3.095900000000401e-05, 3.063899999999897e-05, 3.04579999999971e-05, 3.0305000000001303e-05, 3.0263999999995128e-05, 3.0291000000001733e-05, 3.06249999999994e-05, 3.044399999999753e-05, 3.06249999999994e-05, 3.101400000000282e-05, 3.0526999999995474e-05, 3.108300000000119e-05, 3.069499999999725e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.325" endtime="20201110 08:37:44.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.313" endtime="20201110 08:37:44.333"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.339" endtime="20201110 08:37:44.342"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.348" endtime="20201110 08:37:44.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.343" endtime="20201110 08:37:44.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.334" endtime="20201110 08:37:44.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.806" endtime="20201110 08:37:44.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:43.805" endtime="20201110 08:37:44.381"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.413" endtime="20201110 08:37:44.433"></status>
</kw>
<msg timestamp="20201110 08:37:44.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.409" endtime="20201110 08:37:44.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:44.438" endtime="20201110 08:37:44.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.449" endtime="20201110 08:37:44.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.399" endtime="20201110 08:37:44.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.392" endtime="20201110 08:37:44.460"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.487" endtime="20201110 08:37:44.858"></status>
</kw>
<msg timestamp="20201110 08:37:44.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060168194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060199972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.482" endtime="20201110 08:37:44.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060168194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060199972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:44.870" endtime="20201110 08:37:44.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.891" endtime="20201110 08:37:44.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.471" endtime="20201110 08:37:44.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.463" endtime="20201110 08:37:44.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:44.909" level="INFO">${RESULT} = [{'time': 0.060199972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.17779999999962e-05, 'source_diff': 3.17779999999962e-05}, {'time': 0.060239972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:44.900" endtime="20201110 08:37:44.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:44.939" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:44.911" endtime="20201110 08:37:44.940"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.950" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201110 08:37:44.948" endtime="20201110 08:37:44.951"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:44.956" level="INFO">VALUE: [3.17779999999962e-05, 3.194400000000597e-05, 3.194399999999903e-05, 3.155600000000203e-05, 3.1874999999993714e-05, 3.138899999999972e-05, 3.208399999999473e-05, 3.21250000000009e-05, 3.168099999999868e-05, 3.129200000000221e-05, 3.174999999999706e-05, 3.163899999999997e-05, 3.168099999999868e-05, 3.143099999999843e-05, 3.138899999999972e-05, 3.166699999999911e-05, 3.216600000000014e-05, 3.218099999999918e-05, 3.17370000000039e-05, 3.141599999999939e-05, 3.159700000000126e-05, 3.150000000000375e-05, 3.134700000000101e-05, 3.1832999999995004e-05, 3.165299999999954e-05, 3.190299999999979e-05, 3.197200000000511e-05, 3.134700000000101e-05, 3.193099999999893e-05, 3.2068999999995684e-05, 3.186100000000108e-05, 3.198599999999774e-05, 3.133400000000092e-05, 3.206900000000262e-05, 3.187500000000065e-05, 3.218100000000612e-05, 3.219499999999875e-05, 3.126399999999613e-05, 3.223600000000493e-05, 3.138899999999972e-05, 3.188900000000022e-05, 3.140299999999929e-05, 3.205599999999559e-05, 3.172299999999739e-05, 3.183400000000142e-05, 3.165200000000007e-05, 3.187500000000065e-05, 3.1596999999994324e-05, 3.197199999999817e-05, 3.197199999999817e-05]</msg>
<status status="PASS" starttime="20201110 08:37:44.953" endtime="20201110 08:37:44.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.941" endtime="20201110 08:37:44.959"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:44.966" endtime="20201110 08:37:44.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:44.977" endtime="20201110 08:37:44.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.972" endtime="20201110 08:37:45.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.961" endtime="20201110 08:37:45.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.385" endtime="20201110 08:37:45.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:44.383" endtime="20201110 08:37:45.003"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.026" endtime="20201110 08:37:45.044"></status>
</kw>
<msg timestamp="20201110 08:37:45.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.022" endtime="20201110 08:37:45.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.048" endtime="20201110 08:37:45.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.054" endtime="20201110 08:37:45.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.015" endtime="20201110 08:37:45.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.009" endtime="20201110 08:37:45.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.078" endtime="20201110 08:37:45.413"></status>
</kw>
<msg timestamp="20201110 08:37:45.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042057847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04209025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:45.074" endtime="20201110 08:37:45.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042057847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04209025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:45.423" endtime="20201110 08:37:45.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.442" endtime="20201110 08:37:45.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.067" endtime="20201110 08:37:45.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.062" endtime="20201110 08:37:45.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:45.459" level="INFO">${RESULT} = [{'time': 0.04209025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.240300000000029e-05, 'source_diff': 3.240300000000029e-05}, {'time': 0.042133264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:45.450" endtime="20201110 08:37:45.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:45.492" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:45.461" endtime="20201110 08:37:45.492"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.503" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201110 08:37:45.500" endtime="20201110 08:37:45.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.508" level="INFO">VALUE: [3.240300000000029e-05, 3.2596999999995324e-05, 3.240300000000029e-05, 3.272299999999839e-05, 3.316700000000061e-05, 3.247300000000508e-05, 3.268099999999968e-05, 3.295899999999907e-05, 3.318100000000018e-05, 3.318100000000018e-05, 3.240300000000029e-05, 3.304200000000396e-05, 3.238800000000125e-05, 3.281900000000337e-05, 3.259700000000226e-05, 3.319400000000028e-05, 3.318000000000071e-05, 3.250000000000475e-05, 3.2860999999995144e-05, 3.247199999999867e-05, 3.319400000000028e-05, 3.251399999999738e-05, 3.251399999999738e-05, 3.319400000000028e-05, 3.227800000000364e-05, 3.229199999999627e-05, 3.230600000000278e-05, 3.306999999999616e-05, 3.232000000000235e-05, 3.286100000000208e-05, 3.30700000000031e-05, 3.240300000000029e-05, 3.276400000000457e-05, 3.316700000000061e-05, 3.261199999999437e-05, 3.288900000000122e-05, 3.313900000000147e-05, 3.304199999999702e-05, 3.318000000000071e-05, 3.315200000000157e-05, 3.298600000000568e-05, 3.3082999999996254e-05, 3.29579999999996e-05, 3.252799999999695e-05, 3.299999999999831e-05, 3.309700000000276e-05, 3.233300000000244e-05, 3.252800000000389e-05, 3.322199999999942e-05, 3.26250000000014e-05]</msg>
<status status="PASS" starttime="20201110 08:37:45.505" endtime="20201110 08:37:45.510"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.493" endtime="20201110 08:37:45.511"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.518" endtime="20201110 08:37:45.520"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:45.526" endtime="20201110 08:37:45.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.521" endtime="20201110 08:37:45.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.513" endtime="20201110 08:37:45.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.005" endtime="20201110 08:37:45.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.004" endtime="20201110 08:37:45.553"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.576" endtime="20201110 08:37:45.595"></status>
</kw>
<msg timestamp="20201110 08:37:45.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.572" endtime="20201110 08:37:45.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:45.599" endtime="20201110 08:37:45.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.605" endtime="20201110 08:37:45.609"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.565" endtime="20201110 08:37:45.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.560" endtime="20201110 08:37:45.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.628" endtime="20201110 08:37:45.965"></status>
</kw>
<msg timestamp="20201110 08:37:45.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043276069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043310056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.625" endtime="20201110 08:37:45.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:45.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043276069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043310056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:45.975" endtime="20201110 08:37:45.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:45.994" endtime="20201110 08:37:45.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.618" endtime="20201110 08:37:45.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.613" endtime="20201110 08:37:46.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.011" level="INFO">${RESULT} = [{'time': 0.043310056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.398699999999921e-05, 'source_diff': 3.398699999999921e-05}, {'time': 0.043357042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.002" endtime="20201110 08:37:46.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.042" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:46.013" endtime="20201110 08:37:46.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.053" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.051" endtime="20201110 08:37:46.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.058" level="INFO">VALUE: [3.398699999999921e-05, 3.340300000000129e-05, 3.394399999999409e-05, 3.340300000000129e-05, 3.370899999999982e-05, 3.338900000000172e-05, 3.3291000000004733e-05, 3.415199999999563e-05, 3.3304999999997364e-05, 3.3638999999995034e-05, 3.398599999999974e-05, 3.411100000000333e-05, 3.388900000000222e-05, 3.4055000000005053e-05, 3.39580000000006e-05, 3.417999999999477e-05, 3.401399999999888e-05, 3.387500000000265e-05, 3.32500000000055e-05, 3.4068999999997684e-05, 3.419500000000075e-05, 3.419500000000075e-05, 3.354199999999752e-05, 3.386100000000308e-05, 3.369500000000025e-05, 3.352800000000489e-05, 3.3445e-05, 3.402799999999845e-05, 3.333300000000344e-05, 3.372300000000633e-05, 3.35979999999958e-05, 3.388800000000275e-05, 3.4040999999998545e-05, 3.413799999999606e-05, 3.3388999999994784e-05, 3.348599999999924e-05, 3.3291000000004733e-05, 3.41659999999952e-05, 3.4068999999997684e-05, 3.417999999999477e-05, 3.329199999999727e-05, 3.4082999999997254e-05, 3.363900000000197e-05, 3.419400000000128e-05, 3.372199999999992e-05, 3.3846999999996574e-05, 3.4180999999994244e-05, 3.406999999999716e-05, 3.329199999999727e-05, 3.397299999999964e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.055" endtime="20201110 08:37:46.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.044" endtime="20201110 08:37:46.067"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.074" endtime="20201110 08:37:46.077"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.083" endtime="20201110 08:37:46.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.078" endtime="20201110 08:37:46.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.069" endtime="20201110 08:37:46.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.555" endtime="20201110 08:37:46.108"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:45.554" endtime="20201110 08:37:46.108"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.133" endtime="20201110 08:37:46.152"></status>
</kw>
<msg timestamp="20201110 08:37:46.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.130" endtime="20201110 08:37:46.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.160" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.156" endtime="20201110 08:37:46.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.162" endtime="20201110 08:37:46.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.122" endtime="20201110 08:37:46.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.115" endtime="20201110 08:37:46.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.186" endtime="20201110 08:37:46.520"></status>
</kw>
<msg timestamp="20201110 08:37:46.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043676486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.182" endtime="20201110 08:37:46.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043676486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.529" endtime="20201110 08:37:46.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.548" endtime="20201110 08:37:46.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.175" endtime="20201110 08:37:46.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.170" endtime="20201110 08:37:46.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:46.565" level="INFO">${RESULT} = [{'time': 0.043676486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.454199999999852e-05, 'source_diff': 3.454199999999852e-05}, {'time': 0.043719472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:46.557" endtime="20201110 08:37:46.566"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:46.596" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:46.568" endtime="20201110 08:37:46.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.607" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201110 08:37:46.605" endtime="20201110 08:37:46.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.612" level="INFO">VALUE: [3.454199999999852e-05, 3.47779999999992e-05, 3.519400000000228e-05, 3.4818999999998435e-05, 3.441700000000186e-05, 3.470800000000135e-05, 3.5082999999998254e-05, 3.46250000000034e-05, 3.525000000000056e-05, 3.4624999999996464e-05, 3.522200000000142e-05, 3.508399999999773e-05, 3.502799999999945e-05, 3.4610999999996894e-05, 3.4902999999995854e-05, 3.461200000000331e-05, 3.452799999999895e-05, 3.4804999999998865e-05, 3.506999999999816e-05, 3.42779999999987e-05, 3.443000000000196e-05, 3.4874999999996714e-05, 3.520799999999491e-05, 3.4318999999997934e-05, 3.448600000000024e-05, 3.473600000000049e-05, 3.49580000000016e-05, 3.516600000000314e-05, 3.452799999999895e-05, 3.443000000000196e-05, 3.4568999999998185e-05, 3.433300000000444e-05, 3.449999999999981e-05, 3.445900000000057e-05, 3.440300000000229e-05, 3.502799999999945e-05, 3.441700000000186e-05, 3.481999999999791e-05, 3.438900000000272e-05, 3.441600000000239e-05, 3.451399999999938e-05, 3.5180999999995244e-05, 3.4526999999999475e-05, 3.49450000000015e-05, 3.500000000000031e-05, 3.438799999999631e-05, 3.463900000000297e-05, 3.4346999999997074e-05, 3.508300000000519e-05, 3.441600000000239e-05]</msg>
<status status="PASS" starttime="20201110 08:37:46.609" endtime="20201110 08:37:46.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.598" endtime="20201110 08:37:46.616"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.622" endtime="20201110 08:37:46.625"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:46.631" endtime="20201110 08:37:46.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.626" endtime="20201110 08:37:46.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.618" endtime="20201110 08:37:46.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.110" endtime="20201110 08:37:46.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.109" endtime="20201110 08:37:46.656"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.679" endtime="20201110 08:37:46.698"></status>
</kw>
<msg timestamp="20201110 08:37:46.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.676" endtime="20201110 08:37:46.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:46.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:46.702" endtime="20201110 08:37:46.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.708" endtime="20201110 08:37:46.713"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.669" endtime="20201110 08:37:46.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.663" endtime="20201110 08:37:46.717"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:46.733" endtime="20201110 08:37:47.068"></status>
</kw>
<msg timestamp="20201110 08:37:47.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042231264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042267444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:46.730" endtime="20201110 08:37:47.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042231264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042267444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.078" endtime="20201110 08:37:47.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.101" endtime="20201110 08:37:47.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.722" endtime="20201110 08:37:47.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.718" endtime="20201110 08:37:47.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.126" level="INFO">${RESULT} = [{'time': 0.042267444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.618000000000371e-05, 'source_diff': 3.618000000000371e-05}, {'time': 0.042311444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.116" endtime="20201110 08:37:47.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.158" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:47.128" endtime="20201110 08:37:47.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.171" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.168" endtime="20201110 08:37:47.171"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.176" level="INFO">VALUE: [3.618000000000371e-05, 3.5512999999993966e-05, 3.534700000000501e-05, 3.600000000000131e-05, 3.617999999999677e-05, 3.595799999999566e-05, 3.52779999999997e-05, 3.5624999999997464e-05, 3.568100000000268e-05, 3.57780000000002e-05, 3.619399999999634e-05, 3.6068999999999685e-05, 3.6194999999995814e-05, 3.551400000000038e-05, 3.569500000000225e-05, 3.556999999999866e-05, 3.573599999999455e-05, 3.5610999999997894e-05, 3.599999999999437e-05, 3.555600000000603e-05, 3.526400000000013e-05, 3.579199999999977e-05, 3.548700000000071e-05, 3.5568999999999185e-05, 3.538800000000425e-05, 3.525000000000056e-05, 3.623600000000199e-05, 3.6055000000000115e-05, 3.6068999999999685e-05, 3.601400000000088e-05, 3.570800000000235e-05, 3.5304999999999365e-05, 3.552799999999995e-05, 3.619500000000275e-05, 3.576400000000063e-05, 3.6166999999996674e-05, 3.52779999999997e-05, 3.606999999999916e-05, 3.5624999999997464e-05, 3.5652999999996604e-05, 3.5944999999995564e-05, 3.6208999999995384e-05, 3.537500000000415e-05, 3.551400000000038e-05, 3.579199999999977e-05, 3.563900000000397e-05, 3.566700000000311e-05, 3.586100000000508e-05, 3.6068999999999685e-05, 3.6068999999999685e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.173" endtime="20201110 08:37:47.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.161" endtime="20201110 08:37:47.179"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.186" endtime="20201110 08:37:47.189"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.194" endtime="20201110 08:37:47.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.190" endtime="20201110 08:37:47.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.181" endtime="20201110 08:37:47.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.659" endtime="20201110 08:37:47.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:46.657" endtime="20201110 08:37:47.220"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.243" endtime="20201110 08:37:47.263"></status>
</kw>
<msg timestamp="20201110 08:37:47.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.240" endtime="20201110 08:37:47.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.266" endtime="20201110 08:37:47.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.272" endtime="20201110 08:37:47.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.233" endtime="20201110 08:37:47.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.227" endtime="20201110 08:37:47.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.298" endtime="20201110 08:37:47.666"></status>
</kw>
<msg timestamp="20201110 08:37:47.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042204583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042240889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.295" endtime="20201110 08:37:47.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042204583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042240889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.676" endtime="20201110 08:37:47.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.696" endtime="20201110 08:37:47.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.286" endtime="20201110 08:37:47.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.281" endtime="20201110 08:37:47.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:47.715" level="INFO">${RESULT} = [{'time': 0.042240889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.630599999999984e-05, 'source_diff': 3.630599999999984e-05}, {'time': 0.042287903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:47.705" endtime="20201110 08:37:47.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:47.749" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:47.717" endtime="20201110 08:37:47.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.761" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201110 08:37:47.758" endtime="20201110 08:37:47.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.766" level="INFO">VALUE: [3.630599999999984e-05, 3.708399999999973e-05, 3.6416999999996924e-05, 3.6374999999998214e-05, 3.656999999999966e-05, 3.707000000000016e-05, 3.6402999999997354e-05, 3.650000000000181e-05, 3.651400000000138e-05, 3.691599999999795e-05, 3.674999999999512e-05, 3.641599999999745e-05, 3.6833000000000005e-05, 3.697199999999623e-05, 3.7027000000001975e-05, 3.6277000000001225e-05, 3.652800000000095e-05, 3.683399999999948e-05, 3.6846999999999575e-05, 3.7083000000000255e-05, 3.651400000000138e-05, 3.688900000000522e-05, 3.6582999999999755e-05, 3.672200000000292e-05, 3.697199999999623e-05, 3.630599999999984e-05, 3.69450000000035e-05, 3.6652999999997604e-05, 3.6652999999997604e-05, 3.62780000000007e-05, 3.726399999999519e-05, 3.629200000000027e-05, 3.6402999999997354e-05, 3.648700000000171e-05, 3.684799999999905e-05, 3.6874999999998714e-05, 3.6291000000000795e-05, 3.716600000000514e-05, 3.6860999999999144e-05, 3.7110999999999394e-05, 3.641599999999745e-05, 3.626400000000113e-05, 3.651400000000138e-05, 3.704199999999408e-05, 3.69580000000036e-05, 3.7069000000000685e-05, 3.7069000000000685e-05, 3.651400000000138e-05, 3.65700000000066e-05, 3.655600000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:37:47.763" endtime="20201110 08:37:47.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.751" endtime="20201110 08:37:47.770"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.777" endtime="20201110 08:37:47.780"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:47.786" endtime="20201110 08:37:47.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.781" endtime="20201110 08:37:47.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.772" endtime="20201110 08:37:47.811"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.222" endtime="20201110 08:37:47.812"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.221" endtime="20201110 08:37:47.813"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.837" endtime="20201110 08:37:47.858"></status>
</kw>
<msg timestamp="20201110 08:37:47.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.833" endtime="20201110 08:37:47.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:47.866" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:47.861" endtime="20201110 08:37:47.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.868" endtime="20201110 08:37:47.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.826" endtime="20201110 08:37:47.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.819" endtime="20201110 08:37:47.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:47.893" endtime="20201110 08:37:48.236"></status>
</kw>
<msg timestamp="20201110 08:37:48.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044755986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044794042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:47.890" endtime="20201110 08:37:48.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044755986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044794042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.245" endtime="20201110 08:37:48.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.264" endtime="20201110 08:37:48.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.882" endtime="20201110 08:37:48.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.877" endtime="20201110 08:37:48.271"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.282" level="INFO">${RESULT} = [{'time': 0.044794042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.805600000000159e-05, 'source_diff': 3.805600000000159e-05}, {'time': 0.044841056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.273" endtime="20201110 08:37:48.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:48.284" endtime="20201110 08:37:48.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.323" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.321" endtime="20201110 08:37:48.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.329" level="INFO">VALUE: [3.805600000000159e-05, 3.8194999999997814e-05, 3.7736999999996024e-05, 3.7736999999996024e-05, 3.797199999999723e-05, 3.8097000000000825e-05, 3.775000000000306e-05, 3.7638999999999034e-05, 3.730600000000084e-05, 3.797199999999723e-05, 3.797200000000417e-05, 3.766700000000511e-05, 3.779200000000177e-05, 3.794400000000503e-05, 3.820799999999791e-05, 3.773599999999655e-05, 3.7610999999999895e-05, 3.7333000000000505e-05, 3.795799999999766e-05, 3.7861000000000145e-05, 3.76250000000064e-05, 3.7888999999999284e-05, 3.7513000000002905e-05, 3.806999999999422e-05, 3.805600000000159e-05, 3.7652999999998604e-05, 3.774999999999612e-05, 3.741599999999845e-05, 3.7805000000001865e-05, 3.7305000000001365e-05, 3.797199999999723e-05, 3.820799999999791e-05, 3.7861000000000145e-05, 3.7402999999998354e-05, 3.74859999999963e-05, 3.776400000000263e-05, 3.751400000000238e-05, 3.7916999999998424e-05, 3.72780000000017e-05, 3.780600000000134e-05, 3.751400000000238e-05, 3.743100000000443e-05, 3.8152999999999104e-05, 3.7610999999999895e-05, 3.751399999999544e-05, 3.776399999999569e-05, 3.7374999999999214e-05, 3.761199999999937e-05, 3.738799999999931e-05, 3.751400000000238e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.325" endtime="20201110 08:37:48.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.314" endtime="20201110 08:37:48.332"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.338" endtime="20201110 08:37:48.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.347" endtime="20201110 08:37:48.369"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.342" endtime="20201110 08:37:48.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.333" endtime="20201110 08:37:48.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.815" endtime="20201110 08:37:48.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:47.814" endtime="20201110 08:37:48.373"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.396" endtime="20201110 08:37:48.416"></status>
</kw>
<msg timestamp="20201110 08:37:48.417" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.393" endtime="20201110 08:37:48.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.419" endtime="20201110 08:37:48.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.426" endtime="20201110 08:37:48.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.386" endtime="20201110 08:37:48.431"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.380" endtime="20201110 08:37:48.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.450" endtime="20201110 08:37:48.797"></status>
</kw>
<msg timestamp="20201110 08:37:48.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042596097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042634625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.447" endtime="20201110 08:37:48.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042596097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042634625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:48.807" endtime="20201110 08:37:48.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.828" endtime="20201110 08:37:48.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.440" endtime="20201110 08:37:48.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.434" endtime="20201110 08:37:48.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:48.846" level="INFO">${RESULT} = [{'time': 0.042634625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.852800000000295e-05, 'source_diff': 3.852800000000295e-05}, {'time': 0.042683625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:48.837" endtime="20201110 08:37:48.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:48.879" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:48.849" endtime="20201110 08:37:48.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.893" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201110 08:37:48.890" endtime="20201110 08:37:48.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.899" level="INFO">VALUE: [3.852800000000295e-05, 3.8569000000002185e-05, 3.873599999999755e-05, 3.9068999999995746e-05, 3.8402999999999354e-05, 3.8944999999998564e-05, 3.8944999999998564e-05, 3.8416999999998924e-05, 3.9166999999999674e-05, 3.8375000000000214e-05, 3.9236999999997524e-05, 3.886200000000062e-05, 3.89859999999978e-05, 3.8388999999999784e-05, 3.85980000000008e-05, 3.8639000000000034e-05, 3.8305000000002365e-05, 3.841599999999945e-05, 3.892999999999952e-05, 3.8625000000000465e-05, 3.922199999999848e-05, 3.8304999999995426e-05, 3.8305000000002365e-05, 3.8625000000000465e-05, 3.855600000000209e-05, 3.915200000000063e-05, 3.873600000000449e-05, 3.8875000000000715e-05, 3.89859999999978e-05, 3.8847000000001575e-05, 3.8416999999998924e-05, 3.8708999999997884e-05, 3.9166999999999674e-05, 3.845799999999816e-05, 3.9166999999999674e-05, 3.850000000000381e-05, 3.849999999999687e-05, 3.906999999999522e-05, 3.845799999999816e-05, 3.9082999999995316e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.8611000000000895e-05, 3.9054999999996176e-05, 3.8625000000000465e-05, 3.868000000000621e-05, 3.8847000000001575e-05, 3.829200000000227e-05, 3.851399999999644e-05, 3.8680999999998744e-05]</msg>
<status status="PASS" starttime="20201110 08:37:48.895" endtime="20201110 08:37:48.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.882" endtime="20201110 08:37:48.902"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.909" endtime="20201110 08:37:48.912"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:48.918" endtime="20201110 08:37:48.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.913" endtime="20201110 08:37:48.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.904" endtime="20201110 08:37:48.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.375" endtime="20201110 08:37:48.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.374" endtime="20201110 08:37:48.945"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:48.970" endtime="20201110 08:37:48.990"></status>
</kw>
<msg timestamp="20201110 08:37:48.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.967" endtime="20201110 08:37:48.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:48.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:48.994" endtime="20201110 08:37:48.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.000" endtime="20201110 08:37:49.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.959" endtime="20201110 08:37:49.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.952" endtime="20201110 08:37:49.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.025" endtime="20201110 08:37:49.377"></status>
</kw>
<msg timestamp="20201110 08:37:49.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045133389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045173111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.021" endtime="20201110 08:37:49.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045133389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045173111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.387" endtime="20201110 08:37:49.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.406" endtime="20201110 08:37:49.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.014" endtime="20201110 08:37:49.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.009" endtime="20201110 08:37:49.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.426" level="INFO">${RESULT} = [{'time': 0.045173111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.972199999999898e-05, 'source_diff': 3.972199999999898e-05}, {'time': 0.045226125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.416" endtime="20201110 08:37:49.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:49.457" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:49.428" endtime="20201110 08:37:49.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.468" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201110 08:37:49.466" endtime="20201110 08:37:49.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.473" level="INFO">VALUE: [3.972199999999898e-05, 3.995799999999966e-05, 3.9403000000000354e-05, 4.0194999999999814e-05, 3.948600000000524e-05, 4.008400000000273e-05, 3.9958999999999134e-05, 3.9958999999999134e-05, 3.9639000000001035e-05, 3.954199999999658e-05, 3.9972999999998704e-05, 3.9736999999998024e-05, 3.9625000000001465e-05, 3.94859999999983e-05, 3.9625000000001465e-05, 3.947200000000567e-05, 3.9304999999996426e-05, 3.952800000000395e-05, 4.0096999999995886e-05, 3.999999999999837e-05, 3.9653000000000604e-05, 4.0069000000003685e-05, 3.9639000000001035e-05, 3.955600000000309e-05, 3.973599999999855e-05, 4.0139000000001535e-05, 3.974999999999812e-05, 4.005600000000359e-05, 3.9403000000000354e-05, 3.9597000000002325e-05, 3.929199999999633e-05, 3.9708999999998884e-05, 3.974999999999812e-05, 3.9762999999998216e-05, 3.983400000000248e-05, 3.9290999999996856e-05, 4.025000000000556e-05, 4.015200000000163e-05, 3.947199999999873e-05, 3.9847000000002575e-05, 4.0139000000001535e-05, 3.9568999999996246e-05, 3.9860999999995206e-05, 4.0082999999996316e-05, 3.924999999999762e-05, 3.93059999999959e-05, 3.994400000000009e-05, 3.9818999999996496e-05, 3.951400000000438e-05, 3.9903000000000854e-05]</msg>
<status status="PASS" starttime="20201110 08:37:49.470" endtime="20201110 08:37:49.475"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.459" endtime="20201110 08:37:49.477"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.483" endtime="20201110 08:37:49.486"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:49.492" endtime="20201110 08:37:49.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.487" endtime="20201110 08:37:49.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.478" endtime="20201110 08:37:49.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.948" endtime="20201110 08:37:49.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:48.946" endtime="20201110 08:37:49.518"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.541" endtime="20201110 08:37:49.561"></status>
</kw>
<msg timestamp="20201110 08:37:49.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.538" endtime="20201110 08:37:49.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:49.565" endtime="20201110 08:37:49.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.571" endtime="20201110 08:37:49.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.530" endtime="20201110 08:37:49.577"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.524" endtime="20201110 08:37:49.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.595" endtime="20201110 08:37:49.946"></status>
</kw>
<msg timestamp="20201110 08:37:49.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042960528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043001056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.592" endtime="20201110 08:37:49.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:49.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042960528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043001056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:49.956" endtime="20201110 08:37:49.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:49.975" endtime="20201110 08:37:49.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.584" endtime="20201110 08:37:49.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.580" endtime="20201110 08:37:49.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:49.995" level="INFO">${RESULT} = [{'time': 0.043001056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.052800000000495e-05, 'source_diff': 4.052800000000495e-05}, {'time': 0.043051056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:49.986" endtime="20201110 08:37:49.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.029" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:49.998" endtime="20201110 08:37:50.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.041" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.038" endtime="20201110 08:37:50.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.046" level="INFO">VALUE: [4.052800000000495e-05, 4.0888999999995346e-05, 4.1153000000002105e-05, 4.038799999999537e-05, 4.0304999999997426e-05, 4.0804999999997926e-05, 4.1069000000004685e-05, 4.118000000000177e-05, 4.0624999999995526e-05, 4.1111000000003395e-05, 4.0680999999993805e-05, 4.0555000000004615e-05, 4.0903000000001855e-05, 4.1111000000003395e-05, 4.047199999999973e-05, 4.0833000000004005e-05, 4.095800000000066e-05, 4.0389000000001785e-05, 4.06660000000017e-05, 4.0959000000000134e-05, 4.0361000000002645e-05, 4.051399999999844e-05, 4.0889000000002285e-05, 4.036200000000212e-05, 4.055599999999715e-05, 4.063799999999562e-05, 4.088800000000281e-05, 4.099999999999937e-05, 4.0277000000005225e-05, 4.0291000000004795e-05, 4.052799999999801e-05, 4.0889000000002285e-05, 4.0611000000002895e-05, 4.029199999999733e-05, 4.1068999999997746e-05, 4.030600000000384e-05, 4.1083000000004255e-05, 4.0639000000002035e-05, 4.100000000000631e-05, 4.1125000000002965e-05, 4.097200000000023e-05, 4.099999999999937e-05, 4.123600000000005e-05, 4.0624999999995526e-05, 4.0902999999994916e-05, 4.072199999999998e-05, 4.041600000000145e-05, 4.0374999999995276e-05, 4.0332999999996566e-05, 4.051399999999844e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.043" endtime="20201110 08:37:50.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.031" endtime="20201110 08:37:50.050"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.056" endtime="20201110 08:37:50.059"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.065" endtime="20201110 08:37:50.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.060" endtime="20201110 08:37:50.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.051" endtime="20201110 08:37:50.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.520" endtime="20201110 08:37:50.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:49.519" endtime="20201110 08:37:50.091"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.114" endtime="20201110 08:37:50.135"></status>
</kw>
<msg timestamp="20201110 08:37:50.136" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.110" endtime="20201110 08:37:50.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.138" endtime="20201110 08:37:50.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.145" endtime="20201110 08:37:50.148"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.103" endtime="20201110 08:37:50.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.097" endtime="20201110 08:37:50.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.168" endtime="20201110 08:37:50.471"></status>
</kw>
<msg timestamp="20201110 08:37:50.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043218, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043259403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:50.165" endtime="20201110 08:37:50.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043218, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043259403, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:37:50.481" endtime="20201110 08:37:50.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.501" endtime="20201110 08:37:50.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.158" endtime="20201110 08:37:50.507"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.153" endtime="20201110 08:37:50.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:50.520" level="INFO">${RESULT} = [{'time': 0.043259403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.1403000000002355e-05, 'source_diff': 4.1403000000002355e-05}, {'time': 0.043309417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:50.510" endtime="20201110 08:37:50.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:50.554" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:50.522" endtime="20201110 08:37:50.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.565" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201110 08:37:50.563" endtime="20201110 08:37:50.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.571" level="INFO">VALUE: [4.1403000000002355e-05, 4.1945000000001564e-05, 4.1388999999995846e-05, 4.2068999999998746e-05, 4.183399999999754e-05, 4.1723000000000454e-05, 4.1846999999997636e-05, 4.172200000000098e-05, 4.1290999999998856e-05, 4.1804999999998926e-05, 4.195800000000166e-05, 4.1304999999998426e-05, 4.151399999999944e-05, 4.144400000000159e-05, 4.173600000000055e-05, 4.1596999999997386e-05, 4.201399999999994e-05, 4.222200000000148e-05, 4.147200000000073e-05, 4.2153000000003105e-05, 4.208400000000473e-05, 4.1874999999996776e-05, 4.1625000000003465e-05, 4.1903000000002855e-05, 4.1930999999995056e-05, 4.1624999999996526e-05, 4.1276999999999286e-05, 4.1290999999998856e-05, 4.175000000000012e-05, 4.216599999999626e-05, 4.1526999999999537e-05, 4.201399999999994e-05, 4.166599999999576e-05, 4.141600000000245e-05, 4.2153000000003105e-05, 4.1832999999998066e-05, 4.1639000000003035e-05, 4.1681000000001744e-05, 4.2152999999996166e-05, 4.1417000000001924e-05, 4.1945000000001564e-05, 4.207000000000516e-05, 4.1860999999997206e-05, 4.1417000000001924e-05, 4.165200000000313e-05, 4.208400000000473e-05, 4.2181000000002244e-05, 4.175000000000012e-05, 4.1290999999998856e-05, 4.1861000000004145e-05]</msg>
<status status="PASS" starttime="20201110 08:37:50.568" endtime="20201110 08:37:50.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.556" endtime="20201110 08:37:50.575"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.581" endtime="20201110 08:37:50.584"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:50.591" endtime="20201110 08:37:50.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.586" endtime="20201110 08:37:50.614"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.577" endtime="20201110 08:37:50.616"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.093" endtime="20201110 08:37:50.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.092" endtime="20201110 08:37:50.617"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.642" endtime="20201110 08:37:50.663"></status>
</kw>
<msg timestamp="20201110 08:37:50.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.638" endtime="20201110 08:37:50.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:50.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:50.667" endtime="20201110 08:37:50.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.673" endtime="20201110 08:37:50.677"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.630" endtime="20201110 08:37:50.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.624" endtime="20201110 08:37:50.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:50.698" endtime="20201110 08:37:51.056"></status>
</kw>
<msg timestamp="20201110 08:37:51.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045195361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045237861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:50.695" endtime="20201110 08:37:51.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045195361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045237861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.066" endtime="20201110 08:37:51.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.086" endtime="20201110 08:37:51.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.687" endtime="20201110 08:37:51.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.682" endtime="20201110 08:37:51.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.105" level="INFO">${RESULT} = [{'time': 0.045237861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.249999999999393e-05, 'source_diff': 4.249999999999393e-05}, {'time': 0.045293861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:51.095" endtime="20201110 08:37:51.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.139" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:51.107" endtime="20201110 08:37:51.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.151" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.148" endtime="20201110 08:37:51.151"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.156" level="INFO">VALUE: [4.249999999999393e-05, 4.272199999999504e-05, 4.2375000000004215e-05, 4.2374999999997276e-05, 4.3124999999998026e-05, 4.299999999999443e-05, 4.2888999999997346e-05, 4.302800000000051e-05, 4.2332999999998566e-05, 4.3180999999996306e-05, 4.2945000000002564e-05, 4.252800000000001e-05, 4.26660000000037e-05, 4.261200000000437e-05, 4.244399999999565e-05, 4.273600000000155e-05, 4.251400000000044e-05, 4.273600000000155e-05, 4.297200000000223e-05, 4.276399999999375e-05, 4.301400000000094e-05, 4.3138999999997596e-05, 4.273599999999461e-05, 4.2638999999997096e-05, 4.301400000000094e-05, 4.2431000000002494e-05, 4.275000000000112e-05, 4.251400000000044e-05, 4.234800000000455e-05, 4.227799999999976e-05, 4.2653000000003605e-05, 4.279199999999983e-05, 4.308399999999879e-05, 4.227799999999976e-05, 4.25980000000048e-05, 4.3110999999998456e-05, 4.300000000000137e-05, 4.2902999999996916e-05, 4.3041000000000607e-05, 4.2388999999996846e-05, 4.2360999999997706e-05, 4.2596999999998386e-05, 4.2902999999996916e-05, 4.2403000000003355e-05, 4.2596999999998386e-05, 4.2403000000003355e-05, 4.2374999999997276e-05, 4.2527000000000537e-05, 4.227799999999976e-05, 4.308399999999879e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.153" endtime="20201110 08:37:51.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.141" endtime="20201110 08:37:51.166"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.173" endtime="20201110 08:37:51.176"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.182" endtime="20201110 08:37:51.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.177" endtime="20201110 08:37:51.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.168" endtime="20201110 08:37:51.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.619" endtime="20201110 08:37:51.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:50.618" endtime="20201110 08:37:51.209"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.233" endtime="20201110 08:37:51.253"></status>
</kw>
<msg timestamp="20201110 08:37:51.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.229" endtime="20201110 08:37:51.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.257" endtime="20201110 08:37:51.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.264" endtime="20201110 08:37:51.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.222" endtime="20201110 08:37:51.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.216" endtime="20201110 08:37:51.271"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.289" endtime="20201110 08:37:51.648"></status>
</kw>
<msg timestamp="20201110 08:37:51.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044365958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044409597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.285" endtime="20201110 08:37:51.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044365958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044409597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.658" endtime="20201110 08:37:51.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.678" endtime="20201110 08:37:51.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.278" endtime="20201110 08:37:51.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.272" endtime="20201110 08:37:51.685"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:51.696" level="INFO">${RESULT} = [{'time': 0.044409597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3639000000005035e-05, 'source_diff': 4.3639000000005035e-05}, {'time': 0.044464583, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:51.687" endtime="20201110 08:37:51.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:51.730" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:51.699" endtime="20201110 08:37:51.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.742" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201110 08:37:51.740" endtime="20201110 08:37:51.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.748" level="INFO">VALUE: [4.3639000000005035e-05, 4.4069000000000746e-05, 4.3653000000004605e-05, 4.3402999999997416e-05, 4.379200000000083e-05, 4.3846999999999636e-05, 4.375000000000212e-05, 4.4180999999997306e-05, 4.3416999999996986e-05, 4.3860999999999206e-05, 4.3402999999997416e-05, 4.350000000000187e-05, 4.3709000000002884e-05, 4.352800000000101e-05, 4.333399999999904e-05, 4.3639000000005035e-05, 4.3902999999997916e-05, 4.417999999999783e-05, 4.3875000000005715e-05, 4.417999999999783e-05, 4.41939999999974e-05, 4.4069000000000746e-05, 4.3638999999998096e-05, 4.366599999999776e-05, 4.4152999999998166e-05, 4.4083000000000316e-05, 4.3846999999999636e-05, 4.374999999999518e-05, 4.373600000000255e-05, 4.397199999999629e-05, 4.352800000000101e-05, 4.422200000000348e-05, 4.375000000000212e-05, 4.33059999999999e-05, 4.376399999999475e-05, 4.3624999999998526e-05, 4.351400000000144e-05, 4.3861000000006145e-05, 4.3958999999996196e-05, 4.4069000000000746e-05, 4.3902999999997916e-05, 4.352700000000154e-05, 4.3889000000005285e-05, 4.3805000000000927e-05, 4.372200000000298e-05, 4.4138999999998596e-05, 4.3860999999999206e-05, 4.4083000000000316e-05, 4.3652999999997666e-05, 4.355600000000015e-05]</msg>
<status status="PASS" starttime="20201110 08:37:51.745" endtime="20201110 08:37:51.750"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.732" endtime="20201110 08:37:51.751"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.758" endtime="20201110 08:37:51.761"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:51.767" endtime="20201110 08:37:51.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.763" endtime="20201110 08:37:51.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.753" endtime="20201110 08:37:51.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.211" endtime="20201110 08:37:51.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.210" endtime="20201110 08:37:51.794"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.818" endtime="20201110 08:37:51.838"></status>
</kw>
<msg timestamp="20201110 08:37:51.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.815" endtime="20201110 08:37:51.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:51.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:51.842" endtime="20201110 08:37:51.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.849" endtime="20201110 08:37:51.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.807" endtime="20201110 08:37:51.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.801" endtime="20201110 08:37:51.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:51.874" endtime="20201110 08:37:52.230"></status>
</kw>
<msg timestamp="20201110 08:37:52.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044383444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044427736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:51.870" endtime="20201110 08:37:52.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044383444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044427736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.241" endtime="20201110 08:37:52.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.259" endtime="20201110 08:37:52.263"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.863" endtime="20201110 08:37:52.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.858" endtime="20201110 08:37:52.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.277" level="INFO">${RESULT} = [{'time': 0.044427736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.429200000000133e-05, 'source_diff': 4.429200000000133e-05}, {'time': 0.04448175, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:37:52.268" endtime="20201110 08:37:52.277"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.310" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:52.279" endtime="20201110 08:37:52.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.321" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.319" endtime="20201110 08:37:52.322"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.327" level="INFO">VALUE: [4.429200000000133e-05, 4.497199999999729e-05, 4.477799999999532e-05, 4.4347000000000136e-05, 4.472199999999704e-05, 4.450000000000287e-05, 4.457000000000072e-05, 4.5180999999998306e-05, 4.506999999999428e-05, 4.450000000000287e-05, 4.457000000000072e-05, 4.465199999999919e-05, 4.44860000000033e-05, 4.51939999999984e-05, 4.440199999999894e-05, 4.451400000000244e-05, 4.427700000000229e-05, 4.440199999999894e-05, 4.4610999999999956e-05, 4.4403000000005355e-05, 4.5166999999998736e-05, 4.4583000000000816e-05, 4.433400000000004e-05, 4.472200000000398e-05, 4.495799999999772e-05, 4.4874999999999776e-05, 4.450000000000287e-05, 4.457000000000072e-05, 4.4624999999999526e-05, 4.458400000000029e-05, 4.473599999999661e-05, 4.502800000000251e-05, 4.502799999999557e-05, 4.5111000000000456e-05, 4.516599999999926e-05, 4.429099999999492e-05, 4.4861000000000206e-05, 4.429100000000186e-05, 4.429100000000186e-05, 4.505500000000218e-05, 4.429100000000186e-05, 4.5167000000005675e-05, 4.473600000000355e-05, 4.51939999999984e-05, 4.5181000000005245e-05, 4.5111000000000456e-05, 4.5180999999998306e-05, 4.476400000000269e-05, 4.502800000000251e-05, 4.508400000000079e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.323" endtime="20201110 08:37:52.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.312" endtime="20201110 08:37:52.330"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.336" endtime="20201110 08:37:52.339"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.345" endtime="20201110 08:37:52.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.340" endtime="20201110 08:37:52.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.332" endtime="20201110 08:37:52.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.796" endtime="20201110 08:37:52.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:51.795" endtime="20201110 08:37:52.371"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.394" endtime="20201110 08:37:52.414"></status>
</kw>
<msg timestamp="20201110 08:37:52.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.390" endtime="20201110 08:37:52.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.417" endtime="20201110 08:37:52.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.423" endtime="20201110 08:37:52.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.383" endtime="20201110 08:37:52.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.377" endtime="20201110 08:37:52.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.449" endtime="20201110 08:37:52.795"></status>
</kw>
<msg timestamp="20201110 08:37:52.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042210833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042256931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.446" endtime="20201110 08:37:52.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042210833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042256931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:52.804" endtime="20201110 08:37:52.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.823" endtime="20201110 08:37:52.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.438" endtime="20201110 08:37:52.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.432" endtime="20201110 08:37:52.830"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:52.842" level="INFO">${RESULT} = [{'time': 0.042256931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.609799999999442e-05, 'source_diff': 4.609799999999442e-05}, {'time': 0.042312917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:52.832" endtime="20201110 08:37:52.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:52.873" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:52.844" endtime="20201110 08:37:52.873"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.885" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201110 08:37:52.881" endtime="20201110 08:37:52.886"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.890" level="INFO">VALUE: [4.609799999999442e-05, 4.53060000000019e-05, 4.573600000000455e-05, 4.606999999999528e-05, 4.5958999999998196e-05, 4.552800000000301e-05, 4.555599999999521e-05, 4.530500000000243e-05, 4.606900000000275e-05, 4.605500000000318e-05, 4.606899999999581e-05, 4.575000000000412e-05, 4.551400000000344e-05, 4.5402999999999416e-05, 4.5416999999998986e-05, 4.552799999999607e-05, 4.606899999999581e-05, 4.5625000000000526e-05, 4.572199999999804e-05, 4.607000000000222e-05, 4.5611000000000956e-05, 4.5709000000004885e-05, 4.573599999999761e-05, 4.552800000000301e-05, 4.533400000000104e-05, 4.586199999999374e-05, 4.5375000000000276e-05, 4.541599999999951e-05, 4.5375000000000276e-05, 4.544399999999865e-05, 4.606900000000275e-05, 4.554200000000258e-05, 4.545799999999822e-05, 4.573599999999761e-05, 4.530500000000243e-05, 4.5625000000000526e-05, 4.5694999999998376e-05, 4.600000000000437e-05, 4.5388999999999846e-05, 4.574999999999718e-05, 4.6194999999998876e-05, 4.573599999999761e-05, 4.53060000000019e-05, 4.5652999999999666e-05, 4.627799999999682e-05, 4.586200000000068e-05, 4.607000000000222e-05, 4.530500000000243e-05, 4.616600000000026e-05, 4.606900000000275e-05]</msg>
<status status="PASS" starttime="20201110 08:37:52.887" endtime="20201110 08:37:52.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.875" endtime="20201110 08:37:52.894"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.900" endtime="20201110 08:37:52.903"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:52.909" endtime="20201110 08:37:52.930"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.904" endtime="20201110 08:37:52.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.896" endtime="20201110 08:37:52.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.373" endtime="20201110 08:37:52.934"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.372" endtime="20201110 08:37:52.934"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.957" endtime="20201110 08:37:52.978"></status>
</kw>
<msg timestamp="20201110 08:37:52.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.954" endtime="20201110 08:37:52.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:52.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:52.981" endtime="20201110 08:37:52.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:52.987" endtime="20201110 08:37:52.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.947" endtime="20201110 08:37:52.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.941" endtime="20201110 08:37:52.994"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.011" endtime="20201110 08:37:53.348"></status>
</kw>
<msg timestamp="20201110 08:37:53.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042041806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042088653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.008" endtime="20201110 08:37:53.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042041806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042088653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.358" endtime="20201110 08:37:53.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.377" endtime="20201110 08:37:53.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.000" endtime="20201110 08:37:53.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.996" endtime="20201110 08:37:53.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.395" level="INFO">${RESULT} = [{'time': 0.042088653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.68469999999957e-05, 'source_diff': 4.68469999999957e-05}, {'time': 0.042146681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:53.385" endtime="20201110 08:37:53.395"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.425" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:53.397" endtime="20201110 08:37:53.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.437" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.434" endtime="20201110 08:37:53.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.443" level="INFO">VALUE: [4.68469999999957e-05, 4.6875000000001776e-05, 4.6958999999999196e-05, 4.6972999999998766e-05, 4.651299999999803e-05, 4.6333000000002567e-05, 4.709699999999595e-05, 4.662499999999459e-05, 4.690200000000144e-05, 4.6639000000001096e-05, 4.6319000000003e-05, 4.695799999999972e-05, 4.672199999999904e-05, 4.629200000000333e-05, 4.6653000000000666e-05, 4.6889000000001346e-05, 4.626399999999725e-05, 4.6680999999999806e-05, 4.68469999999957e-05, 4.698599999999886e-05, 4.630599999999596e-05, 4.6639000000001096e-05, 4.677800000000426e-05, 4.6639000000001096e-05, 4.7222999999999016e-05, 4.651400000000444e-05, 4.6333000000002567e-05, 4.705499999999724e-05, 4.65139999999975e-05, 4.702800000000451e-05, 4.6361000000001706e-05, 4.645799999999922e-05, 4.7013999999998e-05, 4.6931000000000056e-05, 4.670799999999947e-05, 4.6416999999999986e-05, 4.709699999999595e-05, 4.6375000000001276e-05, 4.700000000000537e-05, 4.654199999999664e-05, 4.672199999999904e-05, 4.709800000000236e-05, 4.65269999999976e-05, 4.70269999999981e-05, 4.655599999999621e-05, 4.71940000000004e-05, 4.673599999999861e-05, 4.6861000000002206e-05, 4.673599999999861e-05, 4.630499999999649e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.440" endtime="20201110 08:37:53.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.427" endtime="20201110 08:37:53.447"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.454" endtime="20201110 08:37:53.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.462" endtime="20201110 08:37:53.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.458" endtime="20201110 08:37:53.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.449" endtime="20201110 08:37:53.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.937" endtime="20201110 08:37:53.488"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:52.935" endtime="20201110 08:37:53.488"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.511" endtime="20201110 08:37:53.530"></status>
</kw>
<msg timestamp="20201110 08:37:53.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.507" endtime="20201110 08:37:53.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.534" endtime="20201110 08:37:53.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.540" endtime="20201110 08:37:53.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.500" endtime="20201110 08:37:53.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.494" endtime="20201110 08:37:53.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.563" endtime="20201110 08:37:53.863"></status>
</kw>
<msg timestamp="20201110 08:37:53.867" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041794889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041842792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.560" endtime="20201110 08:37:53.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041794889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041842792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.868" endtime="20201110 08:37:53.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.876" endtime="20201110 08:37:53.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.553" endtime="20201110 08:37:53.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.548" endtime="20201110 08:37:53.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:53.884" level="INFO">${RESULT} = [{'time': 0.041842792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.790299999999498e-05, 'source_diff': 4.790299999999498e-05}, {'time': 0.041902792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:53.880" endtime="20201110 08:37:53.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:53.898" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:53.885" endtime="20201110 08:37:53.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.903" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201110 08:37:53.902" endtime="20201110 08:37:53.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.906" level="INFO">VALUE: [4.790299999999498e-05, 4.7931000000001056e-05, 4.818099999999437e-05, 4.7417000000000986e-05, 4.759800000000286e-05, 4.763800000000262e-05, 4.766600000000176e-05, 4.799999999999943e-05, 4.795800000000072e-05, 4.763899999999516e-05, 4.809699999999695e-05, 4.733299999999663e-05, 4.8195000000000876e-05, 4.794400000000115e-05, 4.7403000000001416e-05, 4.7361000000002706e-05, 4.758400000000329e-05, 4.7625000000002526e-05, 4.823600000000011e-05, 4.805599999999771e-05, 4.78060000000044e-05, 4.761099999999602e-05, 4.758299999999688e-05, 4.797200000000029e-05, 4.7415999999994574e-05, 4.804099999999867e-05, 4.818000000000183e-05, 4.7639000000002096e-05, 4.768000000000133e-05, 4.8207999999994033e-05, 4.730499999999749e-05, 4.808300000000432e-05, 4.773599999999961e-05, 4.7639000000002096e-05, 4.806899999999781e-05, 4.736099999999577e-05, 4.807000000000422e-05, 4.751400000000544e-05, 4.738899999999491e-05, 4.7959000000000196e-05, 4.806999999999728e-05, 4.752799999999807e-05, 4.780499999999799e-05, 4.784799999999617e-05, 4.808299999999738e-05, 4.788899999999541e-05, 4.75269999999986e-05, 4.76940000000009e-05, 4.765299999999473e-05, 4.822200000000054e-05]</msg>
<status status="PASS" starttime="20201110 08:37:53.905" endtime="20201110 08:37:53.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.899" endtime="20201110 08:37:53.908"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.911" endtime="20201110 08:37:53.913"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:53.915" endtime="20201110 08:37:53.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.913" endtime="20201110 08:37:53.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.909" endtime="20201110 08:37:53.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.490" endtime="20201110 08:37:53.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.489" endtime="20201110 08:37:53.937"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.948" endtime="20201110 08:37:53.964"></status>
</kw>
<msg timestamp="20201110 08:37:53.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.946" endtime="20201110 08:37:53.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:53.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:53.965" endtime="20201110 08:37:53.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.968" endtime="20201110 08:37:53.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.942" endtime="20201110 08:37:53.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.940" endtime="20201110 08:37:53.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:53.979" endtime="20201110 08:37:54.311"></status>
</kw>
<msg timestamp="20201110 08:37:54.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024705597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:53.978" endtime="20201110 08:37:54.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024656986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024705597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.321" endtime="20201110 08:37:54.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.340" endtime="20201110 08:37:54.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.974" endtime="20201110 08:37:54.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.972" endtime="20201110 08:37:54.347"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.358" level="INFO">${RESULT} = [{'time': 0.024705597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.861100000000049e-05, 'source_diff': 4.861100000000049e-05}, {'time': 0.024768597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.348" endtime="20201110 08:37:54.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.389" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:54.360" endtime="20201110 08:37:54.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.400" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.398" endtime="20201110 08:37:54.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.406" level="INFO">VALUE: [4.861100000000049e-05, 4.898600000000086e-05, 4.863899999999963e-05, 4.842999999999861e-05, 4.880599999999846e-05, 4.862500000000006e-05, 4.902799999999957e-05, 4.92079999999985e-05, 4.8431000000001556e-05, 4.91529999999997e-05, 4.904200000000261e-05, 4.848599999999689e-05, 4.90270000000001e-05, 4.888899999999988e-05, 4.83879999999999e-05, 4.883299999999813e-05, 4.877699999999985e-05, 4.86529999999992e-05, 4.894499999999816e-05, 4.859700000000092e-05, 4.862500000000006e-05, 4.841699999999852e-05, 4.829199999999839e-05, 4.830599999999796e-05, 4.875000000000018e-05, 4.852800000000254e-05, 4.83330000000011e-05, 4.852799999999907e-05, 4.923600000000111e-05, 4.9195000000001876e-05, 4.830599999999796e-05, 4.875000000000018e-05, 4.827799999999882e-05, 4.85139999999995e-05, 4.831900000000153e-05, 4.911100000000099e-05, 4.908299999999838e-05, 4.906900000000228e-05, 4.917999999999936e-05, 4.827799999999882e-05, 4.830499999999849e-05, 4.873600000000061e-05, 4.8445000000001126e-05, 4.861100000000049e-05, 4.909700000000142e-05, 4.863899999999963e-05, 4.8667000000002236e-05, 4.862500000000006e-05, 4.929099999999992e-05, 4.918099999999884e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.402" endtime="20201110 08:37:54.407"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.391" endtime="20201110 08:37:54.409"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.415" endtime="20201110 08:37:54.418"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.424" endtime="20201110 08:37:54.449"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.419" endtime="20201110 08:37:54.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.411" endtime="20201110 08:37:54.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.938" endtime="20201110 08:37:54.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:53.937" endtime="20201110 08:37:54.453"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.477" endtime="20201110 08:37:54.497"></status>
</kw>
<msg timestamp="20201110 08:37:54.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.473" endtime="20201110 08:37:54.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:54.501" endtime="20201110 08:37:54.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.507" endtime="20201110 08:37:54.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.466" endtime="20201110 08:37:54.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.460" endtime="20201110 08:37:54.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.531" endtime="20201110 08:37:54.882"></status>
</kw>
<msg timestamp="20201110 08:37:54.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043085431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043134903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.528" endtime="20201110 08:37:54.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043085431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043134903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:54.891" endtime="20201110 08:37:54.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.915" endtime="20201110 08:37:54.919"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.520" endtime="20201110 08:37:54.920"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.516" endtime="20201110 08:37:54.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:54.933" level="INFO">${RESULT} = [{'time': 0.043134903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.947200000000179e-05, 'source_diff': 4.947200000000179e-05}, {'time': 0.043198847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:54.923" endtime="20201110 08:37:54.933"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:54.964" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:54.935" endtime="20201110 08:37:54.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.975" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201110 08:37:54.973" endtime="20201110 08:37:54.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:54.980" level="INFO">VALUE: [4.947200000000179e-05, 5.015299999999723e-05, 5.005500000000024e-05, 4.986099999999827e-05, 4.951399999999356e-05, 5.011099999999852e-05, 5.000000000000143e-05, 4.9445000000002126e-05, 5.018099999999637e-05, 4.955599999999921e-05, 4.9459000000001696e-05, 4.929199999999939e-05, 4.962499999999759e-05, 4.977800000000032e-05, 4.975000000000118e-05, 4.938899999999691e-05, 4.948599999999442e-05, 4.975000000000118e-05, 4.986099999999827e-05, 4.98469999999987e-05, 5.0179999999996894e-05, 5.01940000000034e-05, 5.0193999999996464e-05, 4.936099999999777e-05, 4.938899999999691e-05, 5.022200000000254e-05, 5.008299999999938e-05, 4.9653000000003666e-05, 4.988899999999741e-05, 5.006999999999928e-05, 4.986099999999827e-05, 4.9723000000001516e-05, 5.009699999999895e-05, 5.006899999999981e-05, 5.006899999999981e-05, 4.927700000000035e-05, 4.9695000000002376e-05, 4.931899999999906e-05, 4.9679999999996394e-05, 4.995800000000272e-05, 5.012500000000503e-05, 4.9417000000002986e-05, 4.994499999999569e-05, 4.986099999999827e-05, 4.95140000000005e-05, 5.0014000000001e-05, 5.011099999999852e-05, 4.9473000000001266e-05, 4.961100000000496e-05, 4.991699999999655e-05]</msg>
<status status="PASS" starttime="20201110 08:37:54.977" endtime="20201110 08:37:54.982"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.966" endtime="20201110 08:37:54.984"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:54.991" endtime="20201110 08:37:54.993"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:54.999" endtime="20201110 08:37:55.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.995" endtime="20201110 08:37:55.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.986" endtime="20201110 08:37:55.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.456" endtime="20201110 08:37:55.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:54.454" endtime="20201110 08:37:55.026"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.051" endtime="20201110 08:37:55.070"></status>
</kw>
<msg timestamp="20201110 08:37:55.072" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.047" endtime="20201110 08:37:55.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.074" endtime="20201110 08:37:55.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.080" endtime="20201110 08:37:55.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.040" endtime="20201110 08:37:55.086"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.032" endtime="20201110 08:37:55.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.104" endtime="20201110 08:37:55.455"></status>
</kw>
<msg timestamp="20201110 08:37:55.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044555806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044606764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.101" endtime="20201110 08:37:55.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044555806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044606764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.465" endtime="20201110 08:37:55.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.484" endtime="20201110 08:37:55.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.094" endtime="20201110 08:37:55.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.089" endtime="20201110 08:37:55.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:55.501" level="INFO">${RESULT} = [{'time': 0.044606764, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.0957999999996784e-05, 'source_diff': 5.0957999999996784e-05}, {'time': 0.044665792, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:55.492" endtime="20201110 08:37:55.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:55.532" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:55.504" endtime="20201110 08:37:55.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.543" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201110 08:37:55.541" endtime="20201110 08:37:55.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.549" level="INFO">VALUE: [5.0957999999996784e-05, 5.0417000000003986e-05, 5.026400000000125e-05, 5.045899999999576e-05, 5.097299999999583e-05, 5.108399999999985e-05, 5.101399999999506e-05, 5.029100000000092e-05, 5.027699999999441e-05, 5.106900000000081e-05, 5.058299999999988e-05, 5.052800000000107e-05, 5.097200000000329e-05, 5.0971999999996354e-05, 5.063899999999816e-05, 5.03469999999992e-05, 5.051399999999456e-05, 5.08469999999997e-05, 5.0639000000005097e-05, 5.0681000000003806e-05, 5.03469999999992e-05, 5.0403000000004416e-05, 5.048600000000236e-05, 5.1167000000004736e-05, 5.047200000000279e-05, 5.082000000000003e-05, 5.116600000000526e-05, 5.030500000000049e-05, 5.11940000000044e-05, 5.029100000000092e-05, 5.072200000000304e-05, 5.075000000000218e-05, 5.076400000000175e-05, 5.08469999999997e-05, 5.041699999999705e-05, 5.037499999999834e-05, 5.111099999999952e-05, 5.088899999999841e-05, 5.026400000000125e-05, 5.0667000000004236e-05, 5.052800000000107e-05, 5.0667000000004236e-05, 5.095899999999626e-05, 5.0403000000004416e-05, 5.062499999999859e-05, 5.0721999999996104e-05, 5.072200000000304e-05, 5.106900000000081e-05, 5.095800000000372e-05, 5.063899999999816e-05]</msg>
<status status="PASS" starttime="20201110 08:37:55.546" endtime="20201110 08:37:55.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.534" endtime="20201110 08:37:55.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.559" endtime="20201110 08:37:55.562"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:55.567" endtime="20201110 08:37:55.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.563" endtime="20201110 08:37:55.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.554" endtime="20201110 08:37:55.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.028" endtime="20201110 08:37:55.593"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.027" endtime="20201110 08:37:55.594"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.617" endtime="20201110 08:37:55.638"></status>
</kw>
<msg timestamp="20201110 08:37:55.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.613" endtime="20201110 08:37:55.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:55.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:55.642" endtime="20201110 08:37:55.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.648" endtime="20201110 08:37:55.654"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.606" endtime="20201110 08:37:55.655"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.600" endtime="20201110 08:37:55.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:55.674" endtime="20201110 08:37:56.028"></status>
</kw>
<msg timestamp="20201110 08:37:56.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043246681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:55.670" endtime="20201110 08:37:56.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043246681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.038" endtime="20201110 08:37:56.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.057" endtime="20201110 08:37:56.061"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.663" endtime="20201110 08:37:56.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.658" endtime="20201110 08:37:56.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.075" level="INFO">${RESULT} = [{'time': 0.043246681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1987000000003336e-05, 'source_diff': 5.1987000000003336e-05}, {'time': 0.043307667, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:56.066" endtime="20201110 08:37:56.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.106" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:56.077" endtime="20201110 08:37:56.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.117" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.115" endtime="20201110 08:37:56.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.123" level="INFO">VALUE: [5.1987000000003336e-05, 5.130600000000096e-05, 5.1709000000003946e-05, 5.213899999999966e-05, 5.1945000000004626e-05, 5.186100000000027e-05, 5.1749999999996243e-05, 5.151299999999609e-05, 5.2207999999998034e-05, 5.136099999999977e-05, 5.147200000000379e-05, 5.15140000000025e-05, 5.183300000000113e-05, 5.1693999999997964e-05, 5.162499999999959e-05, 5.155599999999427e-05, 5.219499999999794e-05, 5.175000000000318e-05, 5.143099999999762e-05, 5.205600000000171e-05, 5.151399999999556e-05, 5.129200000000139e-05, 5.162499999999959e-05, 5.202699999999616e-05, 5.152800000000207e-05, 5.147200000000379e-05, 5.1915999999999074e-05, 5.161100000000002e-05, 5.212500000000009e-05, 5.212500000000009e-05, 5.138899999999891e-05, 5.206900000000181e-05, 5.2167000000005737e-05, 5.15140000000025e-05, 5.155600000000121e-05, 5.132000000000053e-05, 5.1693999999997964e-05, 5.157000000000078e-05, 5.202799999999563e-05, 5.152800000000207e-05, 5.16669999999983e-05, 5.141699999999805e-05, 5.187499999999984e-05, 5.1971999999997354e-05, 5.151299999999609e-05, 5.1929999999998644e-05, 5.1651999999999254e-05, 5.2207999999998034e-05, 5.129099999999498e-05, 5.170899999999701e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.119" endtime="20201110 08:37:56.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.108" endtime="20201110 08:37:56.126"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.132" endtime="20201110 08:37:56.135"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.141" endtime="20201110 08:37:56.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.136" endtime="20201110 08:37:56.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.128" endtime="20201110 08:37:56.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.596" endtime="20201110 08:37:56.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:55.595" endtime="20201110 08:37:56.167"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.191" endtime="20201110 08:37:56.212"></status>
</kw>
<msg timestamp="20201110 08:37:56.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.188" endtime="20201110 08:37:56.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.215" endtime="20201110 08:37:56.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.222" endtime="20201110 08:37:56.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.180" endtime="20201110 08:37:56.227"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.174" endtime="20201110 08:37:56.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.248" endtime="20201110 08:37:56.601"></status>
</kw>
<msg timestamp="20201110 08:37:56.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044081458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04413375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:56.244" endtime="20201110 08:37:56.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044081458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04413375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:37:56.611" endtime="20201110 08:37:56.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.630" endtime="20201110 08:37:56.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.235" endtime="20201110 08:37:56.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.230" endtime="20201110 08:37:56.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:56.648" level="INFO">${RESULT} = [{'time': 0.04413375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.229200000000239e-05, 'source_diff': 5.229200000000239e-05}, {'time': 0.04419575, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:56.639" endtime="20201110 08:37:56.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:56.679" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:56.650" endtime="20201110 08:37:56.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.690" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201110 08:37:56.688" endtime="20201110 08:37:56.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.696" level="INFO">VALUE: [5.229200000000239e-05, 5.2943999999999214e-05, 5.31669999999998e-05, 5.232000000000153e-05, 5.319499999999894e-05, 5.238899999999991e-05, 5.272299999999758e-05, 5.273600000000461e-05, 5.238899999999991e-05, 5.3166000000000324e-05, 5.2943999999999214e-05, 5.308299999999544e-05, 5.306900000000281e-05, 5.2749999999997244e-05, 5.311100000000152e-05, 5.273600000000461e-05, 5.318099999999937e-05, 5.2943999999999214e-05, 5.262500000000059e-05, 5.230599999999502e-05, 5.286100000000127e-05, 5.265299999999973e-05, 5.2445000000005126e-05, 5.275000000000418e-05, 5.28340000000016e-05, 5.2652000000000254e-05, 5.254200000000264e-05, 5.229199999999545e-05, 5.263900000000016e-05, 5.2665999999999824e-05, 5.3179999999999894e-05, 5.240299999999948e-05, 5.281900000000256e-05, 5.229200000000239e-05, 5.30549999999963e-05, 5.230599999999502e-05, 5.319499999999894e-05, 5.2735999999997674e-05, 5.240299999999948e-05, 5.2263999999996313e-05, 5.2763999999996813e-05, 5.275000000000418e-05, 5.284800000000117e-05, 5.275000000000418e-05, 5.259800000000092e-05, 5.302699999999716e-05, 5.3235999999998174e-05, 5.252699999999666e-05, 5.23470000000012e-05, 5.231900000000206e-05]</msg>
<status status="PASS" starttime="20201110 08:37:56.692" endtime="20201110 08:37:56.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.681" endtime="20201110 08:37:56.704"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.711" endtime="20201110 08:37:56.714"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:56.720" endtime="20201110 08:37:56.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.715" endtime="20201110 08:37:56.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.706" endtime="20201110 08:37:56.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.169" endtime="20201110 08:37:56.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.168" endtime="20201110 08:37:56.746"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.769" endtime="20201110 08:37:56.790"></status>
</kw>
<msg timestamp="20201110 08:37:56.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.766" endtime="20201110 08:37:56.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:56.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:56.794" endtime="20201110 08:37:56.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.800" endtime="20201110 08:37:56.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.758" endtime="20201110 08:37:56.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.752" endtime="20201110 08:37:56.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:56.824" endtime="20201110 08:37:57.180"></status>
</kw>
<msg timestamp="20201110 08:37:57.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043077889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043131181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:56.820" endtime="20201110 08:37:57.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043077889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043131181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.189" endtime="20201110 08:37:57.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.208" endtime="20201110 08:37:57.212"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.813" endtime="20201110 08:37:57.214"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.808" endtime="20201110 08:37:57.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.227" level="INFO">${RESULT} = [{'time': 0.043131181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.329199999999645e-05, 'source_diff': 5.329199999999645e-05}, {'time': 0.043195181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:57.218" endtime="20201110 08:37:57.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.258" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:57.229" endtime="20201110 08:37:57.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.270" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.267" endtime="20201110 08:37:57.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.275" level="INFO">VALUE: [5.329199999999645e-05, 5.395899999999926e-05, 5.3638000000001684e-05, 5.3887999999994995e-05, 5.384699999999576e-05, 5.4194000000000464e-05, 5.4180000000000894e-05, 5.4180000000000894e-05, 5.352800000000407e-05, 5.3430000000000144e-05, 5.341700000000005e-05, 5.361100000000202e-05, 5.341700000000005e-05, 5.38749999999949e-05, 5.343099999999962e-05, 5.3485999999998424e-05, 5.4014000000005e-05, 5.329200000000339e-05, 5.4235999999999174e-05, 5.406999999999634e-05, 5.3638000000001684e-05, 5.355500000000374e-05, 5.3971999999999354e-05, 5.3930000000000644e-05, 5.330500000000349e-05, 5.340300000000048e-05, 5.3735999999998674e-05, 5.331900000000306e-05, 5.41670000000008e-05, 5.381900000000356e-05, 5.362500000000159e-05, 5.355599999999627e-05, 5.343099999999962e-05, 5.3723000000005516e-05, 5.38340000000026e-05, 5.340299999999354e-05, 5.3735999999998674e-05, 5.418100000000037e-05, 5.4194000000000464e-05, 5.408299999999644e-05, 5.329100000000392e-05, 5.362500000000159e-05, 5.3443999999999714e-05, 5.383299999999619e-05, 5.3735999999998674e-05, 5.325000000000468e-05, 5.340300000000048e-05, 5.405600000000371e-05, 5.38470000000027e-05, 5.3527999999997133e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.272" endtime="20201110 08:37:57.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.260" endtime="20201110 08:37:57.278"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.285" endtime="20201110 08:37:57.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.294" endtime="20201110 08:37:57.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.289" endtime="20201110 08:37:57.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.280" endtime="20201110 08:37:57.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.748" endtime="20201110 08:37:57.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:56.747" endtime="20201110 08:37:57.320"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.343" endtime="20201110 08:37:57.364"></status>
</kw>
<msg timestamp="20201110 08:37:57.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.340" endtime="20201110 08:37:57.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.367" endtime="20201110 08:37:57.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.374" endtime="20201110 08:37:57.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.332" endtime="20201110 08:37:57.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.326" endtime="20201110 08:37:57.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.397" endtime="20201110 08:37:57.723"></status>
</kw>
<msg timestamp="20201110 08:37:57.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043006583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.394" endtime="20201110 08:37:57.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042951611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043006583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.728" endtime="20201110 08:37:57.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.743" endtime="20201110 08:37:57.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.387" endtime="20201110 08:37:57.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.382" endtime="20201110 08:37:57.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:57.761" level="INFO">${RESULT} = [{'time': 0.043006583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.4972000000000354e-05, 'source_diff': 5.4972000000000354e-05}, {'time': 0.043072597, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:57.751" endtime="20201110 08:37:57.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:57.791" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:57.763" endtime="20201110 08:37:57.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.802" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201110 08:37:57.800" endtime="20201110 08:37:57.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.808" level="INFO">VALUE: [5.4972000000000354e-05, 5.4527999999998134e-05, 5.5027999999998634e-05, 5.506899999999787e-05, 5.436100000000277e-05, 5.4263999999998314e-05, 5.4527999999998134e-05, 5.5222000000000604e-05, 5.4972000000000354e-05, 5.462500000000259e-05, 5.512499999999615e-05, 5.465300000000173e-05, 5.463900000000216e-05, 5.455599999999727e-05, 5.5222000000000604e-05, 5.4499999999998994e-05, 5.4749999999999244e-05, 5.5166000000002324e-05, 5.5027999999998634e-05, 5.4958000000000784e-05, 5.508300000000438e-05, 5.48470000000037e-05, 5.463900000000216e-05, 5.436099999999583e-05, 5.462500000000259e-05, 5.511100000000352e-05, 5.509700000000395e-05, 5.5236000000000174e-05, 5.519500000000094e-05, 5.519500000000094e-05, 5.484800000000317e-05, 5.518100000000137e-05, 5.440300000000148e-05, 5.462500000000259e-05, 5.4791999999997953e-05, 5.4763999999998814e-05, 5.4972000000000354e-05, 5.441700000000105e-05, 5.4999999999999494e-05, 5.5194000000001464e-05, 5.5013999999999064e-05, 5.455600000000421e-05, 5.4458000000000284e-05, 5.491700000000155e-05, 5.4735999999999674e-05, 5.438899999999497e-05, 5.4485999999999424e-05, 5.497299999999983e-05, 5.505599999999777e-05, 5.4416000000001574e-05]</msg>
<status status="PASS" starttime="20201110 08:37:57.805" endtime="20201110 08:37:57.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.793" endtime="20201110 08:37:57.811"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.818" endtime="20201110 08:37:57.821"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:57.826" endtime="20201110 08:37:57.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.822" endtime="20201110 08:37:57.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.813" endtime="20201110 08:37:57.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.322" endtime="20201110 08:37:57.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.321" endtime="20201110 08:37:57.852"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.875" endtime="20201110 08:37:57.896"></status>
</kw>
<msg timestamp="20201110 08:37:57.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.872" endtime="20201110 08:37:57.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:57.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:57.900" endtime="20201110 08:37:57.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.906" endtime="20201110 08:37:57.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.865" endtime="20201110 08:37:57.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.859" endtime="20201110 08:37:57.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:57.934" endtime="20201110 08:37:58.274"></status>
</kw>
<msg timestamp="20201110 08:37:58.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042556208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:57.931" endtime="20201110 08:37:58.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042556208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042611861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.284" endtime="20201110 08:37:58.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.303" endtime="20201110 08:37:58.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.924" endtime="20201110 08:37:58.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.919" endtime="20201110 08:37:58.312"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.323" level="INFO">${RESULT} = [{'time': 0.042611861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.565300000000273e-05, 'source_diff': 5.565300000000273e-05}, {'time': 0.042680875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:37:58.313" endtime="20201110 08:37:58.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.353" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:58.325" endtime="20201110 08:37:58.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.365" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.362" endtime="20201110 08:37:58.366"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.370" level="INFO">VALUE: [5.565300000000273e-05, 5.537500000000334e-05, 5.540300000000248e-05, 5.53749999999964e-05, 5.6000000000000494e-05, 5.534699999999726e-05, 5.593100000000212e-05, 5.609799999999748e-05, 5.594500000000169e-05, 5.5277999999998884e-05, 5.597300000000083e-05, 5.61670000000028e-05, 5.5513999999999564e-05, 5.6305999999999023e-05, 5.608300000000538e-05, 5.5513999999999564e-05, 5.556899999999837e-05, 5.5957999999994845e-05, 5.6193999999995525e-05, 5.562500000000359e-05, 5.6236000000001174e-05, 5.5958000000001784e-05, 5.584699999999776e-05, 5.6027999999999634e-05, 5.5527999999999134e-05, 5.559800000000392e-05, 5.541700000000205e-05, 5.561099999999708e-05, 5.587500000000384e-05, 5.561100000000402e-05, 5.6000000000000494e-05, 5.588899999999647e-05, 5.531900000000506e-05, 5.562499999999665e-05, 5.5972000000001354e-05, 5.5541999999998704e-05, 5.5777999999999384e-05, 5.5291999999998453e-05, 5.586099999999733e-05, 5.618099999999543e-05, 5.5513999999999564e-05, 5.5791999999998954e-05, 5.5736000000000674e-05, 5.543099999999468e-05, 5.594499999999475e-05, 5.618100000000237e-05, 5.595899999999432e-05, 5.5527999999999134e-05, 5.577699999999991e-05, 5.5958000000001784e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.367" endtime="20201110 08:37:58.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.355" endtime="20201110 08:37:58.374"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.380" endtime="20201110 08:37:58.383"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.389" endtime="20201110 08:37:58.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.384" endtime="20201110 08:37:58.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.376" endtime="20201110 08:37:58.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.855" endtime="20201110 08:37:58.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:57.853" endtime="20201110 08:37:58.415"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.438" endtime="20201110 08:37:58.459"></status>
</kw>
<msg timestamp="20201110 08:37:58.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.435" endtime="20201110 08:37:58.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:58.462" endtime="20201110 08:37:58.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.469" endtime="20201110 08:37:58.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.427" endtime="20201110 08:37:58.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.421" endtime="20201110 08:37:58.476"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.493" endtime="20201110 08:37:58.832"></status>
</kw>
<msg timestamp="20201110 08:37:58.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042904944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042961472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.489" endtime="20201110 08:37:58.840"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042904944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042961472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:58.842" endtime="20201110 08:37:58.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.861" endtime="20201110 08:37:58.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.482" endtime="20201110 08:37:58.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.477" endtime="20201110 08:37:58.869"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:58.880" level="INFO">${RESULT} = [{'time': 0.042961472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.6528000000000134e-05, 'source_diff': 5.6528000000000134e-05}, {'time': 0.043030472, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:37:58.871" endtime="20201110 08:37:58.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:58.911" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:58.882" endtime="20201110 08:37:58.911"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.924" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201110 08:37:58.921" endtime="20201110 08:37:58.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:58.931" level="INFO">VALUE: [5.6528000000000134e-05, 5.65549999999998e-05, 5.6764000000000814e-05, 5.6736000000001674e-05, 5.643100000000262e-05, 5.6457999999995345e-05, 5.6971999999995415e-05, 5.6722000000002104e-05, 5.662499999999765e-05, 5.7014000000001064e-05, 5.645900000000176e-05, 5.63749999999974e-05, 5.6264000000000314e-05, 5.656899999999937e-05, 5.652700000000066e-05, 5.677700000000091e-05, 5.6750000000001244e-05, 5.633299999999869e-05, 5.640300000000348e-05, 5.718100000000337e-05, 5.7083999999998913e-05, 5.691699999999661e-05, 5.722300000000208e-05, 5.718099999999643e-05, 5.663899999999722e-05, 5.720900000000251e-05, 5.7235999999995235e-05, 5.718100000000337e-05, 5.641700000000305e-05, 5.681899999999962e-05, 5.709699999999901e-05, 5.662499999999765e-05, 5.7236000000002174e-05, 5.6514000000000564e-05, 5.712499999999815e-05, 5.6457999999995345e-05, 5.706899999999987e-05, 5.632000000000553e-05, 5.6458000000002284e-05, 5.7236000000002174e-05, 5.686099999999833e-05, 5.6750000000001244e-05, 5.6736000000001674e-05, 5.697299999999489e-05, 5.684800000000517e-05, 5.6651999999997316e-05, 5.6778000000000384e-05, 5.6735999999994735e-05, 5.684699999999876e-05, 5.706899999999987e-05]</msg>
<status status="PASS" starttime="20201110 08:37:58.927" endtime="20201110 08:37:58.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.913" endtime="20201110 08:37:58.935"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:58.943" endtime="20201110 08:37:58.946"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:58.953" endtime="20201110 08:37:58.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.948" endtime="20201110 08:37:58.977"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.937" endtime="20201110 08:37:58.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.417" endtime="20201110 08:37:58.980"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.416" endtime="20201110 08:37:58.980"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.003" endtime="20201110 08:37:59.024"></status>
</kw>
<msg timestamp="20201110 08:37:59.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.000" endtime="20201110 08:37:59.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.028" endtime="20201110 08:37:59.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.034" endtime="20201110 08:37:59.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.992" endtime="20201110 08:37:59.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.987" endtime="20201110 08:37:59.041"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.058" endtime="20201110 08:37:59.400"></status>
</kw>
<msg timestamp="20201110 08:37:59.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043215444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.055" endtime="20201110 08:37:59.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043215444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.409" endtime="20201110 08:37:59.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.428" endtime="20201110 08:37:59.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.047" endtime="20201110 08:37:59.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.043" endtime="20201110 08:37:59.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:37:59.450" level="INFO">${RESULT} = [{'time': 0.043273236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7792000000000954e-05, 'source_diff': 5.7792000000000954e-05}, {'time': 0.04334525, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:37:59.441" endtime="20201110 08:37:59.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:37:59.480" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:37:59.452" endtime="20201110 08:37:59.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.491" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201110 08:37:59.489" endtime="20201110 08:37:59.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.497" level="INFO">VALUE: [5.7792000000000954e-05, 5.7722000000003104e-05, 5.819500000000394e-05, 5.815299999999829e-05, 5.78749999999989e-05, 5.8056000000000774e-05, 5.763899999999822e-05, 5.8000000000002494e-05, 5.76670000000043e-05, 5.740299999999754e-05, 5.761099999999908e-05, 5.7528000000001134e-05, 5.733299999999969e-05, 5.808300000000044e-05, 5.741700000000405e-05, 5.781900000000062e-05, 5.7528000000001134e-05, 5.790300000000498e-05, 5.7278000000000884e-05, 5.813899999999872e-05, 5.811099999999958e-05, 5.813899999999872e-05, 5.768099999999693e-05, 5.762499999999865e-05, 5.780500000000105e-05, 5.7638000000005685e-05, 5.777699999999497e-05, 5.7957999999996845e-05, 5.7971999999996415e-05, 5.783300000000019e-05, 5.808300000000044e-05, 5.7916000000005075e-05, 5.730500000000055e-05, 5.7514000000001564e-05, 5.8042000000001204e-05, 5.7778000000001384e-05, 5.7306000000000024e-05, 5.772300000000258e-05, 5.770900000000301e-05, 5.7306000000000024e-05, 5.7750000000002244e-05, 5.78749999999989e-05, 5.806900000000087e-05, 5.78749999999989e-05, 5.7387999999998496e-05, 5.759699999999951e-05, 5.7514000000001564e-05, 5.813899999999872e-05, 5.7472000000002854e-05, 5.784699999999976e-05]</msg>
<status status="PASS" starttime="20201110 08:37:59.494" endtime="20201110 08:37:59.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.482" endtime="20201110 08:37:59.500"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.507" endtime="20201110 08:37:59.510"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:37:59.516" endtime="20201110 08:37:59.537"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.511" endtime="20201110 08:37:59.539"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.502" endtime="20201110 08:37:59.540"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.982" endtime="20201110 08:37:59.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:58.981" endtime="20201110 08:37:59.542"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.565" endtime="20201110 08:37:59.585"></status>
</kw>
<msg timestamp="20201110 08:37:59.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.561" endtime="20201110 08:37:59.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:37:59.588" endtime="20201110 08:37:59.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.595" endtime="20201110 08:37:59.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.554" endtime="20201110 08:37:59.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.548" endtime="20201110 08:37:59.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.618" endtime="20201110 08:37:59.957"></status>
</kw>
<msg timestamp="20201110 08:37:59.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042581694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042640556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.615" endtime="20201110 08:37:59.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:37:59.983" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042581694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042640556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:37:59.966" endtime="20201110 08:37:59.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:37:59.986" endtime="20201110 08:37:59.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.608" endtime="20201110 08:37:59.993"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.603" endtime="20201110 08:37:59.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.005" level="INFO">${RESULT} = [{'time': 0.042640556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.88619999999998e-05, 'source_diff': 5.88619999999998e-05}, {'time': 0.042713569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:37:59.996" endtime="20201110 08:38:00.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.036" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:00.007" endtime="20201110 08:38:00.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.047" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.045" endtime="20201110 08:38:00.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.053" level="INFO">VALUE: [5.88619999999998e-05, 5.852700000000266e-05, 5.8915999999999136e-05, 5.859700000000051e-05, 5.908300000000144e-05, 5.863899999999922e-05, 5.85550000000018e-05, 5.8972000000004354e-05, 5.838899999999897e-05, 5.8277999999994945e-05, 5.9221999999997665e-05, 5.9194999999998e-05, 5.8499999999996055e-05, 5.9028000000002634e-05, 5.8347999999999733e-05, 5.862499999999965e-05, 5.8915999999999136e-05, 5.8222000000003604e-05, 5.8665999999998886e-05, 5.830500000000155e-05, 5.9193999999998526e-05, 5.9180000000005895e-05, 5.8458000000004284e-05, 5.912500000000015e-05, 5.91670000000058e-05, 5.83749999999994e-05, 5.912500000000015e-05, 5.9263999999996375e-05, 5.918099999999843e-05, 5.8986000000003924e-05, 5.894500000000469e-05, 5.897299999999689e-05, 5.840299999999854e-05, 5.9041999999995265e-05, 5.840299999999854e-05, 5.8722000000004104e-05, 5.9207999999998095e-05, 5.8957999999997845e-05, 5.906900000000187e-05, 5.863899999999922e-05, 5.8791999999995015e-05, 5.8958000000004784e-05, 5.8306000000001024e-05, 5.838899999999897e-05, 5.8263999999995375e-05, 5.847299999999639e-05, 5.863899999999922e-05, 5.847299999999639e-05, 5.9055999999994835e-05, 5.8848000000000233e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.050" endtime="20201110 08:38:00.054"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.038" endtime="20201110 08:38:00.056"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.062" endtime="20201110 08:38:00.065"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.071" endtime="20201110 08:38:00.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.066" endtime="20201110 08:38:00.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.058" endtime="20201110 08:38:00.096"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.544" endtime="20201110 08:38:00.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:59.542" endtime="20201110 08:38:00.097"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.120" endtime="20201110 08:38:00.140"></status>
</kw>
<msg timestamp="20201110 08:38:00.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.117" endtime="20201110 08:38:00.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.144" endtime="20201110 08:38:00.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.150" endtime="20201110 08:38:00.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.109" endtime="20201110 08:38:00.156"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.103" endtime="20201110 08:38:00.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.174" endtime="20201110 08:38:00.513"></status>
</kw>
<msg timestamp="20201110 08:38:00.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:00.171" endtime="20201110 08:38:00.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0423625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042422597, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:00.523" endtime="20201110 08:38:00.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.542" endtime="20201110 08:38:00.547"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.163" endtime="20201110 08:38:00.549"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.159" endtime="20201110 08:38:00.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:00.561" level="INFO">${RESULT} = [{'time': 0.042422597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.009700000000201e-05, 'source_diff': 6.009700000000201e-05}, {'time': 0.042496597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:00.552" endtime="20201110 08:38:00.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:00.592" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:00.564" endtime="20201110 08:38:00.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.603" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:00.601" endtime="20201110 08:38:00.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.609" level="INFO">VALUE: [6.009700000000201e-05, 5.931899999999518e-05, 5.9763999999996875e-05, 5.9778000000003384e-05, 5.941699999999911e-05, 6.0041999999996265e-05, 6.005499999999636e-05, 6.0056000000002774e-05, 5.9957999999998846e-05, 6.0042000000003204e-05, 5.9556000000002274e-05, 5.9348000000000734e-05, 5.9527999999996195e-05, 5.9999999999997555e-05, 5.9693999999999026e-05, 5.986100000000133e-05, 6.0179999999999956e-05, 5.965299999999979e-05, 6.0221999999998665e-05, 6.008300000000244e-05, 6.0179999999999956e-05, 5.986099999999439e-05, 6.016699999999986e-05, 5.966699999999936e-05, 5.9527999999996195e-05, 6.0084000000001914e-05, 5.9320000000001594e-05, 5.963900000000022e-05, 5.9556000000002274e-05, 5.97629999999974e-05, 5.9528000000003134e-05, 5.956900000000237e-05, 5.981899999999568e-05, 5.962500000000065e-05, 5.9443999999998776e-05, 5.984700000000176e-05, 5.9457999999998346e-05, 6.0250000000004744e-05, 6.00550000000033e-05, 5.991699999999961e-05, 5.9221999999997665e-05, 6.015300000000029e-05, 5.961100000000108e-05, 5.9541999999995765e-05, 6.018099999999943e-05, 6.018099999999943e-05, 5.994499999999875e-05, 5.9499999999997055e-05, 6.0235999999998235e-05, 6.0193999999999526e-05]</msg>
<status status="PASS" starttime="20201110 08:38:00.606" endtime="20201110 08:38:00.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.594" endtime="20201110 08:38:00.612"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.619" endtime="20201110 08:38:00.621"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:00.627" endtime="20201110 08:38:00.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.623" endtime="20201110 08:38:00.650"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.614" endtime="20201110 08:38:00.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.099" endtime="20201110 08:38:00.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.098" endtime="20201110 08:38:00.653"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.676" endtime="20201110 08:38:00.697"></status>
</kw>
<msg timestamp="20201110 08:38:00.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.673" endtime="20201110 08:38:00.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:00.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:00.701" endtime="20201110 08:38:00.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.707" endtime="20201110 08:38:00.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.666" endtime="20201110 08:38:00.712"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.660" endtime="20201110 08:38:00.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:00.731" endtime="20201110 08:38:01.071"></status>
</kw>
<msg timestamp="20201110 08:38:01.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042554194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042614472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:00.727" endtime="20201110 08:38:01.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042554194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042614472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.080" endtime="20201110 08:38:01.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.099" endtime="20201110 08:38:01.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.720" endtime="20201110 08:38:01.106"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.715" endtime="20201110 08:38:01.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.118" level="INFO">${RESULT} = [{'time': 0.042614472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.0278000000003884e-05, 'source_diff': 6.0278000000003884e-05}, {'time': 0.042684486, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:01.109" endtime="20201110 08:38:01.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.148" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:01.121" endtime="20201110 08:38:01.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.159" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.157" endtime="20201110 08:38:01.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.165" level="INFO">VALUE: [6.0278000000003884e-05, 6.118000000000096e-05, 6.0291999999996515e-05, 6.0680000000000456e-05, 6.113900000000172e-05, 6.1000000000005494e-05, 6.0805999999996585e-05, 6.0528000000004134e-05, 6.0985999999998985e-05, 6.090300000000104e-05, 6.070899999999907e-05, 6.030499999999661e-05, 6.059700000000251e-05, 6.1013999999998125e-05, 6.111100000000258e-05, 6.0999999999998555e-05, 6.034700000000226e-05, 6.083300000000319e-05, 6.0985999999998985e-05, 6.084699999999582e-05, 6.062500000000165e-05, 6.119400000000053e-05, 6.0555999999996335e-05, 6.0305999999996085e-05, 6.118100000000043e-05, 6.118100000000043e-05, 6.102699999999822e-05, 6.0764000000004814e-05, 6.0555999999996335e-05, 6.123599999999924e-05, 6.0416000000000636e-05, 6.0985999999998985e-05, 6.0944000000000276e-05, 6.040300000000054e-05, 6.0513999999997625e-05, 6.062500000000165e-05, 6.083300000000319e-05, 6.070899999999907e-05, 6.0320000000002594e-05, 6.086100000000233e-05, 6.113900000000172e-05, 6.0735999999998735e-05, 6.105600000000377e-05, 6.084700000000276e-05, 6.0957999999999846e-05, 6.119400000000053e-05, 6.0527999999997195e-05, 6.0513999999997625e-05, 6.086100000000233e-05, 6.119400000000053e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.162" endtime="20201110 08:38:01.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.150" endtime="20201110 08:38:01.168"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.175" endtime="20201110 08:38:01.177"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.183" endtime="20201110 08:38:01.204"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.179" endtime="20201110 08:38:01.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.170" endtime="20201110 08:38:01.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.655" endtime="20201110 08:38:01.208"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:00.654" endtime="20201110 08:38:01.209"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.232" endtime="20201110 08:38:01.253"></status>
</kw>
<msg timestamp="20201110 08:38:01.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.228" endtime="20201110 08:38:01.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.256" endtime="20201110 08:38:01.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.262" endtime="20201110 08:38:01.266"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.221" endtime="20201110 08:38:01.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.215" endtime="20201110 08:38:01.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.286" endtime="20201110 08:38:01.620"></status>
</kw>
<msg timestamp="20201110 08:38:01.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042154069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.283" endtime="20201110 08:38:01.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042154069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042216167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.630" endtime="20201110 08:38:01.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.648" endtime="20201110 08:38:01.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.275" endtime="20201110 08:38:01.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.271" endtime="20201110 08:38:01.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:01.669" level="INFO">${RESULT} = [{'time': 0.042216167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.209799999999654e-05, 'source_diff': 6.209799999999654e-05}, {'time': 0.042290167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:01.660" endtime="20201110 08:38:01.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:01.699" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:01.672" endtime="20201110 08:38:01.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.710" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:01.708" endtime="20201110 08:38:01.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.716" level="INFO">VALUE: [6.209799999999654e-05, 6.163899999999528e-05, 6.20699999999974e-05, 6.165300000000179e-05, 6.17499999999993e-05, 6.138900000000197e-05, 6.149999999999906e-05, 6.22080000000011e-05, 6.201399999999913e-05, 6.159800000000298e-05, 6.199999999999956e-05, 6.197200000000042e-05, 6.188900000000247e-05, 6.126399999999838e-05, 6.198599999999999e-05, 6.20000000000065e-05, 6.133400000000316e-05, 6.14029999999946e-05, 6.183399999999672e-05, 6.20699999999974e-05, 6.155499999999786e-05, 6.195800000000085e-05, 6.152699999999872e-05, 6.195800000000085e-05, 6.162500000000265e-05, 6.209699999999707e-05, 6.223600000000024e-05, 6.192999999999477e-05, 6.173599999999974e-05, 6.140300000000154e-05, 6.173599999999974e-05, 6.129199999999752e-05, 6.195900000000032e-05, 6.149999999999906e-05, 6.133399999999622e-05, 6.15279999999982e-05, 6.223600000000024e-05, 6.131899999999718e-05, 6.154199999999777e-05, 6.211100000000358e-05, 6.209700000000401e-05, 6.177799999999845e-05, 6.220799999999416e-05, 6.15279999999982e-05, 6.213900000000272e-05, 6.13750000000024e-05, 6.194500000000075e-05, 6.140300000000154e-05, 6.181999999999716e-05, 6.186099999999639e-05]</msg>
<status status="PASS" starttime="20201110 08:38:01.713" endtime="20201110 08:38:01.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.701" endtime="20201110 08:38:01.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.726" endtime="20201110 08:38:01.729"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:01.734" endtime="20201110 08:38:01.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.730" endtime="20201110 08:38:01.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.721" endtime="20201110 08:38:01.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.211" endtime="20201110 08:38:01.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.210" endtime="20201110 08:38:01.760"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.783" endtime="20201110 08:38:01.804"></status>
</kw>
<msg timestamp="20201110 08:38:01.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.780" endtime="20201110 08:38:01.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:01.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:01.807" endtime="20201110 08:38:01.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.813" endtime="20201110 08:38:01.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.773" endtime="20201110 08:38:01.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.767" endtime="20201110 08:38:01.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:01.837" endtime="20201110 08:38:02.182"></status>
</kw>
<msg timestamp="20201110 08:38:02.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042043944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:01.834" endtime="20201110 08:38:02.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042043944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042106583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.192" endtime="20201110 08:38:02.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.211" endtime="20201110 08:38:02.216"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.827" endtime="20201110 08:38:02.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.822" endtime="20201110 08:38:02.219"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.230" level="INFO">${RESULT} = [{'time': 0.042106583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.263900000000322e-05, 'source_diff': 6.263900000000322e-05}, {'time': 0.042182583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.221" endtime="20201110 08:38:02.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.260" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:02.232" endtime="20201110 08:38:02.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.271" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.269" endtime="20201110 08:38:02.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.276" level="INFO">VALUE: [6.263900000000322e-05, 6.298600000000099e-05, 6.231899999999818e-05, 6.244500000000125e-05, 6.307000000000534e-05, 6.241699999999517e-05, 6.250000000000006e-05, 6.223600000000024e-05, 6.237499999999646e-05, 6.250000000000006e-05, 6.286100000000433e-05, 6.323600000000124e-05, 6.298600000000099e-05, 6.307000000000534e-05, 6.30829999999985e-05, 6.315199999999688e-05, 6.262499999999671e-05, 6.32500000000008e-05, 6.273600000000074e-05, 6.251400000000656e-05, 6.266699999999542e-05, 6.250000000000006e-05, 6.323600000000124e-05, 6.305599999999884e-05, 6.318100000000243e-05, 6.286099999999739e-05, 6.287499999999696e-05, 6.300000000000056e-05, 6.297199999999448e-05, 6.319399999999559e-05, 6.236099999999689e-05, 6.283299999999825e-05, 6.284699999999782e-05, 6.295800000000185e-05, 6.297200000000142e-05, 6.306899999999893e-05, 6.286100000000433e-05, 6.27500000000003e-05, 6.265300000000279e-05, 6.229199999999852e-05, 6.284800000000423e-05, 6.295900000000132e-05, 6.273700000000021e-05, 6.3195000000002e-05, 6.262500000000365e-05, 6.312500000000415e-05, 6.288900000000347e-05, 6.306899999999893e-05, 6.263900000000322e-05, 6.231899999999818e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.273" endtime="20201110 08:38:02.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.262" endtime="20201110 08:38:02.280"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.286" endtime="20201110 08:38:02.287"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.290" endtime="20201110 08:38:02.309"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.288" endtime="20201110 08:38:02.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.281" endtime="20201110 08:38:02.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.762" endtime="20201110 08:38:02.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:01.761" endtime="20201110 08:38:02.311"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.322" endtime="20201110 08:38:02.341"></status>
</kw>
<msg timestamp="20201110 08:38:02.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.320" endtime="20201110 08:38:02.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.342" endtime="20201110 08:38:02.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.345" endtime="20201110 08:38:02.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.317" endtime="20201110 08:38:02.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.314" endtime="20201110 08:38:02.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.357" endtime="20201110 08:38:02.692"></status>
</kw>
<msg timestamp="20201110 08:38:02.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.355" endtime="20201110 08:38:02.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025167069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025231236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.701" endtime="20201110 08:38:02.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.720" endtime="20201110 08:38:02.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.352" endtime="20201110 08:38:02.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.349" endtime="20201110 08:38:02.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:02.739" level="INFO">${RESULT} = [{'time': 0.025231236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.416700000000039e-05, 'source_diff': 6.416700000000039e-05}, {'time': 0.025307264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:02.730" endtime="20201110 08:38:02.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:02.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:02.741" endtime="20201110 08:38:02.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.780" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:02.778" endtime="20201110 08:38:02.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.786" level="INFO">VALUE: [6.416700000000039e-05, 6.40699999999994e-05, 6.416700000000039e-05, 6.398599999999852e-05, 6.362500000000118e-05, 6.332000000000212e-05, 6.340300000000007e-05, 6.340300000000007e-05, 6.3582999999999e-05, 6.334699999999832e-05, 6.39439999999998e-05, 6.363900000000075e-05, 6.350000000000106e-05, 6.39439999999998e-05, 6.395800000000285e-05, 6.384699999999882e-05, 6.330599999999909e-05, 6.362500000000118e-05, 6.400000000000156e-05, 6.379200000000002e-05, 6.350000000000106e-05, 6.368099999999946e-05, 6.330599999999909e-05, 6.373700000000121e-05, 6.395799999999938e-05, 6.398600000000199e-05, 6.352700000000072e-05, 6.37080000000026e-05, 6.395799999999938e-05, 6.330499999999961e-05, 6.340300000000007e-05, 6.407000000000287e-05, 6.384699999999882e-05, 6.373599999999827e-05, 6.419499999999953e-05, 6.323599999999777e-05, 6.351399999999716e-05, 6.412500000000168e-05, 6.387500000000143e-05, 6.348700000000096e-05, 6.400000000000156e-05, 6.327700000000047e-05, 6.405500000000036e-05, 6.37500000000013e-05, 6.418000000000049e-05, 6.376400000000088e-05, 6.362500000000118e-05, 6.380600000000305e-05, 6.398600000000199e-05, 6.348600000000149e-05]</msg>
<status status="PASS" starttime="20201110 08:38:02.783" endtime="20201110 08:38:02.787"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.771" endtime="20201110 08:38:02.789"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.795" endtime="20201110 08:38:02.798"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:02.804" endtime="20201110 08:38:02.825"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.799" endtime="20201110 08:38:02.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.791" endtime="20201110 08:38:02.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.312" endtime="20201110 08:38:02.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.311" endtime="20201110 08:38:02.829"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.852" endtime="20201110 08:38:02.874"></status>
</kw>
<msg timestamp="20201110 08:38:02.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.849" endtime="20201110 08:38:02.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:02.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:02.877" endtime="20201110 08:38:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.883" endtime="20201110 08:38:02.887"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.842" endtime="20201110 08:38:02.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.836" endtime="20201110 08:38:02.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:02.907" endtime="20201110 08:38:03.241"></status>
</kw>
<msg timestamp="20201110 08:38:03.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042132708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042197444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:02.903" endtime="20201110 08:38:03.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042132708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042197444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.251" endtime="20201110 08:38:03.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.270" endtime="20201110 08:38:03.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.896" endtime="20201110 08:38:03.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.892" endtime="20201110 08:38:03.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.289" level="INFO">${RESULT} = [{'time': 0.042197444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.473600000000274e-05, 'source_diff': 6.473600000000274e-05}, {'time': 0.042277472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.280" endtime="20201110 08:38:03.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.319" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:03.291" endtime="20201110 08:38:03.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.330" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.328" endtime="20201110 08:38:03.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.335" level="INFO">VALUE: [6.473600000000274e-05, 6.515300000000529e-05, 6.50830000000005e-05, 6.438899999999803e-05, 6.448600000000249e-05, 6.50830000000005e-05, 6.451400000000163e-05, 6.499999999999562e-05, 6.511099999999964e-05, 6.445799999999641e-05, 6.450000000000206e-05, 6.466699999999742e-05, 6.484699999999982e-05, 6.5195000000004e-05, 6.498600000000299e-05, 6.515199999999888e-05, 6.497200000000342e-05, 6.468000000000446e-05, 6.462499999999871e-05, 6.512499999999921e-05, 6.512499999999921e-05, 6.486099999999939e-05, 6.483300000000025e-05, 6.487499999999896e-05, 6.45280000000012e-05, 6.512499999999921e-05, 6.444500000000325e-05, 6.497300000000289e-05, 6.518099999999749e-05, 6.463899999999828e-05, 6.518100000000443e-05, 6.436099999999889e-05, 6.492999999999777e-05, 6.484699999999982e-05, 6.487499999999896e-05, 6.469499999999656e-05, 6.436099999999889e-05, 6.50830000000005e-05, 6.500000000000256e-05, 6.452799999999426e-05, 6.443099999999674e-05, 6.508399999999998e-05, 6.429200000000052e-05, 6.473600000000274e-05, 6.451400000000163e-05, 6.522300000000314e-05, 6.47359999999958e-05, 6.494399999999734e-05, 6.440199999999813e-05, 6.497200000000342e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.332" endtime="20201110 08:38:03.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.321" endtime="20201110 08:38:03.339"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.345" endtime="20201110 08:38:03.348"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.353" endtime="20201110 08:38:03.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.349" endtime="20201110 08:38:03.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.340" endtime="20201110 08:38:03.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.831" endtime="20201110 08:38:03.379"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:02.830" endtime="20201110 08:38:03.379"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.402" endtime="20201110 08:38:03.423"></status>
</kw>
<msg timestamp="20201110 08:38:03.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.399" endtime="20201110 08:38:03.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.427" endtime="20201110 08:38:03.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.433" endtime="20201110 08:38:03.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.392" endtime="20201110 08:38:03.439"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.386" endtime="20201110 08:38:03.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.458" endtime="20201110 08:38:03.792"></status>
</kw>
<msg timestamp="20201110 08:38:03.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042298833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.455" endtime="20201110 08:38:03.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042233528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042298833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:03.801" endtime="20201110 08:38:03.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.820" endtime="20201110 08:38:03.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.447" endtime="20201110 08:38:03.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.442" endtime="20201110 08:38:03.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:03.841" level="INFO">${RESULT} = [{'time': 0.042298833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.530500000000161e-05, 'source_diff': 6.530500000000161e-05}, {'time': 0.042377833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:03.832" endtime="20201110 08:38:03.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:03.871" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:03.843" endtime="20201110 08:38:03.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.882" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:03.880" endtime="20201110 08:38:03.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.888" level="INFO">VALUE: [6.530500000000161e-05, 6.57359999999968e-05, 6.548600000000349e-05, 6.600000000000356e-05, 6.576400000000288e-05, 6.583299999999431e-05, 6.529200000000152e-05, 6.598600000000399e-05, 6.54029999999986e-05, 6.572199999999723e-05, 6.544400000000478e-05, 6.597200000000442e-05, 6.580500000000211e-05, 6.605600000000184e-05, 6.540200000000607e-05, 6.526400000000238e-05, 6.5583000000001e-05, 6.597200000000442e-05, 6.533300000000075e-05, 6.541699999999817e-05, 6.616699999999892e-05, 6.547200000000392e-05, 6.587499999999996e-05, 6.616699999999892e-05, 6.529200000000152e-05, 6.608400000000098e-05, 6.563899999999928e-05, 6.601300000000365e-05, 6.604100000000279e-05, 6.555500000000186e-05, 6.549999999999612e-05, 6.57909999999956e-05, 6.60830000000015e-05, 6.533300000000075e-05, 6.547200000000392e-05, 6.598600000000399e-05, 6.598600000000399e-05, 6.54029999999986e-05, 6.576399999999594e-05, 6.584700000000082e-05, 6.591700000000561e-05, 6.562499999999971e-05, 6.580500000000211e-05, 6.586099999999345e-05, 6.549999999999612e-05, 6.555500000000186e-05, 6.584700000000082e-05, 6.598600000000399e-05, 6.616699999999892e-05, 6.538899999999903e-05]</msg>
<status status="PASS" starttime="20201110 08:38:03.884" endtime="20201110 08:38:03.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.873" endtime="20201110 08:38:03.891"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.897" endtime="20201110 08:38:03.900"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:03.905" endtime="20201110 08:38:03.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.901" endtime="20201110 08:38:03.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.892" endtime="20201110 08:38:03.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.381" endtime="20201110 08:38:03.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.380" endtime="20201110 08:38:03.932"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.957" endtime="20201110 08:38:03.979"></status>
</kw>
<msg timestamp="20201110 08:38:03.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.954" endtime="20201110 08:38:03.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:03.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:03.982" endtime="20201110 08:38:03.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:03.989" endtime="20201110 08:38:03.992"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.946" endtime="20201110 08:38:03.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.940" endtime="20201110 08:38:03.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.012" endtime="20201110 08:38:04.348"></status>
</kw>
<msg timestamp="20201110 08:38:04.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044918319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.009" endtime="20201110 08:38:04.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044851972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044918319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.357" endtime="20201110 08:38:04.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.376" endtime="20201110 08:38:04.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.001" endtime="20201110 08:38:04.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.997" endtime="20201110 08:38:04.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:04.397" level="INFO">${RESULT} = [{'time': 0.044918319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.634700000000132e-05, 'source_diff': 6.634700000000132e-05}, {'time': 0.044995333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.386" endtime="20201110 08:38:04.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:04.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:04.399" endtime="20201110 08:38:04.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.439" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201110 08:38:04.437" endtime="20201110 08:38:04.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.445" level="INFO">VALUE: [6.634700000000132e-05, 6.680499999999617e-05, 6.637500000000046e-05, 6.66109999999942e-05, 6.709700000000207e-05, 6.640300000000654e-05, 6.705600000000284e-05, 6.663900000000028e-05, 6.644499999999831e-05, 6.643099999999874e-05, 6.67229999999977e-05, 6.686200000000087e-05, 6.708399999999504e-05, 6.719399999999959e-05, 6.674999999999737e-05, 6.631900000000218e-05, 6.640200000000013e-05, 6.662500000000071e-05, 6.662500000000071e-05, 6.647200000000492e-05, 6.698599999999805e-05, 6.67359999999978e-05, 6.698599999999805e-05, 6.718099999999949e-05, 6.720900000000557e-05, 6.708400000000198e-05, 6.68480000000013e-05, 6.719499999999906e-05, 6.666599999999995e-05, 6.688800000000106e-05, 6.638900000000003e-05, 6.694399999999934e-05, 6.722200000000567e-05, 6.636099999999395e-05, 6.663900000000028e-05, 6.644399999999884e-05, 6.695799999999891e-05, 6.626400000000338e-05, 6.67500000000043e-05, 6.67359999999978e-05, 6.630600000000209e-05, 6.642999999999927e-05, 6.67359999999978e-05, 6.630499999999567e-05, 6.652699999999678e-05, 6.688900000000053e-05, 6.670799999999866e-05, 6.633400000000123e-05, 6.712499999999427e-05, 6.662500000000071e-05]</msg>
<status status="PASS" starttime="20201110 08:38:04.441" endtime="20201110 08:38:04.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.429" endtime="20201110 08:38:04.448"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.455" endtime="20201110 08:38:04.457"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:04.463" endtime="20201110 08:38:04.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.459" endtime="20201110 08:38:04.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.450" endtime="20201110 08:38:04.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.935" endtime="20201110 08:38:04.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:03.933" endtime="20201110 08:38:04.496"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.530" endtime="20201110 08:38:04.552"></status>
</kw>
<msg timestamp="20201110 08:38:04.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.526" endtime="20201110 08:38:04.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:04.556" endtime="20201110 08:38:04.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.568" endtime="20201110 08:38:04.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.515" endtime="20201110 08:38:04.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.505" endtime="20201110 08:38:04.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.594" endtime="20201110 08:38:04.958"></status>
</kw>
<msg timestamp="20201110 08:38:04.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060144833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060212681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.590" endtime="20201110 08:38:04.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:04.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.060144833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.060212681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:04.968" endtime="20201110 08:38:04.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:04.988" endtime="20201110 08:38:04.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.583" endtime="20201110 08:38:04.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.577" endtime="20201110 08:38:04.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.009" level="INFO">${RESULT} = [{'time': 0.060212681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.784799999999536e-05, 'source_diff': 6.784799999999536e-05}, {'time': 0.060289694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:04.999" endtime="20201110 08:38:05.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.041" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:05.011" endtime="20201110 08:38:05.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.052" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.050" endtime="20201110 08:38:05.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.059" level="INFO">VALUE: [6.784799999999536e-05, 6.763799999999487e-05, 6.747200000000592e-05, 6.740199999999419e-05, 6.818000000000102e-05, 6.781900000000368e-05, 6.795799999999991e-05, 6.752799999999726e-05, 6.804199999999733e-05, 6.82359999999993e-05, 6.762500000000171e-05, 6.804100000000479e-05, 6.75700000000029e-05, 6.731899999999624e-05, 6.819500000000006e-05, 6.749999999999812e-05, 6.743000000000027e-05, 6.774999999999837e-05, 6.806899999999699e-05, 6.783299999999631e-05, 6.724999999999787e-05, 6.741700000000017e-05, 6.748600000000549e-05, 6.740299999999366e-05, 6.782000000000316e-05, 6.741700000000017e-05, 6.80700000000034e-05, 6.76109999999952e-05, 6.749999999999812e-05, 6.756899999999649e-05, 6.819399999999365e-05, 6.772200000000617e-05, 6.774999999999143e-05, 6.808299999999656e-05, 6.790299999999416e-05, 6.820800000000016e-05, 6.818000000000102e-05, 6.73750000000084e-05, 6.80000000000125e-05, 6.80559999999969e-05, 6.77909999999976e-05, 6.768099999999999e-05, 6.740300000000754e-05, 6.720899999999863e-05, 6.820900000001351e-05, 6.805499999999742e-05, 6.77500000000053e-05, 6.751400000000463e-05, 6.766599999999401e-05, 6.744499999999931e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.055" endtime="20201110 08:38:05.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.043" endtime="20201110 08:38:05.062"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.069" endtime="20201110 08:38:05.072"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.078" endtime="20201110 08:38:05.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.073" endtime="20201110 08:38:05.102"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.064" endtime="20201110 08:38:05.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.499" endtime="20201110 08:38:05.104"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:04.497" endtime="20201110 08:38:05.105"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.129" endtime="20201110 08:38:05.151"></status>
</kw>
<msg timestamp="20201110 08:38:05.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.125" endtime="20201110 08:38:05.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.155" endtime="20201110 08:38:05.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.162" endtime="20201110 08:38:05.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.118" endtime="20201110 08:38:05.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.111" endtime="20201110 08:38:05.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.187" endtime="20201110 08:38:05.545"></status>
</kw>
<msg timestamp="20201110 08:38:05.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044653556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044721861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.183" endtime="20201110 08:38:05.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044653556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044721861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.554" endtime="20201110 08:38:05.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.573" endtime="20201110 08:38:05.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.176" endtime="20201110 08:38:05.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.171" endtime="20201110 08:38:05.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:05.592" level="INFO">${RESULT} = [{'time': 0.044721861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.830500000000461e-05, 'source_diff': 6.830500000000461e-05}, {'time': 0.044798861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:05.583" endtime="20201110 08:38:05.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:05.622" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:05.594" endtime="20201110 08:38:05.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.633" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201110 08:38:05.631" endtime="20201110 08:38:05.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.640" level="INFO">VALUE: [6.830500000000461e-05, 6.830500000000461e-05, 6.908299999999756e-05, 6.845800000000041e-05, 6.85700000000039e-05, 6.849999999999912e-05, 6.901399999999919e-05, 6.92360000000003e-05, 6.908400000000398e-05, 6.851399999999869e-05, 6.844400000000084e-05, 6.92360000000003e-05, 6.897200000000048e-05, 6.894400000000134e-05, 6.91109999999967e-05, 6.908299999999756e-05, 6.851399999999869e-05, 6.912500000000321e-05, 6.868100000000099e-05, 6.886099999999645e-05, 6.830600000000409e-05, 6.90559999999979e-05, 6.906999999999747e-05, 6.874999999999937e-05, 6.852700000000572e-05, 6.890200000000263e-05, 6.869400000000109e-05, 6.841599999999476e-05, 6.881900000000468e-05, 6.884700000000382e-05, 6.862499999999577e-05, 6.856999999999697e-05, 6.851399999999869e-05, 6.877799999999851e-05, 6.829199999999758e-05, 6.897299999999995e-05, 6.852799999999826e-05, 6.866700000000142e-05, 6.895900000000038e-05, 6.876399999999894e-05, 6.911100000000364e-05, 6.831900000000418e-05, 6.862499999999577e-05, 6.922200000000073e-05, 6.919400000000159e-05, 6.886099999999645e-05, 6.886100000000339e-05, 6.90830000000045e-05, 6.926399999999944e-05, 6.874999999999937e-05]</msg>
<status status="PASS" starttime="20201110 08:38:05.636" endtime="20201110 08:38:05.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.624" endtime="20201110 08:38:05.643"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.649" endtime="20201110 08:38:05.652"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:05.657" endtime="20201110 08:38:05.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.653" endtime="20201110 08:38:05.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.645" endtime="20201110 08:38:05.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.107" endtime="20201110 08:38:05.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.106" endtime="20201110 08:38:05.683"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.706" endtime="20201110 08:38:05.727"></status>
</kw>
<msg timestamp="20201110 08:38:05.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.703" endtime="20201110 08:38:05.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:05.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:05.730" endtime="20201110 08:38:05.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.736" endtime="20201110 08:38:05.740"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.696" endtime="20201110 08:38:05.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.690" endtime="20201110 08:38:05.743"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:05.760" endtime="20201110 08:38:06.095"></status>
</kw>
<msg timestamp="20201110 08:38:06.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041862278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041932292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:05.757" endtime="20201110 08:38:06.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041862278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041932292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.105" endtime="20201110 08:38:06.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.123" endtime="20201110 08:38:06.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.749" endtime="20201110 08:38:06.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.744" endtime="20201110 08:38:06.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.144" level="INFO">${RESULT} = [{'time': 0.041932292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.001400000000019e-05, 'source_diff': 7.001400000000019e-05}, {'time': 0.042011306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.136" endtime="20201110 08:38:06.145"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.174" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:06.146" endtime="20201110 08:38:06.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.185" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.183" endtime="20201110 08:38:06.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.191" level="INFO">VALUE: [7.001400000000019e-05, 7.006999999999847e-05, 6.988899999999659e-05, 7.019399999999565e-05, 6.941599999999576e-05, 6.992999999999583e-05, 6.942999999999533e-05, 6.927799999999901e-05, 6.994499999999487e-05, 6.954200000000577e-05, 6.997200000000148e-05, 7.006999999999847e-05, 7.019500000000206e-05, 6.97360000000008e-05, 6.952799999999926e-05, 7.012500000000421e-05, 7.012499999999727e-05, 6.97360000000008e-05, 6.930499999999867e-05, 6.940200000000313e-05, 7.004099999999985e-05, 6.959700000000457e-05, 7.01109999999977e-05, 6.977799999999951e-05, 7.006999999999847e-05, 6.941700000000217e-05, 6.945899999999394e-05, 6.941700000000217e-05, 7.018100000000249e-05, 7.011200000000412e-05, 7.001299999999377e-05, 6.94160000000027e-05, 7.002700000000028e-05, 6.950000000000012e-05, 6.955500000000586e-05, 6.986100000000439e-05, 6.941700000000217e-05, 6.961100000000414e-05, 6.929199999999858e-05, 6.970900000000113e-05, 6.951399999999969e-05, 7.006899999999899e-05, 6.990299999999616e-05, 6.959800000000405e-05, 6.995900000000138e-05, 6.952699999999978e-05, 6.933299999999781e-05, 6.941599999999576e-05, 6.984699999999788e-05, 6.970800000000166e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.188" endtime="20201110 08:38:06.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.176" endtime="20201110 08:38:06.194"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.200" endtime="20201110 08:38:06.203"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.209" endtime="20201110 08:38:06.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.204" endtime="20201110 08:38:06.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.196" endtime="20201110 08:38:06.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.686" endtime="20201110 08:38:06.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:05.684" endtime="20201110 08:38:06.234"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.258" endtime="20201110 08:38:06.279"></status>
</kw>
<msg timestamp="20201110 08:38:06.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.255" endtime="20201110 08:38:06.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.286" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.282" endtime="20201110 08:38:06.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.289" endtime="20201110 08:38:06.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.248" endtime="20201110 08:38:06.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.242" endtime="20201110 08:38:06.295"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.312" endtime="20201110 08:38:06.660"></status>
</kw>
<msg timestamp="20201110 08:38:06.667" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042946736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043017042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.309" endtime="20201110 08:38:06.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042946736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043017042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.670" endtime="20201110 08:38:06.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.688" endtime="20201110 08:38:06.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.301" endtime="20201110 08:38:06.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.297" endtime="20201110 08:38:06.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:06.708" level="INFO">${RESULT} = [{'time': 0.043017042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.030599999999915e-05, 'source_diff': 7.030599999999915e-05}, {'time': 0.043096056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:06.698" endtime="20201110 08:38:06.708"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:06.738" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:06.710" endtime="20201110 08:38:06.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.749" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201110 08:38:06.746" endtime="20201110 08:38:06.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.754" level="INFO">VALUE: [7.030599999999915e-05, 7.063899999999734e-05, 7.045799999999547e-05, 7.113899999999784e-05, 7.051300000000121e-05, 7.055499999999992e-05, 7.047200000000198e-05, 7.081999999999922e-05, 7.052800000000026e-05, 7.102800000000076e-05, 7.112499999999827e-05, 7.12360000000023e-05, 7.044499999999537e-05, 7.070900000000213e-05, 7.05979999999981e-05, 7.079200000000008e-05, 7.084799999999836e-05, 7.097200000000248e-05, 7.116600000000445e-05, 7.02910000000001e-05, 7.047200000000198e-05, 7.123599999999536e-05, 7.090299999999716e-05, 7.066700000000342e-05, 7.066700000000342e-05, 7.12230000000022e-05, 7.029199999999958e-05, 7.118099999999655e-05, 7.031999999999872e-05, 7.041599999999676e-05, 7.102800000000076e-05, 7.108299999999956e-05, 7.047200000000198e-05, 7.034700000000532e-05, 7.07910000000006e-05, 7.119400000000359e-05, 7.05689999999995e-05, 7.077800000000051e-05, 7.1069e-05, 7.063899999999734e-05, 7.075000000000137e-05, 7.054199999999983e-05, 7.098600000000205e-05, 7.056999999999897e-05, 7.075000000000137e-05, 7.076400000000094e-05, 7.049999999999418e-05, 7.091699999999673e-05, 7.027800000000001e-05, 7.100000000000162e-05]</msg>
<status status="PASS" starttime="20201110 08:38:06.751" endtime="20201110 08:38:06.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.739" endtime="20201110 08:38:06.764"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.770" endtime="20201110 08:38:06.773"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:06.779" endtime="20201110 08:38:06.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.774" endtime="20201110 08:38:06.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.766" endtime="20201110 08:38:06.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.238" endtime="20201110 08:38:06.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.236" endtime="20201110 08:38:06.805"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.828" endtime="20201110 08:38:06.849"></status>
</kw>
<msg timestamp="20201110 08:38:06.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.824" endtime="20201110 08:38:06.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:06.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:06.853" endtime="20201110 08:38:06.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.859" endtime="20201110 08:38:06.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.817" endtime="20201110 08:38:06.864"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.811" endtime="20201110 08:38:06.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:06.882" endtime="20201110 08:38:07.233"></status>
</kw>
<msg timestamp="20201110 08:38:07.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042357208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042429125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:06.879" endtime="20201110 08:38:07.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042357208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042429125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.243" endtime="20201110 08:38:07.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.262" endtime="20201110 08:38:07.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.872" endtime="20201110 08:38:07.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.867" endtime="20201110 08:38:07.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.281" level="INFO">${RESULT} = [{'time': 0.042429125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.191699999999773e-05, 'source_diff': 7.191699999999773e-05}, {'time': 0.042510083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.272" endtime="20201110 08:38:07.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.312" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:07.283" endtime="20201110 08:38:07.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.323" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.320" endtime="20201110 08:38:07.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.328" level="INFO">VALUE: [7.191699999999773e-05, 7.186099999999945e-05, 7.12910000000011e-05, 7.223599999999636e-05, 7.197199999999654e-05, 7.151399999999475e-05, 7.166699999999748e-05, 7.15560000000004e-05, 7.151400000000169e-05, 7.15560000000004e-05, 7.168100000000399e-05, 7.218099999999755e-05, 7.163899999999834e-05, 7.211199999999918e-05, 7.172199999999629e-05, 7.162499999999877e-05, 7.227800000000201e-05, 7.17360000000028e-05, 7.208300000000056e-05, 7.166600000000495e-05, 7.194400000000434e-05, 7.195799999999697e-05, 7.190299999999816e-05, 7.205599999999396e-05, 7.156999999999997e-05, 7.165300000000485e-05, 7.140299999999766e-05, 7.126300000000196e-05, 7.186199999999893e-05, 7.195800000000391e-05, 7.195799999999697e-05, 7.195800000000391e-05, 7.215299999999841e-05, 7.165299999999791e-05, 7.188899999999859e-05, 7.181900000000074e-05, 7.162499999999877e-05, 7.133399999999929e-05, 7.141699999999723e-05, 7.215299999999841e-05, 7.19309999999973e-05, 7.147199999999604e-05, 7.144500000000331e-05, 7.183300000000031e-05, 7.12910000000011e-05, 7.219400000000459e-05, 7.187499999999902e-05, 7.152800000000126e-05, 7.220799999999722e-05, 7.141699999999723e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.325" endtime="20201110 08:38:07.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.313" endtime="20201110 08:38:07.331"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.338" endtime="20201110 08:38:07.341"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.346" endtime="20201110 08:38:07.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.342" endtime="20201110 08:38:07.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.333" endtime="20201110 08:38:07.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.807" endtime="20201110 08:38:07.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:06.806" endtime="20201110 08:38:07.373"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.396" endtime="20201110 08:38:07.416"></status>
</kw>
<msg timestamp="20201110 08:38:07.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.392" endtime="20201110 08:38:07.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.420" endtime="20201110 08:38:07.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.426" endtime="20201110 08:38:07.430"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.385" endtime="20201110 08:38:07.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.379" endtime="20201110 08:38:07.433"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.450" endtime="20201110 08:38:07.798"></status>
</kw>
<msg timestamp="20201110 08:38:07.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042456292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042528986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.446" endtime="20201110 08:38:07.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042456292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042528986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.808" endtime="20201110 08:38:07.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.827" endtime="20201110 08:38:07.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.439" endtime="20201110 08:38:07.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.434" endtime="20201110 08:38:07.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:07.847" level="INFO">${RESULT} = [{'time': 0.042528986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.269399999999815e-05, 'source_diff': 7.269399999999815e-05}, {'time': 0.042612986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:07.838" endtime="20201110 08:38:07.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:07.862" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:07.849" endtime="20201110 08:38:07.863"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.868" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201110 08:38:07.867" endtime="20201110 08:38:07.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.871" level="INFO">VALUE: [7.269399999999815e-05, 7.222199999999679e-05, 7.241700000000517e-05, 7.226400000000244e-05, 7.288899999999959e-05, 7.283399999999385e-05, 7.298699999999658e-05, 7.262499999999977e-05, 7.291599999999926e-05, 7.233300000000081e-05, 7.231900000000124e-05, 7.295800000000491e-05, 7.281900000000174e-05, 7.243100000000474e-05, 7.266699999999848e-05, 7.252800000000226e-05, 7.266699999999848e-05, 7.307000000000147e-05, 7.229200000000158e-05, 7.227800000000201e-05, 7.232000000000072e-05, 7.295900000000438e-05, 7.313899999999984e-05, 7.293100000000524e-05, 7.27360000000038e-05, 7.262499999999977e-05, 7.234700000000038e-05, 7.262499999999977e-05, 7.25690000000015e-05, 7.295800000000491e-05, 7.251400000000269e-05, 7.301399999999625e-05, 7.322199999999779e-05, 7.315299999999941e-05, 7.307000000000147e-05, 7.283400000000079e-05, 7.31110000000007e-05, 7.297199999999754e-05, 7.240199999999919e-05, 7.248599999999661e-05, 7.308299999999462e-05, 7.251400000000269e-05, 7.24439999999979e-05, 7.252800000000226e-05, 7.283300000000131e-05, 7.301399999999625e-05, 7.297299999999701e-05, 7.229200000000158e-05, 7.294500000000481e-05, 7.308400000000104e-05]</msg>
<status status="PASS" starttime="20201110 08:38:07.869" endtime="20201110 08:38:07.871"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.863" endtime="20201110 08:38:07.872"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.875" endtime="20201110 08:38:07.876"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:07.879" endtime="20201110 08:38:07.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.877" endtime="20201110 08:38:07.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.873" endtime="20201110 08:38:07.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.375" endtime="20201110 08:38:07.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.373" endtime="20201110 08:38:07.900"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.911" endtime="20201110 08:38:07.929"></status>
</kw>
<msg timestamp="20201110 08:38:07.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.910" endtime="20201110 08:38:07.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:07.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:07.931" endtime="20201110 08:38:07.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.934" endtime="20201110 08:38:07.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.906" endtime="20201110 08:38:07.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.903" endtime="20201110 08:38:07.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:07.945" endtime="20201110 08:38:08.270"></status>
</kw>
<msg timestamp="20201110 08:38:08.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024635375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:07.944" endtime="20201110 08:38:08.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024561514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024635375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.280" endtime="20201110 08:38:08.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.298" endtime="20201110 08:38:08.306"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.940" endtime="20201110 08:38:08.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.938" endtime="20201110 08:38:08.309"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.320" level="INFO">${RESULT} = [{'time': 0.024635375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.386100000000145e-05, 'source_diff': 7.386100000000145e-05}, {'time': 0.024718375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.311" endtime="20201110 08:38:08.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.350" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:08.322" endtime="20201110 08:38:08.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.361" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.359" endtime="20201110 08:38:08.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.366" level="INFO">VALUE: [7.386100000000145e-05, 7.37500000000009e-05, 7.340299999999966e-05, 7.338900000000009e-05, 7.357000000000197e-05, 7.326399999999997e-05, 7.420899999999869e-05, 7.373600000000133e-05, 7.419500000000259e-05, 7.331899999999877e-05, 7.36110000000012e-05, 7.34439999999989e-05, 7.377800000000004e-05, 7.341699999999923e-05, 7.350000000000065e-05, 7.341699999999923e-05, 7.404199999999986e-05, 7.341699999999923e-05, 7.416699999999998e-05, 7.376400000000047e-05, 7.408400000000204e-05, 7.37500000000009e-05, 7.383399999999832e-05, 7.334699999999791e-05, 7.341599999999976e-05, 7.383299999999884e-05, 7.40829999999991e-05, 7.320799999999822e-05, 7.384699999999841e-05, 7.329199999999911e-05, 7.397199999999854e-05, 7.372200000000176e-05, 7.407000000000247e-05, 7.402800000000029e-05, 7.404199999999986e-05, 7.407000000000247e-05, 7.386100000000145e-05, 7.354199999999936e-05, 7.402800000000029e-05, 7.401400000000072e-05, 7.388899999999712e-05, 7.372200000000176e-05, 7.405499999999995e-05, 7.373600000000133e-05, 7.363900000000034e-05, 7.390300000000016e-05, 7.36110000000012e-05, 7.341699999999923e-05, 7.338900000000009e-05, 7.388900000000059e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.363" endtime="20201110 08:38:08.368"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.352" endtime="20201110 08:38:08.370"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.376" endtime="20201110 08:38:08.379"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.385" endtime="20201110 08:38:08.406"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.380" endtime="20201110 08:38:08.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.371" endtime="20201110 08:38:08.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.901" endtime="20201110 08:38:08.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:07.901" endtime="20201110 08:38:08.411"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.434" endtime="20201110 08:38:08.456"></status>
</kw>
<msg timestamp="20201110 08:38:08.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.430" endtime="20201110 08:38:08.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.459" endtime="20201110 08:38:08.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.465" endtime="20201110 08:38:08.469"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.423" endtime="20201110 08:38:08.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.417" endtime="20201110 08:38:08.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.489" endtime="20201110 08:38:08.825"></status>
</kw>
<msg timestamp="20201110 08:38:08.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042511083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042585375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.485" endtime="20201110 08:38:08.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042511083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042585375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:08.835" endtime="20201110 08:38:08.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.854" endtime="20201110 08:38:08.859"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.478" endtime="20201110 08:38:08.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.473" endtime="20201110 08:38:08.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:08.873" level="INFO">${RESULT} = [{'time': 0.042585375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.429200000000358e-05, 'source_diff': 7.429200000000358e-05}, {'time': 0.042674431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:08.864" endtime="20201110 08:38:08.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:08.903" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:08.875" endtime="20201110 08:38:08.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.914" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201110 08:38:08.912" endtime="20201110 08:38:08.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:08.920" level="INFO">VALUE: [7.429200000000358e-05, 7.456999999999603e-05, 7.477800000000451e-05, 7.463900000000134e-05, 7.490299999999422e-05, 7.482000000000322e-05, 7.445899999999894e-05, 7.48189999999968e-05, 7.473599999999886e-05, 7.474999999999843e-05, 7.497199999999954e-05, 7.427799999999707e-05, 7.518000000000108e-05, 7.505599999999696e-05, 7.519500000000012e-05, 7.449999999999818e-05, 7.502799999999782e-05, 7.484699999999594e-05, 7.495899999999944e-05, 7.508299999999662e-05, 7.454100000000435e-05, 7.455500000000392e-05, 7.473599999999886e-05, 7.495799999999997e-05, 7.438900000000109e-05, 7.465300000000091e-05, 7.519400000000065e-05, 7.523599999999936e-05, 7.508300000000356e-05, 7.474999999999843e-05, 7.50560000000039e-05, 7.497299999999901e-05, 7.519400000000065e-05, 7.518100000000055e-05, 7.497200000000648e-05, 7.465300000000091e-05, 7.436099999999501e-05, 7.465300000000091e-05, 7.432000000000272e-05, 7.484699999999594e-05, 7.5069000000004e-05, 7.454200000000383e-05, 7.433300000000281e-05, 7.484700000000288e-05, 7.499999999999868e-05, 7.509700000000313e-05, 7.497199999999954e-05, 7.463800000000187e-05, 7.513900000000184e-05, 7.47769999999981e-05]</msg>
<status status="PASS" starttime="20201110 08:38:08.917" endtime="20201110 08:38:08.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.905" endtime="20201110 08:38:08.923"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.930" endtime="20201110 08:38:08.932"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:08.938" endtime="20201110 08:38:08.960"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.934" endtime="20201110 08:38:08.962"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.925" endtime="20201110 08:38:08.963"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.413" endtime="20201110 08:38:08.964"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.412" endtime="20201110 08:38:08.964"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:08.987" endtime="20201110 08:38:09.009"></status>
</kw>
<msg timestamp="20201110 08:38:09.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:08.983" endtime="20201110 08:38:09.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.012" endtime="20201110 08:38:09.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.018" endtime="20201110 08:38:09.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.976" endtime="20201110 08:38:09.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.971" endtime="20201110 08:38:09.025"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.042" endtime="20201110 08:38:09.377"></status>
</kw>
<msg timestamp="20201110 08:38:09.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042096625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.039" endtime="20201110 08:38:09.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.403" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042020667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042096625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.387" endtime="20201110 08:38:09.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.406" endtime="20201110 08:38:09.411"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.031" endtime="20201110 08:38:09.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.026" endtime="20201110 08:38:09.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.425" level="INFO">${RESULT} = [{'time': 0.042096625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.595800000000097e-05, 'source_diff': 7.595800000000097e-05}, {'time': 0.042186653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:09.416" endtime="20201110 08:38:09.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:09.455" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:09.427" endtime="20201110 08:38:09.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.466" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201110 08:38:09.463" endtime="20201110 08:38:09.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.471" level="INFO">VALUE: [7.595800000000097e-05, 7.598600000000011e-05, 7.562499999999583e-05, 7.549999999999918e-05, 7.595900000000044e-05, 7.618100000000155e-05, 7.595900000000044e-05, 7.60969999999972e-05, 7.597200000000054e-05, 7.619400000000165e-05, 7.526400000000544e-05, 7.595799999999403e-05, 7.619400000000165e-05, 7.561099999999626e-05, 7.622200000000079e-05, 7.602699999999935e-05, 7.574999999999943e-05, 7.607000000000447e-05, 7.563900000000234e-05, 7.602700000000628e-05, 7.555599999999746e-05, 7.529099999999816e-05, 7.530499999999773e-05, 7.584699999999694e-05, 7.573599999999986e-05, 7.580600000000465e-05, 7.551399999999875e-05, 7.577799999999857e-05, 7.563900000000234e-05, 7.590299999999522e-05, 7.5763999999999e-05, 7.609800000000361e-05, 7.597300000000001e-05, 7.551399999999875e-05, 7.55690000000045e-05, 7.540200000000219e-05, 7.536100000000295e-05, 7.612499999999633e-05, 7.565300000000191e-05, 7.595800000000097e-05, 7.549999999999918e-05, 7.591700000000173e-05, 7.566600000000201e-05, 7.530599999999721e-05, 7.555500000000492e-05, 7.598600000000011e-05, 7.601299999999978e-05, 7.562499999999583e-05, 7.608299999999762e-05, 7.58890000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:38:09.468" endtime="20201110 08:38:09.473"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.457" endtime="20201110 08:38:09.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.481" endtime="20201110 08:38:09.483"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:09.489" endtime="20201110 08:38:09.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.485" endtime="20201110 08:38:09.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.476" endtime="20201110 08:38:09.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.966" endtime="20201110 08:38:09.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:08.965" endtime="20201110 08:38:09.515"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.538" endtime="20201110 08:38:09.560"></status>
</kw>
<msg timestamp="20201110 08:38:09.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.535" endtime="20201110 08:38:09.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:09.563" endtime="20201110 08:38:09.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.570" endtime="20201110 08:38:09.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.527" endtime="20201110 08:38:09.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.522" endtime="20201110 08:38:09.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.593" endtime="20201110 08:38:09.929"></status>
</kw>
<msg timestamp="20201110 08:38:09.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042474778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042551583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.590" endtime="20201110 08:38:09.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:09.955" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042474778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042551583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:09.938" endtime="20201110 08:38:09.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:09.958" endtime="20201110 08:38:09.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.583" endtime="20201110 08:38:09.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.578" endtime="20201110 08:38:09.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:09.978" level="INFO">${RESULT} = [{'time': 0.042551583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.680499999999923e-05, 'source_diff': 7.680499999999923e-05}, {'time': 0.042640542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:09.969" endtime="20201110 08:38:09.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.009" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:09.981" endtime="20201110 08:38:10.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.020" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.018" endtime="20201110 08:38:10.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.025" level="INFO">VALUE: [7.680499999999923e-05, 7.630599999999821e-05, 7.662500000000377e-05, 7.677799999999957e-05, 7.698600000000111e-05, 7.65560000000054e-05, 7.645800000000147e-05, 7.654199999999889e-05, 7.725000000000093e-05, 7.630599999999821e-05, 7.640299999999572e-05, 7.661099999999726e-05, 7.695799999999503e-05, 7.695900000000144e-05, 7.629200000000558e-05, 7.676300000000053e-05, 7.708400000000504e-05, 7.670799999999478e-05, 7.630500000000567e-05, 7.672200000000129e-05, 7.673600000000086e-05, 7.684700000000488e-05, 7.675000000000043e-05, 7.697200000000154e-05, 7.708300000000556e-05, 7.711199999999724e-05, 7.711200000000418e-05, 7.652799999999932e-05, 7.677799999999957e-05, 7.707000000000547e-05, 7.708299999999862e-05, 7.662499999999683e-05, 7.66519999999965e-05, 7.69719999999946e-05, 7.652799999999932e-05, 7.701400000000025e-05, 7.690299999999622e-05, 7.670800000000172e-05, 7.640300000000266e-05, 7.647300000000051e-05, 7.673600000000086e-05, 7.629199999999864e-05, 7.668000000000258e-05, 7.712499999999733e-05, 7.633300000000481e-05, 7.706899999999905e-05, 7.718000000000308e-05, 7.641700000000223e-05, 7.666700000000248e-05, 7.651399999999975e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.022" endtime="20201110 08:38:10.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.011" endtime="20201110 08:38:10.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.035" endtime="20201110 08:38:10.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.044" endtime="20201110 08:38:10.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.039" endtime="20201110 08:38:10.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.031" endtime="20201110 08:38:10.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.517" endtime="20201110 08:38:10.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:09.516" endtime="20201110 08:38:10.070"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.093" endtime="20201110 08:38:10.115"></status>
</kw>
<msg timestamp="20201110 08:38:10.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.090" endtime="20201110 08:38:10.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.118" endtime="20201110 08:38:10.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.124" endtime="20201110 08:38:10.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.082" endtime="20201110 08:38:10.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.076" endtime="20201110 08:38:10.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.148" endtime="20201110 08:38:10.482"></status>
</kw>
<msg timestamp="20201110 08:38:10.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042489944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.145" endtime="20201110 08:38:10.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042411875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042489944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.492" endtime="20201110 08:38:10.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.510" endtime="20201110 08:38:10.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.137" endtime="20201110 08:38:10.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.132" endtime="20201110 08:38:10.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:10.531" level="INFO">${RESULT} = [{'time': 0.042489944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.806900000000006e-05, 'source_diff': 7.806900000000006e-05}, {'time': 0.042578944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:10.522" endtime="20201110 08:38:10.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:10.562" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:10.534" endtime="20201110 08:38:10.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.573" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201110 08:38:10.570" endtime="20201110 08:38:10.573"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.578" level="INFO">VALUE: [7.806900000000006e-05, 7.761099999999826e-05, 7.812499999999833e-05, 7.745799999999553e-05, 7.741600000000376e-05, 7.7764000000001e-05, 7.820800000000322e-05, 7.763900000000434e-05, 7.754199999999989e-05, 7.809799999999867e-05, 7.741700000000323e-05, 7.772299999999482e-05, 7.80839999999991e-05, 7.820799999999628e-05, 7.818000000000408e-05, 7.795799999999603e-05, 7.730499999999974e-05, 7.738899999999715e-05, 7.784699999999894e-05, 7.806900000000006e-05, 7.786100000000545e-05, 7.795799999999603e-05, 7.762499999999783e-05, 7.7458999999995e-05, 7.74310000000028e-05, 7.816700000000398e-05, 7.727800000000007e-05, 7.768000000000358e-05, 7.795799999999603e-05, 7.730499999999974e-05, 7.808299999999962e-05, 7.784700000000588e-05, 7.730499999999974e-05, 7.729199999999964e-05, 7.737500000000452e-05, 7.75969999999987e-05, 7.819500000000312e-05, 7.747200000000204e-05, 7.755599999999946e-05, 7.773700000000133e-05, 7.730499999999974e-05, 7.740200000000419e-05, 7.738899999999715e-05, 7.790299999999722e-05, 7.737499999999758e-05, 7.822200000000279e-05, 7.797200000000254e-05, 7.808299999999962e-05, 7.740299999999672e-05, 7.770900000000219e-05]</msg>
<status status="PASS" starttime="20201110 08:38:10.575" endtime="20201110 08:38:10.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.564" endtime="20201110 08:38:10.581"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.588" endtime="20201110 08:38:10.591"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:10.596" endtime="20201110 08:38:10.618"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.592" endtime="20201110 08:38:10.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.583" endtime="20201110 08:38:10.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.072" endtime="20201110 08:38:10.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.071" endtime="20201110 08:38:10.622"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.645" endtime="20201110 08:38:10.667"></status>
</kw>
<msg timestamp="20201110 08:38:10.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.642" endtime="20201110 08:38:10.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:10.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:10.670" endtime="20201110 08:38:10.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.677" endtime="20201110 08:38:10.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.635" endtime="20201110 08:38:10.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.629" endtime="20201110 08:38:10.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:10.702" endtime="20201110 08:38:11.037"></status>
</kw>
<msg timestamp="20201110 08:38:11.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042336208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:10.698" endtime="20201110 08:38:11.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042336208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042414944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.046" endtime="20201110 08:38:11.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.065" endtime="20201110 08:38:11.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.691" endtime="20201110 08:38:11.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.686" endtime="20201110 08:38:11.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.084" level="INFO">${RESULT} = [{'time': 0.042414944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.873600000000286e-05, 'source_diff': 7.873600000000286e-05}, {'time': 0.042503972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:11.075" endtime="20201110 08:38:11.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:11.086" endtime="20201110 08:38:11.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.125" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.123" endtime="20201110 08:38:11.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.131" level="INFO">VALUE: [7.873600000000286e-05, 7.8764000000002e-05, 7.90970000000002e-05, 7.880600000000071e-05, 7.854200000000089e-05, 7.877800000000157e-05, 7.919500000000412e-05, 7.852799999999438e-05, 7.857000000000003e-05, 7.862499999999883e-05, 7.836199999999849e-05, 7.907000000000053e-05, 7.905600000000096e-05, 7.916599999999857e-05, 7.898600000000311e-05, 7.847200000000304e-05, 7.88049999999943e-05, 7.873600000000286e-05, 7.906900000000106e-05, 7.906900000000106e-05, 7.905600000000096e-05, 7.909799999999967e-05, 7.852800000000132e-05, 7.909799999999967e-05, 7.857000000000003e-05, 7.862500000000577e-05, 7.911099999999976e-05, 7.879100000000167e-05, 7.836099999999901e-05, 7.838899999999815e-05, 7.900000000000268e-05, 7.901400000000225e-05, 7.851399999999481e-05, 7.886099999999951e-05, 7.830600000000021e-05, 7.830600000000021e-05, 7.851399999999481e-05, 7.908300000000063e-05, 7.833300000000681e-05, 7.917999999999814e-05, 7.867999999999764e-05, 7.884699999999994e-05, 7.908300000000063e-05, 7.906900000000106e-05, 7.830600000000021e-05, 7.854200000000089e-05, 7.923600000000336e-05, 7.862499999999883e-05, 7.866700000000448e-05, 7.918099999999761e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.128" endtime="20201110 08:38:11.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.116" endtime="20201110 08:38:11.134"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.140" endtime="20201110 08:38:11.143"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.149" endtime="20201110 08:38:11.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.145" endtime="20201110 08:38:11.172"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.136" endtime="20201110 08:38:11.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.624" endtime="20201110 08:38:11.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:10.623" endtime="20201110 08:38:11.175"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.199" endtime="20201110 08:38:11.226"></status>
</kw>
<msg timestamp="20201110 08:38:11.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.194" endtime="20201110 08:38:11.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.235" endtime="20201110 08:38:11.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.248" endtime="20201110 08:38:11.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.187" endtime="20201110 08:38:11.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.181" endtime="20201110 08:38:11.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.272" endtime="20201110 08:38:11.605"></status>
</kw>
<msg timestamp="20201110 08:38:11.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048042375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048121986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.268" endtime="20201110 08:38:11.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048042375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048121986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.615" endtime="20201110 08:38:11.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.634" endtime="20201110 08:38:11.639"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.261" endtime="20201110 08:38:11.641"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.256" endtime="20201110 08:38:11.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:11.653" level="INFO">${RESULT} = [{'time': 0.048121986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.961100000000026e-05, 'source_diff': 7.961100000000026e-05}, {'time': 0.048214931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:11.644" endtime="20201110 08:38:11.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:11.683" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:11.655" endtime="20201110 08:38:11.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.694" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201110 08:38:11.692" endtime="20201110 08:38:11.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.700" level="INFO">VALUE: [7.961100000000026e-05, 7.936199999999949e-05, 8.006999999999459e-05, 7.975000000000343e-05, 8.019399999999871e-05, 7.993099999999836e-05, 7.986100000000051e-05, 7.99719999999976e-05, 7.929200000000164e-05, 7.92919999999947e-05, 7.984700000000094e-05, 7.958300000000113e-05, 8.000000000000368e-05, 8.011100000000076e-05, 7.933400000000035e-05, 8.008299999999469e-05, 7.938899999999915e-05, 7.974999999999649e-05, 7.954100000000242e-05, 7.997200000000454e-05, 7.977799999999563e-05, 7.976399999999606e-05, 7.973600000000386e-05, 7.950000000000318e-05, 7.968099999999811e-05, 7.954200000000189e-05, 7.933400000000035e-05, 8.00840000000011e-05, 7.998600000000411e-05, 8.005600000000196e-05, 7.997200000000454e-05, 7.99719999999976e-05, 8.020799999999828e-05, 7.99440000000054e-05, 7.973599999999692e-05, 7.99169999999988e-05, 7.937500000000652e-05, 8.00970000000012e-05, 7.983400000000085e-05, 7.952799999999538e-05, 8.022299999999732e-05, 8.007000000000153e-05, 7.952700000000285e-05, 7.979100000000267e-05, 7.962499999999983e-05, 7.94719999999971e-05, 7.940299999999872e-05, 7.94719999999971e-05, 7.979100000000267e-05, 7.954200000000189e-05]</msg>
<status status="PASS" starttime="20201110 08:38:11.697" endtime="20201110 08:38:11.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.685" endtime="20201110 08:38:11.703"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.710" endtime="20201110 08:38:11.713"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:11.719" endtime="20201110 08:38:11.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.715" endtime="20201110 08:38:11.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.706" endtime="20201110 08:38:11.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.177" endtime="20201110 08:38:11.745"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.176" endtime="20201110 08:38:11.746"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.769" endtime="20201110 08:38:11.790"></status>
</kw>
<msg timestamp="20201110 08:38:11.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.765" endtime="20201110 08:38:11.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:11.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:11.793" endtime="20201110 08:38:11.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.800" endtime="20201110 08:38:11.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.758" endtime="20201110 08:38:11.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.752" endtime="20201110 08:38:11.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:11.823" endtime="20201110 08:38:12.158"></status>
</kw>
<msg timestamp="20201110 08:38:12.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042478514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:11.820" endtime="20201110 08:38:12.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042397347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042478514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.168" endtime="20201110 08:38:12.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.186" endtime="20201110 08:38:12.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.813" endtime="20201110 08:38:12.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.808" endtime="20201110 08:38:12.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.206" level="INFO">${RESULT} = [{'time': 0.042478514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.116700000000004e-05, 'source_diff': 8.116700000000004e-05}, {'time': 0.042569583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.196" endtime="20201110 08:38:12.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.236" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:12.208" endtime="20201110 08:38:12.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.247" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.244" endtime="20201110 08:38:12.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.252" level="INFO">VALUE: [8.116700000000004e-05, 8.088900000000065e-05, 8.097300000000501e-05, 8.073600000000486e-05, 8.062500000000083e-05, 8.056900000000256e-05, 8.120799999999928e-05, 8.038900000000015e-05, 8.090300000000022e-05, 8.076399999999706e-05, 8.073599999999792e-05, 8.118099999999961e-05, 8.105600000000296e-05, 8.073599999999792e-05, 8.107000000000253e-05, 8.084800000000142e-05, 8.051400000000375e-05, 8.06249999999939e-05, 8.086100000000151e-05, 8.088899999999372e-05, 8.074999999999749e-05, 8.118000000000014e-05, 8.06390000000004e-05, 8.105600000000296e-05, 8.112500000000133e-05, 8.095799999999903e-05, 8.088900000000065e-05, 8.027800000000307e-05, 8.12369999999979e-05, 8.088900000000065e-05, 8.043000000000633e-05, 8.049999999999724e-05, 8.029099999999623e-05, 8.105499999999655e-05, 8.098599999999817e-05, 8.063899999999347e-05, 8.045799999999853e-05, 8.062500000000083e-05, 8.113899999999397e-05, 8.044499999999843e-05, 8.040299999999972e-05, 8.118000000000014e-05, 8.02770000000036e-05, 8.099999999999774e-05, 8.102800000000382e-05, 8.088900000000065e-05, 8.037500000000058e-05, 8.111100000000177e-05, 8.079200000000314e-05, 8.118099999999961e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.249" endtime="20201110 08:38:12.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.237" endtime="20201110 08:38:12.261"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.267" endtime="20201110 08:38:12.270"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.276" endtime="20201110 08:38:12.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.271" endtime="20201110 08:38:12.299"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.263" endtime="20201110 08:38:12.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.748" endtime="20201110 08:38:12.302"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:11.747" endtime="20201110 08:38:12.302"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.325" endtime="20201110 08:38:12.347"></status>
</kw>
<msg timestamp="20201110 08:38:12.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.321" endtime="20201110 08:38:12.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.350" endtime="20201110 08:38:12.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.357" endtime="20201110 08:38:12.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.314" endtime="20201110 08:38:12.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.308" endtime="20201110 08:38:12.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.380" endtime="20201110 08:38:12.714"></status>
</kw>
<msg timestamp="20201110 08:38:12.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042153722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.377" endtime="20201110 08:38:12.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042153722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.724" endtime="20201110 08:38:12.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.743" endtime="20201110 08:38:12.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.369" endtime="20201110 08:38:12.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.365" endtime="20201110 08:38:12.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:12.765" level="INFO">${RESULT} = [{'time': 0.042153722, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.193000000000089e-05, 'source_diff': 8.193000000000089e-05}, {'time': 0.042250778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:12.756" endtime="20201110 08:38:12.765"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:12.795" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:12.767" endtime="20201110 08:38:12.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.806" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201110 08:38:12.804" endtime="20201110 08:38:12.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.812" level="INFO">VALUE: [8.193000000000089e-05, 8.222199999999985e-05, 8.199999999999874e-05, 8.195800000000003e-05, 8.151400000000475e-05, 8.177800000000457e-05, 8.13190000000033e-05, 8.184799999999548e-05, 8.183400000000285e-05, 8.211100000000277e-05, 8.195800000000003e-05, 8.16249999999949e-05, 8.199999999999874e-05, 8.223599999999942e-05, 8.152799999999738e-05, 8.200000000000568e-05, 8.133400000000235e-05, 8.156899999999662e-05, 8.144499999999943e-05, 8.176299999999859e-05, 8.202799999999788e-05, 8.145799999999953e-05, 8.172199999999935e-05, 8.174999999999849e-05, 8.187500000000208e-05, 8.222299999999932e-05, 8.21799999999942e-05, 8.137500000000158e-05, 8.216700000000104e-05, 8.194499999999993e-05, 8.140299999999379e-05, 8.172299999999882e-05, 8.207000000000353e-05, 8.161200000000174e-05, 8.223600000000636e-05, 8.218000000000114e-05, 8.13049999999968e-05, 8.219400000000071e-05, 8.177800000000457e-05, 8.187500000000208e-05, 8.1846999999996e-05, 8.190199999999481e-05, 8.155600000000346e-05, 8.141600000000082e-05, 8.145800000000647e-05, 8.193100000000036e-05, 8.1764000000005e-05, 8.141600000000082e-05, 8.148599999999867e-05, 8.15840000000026e-05]</msg>
<status status="PASS" starttime="20201110 08:38:12.809" endtime="20201110 08:38:12.813"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.797" endtime="20201110 08:38:12.815"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.821" endtime="20201110 08:38:12.824"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:12.830" endtime="20201110 08:38:12.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.825" endtime="20201110 08:38:12.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.817" endtime="20201110 08:38:12.854"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.304" endtime="20201110 08:38:12.855"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.303" endtime="20201110 08:38:12.856"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.878" endtime="20201110 08:38:12.900"></status>
</kw>
<msg timestamp="20201110 08:38:12.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.875" endtime="20201110 08:38:12.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:12.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:12.903" endtime="20201110 08:38:12.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.910" endtime="20201110 08:38:12.913"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.868" endtime="20201110 08:38:12.915"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.862" endtime="20201110 08:38:12.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:12.933" endtime="20201110 08:38:13.267"></status>
</kw>
<msg timestamp="20201110 08:38:13.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041852056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:12.929" endtime="20201110 08:38:13.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041769528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041852056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.277" endtime="20201110 08:38:13.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.295" endtime="20201110 08:38:13.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.922" endtime="20201110 08:38:13.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.918" endtime="20201110 08:38:13.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.315" level="INFO">${RESULT} = [{'time': 0.041852056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.252799999999838e-05, 'source_diff': 8.252799999999838e-05}, {'time': 0.041945056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.306" endtime="20201110 08:38:13.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.345" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:13.317" endtime="20201110 08:38:13.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.356" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.354" endtime="20201110 08:38:13.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.361" level="INFO">VALUE: [8.252799999999838e-05, 8.311200000000324e-05, 8.244500000000043e-05, 8.223599999999942e-05, 8.319399999999477e-05, 8.252799999999838e-05, 8.302800000000582e-05, 8.272299999999982e-05, 8.254200000000489e-05, 8.29720000000006e-05, 8.279200000000514e-05, 8.265300000000197e-05, 8.29170000000018e-05, 8.276399999999906e-05, 8.241600000000182e-05, 8.248599999999967e-05, 8.302699999999941e-05, 8.251399999999881e-05, 8.31249999999964e-05, 8.277800000000557e-05, 8.229200000000464e-05, 8.298600000000017e-05, 8.306999999999759e-05, 8.230599999999727e-05, 8.297300000000007e-05, 8.276299999999959e-05, 8.322200000000085e-05, 8.302799999999888e-05, 8.298600000000017e-05, 8.276399999999906e-05, 8.308300000000463e-05, 8.252799999999838e-05, 8.322199999999391e-05, 8.316700000000204e-05, 8.245800000000053e-05, 8.305599999999802e-05, 8.262500000000284e-05, 8.234800000000292e-05, 8.287500000000309e-05, 8.30970000000042e-05, 8.252699999999891e-05, 8.288900000000265e-05, 8.248599999999967e-05, 8.26249999999959e-05, 8.26390000000024e-05, 8.306900000000506e-05, 8.232000000000378e-05, 8.284799999999648e-05, 8.262500000000284e-05, 8.301400000000625e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.358" endtime="20201110 08:38:13.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.347" endtime="20201110 08:38:13.365"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.371" endtime="20201110 08:38:13.374"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.379" endtime="20201110 08:38:13.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.375" endtime="20201110 08:38:13.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.366" endtime="20201110 08:38:13.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.858" endtime="20201110 08:38:13.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:12.856" endtime="20201110 08:38:13.405"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.428" endtime="20201110 08:38:13.449"></status>
</kw>
<msg timestamp="20201110 08:38:13.451" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.425" endtime="20201110 08:38:13.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.453" endtime="20201110 08:38:13.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.459" endtime="20201110 08:38:13.463"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.417" endtime="20201110 08:38:13.465"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.412" endtime="20201110 08:38:13.466"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.483" endtime="20201110 08:38:13.818"></status>
</kw>
<msg timestamp="20201110 08:38:13.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041819069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.479" endtime="20201110 08:38:13.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041819069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041902431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:13.828" endtime="20201110 08:38:13.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.846" endtime="20201110 08:38:13.852"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.472" endtime="20201110 08:38:13.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.467" endtime="20201110 08:38:13.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:13.866" level="INFO">${RESULT} = [{'time': 0.041902431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.336199999999655e-05, 'source_diff': 8.336199999999655e-05}, {'time': 0.041995444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:13.857" endtime="20201110 08:38:13.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:13.895" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:13.868" endtime="20201110 08:38:13.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.907" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201110 08:38:13.904" endtime="20201110 08:38:13.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:13.912" level="INFO">VALUE: [8.336199999999655e-05, 8.327699999999966e-05, 8.400000000000074e-05, 8.390199999999681e-05, 8.393000000000289e-05, 8.419399999999577e-05, 8.375000000000049e-05, 8.344500000000143e-05, 8.393099999999543e-05, 8.352799999999938e-05, 8.333399999999741e-05, 8.365300000000297e-05, 8.401400000000031e-05, 8.333399999999741e-05, 8.394399999999552e-05, 8.326399999999956e-05, 8.386100000000452e-05, 8.406900000000606e-05, 8.418000000000314e-05, 8.419500000000218e-05, 8.368100000000211e-05, 8.347300000000057e-05, 8.36249999999969e-05, 8.422300000000132e-05, 8.354099999999948e-05, 8.422299999999439e-05, 8.340199999999631e-05, 8.359699999999776e-05, 8.326399999999956e-05, 8.361099999999733e-05, 8.415299999999654e-05, 8.398600000000117e-05, 8.3846999999998e-05, 8.322200000000085e-05, 8.32919999999987e-05, 8.397299999999414e-05, 8.387499999999715e-05, 8.363799999999699e-05, 8.420800000000228e-05, 8.3846999999998e-05, 8.395800000000203e-05, 8.36249999999969e-05, 8.423600000000142e-05, 8.361099999999733e-05, 8.375000000000049e-05, 8.375000000000049e-05, 8.333300000000488e-05, 8.404199999999945e-05, 8.356999999999809e-05, 8.344500000000143e-05]</msg>
<status status="PASS" starttime="20201110 08:38:13.909" endtime="20201110 08:38:13.914"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.897" endtime="20201110 08:38:13.915"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.922" endtime="20201110 08:38:13.924"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:13.930" endtime="20201110 08:38:13.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.926" endtime="20201110 08:38:13.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.917" endtime="20201110 08:38:13.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.407" endtime="20201110 08:38:13.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.406" endtime="20201110 08:38:13.956"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:13.979" endtime="20201110 08:38:14.000"></status>
</kw>
<msg timestamp="20201110 08:38:14.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:13.975" endtime="20201110 08:38:14.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.004" endtime="20201110 08:38:14.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.010" endtime="20201110 08:38:14.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.968" endtime="20201110 08:38:14.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.962" endtime="20201110 08:38:14.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.033" endtime="20201110 08:38:14.367"></status>
</kw>
<msg timestamp="20201110 08:38:14.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04193725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042022319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:14.030" endtime="20201110 08:38:14.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04193725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042022319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:14.376" endtime="20201110 08:38:14.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.395" endtime="20201110 08:38:14.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.023" endtime="20201110 08:38:14.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.018" endtime="20201110 08:38:14.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.414" level="INFO">${RESULT} = [{'time': 0.042022319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.506900000000012e-05, 'source_diff': 8.506900000000012e-05}, {'time': 0.042118361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.405" endtime="20201110 08:38:14.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.444" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:14.416" endtime="20201110 08:38:14.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.455" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.453" endtime="20201110 08:38:14.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.461" level="INFO">VALUE: [8.506900000000012e-05, 8.476400000000106e-05, 8.429100000000023e-05, 8.43049999999998e-05, 8.51669999999971e-05, 8.515299999999754e-05, 8.454199999999995e-05, 8.483299999999944e-05, 8.473600000000192e-05, 8.447300000000157e-05, 8.436100000000502e-05, 8.486099999999858e-05, 8.476400000000106e-05, 8.451400000000081e-05, 8.525000000000199e-05, 8.498600000000217e-05, 8.519399999999677e-05, 8.495799999999609e-05, 8.463899999999747e-05, 8.468100000000311e-05, 8.42919999999997e-05, 8.473600000000192e-05, 8.500000000000174e-05, 8.508299999999969e-05, 8.516599999999763e-05, 8.495800000000303e-05, 8.43049999999998e-05, 8.454199999999995e-05, 8.46669999999966e-05, 8.486099999999858e-05, 8.486099999999858e-05, 8.51249999999984e-05, 8.472200000000235e-05, 8.505600000000002e-05, 8.441699999999636e-05, 8.461100000000527e-05, 8.506900000000012e-05, 8.486099999999858e-05, 8.486099999999858e-05, 8.44449999999955e-05, 8.513899999999797e-05, 8.43469999999985e-05, 8.51390000000049e-05, 8.468099999999618e-05, 8.505600000000002e-05, 8.515299999999754e-05, 8.486200000000499e-05, 8.474999999999455e-05, 8.452700000000091e-05, 8.454100000000048e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.458" endtime="20201110 08:38:14.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.446" endtime="20201110 08:38:14.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.470" endtime="20201110 08:38:14.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.479" endtime="20201110 08:38:14.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.474" endtime="20201110 08:38:14.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.466" endtime="20201110 08:38:14.503"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.958" endtime="20201110 08:38:14.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:13.957" endtime="20201110 08:38:14.505"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.527" endtime="20201110 08:38:14.548"></status>
</kw>
<msg timestamp="20201110 08:38:14.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.524" endtime="20201110 08:38:14.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:14.549" endtime="20201110 08:38:14.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.553" endtime="20201110 08:38:14.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.517" endtime="20201110 08:38:14.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.511" endtime="20201110 08:38:14.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.564" endtime="20201110 08:38:14.870"></status>
</kw>
<msg timestamp="20201110 08:38:14.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.562" endtime="20201110 08:38:14.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041858153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041943792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:14.879" endtime="20201110 08:38:14.896"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.898" endtime="20201110 08:38:14.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.559" endtime="20201110 08:38:14.907"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.557" endtime="20201110 08:38:14.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:14.919" level="INFO">${RESULT} = [{'time': 0.041943792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.563899999999847e-05, 'source_diff': 8.563899999999847e-05}, {'time': 0.042041792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:14.910" endtime="20201110 08:38:14.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:14.949" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:14.921" endtime="20201110 08:38:14.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.960" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201110 08:38:14.958" endtime="20201110 08:38:14.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:14.966" level="INFO">VALUE: [8.563899999999847e-05, 8.534799999999898e-05, 8.574999999999555e-05, 8.557000000000009e-05, 8.623600000000342e-05, 8.611099999999983e-05, 8.573600000000292e-05, 8.611099999999983e-05, 8.536099999999908e-05, 8.573599999999598e-05, 8.606900000000112e-05, 8.587499999999915e-05, 8.620900000000375e-05, 8.531999999999984e-05, 8.563899999999847e-05, 8.59999999999958e-05, 8.601300000000284e-05, 8.602800000000188e-05, 8.576400000000206e-05, 8.551400000000181e-05, 8.611099999999983e-05, 8.598600000000317e-05, 8.566700000000455e-05, 8.56249999999989e-05, 8.61249999999994e-05, 8.534799999999898e-05, 8.607000000000059e-05, 8.584799999999948e-05, 8.541599999999788e-05, 8.594399999999752e-05, 8.606899999999418e-05, 8.619399999999777e-05, 8.576400000000206e-05, 8.600000000000274e-05, 8.552799999999444e-05, 8.570900000000325e-05, 8.613899999999897e-05, 8.607000000000059e-05, 8.586199999999905e-05, 8.609700000000026e-05, 8.595799999999709e-05, 8.552700000000191e-05, 8.545800000000353e-05, 8.609700000000026e-05, 8.608300000000069e-05, 8.552800000000138e-05, 8.53469999999995e-05, 8.552800000000138e-05, 8.598599999999623e-05, 8.555600000000052e-05]</msg>
<status status="PASS" starttime="20201110 08:38:14.963" endtime="20201110 08:38:14.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.951" endtime="20201110 08:38:14.969"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:14.975" endtime="20201110 08:38:14.978"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:14.984" endtime="20201110 08:38:15.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.979" endtime="20201110 08:38:15.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.971" endtime="20201110 08:38:15.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.507" endtime="20201110 08:38:15.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:14.505" endtime="20201110 08:38:15.010"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.032" endtime="20201110 08:38:15.054"></status>
</kw>
<msg timestamp="20201110 08:38:15.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.029" endtime="20201110 08:38:15.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.058" endtime="20201110 08:38:15.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.064" endtime="20201110 08:38:15.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.022" endtime="20201110 08:38:15.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.016" endtime="20201110 08:38:15.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.087" endtime="20201110 08:38:15.435"></status>
</kw>
<msg timestamp="20201110 08:38:15.442" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041900736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041987361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.084" endtime="20201110 08:38:15.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041900736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041987361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.444" endtime="20201110 08:38:15.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.463" endtime="20201110 08:38:15.468"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.077" endtime="20201110 08:38:15.470"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.072" endtime="20201110 08:38:15.471"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:15.482" level="INFO">${RESULT} = [{'time': 0.041987361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.66249999999999e-05, 'source_diff': 8.66249999999999e-05}, {'time': 0.042084375, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:15.473" endtime="20201110 08:38:15.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:15.512" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:15.484" endtime="20201110 08:38:15.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.523" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201110 08:38:15.521" endtime="20201110 08:38:15.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.529" level="INFO">VALUE: [8.66249999999999e-05, 8.69999999999968e-05, 8.668099999999818e-05, 8.708400000000116e-05, 8.663899999999947e-05, 8.722300000000432e-05, 8.707000000000159e-05, 8.708300000000169e-05, 8.654099999999554e-05, 8.669400000000521e-05, 8.66390000000064e-05, 8.636100000000008e-05, 8.708300000000169e-05, 8.654200000000195e-05, 8.676400000000306e-05, 8.676400000000306e-05, 8.66249999999999e-05, 8.643099999999793e-05, 8.640200000000625e-05, 8.627700000000266e-05, 8.691599999999938e-05, 8.638900000000616e-05, 8.688899999999972e-05, 8.686100000000058e-05, 8.675000000000349e-05, 8.718100000000562e-05, 8.705600000000202e-05, 8.686100000000058e-05, 8.686100000000058e-05, 8.640299999999879e-05, 8.693100000000537e-05, 8.631900000000137e-05, 8.697199999999766e-05, 8.658400000000066e-05, 8.636100000000008e-05, 8.694399999999852e-05, 8.665299999999904e-05, 8.719399999999877e-05, 8.71250000000004e-05, 8.71250000000004e-05, 8.658300000000119e-05, 8.698599999999723e-05, 8.681900000000187e-05, 8.64999999999963e-05, 8.713899999999997e-05, 8.666599999999913e-05, 8.6847000000001e-05, 8.643099999999793e-05, 8.661099999999339e-05, 8.705600000000202e-05]</msg>
<status status="PASS" starttime="20201110 08:38:15.525" endtime="20201110 08:38:15.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.514" endtime="20201110 08:38:15.532"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.538" endtime="20201110 08:38:15.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:15.546" endtime="20201110 08:38:15.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.542" endtime="20201110 08:38:15.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.533" endtime="20201110 08:38:15.571"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.012" endtime="20201110 08:38:15.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.011" endtime="20201110 08:38:15.572"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.595" endtime="20201110 08:38:15.617"></status>
</kw>
<msg timestamp="20201110 08:38:15.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.592" endtime="20201110 08:38:15.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:15.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:15.620" endtime="20201110 08:38:15.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.627" endtime="20201110 08:38:15.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.585" endtime="20201110 08:38:15.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.579" endtime="20201110 08:38:15.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:15.650" endtime="20201110 08:38:16.000"></status>
</kw>
<msg timestamp="20201110 08:38:16.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042094153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042182278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:15.647" endtime="20201110 08:38:16.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042094153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042182278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.010" endtime="20201110 08:38:16.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.029" endtime="20201110 08:38:16.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.640" endtime="20201110 08:38:16.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.635" endtime="20201110 08:38:16.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.048" level="INFO">${RESULT} = [{'time': 0.042182278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.812499999999446e-05, 'source_diff': 8.812499999999446e-05}, {'time': 0.042283236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.039" endtime="20201110 08:38:16.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.078" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:16.050" endtime="20201110 08:38:16.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.089" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.087" endtime="20201110 08:38:16.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.095" level="INFO">VALUE: [8.812499999999446e-05, 8.81800000000002e-05, 8.784700000000201e-05, 8.763900000000047e-05, 8.813900000000097e-05, 8.823599999999848e-05, 8.729199999999576e-05, 8.784800000000148e-05, 8.787500000000115e-05, 8.738900000000022e-05, 8.773599999999798e-05, 8.763900000000047e-05, 8.811100000000183e-05, 8.81250000000014e-05, 8.811100000000183e-05, 8.777799999999669e-05, 8.819499999999925e-05, 8.811100000000183e-05, 8.787500000000115e-05, 8.808299999999575e-05, 8.774999999999755e-05, 8.761100000000133e-05, 8.745799999999859e-05, 8.773599999999798e-05, 8.786100000000158e-05, 8.741699999999936e-05, 8.722199999999791e-05, 8.820799999999934e-05, 8.765300000000004e-05, 8.786100000000158e-05, 8.752700000000391e-05, 8.765300000000004e-05, 8.773600000000492e-05, 8.751399999999687e-05, 8.7332999999995e-05, 8.774999999999755e-05, 8.808300000000269e-05, 8.808300000000269e-05, 8.733399999999447e-05, 8.774999999999755e-05, 8.751399999999687e-05, 8.811099999999489e-05, 8.79999999999978e-05, 8.733300000000194e-05, 8.741599999999988e-05, 8.781899999999593e-05, 8.772199999999841e-05, 8.78329999999955e-05, 8.730600000000227e-05, 8.797199999999866e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.092" endtime="20201110 08:38:16.097"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.080" endtime="20201110 08:38:16.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.105" endtime="20201110 08:38:16.108"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.114" endtime="20201110 08:38:16.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.109" endtime="20201110 08:38:16.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.100" endtime="20201110 08:38:16.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.575" endtime="20201110 08:38:16.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:15.573" endtime="20201110 08:38:16.140"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.163" endtime="20201110 08:38:16.185"></status>
</kw>
<msg timestamp="20201110 08:38:16.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.159" endtime="20201110 08:38:16.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.188" endtime="20201110 08:38:16.193"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.194" endtime="20201110 08:38:16.198"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.152" endtime="20201110 08:38:16.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.146" endtime="20201110 08:38:16.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.218" endtime="20201110 08:38:16.563"></status>
</kw>
<msg timestamp="20201110 08:38:16.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042437278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042526194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.215" endtime="20201110 08:38:16.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042437278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042526194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.572" endtime="20201110 08:38:16.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.591" endtime="20201110 08:38:16.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.207" endtime="20201110 08:38:16.598"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.202" endtime="20201110 08:38:16.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:16.610" level="INFO">${RESULT} = [{'time': 0.042526194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.891600000000138e-05, 'source_diff': 8.891600000000138e-05}, {'time': 0.042626139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:16.601" endtime="20201110 08:38:16.611"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:16.640" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:16.612" endtime="20201110 08:38:16.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.651" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201110 08:38:16.649" endtime="20201110 08:38:16.652"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.657" level="INFO">VALUE: [8.891600000000138e-05, 8.873599999999898e-05, 8.8945e-05, 8.906999999999665e-05, 8.887499999999521e-05, 8.874999999999855e-05, 8.895800000000009e-05, 8.862499999999496e-05, 8.844400000000002e-05, 8.841700000000036e-05, 8.893100000000043e-05, 8.918099999999374e-05, 8.830599999999633e-05, 8.919500000000025e-05, 8.852800000000438e-05, 8.89999999999988e-05, 8.856900000000362e-05, 8.923599999999948e-05, 8.887499999999521e-05, 8.86250000000019e-05, 8.877799999999769e-05, 8.887500000000215e-05, 8.873599999999898e-05, 8.886100000000258e-05, 8.86250000000019e-05, 8.922199999999991e-05, 8.852799999999744e-05, 8.923699999999896e-05, 8.919400000000077e-05, 8.86250000000019e-05, 8.877700000000516e-05, 8.86250000000019e-05, 8.868100000000018e-05, 8.859699999999582e-05, 8.855600000000352e-05, 8.895800000000009e-05, 8.863900000000147e-05, 8.91250000000024e-05, 8.870899999999932e-05, 8.882000000000334e-05, 8.873599999999898e-05, 8.852699999999797e-05, 8.890300000000129e-05, 8.88329999999965e-05, 8.872199999999941e-05, 8.919500000000025e-05, 8.863899999999453e-05, 8.89999999999988e-05, 8.908399999999622e-05, 8.881899999999693e-05]</msg>
<status status="PASS" starttime="20201110 08:38:16.653" endtime="20201110 08:38:16.658"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.642" endtime="20201110 08:38:16.660"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.666" endtime="20201110 08:38:16.669"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:16.675" endtime="20201110 08:38:16.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.670" endtime="20201110 08:38:16.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.662" endtime="20201110 08:38:16.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.142" endtime="20201110 08:38:16.700"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.141" endtime="20201110 08:38:16.701"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.724" endtime="20201110 08:38:16.746"></status>
</kw>
<msg timestamp="20201110 08:38:16.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.720" endtime="20201110 08:38:16.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:16.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:16.749" endtime="20201110 08:38:16.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.756" endtime="20201110 08:38:16.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.713" endtime="20201110 08:38:16.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.707" endtime="20201110 08:38:16.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:16.779" endtime="20201110 08:38:17.128"></status>
</kw>
<msg timestamp="20201110 08:38:17.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042324125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042414333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:16.776" endtime="20201110 08:38:17.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042324125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042414333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.138" endtime="20201110 08:38:17.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.156" endtime="20201110 08:38:17.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.769" endtime="20201110 08:38:17.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.764" endtime="20201110 08:38:17.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.177" level="INFO">${RESULT} = [{'time': 0.042414333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.020800000000134e-05, 'source_diff': 9.020800000000134e-05}, {'time': 0.042517319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.169" endtime="20201110 08:38:17.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.282" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:17.179" endtime="20201110 08:38:17.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.293" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.291" endtime="20201110 08:38:17.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.298" level="INFO">VALUE: [9.020800000000134e-05, 8.96659999999952e-05, 8.997200000000066e-05, 8.987500000000315e-05, 8.941699999999442e-05, 9.01670000000021e-05, 8.993099999999449e-05, 8.933400000000341e-05, 8.963900000000247e-05, 9.023600000000048e-05, 8.938900000000222e-05, 9.004199999999851e-05, 8.973599999999998e-05, 9.019400000000177e-05, 8.952800000000538e-05, 8.944400000000102e-05, 8.941700000000136e-05, 8.94999999999993e-05, 8.974999999999955e-05, 8.984699999999707e-05, 8.94999999999993e-05, 8.96670000000016e-05, 9.018100000000168e-05, 8.963800000000299e-05, 8.99999999999998e-05, 8.952799999999844e-05, 9.008300000000469e-05, 8.951399999999887e-05, 8.934699999999657e-05, 8.994400000000152e-05, 8.951400000000581e-05, 9.006900000000512e-05, 8.947299999999964e-05, 9.018100000000168e-05, 8.951399999999887e-05, 9.011099999999689e-05, 8.98050000000053e-05, 9.008300000000469e-05, 9.016699999999517e-05, 9.008300000000469e-05, 8.932000000000384e-05, 8.963899999999553e-05, 9.023600000000048e-05, 9.019500000000125e-05, 8.951400000000581e-05, 8.99999999999998e-05, 8.967999999999476e-05, 8.940200000000231e-05, 8.995800000000109e-05, 9.005499999999861e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.295" endtime="20201110 08:38:17.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.284" endtime="20201110 08:38:17.307"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.314" endtime="20201110 08:38:17.317"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.322" endtime="20201110 08:38:17.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.318" endtime="20201110 08:38:17.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.309" endtime="20201110 08:38:17.347"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.703" endtime="20201110 08:38:17.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:16.702" endtime="20201110 08:38:17.348"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.372" endtime="20201110 08:38:17.394"></status>
</kw>
<msg timestamp="20201110 08:38:17.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.369" endtime="20201110 08:38:17.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.398" endtime="20201110 08:38:17.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.404" endtime="20201110 08:38:17.408"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.361" endtime="20201110 08:38:17.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.355" endtime="20201110 08:38:17.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.428" endtime="20201110 08:38:17.774"></status>
</kw>
<msg timestamp="20201110 08:38:17.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043545111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043636208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.424" endtime="20201110 08:38:17.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043545111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043636208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:17.783" endtime="20201110 08:38:17.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.802" endtime="20201110 08:38:17.806"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.417" endtime="20201110 08:38:17.807"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.412" endtime="20201110 08:38:17.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:17.819" level="INFO">${RESULT} = [{'time': 0.043636208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.109700000000526e-05, 'source_diff': 9.109700000000526e-05}, {'time': 0.043738208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:17.810" endtime="20201110 08:38:17.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:17.849" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:17.822" endtime="20201110 08:38:17.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.860" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201110 08:38:17.858" endtime="20201110 08:38:17.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.866" level="INFO">VALUE: [9.109700000000526e-05, 9.029099999999929e-05, 9.040199999999637e-05, 9.119400000000277e-05, 9.061100000000433e-05, 9.12079999999954e-05, 9.06529999999961e-05, 9.091700000000286e-05, 9.094499999999506e-05, 9.087499999999721e-05, 9.073600000000098e-05, 9.040300000000279e-05, 9.104100000000004e-05, 9.097200000000166e-05, 9.037499999999671e-05, 9.051399999999987e-05, 9.073600000000098e-05, 9.120800000000234e-05, 9.030599999999833e-05, 9.075000000000055e-05, 9.062499999999696e-05, 9.034799999999704e-05, 9.054099999999954e-05, 9.10130000000009e-05, 9.108299999999875e-05, 9.093099999999549e-05, 9.081899999999893e-05, 9.040299999999585e-05, 9.080599999999883e-05, 9.052799999999944e-05, 9.027799999999919e-05, 9.106999999999865e-05, 9.109799999999779e-05, 9.063900000000347e-05, 9.123599999999454e-05, 9.099999999999386e-05, 9.031899999999843e-05, 9.062499999999696e-05, 9.08199999999984e-05, 9.061099999999739e-05, 9.065300000000304e-05, 9.063899999999653e-05, 9.091700000000286e-05, 9.11250000000044e-05, 9.037499999999671e-05, 9.058399999999772e-05, 9.030499999999886e-05, 9.042999999999551e-05, 9.027799999999919e-05, 9.036100000000408e-05]</msg>
<status status="PASS" starttime="20201110 08:38:17.863" endtime="20201110 08:38:17.868"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.851" endtime="20201110 08:38:17.869"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.876" endtime="20201110 08:38:17.878"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:17.884" endtime="20201110 08:38:17.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.880" endtime="20201110 08:38:17.908"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.871" endtime="20201110 08:38:17.909"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.350" endtime="20201110 08:38:17.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.349" endtime="20201110 08:38:17.910"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.935" endtime="20201110 08:38:17.959"></status>
</kw>
<msg timestamp="20201110 08:38:17.960" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.931" endtime="20201110 08:38:17.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:17.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:17.963" endtime="20201110 08:38:17.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.969" endtime="20201110 08:38:17.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.924" endtime="20201110 08:38:17.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.918" endtime="20201110 08:38:17.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:17.981" endtime="20201110 08:38:18.309"></status>
</kw>
<msg timestamp="20201110 08:38:18.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045941639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04603325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:17.980" endtime="20201110 08:38:18.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045941639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04603325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:18.319" endtime="20201110 08:38:18.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.338" endtime="20201110 08:38:18.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.976" endtime="20201110 08:38:18.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.974" endtime="20201110 08:38:18.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.355" level="INFO">${RESULT} = [{'time': 0.04603325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.161099999999839e-05, 'source_diff': 9.161099999999839e-05}, {'time': 0.046139264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:18.347" endtime="20201110 08:38:18.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.386" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:18.358" endtime="20201110 08:38:18.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.397" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.395" endtime="20201110 08:38:18.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.402" level="INFO">VALUE: [9.161099999999839e-05, 9.168099999999624e-05, 9.130599999999933e-05, 9.16529999999971e-05, 9.212499999999846e-05, 9.222300000000239e-05, 9.173599999999504e-05, 9.147199999999522e-05, 9.172200000000241e-05, 9.16250000000049e-05, 9.16670000000036e-05, 9.163900000000447e-05, 9.212499999999846e-05, 9.211099999999889e-05, 9.168099999999624e-05, 9.187500000000515e-05, 9.15000000000013e-05, 9.222200000000291e-05, 9.184699999999907e-05, 9.22079999999964e-05, 9.209699999999932e-05, 9.141700000000336e-05, 9.137499999999771e-05, 9.159700000000576e-05, 9.176400000000112e-05, 9.175000000000155e-05, 9.149999999999436e-05, 9.144400000000302e-05, 9.152800000000044e-05, 9.145800000000259e-05, 9.198600000000223e-05, 9.140299999999685e-05, 9.161099999999839e-05, 9.162499999999796e-05, 9.16529999999971e-05, 9.21120000000053e-05, 9.218099999999674e-05, 9.205600000000008e-05, 9.176300000000165e-05, 9.13879999999978e-05, 9.161099999999839e-05, 9.217999999999726e-05, 9.184699999999907e-05, 9.186099999999864e-05, 9.187499999999821e-05, 9.130599999999933e-05, 9.173600000000198e-05, 9.195900000000257e-05, 9.175000000000155e-05, 9.173600000000198e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.399" endtime="20201110 08:38:18.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.388" endtime="20201110 08:38:18.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.412" endtime="20201110 08:38:18.415"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.420" endtime="20201110 08:38:18.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.416" endtime="20201110 08:38:18.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.407" endtime="20201110 08:38:18.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.913" endtime="20201110 08:38:18.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:17.912" endtime="20201110 08:38:18.446"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.469" endtime="20201110 08:38:18.491"></status>
</kw>
<msg timestamp="20201110 08:38:18.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.466" endtime="20201110 08:38:18.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:18.495" endtime="20201110 08:38:18.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.501" endtime="20201110 08:38:18.505"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.458" endtime="20201110 08:38:18.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.452" endtime="20201110 08:38:18.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.526" endtime="20201110 08:38:18.859"></status>
</kw>
<msg timestamp="20201110 08:38:18.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041820181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041913153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.523" endtime="20201110 08:38:18.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041820181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041913153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:18.869" endtime="20201110 08:38:18.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.887" endtime="20201110 08:38:18.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.514" endtime="20201110 08:38:18.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.509" endtime="20201110 08:38:18.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:18.905" level="INFO">${RESULT} = [{'time': 0.041913153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.297200000000366e-05, 'source_diff': 9.297200000000366e-05}, {'time': 0.042020153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:18.896" endtime="20201110 08:38:18.906"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:18.936" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:18.907" endtime="20201110 08:38:18.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.947" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201110 08:38:18.945" endtime="20201110 08:38:18.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:18.953" level="INFO">VALUE: [9.297200000000366e-05, 9.305599999999414e-05, 9.240299999999785e-05, 9.259799999999929e-05, 9.320800000000434e-05, 9.320800000000434e-05, 9.319399999999783e-05, 9.229099999999435e-05, 9.276400000000212e-05, 9.252800000000144e-05, 9.257000000000015e-05, 9.304200000000151e-05, 9.318099999999774e-05, 9.272300000000289e-05, 9.320800000000434e-05, 9.265199999999862e-05, 9.267999999999776e-05, 9.306899999999424e-05, 9.306900000000118e-05, 9.280600000000083e-05, 9.229200000000076e-05, 9.230600000000033e-05, 9.26529999999981e-05, 9.277800000000169e-05, 9.308400000000022e-05, 9.312499999999946e-05, 9.263799999999905e-05, 9.236099999999914e-05, 9.297200000000366e-05, 9.25000000000023e-05, 9.280600000000083e-05, 9.308300000000075e-05, 9.240299999999785e-05, 9.269500000000375e-05, 9.251400000000187e-05, 9.290299999999835e-05, 9.261199999999886e-05, 9.230500000000086e-05, 9.274999999999561e-05, 9.276399999999518e-05, 9.229100000000129e-05, 9.272199999999647e-05, 9.277800000000169e-05, 9.3027999999995e-05, 9.319500000000425e-05, 9.295899999999663e-05, 9.320899999999688e-05, 9.29729999999962e-05, 9.319399999999783e-05, 9.280500000000136e-05]</msg>
<status status="PASS" starttime="20201110 08:38:18.950" endtime="20201110 08:38:18.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.938" endtime="20201110 08:38:18.956"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:18.963" endtime="20201110 08:38:18.966"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:18.972" endtime="20201110 08:38:18.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.968" endtime="20201110 08:38:18.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.958" endtime="20201110 08:38:18.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.448" endtime="20201110 08:38:18.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:18.447" endtime="20201110 08:38:18.999"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.022" endtime="20201110 08:38:19.045"></status>
</kw>
<msg timestamp="20201110 08:38:19.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.019" endtime="20201110 08:38:19.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.048" endtime="20201110 08:38:19.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.055" endtime="20201110 08:38:19.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.011" endtime="20201110 08:38:19.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.006" endtime="20201110 08:38:19.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.078" endtime="20201110 08:38:19.452"></status>
</kw>
<msg timestamp="20201110 08:38:19.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0432645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:19.075" endtime="20201110 08:38:19.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043170292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0432645, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:19.465" endtime="20201110 08:38:19.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.490" endtime="20201110 08:38:19.496"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.068" endtime="20201110 08:38:19.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.063" endtime="20201110 08:38:19.501"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:19.516" level="INFO">${RESULT} = [{'time': 0.0432645, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.42079999999984e-05, 'source_diff': 9.42079999999984e-05}, {'time': 0.0433705, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.3...</msg>
<status status="PASS" starttime="20201110 08:38:19.503" endtime="20201110 08:38:19.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:19.561" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:19.520" endtime="20201110 08:38:19.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.577" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201110 08:38:19.573" endtime="20201110 08:38:19.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.586" level="INFO">VALUE: [9.42079999999984e-05, 9.380600000000183e-05, 9.377799999999575e-05, 9.393000000000595e-05, 9.363899999999953e-05, 9.423599999999754e-05, 9.418099999999874e-05, 9.416699999999917e-05, 9.406900000000218e-05, 9.381900000000193e-05, 9.375000000000355e-05, 9.329200000000176e-05, 9.372199999999747e-05, 9.362499999999996e-05, 9.401400000000337e-05, 9.377800000000269e-05, 9.354199999999507e-05, 9.368100000000518e-05, 9.419400000000577e-05, 9.340199999999937e-05, 9.369400000000527e-05, 9.397199999999772e-05, 9.363899999999953e-05, 9.411100000000089e-05, 9.355600000000158e-05, 9.330600000000133e-05, 9.420899999999788e-05, 9.376400000000312e-05, 9.341699999999842e-05, 9.34859999999968e-05, 9.326299999999621e-05, 9.375000000000355e-05, 9.362499999999996e-05, 9.37079999999979e-05, 9.422299999999745e-05, 9.341699999999842e-05, 9.370800000000484e-05, 9.352800000000244e-05, 9.413900000000003e-05, 9.390299999999935e-05, 9.357000000000115e-05, 9.373600000000398e-05, 9.330500000000186e-05, 9.354200000000201e-05, 9.412500000000046e-05, 9.377799999999575e-05, 9.419499999999831e-05, 9.419499999999831e-05, 9.374999999999661e-05, 9.409799999999385e-05]</msg>
<status status="PASS" starttime="20201110 08:38:19.581" endtime="20201110 08:38:19.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.564" endtime="20201110 08:38:19.591"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.601" endtime="20201110 08:38:19.606"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:19.620" endtime="20201110 08:38:19.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.609" endtime="20201110 08:38:19.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.594" endtime="20201110 08:38:19.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.001" endtime="20201110 08:38:19.652"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.000" endtime="20201110 08:38:19.652"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.677" endtime="20201110 08:38:19.701"></status>
</kw>
<msg timestamp="20201110 08:38:19.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.673" endtime="20201110 08:38:19.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:19.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:19.704" endtime="20201110 08:38:19.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.711" endtime="20201110 08:38:19.715"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.665" endtime="20201110 08:38:19.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.659" endtime="20201110 08:38:19.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:19.736" endtime="20201110 08:38:20.094"></status>
</kw>
<msg timestamp="20201110 08:38:20.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046291222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046386083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:19.732" endtime="20201110 08:38:20.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046291222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046386083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.104" endtime="20201110 08:38:20.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.123" endtime="20201110 08:38:20.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.725" endtime="20201110 08:38:20.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.720" endtime="20201110 08:38:20.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.143" level="INFO">${RESULT} = [{'time': 0.046386083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.486100000000164e-05, 'source_diff': 9.486100000000164e-05}, {'time': 0.046490111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:20.133" endtime="20201110 08:38:20.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.173" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:20.145" endtime="20201110 08:38:20.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.184" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.182" endtime="20201110 08:38:20.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.190" level="INFO">VALUE: [9.486100000000164e-05, 9.454200000000301e-05, 9.479200000000326e-05, 9.484699999999513e-05, 9.452800000000344e-05, 9.472199999999847e-05, 9.495899999999863e-05, 9.519499999999931e-05, 9.518099999999974e-05, 9.45409999999966e-05, 9.479100000000379e-05, 9.451399999999693e-05, 9.434700000000157e-05, 9.45279999999965e-05, 9.490300000000035e-05, 9.473599999999804e-05, 9.437500000000071e-05, 9.430600000000233e-05, 9.530499999999692e-05, 9.430499999999592e-05, 9.45409999999966e-05, 9.480500000000336e-05, 9.461100000000139e-05, 9.46660000000002e-05, 9.463900000000053e-05, 9.523599999999854e-05, 9.509700000000232e-05, 9.48200000000024e-05, 9.484800000000154e-05, 9.451399999999693e-05, 9.488900000000078e-05, 9.51660000000007e-05, 9.449999999999736e-05, 9.499999999999786e-05, 9.508299999999581e-05, 9.518000000000026e-05, 9.441699999999942e-05, 9.486200000000111e-05, 9.483400000000197e-05, 9.430600000000233e-05, 9.507000000000265e-05, 9.430499999999592e-05, 9.49859999999983e-05, 9.427700000000372e-05, 9.508299999999581e-05, 9.455600000000258e-05, 9.479199999999632e-05, 9.451400000000387e-05, 9.445899999999813e-05, 9.457000000000215e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.187" endtime="20201110 08:38:20.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.175" endtime="20201110 08:38:20.193"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.200" endtime="20201110 08:38:20.202"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.208" endtime="20201110 08:38:20.230"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.204" endtime="20201110 08:38:20.232"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.195" endtime="20201110 08:38:20.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.654" endtime="20201110 08:38:20.234"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:19.653" endtime="20201110 08:38:20.234"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.258" endtime="20201110 08:38:20.281"></status>
</kw>
<msg timestamp="20201110 08:38:20.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.254" endtime="20201110 08:38:20.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.284" endtime="20201110 08:38:20.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.291" endtime="20201110 08:38:20.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.247" endtime="20201110 08:38:20.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.241" endtime="20201110 08:38:20.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.315" endtime="20201110 08:38:20.665"></status>
</kw>
<msg timestamp="20201110 08:38:20.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04347625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:20.311" endtime="20201110 08:38:20.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04347625, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:20.675" endtime="20201110 08:38:20.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.694" endtime="20201110 08:38:20.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.304" endtime="20201110 08:38:20.701"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.299" endtime="20201110 08:38:20.702"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:20.713" level="INFO">${RESULT} = [{'time': 0.04347625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.597199999999972e-05, 'source_diff': 9.597199999999972e-05}, {'time': 0.043580292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:20.704" endtime="20201110 08:38:20.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:20.743" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:20.715" endtime="20201110 08:38:20.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.754" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201110 08:38:20.751" endtime="20201110 08:38:20.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.759" level="INFO">VALUE: [9.597199999999972e-05, 9.551399999999793e-05, 9.588900000000178e-05, 9.54859999999988e-05, 9.608400000000322e-05, 9.540200000000137e-05, 9.537500000000171e-05, 9.59859999999993e-05, 9.558300000000325e-05, 9.555600000000358e-05, 9.624999999999911e-05, 9.574999999999861e-05, 9.529199999999682e-05, 9.529200000000376e-05, 9.572199999999947e-05, 9.59729999999992e-05, 9.609699999999638e-05, 9.552699999999803e-05, 9.577699999999828e-05, 9.562499999999502e-05, 9.612499999999552e-05, 9.547199999999922e-05, 9.605599999999714e-05, 9.613900000000203e-05, 9.574999999999861e-05, 9.606999999999671e-05, 9.595899999999963e-05, 9.527799999999725e-05, 9.527699999999778e-05, 9.541600000000094e-05, 9.60409999999981e-05, 9.608300000000375e-05, 9.584700000000307e-05, 9.562499999999502e-05, 9.538900000000128e-05, 9.563900000000153e-05, 9.579199999999732e-05, 9.529200000000376e-05, 9.573699999999852e-05, 9.563900000000153e-05, 9.612499999999552e-05, 9.579100000000479e-05, 9.568100000000024e-05, 9.579199999999732e-05, 9.58200000000034e-05, 9.619500000000031e-05, 9.584700000000307e-05, 9.531999999999596e-05, 9.594500000000006e-05, 9.554100000000454e-05]</msg>
<status status="PASS" starttime="20201110 08:38:20.756" endtime="20201110 08:38:20.760"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.745" endtime="20201110 08:38:20.762"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.769" endtime="20201110 08:38:20.771"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:20.777" endtime="20201110 08:38:20.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.773" endtime="20201110 08:38:20.800"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.764" endtime="20201110 08:38:20.802"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.236" endtime="20201110 08:38:20.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.235" endtime="20201110 08:38:20.803"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.826" endtime="20201110 08:38:20.848"></status>
</kw>
<msg timestamp="20201110 08:38:20.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.822" endtime="20201110 08:38:20.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:20.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:20.852" endtime="20201110 08:38:20.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.858" endtime="20201110 08:38:20.862"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.815" endtime="20201110 08:38:20.863"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.809" endtime="20201110 08:38:20.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:20.882" endtime="20201110 08:38:21.227"></status>
</kw>
<msg timestamp="20201110 08:38:21.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:20.878" endtime="20201110 08:38:21.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042194653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042291083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.236" endtime="20201110 08:38:21.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.255" endtime="20201110 08:38:21.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.871" endtime="20201110 08:38:21.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.866" endtime="20201110 08:38:21.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.275" level="INFO">${RESULT} = [{'time': 0.042291083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.643000000000151e-05, 'source_diff': 9.643000000000151e-05}, {'time': 0.042398069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.266" endtime="20201110 08:38:21.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.305" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:21.277" endtime="20201110 08:38:21.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.317" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.314" endtime="20201110 08:38:21.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.322" level="INFO">VALUE: [9.643000000000151e-05, 9.64859999999998e-05, 9.708300000000475e-05, 9.673600000000004e-05, 9.668100000000124e-05, 9.64859999999998e-05, 9.718100000000174e-05, 9.663900000000253e-05, 9.68059999999979e-05, 9.63059999999974e-05, 9.681900000000493e-05, 9.719400000000183e-05, 9.661100000000339e-05, 9.645800000000065e-05, 9.688900000000278e-05, 9.663900000000253e-05, 9.690300000000235e-05, 9.638899999999534e-05, 9.636100000000314e-05, 9.712499999999652e-05, 9.629199999999782e-05, 9.663799999999612e-05, 9.645800000000065e-05, 9.631900000000443e-05, 9.709699999999738e-05, 9.712499999999652e-05, 9.69730000000002e-05, 9.627800000000519e-05, 9.674999999999961e-05, 9.63059999999974e-05, 9.645800000000065e-05, 9.626399999999868e-05, 9.658299999999731e-05, 9.680499999999842e-05, 9.687499999999627e-05, 9.692999999999508e-05, 9.71939999999949e-05, 9.663900000000253e-05, 9.645900000000013e-05, 9.708400000000422e-05, 9.695900000000063e-05, 9.65279999999985e-05, 9.658300000000425e-05, 9.659699999999688e-05, 9.677700000000622e-05, 9.687500000000321e-05, 9.687499999999627e-05, 9.674999999999961e-05, 9.65279999999985e-05, 9.694500000000106e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.319" endtime="20201110 08:38:21.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.307" endtime="20201110 08:38:21.326"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.332" endtime="20201110 08:38:21.335"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.341" endtime="20201110 08:38:21.363"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.336" endtime="20201110 08:38:21.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.328" endtime="20201110 08:38:21.366"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.805" endtime="20201110 08:38:21.367"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:20.804" endtime="20201110 08:38:21.367"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.390" endtime="20201110 08:38:21.413"></status>
</kw>
<msg timestamp="20201110 08:38:21.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.387" endtime="20201110 08:38:21.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.416" endtime="20201110 08:38:21.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.423" endtime="20201110 08:38:21.427"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.380" endtime="20201110 08:38:21.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.374" endtime="20201110 08:38:21.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.447" endtime="20201110 08:38:21.799"></status>
</kw>
<msg timestamp="20201110 08:38:21.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043264597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.443" endtime="20201110 08:38:21.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043166639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043264597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:21.809" endtime="20201110 08:38:21.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.828" endtime="20201110 08:38:21.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.436" endtime="20201110 08:38:21.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.431" endtime="20201110 08:38:21.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:21.847" level="INFO">${RESULT} = [{'time': 0.043264597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.795800000000215e-05, 'source_diff': 9.795800000000215e-05}, {'time': 0.043373597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:21.838" endtime="20201110 08:38:21.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:21.880" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:21.849" endtime="20201110 08:38:21.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.891" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201110 08:38:21.889" endtime="20201110 08:38:21.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.897" level="INFO">VALUE: [9.795800000000215e-05, 9.772200000000147e-05, 9.816700000000317e-05, 9.797200000000172e-05, 9.75279999999995e-05, 9.745900000000113e-05, 9.756900000000568e-05, 9.800000000000086e-05, 9.800000000000086e-05, 9.788799999999737e-05, 9.786100000000464e-05, 9.78609999999977e-05, 9.773600000000104e-05, 9.811100000000489e-05, 9.722200000000097e-05, 9.773600000000104e-05, 9.795900000000163e-05, 9.822200000000197e-05, 9.784699999999813e-05, 9.81939999999959e-05, 9.779099999999985e-05, 9.762499999999702e-05, 9.755499999999917e-05, 9.787499999999727e-05, 9.74860000000008e-05, 9.825000000000111e-05, 9.784699999999813e-05, 9.741700000000242e-05, 9.818000000000326e-05, 9.759799999999735e-05, 9.762500000000396e-05, 9.730499999999892e-05, 9.808299999999881e-05, 9.773600000000104e-05, 9.82080000000024e-05, 9.733400000000447e-05, 9.740300000000285e-05, 9.750000000000036e-05, 9.773600000000104e-05, 9.762500000000396e-05, 9.790300000000335e-05, 9.762500000000396e-05, 9.762499999999702e-05, 9.811100000000489e-05, 9.812499999999752e-05, 9.790300000000335e-05, 9.750000000000036e-05, 9.741700000000242e-05, 9.805600000000608e-05, 9.729199999999882e-05]</msg>
<status status="PASS" starttime="20201110 08:38:21.894" endtime="20201110 08:38:21.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.882" endtime="20201110 08:38:21.900"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.907" endtime="20201110 08:38:21.909"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:21.915" endtime="20201110 08:38:21.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.911" endtime="20201110 08:38:21.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.902" endtime="20201110 08:38:21.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.369" endtime="20201110 08:38:21.941"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.368" endtime="20201110 08:38:21.941"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.965" endtime="20201110 08:38:21.987"></status>
</kw>
<msg timestamp="20201110 08:38:21.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.961" endtime="20201110 08:38:21.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:21.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:21.990" endtime="20201110 08:38:21.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:21.999" endtime="20201110 08:38:22.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.954" endtime="20201110 08:38:22.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.948" endtime="20201110 08:38:22.008"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.024" endtime="20201110 08:38:22.362"></status>
</kw>
<msg timestamp="20201110 08:38:22.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043024653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043123194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.021" endtime="20201110 08:38:22.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043024653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043123194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.371" endtime="20201110 08:38:22.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.390" endtime="20201110 08:38:22.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.013" endtime="20201110 08:38:22.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.009" endtime="20201110 08:38:22.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.408" level="INFO">${RESULT} = [{'time': 0.043123194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.854099999999366e-05, 'source_diff': 9.854099999999366e-05}, {'time': 0.043233236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.399" endtime="20201110 08:38:22.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.439" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:22.410" endtime="20201110 08:38:22.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.451" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.449" endtime="20201110 08:38:22.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.457" level="INFO">VALUE: [9.854099999999366e-05, 9.916700000000417e-05, 9.879100000000085e-05, 9.840300000000385e-05, 9.905500000000067e-05, 9.841699999999648e-05, 9.895800000000315e-05, 9.88609999999987e-05, 9.88609999999987e-05, 9.919499999999637e-05, 9.906999999999971e-05, 9.88479999999986e-05, 9.884699999999913e-05, 9.85410000000006e-05, 9.85410000000006e-05, 9.840300000000385e-05, 9.862499999999802e-05, 9.861099999999845e-05, 9.833299999999906e-05, 9.876400000000118e-05, 9.841699999999648e-05, 9.827800000000025e-05, 9.869400000000333e-05, 9.91939999999969e-05, 9.840200000000437e-05, 9.840300000000385e-05, 9.834699999999863e-05, 9.841700000000342e-05, 9.894499999999612e-05, 9.89860000000023e-05, 9.892999999999708e-05, 9.862499999999802e-05, 9.844499999999562e-05, 9.897200000000272e-05, 9.88609999999987e-05, 9.863899999999759e-05, 9.879200000000032e-05, 9.862500000000496e-05, 9.858399999999878e-05, 9.905600000000014e-05, 9.851400000000093e-05, 9.88609999999987e-05, 9.827800000000025e-05, 9.84860000000018e-05, 9.872200000000247e-05, 9.843000000000351e-05, 9.894399999999665e-05, 9.880500000000042e-05, 9.920799999999647e-05, 9.89860000000023e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.454" endtime="20201110 08:38:22.464"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.442" endtime="20201110 08:38:22.466"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.472" endtime="20201110 08:38:22.475"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.481" endtime="20201110 08:38:22.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.477" endtime="20201110 08:38:22.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.468" endtime="20201110 08:38:22.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.944" endtime="20201110 08:38:22.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:21.942" endtime="20201110 08:38:22.507"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.529" endtime="20201110 08:38:22.551"></status>
</kw>
<msg timestamp="20201110 08:38:22.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.526" endtime="20201110 08:38:22.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:22.555" endtime="20201110 08:38:22.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.561" endtime="20201110 08:38:22.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.519" endtime="20201110 08:38:22.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.513" endtime="20201110 08:38:22.568"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.585" endtime="20201110 08:38:22.932"></status>
</kw>
<msg timestamp="20201110 08:38:22.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041819556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041918861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.581" endtime="20201110 08:38:22.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041819556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041918861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:22.936" endtime="20201110 08:38:22.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.945" endtime="20201110 08:38:22.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.574" endtime="20201110 08:38:22.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.569" endtime="20201110 08:38:22.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:22.953" level="INFO">${RESULT} = [{'time': 0.041918861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.930500000000092e-05, 'source_diff': 9.930500000000092e-05}, {'time': 0.042030875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:22.949" endtime="20201110 08:38:22.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:22.967" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:22.954" endtime="20201110 08:38:22.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.972" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201110 08:38:22.971" endtime="20201110 08:38:22.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:22.975" level="INFO">VALUE: [9.930500000000092e-05, 9.993100000000449e-05, 9.984700000000013e-05, 9.941700000000442e-05, 0.00010007000000000071, 0.00010008400000000028, 9.975000000000261e-05, 0.00010006900000000124, 0.00010009700000000038, 9.997199999999679e-05, 9.940300000000485e-05, 9.994399999999765e-05, 9.9513999999995e-05, 9.945799999999672e-05, 9.972200000000347e-05, 9.979200000000132e-05, 9.962500000000596e-05, 0.00010026399999999575, 0.00010006900000000124, 9.976399999999525e-05, 9.938899999999834e-05, 9.950000000000236e-05, 9.944499999999662e-05, 9.995900000000363e-05, 9.9513999999995e-05, 0.00010011099999999995, 0.0001002359999999966, 0.00010001400000000243, 0.00010005500000000167, 0.00010013899999999909, 9.98609999999997e-05, 9.965299999999816e-05, 0.00010001400000000243, 0.00010022200000000397, 9.963899999999859e-05, 9.969499999999687e-05, 9.95280000000015e-05, 9.934699999999963e-05, 0.0001001939999999979, 9.995800000000415e-05, 9.937499999999877e-05, 9.926400000000168e-05, 9.99860000000033e-05, 9.962499999999902e-05, 9.940300000000485e-05, 9.983400000000003e-05, 0.00010008400000000028, 9.973600000000304e-05, 0.00010016699999999823, 9.975000000000261e-05]</msg>
<status status="PASS" starttime="20201110 08:38:22.974" endtime="20201110 08:38:22.976"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.968" endtime="20201110 08:38:22.977"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:22.980" endtime="20201110 08:38:22.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:22.984" endtime="20201110 08:38:23.003"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.982" endtime="20201110 08:38:23.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.978" endtime="20201110 08:38:23.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.509" endtime="20201110 08:38:23.005"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:22.508" endtime="20201110 08:38:23.005"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.016" endtime="20201110 08:38:23.037"></status>
</kw>
<msg timestamp="20201110 08:38:23.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.015" endtime="20201110 08:38:23.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.040" endtime="20201110 08:38:23.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.047" endtime="20201110 08:38:23.051"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.011" endtime="20201110 08:38:23.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.008" endtime="20201110 08:38:23.054"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.071" endtime="20201110 08:38:23.423"></status>
</kw>
<msg timestamp="20201110 08:38:23.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.067" endtime="20201110 08:38:23.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025280528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025381167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.432" endtime="20201110 08:38:23.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.451" endtime="20201110 08:38:23.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.060" endtime="20201110 08:38:23.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.055" endtime="20201110 08:38:23.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:23.469" level="INFO">${RESULT} = [{'time': 0.025381167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010063899999999959, 'source_diff': 0.00010063899999999959}, {'time': 0.025496181, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:23.460" endtime="20201110 08:38:23.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:23.500" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:23.471" endtime="20201110 08:38:23.501"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.512" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201110 08:38:23.509" endtime="20201110 08:38:23.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.517" level="INFO">VALUE: [0.00010063899999999959, 0.00010102799999999953, 0.00010090299999999941, 0.00010061100000000045, 0.00010108299999999834, 0.00010029100000000235, 0.00010073600000000058, 0.0001003480000000001, 0.00010084699999999766, 0.00010098600000000083, 0.0001011809999999988, 0.00010029200000000182, 0.00010027799999999878, 0.00010095900000000116, 0.0001004999999999999, 0.00010047200000000076, 0.00010081899999999852, 0.00010048600000000033, 0.0001006809999999983, 0.0001003060000000014, 0.00010073600000000058, 0.00010106999999999824, 0.00010036199999999967, 0.00010105600000000214, 0.00010086099999999723, 0.000100415999999999, 0.00010036199999999967, 0.00010034700000000063, 0.00010041699999999848, 0.00010115299999999966, 0.00010026399999999921, 0.00010084700000000113, 0.00010061100000000045, 0.00010076300000000024, 0.00010030500000000192, 0.00010109700000000138, 0.00010042999999999858, 0.00010081899999999852, 0.00010098600000000083, 0.00010108300000000181, 0.00010106999999999824, 0.00010063899999999959, 0.00010065300000000263, 0.00010062500000000002, 0.00010079099999999938, 0.00010030500000000192, 0.00010043099999999805, 0.00010093000000000255, 0.0001005419999999986, 0.0001011809999999988]</msg>
<status status="PASS" starttime="20201110 08:38:23.514" endtime="20201110 08:38:23.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.502" endtime="20201110 08:38:23.520"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.527" endtime="20201110 08:38:23.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:23.536" endtime="20201110 08:38:23.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.531" endtime="20201110 08:38:23.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.522" endtime="20201110 08:38:23.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.006" endtime="20201110 08:38:23.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.006" endtime="20201110 08:38:23.562"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.585" endtime="20201110 08:38:23.608"></status>
</kw>
<msg timestamp="20201110 08:38:23.610" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.581" endtime="20201110 08:38:23.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:23.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:23.612" endtime="20201110 08:38:23.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.618" endtime="20201110 08:38:23.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.574" endtime="20201110 08:38:23.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.568" endtime="20201110 08:38:23.625"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:23.643" endtime="20201110 08:38:23.983"></status>
</kw>
<msg timestamp="20201110 08:38:23.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042957694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043059097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.640" endtime="20201110 08:38:23.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042957694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043059097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:23.992" endtime="20201110 08:38:24.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.011" endtime="20201110 08:38:24.015"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.632" endtime="20201110 08:38:24.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.627" endtime="20201110 08:38:24.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.029" level="INFO">${RESULT} = [{'time': 0.043059097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010140299999999991, 'source_diff': 0.00010140299999999991}, {'time': 0.043171111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:24.020" endtime="20201110 08:38:24.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.062" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:24.031" endtime="20201110 08:38:24.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.073" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.071" endtime="20201110 08:38:24.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.078" level="INFO">VALUE: [0.00010140299999999991, 0.00010127799999999632, 0.00010211099999999501, 0.00010177799999999682, 0.00010163900000000059, 0.00010144499999999862, 0.00010197299999999826, 0.00010141700000000642, 0.00010127699999999684, 0.00010145799999999872, 0.00010191699999999998, 0.0001020410000000041, 0.00010140299999999991, 0.00010127800000000325, 0.00010169500000000581, 0.0001017359999999981, 0.0001013060000000024, 0.00010198599999999836, 0.00010195799999999922, 0.00010130500000000292, 0.00010208300000000281, 0.00010130500000000292, 0.00010184699999999519, 0.0001018610000000017, 0.00010140299999999991, 0.00010204200000000357, 0.00010219499999999937, 0.00010165200000000069, 0.00010149999999999743, 0.00010195799999999922, 0.00010174999999999768, 0.00010220799999999947, 0.0001021939999999999, 0.00010227699999999784, 0.00010151400000000393, 0.00010202799999999707, 0.00010155600000000264, 0.00010129200000000282, 0.000101416, 0.00010144399999999915, 0.00010163900000000059, 0.0001022359999999986, 0.00010184700000000213, 0.00010187500000000127, 0.00010222299999999851, 0.00010140299999999991, 0.00010157000000000221, 0.00010187500000000127, 0.00010142999999999958, 0.00010205500000000367]</msg>
<status status="PASS" starttime="20201110 08:38:24.075" endtime="20201110 08:38:24.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.064" endtime="20201110 08:38:24.082"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.089" endtime="20201110 08:38:24.091"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.097" endtime="20201110 08:38:24.119"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.092" endtime="20201110 08:38:24.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.084" endtime="20201110 08:38:24.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.564" endtime="20201110 08:38:24.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:23.563" endtime="20201110 08:38:24.124"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.149" endtime="20201110 08:38:24.172"></status>
</kw>
<msg timestamp="20201110 08:38:24.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.145" endtime="20201110 08:38:24.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.175" endtime="20201110 08:38:24.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.182" endtime="20201110 08:38:24.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.137" endtime="20201110 08:38:24.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.131" endtime="20201110 08:38:24.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.206" endtime="20201110 08:38:24.547"></status>
</kw>
<msg timestamp="20201110 08:38:24.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045218139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045320458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.202" endtime="20201110 08:38:24.554"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045218139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045320458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.556" endtime="20201110 08:38:24.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.575" endtime="20201110 08:38:24.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.195" endtime="20201110 08:38:24.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.190" endtime="20201110 08:38:24.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:24.592" level="INFO">${RESULT} = [{'time': 0.045320458, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010231900000000349, 'source_diff': 0.00010231900000000349}, {'time': 0.045436431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:24.583" endtime="20201110 08:38:24.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:24.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:24.595" endtime="20201110 08:38:24.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.638" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201110 08:38:24.634" endtime="20201110 08:38:24.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.643" level="INFO">VALUE: [0.00010231900000000349, 0.00010306999999999678, 0.00010251400000000493, 0.00010300000000000586, 0.0001026940000000004, 0.0001030689999999973, 0.0001027359999999991, 0.00010265300000000116, 0.00010302799999999807, 0.00010304200000000457, 0.00010290300000000141, 0.00010309700000000338, 0.00010304199999999764, 0.0001031940000000009, 0.00010230499999999698, 0.00010252799999999757, 0.00010234700000000263, 0.0001028610000000027, 0.00010240300000000091, 0.00010259700000000288, 0.00010290300000000141, 0.00010297199999999979, 0.0001028610000000027, 0.00010249999999999843, 0.00010299999999999893, 0.00010312500000000252, 0.00010304199999999764, 0.00010247299999999876, 0.00010233299999999612, 0.00010261200000000192, 0.00010294500000000012, 0.00010263899999999465, 0.00010244400000000015, 0.00010308299999999687, 0.0001028060000000039, 0.00010286099999999576, 0.00010305600000000414, 0.00010274999999999868, 0.00010222199999999904, 0.00010277799999999782, 0.00010249999999999843, 0.0001023480000000021, 0.00010275000000000561, 0.00010297199999999979, 0.00010308299999999687, 0.00010297199999999979, 0.00010261099999999551, 0.00010233300000000306, 0.00010284700000000313, 0.00010263900000000159]</msg>
<status status="PASS" starttime="20201110 08:38:24.640" endtime="20201110 08:38:24.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.627" endtime="20201110 08:38:24.647"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.653" endtime="20201110 08:38:24.656"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:24.662" endtime="20201110 08:38:24.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.657" endtime="20201110 08:38:24.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.648" endtime="20201110 08:38:24.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.126" endtime="20201110 08:38:24.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.125" endtime="20201110 08:38:24.688"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.711" endtime="20201110 08:38:24.734"></status>
</kw>
<msg timestamp="20201110 08:38:24.735" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.708" endtime="20201110 08:38:24.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:24.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:24.738" endtime="20201110 08:38:24.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.744" endtime="20201110 08:38:24.748"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.700" endtime="20201110 08:38:24.749"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.694" endtime="20201110 08:38:24.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:24.768" endtime="20201110 08:38:25.114"></status>
</kw>
<msg timestamp="20201110 08:38:25.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043146181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043250028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:24.765" endtime="20201110 08:38:25.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043146181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043250028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.124" endtime="20201110 08:38:25.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.142" endtime="20201110 08:38:25.146"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.757" endtime="20201110 08:38:25.147"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.752" endtime="20201110 08:38:25.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.160" level="INFO">${RESULT} = [{'time': 0.043250028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010384700000000413, 'source_diff': 0.00010384700000000413}, {'time': 0.043362042, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:25.151" endtime="20201110 08:38:25.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.191" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:25.162" endtime="20201110 08:38:25.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.202" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.199" endtime="20201110 08:38:25.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.207" level="INFO">VALUE: [0.00010384700000000413, 0.00010408400000000428, 0.0001038610000000037, 0.00010374999999999968, 0.00010366700000000173, 0.00010345800000000072, 0.00010387499999999633, 0.00010397200000000079, 0.0001037360000000001, 0.00010332000000000396, 0.00010331999999999703, 0.00010397300000000026, 0.00010342999999999464, 0.00010347200000000029, 0.00010366700000000173, 0.00010379099999999891, 0.00010354200000000507, 0.00010408300000000481, 0.00010377799999999882, 0.00010345800000000072, 0.00010344500000000062, 0.0001038610000000037, 0.00010352799999999857, 0.00010345800000000072, 0.00010354099999999866, 0.00010380499999999848, 0.00010352799999999857, 0.00010357000000000421, 0.00010419499999999443, 0.00010345800000000072, 0.00010324999999999918, 0.00010345900000000019, 0.00010373699999999958, 0.00010343000000000158, 0.00010405499999999873, 0.0001037360000000001, 0.00010341699999999454, 0.0001040559999999982, 0.00010327799999999832, 0.00010382000000000446, 0.00010352799999999857, 0.0001033339999999966, 0.000103513999999999, 0.00010380499999999848, 0.00010363900000000259, 0.00010367999999999489, 0.00010344500000000062, 0.00010413900000000309, 0.00010386099999999676, 0.00010340300000000191]</msg>
<status status="PASS" starttime="20201110 08:38:25.204" endtime="20201110 08:38:25.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.193" endtime="20201110 08:38:25.211"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.218" endtime="20201110 08:38:25.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.227" endtime="20201110 08:38:25.248"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.222" endtime="20201110 08:38:25.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.213" endtime="20201110 08:38:25.251"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.690" endtime="20201110 08:38:25.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:24.689" endtime="20201110 08:38:25.252"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.275" endtime="20201110 08:38:25.298"></status>
</kw>
<msg timestamp="20201110 08:38:25.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.272" endtime="20201110 08:38:25.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.302" endtime="20201110 08:38:25.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.308" endtime="20201110 08:38:25.312"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.265" endtime="20201110 08:38:25.313"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.259" endtime="20201110 08:38:25.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.331" endtime="20201110 08:38:25.664"></status>
</kw>
<msg timestamp="20201110 08:38:25.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041876681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041981153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.328" endtime="20201110 08:38:25.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041876681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041981153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.673" endtime="20201110 08:38:25.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.691" endtime="20201110 08:38:25.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.321" endtime="20201110 08:38:25.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.316" endtime="20201110 08:38:25.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:25.708" level="INFO">${RESULT} = [{'time': 0.041981153, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010447200000000129, 'source_diff': 0.00010447200000000129}, {'time': 0.042099111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:25.699" endtime="20201110 08:38:25.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:25.738" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:25.710" endtime="20201110 08:38:25.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.749" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201110 08:38:25.747" endtime="20201110 08:38:25.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.754" level="INFO">VALUE: [0.00010447200000000129, 0.00010465300000000316, 0.00010508299999999887, 0.0001048610000000047, 0.00010519500000000237, 0.00010484699999999819, 0.00010506999999999878, 0.00010449999999999349, 0.0001045689999999988, 0.00010497199999999485, 0.00010458299999999837, 0.00010527800000000032, 0.00010475000000000068, 0.00010452799999999957, 0.00010477799999999982, 0.00010497299999999432, 0.00010474999999999374, 0.000104514, 0.00010490200000000394, 0.00010504100000000016, 0.00010480499999999948, 0.00010476400000000025, 0.00010518000000000333, 0.00010509699999999844, 0.00010502700000000059, 0.0001043060000000054, 0.000104514, 0.00010468099999999536, 0.00010456900000000574, 0.00010445800000000172, 0.00010518000000000333, 0.00010437500000000377, 0.00010516700000000323, 0.00010427799999999932, 0.00010526400000000075, 0.00010443100000000205, 0.00010494500000000212, 0.000104514, 0.00010431900000000549, 0.00010519500000000237, 0.00010463900000000359, 0.0001052360000000016, 0.00010440299999999597, 0.00010468000000000283, 0.00010429200000000582, 0.00010452799999999957, 0.00010522300000000151, 0.00010486099999999776, 0.00010455499999999923, 0.00010479099999999991]</msg>
<status status="PASS" starttime="20201110 08:38:25.751" endtime="20201110 08:38:25.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.740" endtime="20201110 08:38:25.757"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.764" endtime="20201110 08:38:25.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:25.773" endtime="20201110 08:38:25.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.769" endtime="20201110 08:38:25.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.759" endtime="20201110 08:38:25.798"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.255" endtime="20201110 08:38:25.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.253" endtime="20201110 08:38:25.799"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.822" endtime="20201110 08:38:25.845"></status>
</kw>
<msg timestamp="20201110 08:38:25.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.819" endtime="20201110 08:38:25.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:25.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:25.848" endtime="20201110 08:38:25.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.855" endtime="20201110 08:38:25.858"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.811" endtime="20201110 08:38:25.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.806" endtime="20201110 08:38:25.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:25.878" endtime="20201110 08:38:26.212"></status>
</kw>
<msg timestamp="20201110 08:38:26.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041800444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:25.875" endtime="20201110 08:38:26.220"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041694958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041800444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.222" endtime="20201110 08:38:26.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.240" endtime="20201110 08:38:26.244"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.867" endtime="20201110 08:38:26.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.863" endtime="20201110 08:38:26.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.257" level="INFO">${RESULT} = [{'time': 0.041800444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010548600000000186, 'source_diff': 0.00010548600000000186}, {'time': 0.041920389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:26.248" endtime="20201110 08:38:26.258"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.289" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:26.259" endtime="20201110 08:38:26.290"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.300" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.298" endtime="20201110 08:38:26.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.305" level="INFO">VALUE: [0.00010548600000000186, 0.00010594500000000312, 0.00010540300000000391, 0.00010580599999999996, 0.00010579100000000091, 0.00010545800000000272, 0.00010570799999999603, 0.000105514000000001, 0.00010604200000000064, 0.0001053889999999974, 0.00010625000000000218, 0.00010613900000000509, 0.00010622299999999557, 0.00010563899999999765, 0.00010612499999999858, 0.00010568000000000383, 0.000105416000000004, 0.00010572200000000254, 0.00010529199999999989, 0.00010562499999999808, 0.00010544400000000315, 0.0001057360000000021, 0.00010594499999999618, 0.00010606999999999978, 0.00010575000000000168, 0.00010611099999999901, 0.000105514000000001, 0.00010555500000000023, 0.00010591699999999704, 0.00010575000000000168, 0.00010608299999999987, 0.00010602800000000107, 0.00010586099999999876, 0.00010530599999999946, 0.00010619399999999696, 0.00010601399999999456, 0.00010617999999999739, 0.00010552800000000057, 0.00010534700000000563, 0.00010618099999999686, 0.00010552800000000057, 0.00010579200000000039, 0.00010597300000000226, 0.000105514000000001, 0.00010558299999999937, 0.00010605500000000073, 0.00010619399999999696, 0.00010531899999999955, 0.00010594399999999671, 0.00010565299999999722]</msg>
<status status="PASS" starttime="20201110 08:38:26.302" endtime="20201110 08:38:26.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.291" endtime="20201110 08:38:26.309"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.315" endtime="20201110 08:38:26.318"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.323" endtime="20201110 08:38:26.346"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.319" endtime="20201110 08:38:26.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.310" endtime="20201110 08:38:26.349"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.801" endtime="20201110 08:38:26.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:25.800" endtime="20201110 08:38:26.350"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.373" endtime="20201110 08:38:26.396"></status>
</kw>
<msg timestamp="20201110 08:38:26.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.370" endtime="20201110 08:38:26.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.400" endtime="20201110 08:38:26.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.406" endtime="20201110 08:38:26.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.363" endtime="20201110 08:38:26.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.357" endtime="20201110 08:38:26.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.429" endtime="20201110 08:38:26.761"></status>
</kw>
<msg timestamp="20201110 08:38:26.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043018569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043125431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.426" endtime="20201110 08:38:26.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043018569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043125431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.770" endtime="20201110 08:38:26.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.789" endtime="20201110 08:38:26.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.419" endtime="20201110 08:38:26.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.414" endtime="20201110 08:38:26.795"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:26.806" level="INFO">${RESULT} = [{'time': 0.043125431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010686199999999924, 'source_diff': 0.00010686199999999924}, {'time': 0.043245431, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:26.797" endtime="20201110 08:38:26.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:26.836" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:26.808" endtime="20201110 08:38:26.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.847" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201110 08:38:26.844" endtime="20201110 08:38:26.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.852" level="INFO">VALUE: [0.00010686199999999924, 0.00010662499999999908, 0.0001072360000000036, 0.00010717999999999839, 0.00010712499999999958, 0.00010716599999999882, 0.00010654200000000114, 0.00010668099999999736, 0.00010659699999999994, 0.00010634699999999969, 0.00010643099999999711, 0.00010661199999999899, 0.00010708300000000087, 0.00010652700000000209, 0.00010679099999999497, 0.00010652800000000157, 0.00010716699999999829, 0.00010694400000000465, 0.00010651399999999506, 0.00010684700000000019, 0.00010686099999999976, 0.00010723599999999667, 0.00010658300000000037, 0.00010702800000000207, 0.00010691699999999804, 0.00010626399999999481, 0.0001066810000000043, 0.00010674999999999574, 0.00010707000000000078, 0.00010687500000000627, 0.00010640299999999797, 0.00010680500000000148, 0.00010641599999999807, 0.00010719399999999796, 0.00010715299999999872, 0.00010716699999999829, 0.0001063889999999984, 0.00010690299999999847, 0.0001071810000000048, 0.0001067089999999965, 0.00010663899999999865, 0.00010722300000000351, 0.00010717999999999839, 0.00010719399999999796, 0.00010694399999999771, 0.00010675000000000268, 0.00010640299999999797, 0.0001070560000000012, 0.00010709799999999992, 0.00010684799999999967]</msg>
<status status="PASS" starttime="20201110 08:38:26.849" endtime="20201110 08:38:26.853"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.838" endtime="20201110 08:38:26.855"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.861" endtime="20201110 08:38:26.864"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:26.870" endtime="20201110 08:38:26.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.865" endtime="20201110 08:38:26.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.857" endtime="20201110 08:38:26.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.352" endtime="20201110 08:38:26.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.351" endtime="20201110 08:38:26.896"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.920" endtime="20201110 08:38:26.942"></status>
</kw>
<msg timestamp="20201110 08:38:26.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.916" endtime="20201110 08:38:26.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:26.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:26.946" endtime="20201110 08:38:26.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.952" endtime="20201110 08:38:26.956"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.909" endtime="20201110 08:38:26.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.902" endtime="20201110 08:38:26.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:26.975" endtime="20201110 08:38:27.310"></status>
</kw>
<msg timestamp="20201110 08:38:27.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043401514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043509556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:26.972" endtime="20201110 08:38:27.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043401514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043509556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.320" endtime="20201110 08:38:27.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.338" endtime="20201110 08:38:27.342"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.965" endtime="20201110 08:38:27.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.960" endtime="20201110 08:38:27.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:27.355" level="INFO">${RESULT} = [{'time': 0.043509556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001080419999999957, 'source_diff': 0.0001080419999999957}, {'time': 0.043632569, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:27.347" endtime="20201110 08:38:27.356"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:27.385" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:27.357" endtime="20201110 08:38:27.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.396" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201110 08:38:27.394" endtime="20201110 08:38:27.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.401" level="INFO">VALUE: [0.0001080419999999957, 0.0001081940000000059, 0.0001074019999999995, 0.00010740299999999897, 0.0001078340000000011, 0.00010745899999999725, 0.00010748600000000386, 0.000108208999999998, 0.00010812499999999364, 0.00010774999999999674, 0.00010751399999999606, 0.00010799999999999699, 0.00010813900000000015, 0.00010780500000000248, 0.00010797199999999785, 0.00010752800000000257, 0.00010762500000000008, 0.00010786100000000076, 0.0001078889999999999, 0.00010807000000000178, 0.0001074019999999995, 0.00010794399999999871, 0.00010786099999999382, 0.00010754200000000214, 0.00010756899999999486, 0.00010797199999999785, 0.00010734800000000017, 0.00010819500000000537, 0.00010741700000000548, 0.00010784700000000119, 0.00010809700000000144, 0.00010774999999999674, 0.00010743100000000505, 0.00010781900000000205, 0.000107514000000003, 0.00010768099999999836, 0.00010740299999999897, 0.00010765199999999975, 0.00010762500000000008, 0.00010769399999999846, 0.00010743000000000558, 0.0001077219999999976, 0.00010763899999999965, 0.00010790299999999947, 0.00010794400000000565, 0.0001080690000000023, 0.00010795899999999775, 0.0001075419999999952, 0.00010769499999999793, 0.00010819499999999843]</msg>
<status status="PASS" starttime="20201110 08:38:27.398" endtime="20201110 08:38:27.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.387" endtime="20201110 08:38:27.405"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.411" endtime="20201110 08:38:27.414"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.419" endtime="20201110 08:38:27.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.415" endtime="20201110 08:38:27.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.406" endtime="20201110 08:38:27.444"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.898" endtime="20201110 08:38:27.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:26.896" endtime="20201110 08:38:27.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:37:31.200" endtime="20201110 08:38:27.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.455" endtime="20201110 08:38:27.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.451" endtime="20201110 08:38:27.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.448" endtime="20201110 08:38:27.479"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:37:31.071" endtime="20201110 08:38:27.480" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:27.500" endtime="20201110 08:38:27.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.496" endtime="20201110 08:38:27.523"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.558" endtime="20201110 08:38:27.577"></status>
</kw>
<msg timestamp="20201110 08:38:27.578" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.555" endtime="20201110 08:38:27.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.584" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.580" endtime="20201110 08:38:27.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:38:27.587" endtime="20201110 08:38:27.591"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:27.548" endtime="20201110 08:38:27.593"></status>
</kw>
<status status="FAIL" starttime="20201110 08:38:27.541" endtime="20201110 08:38:27.595"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.539" endtime="20201110 08:38:27.596"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:38:27.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:38:27.602" endtime="20201110 08:38:27.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.597" endtime="20201110 08:38:27.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.537" endtime="20201110 08:38:27.605"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.535" endtime="20201110 08:38:27.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.607" endtime="20201110 08:38:27.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.529" endtime="20201110 08:38:27.612"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.525" endtime="20201110 08:38:27.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.494" endtime="20201110 08:38:27.614"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.640" endtime="20201110 08:38:27.658"></status>
</kw>
<msg timestamp="20201110 08:38:27.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.635" endtime="20201110 08:38:27.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:27.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:27.661" endtime="20201110 08:38:27.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.668" endtime="20201110 08:38:27.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.628" endtime="20201110 08:38:27.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.622" endtime="20201110 08:38:27.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:27.693" endtime="20201110 08:38:28.012"></status>
</kw>
<msg timestamp="20201110 08:38:28.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132914708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132941806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:27.688" endtime="20201110 08:38:28.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.132914708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.132941806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.016" endtime="20201110 08:38:28.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.026" endtime="20201110 08:38:28.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.680" endtime="20201110 08:38:28.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.676" endtime="20201110 08:38:28.029"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.034" level="INFO">${RESULT} = [{'time': 0.132941806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7098000000003175e-05, 'source_diff': 2.7098000000003175e-05}, {'time': 0.132975806, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:28.030" endtime="20201110 08:38:28.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.048" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:28.035" endtime="20201110 08:38:28.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.053" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.052" endtime="20201110 08:38:28.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.056" level="INFO">VALUE: [2.7098000000003175e-05, 2.7805999999991338e-05, 2.8054999999999053e-05, 2.736100000000352e-05, 2.724999999997868e-05, 2.7124999999988963e-05, 2.788900000000316e-05, 2.740300000000917e-05, 2.713900000000935e-05, 2.7916000000016705e-05, 2.7958000000022354e-05, 2.7485999999993238e-05, 2.7804999999991864e-05, 2.8013999999992878e-05, 2.7138999999981595e-05, 2.734700000001089e-05, 2.7596999999990324e-05, 2.7902999999995792e-05, 2.8042000000005896e-05, 2.7527999999998887e-05, 2.736100000000352e-05, 2.8084000000011544e-05, 2.708300000001107e-05, 2.736100000000352e-05, 2.7152999999974226e-05, 2.7583999999997166e-05, 2.8042000000005896e-05, 2.7930999999981054e-05, 2.7805999999991338e-05, 2.7485999999993238e-05, 2.7861999999989617e-05, 2.765300000001636e-05, 2.7250000000006436e-05, 2.7694999999994252e-05, 2.7262999999999593e-05, 2.7694999999994252e-05, 2.7223000000020647e-05, 2.7777000000006602e-05, 2.8026999999986035e-05, 2.724999999997868e-05, 2.790199999999632e-05, 2.7818999999984495e-05, 2.7374999999996152e-05, 2.7485999999993238e-05, 2.8014000000020634e-05, 2.7708000000015165e-05, 2.7360999999975766e-05, 2.7694000000022534e-05, 2.7138999999981595e-05, 2.8000000000000247e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.054" endtime="20201110 08:38:28.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.049" endtime="20201110 08:38:28.057"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.060" endtime="20201110 08:38:28.061"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.064" endtime="20201110 08:38:28.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.062" endtime="20201110 08:38:28.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.058" endtime="20201110 08:38:28.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.618" endtime="20201110 08:38:28.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.617" endtime="20201110 08:38:28.086"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.101" endtime="20201110 08:38:28.120"></status>
</kw>
<msg timestamp="20201110 08:38:28.121" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.098" endtime="20201110 08:38:28.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.124" endtime="20201110 08:38:28.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.130" endtime="20201110 08:38:28.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.092" endtime="20201110 08:38:28.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.089" endtime="20201110 08:38:28.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.153" endtime="20201110 08:38:28.488"></status>
</kw>
<msg timestamp="20201110 08:38:28.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031394278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.150" endtime="20201110 08:38:28.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031366833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031394278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.498" endtime="20201110 08:38:28.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.516" endtime="20201110 08:38:28.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.143" endtime="20201110 08:38:28.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.138" endtime="20201110 08:38:28.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:28.534" level="INFO">${RESULT} = [{'time': 0.031394278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.744500000000094e-05, 'source_diff': 2.744500000000094e-05}, {'time': 0.031427278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:28.525" endtime="20201110 08:38:28.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:28.567" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:28.536" endtime="20201110 08:38:28.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.578" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201110 08:38:28.575" endtime="20201110 08:38:28.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.583" level="INFO">VALUE: [2.744500000000094e-05, 2.734700000000395e-05, 2.7874999999996652e-05, 2.7583999999997166e-05, 2.7249999999999497e-05, 2.770900000000076e-05, 2.7596999999997263e-05, 2.766700000000205e-05, 2.7361999999996056e-05, 2.7583999999997166e-05, 2.7708000000001287e-05, 2.769399999999478e-05, 2.7527999999998887e-05, 2.7596999999997263e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7902000000003258e-05, 2.7916000000002827e-05, 2.7360999999996582e-05, 2.8098000000004175e-05, 2.7472000000000607e-05, 2.7499999999999747e-05, 2.7360999999996582e-05, 2.7763999999999567e-05, 2.8027999999999387e-05, 2.8000000000000247e-05, 2.7805999999998277e-05, 2.7749999999999997e-05, 2.7694000000001717e-05, 2.7777999999999137e-05, 2.769500000000119e-05, 2.7277999999998637e-05, 2.7249999999999497e-05, 2.736100000000352e-05, 2.7597999999996736e-05, 2.8041999999998957e-05, 2.7486000000000177e-05, 2.7526999999999413e-05, 2.7249999999999497e-05, 2.7388000000003188e-05, 2.737500000000309e-05, 2.7166000000002077e-05, 2.747300000000008e-05, 2.7916999999995362e-05, 2.7708000000001287e-05, 2.7694000000001717e-05, 2.792999999999546e-05, 2.7818999999998373e-05, 2.712500000000284e-05, 2.7222000000000357e-05]</msg>
<status status="PASS" starttime="20201110 08:38:28.580" endtime="20201110 08:38:28.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.568" endtime="20201110 08:38:28.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.593" endtime="20201110 08:38:28.595"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:28.601" endtime="20201110 08:38:28.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.597" endtime="20201110 08:38:28.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.587" endtime="20201110 08:38:28.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.087" endtime="20201110 08:38:28.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.086" endtime="20201110 08:38:28.627"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.649" endtime="20201110 08:38:28.669"></status>
</kw>
<msg timestamp="20201110 08:38:28.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.646" endtime="20201110 08:38:28.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:28.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:28.672" endtime="20201110 08:38:28.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.678" endtime="20201110 08:38:28.682"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.639" endtime="20201110 08:38:28.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.633" endtime="20201110 08:38:28.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:28.702" endtime="20201110 08:38:29.067"></status>
</kw>
<msg timestamp="20201110 08:38:29.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042210403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:28.698" endtime="20201110 08:38:29.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042183181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042210403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.077" endtime="20201110 08:38:29.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.097" endtime="20201110 08:38:29.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.691" endtime="20201110 08:38:29.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.687" endtime="20201110 08:38:29.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.116" level="INFO">${RESULT} = [{'time': 0.042210403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7222000000000357e-05, 'source_diff': 2.7222000000000357e-05}, {'time': 0.042242389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:29.106" endtime="20201110 08:38:29.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.152" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:29.118" endtime="20201110 08:38:29.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.168" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.165" endtime="20201110 08:38:29.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.176" level="INFO">VALUE: [2.7222000000000357e-05, 2.7582999999997693e-05, 2.7569999999997596e-05, 2.761100000000377e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.715300000000198e-05, 2.7819999999997846e-05, 2.7598000000003675e-05, 2.8027999999999387e-05, 2.768100000000162e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.7986999999993212e-05, 2.8054999999999053e-05, 2.7596999999997263e-05, 2.7457999999994098e-05, 2.7708000000001287e-05, 2.737500000000309e-05, 2.763900000000291e-05, 2.8026999999999913e-05, 2.7763999999999567e-05, 2.7846999999997513e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.8027999999999387e-05, 2.7222000000000357e-05, 2.79170000000023e-05, 2.7777999999999137e-05, 2.7818999999998373e-05, 2.7708000000001287e-05, 2.7944999999994502e-05, 2.7292000000005145e-05, 2.8041999999998957e-05, 2.8027999999999387e-05, 2.7805999999998277e-05, 2.7235999999999927e-05, 2.769500000000119e-05, 2.737500000000309e-05, 2.713900000000241e-05, 2.772300000000033e-05, 2.7290999999998733e-05, 2.720900000000026e-05, 2.7584000000004105e-05, 2.8013999999999817e-05, 2.715300000000198e-05, 2.7193999999994278e-05, 2.7818999999998373e-05, 2.7804999999998803e-05, 2.7472000000000607e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.171" endtime="20201110 08:38:29.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.155" endtime="20201110 08:38:29.180"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.188" endtime="20201110 08:38:29.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.197" endtime="20201110 08:38:29.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.192" endtime="20201110 08:38:29.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.182" endtime="20201110 08:38:29.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.629" endtime="20201110 08:38:29.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:28.628" endtime="20201110 08:38:29.224"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.248" endtime="20201110 08:38:29.267"></status>
</kw>
<msg timestamp="20201110 08:38:29.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.245" endtime="20201110 08:38:29.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.271" endtime="20201110 08:38:29.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.278" endtime="20201110 08:38:29.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.237" endtime="20201110 08:38:29.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.231" endtime="20201110 08:38:29.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.305" endtime="20201110 08:38:29.651"></status>
</kw>
<msg timestamp="20201110 08:38:29.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044775667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044803681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.301" endtime="20201110 08:38:29.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044775667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044803681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.661" endtime="20201110 08:38:29.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.679" endtime="20201110 08:38:29.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.293" endtime="20201110 08:38:29.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.287" endtime="20201110 08:38:29.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:29.697" level="INFO">${RESULT} = [{'time': 0.044803681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8013999999999817e-05, 'source_diff': 2.8013999999999817e-05}, {'time': 0.044834681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:29.688" endtime="20201110 08:38:29.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:29.729" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:29.699" endtime="20201110 08:38:29.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.740" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201110 08:38:29.737" endtime="20201110 08:38:29.740"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.745" level="INFO">VALUE: [2.8013999999999817e-05, 2.769500000000119e-05, 2.7805999999998277e-05, 2.7568999999998123e-05, 2.7805999999998277e-05, 2.7486000000000177e-05, 2.7138000000002938e-05, 2.791599999999589e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.736100000000352e-05, 2.792999999999546e-05, 2.7680000000002147e-05, 2.716700000000155e-05, 2.7916000000002827e-05, 2.7596999999997263e-05, 2.7916999999995362e-05, 2.75970000000042e-05, 2.7472000000000607e-05, 2.7096999999996763e-05, 2.742999999999496e-05, 2.8084000000004605e-05, 2.7249999999999497e-05, 2.7486000000000177e-05, 2.7264000000006006e-05, 2.7388999999995722e-05, 2.7263999999999067e-05, 2.738900000000266e-05, 2.8041999999998957e-05, 2.7249999999999497e-05, 2.7124999999995902e-05, 2.7374999999996152e-05, 2.768100000000162e-05, 2.794500000000144e-05, 2.7360999999996582e-05, 2.747300000000008e-05, 2.783300000000488e-05, 2.7374999999996152e-05, 2.747300000000008e-05, 2.8027999999999387e-05, 2.747300000000008e-05, 2.80970000000047e-05, 2.7846999999997513e-05, 2.7430000000001897e-05, 2.7818999999998373e-05, 2.736100000000352e-05, 2.713900000000241e-05, 2.7486000000000177e-05, 2.7902000000003258e-05, 2.7208000000000787e-05]</msg>
<status status="PASS" starttime="20201110 08:38:29.742" endtime="20201110 08:38:29.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.731" endtime="20201110 08:38:29.748"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.755" endtime="20201110 08:38:29.757"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:29.763" endtime="20201110 08:38:29.785"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.759" endtime="20201110 08:38:29.786"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.750" endtime="20201110 08:38:29.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.226" endtime="20201110 08:38:29.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.225" endtime="20201110 08:38:29.789"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.811" endtime="20201110 08:38:29.830"></status>
</kw>
<msg timestamp="20201110 08:38:29.831" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.808" endtime="20201110 08:38:29.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:29.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:29.834" endtime="20201110 08:38:29.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.840" endtime="20201110 08:38:29.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.801" endtime="20201110 08:38:29.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.795" endtime="20201110 08:38:29.847"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:29.863" endtime="20201110 08:38:30.206"></status>
</kw>
<msg timestamp="20201110 08:38:30.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042086514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042114347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:29.860" endtime="20201110 08:38:30.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.231" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042086514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042114347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.215" endtime="20201110 08:38:30.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.234" endtime="20201110 08:38:30.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.853" endtime="20201110 08:38:30.239"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.848" endtime="20201110 08:38:30.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.251" level="INFO">${RESULT} = [{'time': 0.042114347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.783300000000488e-05, 'source_diff': 2.783300000000488e-05}, {'time': 0.042145292, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:30.242" endtime="20201110 08:38:30.252"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.283" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:30.254" endtime="20201110 08:38:30.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.294" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.292" endtime="20201110 08:38:30.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.300" level="INFO">VALUE: [2.783300000000488e-05, 2.7584000000004105e-05, 2.7916999999995362e-05, 2.7569999999997596e-05, 2.7598000000003675e-05, 2.787500000000359e-05, 2.769500000000119e-05, 2.713900000000241e-05, 2.7374999999996152e-05, 2.7304999999998303e-05, 2.8040999999999483e-05, 2.7472000000000607e-05, 2.7596999999997263e-05, 2.7458000000001037e-05, 2.7138999999995472e-05, 2.7818999999998373e-05, 2.720900000000026e-05, 2.7804999999998803e-05, 2.7124999999995902e-05, 2.788900000000316e-05, 2.736100000000352e-05, 2.79170000000023e-05, 2.79170000000023e-05, 2.8042000000005896e-05, 2.7776999999999663e-05, 2.7249999999999497e-05, 2.768100000000162e-05, 2.793100000000187e-05, 2.7512999999999843e-05, 2.715300000000198e-05, 2.769500000000119e-05, 2.7346999999997013e-05, 2.7374999999996152e-05, 2.7972000000001107e-05, 2.7263999999999067e-05, 2.738900000000266e-05, 2.790300000000273e-05, 2.79170000000023e-05, 2.7708000000001287e-05, 2.7347999999996486e-05, 2.7249999999999497e-05, 2.7791999999998707e-05, 2.7596999999997263e-05, 2.7278000000005576e-05, 2.7276999999999163e-05, 2.7694000000001717e-05, 2.7138999999995472e-05, 2.7235999999999927e-05, 2.7986000000000677e-05, 2.7930000000002397e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.296" endtime="20201110 08:38:30.301"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.285" endtime="20201110 08:38:30.303"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.309" endtime="20201110 08:38:30.312"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.317" endtime="20201110 08:38:30.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.313" endtime="20201110 08:38:30.341"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.305" endtime="20201110 08:38:30.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.791" endtime="20201110 08:38:30.343"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:29.790" endtime="20201110 08:38:30.344"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.368" endtime="20201110 08:38:30.386"></status>
</kw>
<msg timestamp="20201110 08:38:30.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.364" endtime="20201110 08:38:30.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.390" endtime="20201110 08:38:30.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.397" endtime="20201110 08:38:30.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.357" endtime="20201110 08:38:30.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.351" endtime="20201110 08:38:30.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.425" endtime="20201110 08:38:30.763"></status>
</kw>
<msg timestamp="20201110 08:38:30.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043769111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043797139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.420" endtime="20201110 08:38:30.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043769111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043797139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.772" endtime="20201110 08:38:30.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.791" endtime="20201110 08:38:30.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.411" endtime="20201110 08:38:30.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.405" endtime="20201110 08:38:30.798"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:30.809" level="INFO">${RESULT} = [{'time': 0.043797139, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.8027999999999387e-05, 'source_diff': 2.8027999999999387e-05}, {'time': 0.043829111, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:30.799" endtime="20201110 08:38:30.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:30.841" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:30.811" endtime="20201110 08:38:30.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.853" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201110 08:38:30.849" endtime="20201110 08:38:30.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.858" level="INFO">VALUE: [2.8027999999999387e-05, 2.7902999999995792e-05, 2.7916999999995362e-05, 2.738900000000266e-05, 2.7805999999998277e-05, 2.8083999999997666e-05, 2.711100000000327e-05, 2.7472000000000607e-05, 2.737500000000309e-05, 2.736100000000352e-05, 2.715300000000198e-05, 2.718100000000112e-05, 2.7249999999999497e-05, 2.7235999999999927e-05, 2.7930999999994932e-05, 2.8027999999999387e-05, 2.7806000000005215e-05, 2.7584000000004105e-05, 2.7570000000004535e-05, 2.7249999999999497e-05, 2.72369999999994e-05, 2.7582999999997693e-05, 2.8054999999999053e-05, 2.715300000000198e-05, 2.7582999999997693e-05, 2.7790999999999233e-05, 2.8013999999999817e-05, 2.7736000000000427e-05, 2.7472000000000607e-05, 2.7360999999996582e-05, 2.7596999999997263e-05, 2.744500000000094e-05, 2.790300000000273e-05, 2.790300000000273e-05, 2.7818999999998373e-05, 2.8041999999998957e-05, 2.8041999999998957e-05, 2.8083999999997666e-05, 2.715300000000198e-05, 2.7707999999994348e-05, 2.7820000000004785e-05, 2.7763000000000093e-05, 2.7944999999994502e-05, 2.7320000000004285e-05, 2.7694999999994252e-05, 2.808300000000513e-05, 2.7944999999994502e-05, 2.8096999999997763e-05, 2.8028000000006326e-05, 2.7930999999994932e-05]</msg>
<status status="PASS" starttime="20201110 08:38:30.855" endtime="20201110 08:38:30.860"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.843" endtime="20201110 08:38:30.862"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.868" endtime="20201110 08:38:30.871"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:30.876" endtime="20201110 08:38:30.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.872" endtime="20201110 08:38:30.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.863" endtime="20201110 08:38:30.901"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.346" endtime="20201110 08:38:30.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.345" endtime="20201110 08:38:30.902"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.925" endtime="20201110 08:38:30.943"></status>
</kw>
<msg timestamp="20201110 08:38:30.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.921" endtime="20201110 08:38:30.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:30.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:30.947" endtime="20201110 08:38:30.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.953" endtime="20201110 08:38:30.957"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.914" endtime="20201110 08:38:30.958"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.909" endtime="20201110 08:38:30.960"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:30.976" endtime="20201110 08:38:31.320"></status>
</kw>
<msg timestamp="20201110 08:38:31.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041905306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041932528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:30.973" endtime="20201110 08:38:31.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041905306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041932528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:31.329" endtime="20201110 08:38:31.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.348" endtime="20201110 08:38:31.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.966" endtime="20201110 08:38:31.353"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.961" endtime="20201110 08:38:31.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.366" level="INFO">${RESULT} = [{'time': 0.041932528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.7221999999993418e-05, 'source_diff': 2.7221999999993418e-05}, {'time': 0.041966542, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:31.357" endtime="20201110 08:38:31.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.397" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:31.368" endtime="20201110 08:38:31.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.408" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.406" endtime="20201110 08:38:31.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.414" level="INFO">VALUE: [2.7221999999993418e-05, 2.7542000000005395e-05, 2.7249999999999497e-05, 2.7971999999994168e-05, 2.790300000000273e-05, 2.7916999999995362e-05, 2.8054999999999053e-05, 2.7249999999999497e-05, 2.7930000000002397e-05, 2.734700000000395e-05, 2.7249999999999497e-05, 2.720900000000026e-05, 2.7930000000002397e-05, 2.713900000000241e-05, 2.715300000000198e-05, 2.7874999999996652e-05, 2.7541999999998457e-05, 2.7472000000000607e-05, 2.7777999999999137e-05, 2.8013999999999817e-05, 2.7804999999998803e-05, 2.7249999999999497e-05, 2.79170000000023e-05, 2.7374999999996152e-05, 2.7249999999999497e-05, 2.7805999999998277e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.8027999999999387e-05, 2.79170000000023e-05, 2.713900000000241e-05, 2.7554999999998553e-05, 2.7916999999995362e-05, 2.7249999999999497e-05, 2.7805999999998277e-05, 2.7819999999997846e-05, 2.8027999999999387e-05, 2.7806000000005215e-05, 2.7249999999999497e-05, 2.769500000000119e-05, 2.7263000000006532e-05, 2.790300000000273e-05, 2.792999999999546e-05, 2.7860999999997083e-05, 2.7694000000001717e-05, 2.7360999999996582e-05, 2.7166000000002077e-05, 2.7332999999997443e-05, 2.756900000000506e-05, 2.7596999999997263e-05]</msg>
<status status="PASS" starttime="20201110 08:38:31.411" endtime="20201110 08:38:31.415"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.399" endtime="20201110 08:38:31.417"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.423" endtime="20201110 08:38:31.428"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.433" endtime="20201110 08:38:31.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.429" endtime="20201110 08:38:31.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.419" endtime="20201110 08:38:31.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.904" endtime="20201110 08:38:31.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:30.903" endtime="20201110 08:38:31.459"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.482" endtime="20201110 08:38:31.501"></status>
</kw>
<msg timestamp="20201110 08:38:31.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.479" endtime="20201110 08:38:31.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:31.504" endtime="20201110 08:38:31.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.510" endtime="20201110 08:38:31.514"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.471" endtime="20201110 08:38:31.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.466" endtime="20201110 08:38:31.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.534" endtime="20201110 08:38:31.878"></status>
</kw>
<msg timestamp="20201110 08:38:31.885" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04215025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:31.530" endtime="20201110 08:38:31.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042122583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04215025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:31.888" endtime="20201110 08:38:31.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.906" endtime="20201110 08:38:31.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.523" endtime="20201110 08:38:31.912"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.519" endtime="20201110 08:38:31.913"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:31.924" level="INFO">${RESULT} = [{'time': 0.04215025, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.766700000000205e-05, 'source_diff': 2.766700000000205e-05}, {'time': 0.04218525, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:31.915" endtime="20201110 08:38:31.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:31.954" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:31.926" endtime="20201110 08:38:31.955"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.965" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201110 08:38:31.963" endtime="20201110 08:38:31.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:31.971" level="INFO">VALUE: [2.766700000000205e-05, 2.793100000000187e-05, 2.7318999999997873e-05, 2.7791999999998707e-05, 2.80970000000047e-05, 2.8041999999998957e-05, 2.7749999999999997e-05, 2.7582999999997693e-05, 2.7833999999997416e-05, 2.744500000000094e-05, 2.743100000000137e-05, 2.7235999999999927e-05, 2.713900000000241e-05, 2.747300000000008e-05, 2.7138999999995472e-05, 2.793100000000187e-05, 2.770900000000076e-05, 2.8040999999999483e-05, 2.8027999999999387e-05, 2.747300000000008e-05, 2.769399999999478e-05, 2.7582999999997693e-05, 2.7374999999996152e-05, 2.713900000000241e-05, 2.7263999999999067e-05, 2.716700000000155e-05, 2.769399999999478e-05, 2.7458000000001037e-05, 2.7541999999998457e-05, 2.7360999999996582e-05, 2.715300000000198e-05, 2.736100000000352e-05, 2.7333999999996916e-05, 2.794500000000144e-05, 2.7472000000000607e-05, 2.7360999999996582e-05, 2.7818999999998373e-05, 2.75970000000042e-05, 2.7596999999997263e-05, 2.7499999999999747e-05, 2.7596999999997263e-05, 2.7138999999995472e-05, 2.765199999999607e-05, 2.7916999999995362e-05, 2.7805999999998277e-05, 2.8027999999999387e-05, 2.7791999999998707e-05, 2.7152999999995042e-05, 2.736100000000352e-05, 2.7583999999997166e-05]</msg>
<status status="PASS" starttime="20201110 08:38:31.968" endtime="20201110 08:38:31.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.956" endtime="20201110 08:38:31.974"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:31.980" endtime="20201110 08:38:31.983"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:31.989" endtime="20201110 08:38:32.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.984" endtime="20201110 08:38:32.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.976" endtime="20201110 08:38:32.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.461" endtime="20201110 08:38:32.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:31.460" endtime="20201110 08:38:32.015"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.039" endtime="20201110 08:38:32.057"></status>
</kw>
<msg timestamp="20201110 08:38:32.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.036" endtime="20201110 08:38:32.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.061" endtime="20201110 08:38:32.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.067" endtime="20201110 08:38:32.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.029" endtime="20201110 08:38:32.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.021" endtime="20201110 08:38:32.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.090" endtime="20201110 08:38:32.423"></status>
</kw>
<msg timestamp="20201110 08:38:32.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043717486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043745361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.087" endtime="20201110 08:38:32.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043717486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043745361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.433" endtime="20201110 08:38:32.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.453" endtime="20201110 08:38:32.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.080" endtime="20201110 08:38:32.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.075" endtime="20201110 08:38:32.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:32.476" level="INFO">${RESULT} = [{'time': 0.043745361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.787500000000359e-05, 'source_diff': 2.787500000000359e-05}, {'time': 0.043775361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:32.465" endtime="20201110 08:38:32.476"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:32.513" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:32.478" endtime="20201110 08:38:32.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.526" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201110 08:38:32.523" endtime="20201110 08:38:32.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.531" level="INFO">VALUE: [2.787500000000359e-05, 2.7360999999996582e-05, 2.7832999999997943e-05, 2.7277999999998637e-05, 2.79170000000023e-05, 2.7680000000002147e-05, 2.7528000000005826e-05, 2.7457999999994098e-05, 2.7472000000000607e-05, 2.7360999999996582e-05, 2.7526999999999413e-05, 2.769500000000119e-05, 2.7374999999996152e-05, 2.7486000000000177e-05, 2.7486000000000177e-05, 2.7930999999994932e-05, 2.720900000000026e-05, 2.772300000000033e-05, 2.7527999999998887e-05, 2.765300000000248e-05, 2.770900000000076e-05, 2.7583999999997166e-05, 2.747300000000008e-05, 2.8027999999999387e-05, 2.7986000000000677e-05, 2.7138000000002938e-05, 2.7694000000001717e-05, 2.7263999999999067e-05, 2.7249999999999497e-05, 2.7138999999995472e-05, 2.7249999999999497e-05, 2.7610999999996833e-05, 2.7472000000000607e-05, 2.8055000000005992e-05, 2.7263999999999067e-05, 2.7804999999998803e-05, 2.7291999999998207e-05, 2.716700000000155e-05, 2.7916999999995362e-05, 2.7916999999995362e-05, 2.8027999999999387e-05, 2.795900000000101e-05, 2.7263999999999067e-05, 2.7138999999995472e-05, 2.7569999999997596e-05, 2.7708000000001287e-05, 2.7513999999999317e-05, 2.7958000000001537e-05, 2.736100000000352e-05, 2.7320000000004285e-05]</msg>
<status status="PASS" starttime="20201110 08:38:32.528" endtime="20201110 08:38:32.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.515" endtime="20201110 08:38:32.538"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.545" endtime="20201110 08:38:32.547"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:32.553" endtime="20201110 08:38:32.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.548" endtime="20201110 08:38:32.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.540" endtime="20201110 08:38:32.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.017" endtime="20201110 08:38:32.578"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.016" endtime="20201110 08:38:32.579"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.601" endtime="20201110 08:38:32.622"></status>
</kw>
<msg timestamp="20201110 08:38:32.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.598" endtime="20201110 08:38:32.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:32.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:32.626" endtime="20201110 08:38:32.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.632" endtime="20201110 08:38:32.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.591" endtime="20201110 08:38:32.637"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.585" endtime="20201110 08:38:32.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:32.665" endtime="20201110 08:38:33.026"></status>
</kw>
<msg timestamp="20201110 08:38:33.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043679347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043706486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:32.659" endtime="20201110 08:38:33.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043679347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043706486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.035" endtime="20201110 08:38:33.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.054" endtime="20201110 08:38:33.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.646" endtime="20201110 08:38:33.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.640" endtime="20201110 08:38:33.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.072" level="INFO">${RESULT} = [{'time': 0.043706486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.713900000000241e-05, 'source_diff': 2.713900000000241e-05}, {'time': 0.043739486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:33.063" endtime="20201110 08:38:33.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.104" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:33.074" endtime="20201110 08:38:33.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.115" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.113" endtime="20201110 08:38:33.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.120" level="INFO">VALUE: [2.713900000000241e-05, 2.713900000000241e-05, 2.713900000000241e-05, 2.7305999999997776e-05, 2.7694000000001717e-05, 2.758300000000463e-05, 2.7805999999998277e-05, 2.7499999999999747e-05, 2.736100000000352e-05, 2.7249999999999497e-05, 2.768100000000162e-05, 2.716700000000155e-05, 2.8041999999998957e-05, 2.7736000000000427e-05, 2.7388999999995722e-05, 2.8013999999999817e-05, 2.768100000000162e-05, 2.8041999999998957e-05, 2.786100000000402e-05, 2.79170000000023e-05, 2.766700000000205e-05, 2.7707999999994348e-05, 2.7944000000001967e-05, 2.7082999999997193e-05, 2.7137999999996e-05, 2.7166000000002077e-05, 2.7804999999998803e-05, 2.715300000000198e-05, 2.790199999999632e-05, 2.7235999999999927e-05, 2.8013999999999817e-05, 2.7124999999995902e-05, 2.7486000000000177e-05, 2.7708000000001287e-05, 2.8041999999998957e-05, 2.7235999999999927e-05, 2.7694000000001717e-05, 2.7360999999996582e-05, 2.7722000000000857e-05, 2.7694000000001717e-05, 2.7777999999999137e-05, 2.7472000000000607e-05, 2.7222000000000357e-05, 2.7346999999997013e-05, 2.736100000000352e-05, 2.770900000000076e-05, 2.7916999999995362e-05, 2.8000000000000247e-05, 2.7806000000005215e-05, 2.7486000000000177e-05]</msg>
<status status="PASS" starttime="20201110 08:38:33.117" endtime="20201110 08:38:33.122"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.106" endtime="20201110 08:38:33.124"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.130" endtime="20201110 08:38:33.133"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.138" endtime="20201110 08:38:33.160"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.134" endtime="20201110 08:38:33.161"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.126" endtime="20201110 08:38:33.163"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.581" endtime="20201110 08:38:33.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:32.580" endtime="20201110 08:38:33.164"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.187" endtime="20201110 08:38:33.206"></status>
</kw>
<msg timestamp="20201110 08:38:33.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.183" endtime="20201110 08:38:33.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.209" endtime="20201110 08:38:33.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.215" endtime="20201110 08:38:33.219"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.176" endtime="20201110 08:38:33.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.170" endtime="20201110 08:38:33.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.240" endtime="20201110 08:38:33.589"></status>
</kw>
<msg timestamp="20201110 08:38:33.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041952736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.237" endtime="20201110 08:38:33.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041952736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041981625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.599" endtime="20201110 08:38:33.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.618" endtime="20201110 08:38:33.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.228" endtime="20201110 08:38:33.623"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.223" endtime="20201110 08:38:33.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:33.635" level="INFO">${RESULT} = [{'time': 0.041981625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.888900000000416e-05, 'source_diff': 2.888900000000416e-05}, {'time': 0.042012667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:33.626" endtime="20201110 08:38:33.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:33.666" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:33.637" endtime="20201110 08:38:33.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.677" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201110 08:38:33.675" endtime="20201110 08:38:33.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.682" level="INFO">VALUE: [2.888900000000416e-05, 2.8194999999994752e-05, 2.8666999999996112e-05, 2.9000000000001247e-05, 2.8264000000000067e-05, 2.837500000000409e-05, 2.8596999999998263e-05, 2.8902999999996792e-05, 2.8582999999998693e-05, 2.9041999999999957e-05, 2.865300000000348e-05, 2.813900000000341e-05, 2.8805999999999277e-05, 2.8819999999998847e-05, 2.8778000000000137e-05, 2.8583999999998166e-05, 2.8277000000000163e-05, 2.85970000000052e-05, 2.89170000000033e-05, 2.842999999999596e-05, 2.8541999999999457e-05, 2.8624999999997403e-05, 2.894399999999603e-05, 2.8124999999996902e-05, 2.8388999999996722e-05, 2.858300000000563e-05, 2.8804999999999803e-05, 2.869399999999578e-05, 2.815300000000298e-05, 2.858300000000563e-05, 2.8138999999996472e-05, 2.869399999999578e-05, 2.8222000000001357e-05, 2.89170000000033e-05, 2.8582999999998693e-05, 2.894500000000244e-05, 2.869399999999578e-05, 2.868100000000262e-05, 2.8805999999999277e-05, 2.8986000000001677e-05, 2.8916999999996362e-05, 2.8986000000001677e-05, 2.8486000000001177e-05, 2.8236000000000927e-05, 2.8152999999996042e-05, 2.869500000000219e-05, 2.8694999999995252e-05, 2.8638999999996972e-05, 2.812500000000384e-05, 2.8152000000003508e-05]</msg>
<status status="PASS" starttime="20201110 08:38:33.679" endtime="20201110 08:38:33.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.668" endtime="20201110 08:38:33.686"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.692" endtime="20201110 08:38:33.695"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:33.700" endtime="20201110 08:38:33.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.696" endtime="20201110 08:38:33.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.688" endtime="20201110 08:38:33.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.166" endtime="20201110 08:38:33.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.165" endtime="20201110 08:38:33.727"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.749" endtime="20201110 08:38:33.768"></status>
</kw>
<msg timestamp="20201110 08:38:33.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.746" endtime="20201110 08:38:33.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:33.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:33.771" endtime="20201110 08:38:33.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.778" endtime="20201110 08:38:33.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.739" endtime="20201110 08:38:33.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.733" endtime="20201110 08:38:33.784"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:33.801" endtime="20201110 08:38:34.139"></status>
</kw>
<msg timestamp="20201110 08:38:34.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042320389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:33.798" endtime="20201110 08:38:34.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042320389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.149" endtime="20201110 08:38:34.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.167" endtime="20201110 08:38:34.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.790" endtime="20201110 08:38:34.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.786" endtime="20201110 08:38:34.174"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.185" level="INFO">${RESULT} = [{'time': 0.042320389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 2.9152999999997042e-05, 'source_diff': 2.9152999999997042e-05}, {'time': 0.042356403, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.176" endtime="20201110 08:38:34.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.215" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:34.187" endtime="20201110 08:38:34.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.226" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.224" endtime="20201110 08:38:34.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.231" level="INFO">VALUE: [2.9152999999997042e-05, 3.0042000000000957e-05, 2.913900000000441e-05, 2.9152999999997042e-05, 2.9583999999999167e-05, 3.0014000000001817e-05, 2.9152999999997042e-05, 2.9597999999998736e-05, 2.9792000000000707e-05, 2.993100000000387e-05, 2.998700000000215e-05, 2.9361999999998056e-05, 2.9542000000000457e-05, 2.9916000000004828e-05, 2.945900000000251e-05, 2.9137999999998e-05, 3.0012999999995404e-05, 2.9472000000002607e-05, 2.9263999999994128e-05, 2.9388999999997723e-05, 2.990199999999832e-05, 2.9791000000001233e-05, 2.915300000000398e-05, 2.9472000000002607e-05, 2.9194999999995752e-05, 2.9250000000001497e-05, 2.9582999999999693e-05, 3.0042000000000957e-05, 2.993100000000387e-05, 2.969399999999678e-05, 2.913900000000441e-05, 2.9472000000002607e-05, 2.9458000000003037e-05, 2.9110999999998333e-05, 2.9346999999999013e-05, 2.9486000000002177e-05, 2.9582999999999693e-05, 2.9472999999995142e-05, 2.915300000000398e-05, 2.913900000000441e-05, 3.0055999999993588e-05, 2.993100000000387e-05, 2.9472999999995142e-05, 2.9347999999998486e-05, 2.9819000000000373e-05, 2.990300000000473e-05, 2.9472999999995142e-05, 2.9805000000000803e-05, 2.9818999999993434e-05, 2.9805000000000803e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.228" endtime="20201110 08:38:34.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.217" endtime="20201110 08:38:34.234"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.241" endtime="20201110 08:38:34.243"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.249" endtime="20201110 08:38:34.271"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.245" endtime="20201110 08:38:34.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.236" endtime="20201110 08:38:34.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.729" endtime="20201110 08:38:34.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:33.727" endtime="20201110 08:38:34.275"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.298" endtime="20201110 08:38:34.316"></status>
</kw>
<msg timestamp="20201110 08:38:34.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.294" endtime="20201110 08:38:34.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.319" endtime="20201110 08:38:34.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.326" endtime="20201110 08:38:34.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.287" endtime="20201110 08:38:34.331"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.281" endtime="20201110 08:38:34.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.349" endtime="20201110 08:38:34.701"></status>
</kw>
<msg timestamp="20201110 08:38:34.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041870069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.346" endtime="20201110 08:38:34.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041870069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.711" endtime="20201110 08:38:34.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.731" endtime="20201110 08:38:34.735"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.338" endtime="20201110 08:38:34.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.334" endtime="20201110 08:38:34.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:34.750" level="INFO">${RESULT} = [{'time': 0.041900556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.0486999999995712e-05, 'source_diff': 3.0486999999995712e-05}, {'time': 0.041940556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:34.740" endtime="20201110 08:38:34.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:34.782" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:34.752" endtime="20201110 08:38:34.783"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.794" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201110 08:38:34.791" endtime="20201110 08:38:34.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.800" level="INFO">VALUE: [3.0486999999995712e-05, 3.102799999999545e-05, 3.102800000000239e-05, 3.015199999999857e-05, 3.072199999999692e-05, 3.0055000000001053e-05, 3.0264000000002067e-05, 3.0818999999994434e-05, 3.056900000000112e-05, 3.015300000000498e-05, 3.0472000000003607e-05, 3.09579999999976e-05, 3.069399999999778e-05, 3.056900000000112e-05, 3.061099999999983e-05, 3.0347000000000013e-05, 3.023599999999599e-05, 3.104200000000196e-05, 3.0486000000003177e-05, 3.090299999999879e-05, 3.102800000000239e-05, 3.082000000000085e-05, 3.0472000000003607e-05, 3.087499999999965e-05, 3.020900000000326e-05, 3.0472000000003607e-05, 3.0584000000000167e-05, 3.0374999999999153e-05, 3.070900000000376e-05, 3.080600000000128e-05, 3.0249999999995558e-05, 3.023599999999599e-05, 3.0250000000002497e-05, 3.069499999999725e-05, 3.015199999999857e-05, 3.067999999999821e-05, 3.072199999999692e-05, 3.059700000000026e-05, 3.058300000000069e-05, 3.047199999999667e-05, 3.022199999999642e-05, 3.013900000000541e-05, 3.058300000000069e-05, 3.0138999999998473e-05, 3.09300000000054e-05, 3.104199999999502e-05, 3.0347000000000013e-05, 3.0486000000003177e-05, 3.0110999999999333e-05, 3.048599999999624e-05]</msg>
<status status="PASS" starttime="20201110 08:38:34.796" endtime="20201110 08:38:34.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.784" endtime="20201110 08:38:34.803"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.810" endtime="20201110 08:38:34.813"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:34.819" endtime="20201110 08:38:34.841"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.814" endtime="20201110 08:38:34.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.805" endtime="20201110 08:38:34.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.277" endtime="20201110 08:38:34.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.276" endtime="20201110 08:38:34.846"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.870" endtime="20201110 08:38:34.890"></status>
</kw>
<msg timestamp="20201110 08:38:34.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.867" endtime="20201110 08:38:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:34.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:34.894" endtime="20201110 08:38:34.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.901" endtime="20201110 08:38:34.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.859" endtime="20201110 08:38:34.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.853" endtime="20201110 08:38:34.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:34.926" endtime="20201110 08:38:35.288"></status>
</kw>
<msg timestamp="20201110 08:38:35.295" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044597847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:34.922" endtime="20201110 08:38:35.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044597847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044629319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.298" endtime="20201110 08:38:35.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.318" endtime="20201110 08:38:35.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.914" endtime="20201110 08:38:35.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.909" endtime="20201110 08:38:35.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.338" level="INFO">${RESULT} = [{'time': 0.044629319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.147199999999767e-05, 'source_diff': 3.147199999999767e-05}, {'time': 0.044666333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:35.328" endtime="20201110 08:38:35.338"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.373" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:35.340" endtime="20201110 08:38:35.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.385" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.382" endtime="20201110 08:38:35.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.391" level="INFO">VALUE: [3.147199999999767e-05, 3.12500000000035e-05, 3.124999999999656e-05, 3.14579999999981e-05, 3.1332999999994504e-05, 3.2026999999996975e-05, 3.137500000000015e-05, 3.201400000000382e-05, 3.11249999999999e-05, 3.147199999999767e-05, 3.202799999999645e-05, 3.169399999999878e-05, 3.202800000000339e-05, 3.158300000000169e-05, 3.172199999999792e-05, 3.179200000000271e-05, 3.136100000000058e-05, 3.11249999999999e-05, 3.193099999999893e-05, 3.126399999999613e-05, 3.15700000000016e-05, 3.136100000000058e-05, 3.147200000000461e-05, 3.11249999999999e-05, 3.147199999999767e-05, 3.137500000000015e-05, 3.193099999999893e-05, 3.145900000000451e-05, 3.161100000000083e-05, 3.156999999999466e-05, 3.169500000000519e-05, 3.170799999999835e-05, 3.167999999999921e-05, 3.18050000000028e-05, 3.1804999999995864e-05, 3.129199999999527e-05, 3.123599999999699e-05, 3.148600000000418e-05, 3.159700000000126e-05, 3.165299999999954e-05, 3.209800000000124e-05, 3.127800000000264e-05, 3.148600000000418e-05, 3.18050000000028e-05, 3.136100000000058e-05, 3.137500000000015e-05, 3.191699999999936e-05, 3.136100000000058e-05, 3.202799999999645e-05, 3.147199999999767e-05]</msg>
<status status="PASS" starttime="20201110 08:38:35.387" endtime="20201110 08:38:35.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.375" endtime="20201110 08:38:35.394"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.401" endtime="20201110 08:38:35.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.410" endtime="20201110 08:38:35.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.405" endtime="20201110 08:38:35.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.396" endtime="20201110 08:38:35.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.848" endtime="20201110 08:38:35.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:34.847" endtime="20201110 08:38:35.437"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.461" endtime="20201110 08:38:35.481"></status>
</kw>
<msg timestamp="20201110 08:38:35.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.457" endtime="20201110 08:38:35.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:35.484" endtime="20201110 08:38:35.489"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.491" endtime="20201110 08:38:35.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.450" endtime="20201110 08:38:35.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.443" endtime="20201110 08:38:35.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.521" endtime="20201110 08:38:35.862"></status>
</kw>
<msg timestamp="20201110 08:38:35.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044975833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045008083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.517" endtime="20201110 08:38:35.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044975833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045008083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:35.872" endtime="20201110 08:38:35.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.891" endtime="20201110 08:38:35.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.510" endtime="20201110 08:38:35.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.504" endtime="20201110 08:38:35.899"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:35.909" level="INFO">${RESULT} = [{'time': 0.045008083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.224999999999756e-05, 'source_diff': 3.224999999999756e-05}, {'time': 0.045043097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:35.900" endtime="20201110 08:38:35.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:35.947" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:35.912" endtime="20201110 08:38:35.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.961" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201110 08:38:35.958" endtime="20201110 08:38:35.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:35.966" level="INFO">VALUE: [3.224999999999756e-05, 3.2360999999994644e-05, 3.298599999999874e-05, 3.305500000000405e-05, 3.223599999999799e-05, 3.216699999999961e-05, 3.287500000000165e-05, 3.304200000000396e-05, 3.22500000000045e-05, 3.238900000000072e-05, 3.249999999999781e-05, 3.223599999999799e-05, 3.236100000000158e-05, 3.291700000000036e-05, 3.2596999999995324e-05, 3.291700000000036e-05, 3.220900000000526e-05, 3.280599999999634e-05, 3.283400000000242e-05, 3.290300000000079e-05, 3.287500000000165e-05, 3.209700000000176e-05, 3.258400000000217e-05, 3.2262999999997655e-05, 3.252799999999695e-05, 3.245899999999857e-05, 3.215200000000057e-05, 3.3026999999997975e-05, 3.26380000000015e-05, 3.269399999999978e-05, 3.247199999999867e-05, 3.2568999999996184e-05, 3.304199999999702e-05, 3.2596999999995324e-05, 3.213900000000047e-05, 3.272199999999892e-05, 3.2568999999996184e-05, 3.247199999999867e-05, 3.304199999999702e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.215300000000004e-05, 3.280599999999634e-05, 3.293099999999993e-05, 3.283300000000294e-05, 3.268100000000662e-05, 3.2318999999995934e-05, 3.215300000000004e-05, 3.258400000000217e-05, 3.22779999999967e-05]</msg>
<status status="PASS" starttime="20201110 08:38:35.963" endtime="20201110 08:38:35.968"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.950" endtime="20201110 08:38:35.970"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:35.978" endtime="20201110 08:38:35.981"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:35.987" endtime="20201110 08:38:36.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.983" endtime="20201110 08:38:36.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.972" endtime="20201110 08:38:36.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.439" endtime="20201110 08:38:36.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:35.438" endtime="20201110 08:38:36.013"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.036" endtime="20201110 08:38:36.055"></status>
</kw>
<msg timestamp="20201110 08:38:36.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.032" endtime="20201110 08:38:36.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.059" endtime="20201110 08:38:36.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.065" endtime="20201110 08:38:36.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.025" endtime="20201110 08:38:36.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.020" endtime="20201110 08:38:36.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.088" endtime="20201110 08:38:36.424"></status>
</kw>
<msg timestamp="20201110 08:38:36.431" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042509042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042542958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.085" endtime="20201110 08:38:36.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042509042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042542958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.433" endtime="20201110 08:38:36.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.452" endtime="20201110 08:38:36.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.078" endtime="20201110 08:38:36.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.073" endtime="20201110 08:38:36.459"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:36.469" level="INFO">${RESULT} = [{'time': 0.042542958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.391600000000189e-05, 'source_diff': 3.391600000000189e-05}, {'time': 0.042583944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:36.460" endtime="20201110 08:38:36.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:36.501" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:36.471" endtime="20201110 08:38:36.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.512" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201110 08:38:36.510" endtime="20201110 08:38:36.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.517" level="INFO">VALUE: [3.391600000000189e-05, 3.3374999999995214e-05, 3.318000000000071e-05, 3.348600000000618e-05, 3.401399999999888e-05, 3.390200000000232e-05, 3.370800000000035e-05, 3.324999999999856e-05, 3.372199999999992e-05, 3.368000000000121e-05, 3.391600000000189e-05, 3.338900000000172e-05, 3.366700000000111e-05, 3.326400000000507e-05, 3.347199999999967e-05, 3.358300000000369e-05, 3.369399999999384e-05, 3.370800000000035e-05, 3.402799999999845e-05, 3.383400000000342e-05, 3.3916999999994424e-05, 3.3374999999995214e-05, 3.370899999999982e-05, 3.3152999999994104e-05, 3.35979999999958e-05, 3.324999999999856e-05, 3.3290999999997795e-05, 3.3138999999994534e-05, 3.3804999999997865e-05, 3.384700000000351e-05, 3.322199999999942e-05, 3.33050000000043e-05, 3.3360999999995644e-05, 3.366600000000164e-05, 3.315300000000104e-05, 3.401400000000582e-05, 3.3804999999997865e-05, 3.391600000000189e-05, 3.313900000000147e-05, 3.330599999999684e-05, 3.347199999999967e-05, 3.34580000000001e-05, 3.380599999999734e-05, 3.309700000000276e-05, 3.404199999999802e-05, 3.347199999999967e-05, 3.380599999999734e-05, 3.404200000000496e-05, 3.347199999999967e-05, 3.315300000000104e-05]</msg>
<status status="PASS" starttime="20201110 08:38:36.514" endtime="20201110 08:38:36.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.503" endtime="20201110 08:38:36.521"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.527" endtime="20201110 08:38:36.530"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:36.535" endtime="20201110 08:38:36.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.531" endtime="20201110 08:38:36.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.522" endtime="20201110 08:38:36.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.015" endtime="20201110 08:38:36.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.014" endtime="20201110 08:38:36.562"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.586" endtime="20201110 08:38:36.605"></status>
</kw>
<msg timestamp="20201110 08:38:36.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.582" endtime="20201110 08:38:36.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:36.609" endtime="20201110 08:38:36.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.615" endtime="20201110 08:38:36.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.575" endtime="20201110 08:38:36.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.569" endtime="20201110 08:38:36.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:36.639" endtime="20201110 08:38:36.973"></status>
</kw>
<msg timestamp="20201110 08:38:36.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044026847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.635" endtime="20201110 08:38:36.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:36.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043992042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044026847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:36.983" endtime="20201110 08:38:37.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.002" endtime="20201110 08:38:37.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.628" endtime="20201110 08:38:37.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.623" endtime="20201110 08:38:37.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.019" level="INFO">${RESULT} = [{'time': 0.044026847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.4804999999998865e-05, 'source_diff': 3.4804999999998865e-05}, {'time': 0.044066875, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:37.010" endtime="20201110 08:38:37.020"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.052" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:37.022" endtime="20201110 08:38:37.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.064" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.062" endtime="20201110 08:38:37.065"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.070" level="INFO">VALUE: [3.4804999999998865e-05, 3.4832999999998004e-05, 3.49450000000015e-05, 3.4596999999997324e-05, 3.415300000000204e-05, 3.491700000000236e-05, 3.447200000000067e-05, 3.493100000000193e-05, 3.4152999999995104e-05, 3.448600000000024e-05, 3.480599999999834e-05, 3.470900000000082e-05, 3.502799999999945e-05, 3.448600000000024e-05, 3.415300000000204e-05, 3.434800000000349e-05, 3.426399999999913e-05, 3.452799999999895e-05, 3.4276999999999225e-05, 3.5054999999999115e-05, 3.491700000000236e-05, 3.424999999999956e-05, 3.475000000000006e-05, 3.490199999999638e-05, 3.449999999999981e-05, 3.466600000000264e-05, 3.4346999999997074e-05, 3.436100000000358e-05, 3.452799999999895e-05, 3.4804999999998865e-05, 3.430600000000478e-05, 3.469400000000178e-05, 3.4360999999996644e-05, 3.490300000000279e-05, 3.4930999999994994e-05, 3.469400000000178e-05, 3.423599999999999e-05, 3.470799999999441e-05, 3.479200000000571e-05, 3.4138999999995534e-05, 3.423599999999999e-05, 3.459800000000374e-05, 3.45979999999968e-05, 3.49450000000015e-05, 3.4846999999997574e-05, 3.465300000000254e-05, 3.447300000000014e-05, 3.422299999999989e-05, 3.4540999999999045e-05, 3.4804999999998865e-05]</msg>
<status status="PASS" starttime="20201110 08:38:37.067" endtime="20201110 08:38:37.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.055" endtime="20201110 08:38:37.073"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.079" endtime="20201110 08:38:37.082"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.088" endtime="20201110 08:38:37.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.083" endtime="20201110 08:38:37.111"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.075" endtime="20201110 08:38:37.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.564" endtime="20201110 08:38:37.113"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:36.563" endtime="20201110 08:38:37.114"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.136" endtime="20201110 08:38:37.156"></status>
</kw>
<msg timestamp="20201110 08:38:37.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.133" endtime="20201110 08:38:37.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.163" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.159" endtime="20201110 08:38:37.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.165" endtime="20201110 08:38:37.169"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.126" endtime="20201110 08:38:37.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.120" endtime="20201110 08:38:37.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.189" endtime="20201110 08:38:37.522"></status>
</kw>
<msg timestamp="20201110 08:38:37.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042411333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.185" endtime="20201110 08:38:37.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042375292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042411333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.534" endtime="20201110 08:38:37.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.555" endtime="20201110 08:38:37.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.178" endtime="20201110 08:38:37.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.173" endtime="20201110 08:38:37.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:37.576" level="INFO">${RESULT} = [{'time': 0.042411333, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.6041000000000545e-05, 'source_diff': 3.6041000000000545e-05}, {'time': 0.042452319, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:37.566" endtime="20201110 08:38:37.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:37.610" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:37.579" endtime="20201110 08:38:37.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.621" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201110 08:38:37.619" endtime="20201110 08:38:37.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.627" level="INFO">VALUE: [3.6041000000000545e-05, 3.591600000000389e-05, 3.5124999999996964e-05, 3.525000000000056e-05, 3.519400000000228e-05, 3.523600000000099e-05, 3.591600000000389e-05, 3.570800000000235e-05, 3.5110999999997394e-05, 3.559700000000526e-05, 3.545799999999516e-05, 3.524999999999362e-05, 3.601400000000088e-05, 3.518100000000218e-05, 3.5360999999997644e-05, 3.547200000000167e-05, 3.558399999999823e-05, 3.569500000000225e-05, 3.57780000000002e-05, 3.576400000000063e-05, 3.5138999999996534e-05, 3.538799999999731e-05, 3.515300000000304e-05, 3.525000000000056e-05, 3.602800000000045e-05, 3.5374999999997214e-05, 3.513900000000347e-05, 3.536199999999712e-05, 3.547200000000167e-05, 3.525000000000056e-05, 3.547200000000167e-05, 3.5818999999999435e-05, 3.591599999999695e-05, 3.5776999999993786e-05, 3.5194999999994814e-05, 3.559700000000526e-05, 3.588900000000422e-05, 3.54859999999943e-05, 3.5902999999996854e-05, 3.568000000000321e-05, 3.526400000000013e-05, 3.525000000000056e-05, 3.602800000000045e-05, 3.604200000000002e-05, 3.523600000000099e-05, 3.513900000000347e-05, 3.526400000000013e-05, 3.51250000000039e-05, 3.580599999999934e-05, 3.604200000000002e-05]</msg>
<status status="PASS" starttime="20201110 08:38:37.623" endtime="20201110 08:38:37.633"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.612" endtime="20201110 08:38:37.635"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.641" endtime="20201110 08:38:37.644"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:37.649" endtime="20201110 08:38:37.671"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.645" endtime="20201110 08:38:37.673"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.637" endtime="20201110 08:38:37.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.116" endtime="20201110 08:38:37.675"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.115" endtime="20201110 08:38:37.675"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.698" endtime="20201110 08:38:37.718"></status>
</kw>
<msg timestamp="20201110 08:38:37.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.695" endtime="20201110 08:38:37.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:37.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:37.721" endtime="20201110 08:38:37.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.727" endtime="20201110 08:38:37.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.688" endtime="20201110 08:38:37.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.682" endtime="20201110 08:38:37.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:37.750" endtime="20201110 08:38:38.084"></status>
</kw>
<msg timestamp="20201110 08:38:38.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042461236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042498264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:37.747" endtime="20201110 08:38:38.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042461236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042498264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.094" endtime="20201110 08:38:38.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.112" endtime="20201110 08:38:38.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.740" endtime="20201110 08:38:38.118"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.735" endtime="20201110 08:38:38.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.130" level="INFO">${RESULT} = [{'time': 0.042498264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.702800000000145e-05, 'source_diff': 3.702800000000145e-05}, {'time': 0.042543278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.121" endtime="20201110 08:38:38.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.161" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:38.132" endtime="20201110 08:38:38.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.173" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.169" endtime="20201110 08:38:38.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.178" level="INFO">VALUE: [3.702800000000145e-05, 3.6596999999999325e-05, 3.656999999999966e-05, 3.622300000000189e-05, 3.669500000000325e-05, 3.680600000000034e-05, 3.615300000000404e-05, 3.622300000000189e-05, 3.6972999999995704e-05, 3.6902999999997854e-05, 3.7041000000001545e-05, 3.6874999999998714e-05, 3.7027000000001975e-05, 3.6582999999999755e-05, 3.670799999999641e-05, 3.6555000000000615e-05, 3.6888999999998284e-05, 3.669400000000378e-05, 3.64859999999953e-05, 3.6374999999998214e-05, 3.6374999999998214e-05, 3.647200000000267e-05, 3.670800000000335e-05, 3.6360999999998644e-05, 3.69450000000035e-05, 3.637500000000515e-05, 3.6888999999998284e-05, 3.6124999999997964e-05, 3.637500000000515e-05, 3.669500000000325e-05, 3.6346999999999074e-05, 3.6610999999998894e-05, 3.658399999999923e-05, 3.623700000000146e-05, 3.6833000000000005e-05, 3.624999999999462e-05, 3.702800000000145e-05, 3.670800000000335e-05, 3.670799999999641e-05, 3.6582999999999755e-05, 3.672200000000292e-05, 3.691599999999795e-05, 3.691600000000489e-05, 3.650000000000181e-05, 3.667999999999727e-05, 3.61250000000049e-05, 3.62780000000007e-05, 3.61250000000049e-05, 3.6833000000000005e-05, 3.615300000000404e-05]</msg>
<status status="PASS" starttime="20201110 08:38:38.175" endtime="20201110 08:38:38.180"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.162" endtime="20201110 08:38:38.182"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.188" endtime="20201110 08:38:38.191"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.196" endtime="20201110 08:38:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.192" endtime="20201110 08:38:38.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.183" endtime="20201110 08:38:38.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.677" endtime="20201110 08:38:38.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:37.676" endtime="20201110 08:38:38.222"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.245" endtime="20201110 08:38:38.264"></status>
</kw>
<msg timestamp="20201110 08:38:38.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.241" endtime="20201110 08:38:38.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.268" endtime="20201110 08:38:38.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.274" endtime="20201110 08:38:38.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.234" endtime="20201110 08:38:38.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.229" endtime="20201110 08:38:38.281"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.297" endtime="20201110 08:38:38.632"></status>
</kw>
<msg timestamp="20201110 08:38:38.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042461861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042499667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.294" endtime="20201110 08:38:38.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042461861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042499667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.643" endtime="20201110 08:38:38.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.661" endtime="20201110 08:38:38.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.287" endtime="20201110 08:38:38.667"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.282" endtime="20201110 08:38:38.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:38.679" level="INFO">${RESULT} = [{'time': 0.042499667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.780600000000134e-05, 'source_diff': 3.780600000000134e-05}, {'time': 0.042539667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:38.670" endtime="20201110 08:38:38.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:38.710" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:38.681" endtime="20201110 08:38:38.710"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.721" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201110 08:38:38.718" endtime="20201110 08:38:38.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.726" level="INFO">VALUE: [3.780600000000134e-05, 3.770900000000382e-05, 3.786199999999962e-05, 3.768100000000468e-05, 3.7833000000001005e-05, 3.726399999999519e-05, 3.725000000000256e-05, 3.7916999999998424e-05, 3.770799999999741e-05, 3.7138000000006e-05, 3.7180999999997244e-05, 3.8041000000002545e-05, 3.791599999999895e-05, 3.7124999999998964e-05, 3.8055000000002115e-05, 3.802800000000245e-05, 3.7138999999998534e-05, 3.7930999999997994e-05, 3.7138999999998534e-05, 3.74580000000041e-05, 3.7930999999997994e-05, 3.7180999999997244e-05, 3.7416999999997924e-05, 3.805600000000159e-05, 3.780600000000134e-05, 3.804200000000202e-05, 3.7888999999999284e-05, 3.780600000000134e-05, 3.777799999999526e-05, 3.750000000000281e-05, 3.7818999999994496e-05, 3.769500000000425e-05, 3.7152999999998104e-05, 3.7916999999998424e-05, 3.769399999999784e-05, 3.749999999999587e-05, 3.7597000000000325e-05, 3.791599999999895e-05, 3.7819000000001435e-05, 3.713900000000547e-05, 3.801399999999594e-05, 3.7666999999998174e-05, 3.7124999999998964e-05, 3.802799999999551e-05, 3.7804999999994926e-05, 3.7152999999998104e-05, 3.7360999999999644e-05, 3.755600000000109e-05, 3.7680999999997744e-05, 3.7569000000001185e-05]</msg>
<status status="PASS" starttime="20201110 08:38:38.723" endtime="20201110 08:38:38.729"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.712" endtime="20201110 08:38:38.731"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.737" endtime="20201110 08:38:38.740"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:38.746" endtime="20201110 08:38:38.768"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.741" endtime="20201110 08:38:38.769"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.732" endtime="20201110 08:38:38.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.224" endtime="20201110 08:38:38.771"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.223" endtime="20201110 08:38:38.772"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.795" endtime="20201110 08:38:38.815"></status>
</kw>
<msg timestamp="20201110 08:38:38.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.792" endtime="20201110 08:38:38.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:38.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:38.818" endtime="20201110 08:38:38.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.824" endtime="20201110 08:38:38.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.784" endtime="20201110 08:38:38.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.779" endtime="20201110 08:38:38.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:38.848" endtime="20201110 08:38:39.181"></status>
</kw>
<msg timestamp="20201110 08:38:39.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042381611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042420167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:38.844" endtime="20201110 08:38:39.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042381611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042420167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.191" endtime="20201110 08:38:39.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.210" endtime="20201110 08:38:39.213"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.837" endtime="20201110 08:38:39.215"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.832" endtime="20201110 08:38:39.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.227" level="INFO">${RESULT} = [{'time': 0.042420167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 3.855600000000209e-05, 'source_diff': 3.855600000000209e-05}, {'time': 0.042466167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:39.218" endtime="20201110 08:38:39.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.257" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:39.229" endtime="20201110 08:38:39.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.269" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.266" endtime="20201110 08:38:39.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.274" level="INFO">VALUE: [3.855600000000209e-05, 3.8916999999999424e-05, 3.8875000000000715e-05, 3.868100000000568e-05, 3.873599999999755e-05, 3.870799999999841e-05, 3.851399999999644e-05, 3.892999999999952e-05, 3.874999999999712e-05, 3.9068999999995746e-05, 3.8583000000001755e-05, 3.82780000000027e-05, 3.867999999999927e-05, 3.8597000000001325e-05, 3.872199999999798e-05, 3.826399999999619e-05, 3.901399999999694e-05, 3.823599999999705e-05, 3.855599999999515e-05, 3.8111000000000395e-05, 3.881999999999497e-05, 3.8526999999996536e-05, 3.905599999999565e-05, 3.8361000000000645e-05, 3.904200000000302e-05, 3.8152999999999104e-05, 3.8138999999999534e-05, 3.841700000000586e-05, 3.825000000000356e-05, 3.895799999999866e-05, 3.8916999999999424e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.8819000000002435e-05, 3.8818999999995496e-05, 3.819500000000475e-05, 3.8582999999994816e-05, 3.8611000000000895e-05, 3.904199999999608e-05, 3.824999999999662e-05, 3.850000000000381e-05, 3.8333000000001505e-05, 3.8416999999998924e-05, 3.905600000000259e-05, 3.8625000000000465e-05, 3.8583000000001755e-05, 3.8166999999998674e-05, 3.825000000000356e-05, 3.881999999999497e-05, 3.8124999999999964e-05]</msg>
<status status="PASS" starttime="20201110 08:38:39.271" endtime="20201110 08:38:39.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.259" endtime="20201110 08:38:39.277"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.283" endtime="20201110 08:38:39.288"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.293" endtime="20201110 08:38:39.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.289" endtime="20201110 08:38:39.317"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.279" endtime="20201110 08:38:39.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.774" endtime="20201110 08:38:39.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:38.773" endtime="20201110 08:38:39.319"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.342" endtime="20201110 08:38:39.361"></status>
</kw>
<msg timestamp="20201110 08:38:39.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.338" endtime="20201110 08:38:39.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.368" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.364" endtime="20201110 08:38:39.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.371" endtime="20201110 08:38:39.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.331" endtime="20201110 08:38:39.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.325" endtime="20201110 08:38:39.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.394" endtime="20201110 08:38:39.757"></status>
</kw>
<msg timestamp="20201110 08:38:39.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.391" endtime="20201110 08:38:39.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041860833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041900861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.767" endtime="20201110 08:38:39.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.786" endtime="20201110 08:38:39.789"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.384" endtime="20201110 08:38:39.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.379" endtime="20201110 08:38:39.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:39.803" level="INFO">${RESULT} = [{'time': 0.041900861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.002799999999751e-05, 'source_diff': 4.002799999999751e-05}, {'time': 0.041944861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:39.794" endtime="20201110 08:38:39.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:39.833" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:39.805" endtime="20201110 08:38:39.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.844" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201110 08:38:39.842" endtime="20201110 08:38:39.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.850" level="INFO">VALUE: [4.002799999999751e-05, 3.9917000000000424e-05, 3.9847000000002575e-05, 3.9153000000000104e-05, 3.9361000000001645e-05, 3.976400000000463e-05, 3.9597000000002325e-05, 3.981999999999597e-05, 3.9944999999999564e-05, 3.94859999999983e-05, 3.9139000000000534e-05, 3.9917000000000424e-05, 3.9708999999998884e-05, 3.9472999999998204e-05, 3.99859999999988e-05, 3.9262999999997716e-05, 3.9903000000000854e-05, 3.925000000000456e-05, 3.9597000000002325e-05, 3.913800000000106e-05, 3.9111000000001395e-05, 4.0083000000003255e-05, 3.9194999999998814e-05, 3.9166999999999674e-05, 4.0040999999997606e-05, 3.9597000000002325e-05, 3.947199999999873e-05, 3.9347000000002075e-05, 4.004200000000402e-05, 3.9153000000000104e-05, 3.934800000000155e-05, 3.9653000000000604e-05, 3.9375000000001215e-05, 3.9361000000001645e-05, 3.9153000000000104e-05, 3.9360999999994706e-05, 3.958399999999529e-05, 4.004199999999708e-05, 3.982000000000291e-05, 3.9917000000000424e-05, 3.948700000000471e-05, 3.95980000000018e-05, 3.991600000000095e-05, 3.94859999999983e-05, 3.973599999999855e-05, 3.913800000000106e-05, 3.9819000000003435e-05, 3.991600000000095e-05, 3.9139000000000534e-05, 3.9403000000000354e-05]</msg>
<status status="PASS" starttime="20201110 08:38:39.847" endtime="20201110 08:38:39.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.835" endtime="20201110 08:38:39.853"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.859" endtime="20201110 08:38:39.862"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:39.868" endtime="20201110 08:38:39.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.863" endtime="20201110 08:38:39.894"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.855" endtime="20201110 08:38:39.896"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.321" endtime="20201110 08:38:39.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.320" endtime="20201110 08:38:39.897"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.920" endtime="20201110 08:38:39.940"></status>
</kw>
<msg timestamp="20201110 08:38:39.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.916" endtime="20201110 08:38:39.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:39.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:39.943" endtime="20201110 08:38:39.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.950" endtime="20201110 08:38:39.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.909" endtime="20201110 08:38:39.955"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.903" endtime="20201110 08:38:39.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:39.973" endtime="20201110 08:38:40.318"></status>
</kw>
<msg timestamp="20201110 08:38:40.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042791472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042831736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:39.970" endtime="20201110 08:38:40.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042791472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042831736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.328" endtime="20201110 08:38:40.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.347" endtime="20201110 08:38:40.351"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.962" endtime="20201110 08:38:40.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.958" endtime="20201110 08:38:40.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.364" level="INFO">${RESULT} = [{'time': 0.042831736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.026400000000513e-05, 'source_diff': 4.026400000000513e-05}, {'time': 0.042874778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:40.355" endtime="20201110 08:38:40.365"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.395" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:40.367" endtime="20201110 08:38:40.395"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.406" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.403" endtime="20201110 08:38:40.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.411" level="INFO">VALUE: [4.026400000000513e-05, 4.0194999999999814e-05, 4.04859999999993e-05, 4.029199999999733e-05, 4.0153000000001104e-05, 4.08059999999974e-05, 4.105600000000459e-05, 4.0417000000000924e-05, 4.0181000000000244e-05, 4.0917000000001424e-05, 4.0708999999999884e-05, 4.082000000000391e-05, 4.0361000000002645e-05, 4.0222999999998954e-05, 4.0695000000000314e-05, 4.025000000000556e-05, 4.015200000000163e-05, 4.058399999999629e-05, 4.0417000000000924e-05, 4.1026999999999036e-05, 4.0069000000003685e-05, 4.0597000000003325e-05, 4.091600000000195e-05, 4.072199999999998e-05, 4.0153000000001104e-05, 4.031999999999647e-05, 4.0153000000001104e-05, 4.024999999999862e-05, 4.023599999999905e-05, 4.0972999999999704e-05, 4.0903000000001855e-05, 4.026399999999819e-05, 4.0583000000003755e-05, 4.057000000000366e-05, 4.024999999999862e-05, 4.0903000000001855e-05, 4.0832999999997066e-05, 4.024999999999862e-05, 4.026399999999819e-05, 4.015199999999469e-05, 4.0874999999995776e-05, 4.0695000000000314e-05, 4.036200000000212e-05, 4.0582999999996816e-05, 4.0374999999995276e-05, 4.0791000000005295e-05, 4.0583000000003755e-05, 4.0889000000002285e-05, 4.0818999999997496e-05, 4.091600000000195e-05]</msg>
<status status="PASS" starttime="20201110 08:38:40.408" endtime="20201110 08:38:40.413"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.397" endtime="20201110 08:38:40.414"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.421" endtime="20201110 08:38:40.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.429" endtime="20201110 08:38:40.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.425" endtime="20201110 08:38:40.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.416" endtime="20201110 08:38:40.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.899" endtime="20201110 08:38:40.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:39.898" endtime="20201110 08:38:40.455"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.479" endtime="20201110 08:38:40.498"></status>
</kw>
<msg timestamp="20201110 08:38:40.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.476" endtime="20201110 08:38:40.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:40.502" endtime="20201110 08:38:40.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.508" endtime="20201110 08:38:40.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.469" endtime="20201110 08:38:40.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.461" endtime="20201110 08:38:40.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.531" endtime="20201110 08:38:40.865"></status>
</kw>
<msg timestamp="20201110 08:38:40.872" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043622917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.528" endtime="20201110 08:38:40.872"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043622917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:40.874" endtime="20201110 08:38:40.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.893" endtime="20201110 08:38:40.897"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.521" endtime="20201110 08:38:40.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.516" endtime="20201110 08:38:40.900"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:40.910" level="INFO">${RESULT} = [{'time': 0.043622917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.18059999999984e-05, 'source_diff': 4.18059999999984e-05}, {'time': 0.043666917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:40.901" endtime="20201110 08:38:40.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:40.941" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:40.912" endtime="20201110 08:38:40.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.952" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201110 08:38:40.949" endtime="20201110 08:38:40.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:40.957" level="INFO">VALUE: [4.18059999999984e-05, 4.1139000000002535e-05, 4.197200000000123e-05, 4.202799999999951e-05, 4.201399999999994e-05, 4.1096999999996886e-05, 4.113800000000306e-05, 4.1375000000003215e-05, 4.1153000000002105e-05, 4.147200000000073e-05, 4.1082999999997316e-05, 4.1388999999995846e-05, 4.1902999999995916e-05, 4.1653000000002605e-05, 4.170799999999447e-05, 4.202800000000645e-05, 4.170800000000141e-05, 4.197200000000123e-05, 4.179199999999883e-05, 4.1139000000002535e-05, 4.1346999999997136e-05, 4.19860000000008e-05, 4.1375000000003215e-05, 4.1903000000002855e-05, 4.205600000000559e-05, 4.1360999999996706e-05, 4.1931000000001994e-05, 4.158399999999729e-05, 4.124999999999962e-05, 4.1318999999997996e-05, 4.1375000000003215e-05, 4.1360999999996706e-05, 4.2096999999997886e-05, 4.1361000000003645e-05, 4.1124999999996026e-05, 4.201399999999994e-05, 4.14860000000003e-05, 4.204199999999908e-05, 4.205600000000559e-05, 4.1138999999995596e-05, 4.1818999999998496e-05, 4.1917000000002425e-05, 4.1568999999998246e-05, 4.1695000000001314e-05, 4.14860000000003e-05, 4.1917000000002425e-05, 4.1389000000002785e-05, 4.183399999999754e-05, 4.2124999999997026e-05, 4.1459000000000634e-05]</msg>
<status status="PASS" starttime="20201110 08:38:40.954" endtime="20201110 08:38:40.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.943" endtime="20201110 08:38:40.960"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:40.967" endtime="20201110 08:38:40.969"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:40.975" endtime="20201110 08:38:40.997"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.971" endtime="20201110 08:38:40.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.962" endtime="20201110 08:38:41.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.457" endtime="20201110 08:38:41.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:40.456" endtime="20201110 08:38:41.001"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.024" endtime="20201110 08:38:41.043"></status>
</kw>
<msg timestamp="20201110 08:38:41.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.020" endtime="20201110 08:38:41.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.046" endtime="20201110 08:38:41.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.052" endtime="20201110 08:38:41.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.013" endtime="20201110 08:38:41.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.007" endtime="20201110 08:38:41.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.078" endtime="20201110 08:38:41.412"></status>
</kw>
<msg timestamp="20201110 08:38:41.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042136208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:41.074" endtime="20201110 08:38:41.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0420935, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042136208, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:38:41.422" endtime="20201110 08:38:41.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.441" endtime="20201110 08:38:41.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.067" endtime="20201110 08:38:41.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.062" endtime="20201110 08:38:41.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:41.458" level="INFO">${RESULT} = [{'time': 0.042136208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.270800000000241e-05, 'source_diff': 4.270800000000241e-05}, {'time': 0.04218825, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:41.449" endtime="20201110 08:38:41.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:41.489" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:41.460" endtime="20201110 08:38:41.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.500" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201110 08:38:41.497" endtime="20201110 08:38:41.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.505" level="INFO">VALUE: [4.270800000000241e-05, 4.3068999999999746e-05, 4.270800000000241e-05, 4.2582999999998816e-05, 4.2568999999999246e-05, 4.300000000000137e-05, 4.2375000000004215e-05, 4.26939999999959e-05, 4.2346999999998136e-05, 4.279199999999983e-05, 4.270799999999547e-05, 4.2930999999996056e-05, 4.24860000000013e-05, 4.223600000000105e-05, 4.2596999999998386e-05, 4.258399999999829e-05, 4.305599999999965e-05, 4.225000000000062e-05, 4.2902999999996916e-05, 4.2360999999997706e-05, 4.2458999999994695e-05, 4.2124999999997026e-05, 4.2375000000004215e-05, 4.247200000000173e-05, 4.2360999999997706e-05, 4.2818999999999496e-05, 4.2346999999998136e-05, 4.2430999999995556e-05, 4.247200000000173e-05, 4.2568999999999246e-05, 4.24860000000013e-05, 4.279199999999983e-05, 4.250000000000087e-05, 4.2945000000002564e-05, 4.279199999999983e-05, 4.2388999999996846e-05, 4.24860000000013e-05, 4.225000000000062e-05, 4.2930999999996056e-05, 4.2723000000001454e-05, 4.302800000000051e-05, 4.2874999999997776e-05, 4.275000000000112e-05, 4.230600000000584e-05, 4.2986999999994335e-05, 4.236200000000412e-05, 4.213799999999712e-05, 4.2804999999999926e-05, 4.2568999999999246e-05, 4.2832999999999066e-05]</msg>
<status status="PASS" starttime="20201110 08:38:41.502" endtime="20201110 08:38:41.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.490" endtime="20201110 08:38:41.508"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.515" endtime="20201110 08:38:41.517"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:41.523" endtime="20201110 08:38:41.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.518" endtime="20201110 08:38:41.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.510" endtime="20201110 08:38:41.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.003" endtime="20201110 08:38:41.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.002" endtime="20201110 08:38:41.549"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.571" endtime="20201110 08:38:41.590"></status>
</kw>
<msg timestamp="20201110 08:38:41.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.568" endtime="20201110 08:38:41.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:41.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:41.594" endtime="20201110 08:38:41.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.600" endtime="20201110 08:38:41.604"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.561" endtime="20201110 08:38:41.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.555" endtime="20201110 08:38:41.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:41.625" endtime="20201110 08:38:41.987"></status>
</kw>
<msg timestamp="20201110 08:38:41.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041931181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.622" endtime="20201110 08:38:41.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041931181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041975028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:41.998" endtime="20201110 08:38:42.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.018" endtime="20201110 08:38:42.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.613" endtime="20201110 08:38:42.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.608" endtime="20201110 08:38:42.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.037" level="INFO">${RESULT} = [{'time': 0.041975028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.3846999999999636e-05, 'source_diff': 4.3846999999999636e-05}, {'time': 0.042027, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:42.027" endtime="20201110 08:38:42.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.069" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:42.039" endtime="20201110 08:38:42.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.081" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.078" endtime="20201110 08:38:42.081"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.087" level="INFO">VALUE: [4.3846999999999636e-05, 4.34860000000023e-05, 4.3416999999996986e-05, 4.3569000000000246e-05, 4.3889000000005285e-05, 4.3903000000004855e-05, 4.381999999999997e-05, 4.3694999999996376e-05, 4.3695000000003315e-05, 4.402800000000151e-05, 4.402800000000151e-05, 4.402800000000151e-05, 4.359799999999886e-05, 4.336199999999818e-05, 4.4083000000000316e-05, 4.391599999999801e-05, 4.376400000000169e-05, 4.3346999999999136e-05, 4.370799999999647e-05, 4.3138999999997596e-05, 4.3152999999997166e-05, 4.3360999999998706e-05, 4.402799999999457e-05, 4.393000000000452e-05, 4.405599999999371e-05, 4.347200000000273e-05, 4.38060000000004e-05, 4.355600000000015e-05, 4.3610999999998956e-05, 4.347200000000273e-05, 4.325000000000162e-05, 4.3889000000005285e-05, 4.379200000000083e-05, 4.3695000000003315e-05, 4.3473000000002204e-05, 4.326399999999425e-05, 4.400000000000237e-05, 4.3360999999998706e-05, 4.3473000000002204e-05, 4.348599999999536e-05, 4.3360999999998706e-05, 4.355499999999374e-05, 4.404100000000161e-05, 4.4013999999995e-05, 4.327800000000076e-05, 4.3124999999998026e-05, 4.3167000000003675e-05, 4.3652999999997666e-05, 4.4096999999999886e-05, 4.3596999999999386e-05]</msg>
<status status="PASS" starttime="20201110 08:38:42.083" endtime="20201110 08:38:42.088"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.071" endtime="20201110 08:38:42.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.097" endtime="20201110 08:38:42.100"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.106" endtime="20201110 08:38:42.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.101" endtime="20201110 08:38:42.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.092" endtime="20201110 08:38:42.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.551" endtime="20201110 08:38:42.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:41.550" endtime="20201110 08:38:42.133"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.157" endtime="20201110 08:38:42.178"></status>
</kw>
<msg timestamp="20201110 08:38:42.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.154" endtime="20201110 08:38:42.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.182" endtime="20201110 08:38:42.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.188" endtime="20201110 08:38:42.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.146" endtime="20201110 08:38:42.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.140" endtime="20201110 08:38:42.196"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.213" endtime="20201110 08:38:42.576"></status>
</kw>
<msg timestamp="20201110 08:38:42.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044814611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044858875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.210" endtime="20201110 08:38:42.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044814611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044858875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.586" endtime="20201110 08:38:42.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.606" endtime="20201110 08:38:42.610"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.202" endtime="20201110 08:38:42.611"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.197" endtime="20201110 08:38:42.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:42.624" level="INFO">${RESULT} = [{'time': 0.044858875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.426400000000219e-05, 'source_diff': 4.426400000000219e-05}, {'time': 0.044909875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:42.615" endtime="20201110 08:38:42.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:42.657" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:42.627" endtime="20201110 08:38:42.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.668" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201110 08:38:42.666" endtime="20201110 08:38:42.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.674" level="INFO">VALUE: [4.426400000000219e-05, 4.423600000000305e-05, 4.4360999999999706e-05, 4.427800000000176e-05, 4.4583000000000816e-05, 4.4917000000005425e-05, 4.4902999999998916e-05, 4.495800000000466e-05, 4.459799999999986e-05, 4.423600000000305e-05, 4.502800000000251e-05, 4.4917000000005425e-05, 4.4652999999998666e-05, 4.492999999999858e-05, 4.477700000000279e-05, 4.502700000000304e-05, 4.4138999999998596e-05, 4.490199999999944e-05, 4.4209000000003384e-05, 4.4583000000000816e-05, 4.4583000000000816e-05, 4.448599999999636e-05, 4.426400000000219e-05, 4.447200000000373e-05, 4.425000000000262e-05, 4.4153000000005105e-05, 4.4152999999998166e-05, 4.424999999999568e-05, 4.4610999999999956e-05, 4.494399999999815e-05, 4.426400000000219e-05, 4.4138999999998596e-05, 4.4472999999996266e-05, 4.4473000000003204e-05, 4.4319000000000996e-05, 4.4138999999998596e-05, 4.4819000000001497e-05, 4.4360999999999706e-05, 4.5097000000000886e-05, 4.445799999999722e-05, 4.417999999999783e-05, 4.480499999999499e-05, 4.472200000000398e-05, 4.480499999999499e-05, 4.4374999999999276e-05, 4.423599999999611e-05, 4.4138999999998596e-05, 4.48060000000014e-05, 4.4152999999998166e-05, 4.4487000000002774e-05]</msg>
<status status="PASS" starttime="20201110 08:38:42.671" endtime="20201110 08:38:42.681"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.659" endtime="20201110 08:38:42.683"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.690" endtime="20201110 08:38:42.692"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:42.699" endtime="20201110 08:38:42.721"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.694" endtime="20201110 08:38:42.722"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.685" endtime="20201110 08:38:42.724"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.135" endtime="20201110 08:38:42.725"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.134" endtime="20201110 08:38:42.725"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.757" endtime="20201110 08:38:42.777"></status>
</kw>
<msg timestamp="20201110 08:38:42.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.746" endtime="20201110 08:38:42.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:42.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:42.780" endtime="20201110 08:38:42.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.787" endtime="20201110 08:38:42.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.738" endtime="20201110 08:38:42.792"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.732" endtime="20201110 08:38:42.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:42.810" endtime="20201110 08:38:43.147"></status>
</kw>
<msg timestamp="20201110 08:38:43.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052235431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052281444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:42.807" endtime="20201110 08:38:43.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052235431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052281444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.157" endtime="20201110 08:38:43.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.176" endtime="20201110 08:38:43.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.800" endtime="20201110 08:38:43.181"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.795" endtime="20201110 08:38:43.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.193" level="INFO">${RESULT} = [{'time': 0.052281444, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.601300000000447e-05, 'source_diff': 4.601300000000447e-05}, {'time': 0.052333389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:43.184" endtime="20201110 08:38:43.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:43.223" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:43.195" endtime="20201110 08:38:43.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.234" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201110 08:38:43.232" endtime="20201110 08:38:43.235"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.240" level="INFO">VALUE: [4.601300000000447e-05, 4.602800000000351e-05, 4.5930999999999056e-05, 4.601400000000394e-05, 4.604200000000308e-05, 4.58060000000024e-05, 4.605499999999624e-05, 4.536199999999324e-05, 4.5181000000005245e-05, 4.592999999999958e-05, 4.536099999999377e-05, 4.547199999999779e-05, 4.5597000000001386e-05, 4.5125000000000026e-05, 4.5208999999997446e-05, 4.547200000000473e-05, 4.605599999999571e-05, 4.5597000000001386e-05, 4.547199999999779e-05, 4.572200000000498e-05, 4.58060000000024e-05, 4.5930999999999056e-05, 4.565200000000019e-05, 4.5138999999999596e-05, 4.5597000000001386e-05, 4.537499999999334e-05, 4.5138999999999596e-05, 4.5138999999999596e-05, 4.5458999999997696e-05, 4.5611000000000956e-05, 4.601400000000394e-05, 4.592999999999958e-05, 4.5111000000000456e-05, 4.56939999999989e-05, 4.5361000000000706e-05, 4.5416999999998986e-05, 4.592999999999958e-05, 4.5569000000002247e-05, 4.567999999999933e-05, 4.527800000000276e-05, 4.56939999999989e-05, 4.5153000000006105e-05, 4.58060000000024e-05, 4.56939999999989e-05, 4.550000000000387e-05, 4.526400000000319e-05, 4.5930999999999056e-05, 4.5152999999999166e-05, 4.5347000000001136e-05, 4.5361000000000706e-05]</msg>
<status status="PASS" starttime="20201110 08:38:43.236" endtime="20201110 08:38:43.241"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.225" endtime="20201110 08:38:43.243"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.249" endtime="20201110 08:38:43.252"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:43.257" endtime="20201110 08:38:43.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.253" endtime="20201110 08:38:43.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.245" endtime="20201110 08:38:43.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.728" endtime="20201110 08:38:43.283"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:42.726" endtime="20201110 08:38:43.283"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.306" endtime="20201110 08:38:43.325"></status>
</kw>
<msg timestamp="20201110 08:38:43.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.303" endtime="20201110 08:38:43.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.329" endtime="20201110 08:38:43.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.335" endtime="20201110 08:38:43.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.295" endtime="20201110 08:38:43.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.290" endtime="20201110 08:38:43.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.358" endtime="20201110 08:38:43.692"></status>
</kw>
<msg timestamp="20201110 08:38:43.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042023639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.355" endtime="20201110 08:38:43.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042023639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042070347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.702" endtime="20201110 08:38:43.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.720" endtime="20201110 08:38:43.726"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.348" endtime="20201110 08:38:43.727"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.343" endtime="20201110 08:38:43.729"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:43.739" level="INFO">${RESULT} = [{'time': 0.042070347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.670799999999947e-05, 'source_diff': 4.670799999999947e-05}, {'time': 0.042120361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:43.730" endtime="20201110 08:38:43.740"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:43.769" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:43.741" endtime="20201110 08:38:43.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.780" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201110 08:38:43.778" endtime="20201110 08:38:43.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.786" level="INFO">VALUE: [4.670799999999947e-05, 4.680500000000393e-05, 4.654200000000358e-05, 4.66939999999999e-05, 4.679199999999689e-05, 4.704200000000408e-05, 4.6153000000000166e-05, 4.645799999999922e-05, 4.626399999999725e-05, 4.648599999999836e-05, 4.627800000000376e-05, 4.6347000000002136e-05, 4.6708999999998946e-05, 4.704200000000408e-05, 4.679199999999689e-05, 4.680599999999646e-05, 4.6237000000004524e-05, 4.655600000000315e-05, 4.6375000000001276e-05, 4.680499999999699e-05, 4.7013999999998e-05, 4.6180999999999306e-05, 4.6153000000000166e-05, 4.643000000000008e-05, 4.6361000000001706e-05, 4.6625000000001526e-05, 4.66939999999999e-05, 4.647199999999879e-05, 4.702799999999757e-05, 4.6416999999999986e-05, 4.6694999999999376e-05, 4.6694999999999376e-05, 4.624999999999768e-05, 4.636099999999477e-05, 4.658400000000229e-05, 4.682000000000297e-05, 4.6917000000000486e-05, 4.6445000000006065e-05, 4.634800000000161e-05, 4.6695000000006315e-05, 4.66939999999999e-05, 4.70269999999981e-05, 4.6139000000000596e-05, 4.70269999999981e-05, 4.670799999999947e-05, 4.66939999999999e-05, 4.6139000000000596e-05, 4.6375000000001276e-05, 4.673600000000555e-05, 4.704199999999714e-05]</msg>
<status status="PASS" starttime="20201110 08:38:43.783" endtime="20201110 08:38:43.788"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.771" endtime="20201110 08:38:43.790"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.796" endtime="20201110 08:38:43.799"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:43.805" endtime="20201110 08:38:43.827"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.801" endtime="20201110 08:38:43.829"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.792" endtime="20201110 08:38:43.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.285" endtime="20201110 08:38:43.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.284" endtime="20201110 08:38:43.832"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.854" endtime="20201110 08:38:43.874"></status>
</kw>
<msg timestamp="20201110 08:38:43.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.851" endtime="20201110 08:38:43.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:43.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:43.878" endtime="20201110 08:38:43.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.884" endtime="20201110 08:38:43.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.844" endtime="20201110 08:38:43.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.838" endtime="20201110 08:38:43.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:43.907" endtime="20201110 08:38:44.240"></status>
</kw>
<msg timestamp="20201110 08:38:44.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042318528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:43.904" endtime="20201110 08:38:44.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042270931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042318528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.249" endtime="20201110 08:38:44.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.268" endtime="20201110 08:38:44.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.897" endtime="20201110 08:38:44.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.892" endtime="20201110 08:38:44.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.287" level="INFO">${RESULT} = [{'time': 0.042318528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.7597000000003387e-05, 'source_diff': 4.7597000000003387e-05}, {'time': 0.042373528, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:44.278" endtime="20201110 08:38:44.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:44.317" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:44.289" endtime="20201110 08:38:44.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.328" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201110 08:38:44.326" endtime="20201110 08:38:44.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.333" level="INFO">VALUE: [4.7597000000003387e-05, 4.8013999999999e-05, 4.805599999999771e-05, 4.791699999999455e-05, 4.780599999999746e-05, 4.720799999999997e-05, 4.726299999999878e-05, 4.791600000000201e-05, 4.715200000000169e-05, 4.723599999999911e-05, 4.80269999999991e-05, 4.804099999999867e-05, 4.772200000000004e-05, 4.749999999999893e-05, 4.7903000000001916e-05, 4.7125000000002026e-05, 4.724999999999868e-05, 4.73469999999962e-05, 4.724999999999868e-05, 4.78060000000044e-05, 4.7153000000001166e-05, 4.758300000000382e-05, 4.737499999999534e-05, 4.724999999999868e-05, 4.7653000000001666e-05, 4.732000000000347e-05, 4.750000000000587e-05, 4.736199999999524e-05, 4.715200000000169e-05, 4.770800000000047e-05, 4.743000000000108e-05, 4.715200000000169e-05, 4.80269999999991e-05, 4.737499999999534e-05, 4.795800000000072e-05, 4.747199999999979e-05, 4.7693999999993963e-05, 4.759699999999645e-05, 4.7931000000001056e-05, 4.76940000000009e-05, 4.802800000000551e-05, 4.7153000000001166e-05, 4.729199999999739e-05, 4.7708999999999946e-05, 4.777800000000526e-05, 4.74860000000063e-05, 4.737499999999534e-05, 4.724999999999868e-05, 4.736200000000218e-05, 4.78469999999967e-05]</msg>
<status status="PASS" starttime="20201110 08:38:44.330" endtime="20201110 08:38:44.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.319" endtime="20201110 08:38:44.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.343" endtime="20201110 08:38:44.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.351" endtime="20201110 08:38:44.373"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.347" endtime="20201110 08:38:44.375"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.338" endtime="20201110 08:38:44.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.834" endtime="20201110 08:38:44.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:43.832" endtime="20201110 08:38:44.377"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.400" endtime="20201110 08:38:44.420"></status>
</kw>
<msg timestamp="20201110 08:38:44.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.396" endtime="20201110 08:38:44.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.427" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:44.423" endtime="20201110 08:38:44.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.429" endtime="20201110 08:38:44.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.389" endtime="20201110 08:38:44.435"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.383" endtime="20201110 08:38:44.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.459" endtime="20201110 08:38:44.859"></status>
</kw>
<msg timestamp="20201110 08:38:44.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041987542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.451" endtime="20201110 08:38:44.867"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041939167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041987542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:44.868" endtime="20201110 08:38:44.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.889" endtime="20201110 08:38:44.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.442" endtime="20201110 08:38:44.899"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.437" endtime="20201110 08:38:44.901"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:44.911" level="INFO">${RESULT} = [{'time': 0.041987542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.8375000000003276e-05, 'source_diff': 4.8375000000003276e-05}, {'time': 0.042042556, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:44.902" endtime="20201110 08:38:44.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:44.941" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:44.913" endtime="20201110 08:38:44.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.952" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201110 08:38:44.950" endtime="20201110 08:38:44.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:44.958" level="INFO">VALUE: [4.8375000000003276e-05, 4.8375000000003276e-05, 4.829199999999839e-05, 4.849999999999993e-05, 4.8137999999996184e-05, 4.824999999999968e-05, 4.848600000000036e-05, 4.843000000000208e-05, 4.8915999999996074e-05, 4.813899999999566e-05, 4.8915999999996074e-05, 4.8153000000002166e-05, 4.880499999999899e-05, 4.848600000000036e-05, 4.848600000000036e-05, 4.823600000000011e-05, 4.880599999999846e-05, 4.8139000000002596e-05, 4.905599999999871e-05, 4.8361000000003707e-05, 4.858399999999735e-05, 4.8903000000002916e-05, 4.858399999999735e-05, 4.8375000000003276e-05, 4.900000000000043e-05, 4.858399999999735e-05, 4.857000000000472e-05, 4.826299999999978e-05, 4.90270000000001e-05, 4.902699999999316e-05, 4.898599999999392e-05, 4.8457999999994283e-05, 4.8417000000001986e-05, 4.829199999999839e-05, 4.872200000000104e-05, 4.86940000000019e-05, 4.836099999999677e-05, 4.847200000000079e-05, 4.909700000000489e-05, 4.902799999999957e-05, 4.815299999999523e-05, 4.886099999999727e-05, 4.8931000000002056e-05, 4.8375000000003276e-05, 4.824999999999968e-05, 4.88060000000054e-05, 4.8931000000002056e-05, 4.902799999999957e-05, 4.893000000000258e-05, 4.824999999999968e-05]</msg>
<status status="PASS" starttime="20201110 08:38:44.955" endtime="20201110 08:38:44.959"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.943" endtime="20201110 08:38:44.961"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:44.967" endtime="20201110 08:38:44.970"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:44.976" endtime="20201110 08:38:44.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.971" endtime="20201110 08:38:44.999"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.963" endtime="20201110 08:38:45.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.379" endtime="20201110 08:38:45.002"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:44.378" endtime="20201110 08:38:45.002"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.025" endtime="20201110 08:38:45.044"></status>
</kw>
<msg timestamp="20201110 08:38:45.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.021" endtime="20201110 08:38:45.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.048" endtime="20201110 08:38:45.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.054" endtime="20201110 08:38:45.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.014" endtime="20201110 08:38:45.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.009" endtime="20201110 08:38:45.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.079" endtime="20201110 08:38:45.425"></status>
</kw>
<msg timestamp="20201110 08:38:45.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042441431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042491125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.075" endtime="20201110 08:38:45.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042441431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042491125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.435" endtime="20201110 08:38:45.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.453" endtime="20201110 08:38:45.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.067" endtime="20201110 08:38:45.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.062" endtime="20201110 08:38:45.462"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:45.472" level="INFO">${RESULT} = [{'time': 0.042491125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 4.9693999999995964e-05, 'source_diff': 4.9693999999995964e-05}, {'time': 0.042545125, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:45.463" endtime="20201110 08:38:45.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:45.502" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:45.474" endtime="20201110 08:38:45.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.513" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201110 08:38:45.511" endtime="20201110 08:38:45.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.519" level="INFO">VALUE: [4.9693999999995964e-05, 4.96940000000029e-05, 4.991699999999655e-05, 4.979199999999989e-05, 4.972200000000204e-05, 4.945899999999476e-05, 4.969499999999544e-05, 4.925000000000068e-05, 4.991699999999655e-05, 4.9987000000001336e-05, 4.9901999999997504e-05, 4.927700000000035e-05, 4.948600000000136e-05, 4.926400000000025e-05, 4.9139000000003596e-05, 4.958300000000582e-05, 4.926400000000025e-05, 4.9889000000004347e-05, 4.909699999999795e-05, 4.9931000000003056e-05, 4.9153000000003166e-05, 4.9125000000004027e-05, 4.913899999999666e-05, 4.950000000000093e-05, 5.002800000000057e-05, 4.9417000000002986e-05, 4.993099999999612e-05, 5.004200000000014e-05, 4.984799999999817e-05, 5.002800000000057e-05, 4.962499999999759e-05, 4.9473000000001266e-05, 5.00270000000011e-05, 4.958299999999888e-05, 4.959699999999845e-05, 4.9707999999995534e-05, 4.947200000000179e-05, 4.936099999999777e-05, 5.004200000000014e-05, 4.959700000000539e-05, 4.96940000000029e-05, 4.955600000000615e-05, 5.002800000000057e-05, 4.959699999999845e-05, 4.958299999999888e-05, 4.969499999999544e-05, 4.980599999999946e-05, 4.947200000000179e-05, 5.004100000000067e-05, 4.959799999999792e-05]</msg>
<status status="PASS" starttime="20201110 08:38:45.516" endtime="20201110 08:38:45.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.504" endtime="20201110 08:38:45.522"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.528" endtime="20201110 08:38:45.531"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:45.537" endtime="20201110 08:38:45.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.532" endtime="20201110 08:38:45.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.524" endtime="20201110 08:38:45.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.004" endtime="20201110 08:38:45.562"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.003" endtime="20201110 08:38:45.563"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.586" endtime="20201110 08:38:45.606"></status>
</kw>
<msg timestamp="20201110 08:38:45.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.582" endtime="20201110 08:38:45.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:45.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:45.610" endtime="20201110 08:38:45.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.616" endtime="20201110 08:38:45.620"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.575" endtime="20201110 08:38:45.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.569" endtime="20201110 08:38:45.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:45.639" endtime="20201110 08:38:45.987"></status>
</kw>
<msg timestamp="20201110 08:38:45.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042711944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.636" endtime="20201110 08:38:45.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042660903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042711944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:45.996" endtime="20201110 08:38:46.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.015" endtime="20201110 08:38:46.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.629" endtime="20201110 08:38:46.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.624" endtime="20201110 08:38:46.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.035" level="INFO">${RESULT} = [{'time': 0.042711944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.104100000000167e-05, 'source_diff': 5.104100000000167e-05}, {'time': 0.042764986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:46.026" endtime="20201110 08:38:46.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.065" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:46.037" endtime="20201110 08:38:46.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.076" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.073" endtime="20201110 08:38:46.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.082" level="INFO">VALUE: [5.104100000000167e-05, 5.0957999999996784e-05, 5.0693999999996964e-05, 5.025000000000168e-05, 5.023600000000211e-05, 5.050000000000193e-05, 5.029200000000039e-05, 5.023600000000211e-05, 5.0667000000004236e-05, 5.058299999999988e-05, 5.093099999999712e-05, 5.05140000000015e-05, 5.050000000000193e-05, 5.059699999999945e-05, 5.0153000000004166e-05, 5.03469999999992e-05, 5.044499999999619e-05, 5.0931000000004056e-05, 5.047299999999533e-05, 5.082000000000003e-05, 5.090299999999798e-05, 5.098600000000286e-05, 5.025000000000168e-05, 5.0943999999997214e-05, 5.102800000000157e-05, 5.0901999999998504e-05, 5.058299999999988e-05, 5.018000000000383e-05, 5.036099999999877e-05, 5.031900000000006e-05, 5.0987000000002336e-05, 5.080599999999352e-05, 5.030599999999996e-05, 5.040299999999748e-05, 5.022200000000254e-05, 5.025000000000168e-05, 5.036099999999877e-05, 5.0723000000002516e-05, 5.013899999999766e-05, 5.0387999999998434e-05, 5.0917000000004486e-05, 5.105500000000124e-05, 5.037499999999834e-05, 5.101300000000253e-05, 5.05549999999938e-05, 5.012499999999809e-05, 5.059699999999945e-05, 5.054200000000064e-05, 5.048600000000236e-05, 5.088899999999841e-05]</msg>
<status status="PASS" starttime="20201110 08:38:46.078" endtime="20201110 08:38:46.084"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.067" endtime="20201110 08:38:46.087"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.094" endtime="20201110 08:38:46.096"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.102" endtime="20201110 08:38:46.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.098" endtime="20201110 08:38:46.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.089" endtime="20201110 08:38:46.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.565" endtime="20201110 08:38:46.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:45.564" endtime="20201110 08:38:46.128"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.151" endtime="20201110 08:38:46.171"></status>
</kw>
<msg timestamp="20201110 08:38:46.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.147" endtime="20201110 08:38:46.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.174" endtime="20201110 08:38:46.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.180" endtime="20201110 08:38:46.184"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.140" endtime="20201110 08:38:46.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.135" endtime="20201110 08:38:46.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.204" endtime="20201110 08:38:46.552"></status>
</kw>
<msg timestamp="20201110 08:38:46.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042320611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042372083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.201" endtime="20201110 08:38:46.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042320611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042372083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:46.561" endtime="20201110 08:38:46.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.580" endtime="20201110 08:38:46.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.193" endtime="20201110 08:38:46.587"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.189" endtime="20201110 08:38:46.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:46.599" level="INFO">${RESULT} = [{'time': 0.042372083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.1471999999996854e-05, 'source_diff': 5.1471999999996854e-05}, {'time': 0.042427097, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:46.590" endtime="20201110 08:38:46.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:46.629" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:46.601" endtime="20201110 08:38:46.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.640" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201110 08:38:46.638" endtime="20201110 08:38:46.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.645" level="INFO">VALUE: [5.1471999999996854e-05, 5.136099999999977e-05, 5.202800000000257e-05, 5.1915999999999074e-05, 5.16940000000049e-05, 5.198600000000386e-05, 5.1679999999998394e-05, 5.154100000000217e-05, 5.180600000000146e-05, 5.119499999999694e-05, 5.180600000000146e-05, 5.180600000000146e-05, 5.108399999999985e-05, 5.2014000000003e-05, 5.170899999999701e-05, 5.1749999999996243e-05, 5.204099999999573e-05, 5.13340000000001e-05, 5.138899999999891e-05, 5.177700000000285e-05, 5.20270000000031e-05, 5.136099999999977e-05, 5.1915999999999074e-05, 5.202800000000257e-05, 5.113899999999866e-05, 5.193000000000558e-05, 5.15270000000026e-05, 5.204200000000214e-05, 5.16940000000049e-05, 5.202800000000257e-05, 5.180599999999452e-05, 5.191699999999855e-05, 5.137499999999934e-05, 5.1249999999995743e-05, 5.183399999999366e-05, 5.177800000000232e-05, 5.108300000000038e-05, 5.1917000000005487e-05, 5.147200000000379e-05, 5.20270000000031e-05, 5.1887999999999934e-05, 5.137499999999934e-05, 5.11390000000056e-05, 5.137499999999934e-05, 5.205600000000171e-05, 5.137499999999934e-05, 5.179200000000189e-05, 5.1249999999995743e-05, 5.113899999999866e-05, 5.180600000000146e-05]</msg>
<status status="PASS" starttime="20201110 08:38:46.642" endtime="20201110 08:38:46.647"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.631" endtime="20201110 08:38:46.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.655" endtime="20201110 08:38:46.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:46.663" endtime="20201110 08:38:46.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.659" endtime="20201110 08:38:46.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.650" endtime="20201110 08:38:46.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.130" endtime="20201110 08:38:46.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.129" endtime="20201110 08:38:46.689"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.712" endtime="20201110 08:38:46.732"></status>
</kw>
<msg timestamp="20201110 08:38:46.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.709" endtime="20201110 08:38:46.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:46.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:46.736" endtime="20201110 08:38:46.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.742" endtime="20201110 08:38:46.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.701" endtime="20201110 08:38:46.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.696" endtime="20201110 08:38:46.749"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:46.765" endtime="20201110 08:38:47.113"></status>
</kw>
<msg timestamp="20201110 08:38:47.121" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042294069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04234675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:46.762" endtime="20201110 08:38:47.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042294069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04234675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:38:47.123" endtime="20201110 08:38:47.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.141" endtime="20201110 08:38:47.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.755" endtime="20201110 08:38:47.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.750" endtime="20201110 08:38:47.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.162" level="INFO">${RESULT} = [{'time': 0.04234675, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.2681000000005807e-05, 'source_diff': 5.2681000000005807e-05}, {'time': 0.042402778, 'source': 'DUT_IC', 'event': 'FALLING', 'dif...</msg>
<status status="PASS" starttime="20201110 08:38:47.153" endtime="20201110 08:38:47.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.192" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:47.165" endtime="20201110 08:38:47.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.203" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.201" endtime="20201110 08:38:47.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.209" level="INFO">VALUE: [5.2681000000005807e-05, 5.294499999999869e-05, 5.2471999999997854e-05, 5.258299999999494e-05, 5.261100000000102e-05, 5.270899999999801e-05, 5.2249999999996743e-05, 5.291699999999955e-05, 5.247299999999733e-05, 5.279200000000289e-05, 5.269499999999844e-05, 5.254100000000317e-05, 5.2929999999999644e-05, 5.302699999999716e-05, 5.30270000000041e-05, 5.302799999999663e-05, 5.247200000000479e-05, 5.236100000000077e-05, 5.302800000000357e-05, 5.302799999999663e-05, 5.283300000000213e-05, 5.286100000000127e-05, 5.256999999999484e-05, 5.215299999999923e-05, 5.283399999999466e-05, 5.23470000000012e-05, 5.229099999999598e-05, 5.300000000000443e-05, 5.277799999999638e-05, 5.281900000000256e-05, 5.268099999999887e-05, 5.258300000000188e-05, 5.212500000000009e-05, 5.2679999999999394e-05, 5.236100000000077e-05, 5.304099999999673e-05, 5.2693999999998964e-05, 5.226400000000325e-05, 5.293099999999912e-05, 5.226400000000325e-05, 5.236100000000077e-05, 5.240299999999948e-05, 5.2709000000004946e-05, 5.2971999999998354e-05, 5.2709000000004946e-05, 5.302799999999663e-05, 5.293099999999912e-05, 5.302800000000357e-05, 5.261100000000102e-05, 5.280600000000246e-05]</msg>
<status status="PASS" starttime="20201110 08:38:47.206" endtime="20201110 08:38:47.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.194" endtime="20201110 08:38:47.212"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.218" endtime="20201110 08:38:47.221"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.227" endtime="20201110 08:38:47.249"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.222" endtime="20201110 08:38:47.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.214" endtime="20201110 08:38:47.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.691" endtime="20201110 08:38:47.252"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:46.690" endtime="20201110 08:38:47.253"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.275" endtime="20201110 08:38:47.296"></status>
</kw>
<msg timestamp="20201110 08:38:47.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.272" endtime="20201110 08:38:47.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.300" endtime="20201110 08:38:47.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.306" endtime="20201110 08:38:47.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.265" endtime="20201110 08:38:47.311"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.259" endtime="20201110 08:38:47.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.329" endtime="20201110 08:38:47.675"></status>
</kw>
<msg timestamp="20201110 08:38:47.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042491153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042544611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.326" endtime="20201110 08:38:47.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042491153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042544611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.685" endtime="20201110 08:38:47.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.703" endtime="20201110 08:38:47.708"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.319" endtime="20201110 08:38:47.710"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.314" endtime="20201110 08:38:47.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:47.724" level="INFO">${RESULT} = [{'time': 0.042544611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.345800000000622e-05, 'source_diff': 5.345800000000622e-05}, {'time': 0.042606625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:47.713" endtime="20201110 08:38:47.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:47.765" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:47.727" endtime="20201110 08:38:47.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.779" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201110 08:38:47.776" endtime="20201110 08:38:47.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.784" level="INFO">VALUE: [5.345800000000622e-05, 5.3693999999999964e-05, 5.3457999999999284e-05, 5.356900000000331e-05, 5.393100000000012e-05, 5.368099999999987e-05, 5.307000000000228e-05, 5.33340000000021e-05, 5.408300000000338e-05, 5.359800000000192e-05, 5.361100000000202e-05, 5.4014000000005e-05, 5.358299999999594e-05, 5.3680000000000394e-05, 5.40549999999973e-05, 5.312500000000109e-05, 5.3707999999999534e-05, 5.3749999999998244e-05, 5.3263999999997313e-05, 5.313900000000066e-05, 5.347200000000579e-05, 5.331899999999612e-05, 5.391700000000055e-05, 5.3999999999998494e-05, 5.334699999999526e-05, 5.337500000000134e-05, 5.313900000000066e-05, 5.315300000000023e-05, 5.350000000000493e-05, 5.327700000000435e-05, 5.3249999999997744e-05, 5.376299999999834e-05, 5.3513999999997564e-05, 5.3513999999997564e-05, 5.40270000000051e-05, 5.361100000000202e-05, 5.3916000000001074e-05, 5.336100000000177e-05, 5.391700000000055e-05, 5.393100000000012e-05, 5.3707999999999534e-05, 5.383399999999566e-05, 5.3499999999997994e-05, 5.3416000000000574e-05, 5.31669999999998e-05, 5.400000000000543e-05, 5.391700000000055e-05, 5.3473000000005266e-05, 5.3152000000000754e-05, 5.313900000000066e-05]</msg>
<status status="PASS" starttime="20201110 08:38:47.781" endtime="20201110 08:38:47.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.768" endtime="20201110 08:38:47.792"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.798" endtime="20201110 08:38:47.801"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:47.807" endtime="20201110 08:38:47.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.802" endtime="20201110 08:38:47.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.794" endtime="20201110 08:38:47.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.255" endtime="20201110 08:38:47.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.254" endtime="20201110 08:38:47.833"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.855" endtime="20201110 08:38:47.876"></status>
</kw>
<msg timestamp="20201110 08:38:47.877" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.852" endtime="20201110 08:38:47.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:47.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:47.879" endtime="20201110 08:38:47.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.886" endtime="20201110 08:38:47.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.845" endtime="20201110 08:38:47.891"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.839" endtime="20201110 08:38:47.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:47.909" endtime="20201110 08:38:48.256"></status>
</kw>
<msg timestamp="20201110 08:38:48.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042285417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042340208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:47.906" endtime="20201110 08:38:48.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042285417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042340208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.266" endtime="20201110 08:38:48.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.285" endtime="20201110 08:38:48.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.898" endtime="20201110 08:38:48.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.894" endtime="20201110 08:38:48.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.304" level="INFO">${RESULT} = [{'time': 0.042340208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.479099999999848e-05, 'source_diff': 5.479099999999848e-05}, {'time': 0.042398222, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:48.295" endtime="20201110 08:38:48.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:48.334" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:48.306" endtime="20201110 08:38:48.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.345" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201110 08:38:48.343" endtime="20201110 08:38:48.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.351" level="INFO">VALUE: [5.479099999999848e-05, 5.4166000000001324e-05, 5.425000000000568e-05, 5.4471999999999854e-05, 5.436100000000277e-05, 5.4708000000000534e-05, 5.505599999999777e-05, 5.480499999999805e-05, 5.459700000000345e-05, 5.4263999999998314e-05, 5.482000000000403e-05, 5.4235999999999174e-05, 5.483399999999666e-05, 5.5013999999999064e-05, 5.470900000000001e-05, 5.491700000000155e-05, 5.487500000000284e-05, 5.4249999999998744e-05, 5.504099999999873e-05, 5.502699999999916e-05, 5.458300000000388e-05, 5.459699999999651e-05, 5.504099999999873e-05, 5.43749999999954e-05, 5.458299999999694e-05, 5.483300000000413e-05, 5.434699999999626e-05, 5.459699999999651e-05, 5.4235999999999174e-05, 5.454200000000464e-05, 5.4735999999999674e-05, 5.483399999999666e-05, 5.4249999999998744e-05, 5.415300000000123e-05, 5.4708000000000534e-05, 5.4735999999999674e-05, 5.43619999999953e-05, 5.479200000000489e-05, 5.4235999999999174e-05, 5.459699999999651e-05, 5.415300000000123e-05, 5.4916000000002074e-05, 5.415300000000123e-05, 5.4249999999998744e-05, 5.455500000000474e-05, 5.481900000000456e-05, 5.436099999999583e-05, 5.4777999999998384e-05, 5.4263999999998314e-05, 5.49869999999994e-05]</msg>
<status status="PASS" starttime="20201110 08:38:48.348" endtime="20201110 08:38:48.352"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.336" endtime="20201110 08:38:48.354"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.360" endtime="20201110 08:38:48.363"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.369" endtime="20201110 08:38:48.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.364" endtime="20201110 08:38:48.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.356" endtime="20201110 08:38:48.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.835" endtime="20201110 08:38:48.394"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:47.834" endtime="20201110 08:38:48.395"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.417" endtime="20201110 08:38:48.437"></status>
</kw>
<msg timestamp="20201110 08:38:48.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.414" endtime="20201110 08:38:48.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.441" endtime="20201110 08:38:48.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.447" endtime="20201110 08:38:48.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.407" endtime="20201110 08:38:48.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.401" endtime="20201110 08:38:48.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.470" endtime="20201110 08:38:48.815"></status>
</kw>
<msg timestamp="20201110 08:38:48.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042303083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.467" endtime="20201110 08:38:48.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042247264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042303083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:48.824" endtime="20201110 08:38:48.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.843" endtime="20201110 08:38:48.848"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.460" endtime="20201110 08:38:48.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.455" endtime="20201110 08:38:48.851"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:48.862" level="INFO">${RESULT} = [{'time': 0.042303083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.581899999999862e-05, 'source_diff': 5.581899999999862e-05}, {'time': 0.042361083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:48.853" endtime="20201110 08:38:48.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:48.892" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:48.864" endtime="20201110 08:38:48.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.903" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201110 08:38:48.901" endtime="20201110 08:38:48.904"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:48.909" level="INFO">VALUE: [5.581899999999862e-05, 5.5916000000003074e-05, 5.5263999999999314e-05, 5.6041999999999204e-05, 5.5930000000002644e-05, 5.5263999999999314e-05, 5.5277999999998884e-05, 5.559699999999751e-05, 5.5708000000001534e-05, 5.530499999999855e-05, 5.5805999999998523e-05, 5.513900000000266e-05, 5.584699999999776e-05, 5.5805999999998523e-05, 5.547300000000033e-05, 5.513900000000266e-05, 5.5986000000000924e-05, 5.5680000000002394e-05, 5.554099999999923e-05, 5.5930000000002644e-05, 5.536100000000377e-05, 5.53749999999964e-05, 5.513899999999572e-05, 5.5249999999999744e-05, 5.5707999999994595e-05, 5.5791999999998954e-05, 5.594500000000169e-05, 5.5263999999999314e-05, 5.591700000000255e-05, 5.53749999999964e-05, 5.536099999999683e-05, 5.6014000000000064e-05, 5.558399999999741e-05, 5.5944000000002214e-05, 5.527699999999941e-05, 5.6027999999999634e-05, 5.5151999999995815e-05, 5.5472000000000854e-05, 5.558299999999794e-05, 5.53749999999964e-05, 5.5944000000002214e-05, 5.6027999999999634e-05, 5.5708000000001534e-05, 5.512499999999615e-05, 5.537500000000334e-05, 5.518100000000137e-05, 5.6041999999999204e-05, 5.588900000000341e-05, 5.5763999999999814e-05, 5.562499999999665e-05]</msg>
<status status="PASS" starttime="20201110 08:38:48.905" endtime="20201110 08:38:48.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.894" endtime="20201110 08:38:48.912"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.918" endtime="20201110 08:38:48.921"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:48.927" endtime="20201110 08:38:48.949"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.922" endtime="20201110 08:38:48.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.913" endtime="20201110 08:38:48.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.397" endtime="20201110 08:38:48.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.396" endtime="20201110 08:38:48.953"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:48.977" endtime="20201110 08:38:48.997"></status>
</kw>
<msg timestamp="20201110 08:38:48.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:48.973" endtime="20201110 08:38:48.999"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.000" endtime="20201110 08:38:49.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.007" endtime="20201110 08:38:49.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.966" endtime="20201110 08:38:49.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.959" endtime="20201110 08:38:49.014"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.030" endtime="20201110 08:38:49.377"></status>
</kw>
<msg timestamp="20201110 08:38:49.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043711361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043767528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.027" endtime="20201110 08:38:49.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043711361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043767528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:49.386" endtime="20201110 08:38:49.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.405" endtime="20201110 08:38:49.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.020" endtime="20201110 08:38:49.414"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.015" endtime="20201110 08:38:49.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.426" level="INFO">${RESULT} = [{'time': 0.043767528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.61670000000028e-05, 'source_diff': 5.61670000000028e-05}, {'time': 0.0438325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5...</msg>
<status status="PASS" starttime="20201110 08:38:49.417" endtime="20201110 08:38:49.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:49.456" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:49.428" endtime="20201110 08:38:49.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.467" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201110 08:38:49.465" endtime="20201110 08:38:49.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.472" level="INFO">VALUE: [5.61670000000028e-05, 5.691700000000355e-05, 5.615300000000323e-05, 5.709699999999901e-05, 5.659800000000492e-05, 5.6791999999999954e-05, 5.615299999999629e-05, 5.658399999999841e-05, 5.6943999999996275e-05, 5.647300000000133e-05, 5.6250000000000744e-05, 5.6250000000000744e-05, 5.658299999999894e-05, 5.6472000000001854e-05, 5.6208000000002034e-05, 5.7014000000001064e-05, 5.6471999999994915e-05, 5.6250000000000744e-05, 5.681899999999962e-05, 5.633299999999869e-05, 5.693099999999618e-05, 5.636099999999783e-05, 5.6250000000000744e-05, 5.690299999999704e-05, 5.6250000000000744e-05, 5.670900000000201e-05, 5.7014000000001064e-05, 5.6250000000000744e-05, 5.658399999999841e-05, 5.658299999999894e-05, 5.701300000000159e-05, 5.643099999999568e-05, 5.6957999999995845e-05, 5.637500000000434e-05, 5.7042000000000204e-05, 5.6264000000000314e-05, 5.613899999999672e-05, 5.641700000000305e-05, 5.6707999999995595e-05, 5.693099999999618e-05, 5.691699999999661e-05, 5.659799999999798e-05, 5.669500000000244e-05, 5.659799999999798e-05, 5.63749999999974e-05, 5.623700000000065e-05, 5.63749999999974e-05, 5.708299999999944e-05, 5.6930000000003644e-05, 5.6721999999995165e-05]</msg>
<status status="PASS" starttime="20201110 08:38:49.469" endtime="20201110 08:38:49.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.458" endtime="20201110 08:38:49.475"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.482" endtime="20201110 08:38:49.484"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:49.490" endtime="20201110 08:38:49.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.486" endtime="20201110 08:38:49.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.477" endtime="20201110 08:38:49.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.955" endtime="20201110 08:38:49.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:48.954" endtime="20201110 08:38:49.516"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.539" endtime="20201110 08:38:49.560"></status>
</kw>
<msg timestamp="20201110 08:38:49.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.535" endtime="20201110 08:38:49.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:49.563" endtime="20201110 08:38:49.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.570" endtime="20201110 08:38:49.573"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.528" endtime="20201110 08:38:49.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.522" endtime="20201110 08:38:49.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.593" endtime="20201110 08:38:49.939"></status>
</kw>
<msg timestamp="20201110 08:38:49.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042426306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042484, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:49.590" endtime="20201110 08:38:49.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:49.965" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042426306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042484, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:38:49.948" endtime="20201110 08:38:49.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:49.967" endtime="20201110 08:38:49.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.582" endtime="20201110 08:38:49.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.578" endtime="20201110 08:38:49.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:49.986" level="INFO">${RESULT} = [{'time': 0.042484, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.7694000000003964e-05, 'source_diff': 5.7694000000003964e-05}, {'time': 0.042550056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:38:49.977" endtime="20201110 08:38:49.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:50.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:49.989" endtime="20201110 08:38:50.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.029" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201110 08:38:50.026" endtime="20201110 08:38:50.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.035" level="INFO">VALUE: [5.7694000000003964e-05, 5.763900000000516e-05, 5.8056000000000774e-05, 5.7472000000002854e-05, 5.7486000000002424e-05, 5.734699999999926e-05, 5.759799999999898e-05, 5.793099999999718e-05, 5.793099999999718e-05, 5.7806000000000524e-05, 5.73749999999984e-05, 5.7179999999996955e-05, 5.783300000000019e-05, 5.736099999999883e-05, 5.758299999999994e-05, 5.8028000000001634e-05, 5.8070000000000344e-05, 5.7485999999995485e-05, 5.8027999999994695e-05, 5.8056000000000774e-05, 5.8014000000002064e-05, 5.769500000000344e-05, 5.7472000000002854e-05, 5.736100000000577e-05, 5.769500000000344e-05, 5.7263999999994375e-05, 5.790299999999804e-05, 5.759799999999898e-05, 5.736200000000524e-05, 5.759699999999951e-05, 5.78749999999989e-05, 5.733299999999969e-05, 5.7485999999995485e-05, 5.7943999999997275e-05, 5.7292000000000454e-05, 5.781900000000062e-05, 5.8027999999994695e-05, 5.73749999999984e-05, 5.738899999999797e-05, 5.738899999999797e-05, 5.769500000000344e-05, 5.759699999999951e-05, 5.790300000000498e-05, 5.759799999999898e-05, 5.8027999999994695e-05, 5.759799999999898e-05, 5.7306000000000024e-05, 5.763899999999822e-05, 5.7929999999997706e-05, 5.7152000000004755e-05]</msg>
<status status="PASS" starttime="20201110 08:38:50.031" endtime="20201110 08:38:50.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.019" endtime="20201110 08:38:50.038"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.044" endtime="20201110 08:38:50.047"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.052" endtime="20201110 08:38:50.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.048" endtime="20201110 08:38:50.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.040" endtime="20201110 08:38:50.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.518" endtime="20201110 08:38:50.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:49.517" endtime="20201110 08:38:50.078"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.101" endtime="20201110 08:38:50.122"></status>
</kw>
<msg timestamp="20201110 08:38:50.123" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.098" endtime="20201110 08:38:50.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.125" endtime="20201110 08:38:50.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.132" endtime="20201110 08:38:50.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.091" endtime="20201110 08:38:50.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.085" endtime="20201110 08:38:50.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.155" endtime="20201110 08:38:50.501"></status>
</kw>
<msg timestamp="20201110 08:38:50.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042328125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042386403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.151" endtime="20201110 08:38:50.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042328125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042386403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.510" endtime="20201110 08:38:50.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.529" endtime="20201110 08:38:50.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.144" endtime="20201110 08:38:50.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.140" endtime="20201110 08:38:50.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:50.548" level="INFO">${RESULT} = [{'time': 0.042386403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.8278000000001884e-05, 'source_diff': 5.8278000000001884e-05}, {'time': 0.042453389, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:50.539" endtime="20201110 08:38:50.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:50.578" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:50.550" endtime="20201110 08:38:50.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.589" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201110 08:38:50.587" endtime="20201110 08:38:50.590"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.595" level="INFO">VALUE: [5.8278000000001884e-05, 5.869500000000444e-05, 5.859700000000051e-05, 5.870899999999707e-05, 5.813899999999872e-05, 5.8249999999995805e-05, 5.813900000000566e-05, 5.8347999999999733e-05, 5.859700000000051e-05, 5.836100000000677e-05, 5.8263999999995375e-05, 5.840299999999854e-05, 5.881900000000162e-05, 5.8236000000003174e-05, 5.8471999999996915e-05, 5.9041999999995265e-05, 5.858300000000094e-05, 5.8457999999997345e-05, 5.9041999999995265e-05, 5.816699999999786e-05, 5.818099999999743e-05, 5.8637999999999746e-05, 5.8597999999999983e-05, 5.869500000000444e-05, 5.9014000000003064e-05, 5.893099999999818e-05, 5.829100000000198e-05, 5.8916000000006075e-05, 5.836099999999983e-05, 5.883299999999425e-05, 5.812499999999915e-05, 5.8693999999998026e-05, 5.8221999999996665e-05, 5.836099999999983e-05, 5.859700000000051e-05, 5.8264000000002314e-05, 5.8264000000002314e-05, 5.813899999999872e-05, 5.861100000000008e-05, 5.8263999999995375e-05, 5.813899999999872e-05, 5.911100000000058e-05, 5.8930000000005645e-05, 5.8806000000001524e-05, 5.902699999999622e-05, 5.8722000000004104e-05, 5.902700000000316e-05, 5.902700000000316e-05, 5.8264000000002314e-05, 5.813899999999872e-05]</msg>
<status status="PASS" starttime="20201110 08:38:50.592" endtime="20201110 08:38:50.596"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.580" endtime="20201110 08:38:50.598"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.604" endtime="20201110 08:38:50.607"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:50.613" endtime="20201110 08:38:50.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.608" endtime="20201110 08:38:50.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.600" endtime="20201110 08:38:50.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.081" endtime="20201110 08:38:50.638"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.079" endtime="20201110 08:38:50.639"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.661" endtime="20201110 08:38:50.682"></status>
</kw>
<msg timestamp="20201110 08:38:50.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.658" endtime="20201110 08:38:50.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:50.689" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:50.685" endtime="20201110 08:38:50.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.692" endtime="20201110 08:38:50.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.651" endtime="20201110 08:38:50.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.645" endtime="20201110 08:38:50.698"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:50.715" endtime="20201110 08:38:51.061"></status>
</kw>
<msg timestamp="20201110 08:38:51.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042151486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042210667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:50.712" endtime="20201110 08:38:51.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042151486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042210667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.067" endtime="20201110 08:38:51.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.076" endtime="20201110 08:38:51.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.704" endtime="20201110 08:38:51.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.700" endtime="20201110 08:38:51.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.085" level="INFO">${RESULT} = [{'time': 0.042210667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 5.918099999999843e-05, 'source_diff': 5.918099999999843e-05}, {'time': 0.042273681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:51.081" endtime="20201110 08:38:51.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.098" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:51.086" endtime="20201110 08:38:51.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.104" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.102" endtime="20201110 08:38:51.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.106" level="INFO">VALUE: [5.918099999999843e-05, 5.9084000000000914e-05, 5.947300000000433e-05, 5.9693999999999026e-05, 5.908300000000144e-05, 5.9249999999996805e-05, 5.988900000000047e-05, 5.9249999999996805e-05, 5.9513999999996625e-05, 5.9693999999999026e-05, 5.959700000000151e-05, 5.96949999999985e-05, 5.986100000000133e-05, 5.9485999999997485e-05, 5.9805999999995585e-05, 5.912500000000015e-05, 5.9222000000004604e-05, 5.947299999999739e-05, 5.909700000000101e-05, 5.981899999999568e-05, 5.9486000000004424e-05, 5.979100000000348e-05, 5.9457999999998346e-05, 5.9694000000005965e-05, 5.9319999999994655e-05, 5.9916000000000136e-05, 6.0042000000003204e-05, 5.9485999999997485e-05, 5.994499999999875e-05, 5.995900000000526e-05, 5.9750000000004244e-05, 5.941699999999911e-05, 5.993099999999918e-05, 5.968099999999893e-05, 6.004100000000373e-05, 5.94870000000039e-05, 5.9388000000000496e-05, 5.9348000000000734e-05, 5.93750000000004e-05, 5.980499999999611e-05, 5.9429999999999206e-05, 5.958300000000194e-05, 5.9721999999998165e-05, 5.991699999999961e-05, 5.9929999999999706e-05, 5.943099999999868e-05, 5.9499999999997055e-05, 5.956900000000237e-05, 6.0042000000003204e-05, 6.0041999999996265e-05]</msg>
<status status="PASS" starttime="20201110 08:38:51.105" endtime="20201110 08:38:51.107"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.099" endtime="20201110 08:38:51.108"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.111" endtime="20201110 08:38:51.112"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.115" endtime="20201110 08:38:51.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.113" endtime="20201110 08:38:51.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.109" endtime="20201110 08:38:51.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.641" endtime="20201110 08:38:51.136"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:50.639" endtime="20201110 08:38:51.136"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.147" endtime="20201110 08:38:51.165"></status>
</kw>
<msg timestamp="20201110 08:38:51.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.145" endtime="20201110 08:38:51.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.167" endtime="20201110 08:38:51.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.173" endtime="20201110 08:38:51.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.142" endtime="20201110 08:38:51.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.139" endtime="20201110 08:38:51.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.196" endtime="20201110 08:38:51.543"></status>
</kw>
<msg timestamp="20201110 08:38:51.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.193" endtime="20201110 08:38:51.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024976139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025037167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.553" endtime="20201110 08:38:51.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.571" endtime="20201110 08:38:51.579"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.186" endtime="20201110 08:38:51.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.181" endtime="20201110 08:38:51.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:51.593" level="INFO">${RESULT} = [{'time': 0.025037167, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.1027999999997695e-05, 'source_diff': 6.1027999999997695e-05}, {'time': 0.025100194, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:38:51.584" endtime="20201110 08:38:51.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:51.625" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:51.595" endtime="20201110 08:38:51.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.640" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201110 08:38:51.636" endtime="20201110 08:38:51.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.647" level="INFO">VALUE: [6.1027999999997695e-05, 6.0944000000000276e-05, 6.0707999999999596e-05, 6.0707999999999596e-05, 6.0680000000000456e-05, 6.0971999999999416e-05, 6.0249999999997805e-05, 6.059700000000251e-05, 6.0778000000000915e-05, 6.012500000000115e-05, 6.0250000000001275e-05, 6.0819999999999624e-05, 6.0235999999998235e-05, 6.0819999999999624e-05, 6.0264000000000845e-05, 6.091699999999714e-05, 6.104200000000073e-05, 6.048700000000143e-05, 6.0944000000000276e-05, 6.0485999999998485e-05, 6.0722000000002635e-05, 6.0694000000000026e-05, 6.0985999999998985e-05, 6.0707999999999596e-05, 6.0207999999999096e-05, 6.079100000000101e-05, 6.090299999999757e-05, 6.10560000000003e-05, 6.093100000000018e-05, 6.012499999999768e-05, 6.104199999999727e-05, 6.013899999999725e-05, 6.0834000000002664e-05, 6.041700000000011e-05, 6.104200000000073e-05, 6.08750000000019e-05, 6.0694000000000026e-05, 6.0347999999998264e-05, 6.0138000000001246e-05, 6.0708000000003065e-05, 6.0236000000001705e-05, 6.059700000000251e-05, 6.090299999999757e-05, 6.081900000000015e-05, 6.013900000000072e-05, 6.0708000000003065e-05, 6.03889999999975e-05, 6.104199999999727e-05, 6.036099999999836e-05, 6.093100000000018e-05]</msg>
<status status="PASS" starttime="20201110 08:38:51.643" endtime="20201110 08:38:51.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.627" endtime="20201110 08:38:51.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.661" endtime="20201110 08:38:51.664"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:51.672" endtime="20201110 08:38:51.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.666" endtime="20201110 08:38:51.696"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.654" endtime="20201110 08:38:51.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.137" endtime="20201110 08:38:51.698"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.137" endtime="20201110 08:38:51.699"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.722" endtime="20201110 08:38:51.742"></status>
</kw>
<msg timestamp="20201110 08:38:51.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.719" endtime="20201110 08:38:51.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:51.750" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:51.746" endtime="20201110 08:38:51.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.752" endtime="20201110 08:38:51.756"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.711" endtime="20201110 08:38:51.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.705" endtime="20201110 08:38:51.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:51.776" endtime="20201110 08:38:52.124"></status>
</kw>
<msg timestamp="20201110 08:38:52.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042914722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042976778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:51.772" endtime="20201110 08:38:52.131"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042914722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042976778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.133" endtime="20201110 08:38:52.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.152" endtime="20201110 08:38:52.158"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.765" endtime="20201110 08:38:52.159"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.760" endtime="20201110 08:38:52.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.171" level="INFO">${RESULT} = [{'time': 0.042976778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.205599999999784e-05, 'source_diff': 6.205599999999784e-05}, {'time': 0.043042847, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:52.162" endtime="20201110 08:38:52.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:52.202" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:52.174" endtime="20201110 08:38:52.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.213" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201110 08:38:52.211" endtime="20201110 08:38:52.213"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.218" level="INFO">VALUE: [6.205599999999784e-05, 6.188900000000247e-05, 6.159700000000351e-05, 6.148599999999949e-05, 6.187499999999596e-05, 6.19029999999951e-05, 6.18200000000041e-05, 6.204099999999879e-05, 6.147199999999992e-05, 6.113900000000172e-05, 6.126399999999838e-05, 6.169400000000103e-05, 6.13750000000024e-05, 6.17080000000006e-05, 6.12499999999988e-05, 6.149999999999906e-05, 6.12499999999988e-05, 6.172200000000017e-05, 6.180599999999759e-05, 6.147199999999992e-05, 6.154099999999829e-05, 6.158399999999647e-05, 6.12499999999988e-05, 6.193100000000118e-05, 6.190300000000204e-05, 6.183299999999725e-05, 6.136099999999589e-05, 6.202699999999922e-05, 6.204099999999879e-05, 6.138900000000197e-05, 6.204199999999827e-05, 6.123599999999924e-05, 6.163900000000222e-05, 6.133299999999675e-05, 6.149999999999906e-05, 6.179200000000495e-05, 6.115300000000129e-05, 6.148599999999949e-05, 6.126399999999838e-05, 6.158400000000341e-05, 6.134699999999632e-05, 6.180599999999759e-05, 6.113800000000225e-05, 6.201299999999965e-05, 6.183299999999725e-05, 6.190199999999563e-05, 6.149999999999906e-05, 6.131899999999718e-05, 6.179199999999802e-05, 6.148599999999949e-05]</msg>
<status status="PASS" starttime="20201110 08:38:52.215" endtime="20201110 08:38:52.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.204" endtime="20201110 08:38:52.221"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.228" endtime="20201110 08:38:52.230"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.236" endtime="20201110 08:38:52.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.232" endtime="20201110 08:38:52.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.223" endtime="20201110 08:38:52.261"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.701" endtime="20201110 08:38:52.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:51.699" endtime="20201110 08:38:52.262"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.285" endtime="20201110 08:38:52.306"></status>
</kw>
<msg timestamp="20201110 08:38:52.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.282" endtime="20201110 08:38:52.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.309" endtime="20201110 08:38:52.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.316" endtime="20201110 08:38:52.319"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.275" endtime="20201110 08:38:52.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.269" endtime="20201110 08:38:52.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.339" endtime="20201110 08:38:52.685"></status>
</kw>
<msg timestamp="20201110 08:38:52.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042853653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042916625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.336" endtime="20201110 08:38:52.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042853653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042916625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.695" endtime="20201110 08:38:52.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.713" endtime="20201110 08:38:52.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.329" endtime="20201110 08:38:52.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.324" endtime="20201110 08:38:52.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:52.732" level="INFO">${RESULT} = [{'time': 0.042916625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.297200000000142e-05, 'source_diff': 6.297200000000142e-05}, {'time': 0.042986597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:52.723" endtime="20201110 08:38:52.733"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:52.763" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:52.735" endtime="20201110 08:38:52.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.774" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201110 08:38:52.771" endtime="20201110 08:38:52.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.779" level="INFO">VALUE: [6.297200000000142e-05, 6.238900000000297e-05, 6.269400000000203e-05, 6.237499999999646e-05, 6.30279999999997e-05, 6.213900000000272e-05, 6.215300000000229e-05, 6.247200000000092e-05, 6.237499999999646e-05, 6.259699999999757e-05, 6.26950000000015e-05, 6.259799999999704e-05, 6.30279999999997e-05, 6.234700000000426e-05, 6.23750000000034e-05, 6.281899999999868e-05, 6.281900000000562e-05, 6.213799999999631e-05, 6.226399999999938e-05, 6.272199999999423e-05, 6.269400000000203e-05, 6.27080000000016e-05, 6.265299999999585e-05, 6.248600000000049e-05, 6.2582999999998e-05, 6.276399999999988e-05, 6.247199999999398e-05, 6.248600000000049e-05, 6.280599999999859e-05, 6.215299999999535e-05, 6.229099999999904e-05, 6.297300000000089e-05, 6.250000000000006e-05, 6.216600000000239e-05, 6.256899999999843e-05, 6.269400000000203e-05, 6.270799999999466e-05, 6.268000000000246e-05, 6.255499999999886e-05, 6.236099999999689e-05, 6.247200000000092e-05, 6.215299999999535e-05, 6.248600000000049e-05, 6.280599999999859e-05, 6.259699999999757e-05, 6.258399999999747e-05, 6.270899999999413e-05, 6.290300000000304e-05, 6.261099999999714e-05, 6.245900000000082e-05]</msg>
<status status="PASS" starttime="20201110 08:38:52.776" endtime="20201110 08:38:52.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.765" endtime="20201110 08:38:52.782"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.789" endtime="20201110 08:38:52.791"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:52.797" endtime="20201110 08:38:52.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.792" endtime="20201110 08:38:52.820"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.784" endtime="20201110 08:38:52.822"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.264" endtime="20201110 08:38:52.823"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.263" endtime="20201110 08:38:52.823"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.846" endtime="20201110 08:38:52.867"></status>
</kw>
<msg timestamp="20201110 08:38:52.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.842" endtime="20201110 08:38:52.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:52.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:52.870" endtime="20201110 08:38:52.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.876" endtime="20201110 08:38:52.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.835" endtime="20201110 08:38:52.882"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.830" endtime="20201110 08:38:52.883"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:52.900" endtime="20201110 08:38:53.246"></status>
</kw>
<msg timestamp="20201110 08:38:53.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042367639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042430986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:52.896" endtime="20201110 08:38:53.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042367639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042430986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.255" endtime="20201110 08:38:53.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.274" endtime="20201110 08:38:53.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.889" endtime="20201110 08:38:53.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.885" endtime="20201110 08:38:53.282"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.293" level="INFO">${RESULT} = [{'time': 0.042430986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.334699999999832e-05, 'source_diff': 6.334699999999832e-05}, {'time': 0.042500917, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:53.284" endtime="20201110 08:38:53.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:53.323" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:53.295" endtime="20201110 08:38:53.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.334" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201110 08:38:53.332" endtime="20201110 08:38:53.335"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.340" level="INFO">VALUE: [6.334699999999832e-05, 6.337499999999746e-05, 6.369499999999556e-05, 6.36950000000025e-05, 6.394399999999634e-05, 6.402700000000122e-05, 6.326400000000038e-05, 6.359699999999857e-05, 6.359700000000551e-05, 6.336100000000483e-05, 6.320900000000157e-05, 6.401400000000113e-05, 6.372199999999523e-05, 6.35280000000002e-05, 6.337499999999746e-05, 6.348600000000149e-05, 6.391700000000361e-05, 6.33479999999978e-05, 6.370900000000207e-05, 6.381999999999916e-05, 6.359699999999857e-05, 6.326299999999396e-05, 6.38750000000049e-05, 6.370799999999566e-05, 6.3582999999999e-05, 6.365299999999685e-05, 6.347200000000192e-05, 6.381899999999968e-05, 6.381899999999968e-05, 6.345800000000235e-05, 6.348600000000149e-05, 6.404200000000027e-05, 6.312500000000415e-05, 6.36950000000025e-05, 6.347200000000192e-05, 6.358400000000541e-05, 6.393100000000318e-05, 6.33620000000043e-05, 6.350000000000106e-05, 6.333299999999875e-05, 6.395800000000285e-05, 6.337499999999746e-05, 6.336099999999789e-05, 6.40280000000007e-05, 6.380500000000011e-05, 6.313899999999678e-05, 6.32500000000008e-05, 6.391700000000361e-05, 6.391699999999667e-05, 6.311099999999764e-05]</msg>
<status status="PASS" starttime="20201110 08:38:53.337" endtime="20201110 08:38:53.345"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.325" endtime="20201110 08:38:53.347"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.354" endtime="20201110 08:38:53.357"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.362" endtime="20201110 08:38:53.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.358" endtime="20201110 08:38:53.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.349" endtime="20201110 08:38:53.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.825" endtime="20201110 08:38:53.388"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:52.824" endtime="20201110 08:38:53.388"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.411" endtime="20201110 08:38:53.432"></status>
</kw>
<msg timestamp="20201110 08:38:53.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.408" endtime="20201110 08:38:53.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.436" endtime="20201110 08:38:53.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.442" endtime="20201110 08:38:53.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.401" endtime="20201110 08:38:53.447"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.395" endtime="20201110 08:38:53.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.465" endtime="20201110 08:38:53.798"></status>
</kw>
<msg timestamp="20201110 08:38:53.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042282139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042346694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.462" endtime="20201110 08:38:53.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042282139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042346694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:53.808" endtime="20201110 08:38:53.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.827" endtime="20201110 08:38:53.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.455" endtime="20201110 08:38:53.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.450" endtime="20201110 08:38:53.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:53.848" level="INFO">${RESULT} = [{'time': 0.042346694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.455499999999392e-05, 'source_diff': 6.455499999999392e-05}, {'time': 0.042419625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:53.839" endtime="20201110 08:38:53.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:53.878" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:53.850" endtime="20201110 08:38:53.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.888" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201110 08:38:53.886" endtime="20201110 08:38:53.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.894" level="INFO">VALUE: [6.455499999999392e-05, 6.413900000000472e-05, 6.502799999999476e-05, 6.482000000000016e-05, 6.493099999999724e-05, 6.470900000000307e-05, 6.480600000000059e-05, 6.424999999999487e-05, 6.424999999999487e-05, 6.484699999999982e-05, 6.472200000000317e-05, 6.502700000000222e-05, 6.413899999999778e-05, 6.4583e-05, 6.469399999999709e-05, 6.423600000000224e-05, 6.50280000000017e-05, 6.438899999999803e-05, 6.480600000000059e-05, 6.447200000000292e-05, 6.501400000000213e-05, 6.498600000000299e-05, 6.441600000000464e-05, 6.436099999999889e-05, 6.459800000000598e-05, 6.501399999999519e-05, 6.492999999999777e-05, 6.42500000000018e-05, 6.500000000000256e-05, 6.49159999999982e-05, 6.504100000000179e-05, 6.508399999999998e-05, 6.508399999999998e-05, 6.470799999999666e-05, 6.426400000000138e-05, 6.498600000000299e-05, 6.452699999999478e-05, 6.459699999999957e-05, 6.504200000000127e-05, 6.438899999999803e-05, 6.504100000000179e-05, 6.504200000000127e-05, 6.492999999999777e-05, 6.436099999999889e-05, 6.415199999999788e-05, 6.461099999999914e-05, 6.504100000000179e-05, 6.445799999999641e-05, 6.504200000000127e-05, 6.422199999999573e-05]</msg>
<status status="PASS" starttime="20201110 08:38:53.891" endtime="20201110 08:38:53.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.879" endtime="20201110 08:38:53.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.903" endtime="20201110 08:38:53.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:53.912" endtime="20201110 08:38:53.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.907" endtime="20201110 08:38:53.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.899" endtime="20201110 08:38:53.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.390" endtime="20201110 08:38:53.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.389" endtime="20201110 08:38:53.938"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.960" endtime="20201110 08:38:53.981"></status>
</kw>
<msg timestamp="20201110 08:38:53.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.957" endtime="20201110 08:38:53.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:53.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:53.985" endtime="20201110 08:38:53.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:53.991" endtime="20201110 08:38:53.995"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.950" endtime="20201110 08:38:53.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.944" endtime="20201110 08:38:53.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.014" endtime="20201110 08:38:54.349"></status>
</kw>
<msg timestamp="20201110 08:38:54.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041971639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.011" endtime="20201110 08:38:54.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041905736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041971639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.359" endtime="20201110 08:38:54.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.378" endtime="20201110 08:38:54.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.004" endtime="20201110 08:38:54.385"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.999" endtime="20201110 08:38:54.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.397" level="INFO">${RESULT} = [{'time': 0.041971639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.59029999999991e-05, 'source_diff': 6.59029999999991e-05}, {'time': 0.042045653, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:54.388" endtime="20201110 08:38:54.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:54.427" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:54.399" endtime="20201110 08:38:54.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.438" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201110 08:38:54.436" endtime="20201110 08:38:54.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.443" level="INFO">VALUE: [6.59029999999991e-05, 6.52500000000028e-05, 6.520899999999663e-05, 6.515299999999835e-05, 6.579199999999508e-05, 6.513899999999878e-05, 6.604099999999585e-05, 6.601300000000365e-05, 6.549999999999612e-05, 6.5583000000001e-05, 6.530600000000109e-05, 6.516699999999792e-05, 6.576400000000288e-05, 6.569399999999809e-05, 6.511099999999964e-05, 6.548600000000349e-05, 6.580600000000159e-05, 6.604200000000227e-05, 6.549999999999612e-05, 6.559800000000005e-05, 6.591699999999867e-05, 6.605499999999542e-05, 6.572200000000417e-05, 6.545800000000435e-05, 6.526400000000238e-05, 6.524999999999587e-05, 6.548600000000349e-05, 6.524999999999587e-05, 6.580500000000211e-05, 6.513899999999878e-05, 6.537499999999946e-05, 6.531900000000118e-05, 6.60280000000027e-05, 6.580600000000159e-05, 6.56950000000045e-05, 6.605600000000184e-05, 6.513900000000572e-05, 6.551400000000263e-05, 6.602700000000322e-05, 6.547200000000392e-05, 6.566699999999842e-05, 6.530599999999415e-05, 6.548600000000349e-05, 6.515299999999835e-05, 6.562499999999971e-05, 6.602799999999576e-05, 6.587499999999996e-05, 6.524999999999587e-05, 6.526400000000238e-05, 6.559700000000057e-05]</msg>
<status status="PASS" starttime="20201110 08:38:54.440" endtime="20201110 08:38:54.445"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.429" endtime="20201110 08:38:54.446"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.453" endtime="20201110 08:38:54.455"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:54.461" endtime="20201110 08:38:54.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.457" endtime="20201110 08:38:54.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.448" endtime="20201110 08:38:54.486"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.940" endtime="20201110 08:38:54.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:53.938" endtime="20201110 08:38:54.487"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.510" endtime="20201110 08:38:54.531"></status>
</kw>
<msg timestamp="20201110 08:38:54.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.506" endtime="20201110 08:38:54.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.538" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:54.534" endtime="20201110 08:38:54.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.541" endtime="20201110 08:38:54.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.499" endtime="20201110 08:38:54.546"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.493" endtime="20201110 08:38:54.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.564" endtime="20201110 08:38:54.896"></status>
</kw>
<msg timestamp="20201110 08:38:54.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042056792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042123486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.561" endtime="20201110 08:38:54.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042056792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042123486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:54.905" endtime="20201110 08:38:54.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.924" endtime="20201110 08:38:54.929"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.553" endtime="20201110 08:38:54.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.549" endtime="20201110 08:38:54.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:54.943" level="INFO">${RESULT} = [{'time': 0.042123486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.669399999999909e-05, 'source_diff': 6.669399999999909e-05}, {'time': 0.0421965, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:54.934" endtime="20201110 08:38:54.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:54.973" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:54.945" endtime="20201110 08:38:54.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.984" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201110 08:38:54.982" endtime="20201110 08:38:54.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:54.990" level="INFO">VALUE: [6.669399999999909e-05, 6.624999999999687e-05, 6.645799999999841e-05, 6.648599999999755e-05, 6.702799999999676e-05, 6.613899999999978e-05, 6.638900000000003e-05, 6.645899999999788e-05, 6.693099999999924e-05, 6.613800000000031e-05, 6.633299999999481e-05, 6.670799999999866e-05, 6.702699999999728e-05, 6.648599999999755e-05, 6.636100000000089e-05, 6.672200000000517e-05, 6.674999999999737e-05, 6.670799999999866e-05, 6.70280000000037e-05, 6.669499999999856e-05, 6.704199999999633e-05, 6.693099999999924e-05, 6.615299999999935e-05, 6.648699999999702e-05, 6.627699999999653e-05, 6.691699999999967e-05, 6.669399999999909e-05, 6.69160000000002e-05, 6.692999999999977e-05, 6.669399999999909e-05, 6.70280000000037e-05, 6.636099999999395e-05, 6.6583000000002e-05, 6.691699999999967e-05, 6.70280000000037e-05, 6.626400000000338e-05, 6.683400000000173e-05, 6.626400000000338e-05, 6.62500000000038e-05, 6.615299999999935e-05, 6.627699999999653e-05, 6.691699999999967e-05, 6.69160000000002e-05, 6.62359999999973e-05, 6.654099999999635e-05, 6.622199999999773e-05, 6.649999999999712e-05, 6.659700000000157e-05, 6.645799999999841e-05, 6.681900000000268e-05]</msg>
<status status="PASS" starttime="20201110 08:38:54.987" endtime="20201110 08:38:54.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.975" endtime="20201110 08:38:54.993"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:54.999" endtime="20201110 08:38:55.002"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.008" endtime="20201110 08:38:55.029"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.003" endtime="20201110 08:38:55.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.995" endtime="20201110 08:38:55.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.489" endtime="20201110 08:38:55.033"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:54.488" endtime="20201110 08:38:55.034"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.056" endtime="20201110 08:38:55.077"></status>
</kw>
<msg timestamp="20201110 08:38:55.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.053" endtime="20201110 08:38:55.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.085" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.081" endtime="20201110 08:38:55.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.087" endtime="20201110 08:38:55.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.046" endtime="20201110 08:38:55.092"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.040" endtime="20201110 08:38:55.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.111" endtime="20201110 08:38:55.447"></status>
</kw>
<msg timestamp="20201110 08:38:55.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042561139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.107" endtime="20201110 08:38:55.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042561139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042629069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.456" endtime="20201110 08:38:55.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.475" endtime="20201110 08:38:55.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.100" endtime="20201110 08:38:55.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.095" endtime="20201110 08:38:55.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:55.494" level="INFO">${RESULT} = [{'time': 0.042629069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.793000000000077e-05, 'source_diff': 6.793000000000077e-05}, {'time': 0.042704069, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:55.485" endtime="20201110 08:38:55.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:55.524" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:55.496" endtime="20201110 08:38:55.524"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.535" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201110 08:38:55.532" endtime="20201110 08:38:55.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.540" level="INFO">VALUE: [6.793000000000077e-05, 6.756899999999649e-05, 6.726399999999744e-05, 6.747199999999898e-05, 6.747199999999898e-05, 6.801400000000513e-05, 6.80280000000047e-05, 6.737500000000146e-05, 6.748599999999855e-05, 6.795899999999938e-05, 6.780599999999665e-05, 6.783399999999579e-05, 6.747299999999845e-05, 6.749999999999812e-05, 6.772199999999923e-05, 6.747299999999845e-05, 6.804099999999785e-05, 6.713900000000078e-05, 6.726399999999744e-05, 6.777700000000497e-05, 6.726400000000438e-05, 6.724999999999787e-05, 6.781899999999674e-05, 6.726399999999744e-05, 6.791699999999373e-05, 6.738899999999409e-05, 6.777800000000445e-05, 6.749999999999812e-05, 6.769499999999956e-05, 6.768000000000052e-05, 6.72500000000048e-05, 6.797199999999948e-05, 6.726299999999796e-05, 6.737500000000146e-05, 6.802699999999828e-05, 6.733300000000275e-05, 6.80280000000047e-05, 6.797199999999948e-05, 6.736099999999495e-05, 6.759699999999563e-05, 6.802799999999776e-05, 6.793100000000024e-05, 6.795899999999938e-05, 6.712500000000121e-05, 6.730499999999667e-05, 6.747300000000539e-05, 6.736200000000137e-05, 6.770799999999966e-05, 6.758299999999606e-05, 6.804100000000479e-05]</msg>
<status status="PASS" starttime="20201110 08:38:55.537" endtime="20201110 08:38:55.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.526" endtime="20201110 08:38:55.543"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.550" endtime="20201110 08:38:55.552"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:55.558" endtime="20201110 08:38:55.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.554" endtime="20201110 08:38:55.581"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.545" endtime="20201110 08:38:55.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.036" endtime="20201110 08:38:55.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.035" endtime="20201110 08:38:55.584"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.607" endtime="20201110 08:38:55.627"></status>
</kw>
<msg timestamp="20201110 08:38:55.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.603" endtime="20201110 08:38:55.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:55.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:55.630" endtime="20201110 08:38:55.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.637" endtime="20201110 08:38:55.640"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.596" endtime="20201110 08:38:55.642"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.590" endtime="20201110 08:38:55.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:55.660" endtime="20201110 08:38:55.994"></status>
</kw>
<msg timestamp="20201110 08:38:56.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041991819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042060194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:55.657" endtime="20201110 08:38:56.002"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041991819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042060194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.003" endtime="20201110 08:38:56.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.022" endtime="20201110 08:38:56.030"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.649" endtime="20201110 08:38:56.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.645" endtime="20201110 08:38:56.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.043" level="INFO">${RESULT} = [{'time': 0.042060194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.837500000000246e-05, 'source_diff': 6.837500000000246e-05}, {'time': 0.042134208, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:56.034" endtime="20201110 08:38:56.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:56.073" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:56.045" endtime="20201110 08:38:56.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.084" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201110 08:38:56.082" endtime="20201110 08:38:56.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.090" level="INFO">VALUE: [6.837500000000246e-05, 6.893000000000177e-05, 6.883299999999731e-05, 6.859700000000357e-05, 6.824999999999887e-05, 6.824999999999887e-05, 6.84030000000016e-05, 6.82229999999992e-05, 6.895900000000038e-05, 6.837500000000246e-05, 6.880599999999765e-05, 6.868100000000099e-05, 6.904199999999833e-05, 6.82359999999993e-05, 6.902799999999876e-05, 6.822199999999973e-05, 6.893000000000177e-05, 6.826299999999896e-05, 6.880499999999817e-05, 6.894400000000134e-05, 6.836100000000289e-05, 6.836100000000289e-05, 6.815300000000135e-05, 6.862500000000271e-05, 6.816700000000092e-05, 6.82359999999993e-05, 6.827799999999801e-05, 6.881999999999722e-05, 6.880599999999765e-05, 6.882000000000416e-05, 6.902799999999876e-05, 6.904199999999833e-05, 6.902799999999876e-05, 6.848599999999955e-05, 6.883299999999731e-05, 6.89160000000022e-05, 6.905499999999842e-05, 6.836100000000289e-05, 6.881899999999774e-05, 6.815299999999441e-05, 6.911100000000364e-05, 6.872200000000023e-05, 6.813900000000178e-05, 6.848599999999955e-05, 6.858400000000348e-05, 6.880599999999765e-05, 6.85979999999961e-05, 6.848599999999955e-05, 6.813799999999537e-05, 6.906899999999799e-05]</msg>
<status status="PASS" starttime="20201110 08:38:56.087" endtime="20201110 08:38:56.091"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.075" endtime="20201110 08:38:56.093"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.099" endtime="20201110 08:38:56.102"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.108" endtime="20201110 08:38:56.129"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.103" endtime="20201110 08:38:56.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.095" endtime="20201110 08:38:56.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.586" endtime="20201110 08:38:56.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:55.585" endtime="20201110 08:38:56.133"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.156" endtime="20201110 08:38:56.178"></status>
</kw>
<msg timestamp="20201110 08:38:56.179" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.153" endtime="20201110 08:38:56.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.181" endtime="20201110 08:38:56.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.187" endtime="20201110 08:38:56.191"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.146" endtime="20201110 08:38:56.192"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.140" endtime="20201110 08:38:56.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.211" endtime="20201110 08:38:56.568"></status>
</kw>
<msg timestamp="20201110 08:38:56.576" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042290431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042359681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.207" endtime="20201110 08:38:56.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042290431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042359681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.578" endtime="20201110 08:38:56.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.597" endtime="20201110 08:38:56.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.200" endtime="20201110 08:38:56.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.195" endtime="20201110 08:38:56.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:56.616" level="INFO">${RESULT} = [{'time': 0.042359681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 6.924999999999987e-05, 'source_diff': 6.924999999999987e-05}, {'time': 0.042435681, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:56.607" endtime="20201110 08:38:56.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:56.646" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:56.618" endtime="20201110 08:38:56.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.657" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201110 08:38:56.655" endtime="20201110 08:38:56.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.663" level="INFO">VALUE: [6.924999999999987e-05, 6.969500000000156e-05, 6.993000000000277e-05, 6.990200000000363e-05, 6.948600000000055e-05, 7.00830000000055e-05, 6.926400000000638e-05, 6.927799999999901e-05, 6.986099999999745e-05, 6.918100000000149e-05, 6.969399999999515e-05, 6.950000000000012e-05, 6.926399999999944e-05, 6.980599999999865e-05, 6.961200000000362e-05, 6.980600000000559e-05, 7.005499999999942e-05, 6.909800000000355e-05, 7.002700000000028e-05, 6.970800000000166e-05, 6.936100000000389e-05, 6.915299999999541e-05, 6.961100000000414e-05, 6.981899999999874e-05, 6.945800000000141e-05, 6.945800000000141e-05, 6.937500000000346e-05, 6.936100000000389e-05, 7.005600000000584e-05, 6.981999999999822e-05, 6.968100000000199e-05, 6.926399999999944e-05, 6.969500000000156e-05, 6.947200000000098e-05, 6.937500000000346e-05, 6.926399999999944e-05, 6.970800000000166e-05, 7.002799999999976e-05, 6.948600000000055e-05, 6.990299999999616e-05, 6.950000000000012e-05, 6.972200000000123e-05, 6.926399999999944e-05, 7.004199999999933e-05, 6.963899999999634e-05, 6.916600000000245e-05, 6.915300000000235e-05, 6.924999999999987e-05, 7.005499999999942e-05, 6.980499999999917e-05]</msg>
<status status="PASS" starttime="20201110 08:38:56.659" endtime="20201110 08:38:56.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.648" endtime="20201110 08:38:56.666"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.672" endtime="20201110 08:38:56.675"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:56.680" endtime="20201110 08:38:56.702"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.676" endtime="20201110 08:38:56.704"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.668" endtime="20201110 08:38:56.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.136" endtime="20201110 08:38:56.706"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.134" endtime="20201110 08:38:56.706"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.729" endtime="20201110 08:38:56.750"></status>
</kw>
<msg timestamp="20201110 08:38:56.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.726" endtime="20201110 08:38:56.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:56.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:56.754" endtime="20201110 08:38:56.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.760" endtime="20201110 08:38:56.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.719" endtime="20201110 08:38:56.766"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.713" endtime="20201110 08:38:56.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:56.784" endtime="20201110 08:38:57.131"></status>
</kw>
<msg timestamp="20201110 08:38:57.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042692444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042762861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:56.780" endtime="20201110 08:38:57.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042692444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042762861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.140" endtime="20201110 08:38:57.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.159" endtime="20201110 08:38:57.164"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.773" endtime="20201110 08:38:57.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.769" endtime="20201110 08:38:57.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.178" level="INFO">${RESULT} = [{'time': 0.042762861, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.041699999999623e-05, 'source_diff': 7.041699999999623e-05}, {'time': 0.042837819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:57.169" endtime="20201110 08:38:57.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.208" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:57.180" endtime="20201110 08:38:57.209"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.219" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.217" endtime="20201110 08:38:57.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.225" level="INFO">VALUE: [7.041699999999623e-05, 7.080500000000017e-05, 7.025000000000087e-05, 7.075000000000137e-05, 7.05689999999995e-05, 7.02639999999935e-05, 7.080599999999965e-05, 7.0583000000006e-05, 7.059699999999863e-05, 7.068099999999605e-05, 7.072299999999476e-05, 7.091699999999673e-05, 7.093100000000324e-05, 7.024999999999393e-05, 7.037499999999752e-05, 7.036099999999795e-05, 7.075000000000137e-05, 7.083299999999931e-05, 7.036099999999795e-05, 7.045799999999547e-05, 7.031899999999924e-05, 7.091700000000367e-05, 7.102799999999382e-05, 7.026400000000044e-05, 7.058299999999906e-05, 7.10559999999999e-05, 7.068100000000299e-05, 7.083399999999879e-05, 7.102800000000076e-05, 7.079200000000008e-05, 7.080500000000017e-05, 7.058299999999906e-05, 7.066699999999648e-05, 7.081899999999974e-05, 7.069400000000309e-05, 7.09439999999964e-05, 7.047200000000198e-05, 7.038900000000403e-05, 7.025000000000087e-05, 7.048600000000155e-05, 7.061100000000514e-05, 7.040200000000413e-05, 7.00979999999976e-05, 7.051400000000069e-05, 7.070899999999519e-05, 7.105500000000042e-05, 7.047199999999504e-05, 7.084699999999888e-05, 7.05559999999994e-05, 7.070799999999572e-05]</msg>
<status status="PASS" starttime="20201110 08:38:57.222" endtime="20201110 08:38:57.226"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.210" endtime="20201110 08:38:57.228"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.234" endtime="20201110 08:38:57.237"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.243" endtime="20201110 08:38:57.265"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.238" endtime="20201110 08:38:57.267"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.230" endtime="20201110 08:38:57.268"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.709" endtime="20201110 08:38:57.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:56.707" endtime="20201110 08:38:57.270"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.293" endtime="20201110 08:38:57.314"></status>
</kw>
<msg timestamp="20201110 08:38:57.315" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.290" endtime="20201110 08:38:57.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.318" endtime="20201110 08:38:57.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.324" endtime="20201110 08:38:57.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.282" endtime="20201110 08:38:57.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.277" endtime="20201110 08:38:57.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.347" endtime="20201110 08:38:57.695"></status>
</kw>
<msg timestamp="20201110 08:38:57.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043397875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.344" endtime="20201110 08:38:57.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043397875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043469819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.704" endtime="20201110 08:38:57.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.723" endtime="20201110 08:38:57.728"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.337" endtime="20201110 08:38:57.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.332" endtime="20201110 08:38:57.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:57.742" level="INFO">${RESULT} = [{'time': 0.043469819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.19439999999974e-05, 'source_diff': 7.19439999999974e-05}, {'time': 0.043548819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:57.733" endtime="20201110 08:38:57.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:57.772" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:57.744" endtime="20201110 08:38:57.772"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.783" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201110 08:38:57.781" endtime="20201110 08:38:57.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.788" level="INFO">VALUE: [7.19439999999974e-05, 7.202700000000228e-05, 7.147199999999604e-05, 7.137499999999852e-05, 7.143000000000427e-05, 7.162500000000571e-05, 7.15690000000005e-05, 7.166699999999748e-05, 7.158300000000006e-05, 7.162500000000571e-05, 7.106999999999947e-05, 7.168099999999705e-05, 7.21109999999997e-05, 7.147199999999604e-05, 7.113899999999784e-05, 7.202800000000176e-05, 7.193000000000477e-05, 7.138900000000503e-05, 7.125000000000187e-05, 7.126400000000144e-05, 7.170800000000366e-05, 7.202800000000176e-05, 7.170800000000366e-05, 7.179200000000108e-05, 7.148599999999561e-05, 7.193100000000424e-05, 7.147200000000298e-05, 7.159799999999911e-05, 7.147200000000298e-05, 7.200000000000262e-05, 7.204200000000133e-05, 7.136200000000537e-05, 7.172199999999629e-05, 7.205500000000142e-05, 7.140299999999766e-05, 7.197200000000348e-05, 7.137499999999852e-05, 7.122199999999579e-05, 7.147200000000298e-05, 7.159699999999963e-05, 7.138899999999809e-05, 7.201399999999525e-05, 7.159700000000657e-05, 7.190299999999816e-05, 7.151300000000221e-05, 7.205500000000142e-05, 7.183300000000031e-05, 7.147199999999604e-05, 7.2069000000001e-05, 7.172200000000323e-05]</msg>
<status status="PASS" starttime="20201110 08:38:57.785" endtime="20201110 08:38:57.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.774" endtime="20201110 08:38:57.791"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.798" endtime="20201110 08:38:57.800"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:57.806" endtime="20201110 08:38:57.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.802" endtime="20201110 08:38:57.830"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.793" endtime="20201110 08:38:57.831"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.272" endtime="20201110 08:38:57.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.271" endtime="20201110 08:38:57.832"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.855" endtime="20201110 08:38:57.877"></status>
</kw>
<msg timestamp="20201110 08:38:57.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.852" endtime="20201110 08:38:57.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:57.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:57.880" endtime="20201110 08:38:57.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.886" endtime="20201110 08:38:57.890"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.844" endtime="20201110 08:38:57.892"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.839" endtime="20201110 08:38:57.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:57.909" endtime="20201110 08:38:58.254"></status>
</kw>
<msg timestamp="20201110 08:38:58.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042753264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:57.906" endtime="20201110 08:38:58.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042753264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042825972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.264" endtime="20201110 08:38:58.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.282" endtime="20201110 08:38:58.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.899" endtime="20201110 08:38:58.292"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.894" endtime="20201110 08:38:58.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.305" level="INFO">${RESULT} = [{'time': 0.042825972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.270799999999772e-05, 'source_diff': 7.270799999999772e-05}, {'time': 0.042906972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:58.295" endtime="20201110 08:38:58.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:58.335" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:58.307" endtime="20201110 08:38:58.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.346" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201110 08:38:58.344" endtime="20201110 08:38:58.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.352" level="INFO">VALUE: [7.270799999999772e-05, 7.242999999999833e-05, 7.237499999999952e-05, 7.237499999999952e-05, 7.291699999999873e-05, 7.305599999999496e-05, 7.280600000000165e-05, 7.269499999999762e-05, 7.280600000000165e-05, 7.27230000000037e-05, 7.269499999999762e-05, 7.226299999999602e-05, 7.292999999999883e-05, 7.274999999999643e-05, 7.294400000000534e-05, 7.301399999999625e-05, 7.215300000000535e-05, 7.286100000000045e-05, 7.26110000000002e-05, 7.29309999999983e-05, 7.215300000000535e-05, 7.230500000000167e-05, 7.226400000000244e-05, 7.241599999999876e-05, 7.21109999999997e-05, 7.213899999999884e-05, 7.292999999999883e-05, 7.226300000000296e-05, 7.229200000000158e-05, 7.270799999999772e-05, 7.237499999999952e-05, 7.251399999999575e-05, 7.226400000000244e-05, 7.280500000000217e-05, 7.304199999999539e-05, 7.304200000000233e-05, 7.227799999999507e-05, 7.215299999999841e-05, 7.247300000000345e-05, 7.304200000000233e-05, 7.304200000000233e-05, 7.280599999999471e-05, 7.29439999999984e-05, 7.21109999999997e-05, 7.281900000000174e-05, 7.283400000000079e-05, 7.281900000000174e-05, 7.227800000000201e-05, 7.302799999999582e-05, 7.283400000000079e-05]</msg>
<status status="PASS" starttime="20201110 08:38:58.349" endtime="20201110 08:38:58.357"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.337" endtime="20201110 08:38:58.359"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.366" endtime="20201110 08:38:58.369"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.374" endtime="20201110 08:38:58.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.370" endtime="20201110 08:38:58.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.361" endtime="20201110 08:38:58.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.834" endtime="20201110 08:38:58.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:57.833" endtime="20201110 08:38:58.400"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.423" endtime="20201110 08:38:58.445"></status>
</kw>
<msg timestamp="20201110 08:38:58.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.420" endtime="20201110 08:38:58.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.448" endtime="20201110 08:38:58.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.454" endtime="20201110 08:38:58.458"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.413" endtime="20201110 08:38:58.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.407" endtime="20201110 08:38:58.461"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.478" endtime="20201110 08:38:58.810"></status>
</kw>
<msg timestamp="20201110 08:38:58.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042723792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.474" endtime="20201110 08:38:58.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042650625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042723792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:58.819" endtime="20201110 08:38:58.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.838" endtime="20201110 08:38:58.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.467" endtime="20201110 08:38:58.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.462" endtime="20201110 08:38:58.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:58.857" level="INFO">${RESULT} = [{'time': 0.042723792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.316699999999898e-05, 'source_diff': 7.316699999999898e-05}, {'time': 0.042806778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:38:58.848" endtime="20201110 08:38:58.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:58.887" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:58.859" endtime="20201110 08:38:58.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.898" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201110 08:38:58.896" endtime="20201110 08:38:58.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:58.904" level="INFO">VALUE: [7.316699999999898e-05, 7.402799999999682e-05, 7.370899999999819e-05, 7.383299999999537e-05, 7.369399999999915e-05, 7.404099999999691e-05, 7.404100000000385e-05, 7.35690000000025e-05, 7.336100000000095e-05, 7.358299999999512e-05, 7.358300000000206e-05, 7.402800000000376e-05, 7.315299999999941e-05, 7.337500000000052e-05, 7.369499999999862e-05, 7.401400000000419e-05, 7.347300000000445e-05, 7.344499999999837e-05, 7.383300000000231e-05, 7.338900000000009e-05, 7.380499999999623e-05, 7.347199999999804e-05, 7.35969999999947e-05, 7.337500000000052e-05, 7.333399999999435e-05, 7.375000000000437e-05, 7.358300000000206e-05, 7.381999999999528e-05, 7.315299999999941e-05, 7.345799999999847e-05, 7.369499999999862e-05, 7.397199999999854e-05, 7.347299999999751e-05, 7.32639999999965e-05, 7.359700000000163e-05, 7.313800000000037e-05, 7.388900000000059e-05, 7.31110000000007e-05, 7.359700000000163e-05, 7.404200000000333e-05, 7.39309999999993e-05, 7.405599999999596e-05, 7.375000000000437e-05, 7.380599999999571e-05, 7.327800000000301e-05, 7.357000000000197e-05, 7.380599999999571e-05, 7.315299999999941e-05, 7.338900000000009e-05, 7.392999999999983e-05]</msg>
<status status="PASS" starttime="20201110 08:38:58.901" endtime="20201110 08:38:58.905"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.889" endtime="20201110 08:38:58.907"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.914" endtime="20201110 08:38:58.917"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:58.923" endtime="20201110 08:38:58.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.918" endtime="20201110 08:38:58.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.909" endtime="20201110 08:38:58.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.402" endtime="20201110 08:38:58.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.401" endtime="20201110 08:38:58.949"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:58.972" endtime="20201110 08:38:58.993"></status>
</kw>
<msg timestamp="20201110 08:38:58.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.968" endtime="20201110 08:38:58.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:58.997" endtime="20201110 08:38:59.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.003" endtime="20201110 08:38:59.007"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.961" endtime="20201110 08:38:59.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.955" endtime="20201110 08:38:59.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.027" endtime="20201110 08:38:59.359"></status>
</kw>
<msg timestamp="20201110 08:38:59.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042637583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042712194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.023" endtime="20201110 08:38:59.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042637583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042712194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.369" endtime="20201110 08:38:59.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.388" endtime="20201110 08:38:59.393"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.016" endtime="20201110 08:38:59.395"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.011" endtime="20201110 08:38:59.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.407" level="INFO">${RESULT} = [{'time': 0.042712194, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.46110000000022e-05, 'source_diff': 7.46110000000022e-05}, {'time': 0.042794181, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:38:59.398" endtime="20201110 08:38:59.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:59.437" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:59.409" endtime="20201110 08:38:59.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.448" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201110 08:38:59.446" endtime="20201110 08:38:59.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.454" level="INFO">VALUE: [7.46110000000022e-05, 7.501399999999825e-05, 7.480600000000365e-05, 7.418000000000008e-05, 7.480500000000417e-05, 7.447199999999904e-05, 7.430600000000315e-05, 7.501400000000519e-05, 7.46110000000022e-05, 7.42639999999975e-05, 7.459700000000263e-05, 7.482000000000322e-05, 7.469500000000656e-05, 7.447199999999904e-05, 7.494499999999987e-05, 7.479199999999714e-05, 7.415300000000041e-05, 7.491599999999432e-05, 7.473599999999886e-05, 7.459700000000263e-05, 7.456899999999655e-05, 7.491599999999432e-05, 7.438900000000109e-05, 7.42639999999975e-05, 7.487499999999508e-05, 7.457000000000297e-05, 7.448600000000555e-05, 7.427800000000401e-05, 7.436100000000195e-05, 7.472299999999876e-05, 7.456999999999603e-05, 7.425000000000487e-05, 7.491600000000126e-05, 7.427799999999707e-05, 7.498599999999911e-05, 7.462500000000177e-05, 7.436099999999501e-05, 7.504199999999739e-05, 7.427800000000401e-05, 7.458299999999612e-05, 7.473599999999886e-05, 7.477799999999757e-05, 7.49310000000003e-05, 7.499999999999868e-05, 7.508299999999662e-05, 7.472199999999929e-05, 7.498599999999911e-05, 7.470799999999972e-05, 7.492999999999389e-05, 7.459700000000263e-05]</msg>
<status status="PASS" starttime="20201110 08:38:59.451" endtime="20201110 08:38:59.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.439" endtime="20201110 08:38:59.457"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.463" endtime="20201110 08:38:59.466"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:38:59.472" endtime="20201110 08:38:59.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.468" endtime="20201110 08:38:59.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.459" endtime="20201110 08:38:59.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.951" endtime="20201110 08:38:59.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:58.950" endtime="20201110 08:38:59.498"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.521" endtime="20201110 08:38:59.542"></status>
</kw>
<msg timestamp="20201110 08:38:59.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:59.517" endtime="20201110 08:38:59.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:38:59.545" endtime="20201110 08:38:59.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.551" endtime="20201110 08:38:59.555"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.510" endtime="20201110 08:38:59.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.504" endtime="20201110 08:38:59.558"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.575" endtime="20201110 08:38:59.888"></status>
</kw>
<msg timestamp="20201110 08:38:59.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042125792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.572" endtime="20201110 08:38:59.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042125792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042201556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:38:59.898" endtime="20201110 08:38:59.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.917" endtime="20201110 08:38:59.922"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.564" endtime="20201110 08:38:59.924"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.560" endtime="20201110 08:38:59.925"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:38:59.936" level="INFO">${RESULT} = [{'time': 0.042201556, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.5763999999999e-05, 'source_diff': 7.5763999999999e-05}, {'time': 0.042279514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7...</msg>
<status status="PASS" starttime="20201110 08:38:59.927" endtime="20201110 08:38:59.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:38:59.966" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:38:59.938" endtime="20201110 08:38:59.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.977" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201110 08:38:59.975" endtime="20201110 08:38:59.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:38:59.982" level="INFO">VALUE: [7.5763999999999e-05, 7.561099999999626e-05, 7.515300000000141e-05, 7.534700000000338e-05, 7.565300000000191e-05, 7.602800000000576e-05, 7.534799999999592e-05, 7.545899999999994e-05, 7.55839999999966e-05, 7.526299999999903e-05, 7.604099999999892e-05, 7.513900000000184e-05, 7.515300000000141e-05, 7.548599999999961e-05, 7.533299999999687e-05, 7.537500000000252e-05, 7.569400000000115e-05, 7.59310000000013e-05, 7.604199999999839e-05, 7.602799999999882e-05, 7.604200000000533e-05, 7.572200000000029e-05, 7.537499999999558e-05, 7.548599999999961e-05, 7.593000000000183e-05, 7.591600000000226e-05, 7.515299999999447e-05, 7.524999999999893e-05, 7.58890000000026e-05, 7.602799999999882e-05, 7.55690000000045e-05, 7.572200000000029e-05, 7.524999999999893e-05, 7.599999999999968e-05, 7.526400000000544e-05, 7.527800000000501e-05, 7.570900000000019e-05, 7.5151999999995e-05, 7.51389999999949e-05, 7.604100000000585e-05, 7.583300000000431e-05, 7.51389999999949e-05, 7.58189999999978e-05, 7.605599999999796e-05, 7.53189999999973e-05, 7.537500000000252e-05, 7.59169999999948e-05, 7.516700000000098e-05, 7.524999999999893e-05, 7.513900000000184e-05]</msg>
<status status="PASS" starttime="20201110 08:38:59.979" endtime="20201110 08:38:59.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.968" endtime="20201110 08:38:59.986"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:38:59.992" endtime="20201110 08:38:59.995"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:00.000" endtime="20201110 08:39:00.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.996" endtime="20201110 08:39:00.024"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.987" endtime="20201110 08:39:00.025"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.500" endtime="20201110 08:39:00.026"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:59.499" endtime="20201110 08:39:00.026"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.049" endtime="20201110 08:39:00.069"></status>
</kw>
<msg timestamp="20201110 08:39:00.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.045" endtime="20201110 08:39:00.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.073" endtime="20201110 08:39:00.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.079" endtime="20201110 08:39:00.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.038" endtime="20201110 08:39:00.085"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.033" endtime="20201110 08:39:00.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.102" endtime="20201110 08:39:00.436"></status>
</kw>
<msg timestamp="20201110 08:39:00.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.099" endtime="20201110 08:39:00.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041842528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041919417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.446" endtime="20201110 08:39:00.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.465" endtime="20201110 08:39:00.472"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.092" endtime="20201110 08:39:00.474"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.087" endtime="20201110 08:39:00.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:00.486" level="INFO">${RESULT} = [{'time': 0.041919417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.68890000000036e-05, 'source_diff': 7.68890000000036e-05}, {'time': 0.042000417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:00.477" endtime="20201110 08:39:00.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:00.516" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:00.488" endtime="20201110 08:39:00.516"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.527" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201110 08:39:00.525" endtime="20201110 08:39:00.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.533" level="INFO">VALUE: [7.68890000000036e-05, 7.702799999999982e-05, 7.670900000000119e-05, 7.704099999999992e-05, 7.637500000000352e-05, 7.61110000000037e-05, 7.68189999999988e-05, 7.633300000000481e-05, 7.659700000000463e-05, 7.648600000000061e-05, 7.647200000000104e-05, 7.624999999999993e-05, 7.636099999999701e-05, 7.693099999999536e-05, 7.661200000000368e-05, 7.636200000000343e-05, 7.704199999999939e-05, 7.648600000000061e-05, 7.690200000000369e-05, 7.68890000000036e-05, 7.648600000000061e-05, 7.658299999999812e-05, 7.691700000000273e-05, 7.66389999999964e-05, 7.69169999999958e-05, 7.672200000000129e-05, 7.656999999999803e-05, 7.69310000000023e-05, 7.694499999999493e-05, 7.61389999999959e-05, 7.629099999999917e-05, 7.692999999999589e-05, 7.637499999999658e-05, 7.694399999999546e-05, 7.702799999999982e-05, 7.634700000000438e-05, 7.627799999999907e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.661099999999726e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.615300000000241e-05, 7.655599999999846e-05, 7.61389999999959e-05, 7.702700000000035e-05, 7.669399999999521e-05, 7.62639999999995e-05, 7.648600000000061e-05, 7.679099999999967e-05]</msg>
<status status="PASS" starttime="20201110 08:39:00.529" endtime="20201110 08:39:00.534"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.518" endtime="20201110 08:39:00.536"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.542" endtime="20201110 08:39:00.545"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:00.550" endtime="20201110 08:39:00.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.546" endtime="20201110 08:39:00.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.538" endtime="20201110 08:39:00.575"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.028" endtime="20201110 08:39:00.576"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.027" endtime="20201110 08:39:00.576"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.599" endtime="20201110 08:39:00.621"></status>
</kw>
<msg timestamp="20201110 08:39:00.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.596" endtime="20201110 08:39:00.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:00.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:00.625" endtime="20201110 08:39:00.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.631" endtime="20201110 08:39:00.635"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.589" endtime="20201110 08:39:00.636"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.583" endtime="20201110 08:39:00.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:00.654" endtime="20201110 08:39:00.987"></status>
</kw>
<msg timestamp="20201110 08:39:00.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042541694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.651" endtime="20201110 08:39:00.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042464208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042541694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:00.996" endtime="20201110 08:39:01.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.015" endtime="20201110 08:39:01.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.644" endtime="20201110 08:39:01.022"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.639" endtime="20201110 08:39:01.024"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.035" level="INFO">${RESULT} = [{'time': 0.042541694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.748599999999467e-05, 'source_diff': 7.748599999999467e-05}, {'time': 0.042626694, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:01.025" endtime="20201110 08:39:01.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:01.065" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:01.037" endtime="20201110 08:39:01.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.076" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201110 08:39:01.074" endtime="20201110 08:39:01.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.081" level="INFO">VALUE: [7.748599999999467e-05, 7.802700000000135e-05, 7.712500000000427e-05, 7.755499999999999e-05, 7.745799999999553e-05, 7.801400000000125e-05, 7.78189999999998e-05, 7.759700000000563e-05, 7.762499999999783e-05, 7.759700000000563e-05, 7.781999999999928e-05, 7.770900000000219e-05, 7.759799999999817e-05, 7.751400000000075e-05, 7.758299999999912e-05, 7.758299999999912e-05, 7.72640000000005e-05, 7.740299999999672e-05, 7.737500000000452e-05, 7.736099999999801e-05, 7.791700000000373e-05, 7.793099999999636e-05, 7.712500000000427e-05, 7.802800000000082e-05, 7.747200000000204e-05, 7.744500000000237e-05, 7.770800000000272e-05, 7.750000000000118e-05, 7.722299999999432e-05, 7.736099999999801e-05, 7.806900000000006e-05, 7.711099999999776e-05, 7.730599999999921e-05, 7.761099999999826e-05, 7.769399999999621e-05, 7.783299999999937e-05, 7.74169999999963e-05, 7.730499999999974e-05, 7.773600000000186e-05, 7.805599999999996e-05, 7.795900000000244e-05, 7.79440000000034e-05, 7.715200000000394e-05, 7.727800000000007e-05, 7.737500000000452e-05, 7.725000000000093e-05, 7.733299999999887e-05, 7.770800000000272e-05, 7.79169999999968e-05, 7.745799999999553e-05]</msg>
<status status="PASS" starttime="20201110 08:39:01.078" endtime="20201110 08:39:01.083"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.067" endtime="20201110 08:39:01.085"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.091" endtime="20201110 08:39:01.094"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.099" endtime="20201110 08:39:01.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.095" endtime="20201110 08:39:01.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.086" endtime="20201110 08:39:01.124"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.578" endtime="20201110 08:39:01.125"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:00.577" endtime="20201110 08:39:01.126"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.155" endtime="20201110 08:39:01.177"></status>
</kw>
<msg timestamp="20201110 08:39:01.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.150" endtime="20201110 08:39:01.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.181" endtime="20201110 08:39:01.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.189" endtime="20201110 08:39:01.194"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.142" endtime="20201110 08:39:01.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.134" endtime="20201110 08:39:01.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.221" endtime="20201110 08:39:01.557"></status>
</kw>
<msg timestamp="20201110 08:39:01.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049610264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049689319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.216" endtime="20201110 08:39:01.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049610264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049689319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.566" endtime="20201110 08:39:01.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.585" endtime="20201110 08:39:01.591"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.208" endtime="20201110 08:39:01.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.201" endtime="20201110 08:39:01.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:01.604" level="INFO">${RESULT} = [{'time': 0.049689319, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 7.905500000000149e-05, 'source_diff': 7.905500000000149e-05}, {'time': 0.049771306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:01.595" endtime="20201110 08:39:01.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:01.634" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:01.606" endtime="20201110 08:39:01.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.646" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201110 08:39:01.643" endtime="20201110 08:39:01.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.651" level="INFO">VALUE: [7.905500000000149e-05, 7.845900000000294e-05, 7.825000000000193e-05, 7.815200000000494e-05, 7.891599999999832e-05, 7.904099999999498e-05, 7.827800000000107e-05, 7.855500000000099e-05, 7.870799999999678e-05, 7.872200000000329e-05, 7.858300000000012e-05, 7.836099999999901e-05, 7.838799999999868e-05, 7.85839999999996e-05, 7.82640000000015e-05, 7.825000000000193e-05, 7.858300000000012e-05, 7.851400000000175e-05, 7.847200000000304e-05, 7.848600000000261e-05, 7.904200000000139e-05, 7.866700000000448e-05, 7.882000000000028e-05, 7.85969999999997e-05, 7.833399999999935e-05, 7.85839999999996e-05, 7.838899999999815e-05, 7.847300000000251e-05, 7.870899999999625e-05, 7.8151999999998e-05, 7.888800000000612e-05, 7.861099999999926e-05, 7.855500000000099e-05, 7.848600000000261e-05, 7.815299999999747e-05, 7.890299999999822e-05, 7.879200000000114e-05, 7.829200000000064e-05, 7.858300000000012e-05, 7.89169999999978e-05, 7.852800000000132e-05, 7.902800000000182e-05, 7.82640000000015e-05, 7.906900000000106e-05, 7.823599999999542e-05, 7.895799999999703e-05, 7.81389999999979e-05, 7.82640000000015e-05, 7.830500000000074e-05, 7.818100000000355e-05]</msg>
<status status="PASS" starttime="20201110 08:39:01.648" endtime="20201110 08:39:01.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.636" endtime="20201110 08:39:01.654"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.661" endtime="20201110 08:39:01.663"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:01.669" endtime="20201110 08:39:01.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.665" endtime="20201110 08:39:01.692"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.656" endtime="20201110 08:39:01.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.129" endtime="20201110 08:39:01.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.127" endtime="20201110 08:39:01.695"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.718" endtime="20201110 08:39:01.739"></status>
</kw>
<msg timestamp="20201110 08:39:01.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.714" endtime="20201110 08:39:01.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:01.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:01.742" endtime="20201110 08:39:01.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.749" endtime="20201110 08:39:01.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.707" endtime="20201110 08:39:01.754"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.701" endtime="20201110 08:39:01.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:01.772" endtime="20201110 08:39:02.141"></status>
</kw>
<msg timestamp="20201110 08:39:02.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042011944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042091972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:01.769" endtime="20201110 08:39:02.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042011944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042091972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.151" endtime="20201110 08:39:02.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.171" endtime="20201110 08:39:02.177"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.761" endtime="20201110 08:39:02.179"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.757" endtime="20201110 08:39:02.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.192" level="INFO">${RESULT} = [{'time': 0.042091972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.002799999999588e-05, 'source_diff': 8.002799999999588e-05}, {'time': 0.042173972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:02.182" endtime="20201110 08:39:02.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:02.223" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:02.194" endtime="20201110 08:39:02.224"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.235" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201110 08:39:02.233" endtime="20201110 08:39:02.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.241" level="INFO">VALUE: [8.002799999999588e-05, 7.967999999999864e-05, 7.970799999999778e-05, 7.987500000000008e-05, 7.937499999999958e-05, 7.99310000000053e-05, 7.993099999999836e-05, 7.959800000000017e-05, 7.956999999999409e-05, 7.934799999999992e-05, 7.969499999999768e-05, 8.000000000000368e-05, 8.004200000000239e-05, 7.91389999999989e-05, 7.95970000000007e-05, 7.986100000000051e-05, 7.993099999999836e-05, 7.92640000000025e-05, 7.94719999999971e-05, 7.925000000000293e-05, 7.994499999999793e-05, 7.947300000000351e-05, 7.92640000000025e-05, 7.91389999999989e-05, 7.933300000000088e-05, 8.001299999999684e-05, 7.924999999999599e-05, 7.995800000000497e-05, 7.909699999999326e-05, 7.940300000000566e-05, 7.950000000000318e-05, 7.956900000000156e-05, 7.916699999999804e-05, 7.991700000000573e-05, 7.926399999999556e-05, 7.915299999999847e-05, 7.998600000000411e-05, 8.004100000000292e-05, 7.970799999999778e-05, 7.98190000000018e-05, 7.91389999999989e-05, 7.951400000000275e-05, 7.992999999999889e-05, 7.937499999999958e-05, 7.944399999999796e-05, 8.002800000000282e-05, 7.983400000000085e-05, 7.937499999999958e-05, 7.945900000000394e-05, 7.933300000000088e-05]</msg>
<status status="PASS" starttime="20201110 08:39:02.238" endtime="20201110 08:39:02.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.226" endtime="20201110 08:39:02.245"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.251" endtime="20201110 08:39:02.254"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.260" endtime="20201110 08:39:02.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.256" endtime="20201110 08:39:02.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.247" endtime="20201110 08:39:02.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.697" endtime="20201110 08:39:02.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:01.696" endtime="20201110 08:39:02.287"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.311" endtime="20201110 08:39:02.333"></status>
</kw>
<msg timestamp="20201110 08:39:02.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.308" endtime="20201110 08:39:02.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.337" endtime="20201110 08:39:02.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.343" endtime="20201110 08:39:02.348"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.300" endtime="20201110 08:39:02.350"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.294" endtime="20201110 08:39:02.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.369" endtime="20201110 08:39:02.707"></status>
</kw>
<msg timestamp="20201110 08:39:02.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044781278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044861542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.366" endtime="20201110 08:39:02.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044781278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044861542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.717" endtime="20201110 08:39:02.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.735" endtime="20201110 08:39:02.743"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.358" endtime="20201110 08:39:02.744"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.353" endtime="20201110 08:39:02.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:02.756" level="INFO">${RESULT} = [{'time': 0.044861542, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.026399999999656e-05, 'source_diff': 8.026399999999656e-05}, {'time': 0.044945583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:02.747" endtime="20201110 08:39:02.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:02.786" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:02.759" endtime="20201110 08:39:02.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.797" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201110 08:39:02.795" endtime="20201110 08:39:02.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.803" level="INFO">VALUE: [8.026399999999656e-05, 8.09719999999986e-05, 8.093099999999936e-05, 8.024999999999699e-05, 8.025000000000393e-05, 8.104200000000339e-05, 8.106900000000306e-05, 8.025000000000393e-05, 8.10269999999974e-05, 8.015299999999947e-05, 8.024999999999699e-05, 8.093099999999936e-05, 8.082000000000228e-05, 8.055600000000246e-05, 8.09310000000063e-05, 8.015299999999947e-05, 8.093099999999936e-05, 8.027800000000307e-05, 8.022300000000426e-05, 8.080599999999577e-05, 8.104099999999698e-05, 8.036099999999408e-05, 8.04719999999981e-05, 8.026399999999656e-05, 8.016699999999904e-05, 8.045799999999853e-05, 8.104199999999645e-05, 8.088900000000065e-05, 8.102800000000382e-05, 8.094499999999893e-05, 8.017999999999914e-05, 8.070899999999825e-05, 8.098599999999817e-05, 8.03049999999958e-05, 8.102700000000435e-05, 8.048599999999767e-05, 8.068099999999911e-05, 8.058299999999519e-05, 8.037500000000058e-05, 8.076399999999706e-05, 8.072299999999782e-05, 8.029200000000264e-05, 8.080600000000271e-05, 8.016700000000598e-05, 8.087500000000108e-05, 8.083299999999544e-05, 8.09169999999998e-05, 8.011100000000076e-05, 8.036100000000101e-05, 8.037500000000058e-05]</msg>
<status status="PASS" starttime="20201110 08:39:02.800" endtime="20201110 08:39:02.804"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.788" endtime="20201110 08:39:02.806"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.812" endtime="20201110 08:39:02.815"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:02.821" endtime="20201110 08:39:02.842"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.816" endtime="20201110 08:39:02.844"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.808" endtime="20201110 08:39:02.845"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.289" endtime="20201110 08:39:02.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.288" endtime="20201110 08:39:02.846"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.869" endtime="20201110 08:39:02.890"></status>
</kw>
<msg timestamp="20201110 08:39:02.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.866" endtime="20201110 08:39:02.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:02.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:02.894" endtime="20201110 08:39:02.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.900" endtime="20201110 08:39:02.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.859" endtime="20201110 08:39:02.906"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.853" endtime="20201110 08:39:02.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:02.923" endtime="20201110 08:39:03.256"></status>
</kw>
<msg timestamp="20201110 08:39:03.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041848542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041930236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:02.920" endtime="20201110 08:39:03.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041848542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041930236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.266" endtime="20201110 08:39:03.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.285" endtime="20201110 08:39:03.290"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.913" endtime="20201110 08:39:03.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.908" endtime="20201110 08:39:03.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.304" level="INFO">${RESULT} = [{'time': 0.041930236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.169400000000021e-05, 'source_diff': 8.169400000000021e-05}, {'time': 0.042016236, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:03.295" endtime="20201110 08:39:03.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:03.334" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:03.306" endtime="20201110 08:39:03.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.345" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201110 08:39:03.342" endtime="20201110 08:39:03.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.351" level="INFO">VALUE: [8.169400000000021e-05, 8.137500000000158e-05, 8.183400000000285e-05, 8.180600000000371e-05, 8.169499999999968e-05, 8.147200000000604e-05, 8.15840000000026e-05, 8.181999999999634e-05, 8.181899999999687e-05, 8.136200000000149e-05, 8.181899999999687e-05, 8.19719999999996e-05, 8.137500000000158e-05, 8.133299999999594e-05, 8.204199999999745e-05, 8.136100000000202e-05, 8.169400000000021e-05, 8.198599999999917e-05, 8.126399999999756e-05, 8.127800000000407e-05, 8.188900000000165e-05, 8.190300000000122e-05, 8.179099999999773e-05, 8.143099999999986e-05, 8.113800000000143e-05, 8.170799999999978e-05, 8.130600000000321e-05, 8.180500000000424e-05, 8.115300000000047e-05, 8.170799999999978e-05, 8.156900000000356e-05, 8.116700000000004e-05, 8.130500000000374e-05, 8.14719999999991e-05, 8.138900000000115e-05, 8.115300000000047e-05, 8.109799999999473e-05, 8.112500000000133e-05, 8.124999999999799e-05, 8.194400000000046e-05, 8.15970000000027e-05, 8.181899999999687e-05, 8.15970000000027e-05, 8.204199999999745e-05, 8.204199999999745e-05, 8.205600000000396e-05, 8.169499999999968e-05, 8.15840000000026e-05, 8.136200000000149e-05, 8.11390000000009e-05]</msg>
<status status="PASS" starttime="20201110 08:39:03.348" endtime="20201110 08:39:03.359"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.336" endtime="20201110 08:39:03.360"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.367" endtime="20201110 08:39:03.370"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.375" endtime="20201110 08:39:03.397"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.371" endtime="20201110 08:39:03.399"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.362" endtime="20201110 08:39:03.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.849" endtime="20201110 08:39:03.401"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:02.847" endtime="20201110 08:39:03.401"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.424" endtime="20201110 08:39:03.446"></status>
</kw>
<msg timestamp="20201110 08:39:03.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.421" endtime="20201110 08:39:03.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.449" endtime="20201110 08:39:03.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.456" endtime="20201110 08:39:03.460"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.413" endtime="20201110 08:39:03.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.408" endtime="20201110 08:39:03.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.481" endtime="20201110 08:39:03.816"></status>
</kw>
<msg timestamp="20201110 08:39:03.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042170597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042253417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.477" endtime="20201110 08:39:03.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042170597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042253417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:03.826" endtime="20201110 08:39:03.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.844" endtime="20201110 08:39:03.850"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.470" endtime="20201110 08:39:03.851"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.465" endtime="20201110 08:39:03.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:03.863" level="INFO">${RESULT} = [{'time': 0.042253417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.282000000000428e-05, 'source_diff': 8.282000000000428e-05}, {'time': 0.042341431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:03.854" endtime="20201110 08:39:03.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:03.893" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:03.866" endtime="20201110 08:39:03.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.905" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201110 08:39:03.902" endtime="20201110 08:39:03.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:03.910" level="INFO">VALUE: [8.282000000000428e-05, 8.293100000000136e-05, 8.293100000000136e-05, 8.280600000000471e-05, 8.305499999999855e-05, 8.224999999999899e-05, 8.258300000000413e-05, 8.223599999999942e-05, 8.215300000000147e-05, 8.236100000000302e-05, 8.215300000000147e-05, 8.258300000000413e-05, 8.307000000000453e-05, 8.273599999999992e-05, 8.226399999999856e-05, 8.270900000000025e-05, 8.302799999999888e-05, 8.291600000000232e-05, 8.256900000000456e-05, 8.305499999999855e-05, 8.231999999999684e-05, 8.269399999999427e-05, 8.28049999999983e-05, 8.24720000000001e-05, 8.304199999999845e-05, 8.236099999999608e-05, 8.266700000000154e-05, 8.293100000000136e-05, 8.301399999999931e-05, 8.236200000000249e-05, 8.305499999999855e-05, 8.291599999999538e-05, 8.258299999999719e-05, 8.222299999999932e-05, 8.258299999999719e-05, 8.280500000000524e-05, 8.270800000000078e-05, 8.281999999999734e-05, 8.247199999999316e-05, 8.248599999999967e-05, 8.261200000000274e-05, 8.261100000000327e-05, 8.25970000000037e-05, 8.25970000000037e-05, 8.226399999999856e-05, 8.258299999999719e-05, 8.270800000000078e-05, 8.226399999999856e-05, 8.259699999999676e-05, 8.280599999999777e-05]</msg>
<status status="PASS" starttime="20201110 08:39:03.907" endtime="20201110 08:39:03.911"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.895" endtime="20201110 08:39:03.913"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.919" endtime="20201110 08:39:03.922"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:03.928" endtime="20201110 08:39:03.950"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.923" endtime="20201110 08:39:03.951"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.915" endtime="20201110 08:39:03.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.403" endtime="20201110 08:39:03.953"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.402" endtime="20201110 08:39:03.954"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:03.977" endtime="20201110 08:39:03.999"></status>
</kw>
<msg timestamp="20201110 08:39:04.000" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:03.973" endtime="20201110 08:39:04.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.002" endtime="20201110 08:39:04.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.008" endtime="20201110 08:39:04.012"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.966" endtime="20201110 08:39:04.014"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.960" endtime="20201110 08:39:04.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.032" endtime="20201110 08:39:04.367"></status>
</kw>
<msg timestamp="20201110 08:39:04.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042435806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042518944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.028" endtime="20201110 08:39:04.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042435806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042518944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.377" endtime="20201110 08:39:04.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.395" endtime="20201110 08:39:04.400"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.021" endtime="20201110 08:39:04.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.017" endtime="20201110 08:39:04.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.414" level="INFO">${RESULT} = [{'time': 0.042518944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.313800000000343e-05, 'source_diff': 8.313800000000343e-05}, {'time': 0.042610958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:04.405" endtime="20201110 08:39:04.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:04.444" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:04.416" endtime="20201110 08:39:04.445"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.455" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201110 08:39:04.453" endtime="20201110 08:39:04.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.461" level="INFO">VALUE: [8.313800000000343e-05, 8.337499999999665e-05, 8.358299999999819e-05, 8.348600000000067e-05, 8.370800000000178e-05, 8.401400000000031e-05, 8.359699999999776e-05, 8.319400000000171e-05, 8.348600000000067e-05, 8.381999999999834e-05, 8.402799999999988e-05, 8.326399999999956e-05, 8.315199999999606e-05, 8.39720000000016e-05, 8.342999999999545e-05, 8.31669999999951e-05, 8.38049999999993e-05, 8.3944999999995e-05, 8.393100000000236e-05, 8.356999999999809e-05, 8.395799999999509e-05, 8.402799999999988e-05, 8.36669999999956e-05, 8.402799999999988e-05, 8.359800000000417e-05, 8.326300000000009e-05, 8.38049999999993e-05, 8.401400000000031e-05, 8.324999999999999e-05, 8.32919999999987e-05, 8.345800000000153e-05, 8.397300000000107e-05, 8.326399999999956e-05, 8.401400000000031e-05, 8.336099999999708e-05, 8.365300000000297e-05, 8.372200000000135e-05, 8.361099999999733e-05, 8.369400000000221e-05, 8.370800000000178e-05, 8.361099999999733e-05, 8.31390000000029e-05, 8.369400000000221e-05, 8.363899999999647e-05, 8.336100000000402e-05, 8.370800000000178e-05, 8.380599999999877e-05, 8.400000000000074e-05, 8.361200000000374e-05, 8.359799999999723e-05]</msg>
<status status="PASS" starttime="20201110 08:39:04.458" endtime="20201110 08:39:04.462"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.446" endtime="20201110 08:39:04.464"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.470" endtime="20201110 08:39:04.473"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:04.479" endtime="20201110 08:39:04.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.474" endtime="20201110 08:39:04.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.466" endtime="20201110 08:39:04.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.956" endtime="20201110 08:39:04.504"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:03.955" endtime="20201110 08:39:04.505"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.529" endtime="20201110 08:39:04.551"></status>
</kw>
<msg timestamp="20201110 08:39:04.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.526" endtime="20201110 08:39:04.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.559" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:04.555" endtime="20201110 08:39:04.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.561" endtime="20201110 08:39:04.565"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.518" endtime="20201110 08:39:04.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.512" endtime="20201110 08:39:04.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.586" endtime="20201110 08:39:04.932"></status>
</kw>
<msg timestamp="20201110 08:39:04.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044285153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.582" endtime="20201110 08:39:04.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:04.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044285153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044369611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:04.942" endtime="20201110 08:39:04.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:04.963" endtime="20201110 08:39:04.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.575" endtime="20201110 08:39:04.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.570" endtime="20201110 08:39:04.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:04.984" level="INFO">${RESULT} = [{'time': 0.044369611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.445800000000253e-05, 'source_diff': 8.445800000000253e-05}, {'time': 0.044460625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:04.975" endtime="20201110 08:39:04.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:05.014" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:04.986" endtime="20201110 08:39:05.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.025" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201110 08:39:05.023" endtime="20201110 08:39:05.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.030" level="INFO">VALUE: [8.445800000000253e-05, 8.436099999999808e-05, 8.41669999999961e-05, 8.502800000000088e-05, 8.46390000000044e-05, 8.493100000000336e-05, 8.448700000000114e-05, 8.440300000000373e-05, 8.481899999999987e-05, 8.437500000000459e-05, 8.469400000000321e-05, 8.426400000000056e-05, 8.41390000000039e-05, 8.469400000000321e-05, 8.494500000000293e-05, 8.511099999999883e-05, 8.456999999999909e-05, 8.459799999999823e-05, 8.450000000000124e-05, 8.472200000000235e-05, 8.434799999999798e-05, 8.483299999999944e-05, 8.504100000000098e-05, 8.413899999999697e-05, 8.487500000000509e-05, 8.450000000000124e-05, 8.470800000000278e-05, 8.425000000000099e-05, 8.437500000000459e-05, 8.419399999999577e-05, 8.426400000000056e-05, 8.437499999999765e-05, 8.480599999999977e-05, 8.447299999999464e-05, 8.445800000000253e-05, 8.413899999999697e-05, 8.419500000000218e-05, 8.458299999999919e-05, 8.448600000000167e-05, 8.438899999999722e-05, 8.44170000000033e-05, 8.490299999999729e-05, 8.493100000000336e-05, 8.470900000000225e-05, 8.431899999999937e-05, 8.494400000000346e-05, 8.425000000000099e-05, 8.41249999999974e-05, 8.495800000000303e-05, 8.494400000000346e-05]</msg>
<status status="PASS" starttime="20201110 08:39:05.027" endtime="20201110 08:39:05.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.016" endtime="20201110 08:39:05.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.040" endtime="20201110 08:39:05.043"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.048" endtime="20201110 08:39:05.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.044" endtime="20201110 08:39:05.072"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.035" endtime="20201110 08:39:05.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.507" endtime="20201110 08:39:05.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:04.506" endtime="20201110 08:39:05.074"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.097" endtime="20201110 08:39:05.119"></status>
</kw>
<msg timestamp="20201110 08:39:05.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.094" endtime="20201110 08:39:05.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.122" endtime="20201110 08:39:05.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.128" endtime="20201110 08:39:05.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.087" endtime="20201110 08:39:05.134"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.081" endtime="20201110 08:39:05.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.151" endtime="20201110 08:39:05.495"></status>
</kw>
<msg timestamp="20201110 08:39:05.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042336028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042421597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.148" endtime="20201110 08:39:05.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042336028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042421597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.505" endtime="20201110 08:39:05.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.523" endtime="20201110 08:39:05.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.141" endtime="20201110 08:39:05.531"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.136" endtime="20201110 08:39:05.532"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:05.543" level="INFO">${RESULT} = [{'time': 0.042421597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.556900000000062e-05, 'source_diff': 8.556900000000062e-05}, {'time': 0.042514583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:05.534" endtime="20201110 08:39:05.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:05.574" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:05.546" endtime="20201110 08:39:05.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.585" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201110 08:39:05.583" endtime="20201110 08:39:05.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.590" level="INFO">VALUE: [8.556900000000062e-05, 8.58050000000013e-05, 8.526399999999462e-05, 8.518100000000361e-05, 8.523599999999548e-05, 8.545800000000353e-05, 8.515299999999754e-05, 8.582000000000034e-05, 8.524999999999505e-05, 8.605600000000102e-05, 8.593099999999743e-05, 8.525000000000199e-05, 8.513899999999797e-05, 8.523599999999548e-05, 8.592999999999795e-05, 8.550000000000224e-05, 8.551400000000181e-05, 8.601400000000231e-05, 8.591699999999786e-05, 8.59590000000035e-05, 8.604200000000145e-05, 8.604200000000145e-05, 8.513899999999797e-05, 8.604100000000198e-05, 8.558300000000019e-05, 8.526400000000156e-05, 8.558300000000019e-05, 8.537499999999865e-05, 8.545799999999659e-05, 8.54720000000031e-05, 8.577800000000163e-05, 8.548600000000267e-05, 8.515299999999754e-05, 8.570899999999632e-05, 8.524999999999505e-05, 8.601400000000231e-05, 8.580600000000077e-05, 8.529100000000123e-05, 8.548600000000267e-05, 8.523600000000242e-05, 8.559699999999976e-05, 8.565299999999804e-05, 8.604200000000145e-05, 8.556900000000062e-05, 8.544399999999702e-05, 8.568100000000411e-05, 8.523599999999548e-05, 8.519500000000318e-05, 8.527700000000166e-05, 8.506999999999959e-05]</msg>
<status status="PASS" starttime="20201110 08:39:05.587" endtime="20201110 08:39:05.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.576" endtime="20201110 08:39:05.594"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.600" endtime="20201110 08:39:05.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:05.609" endtime="20201110 08:39:05.630"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.604" endtime="20201110 08:39:05.632"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.596" endtime="20201110 08:39:05.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.077" endtime="20201110 08:39:05.634"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.075" endtime="20201110 08:39:05.635"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.657" endtime="20201110 08:39:05.679"></status>
</kw>
<msg timestamp="20201110 08:39:05.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.654" endtime="20201110 08:39:05.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:05.687" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:05.683" endtime="20201110 08:39:05.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.689" endtime="20201110 08:39:05.693"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.647" endtime="20201110 08:39:05.694"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.641" endtime="20201110 08:39:05.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:05.712" endtime="20201110 08:39:06.059"></status>
</kw>
<msg timestamp="20201110 08:39:06.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042170764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042257806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:05.709" endtime="20201110 08:39:06.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042170764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042257806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.068" endtime="20201110 08:39:06.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.087" endtime="20201110 08:39:06.093"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.702" endtime="20201110 08:39:06.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.697" endtime="20201110 08:39:06.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.106" level="INFO">${RESULT} = [{'time': 0.042257806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.704200000000245e-05, 'source_diff': 8.704200000000245e-05}, {'time': 0.042352806, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:06.097" endtime="20201110 08:39:06.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:06.137" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:06.109" endtime="20201110 08:39:06.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.148" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201110 08:39:06.145" endtime="20201110 08:39:06.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.153" level="INFO">VALUE: [8.704200000000245e-05, 8.669499999999775e-05, 8.638899999999922e-05, 8.615199999999906e-05, 8.701400000000331e-05, 8.626399999999562e-05, 8.630600000000127e-05, 8.61669999999981e-05, 8.680600000000177e-05, 8.659700000000076e-05, 8.63050000000018e-05, 8.657000000000109e-05, 8.663899999999947e-05, 8.704200000000245e-05, 8.648600000000367e-05, 8.691599999999938e-05, 8.704200000000245e-05, 8.69170000000058e-05, 8.68050000000023e-05, 8.613899999999897e-05, 8.686099999999364e-05, 8.670799999999784e-05, 8.625000000000299e-05, 8.615299999999854e-05, 8.623599999999648e-05, 8.647300000000357e-05, 8.647300000000357e-05, 8.631900000000137e-05, 8.656900000000162e-05, 8.609700000000026e-05, 8.619399999999777e-05, 8.655500000000205e-05, 8.636100000000008e-05, 8.679199999999526e-05, 8.693099999999843e-05, 8.698599999999723e-05, 8.637499999999965e-05, 8.693099999999843e-05, 8.648700000000314e-05, 8.644400000000496e-05, 8.616700000000505e-05, 8.661100000000033e-05, 8.618099999999768e-05, 8.658300000000119e-05, 8.658299999999425e-05, 8.670800000000478e-05, 8.683400000000091e-05, 8.69999999999968e-05, 8.670900000000425e-05, 8.648700000000314e-05]</msg>
<status status="PASS" starttime="20201110 08:39:06.150" endtime="20201110 08:39:06.154"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.138" endtime="20201110 08:39:06.156"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.162" endtime="20201110 08:39:06.165"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.171" endtime="20201110 08:39:06.193"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.167" endtime="20201110 08:39:06.195"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.158" endtime="20201110 08:39:06.196"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.637" endtime="20201110 08:39:06.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:05.636" endtime="20201110 08:39:06.197"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.220" endtime="20201110 08:39:06.242"></status>
</kw>
<msg timestamp="20201110 08:39:06.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.216" endtime="20201110 08:39:06.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.245" endtime="20201110 08:39:06.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.251" endtime="20201110 08:39:06.255"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.209" endtime="20201110 08:39:06.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.203" endtime="20201110 08:39:06.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.275" endtime="20201110 08:39:06.622"></status>
</kw>
<msg timestamp="20201110 08:39:06.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042475764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042562972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.271" endtime="20201110 08:39:06.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042475764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042562972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.631" endtime="20201110 08:39:06.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.650" endtime="20201110 08:39:06.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.264" endtime="20201110 08:39:06.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.260" endtime="20201110 08:39:06.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:06.669" level="INFO">${RESULT} = [{'time': 0.042562972, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.720799999999834e-05, 'source_diff': 8.720799999999834e-05}, {'time': 0.042659931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:06.660" endtime="20201110 08:39:06.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:06.699" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:06.671" endtime="20201110 08:39:06.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.710" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201110 08:39:06.708" endtime="20201110 08:39:06.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.716" level="INFO">VALUE: [8.720799999999834e-05, 8.804199999999651e-05, 8.774999999999755e-05, 8.759700000000176e-05, 8.737500000000065e-05, 8.801400000000431e-05, 8.769399999999927e-05, 8.76669999999996e-05, 8.759700000000176e-05, 8.748600000000467e-05, 8.741699999999936e-05, 8.709700000000126e-05, 8.74999999999973e-05, 8.802799999999694e-05, 8.759799999999429e-05, 8.748600000000467e-05, 8.737500000000065e-05, 8.780499999999636e-05, 8.794399999999952e-05, 8.811099999999489e-05, 8.725000000000399e-05, 8.745799999999859e-05, 8.793099999999943e-05, 8.806900000000312e-05, 8.793099999999943e-05, 8.79999999999978e-05, 8.715299999999954e-05, 8.715200000000006e-05, 8.792999999999995e-05, 8.738900000000022e-05, 8.751399999999687e-05, 8.791699999999986e-05, 8.790300000000029e-05, 8.791699999999986e-05, 8.759700000000176e-05, 8.727800000000313e-05, 8.808299999999575e-05, 8.736100000000108e-05, 8.773599999999798e-05, 8.780600000000277e-05, 8.730600000000227e-05, 8.715200000000006e-05, 8.715299999999954e-05, 8.71250000000004e-05, 8.738900000000022e-05, 8.715299999999954e-05, 8.758299999999525e-05, 8.758299999999525e-05, 8.786100000000158e-05, 8.780599999999583e-05]</msg>
<status status="PASS" starttime="20201110 08:39:06.712" endtime="20201110 08:39:06.717"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.701" endtime="20201110 08:39:06.719"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.725" endtime="20201110 08:39:06.728"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:06.733" endtime="20201110 08:39:06.755"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.729" endtime="20201110 08:39:06.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.721" endtime="20201110 08:39:06.758"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.199" endtime="20201110 08:39:06.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.198" endtime="20201110 08:39:06.759"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.782" endtime="20201110 08:39:06.804"></status>
</kw>
<msg timestamp="20201110 08:39:06.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.779" endtime="20201110 08:39:06.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:06.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:06.808" endtime="20201110 08:39:06.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.814" endtime="20201110 08:39:06.818"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.772" endtime="20201110 08:39:06.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.766" endtime="20201110 08:39:06.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:06.838" endtime="20201110 08:39:07.185"></status>
</kw>
<msg timestamp="20201110 08:39:07.192" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042237319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042326028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:06.834" endtime="20201110 08:39:07.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042237319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042326028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.195" endtime="20201110 08:39:07.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.213" endtime="20201110 08:39:07.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.827" endtime="20201110 08:39:07.222"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.822" endtime="20201110 08:39:07.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.234" level="INFO">${RESULT} = [{'time': 0.042326028, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.870899999999932e-05, 'source_diff': 8.870899999999932e-05}, {'time': 0.042419042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:07.225" endtime="20201110 08:39:07.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:07.264" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:07.236" endtime="20201110 08:39:07.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.275" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201110 08:39:07.273" endtime="20201110 08:39:07.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.280" level="INFO">VALUE: [8.870899999999932e-05, 8.838899999999428e-05, 8.826399999999762e-05, 8.88329999999965e-05, 8.847299999999864e-05, 8.904099999999804e-05, 8.827799999999719e-05, 8.884699999999607e-05, 8.829099999999729e-05, 8.837500000000165e-05, 8.905599999999708e-05, 8.837500000000165e-05, 8.838900000000122e-05, 8.815300000000054e-05, 8.834699999999557e-05, 8.891700000000086e-05, 8.868100000000018e-05, 8.901400000000531e-05, 8.881900000000387e-05, 8.847199999999916e-05, 8.815300000000054e-05, 8.894400000000052e-05, 8.859699999999582e-05, 8.893100000000043e-05, 8.815300000000054e-05, 8.904199999999751e-05, 8.858400000000266e-05, 8.813900000000097e-05, 8.861099999999539e-05, 8.826299999999815e-05, 8.879099999999779e-05, 8.881900000000387e-05, 8.813900000000097e-05, 8.872199999999941e-05, 8.859700000000276e-05, 8.893100000000043e-05, 8.820799999999934e-05, 8.847199999999916e-05, 8.81250000000014e-05, 8.859799999999529e-05, 8.905499999999761e-05, 8.813900000000097e-05, 8.888800000000224e-05, 8.813900000000097e-05, 8.850000000000524e-05, 8.830600000000327e-05, 8.902799999999794e-05, 8.880599999999683e-05, 8.827799999999719e-05, 8.81670000000001e-05]</msg>
<status status="PASS" starttime="20201110 08:39:07.277" endtime="20201110 08:39:07.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.266" endtime="20201110 08:39:07.284"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.290" endtime="20201110 08:39:07.293"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.299" endtime="20201110 08:39:07.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.294" endtime="20201110 08:39:07.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.286" endtime="20201110 08:39:07.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.762" endtime="20201110 08:39:07.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:06.760" endtime="20201110 08:39:07.325"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.347" endtime="20201110 08:39:07.369"></status>
</kw>
<msg timestamp="20201110 08:39:07.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.344" endtime="20201110 08:39:07.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.373" endtime="20201110 08:39:07.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.379" endtime="20201110 08:39:07.383"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.337" endtime="20201110 08:39:07.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.331" endtime="20201110 08:39:07.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.402" endtime="20201110 08:39:07.748"></status>
</kw>
<msg timestamp="20201110 08:39:07.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042403222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042493042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.399" endtime="20201110 08:39:07.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042403222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042493042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.757" endtime="20201110 08:39:07.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.776" endtime="20201110 08:39:07.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.392" endtime="20201110 08:39:07.783"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.387" endtime="20201110 08:39:07.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:07.795" level="INFO">${RESULT} = [{'time': 0.042493042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 8.982000000000434e-05, 'source_diff': 8.982000000000434e-05}, {'time': 0.042592056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:07.786" endtime="20201110 08:39:07.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:07.825" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:07.797" endtime="20201110 08:39:07.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.836" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201110 08:39:07.834" endtime="20201110 08:39:07.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.842" level="INFO">VALUE: [8.982000000000434e-05, 9.005600000000502e-05, 9.005499999999861e-05, 8.937500000000265e-05, 8.980499999999836e-05, 8.938900000000222e-05, 8.969399999999433e-05, 8.948599999999973e-05, 8.990300000000229e-05, 8.97079999999939e-05, 8.938900000000222e-05, 9.004199999999851e-05, 9.001400000000631e-05, 8.972200000000041e-05, 9.002799999999894e-05, 8.984699999999707e-05, 8.990200000000281e-05, 8.961099999999639e-05, 8.936099999999614e-05, 8.98329999999975e-05, 8.979199999999826e-05, 8.937500000000265e-05, 8.979199999999826e-05, 8.97920000000052e-05, 8.945900000000007e-05, 8.963899999999553e-05, 8.991700000000186e-05, 8.912499999999546e-05, 8.966600000000213e-05, 8.948599999999973e-05, 8.913900000000197e-05, 8.924999999999905e-05, 8.937499999999571e-05, 8.973599999999998e-05, 8.958299999999725e-05, 8.99999999999998e-05, 8.938900000000222e-05, 9.002799999999894e-05, 8.906999999999665e-05, 8.926299999999915e-05, 8.961100000000333e-05, 8.926399999999862e-05, 8.937500000000265e-05, 8.944400000000102e-05, 8.98329999999975e-05, 8.968100000000118e-05, 8.951399999999887e-05, 8.958300000000419e-05, 8.995900000000057e-05, 8.970900000000032e-05]</msg>
<status status="PASS" starttime="20201110 08:39:07.838" endtime="20201110 08:39:07.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.827" endtime="20201110 08:39:07.845"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.851" endtime="20201110 08:39:07.854"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:07.859" endtime="20201110 08:39:07.879"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.855" endtime="20201110 08:39:07.880"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.847" endtime="20201110 08:39:07.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.327" endtime="20201110 08:39:07.881"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.325" endtime="20201110 08:39:07.881"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.892" endtime="20201110 08:39:07.911"></status>
</kw>
<msg timestamp="20201110 08:39:07.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.891" endtime="20201110 08:39:07.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:07.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:07.913" endtime="20201110 08:39:07.915"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.916" endtime="20201110 08:39:07.917"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.887" endtime="20201110 08:39:07.918"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.885" endtime="20201110 08:39:07.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:07.927" endtime="20201110 08:39:08.244"></status>
</kw>
<msg timestamp="20201110 08:39:08.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024985722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:07.925" endtime="20201110 08:39:08.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024985722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025075986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:08.254" endtime="20201110 08:39:08.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.272" endtime="20201110 08:39:08.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.922" endtime="20201110 08:39:08.280"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.920" endtime="20201110 08:39:08.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.292" level="INFO">${RESULT} = [{'time': 0.025075986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.026400000000309e-05, 'source_diff': 9.026400000000309e-05}, {'time': 0.025172, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:39:08.283" endtime="20201110 08:39:08.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:08.322" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:08.294" endtime="20201110 08:39:08.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.333" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201110 08:39:08.330" endtime="20201110 08:39:08.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.338" level="INFO">VALUE: [9.026400000000309e-05, 9.037500000000018e-05, 9.061099999999739e-05, 9.05000000000003e-05, 9.055599999999858e-05, 9.011199999999983e-05, 9.05000000000003e-05, 9.076400000000012e-05, 9.01519999999996e-05, 9.026399999999962e-05, 9.097199999999819e-05, 9.070799999999837e-05, 9.037500000000018e-05, 9.015299999999907e-05, 9.01389999999995e-05, 9.023600000000048e-05, 9.037500000000018e-05, 9.070900000000132e-05, 9.102799999999994e-05, 9.036200000000008e-05, 9.01519999999996e-05, 9.016699999999864e-05, 9.020900000000082e-05, 9.027799999999919e-05, 9.084700000000154e-05, 9.015299999999907e-05, 9.063800000000052e-05, 9.037500000000018e-05, 9.075000000000055e-05, 9.047300000000064e-05, 9.029099999999929e-05, 9.079199999999926e-05, 9.081899999999893e-05, 9.092999999999948e-05, 9.06939999999988e-05, 9.013900000000297e-05, 9.047200000000116e-05, 9.040299999999932e-05, 9.023600000000048e-05, 9.023599999999701e-05, 9.083399999999797e-05, 9.087500000000068e-05, 9.090299999999982e-05, 9.04589999999976e-05, 9.072200000000141e-05, 9.090200000000034e-05, 9.06800000000027e-05, 9.077799999999969e-05, 9.027799999999919e-05, 9.036100000000061e-05]</msg>
<status status="PASS" starttime="20201110 08:39:08.335" endtime="20201110 08:39:08.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.324" endtime="20201110 08:39:08.341"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.348" endtime="20201110 08:39:08.351"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.356" endtime="20201110 08:39:08.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.352" endtime="20201110 08:39:08.380"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.343" endtime="20201110 08:39:08.381"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.882" endtime="20201110 08:39:08.382"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:07.882" endtime="20201110 08:39:08.382"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.405" endtime="20201110 08:39:08.427"></status>
</kw>
<msg timestamp="20201110 08:39:08.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.402" endtime="20201110 08:39:08.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.431" endtime="20201110 08:39:08.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.437" endtime="20201110 08:39:08.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.395" endtime="20201110 08:39:08.442"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.389" endtime="20201110 08:39:08.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.460" endtime="20201110 08:39:08.804"></status>
</kw>
<msg timestamp="20201110 08:39:08.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042389639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042481, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:39:08.457" endtime="20201110 08:39:08.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042389639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042481, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201110 08:39:08.813" endtime="20201110 08:39:08.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.832" endtime="20201110 08:39:08.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.450" endtime="20201110 08:39:08.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.445" endtime="20201110 08:39:08.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:08.851" level="INFO">${RESULT} = [{'time': 0.042481, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.136099999999814e-05, 'source_diff': 9.136099999999814e-05}, {'time': 0.042578083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:39:08.842" endtime="20201110 08:39:08.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:08.881" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:08.853" endtime="20201110 08:39:08.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.892" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201110 08:39:08.890" endtime="20201110 08:39:08.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.898" level="INFO">VALUE: [9.136099999999814e-05, 9.154100000000054e-05, 9.191700000000386e-05, 9.159799999999829e-05, 9.202800000000094e-05, 9.159699999999882e-05, 9.202700000000147e-05, 9.192999999999701e-05, 9.172199999999547e-05, 9.134699999999857e-05, 9.15000000000013e-05, 9.16659999999972e-05, 9.11529999999966e-05, 9.136099999999814e-05, 9.1945000000003e-05, 9.11529999999966e-05, 9.204199999999357e-05, 9.123699999999402e-05, 9.18329999999995e-05, 9.159699999999882e-05, 9.209699999999932e-05, 9.14859999999948e-05, 9.119499999999531e-05, 9.186100000000558e-05, 9.127800000000019e-05, 9.176400000000112e-05, 9.204200000000051e-05, 9.197199999999572e-05, 9.202800000000094e-05, 9.108400000000516e-05, 9.204100000000104e-05, 9.127800000000019e-05, 9.14859999999948e-05, 9.113899999999703e-05, 9.136099999999814e-05, 9.11670000000031e-05, 9.137499999999771e-05, 9.191699999999692e-05, 9.175000000000155e-05, 9.169500000000275e-05, 9.137499999999771e-05, 9.202800000000094e-05, 9.123599999999454e-05, 9.148600000000173e-05, 9.159699999999882e-05, 9.159699999999882e-05, 9.193099999999649e-05, 9.20000000000018e-05, 9.11670000000031e-05, 9.159699999999882e-05]</msg>
<status status="PASS" starttime="20201110 08:39:08.895" endtime="20201110 08:39:08.904"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.883" endtime="20201110 08:39:08.906"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.912" endtime="20201110 08:39:08.915"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:08.920" endtime="20201110 08:39:08.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.916" endtime="20201110 08:39:08.944"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.907" endtime="20201110 08:39:08.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.385" endtime="20201110 08:39:08.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.383" endtime="20201110 08:39:08.946"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:08.969" endtime="20201110 08:39:08.991"></status>
</kw>
<msg timestamp="20201110 08:39:08.992" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.966" endtime="20201110 08:39:08.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:08.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:08.994" endtime="20201110 08:39:08.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.000" endtime="20201110 08:39:09.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.958" endtime="20201110 08:39:09.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.953" endtime="20201110 08:39:09.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.024" endtime="20201110 08:39:09.355"></status>
</kw>
<msg timestamp="20201110 08:39:09.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042246083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042339111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.020" endtime="20201110 08:39:09.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042246083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042339111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.365" endtime="20201110 08:39:09.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.383" endtime="20201110 08:39:09.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.013" endtime="20201110 08:39:09.392"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.009" endtime="20201110 08:39:09.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:09.404" level="INFO">${RESULT} = [{'time': 0.042339111, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.302800000000194e-05, 'source_diff': 9.302800000000194e-05}, {'time': 0.042435125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:09.395" endtime="20201110 08:39:09.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:09.434" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:09.406" endtime="20201110 08:39:09.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.445" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201110 08:39:09.443" endtime="20201110 08:39:09.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.451" level="INFO">VALUE: [9.302800000000194e-05, 9.3027999999995e-05, 9.275000000000255e-05, 9.293100000000443e-05, 9.257000000000015e-05, 9.270899999999638e-05, 9.28200000000004e-05, 9.262499999999896e-05, 9.213900000000497e-05, 9.304100000000204e-05, 9.269400000000427e-05, 9.302800000000194e-05, 9.236099999999914e-05, 9.283399999999997e-05, 9.236099999999914e-05, 9.238899999999828e-05, 9.302800000000194e-05, 9.269499999999681e-05, 9.305499999999467e-05, 9.259699999999982e-05, 9.248600000000273e-05, 9.280500000000136e-05, 9.226400000000162e-05, 9.28330000000005e-05, 9.213899999999803e-05, 9.283399999999997e-05, 9.257000000000015e-05, 9.269499999999681e-05, 9.272300000000289e-05, 9.213899999999803e-05, 9.236199999999861e-05, 9.226300000000215e-05, 9.21659999999977e-05, 9.292999999999801e-05, 9.213900000000497e-05, 9.247199999999622e-05, 9.272199999999647e-05, 9.280600000000083e-05, 9.302800000000194e-05, 9.297199999999672e-05, 9.226400000000162e-05, 9.237499999999871e-05, 9.281900000000093e-05, 9.305500000000161e-05, 9.302800000000194e-05, 9.25000000000023e-05, 9.280500000000136e-05, 9.21529999999976e-05, 9.237499999999871e-05, 9.277700000000222e-05]</msg>
<status status="PASS" starttime="20201110 08:39:09.448" endtime="20201110 08:39:09.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.436" endtime="20201110 08:39:09.454"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.460" endtime="20201110 08:39:09.463"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:09.469" endtime="20201110 08:39:09.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.464" endtime="20201110 08:39:09.492"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.456" endtime="20201110 08:39:09.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.948" endtime="20201110 08:39:09.494"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:08.947" endtime="20201110 08:39:09.494"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.517" endtime="20201110 08:39:09.539"></status>
</kw>
<msg timestamp="20201110 08:39:09.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:09.514" endtime="20201110 08:39:09.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:09.543" endtime="20201110 08:39:09.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.549" endtime="20201110 08:39:09.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.506" endtime="20201110 08:39:09.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.501" endtime="20201110 08:39:09.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.572" endtime="20201110 08:39:09.906"></status>
</kw>
<msg timestamp="20201110 08:39:09.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042004819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.569" endtime="20201110 08:39:09.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041911361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042004819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:09.915" endtime="20201110 08:39:09.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:09.934" endtime="20201110 08:39:09.939"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.562" endtime="20201110 08:39:09.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.557" endtime="20201110 08:39:09.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:09.953" level="INFO">${RESULT} = [{'time': 0.042004819, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.345799999999765e-05, 'source_diff': 9.345799999999765e-05}, {'time': 0.042101833, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:09.944" endtime="20201110 08:39:09.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:09.983" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:09.955" endtime="20201110 08:39:09.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.994" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201110 08:39:09.992" endtime="20201110 08:39:09.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:09.999" level="INFO">VALUE: [9.345799999999765e-05, 9.324999999999611e-05, 9.31529999999986e-05, 9.393000000000595e-05, 9.367999999999876e-05, 9.347199999999722e-05, 9.316699999999817e-05, 9.311099999999989e-05, 9.361100000000039e-05, 9.379200000000226e-05, 9.361100000000039e-05, 9.341699999999842e-05, 9.399999999999686e-05, 9.402700000000347e-05, 9.395899999999763e-05, 9.316699999999817e-05, 9.359700000000082e-05, 9.359700000000082e-05, 9.324999999999611e-05, 9.31529999999986e-05, 9.369500000000475e-05, 9.326300000000315e-05, 9.401399999999643e-05, 9.381899999999499e-05, 9.35000000000033e-05, 9.338900000000622e-05, 9.312499999999946e-05, 9.369399999999833e-05, 9.349999999999636e-05, 9.375000000000355e-05, 9.326400000000262e-05, 9.320900000000382e-05, 9.391699999999892e-05, 9.40409999999961e-05, 9.392999999999901e-05, 9.324999999999611e-05, 9.325000000000305e-05, 9.31529999999986e-05, 9.394399999999858e-05, 9.404200000000251e-05, 9.345799999999765e-05, 9.404199999999557e-05, 9.315300000000554e-05, 9.408299999999481e-05, 9.334800000000004e-05, 9.358400000000072e-05, 9.38330000000015e-05, 9.31529999999986e-05, 9.336100000000014e-05, 9.324999999999611e-05]</msg>
<status status="PASS" starttime="20201110 08:39:09.996" endtime="20201110 08:39:10.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.985" endtime="20201110 08:39:10.003"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.009" endtime="20201110 08:39:10.012"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:10.017" endtime="20201110 08:39:10.039"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.013" endtime="20201110 08:39:10.041"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.004" endtime="20201110 08:39:10.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.496" endtime="20201110 08:39:10.043"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:09.495" endtime="20201110 08:39:10.043"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.066" endtime="20201110 08:39:10.088"></status>
</kw>
<msg timestamp="20201110 08:39:10.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.062" endtime="20201110 08:39:10.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.091" endtime="20201110 08:39:10.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.098" endtime="20201110 08:39:10.101"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.055" endtime="20201110 08:39:10.103"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.049" endtime="20201110 08:39:10.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.121" endtime="20201110 08:39:10.456"></status>
</kw>
<msg timestamp="20201110 08:39:10.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042277708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.118" endtime="20201110 08:39:10.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042182653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042277708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.465" endtime="20201110 08:39:10.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.483" endtime="20201110 08:39:10.489"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.110" endtime="20201110 08:39:10.490"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.106" endtime="20201110 08:39:10.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:10.502" level="INFO">${RESULT} = [{'time': 0.042277708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.505499999999667e-05, 'source_diff': 9.505499999999667e-05}, {'time': 0.042377708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:10.493" endtime="20201110 08:39:10.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:10.532" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:10.505" endtime="20201110 08:39:10.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.543" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201110 08:39:10.541" endtime="20201110 08:39:10.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.549" level="INFO">VALUE: [9.505499999999667e-05, 9.424999999999711e-05, 9.427800000000319e-05, 9.48330000000025e-05, 9.480499999999642e-05, 9.481900000000293e-05, 9.437500000000071e-05, 9.427800000000319e-05, 9.484700000000207e-05, 9.447300000000464e-05, 9.425000000000405e-05, 9.449999999999736e-05, 9.48330000000025e-05, 9.415200000000012e-05, 9.480499999999642e-05, 9.427800000000319e-05, 9.436100000000114e-05, 9.494499999999906e-05, 9.41529999999996e-05, 9.437500000000071e-05, 9.480600000000283e-05, 9.449999999999736e-05, 9.490300000000035e-05, 9.44859999999978e-05, 9.445800000000559e-05, 9.472200000000541e-05, 9.438900000000028e-05, 9.437500000000071e-05, 9.447199999999822e-05, 9.505600000000308e-05, 9.49859999999983e-05, 9.408399999999428e-05, 9.426399999999668e-05, 9.491699999999992e-05, 9.504199999999657e-05, 9.470800000000584e-05, 9.415200000000012e-05, 9.497199999999872e-05, 9.481900000000293e-05, 9.448600000000473e-05, 9.481900000000293e-05, 9.426399999999668e-05, 9.48059999999959e-05, 9.48059999999959e-05, 9.426400000000362e-05, 9.48200000000024e-05, 9.479199999999632e-05, 9.408300000000175e-05, 9.459699999999488e-05, 9.497199999999872e-05]</msg>
<status status="PASS" starttime="20201110 08:39:10.546" endtime="20201110 08:39:10.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.534" endtime="20201110 08:39:10.552"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.559" endtime="20201110 08:39:10.561"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:10.567" endtime="20201110 08:39:10.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.562" endtime="20201110 08:39:10.590"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.554" endtime="20201110 08:39:10.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.045" endtime="20201110 08:39:10.592"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.044" endtime="20201110 08:39:10.593"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.615" endtime="20201110 08:39:10.638"></status>
</kw>
<msg timestamp="20201110 08:39:10.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.612" endtime="20201110 08:39:10.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:10.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:10.641" endtime="20201110 08:39:10.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.647" endtime="20201110 08:39:10.651"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.605" endtime="20201110 08:39:10.653"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.599" endtime="20201110 08:39:10.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:10.671" endtime="20201110 08:39:11.005"></status>
</kw>
<msg timestamp="20201110 08:39:11.012" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042039486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:10.667" endtime="20201110 08:39:11.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041943472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042039486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.014" endtime="20201110 08:39:11.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.033" endtime="20201110 08:39:11.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.660" endtime="20201110 08:39:11.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.655" endtime="20201110 08:39:11.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.052" level="INFO">${RESULT} = [{'time': 0.042039486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.601399999999843e-05, 'source_diff': 9.601399999999843e-05}, {'time': 0.042138514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:11.043" endtime="20201110 08:39:11.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:11.082" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:11.054" endtime="20201110 08:39:11.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.093" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201110 08:39:11.091" endtime="20201110 08:39:11.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.098" level="INFO">VALUE: [9.601399999999843e-05, 9.555600000000358e-05, 9.6027999999998e-05, 9.581999999999646e-05, 9.558399999999578e-05, 9.545899999999913e-05, 9.555599999999664e-05, 9.563900000000153e-05, 9.592999999999408e-05, 9.547199999999922e-05, 9.515299999999366e-05, 9.519399999999983e-05, 9.526399999999768e-05, 9.604200000000451e-05, 9.537499999999477e-05, 9.563899999999459e-05, 9.551400000000487e-05, 9.593100000000049e-05, 9.556999999999621e-05, 9.545799999999965e-05, 9.581899999999699e-05, 9.51530000000006e-05, 9.559699999999588e-05, 9.579200000000426e-05, 9.559699999999588e-05, 9.537500000000171e-05, 9.545899999999913e-05, 9.513900000000103e-05, 9.543099999999999e-05, 9.558399999999578e-05, 9.579099999999785e-05, 9.572199999999947e-05, 9.512500000000146e-05, 9.57079999999999e-05, 9.524999999999811e-05, 9.51530000000006e-05, 9.554200000000401e-05, 9.559700000000282e-05, 9.513900000000103e-05, 9.58059999999969e-05, 9.526300000000515e-05, 9.509800000000179e-05, 9.602699999999853e-05, 9.54859999999988e-05, 9.54859999999988e-05, 9.54859999999988e-05, 9.526399999999768e-05, 9.527800000000419e-05, 9.605599999999714e-05, 9.556999999999621e-05]</msg>
<status status="PASS" starttime="20201110 08:39:11.095" endtime="20201110 08:39:11.100"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.084" endtime="20201110 08:39:11.101"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.108" endtime="20201110 08:39:11.110"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.116" endtime="20201110 08:39:11.138"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.112" endtime="20201110 08:39:11.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.103" endtime="20201110 08:39:11.141"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.595" endtime="20201110 08:39:11.142"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:10.594" endtime="20201110 08:39:11.142"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.165" endtime="20201110 08:39:11.187"></status>
</kw>
<msg timestamp="20201110 08:39:11.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.161" endtime="20201110 08:39:11.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.190" endtime="20201110 08:39:11.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.196" endtime="20201110 08:39:11.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.154" endtime="20201110 08:39:11.202"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.148" endtime="20201110 08:39:11.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.220" endtime="20201110 08:39:11.552"></status>
</kw>
<msg timestamp="20201110 08:39:11.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042284625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.216" endtime="20201110 08:39:11.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042188028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042284625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.562" endtime="20201110 08:39:11.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.580" endtime="20201110 08:39:11.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.209" endtime="20201110 08:39:11.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.205" endtime="20201110 08:39:11.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:11.601" level="INFO">${RESULT} = [{'time': 0.042284625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.659699999999688e-05, 'source_diff': 9.659699999999688e-05}, {'time': 0.042389639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:11.592" endtime="20201110 08:39:11.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:11.631" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:11.603" endtime="20201110 08:39:11.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.642" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201110 08:39:11.640" endtime="20201110 08:39:11.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.647" level="INFO">VALUE: [9.659699999999688e-05, 9.622199999999997e-05, 9.637500000000271e-05, 9.659799999999635e-05, 9.680600000000483e-05, 9.637500000000271e-05, 9.637499999999577e-05, 9.641699999999448e-05, 9.647200000000022e-05, 9.659699999999688e-05, 9.672200000000047e-05, 9.658300000000425e-05, 9.67080000000009e-05, 9.668100000000124e-05, 9.61530000000016e-05, 9.688900000000278e-05, 9.61530000000016e-05, 9.61660000000017e-05, 9.613799999999562e-05, 9.659699999999688e-05, 9.613900000000203e-05, 9.693000000000201e-05, 9.627799999999825e-05, 9.624999999999911e-05, 9.672200000000047e-05, 9.637500000000271e-05, 9.672299999999995e-05, 9.618000000000126e-05, 9.679199999999832e-05, 9.661099999999645e-05, 9.681900000000493e-05, 9.681900000000493e-05, 9.654199999999807e-05, 9.631999999999696e-05, 9.68609999999967e-05, 9.67080000000009e-05, 9.638900000000228e-05, 9.7027999999999e-05, 9.63609999999962e-05, 9.651399999999893e-05, 9.67080000000009e-05, 9.68609999999967e-05, 9.637500000000271e-05, 9.63609999999962e-05, 9.704199999999857e-05, 9.67080000000009e-05, 9.699999999999986e-05, 9.63200000000039e-05, 9.63609999999962e-05, 9.64859999999998e-05]</msg>
<status status="PASS" starttime="20201110 08:39:11.644" endtime="20201110 08:39:11.649"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.633" endtime="20201110 08:39:11.651"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.657" endtime="20201110 08:39:11.660"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:11.666" endtime="20201110 08:39:11.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.661" endtime="20201110 08:39:11.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.652" endtime="20201110 08:39:11.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.144" endtime="20201110 08:39:11.691"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.143" endtime="20201110 08:39:11.691"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.714" endtime="20201110 08:39:11.737"></status>
</kw>
<msg timestamp="20201110 08:39:11.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.711" endtime="20201110 08:39:11.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:11.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:11.741" endtime="20201110 08:39:11.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.748" endtime="20201110 08:39:11.751"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.703" endtime="20201110 08:39:11.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.698" endtime="20201110 08:39:11.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:11.772" endtime="20201110 08:39:12.088"></status>
</kw>
<msg timestamp="20201110 08:39:12.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042442389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042539778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:11.769" endtime="20201110 08:39:12.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042442389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042539778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.098" endtime="20201110 08:39:12.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.116" endtime="20201110 08:39:12.121"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.761" endtime="20201110 08:39:12.123"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.756" endtime="20201110 08:39:12.124"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.135" level="INFO">${RESULT} = [{'time': 0.042539778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.738900000000328e-05, 'source_diff': 9.738900000000328e-05}, {'time': 0.042645778, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:12.126" endtime="20201110 08:39:12.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:12.166" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:12.137" endtime="20201110 08:39:12.166"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.177" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201110 08:39:12.174" endtime="20201110 08:39:12.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.182" level="INFO">VALUE: [9.738900000000328e-05, 9.713900000000303e-05, 9.708399999999728e-05, 9.804199999999957e-05, 9.769500000000181e-05, 9.737499999999677e-05, 9.805499999999967e-05, 9.78479999999976e-05, 9.759699999999788e-05, 9.772300000000095e-05, 9.77080000000019e-05, 9.750000000000036e-05, 9.740300000000285e-05, 9.737500000000371e-05, 9.748700000000027e-05, 9.740199999999644e-05, 9.759700000000482e-05, 9.71660000000027e-05, 9.759699999999788e-05, 9.780499999999942e-05, 9.777799999999975e-05, 9.72080000000014e-05, 9.74860000000008e-05, 9.78479999999976e-05, 9.73609999999972e-05, 9.751300000000046e-05, 9.781999999999846e-05, 9.772200000000147e-05, 9.759699999999788e-05, 9.730499999999892e-05, 9.791600000000344e-05, 9.722300000000045e-05, 9.781899999999899e-05, 9.762499999999702e-05, 9.769499999999487e-05, 9.747200000000122e-05, 9.734699999999763e-05, 9.759799999999735e-05, 9.727699999999978e-05, 9.725000000000011e-05, 9.727799999999925e-05, 9.726399999999968e-05, 9.776400000000018e-05, 9.801400000000043e-05, 9.716699999999523e-05, 9.747200000000122e-05, 9.769500000000181e-05, 9.770900000000138e-05, 9.723600000000054e-05, 9.805499999999967e-05]</msg>
<status status="PASS" starttime="20201110 08:39:12.179" endtime="20201110 08:39:12.183"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.167" endtime="20201110 08:39:12.185"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.192" endtime="20201110 08:39:12.194"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:12.200" endtime="20201110 08:39:12.221"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.196" endtime="20201110 08:39:12.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.187" endtime="20201110 08:39:12.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.693" endtime="20201110 08:39:12.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:11.692" endtime="20201110 08:39:12.226"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.248" endtime="20201110 08:39:12.271"></status>
</kw>
<msg timestamp="20201110 08:39:12.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.245" endtime="20201110 08:39:12.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.274" endtime="20201110 08:39:12.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.281" endtime="20201110 08:39:12.284"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.238" endtime="20201110 08:39:12.286"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.232" endtime="20201110 08:39:12.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.304" endtime="20201110 08:39:12.639"></status>
</kw>
<msg timestamp="20201110 08:39:12.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042341389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042439889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.301" endtime="20201110 08:39:12.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042341389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042439889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:12.648" endtime="20201110 08:39:12.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.667" endtime="20201110 08:39:12.672"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.293" endtime="20201110 08:39:12.674"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.289" endtime="20201110 08:39:12.675"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:12.686" level="INFO">${RESULT} = [{'time': 0.042439889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.850000000000136e-05, 'source_diff': 9.850000000000136e-05}, {'time': 0.042542889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:12.677" endtime="20201110 08:39:12.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:12.716" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:12.688" endtime="20201110 08:39:12.716"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.727" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201110 08:39:12.724" endtime="20201110 08:39:12.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.732" level="INFO">VALUE: [9.850000000000136e-05, 9.81530000000036e-05, 9.838899999999734e-05, 9.891699999999698e-05, 9.869500000000281e-05, 9.891699999999698e-05, 9.831899999999949e-05, 9.824999999999418e-05, 9.892999999999708e-05, 9.829199999999982e-05, 9.872199999999554e-05, 9.895800000000315e-05, 9.9028000000001e-05, 9.858399999999878e-05, 9.858399999999878e-05, 9.850000000000136e-05, 9.9028000000001e-05, 9.827699999999384e-05, 9.837499999999777e-05, 9.879100000000085e-05, 9.847200000000222e-05, 9.837499999999777e-05, 9.876400000000118e-05, 9.9028000000001e-05, 9.88479999999986e-05, 9.83609999999982e-05, 9.837499999999777e-05, 9.826400000000068e-05, 9.906900000000024e-05, 9.880500000000042e-05, 9.902700000000153e-05, 9.892999999999708e-05, 9.859700000000582e-05, 9.894500000000306e-05, 9.858299999999931e-05, 9.869499999999587e-05, 9.851400000000093e-05, 9.848599999999486e-05, 9.884699999999913e-05, 9.90410000000011e-05, 9.834700000000557e-05, 9.847200000000222e-05, 9.845800000000265e-05, 9.837499999999777e-05, 9.822200000000197e-05, 9.891700000000392e-05, 9.84860000000018e-05, 9.81530000000036e-05, 9.902799999999407e-05, 9.893099999999655e-05]</msg>
<status status="PASS" starttime="20201110 08:39:12.729" endtime="20201110 08:39:12.734"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.718" endtime="20201110 08:39:12.735"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.742" endtime="20201110 08:39:12.744"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:12.750" endtime="20201110 08:39:12.772"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.746" endtime="20201110 08:39:12.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.737" endtime="20201110 08:39:12.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.228" endtime="20201110 08:39:12.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.227" endtime="20201110 08:39:12.776"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.801" endtime="20201110 08:39:12.823"></status>
</kw>
<msg timestamp="20201110 08:39:12.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.797" endtime="20201110 08:39:12.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:12.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:12.826" endtime="20201110 08:39:12.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.832" endtime="20201110 08:39:12.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.789" endtime="20201110 08:39:12.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.783" endtime="20201110 08:39:12.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:12.856" endtime="20201110 08:39:13.189"></status>
</kw>
<msg timestamp="20201110 08:39:13.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044359958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04445975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:12.853" endtime="20201110 08:39:13.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044359958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04445975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:13.199" endtime="20201110 08:39:13.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.218" endtime="20201110 08:39:13.223"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.845" endtime="20201110 08:39:13.225"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.841" endtime="20201110 08:39:13.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.237" level="INFO">${RESULT} = [{'time': 0.04445975, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 9.979200000000132e-05, 'source_diff': 9.979200000000132e-05}, {'time': 0.044565792, 'source': 'DUT_IC', 'event': 'FALLING', 'diff'...</msg>
<status status="PASS" starttime="20201110 08:39:13.228" endtime="20201110 08:39:13.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:13.267" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:13.239" endtime="20201110 08:39:13.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.278" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201110 08:39:13.276" endtime="20201110 08:39:13.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.283" level="INFO">VALUE: [9.979200000000132e-05, 9.975000000000261e-05, 9.991700000000492e-05, 9.937499999999877e-05, 9.982000000000046e-05, 9.983400000000003e-05, 9.913899999999809e-05, 9.926299999999527e-05, 0.00010004099999999516, 9.970799999999697e-05, 9.994400000000458e-05, 9.950000000000236e-05, 9.916700000000417e-05, 9.959699999999988e-05, 9.961099999999945e-05, 9.926399999999475e-05, 9.991699999999798e-05, 0.00010005600000000114, 9.91530000000046e-05, 9.922199999999604e-05, 9.948599999999586e-05, 9.96939999999974e-05, 0.00010005500000000167, 9.926399999999475e-05, 9.977800000000175e-05, 9.970799999999697e-05, 9.976399999999525e-05, 9.947200000000322e-05, 9.937499999999877e-05, 9.948700000000227e-05, 9.948599999999586e-05, 9.99159999999985e-05, 9.980500000000142e-05, 9.923600000000254e-05, 9.993099999999755e-05, 9.993100000000449e-05, 9.915299999999766e-05, 9.937499999999877e-05, 9.958399999999978e-05, 9.923600000000254e-05, 9.950000000000236e-05, 0.0001000139999999955, 9.981900000000099e-05, 9.980500000000142e-05, 9.938899999999834e-05, 9.934699999999963e-05, 9.915299999999766e-05, 9.942999999999758e-05, 9.991699999999798e-05, 9.994499999999712e-05]</msg>
<status status="PASS" starttime="20201110 08:39:13.280" endtime="20201110 08:39:13.285"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.269" endtime="20201110 08:39:13.287"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.293" endtime="20201110 08:39:13.296"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:13.301" endtime="20201110 08:39:13.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.297" endtime="20201110 08:39:13.325"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.288" endtime="20201110 08:39:13.326"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.779" endtime="20201110 08:39:13.327"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:12.777" endtime="20201110 08:39:13.327"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.350" endtime="20201110 08:39:13.372"></status>
</kw>
<msg timestamp="20201110 08:39:13.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.347" endtime="20201110 08:39:13.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.376" endtime="20201110 08:39:13.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.382" endtime="20201110 08:39:13.386"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.339" endtime="20201110 08:39:13.387"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.334" endtime="20201110 08:39:13.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.405" endtime="20201110 08:39:13.739"></status>
</kw>
<msg timestamp="20201110 08:39:13.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042184847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042285889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.402" endtime="20201110 08:39:13.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042184847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042285889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.748" endtime="20201110 08:39:13.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.766" endtime="20201110 08:39:13.773"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.395" endtime="20201110 08:39:13.775"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.390" endtime="20201110 08:39:13.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:13.787" level="INFO">${RESULT} = [{'time': 0.042285889, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010104200000000257, 'source_diff': 0.00010104200000000257}, {'time': 0.042389889, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:13.778" endtime="20201110 08:39:13.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:13.817" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:13.789" endtime="20201110 08:39:13.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.828" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201110 08:39:13.826" endtime="20201110 08:39:13.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.834" level="INFO">VALUE: [0.00010104200000000257, 0.00010034700000000063, 0.00010082000000000146, 0.00010015299999999866, 0.00010093099999999855, 0.0001005689999999948, 0.00010055499999999523, 0.00010044400000000508, 0.00010034700000000063, 0.0001006939999999984, 0.00010055600000000164, 0.00010093100000000549, 0.00010047199999999729, 0.00010058400000000078, 0.0001009730000000042, 0.00010082000000000146, 0.0001002359999999966, 0.0001003610000000002, 0.00010033300000000106, 0.00010081900000000199, 0.00010059700000000088, 0.0001001939999999979, 0.00010058400000000078, 0.00010026399999999575, 0.00010047200000000422, 0.00010026400000000268, 0.00010105500000000267, 0.0001006939999999984, 0.00010013899999999909, 0.00010084700000000113, 0.00010094499999999812, 0.00010042999999999858, 0.00010102799999999607, 0.00010037499999999977, 0.00010048599999999686, 0.00010037499999999977, 0.00010013899999999909, 0.00010059800000000035, 0.00010013799999999962, 0.00010015199999999919, 0.00010055500000000217, 0.0001006939999999984, 0.00010058300000000131, 0.00010058300000000131, 0.00010093099999999855, 0.00010047200000000422, 0.00010038899999999934, 0.00010104199999999564, 0.00010041700000000542, 0.00010070799999999797]</msg>
<status status="PASS" starttime="20201110 08:39:13.831" endtime="20201110 08:39:13.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.819" endtime="20201110 08:39:13.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.844" endtime="20201110 08:39:13.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:13.852" endtime="20201110 08:39:13.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.848" endtime="20201110 08:39:13.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.839" endtime="20201110 08:39:13.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.329" endtime="20201110 08:39:13.878"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.328" endtime="20201110 08:39:13.878"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.901" endtime="20201110 08:39:13.923"></status>
</kw>
<msg timestamp="20201110 08:39:13.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.897" endtime="20201110 08:39:13.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:13.931" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:13.927" endtime="20201110 08:39:13.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.933" endtime="20201110 08:39:13.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.890" endtime="20201110 08:39:13.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.884" endtime="20201110 08:39:13.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:13.957" endtime="20201110 08:39:14.290"></status>
</kw>
<msg timestamp="20201110 08:39:14.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042357639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:13.953" endtime="20201110 08:39:14.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042255944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042357639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.299" endtime="20201110 08:39:14.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.317" endtime="20201110 08:39:14.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.946" endtime="20201110 08:39:14.324"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.941" endtime="20201110 08:39:14.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:14.336" level="INFO">${RESULT} = [{'time': 0.042357639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010169500000000581, 'source_diff': 0.00010169500000000581}, {'time': 0.042464639, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:14.328" endtime="20201110 08:39:14.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:14.366" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:14.338" endtime="20201110 08:39:14.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.377" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201110 08:39:14.375" endtime="20201110 08:39:14.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.382" level="INFO">VALUE: [0.00010169500000000581, 0.00010170799999999897, 0.00010169499999999887, 0.00010113900000000009, 0.00010180500000000342, 0.00010127699999999684, 0.00010137500000000077, 0.00010115200000000019, 0.00010172199999999854, 0.0001012080000000054, 0.00010186199999999423, 0.0001012080000000054, 0.00010209699999999544, 0.0001018480000000016, 0.00010137500000000077, 0.00010193099999999955, 0.00010122300000000445, 0.00010149999999999743, 0.00010181900000000299, 0.00010126399999999675, 0.0001014860000000048, 0.00010124999999999718, 0.00010154099999999666, 0.00010170799999999897, 0.00010193099999999955, 0.00010194499999999912, 0.00010205499999999673, 0.00010204099999999716, 0.00010202699999999759, 0.00010116699999999923, 0.00010116699999999923, 0.00010181899999999605, 0.00010204200000000357, 0.00010193099999999955, 0.00010169499999999887, 0.0001013610000000012, 0.00010194499999999912, 0.000102028000000004, 0.00010115199999999325, 0.00010148599999999786, 0.0001020410000000041, 0.00010109700000000138, 0.00010115299999999966, 0.00010147199999999829, 0.00010138900000000034, 0.00010204199999999664, 0.00010180599999999596, 0.00010193099999999955, 0.00010149999999999743, 0.0001017359999999981]</msg>
<status status="PASS" starttime="20201110 08:39:14.379" endtime="20201110 08:39:14.384"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.368" endtime="20201110 08:39:14.386"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.392" endtime="20201110 08:39:14.395"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:14.400" endtime="20201110 08:39:14.422"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.396" endtime="20201110 08:39:14.423"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.387" endtime="20201110 08:39:14.425"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.880" endtime="20201110 08:39:14.426"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:13.879" endtime="20201110 08:39:14.426"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.449" endtime="20201110 08:39:14.471"></status>
</kw>
<msg timestamp="20201110 08:39:14.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.445" endtime="20201110 08:39:14.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.475" endtime="20201110 08:39:14.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.481" endtime="20201110 08:39:14.485"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.438" endtime="20201110 08:39:14.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.432" endtime="20201110 08:39:14.488"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.505" endtime="20201110 08:39:14.837"></status>
</kw>
<msg timestamp="20201110 08:39:14.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042394347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.501" endtime="20201110 08:39:14.845"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042291319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042394347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:14.847" endtime="20201110 08:39:14.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.866" endtime="20201110 08:39:14.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.494" endtime="20201110 08:39:14.873"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.489" endtime="20201110 08:39:14.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:14.885" level="INFO">${RESULT} = [{'time': 0.042394347, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010302799999999807, 'source_diff': 0.00010302799999999807}, {'time': 0.042501361, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:14.876" endtime="20201110 08:39:14.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:14.915" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:14.887" endtime="20201110 08:39:14.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.926" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201110 08:39:14.923" endtime="20201110 08:39:14.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:14.931" level="INFO">VALUE: [0.00010302799999999807, 0.00010224999999999818, 0.00010275000000000561, 0.00010282000000000346, 0.00010238900000000134, 0.00010215300000000066, 0.0001023480000000021, 0.00010237500000000177, 0.00010259700000000288, 0.00010292999999999414, 0.00010227799999999732, 0.00010237499999999483, 0.00010276400000000518, 0.00010304200000000457, 0.00010247199999999929, 0.00010293100000000055, 0.0001024860000000058, 0.00010258299999999637, 0.0001021939999999999, 0.00010259700000000288, 0.00010234700000000263, 0.00010237500000000177, 0.00010231999999999603, 0.0001023889999999944, 0.00010277699999999834, 0.00010247199999999929, 0.00010293099999999361, 0.00010216700000000023, 0.00010297199999999979, 0.00010270799999999997, 0.00010255499999999723, 0.00010302699999999859, 0.00010281899999999705, 0.00010224999999999818, 0.00010282000000000346, 0.00010279200000000432, 0.00010236099999999526, 0.00010302799999999807, 0.00010213900000000109, 0.00010283300000000356, 0.00010288799999999543, 0.00010237499999999483, 0.00010281900000000399, 0.00010281899999999705, 0.00010222199999999904, 0.00010226399999999775, 0.00010272199999999954, 0.00010293100000000055, 0.00010212500000000152, 0.00010283299999999662]</msg>
<status status="PASS" starttime="20201110 08:39:14.928" endtime="20201110 08:39:14.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.917" endtime="20201110 08:39:14.934"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.941" endtime="20201110 08:39:14.943"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:14.949" endtime="20201110 08:39:14.970"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.945" endtime="20201110 08:39:14.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.936" endtime="20201110 08:39:14.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.428" endtime="20201110 08:39:14.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.427" endtime="20201110 08:39:14.975"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:14.997" endtime="20201110 08:39:15.020"></status>
</kw>
<msg timestamp="20201110 08:39:15.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:14.994" endtime="20201110 08:39:15.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.024" endtime="20201110 08:39:15.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.030" endtime="20201110 08:39:15.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.987" endtime="20201110 08:39:15.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.981" endtime="20201110 08:39:15.037"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.053" endtime="20201110 08:39:15.362"></status>
</kw>
<msg timestamp="20201110 08:39:15.365" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042100417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042203708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.050" endtime="20201110 08:39:15.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042100417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042203708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.366" endtime="20201110 08:39:15.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.374" endtime="20201110 08:39:15.377"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.043" endtime="20201110 08:39:15.378"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.038" endtime="20201110 08:39:15.378"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:15.383" level="INFO">${RESULT} = [{'time': 0.042203708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010329099999999841, 'source_diff': 0.00010329099999999841}, {'time': 0.042314681, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:15.379" endtime="20201110 08:39:15.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:15.396" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:15.384" endtime="20201110 08:39:15.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.401" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201110 08:39:15.400" endtime="20201110 08:39:15.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.404" level="INFO">VALUE: [0.00010329099999999841, 0.00010337500000000277, 0.00010326299999999927, 0.00010347200000000029, 0.0001039160000000025, 0.00010402799999999907, 0.00010372200000000054, 0.00010337500000000277, 0.00010316700000000123, 0.00010344500000000062, 0.00010347299999999976, 0.00010348599999999986, 0.00010370900000000044, 0.00010347200000000029, 0.00010404099999999916, 0.0001037360000000001, 0.00010315300000000166, 0.00010347200000000029, 0.00010322200000000004, 0.00010341699999999454, 0.00010348599999999986, 0.00010404199999999864, 0.00010324999999999918, 0.00010315199999999525, 0.00010324999999999918, 0.00010358299999999737, 0.00010348599999999986, 0.00010352799999999857, 0.00010372200000000054, 0.00010370800000000097, 0.00010382000000000446, 0.00010356999999999728, 0.00010313900000000209, 0.00010336200000000267, 0.00010372200000000054, 0.00010347200000000029, 0.00010348599999999986, 0.00010404199999999864, 0.00010313900000000209, 0.00010381900000000499, 0.00010363800000000312, 0.00010347200000000029, 0.00010359800000000335, 0.00010370900000000044, 0.00010380599999999796, 0.00010370799999999403, 0.00010337500000000277, 0.00010408299999999787, 0.00010354200000000507, 0.00010370800000000097]</msg>
<status status="PASS" starttime="20201110 08:39:15.403" endtime="20201110 08:39:15.405"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.397" endtime="20201110 08:39:15.406"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.409" endtime="20201110 08:39:15.410"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:15.413" endtime="20201110 08:39:15.432"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.411" endtime="20201110 08:39:15.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.406" endtime="20201110 08:39:15.433"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.977" endtime="20201110 08:39:15.434"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:14.976" endtime="20201110 08:39:15.434"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.445" endtime="20201110 08:39:15.467"></status>
</kw>
<msg timestamp="20201110 08:39:15.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.443" endtime="20201110 08:39:15.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.471" endtime="20201110 08:39:15.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.477" endtime="20201110 08:39:15.481"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.440" endtime="20201110 08:39:15.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.437" endtime="20201110 08:39:15.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.500" endtime="20201110 08:39:15.834"></status>
</kw>
<msg timestamp="20201110 08:39:15.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025260764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025365042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.497" endtime="20201110 08:39:15.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025260764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025365042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:15.843" endtime="20201110 08:39:15.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.861" endtime="20201110 08:39:15.869"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.490" endtime="20201110 08:39:15.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.485" endtime="20201110 08:39:15.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:15.883" level="INFO">${RESULT} = [{'time': 0.025365042, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010427799999999932, 'source_diff': 0.00010427799999999932}, {'time': 0.025475028, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:15.874" endtime="20201110 08:39:15.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:15.913" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:15.885" endtime="20201110 08:39:15.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.924" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201110 08:39:15.922" endtime="20201110 08:39:15.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:15.929" level="INFO">VALUE: [0.00010427799999999932, 0.00010491699999999951, 0.00010497200000000179, 0.00010426300000000027, 0.00010436100000000073, 0.00010493000000000308, 0.00010492999999999961, 0.00010448600000000086, 0.0001041949999999979, 0.0001050559999999992, 0.00010426399999999975, 0.00010427799999999932, 0.00010415300000000266, 0.00010425000000000018, 0.00010494400000000265, 0.00010409700000000091, 0.00010480499999999948, 0.00010448600000000086, 0.00010461100000000098, 0.0001050140000000005, 0.00010493099999999908, 0.0001046949999999984, 0.0001043750000000003, 0.00010436099999999726, 0.00010456999999999828, 0.00010494399999999918, 0.0001043750000000003, 0.00010481900000000252, 0.00010481899999999905, 0.0001047499999999972, 0.0001047079999999985, 0.00010504199999999964, 0.00010504199999999964, 0.00010504199999999964, 0.0001047360000000011, 0.00010505499999999973, 0.00010470800000000197, 0.00010459700000000141, 0.00010475000000000068, 0.00010425000000000018, 0.00010481899999999905, 0.0001043750000000003, 0.00010426399999999975, 0.0001042360000000006, 0.00010412500000000005, 0.00010505499999999973, 0.00010462500000000055, 0.00010448600000000086, 0.00010426399999999975, 0.00010426399999999975]</msg>
<status status="PASS" starttime="20201110 08:39:15.926" endtime="20201110 08:39:15.931"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.915" endtime="20201110 08:39:15.932"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.939" endtime="20201110 08:39:15.942"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:15.947" endtime="20201110 08:39:15.969"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.943" endtime="20201110 08:39:15.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.934" endtime="20201110 08:39:15.972"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.435" endtime="20201110 08:39:15.973"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.434" endtime="20201110 08:39:15.973"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:15.996" endtime="20201110 08:39:16.019"></status>
</kw>
<msg timestamp="20201110 08:39:16.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:15.993" endtime="20201110 08:39:16.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.022" endtime="20201110 08:39:16.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.028" endtime="20201110 08:39:16.032"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.986" endtime="20201110 08:39:16.034"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.980" endtime="20201110 08:39:16.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.051" endtime="20201110 08:39:16.385"></status>
</kw>
<msg timestamp="20201110 08:39:16.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042128764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042234389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.048" endtime="20201110 08:39:16.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042128764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042234389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:16.394" endtime="20201110 08:39:16.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.412" endtime="20201110 08:39:16.418"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.041" endtime="20201110 08:39:16.419"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.036" endtime="20201110 08:39:16.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.431" level="INFO">${RESULT} = [{'time': 0.042234389, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010562499999999808, 'source_diff': 0.00010562499999999808}, {'time': 0.042342375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:16.422" endtime="20201110 08:39:16.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:16.461" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:16.433" endtime="20201110 08:39:16.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.472" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201110 08:39:16.470" endtime="20201110 08:39:16.473"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.477" level="INFO">VALUE: [0.00010562499999999808, 0.00010526400000000075, 0.00010602800000000107, 0.0001060560000000002, 0.00010604200000000064, 0.00010605499999999379, 0.00010602800000000107, 0.00010548600000000186, 0.00010519399999999596, 0.00010527800000000032, 0.00010548600000000186, 0.00010580599999999996, 0.00010527800000000032, 0.0001060560000000002, 0.00010602799999999413, 0.00010543099999999611, 0.00010579200000000039, 0.00010515200000000419, 0.00010586099999999876, 0.00010605500000000073, 0.00010606999999999978, 0.00010593100000000355, 0.00010608399999999935, 0.00010554200000000014, 0.00010516699999999629, 0.00010569500000000287, 0.00010580599999999996, 0.00010592999999999714, 0.00010584699999999919, 0.00010594399999999671, 0.00010548599999999492, 0.00010527800000000032, 0.00010511099999999801, 0.00010559699999999894, 0.00010608299999999987, 0.00010594499999999618, 0.00010526400000000075, 0.00010591699999999704, 0.00010547200000000229, 0.00010579100000000091, 0.00010604100000000116, 0.00010593000000000408, 0.00010559699999999894, 0.00010545799999999578, 0.00010591700000000398, 0.00010558399999999885, 0.00010548700000000133, 0.00010513900000000409, 0.00010559699999999894, 0.00010581900000000005]</msg>
<status status="PASS" starttime="20201110 08:39:16.474" endtime="20201110 08:39:16.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.463" endtime="20201110 08:39:16.480"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.487" endtime="20201110 08:39:16.490"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:16.495" endtime="20201110 08:39:16.517"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.491" endtime="20201110 08:39:16.518"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.482" endtime="20201110 08:39:16.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.976" endtime="20201110 08:39:16.521"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:15.974" endtime="20201110 08:39:16.521"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.544" endtime="20201110 08:39:16.569"></status>
</kw>
<msg timestamp="20201110 08:39:16.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.540" endtime="20201110 08:39:16.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:16.573" endtime="20201110 08:39:16.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.582" endtime="20201110 08:39:16.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.533" endtime="20201110 08:39:16.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.527" endtime="20201110 08:39:16.591"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.608" endtime="20201110 08:39:16.941"></status>
</kw>
<msg timestamp="20201110 08:39:16.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044254208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04436125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:16.604" endtime="20201110 08:39:16.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:16.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044254208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04436125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:16.950" endtime="20201110 08:39:16.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:16.968" endtime="20201110 08:39:16.974"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.597" endtime="20201110 08:39:16.975"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.592" endtime="20201110 08:39:16.977"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:16.987" level="INFO">${RESULT} = [{'time': 0.04436125, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001070419999999947, 'source_diff': 0.0001070419999999947}, {'time': 0.04447325, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:16.978" endtime="20201110 08:39:16.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:17.017" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:16.989" endtime="20201110 08:39:17.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.028" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201110 08:39:17.026" endtime="20201110 08:39:17.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.033" level="INFO">VALUE: [0.0001070419999999947, 0.00010615299999999772, 0.00010682000000000053, 0.00010654200000000114, 0.00010682000000000053, 0.00010684700000000019, 0.00010615299999999772, 0.00010658300000000037, 0.00010680500000000148, 0.00010613899999999815, 0.00010659699999999994, 0.00010683300000000062, 0.00010680600000000096, 0.00010702799999999513, 0.00010663899999999865, 0.00010655500000000123, 0.00010638799999999893, 0.00010670800000000397, 0.00010658300000000037, 0.00010692999999999814, 0.00010670799999999703, 0.00010659699999999994, 0.00010658300000000037, 0.0001068340000000001, 0.00010659699999999994, 0.00010615299999999772, 0.00010633300000000012, 0.00010675000000000268, 0.00010704100000000216, 0.00010625000000000218, 0.00010613899999999815, 0.00010625000000000218, 0.00010693099999999761, 0.0001067219999999966, 0.00010627800000000132, 0.0001070560000000012, 0.0001070419999999947, 0.00010659699999999994, 0.00010684700000000019, 0.00010662499999999908, 0.00010694399999999771, 0.0001070419999999947, 0.0001070560000000012, 0.00010702800000000207, 0.00010626400000000175, 0.00010691699999999804, 0.00010693099999999761, 0.0001064019999999985, 0.00010691599999999857, 0.00010694399999999771]</msg>
<status status="PASS" starttime="20201110 08:39:17.030" endtime="20201110 08:39:17.035"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.019" endtime="20201110 08:39:17.037"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.043" endtime="20201110 08:39:17.046"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:17.051" endtime="20201110 08:39:17.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.047" endtime="20201110 08:39:17.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.038" endtime="20201110 08:39:17.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.523" endtime="20201110 08:39:17.077"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:16.522" endtime="20201110 08:39:17.077"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.100" endtime="20201110 08:39:17.124"></status>
</kw>
<msg timestamp="20201110 08:39:17.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.096" endtime="20201110 08:39:17.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.127" endtime="20201110 08:39:17.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.133" endtime="20201110 08:39:17.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.089" endtime="20201110 08:39:17.139"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.083" endtime="20201110 08:39:17.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.157" endtime="20201110 08:39:17.490"></status>
</kw>
<msg timestamp="20201110 08:39:17.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041989097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.153" endtime="20201110 08:39:17.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041881583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041989097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.499" endtime="20201110 08:39:17.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.517" endtime="20201110 08:39:17.522"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.146" endtime="20201110 08:39:17.524"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.142" endtime="20201110 08:39:17.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:17.536" level="INFO">${RESULT} = [{'time': 0.041989097, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000107514000000003, 'source_diff': 0.000107514000000003}, {'time': 0.042101083, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:17.527" endtime="20201110 08:39:17.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:17.565" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:17.538" endtime="20201110 08:39:17.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.576" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201110 08:39:17.574" endtime="20201110 08:39:17.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.581" level="INFO">VALUE: [0.000107514000000003, 0.00010759700000000094, 0.00010747200000000429, 0.00010724999999999624, 0.00010716699999999829, 0.00010781999999999459, 0.00010793099999999861, 0.00010791699999999904, 0.00010747299999999682, 0.00010737500000000677, 0.00010737500000000677, 0.000107596999999994, 0.00010804100000000316, 0.00010736100000000026, 0.00010770800000000497, 0.00010713899999999915, 0.00010715300000000566, 0.00010734700000000069, 0.00010793099999999861, 0.00010804200000000264, 0.00010747200000000429, 0.00010716599999999882, 0.00010748600000000386, 0.00010726399999999581, 0.00010761100000000051, 0.00010802799999999613, 0.00010737499999999983, 0.00010737499999999983, 0.00010775000000000368, 0.00010772200000000454, 0.00010715199999999925, 0.00010766599999999932, 0.00010715299999999872, 0.00010725000000000318, 0.00010715299999999872, 0.00010759700000000094, 0.00010759700000000094, 0.00010772300000000401, 0.00010804200000000264, 0.00010804200000000264, 0.00010808300000000187, 0.00010736099999999332, 0.00010804100000000316, 0.00010762500000000008, 0.00010792999999999914, 0.00010715299999999872, 0.00010780600000000196, 0.00010726399999999581, 0.00010782000000000153, 0.00010750000000000343]</msg>
<status status="PASS" starttime="20201110 08:39:17.578" endtime="20201110 08:39:17.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.567" endtime="20201110 08:39:17.585"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.591" endtime="20201110 08:39:17.593"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:17.599" endtime="20201110 08:39:17.621"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.595" endtime="20201110 08:39:17.622"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.586" endtime="20201110 08:39:17.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.079" endtime="20201110 08:39:17.625"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.078" endtime="20201110 08:39:17.625"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.648" endtime="20201110 08:39:17.670"></status>
</kw>
<msg timestamp="20201110 08:39:17.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.644" endtime="20201110 08:39:17.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:17.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:17.673" endtime="20201110 08:39:17.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.680" endtime="20201110 08:39:17.683"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.637" endtime="20201110 08:39:17.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.631" endtime="20201110 08:39:17.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:17.703" endtime="20201110 08:39:18.037"></status>
</kw>
<msg timestamp="20201110 08:39:18.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041952667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042061361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:17.700" endtime="20201110 08:39:18.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041952667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042061361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.046" endtime="20201110 08:39:18.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.064" endtime="20201110 08:39:18.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.692" endtime="20201110 08:39:18.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.688" endtime="20201110 08:39:18.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:18.085" level="INFO">${RESULT} = [{'time': 0.042061361, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00010869399999999946, 'source_diff': 0.00010869399999999946}, {'time': 0.042172375, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:18.076" endtime="20201110 08:39:18.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:18.114" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:18.087" endtime="20201110 08:39:18.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.125" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201110 08:39:18.123" endtime="20201110 08:39:18.126"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.130" level="INFO">VALUE: [0.00010869399999999946, 0.0001082219999999981, 0.00010893099999999961, 0.00010891700000000004, 0.00010825000000000418, 0.00010836200000000074, 0.00010815200000000025, 0.00010837500000000083, 0.00010862500000000108, 0.00010830499999999604, 0.00010813900000000015, 0.00010859700000000194, 0.00010845799999999878, 0.00010819499999999843, 0.00010848599999999792, 0.00010882000000000253, 0.00010816599999999982, 0.00010858300000000237, 0.00010883300000000262, 0.00010815299999999972, 0.00010847199999999835, 0.00010826400000000375, 0.00010893099999999961, 0.00010849999999999749, 0.00010884699999999525, 0.00010882000000000253, 0.00010881900000000305, 0.00010809700000000144, 0.00010825000000000418, 0.00010870799999999903, 0.00010837500000000083, 0.00010902799999999713, 0.00010863900000000065, 0.00010904200000000364, 0.00010809800000000092, 0.0001090419999999967, 0.00010815200000000025, 0.00010894399999999971, 0.00010893000000000014, 0.00010908400000000235, 0.00010877800000000382, 0.00010836099999999432, 0.00010880599999999602, 0.00010815299999999972, 0.00010837500000000083, 0.00010863900000000065, 0.00010848599999999792, 0.00010904100000000416, 0.0001085690000000028, 0.0001083890000000004]</msg>
<status status="PASS" starttime="20201110 08:39:18.127" endtime="20201110 08:39:18.132"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.116" endtime="20201110 08:39:18.133"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.140" endtime="20201110 08:39:18.142"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:18.148" endtime="20201110 08:39:18.170"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.144" endtime="20201110 08:39:18.171"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.135" endtime="20201110 08:39:18.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.627" endtime="20201110 08:39:18.173"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:17.626" endtime="20201110 08:39:18.174"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.197" endtime="20201110 08:39:18.220"></status>
</kw>
<msg timestamp="20201110 08:39:18.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.193" endtime="20201110 08:39:18.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.223" endtime="20201110 08:39:18.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.229" endtime="20201110 08:39:18.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.186" endtime="20201110 08:39:18.235"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.180" endtime="20201110 08:39:18.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.253" endtime="20201110 08:39:18.585"></status>
</kw>
<msg timestamp="20201110 08:39:18.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042098542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042208264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.249" endtime="20201110 08:39:18.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042098542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042208264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:18.594" endtime="20201110 08:39:18.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.612" endtime="20201110 08:39:18.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.242" endtime="20201110 08:39:18.619"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.238" endtime="20201110 08:39:18.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:18.631" level="INFO">${RESULT} = [{'time': 0.042208264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001097219999999996, 'source_diff': 0.0001097219999999996}, {'time': 0.042322264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:18.622" endtime="20201110 08:39:18.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:18.660" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:18.633" endtime="20201110 08:39:18.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.671" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201110 08:39:18.669" endtime="20201110 08:39:18.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.676" level="INFO">VALUE: [0.0001097219999999996, 0.00010993100000000061, 0.00010947199999999935, 0.00010948599999999892, 0.00010973599999999917, 0.00010970800000000003, 0.00010991600000000157, 0.00010969400000000046, 0.00010969400000000046, 0.00010951399999999806, 0.00010924999999999824, 0.0001100419999999977, 0.00010948599999999892, 0.00010980600000000396, 0.00010915199999999431, 0.00010948599999999892, 0.00010948599999999892, 0.000109596999999996, 0.0001092219999999991, 0.00010926399999999781, 0.0001097219999999996, 0.00010927799999999738, 0.0001098340000000031, 0.00011011100000000301, 0.00010959800000000242, 0.00010937500000000183, 0.00010993000000000114, 0.00010959700000000294, 0.00010969400000000046, 0.00010926399999999781, 0.00010970800000000003, 0.00010915300000000072, 0.00010947199999999935, 0.00010947299999999882, 0.00010916700000000029, 0.0001097219999999996, 0.0001097769999999984, 0.00010962500000000208, 0.00010980499999999754, 0.00010916700000000029, 0.00010979200000000439, 0.00010916700000000029, 0.00010982000000000353, 0.0001092769999999979, 0.00010936100000000226, 0.00010968100000000036, 0.00010916600000000082, 0.00011004099999999822, 0.00010937500000000183, 0.00010937500000000183]</msg>
<status status="PASS" starttime="20201110 08:39:18.673" endtime="20201110 08:39:18.678"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.662" endtime="20201110 08:39:18.680"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.686" endtime="20201110 08:39:18.689"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:18.694" endtime="20201110 08:39:18.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.690" endtime="20201110 08:39:18.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.681" endtime="20201110 08:39:18.719"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.176" endtime="20201110 08:39:18.720"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.175" endtime="20201110 08:39:18.720"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.743" endtime="20201110 08:39:18.766"></status>
</kw>
<msg timestamp="20201110 08:39:18.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.739" endtime="20201110 08:39:18.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:18.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:18.770" endtime="20201110 08:39:18.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.776" endtime="20201110 08:39:18.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.732" endtime="20201110 08:39:18.781"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.727" endtime="20201110 08:39:18.783"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:18.799" endtime="20201110 08:39:19.141"></status>
</kw>
<msg timestamp="20201110 08:39:19.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04206025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042170597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:18.796" endtime="20201110 08:39:19.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04206025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042170597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:19.150" endtime="20201110 08:39:19.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.168" endtime="20201110 08:39:19.174"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.789" endtime="20201110 08:39:19.175"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.784" endtime="20201110 08:39:19.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.187" level="INFO">${RESULT} = [{'time': 0.042170597, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011034699999999675, 'source_diff': 0.00011034699999999675}, {'time': 0.042286625, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:19.178" endtime="20201110 08:39:19.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:19.218" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:19.189" endtime="20201110 08:39:19.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.229" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201110 08:39:19.227" endtime="20201110 08:39:19.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.234" level="INFO">VALUE: [0.00011034699999999675, 0.00011070800000000103, 0.00011027799999999838, 0.00011082000000000453, 0.00011072300000000007, 0.00011061200000000299, 0.00011081999999999759, 0.00011079100000000591, 0.000110902000000003, 0.00011034699999999675, 0.00011015300000000172, 0.00011036099999999632, 0.00011094500000000118, 0.00011097300000000032, 0.00011059700000000394, 0.00011029099999999847, 0.00011013899999999521, 0.00011094400000000171, 0.00011074999999999974, 0.00011093000000000214, 0.00011026400000000575, 0.0001109169999999951, 0.00011091700000000204, 0.00011023599999999967, 0.00011015300000000172, 0.0001108890000000029, 0.00011102799999999913, 0.00011074999999999974, 0.00011024999999999924, 0.00011061099999999657, 0.0001109299999999952, 0.00011070800000000103, 0.00011091700000000204, 0.00011081999999999759, 0.00011038899999999546, 0.00011084699999999725, 0.00011081999999999759, 0.00011081899999999811, 0.00011081899999999811, 0.00011015299999999478, 0.0001110419999999987, 0.00011093099999999467, 0.00011081999999999759, 0.00011093100000000161, 0.00011058399999999691, 0.00011057000000000428, 0.00011080600000000496, 0.00011033300000000412, 0.000110596999999997, 0.00011081899999999811]</msg>
<status status="PASS" starttime="20201110 08:39:19.231" endtime="20201110 08:39:19.236"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.220" endtime="20201110 08:39:19.238"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.244" endtime="20201110 08:39:19.247"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:19.252" endtime="20201110 08:39:19.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.248" endtime="20201110 08:39:19.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.239" endtime="20201110 08:39:19.277"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.722" endtime="20201110 08:39:19.278"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:18.721" endtime="20201110 08:39:19.278"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.301" endtime="20201110 08:39:19.325"></status>
</kw>
<msg timestamp="20201110 08:39:19.326" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:19.298" endtime="20201110 08:39:19.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:19.328" endtime="20201110 08:39:19.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.335" endtime="20201110 08:39:19.338"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.291" endtime="20201110 08:39:19.340"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.285" endtime="20201110 08:39:19.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.358" endtime="20201110 08:39:19.704"></status>
</kw>
<msg timestamp="20201110 08:39:19.711" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042721583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.355" endtime="20201110 08:39:19.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042609778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042721583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:19.713" endtime="20201110 08:39:19.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.731" endtime="20201110 08:39:19.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.347" endtime="20201110 08:39:19.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.343" endtime="20201110 08:39:19.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:19.750" level="INFO">${RESULT} = [{'time': 0.042721583, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011180499999999954, 'source_diff': 0.00011180499999999954}, {'time': 0.042838611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:19.741" endtime="20201110 08:39:19.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:19.779" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:19.752" endtime="20201110 08:39:19.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.790" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201110 08:39:19.788" endtime="20201110 08:39:19.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.795" level="INFO">VALUE: [0.00011180499999999954, 0.00011126399999999981, 0.00011161100000000451, 0.00011170799999999509, 0.00011169500000000193, 0.00011137499999999689, 0.0001114169999999956, 0.00011159799999999748, 0.00011112499999999664, 0.00011169400000000246, 0.00011193000000000314, 0.00011170800000000203, 0.00011113900000000315, 0.00011202800000000013, 0.00011180599999999902, 0.0001117499999999938, 0.00011115299999999578, 0.00011179199999999945, 0.0001113890000000034, 0.00011204100000000022, 0.00011206899999999936, 0.00011115300000000272, 0.00011143100000000211, 0.00011172199999999466, 0.00011113899999999621, 0.00011127799999999938, 0.00011115300000000272, 0.00011175000000000074, 0.00011204100000000022, 0.00011181900000000605, 0.00011127799999999938, 0.00011200000000000099, 0.00011170800000000203, 0.00011126399999999981, 0.0001120419999999997, 0.00011190300000000347, 0.00011113900000000315, 0.00011148600000000092, 0.00011126300000000033, 0.000111596999999998, 0.00011193000000000314, 0.00011136099999999732, 0.00011148600000000092, 0.00011180599999999902, 0.00011191599999999663, 0.00011159800000000442, 0.00011170899999999456, 0.00011201300000000108, 0.00011158300000000537, 0.00011170800000000203]</msg>
<status status="PASS" starttime="20201110 08:39:19.792" endtime="20201110 08:39:19.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.781" endtime="20201110 08:39:19.799"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.805" endtime="20201110 08:39:19.808"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:19.813" endtime="20201110 08:39:19.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.809" endtime="20201110 08:39:19.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.800" endtime="20201110 08:39:19.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.280" endtime="20201110 08:39:19.839"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.279" endtime="20201110 08:39:19.839"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.862" endtime="20201110 08:39:19.885"></status>
</kw>
<msg timestamp="20201110 08:39:19.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:19.859" endtime="20201110 08:39:19.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:19.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:19.888" endtime="20201110 08:39:19.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.894" endtime="20201110 08:39:19.898"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.852" endtime="20201110 08:39:19.900"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.846" endtime="20201110 08:39:19.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:19.912" endtime="20201110 08:39:20.238"></status>
</kw>
<msg timestamp="20201110 08:39:20.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042334653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04244725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:19.911" endtime="20201110 08:39:20.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042334653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04244725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:20.248" endtime="20201110 08:39:20.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.266" endtime="20201110 08:39:20.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.907" endtime="20201110 08:39:20.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.903" endtime="20201110 08:39:20.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:20.287" level="INFO">${RESULT} = [{'time': 0.04244725, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000112596999999999, 'source_diff': 0.000112596999999999}, {'time': 0.042563278, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': ...</msg>
<status status="PASS" starttime="20201110 08:39:20.278" endtime="20201110 08:39:20.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:20.316" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:20.289" endtime="20201110 08:39:20.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.327" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201110 08:39:20.325" endtime="20201110 08:39:20.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.332" level="INFO">VALUE: [0.000112596999999999, 0.00011244500000000268, 0.00011280600000000002, 0.00011223700000000114, 0.00011256999999999934, 0.00011269500000000293, 0.00011256899999999986, 0.0001122220000000021, 0.00011226400000000081, 0.00011226400000000081, 0.00011293099999999667, 0.00011283399999999916, 0.0001123749999999979, 0.00011226400000000081, 0.00011259799999999848, 0.00011304100000000122, 0.00011270800000000303, 0.00011291600000000457, 0.00011223600000000167, 0.00011236099999999832, 0.00011283299999999968, 0.00011293099999999667, 0.0001130420000000007, 0.00011237500000000483, 0.00011231899999999961, 0.00011297199999999591, 0.0001127220000000026, 0.00011226400000000081, 0.00011281900000000011, 0.00011216700000000329, 0.00011284800000000567, 0.00011248600000000192, 0.00011236099999999832, 0.00011280600000000002, 0.00011225000000000124, 0.00011233299999999918, 0.00011300000000000199, 0.00011248600000000192, 0.00011248600000000192, 0.00011215300000000372, 0.00011276399999999437, 0.00011250000000000149, 0.00011262499999999814, 0.00011238799999999799, 0.00011293000000000414, 0.00011302699999999472, 0.00011286099999999882, 0.0001129299999999972, 0.00011233399999999866, 0.00011284699999999925]</msg>
<status status="PASS" starttime="20201110 08:39:20.330" endtime="20201110 08:39:20.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.318" endtime="20201110 08:39:20.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.342" endtime="20201110 08:39:20.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:20.351" endtime="20201110 08:39:20.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.346" endtime="20201110 08:39:20.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.338" endtime="20201110 08:39:20.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.841" endtime="20201110 08:39:20.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:19.840" endtime="20201110 08:39:20.377"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.399" endtime="20201110 08:39:20.423"></status>
</kw>
<msg timestamp="20201110 08:39:20.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.396" endtime="20201110 08:39:20.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.426" endtime="20201110 08:39:20.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.433" endtime="20201110 08:39:20.436"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.389" endtime="20201110 08:39:20.438"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.383" endtime="20201110 08:39:20.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.456" endtime="20201110 08:39:20.802"></status>
</kw>
<msg timestamp="20201110 08:39:20.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042228903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042342958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.452" endtime="20201110 08:39:20.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042228903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042342958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:20.811" endtime="20201110 08:39:20.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.829" endtime="20201110 08:39:20.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.445" endtime="20201110 08:39:20.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.441" endtime="20201110 08:39:20.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:20.848" level="INFO">${RESULT} = [{'time': 0.042342958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.0001140550000000018, 'source_diff': 0.0001140550000000018}, {'time': 0.042458958, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:20.839" endtime="20201110 08:39:20.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:20.877" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:20.850" endtime="20201110 08:39:20.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.888" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201110 08:39:20.886" endtime="20201110 08:39:20.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.894" level="INFO">VALUE: [0.0001140550000000018, 0.00011352699999999522, 0.00011379100000000197, 0.00011381900000000111, 0.00011349999999999555, 0.000113597, 0.0001133890000000054, 0.00011391700000000504, 0.00011384700000000025, 0.00011384700000000025, 0.00011390199999999906, 0.00011349999999999555, 0.00011347199999999641, 0.00011405600000000127, 0.00011393100000000461, 0.00011326399999999487, 0.00011358399999999991, 0.00011401399999999562, 0.00011393099999999767, 0.00011359799999999948, 0.00011397199999999691, 0.00011327800000000138, 0.00011345800000000378, 0.00011366699999999785, 0.00011337500000000583, 0.00011348600000000292, 0.00011382000000000059, 0.00011363899999999871, 0.00011337500000000583, 0.00011370799999999709, 0.00011361099999999957, 0.00011404100000000222, 0.0001133749999999989, 0.00011348600000000292, 0.00011399999999999605, 0.00011405600000000127, 0.00011393099999999767, 0.00011338899999999846, 0.0001133749999999989, 0.00011313799999999874, 0.00011405499999999485, 0.00011390299999999853, 0.00011361099999999957, 0.00011370799999999709, 0.000113597, 0.00011393100000000461, 0.00011386099999999982, 0.00011359799999999948, 0.0001133749999999989, 0.00011338899999999846]</msg>
<status status="PASS" starttime="20201110 08:39:20.891" endtime="20201110 08:39:20.895"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.879" endtime="20201110 08:39:20.897"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.903" endtime="20201110 08:39:20.906"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:20.911" endtime="20201110 08:39:20.933"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.907" endtime="20201110 08:39:20.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.899" endtime="20201110 08:39:20.936"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.379" endtime="20201110 08:39:20.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.378" endtime="20201110 08:39:20.937"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.960" endtime="20201110 08:39:20.983"></status>
</kw>
<msg timestamp="20201110 08:39:20.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.957" endtime="20201110 08:39:20.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:20.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:20.986" endtime="20201110 08:39:20.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:20.993" endtime="20201110 08:39:20.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.950" endtime="20201110 08:39:20.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.944" endtime="20201110 08:39:20.999"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.016" endtime="20201110 08:39:21.363"></status>
</kw>
<msg timestamp="20201110 08:39:21.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042185708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.013" endtime="20201110 08:39:21.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042071111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042185708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:21.372" endtime="20201110 08:39:21.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.391" endtime="20201110 08:39:21.396"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.006" endtime="20201110 08:39:21.398"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.001" endtime="20201110 08:39:21.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.410" level="INFO">${RESULT} = [{'time': 0.042185708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.000114597000000001, 'source_diff': 0.000114597000000001}, {'time': 0.042303736, 'source': 'DUT_IC', 'event': 'FALLING', 'diff':...</msg>
<status status="PASS" starttime="20201110 08:39:21.401" endtime="20201110 08:39:21.410"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:21.439" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:21.412" endtime="20201110 08:39:21.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.450" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201110 08:39:21.448" endtime="20201110 08:39:21.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.455" level="INFO">VALUE: [0.000114597000000001, 0.00011461100000000057, 0.0001149299999999992, 0.00011430600000000152, 0.00011448599999999698, 0.00011498599999999748, 0.0001149169999999991, 0.00011504199999999576, 0.00011441700000000554, 0.00011413799999999974, 0.00011469399999999852, 0.00011470799999999809, 0.00011494400000000571, 0.00011438899999999946, 0.00011450000000000349, 0.00011470899999999756, 0.00011458400000000091, 0.00011450000000000349, 0.00011415199999999931, 0.0001143749999999999, 0.00011415299999999878, 0.00011415299999999878, 0.0001148750000000004, 0.00011458300000000143, 0.0001149169999999991, 0.00011483400000000116, 0.00011427800000000238, 0.00011420799999999759, 0.00011448599999999698, 0.0001143749999999999, 0.00011426400000000281, 0.00011418099999999792, 0.00011426400000000281, 0.00011458300000000143, 0.00011429200000000195, 0.0001150970000000015, 0.0001143749999999999, 0.00011480500000000254, 0.00011498599999999748, 0.00011491599999999963, 0.00011429200000000195, 0.00011458300000000143, 0.00011481999999999465, 0.00011482000000000159, 0.0001143749999999999, 0.00011504199999999576, 0.00011426400000000281, 0.0001150550000000028, 0.00011450000000000349, 0.00011426399999999587]</msg>
<status status="PASS" starttime="20201110 08:39:21.452" endtime="20201110 08:39:21.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.441" endtime="20201110 08:39:21.459"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.465" endtime="20201110 08:39:21.468"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:21.473" endtime="20201110 08:39:21.495"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.469" endtime="20201110 08:39:21.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.460" endtime="20201110 08:39:21.498"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.940" endtime="20201110 08:39:21.499"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:20.938" endtime="20201110 08:39:21.499"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.522" endtime="20201110 08:39:21.546"></status>
</kw>
<msg timestamp="20201110 08:39:21.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:21.519" endtime="20201110 08:39:21.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.554" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:21.550" endtime="20201110 08:39:21.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.556" endtime="20201110 08:39:21.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.511" endtime="20201110 08:39:21.561"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.506" endtime="20201110 08:39:21.563"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.580" endtime="20201110 08:39:21.912"></status>
</kw>
<msg timestamp="20201110 08:39:21.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042038806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0421545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:21.576" endtime="20201110 08:39:21.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042038806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0421545, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:39:21.922" endtime="20201110 08:39:21.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:21.940" endtime="20201110 08:39:21.945"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.569" endtime="20201110 08:39:21.947"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.564" endtime="20201110 08:39:21.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:21.959" level="INFO">${RESULT} = [{'time': 0.0421545, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011569399999999952, 'source_diff': 0.00011569399999999952}, {'time': 0.042274528, 'source': 'DUT_IC', 'event': 'FALLING', 'diff...</msg>
<status status="PASS" starttime="20201110 08:39:21.950" endtime="20201110 08:39:21.959"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:21.988" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:21.961" endtime="20201110 08:39:21.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:21.999" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201110 08:39:21.997" endtime="20201110 08:39:22.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.004" level="INFO">VALUE: [0.00011569399999999952, 0.00011605599999999633, 0.0001157090000000055, 0.00011516699999999935, 0.00011548699999999745, 0.00011516599999999988, 0.00011547200000000535, 0.00011515299999999978, 0.00011570799999999909, 0.00011551399999999712, 0.00011536100000000132, 0.00011543099999999917, 0.0001160420000000037, 0.00011602799999999719, 0.00011559800000000148, 0.00011581900000000311, 0.00011525000000000424, 0.00011604100000000422, 0.00011583299999999574, 0.00011513900000000021, 0.00011526399999999687, 0.000115597000000002, 0.0001157090000000055, 0.00011520899999999806, 0.00011547199999999841, 0.00011517999999999945, 0.0001160550000000038, 0.0001159300000000002, 0.00011594499999999924, 0.00011513900000000021, 0.00011570899999999856, 0.00011561099999999463, 0.00011600000000000499, 0.0001152770000000039, 0.00011541600000000013, 0.0001158049999999966, 0.000115597000000002, 0.000115597000000002, 0.00011548599999999798, 0.00011522199999999816, 0.00011513900000000021, 0.00011604199999999676, 0.00011584800000000173, 0.00011570799999999909, 0.00011544499999999874, 0.0001158750000000014, 0.00011559699999999506, 0.0001159170000000001, 0.00011584700000000225, 0.00011605600000000327]</msg>
<status status="PASS" starttime="20201110 08:39:22.001" endtime="20201110 08:39:22.006"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.990" endtime="20201110 08:39:22.008"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.014" endtime="20201110 08:39:22.017"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:22.022" endtime="20201110 08:39:22.044"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.018" endtime="20201110 08:39:22.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.009" endtime="20201110 08:39:22.047"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.501" endtime="20201110 08:39:22.048"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:21.500" endtime="20201110 08:39:22.048"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.071" endtime="20201110 08:39:22.094"></status>
</kw>
<msg timestamp="20201110 08:39:22.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.068" endtime="20201110 08:39:22.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.098" endtime="20201110 08:39:22.103"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.105" endtime="20201110 08:39:22.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.060" endtime="20201110 08:39:22.110"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.055" endtime="20201110 08:39:22.112"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.129" endtime="20201110 08:39:22.465"></status>
</kw>
<msg timestamp="20201110 08:39:22.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042088611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.126" endtime="20201110 08:39:22.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041972014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042088611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.474" endtime="20201110 08:39:22.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.492" endtime="20201110 08:39:22.500"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.118" endtime="20201110 08:39:22.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.113" endtime="20201110 08:39:22.503"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:22.513" level="INFO">${RESULT} = [{'time': 0.042088611, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011659699999999606, 'source_diff': 0.00011659699999999606}, {'time': 0.042214611, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:22.505" endtime="20201110 08:39:22.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:22.543" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:22.515" endtime="20201110 08:39:22.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.554" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201110 08:39:22.551" endtime="20201110 08:39:22.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.559" level="INFO">VALUE: [0.00011659699999999606, 0.00011701399999999862, 0.00011637499999999495, 0.00011615300000000078, 0.00011699999999999905, 0.00011645899999999931, 0.00011682000000000359, 0.0001162629999999984, 0.0001169300000000012, 0.00011694400000000077, 0.00011693099999999373, 0.00011693100000000067, 0.00011694500000000024, 0.00011626399999999787, 0.00011693100000000067, 0.00011704199999999776, 0.00011691599999999469, 0.00011711099999999613, 0.0001160970000000025, 0.00011661100000000257, 0.00011659699999999606, 0.00011682000000000359, 0.00011636100000000232, 0.00011658399999999597, 0.00011645899999999931, 0.00011702699999999872, 0.00011631900000000361, 0.00011704100000000522, 0.00011702800000000513, 0.00011661100000000257, 0.00011680600000000402, 0.00011670800000000009, 0.00011613899999999427, 0.00011683400000000316, 0.0001168620000000023, 0.00011615200000000131, 0.00011679099999999804, 0.00011704099999999829, 0.00011659699999999606, 0.00011648600000000592, 0.00011648599999999898, 0.00011704199999999776, 0.00011618099999999992, 0.000116597000000003, 0.00011655499999999736, 0.00011634699999999581, 0.00011656899999999693, 0.00011698599999999948, 0.00011640300000000103, 0.00011680599999999708]</msg>
<status status="PASS" starttime="20201110 08:39:22.556" endtime="20201110 08:39:22.560"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.545" endtime="20201110 08:39:22.562"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.569" endtime="20201110 08:39:22.571"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:22.577" endtime="20201110 08:39:22.599"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.573" endtime="20201110 08:39:22.600"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.564" endtime="20201110 08:39:22.602"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.050" endtime="20201110 08:39:22.603"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.049" endtime="20201110 08:39:22.603"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.626" endtime="20201110 08:39:22.650"></status>
</kw>
<msg timestamp="20201110 08:39:22.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.622" endtime="20201110 08:39:22.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:22.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:22.653" endtime="20201110 08:39:22.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.659" endtime="20201110 08:39:22.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.615" endtime="20201110 08:39:22.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.609" endtime="20201110 08:39:22.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:22.683" endtime="20201110 08:39:23.016"></status>
</kw>
<msg timestamp="20201110 08:39:23.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042409403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:22.679" endtime="20201110 08:39:23.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042409403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:23.025" endtime="20201110 08:39:23.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.043" endtime="20201110 08:39:23.049"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.672" endtime="20201110 08:39:23.050"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.668" endtime="20201110 08:39:23.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select=FALLING</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:23.062" level="INFO">${RESULT} = [{'time': 0.042409403, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0.00011711099999999613, 'source_diff': 0.00011711099999999613}, {'time': 0.042533417, 'source': 'DUT_IC', 'event': 'FALLING', 'di...</msg>
<status status="PASS" starttime="20201110 08:39:23.053" endtime="20201110 08:39:23.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201110 08:39:23.092" level="INFO">${ACCURACY} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:23.064" endtime="20201110 08:39:23.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.103" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201110 08:39:23.100" endtime="20201110 08:39:23.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.108" level="INFO">VALUE: [0.00011711099999999613, 0.00011769499999999405, 0.00011793099999999473, 0.00011737499999999595, 0.00011781899999999818, 0.00011715300000000178, 0.0001178750000000034, 0.00011763900000000271, 0.00011793099999999473, 0.00011715300000000178, 0.00011715300000000178, 0.00011748699999999945, 0.00011723599999999973, 0.00011731900000000461, 0.00011781899999999818, 0.0001175829999999975, 0.00011756900000000486, 0.00011715300000000178, 0.00011736099999999638, 0.00011770899999999362, 0.00011759800000000348, 0.00011781899999999818, 0.0001172499999999993, 0.00011804099999999929, 0.00011770800000000109, 0.00011715299999999484, 0.00011804199999999876, 0.00011738900000000246, 0.00011759799999999654, 0.00011754199999999826, 0.00011811099999999713, 0.00011761100000000357, 0.000117082999999997, 0.00011791599999999569, 0.00011804199999999876, 0.00011737499999999595, 0.00011758399999999697, 0.00011738900000000246, 0.00011780599999999808, 0.0001180970000000045, 0.00011758300000000443, 0.00011727799999999844, 0.00011804100000000622, 0.00011736100000000332, 0.00011716700000000135, 0.00011780599999999808, 0.00011772300000000013, 0.00011748699999999945, 0.00011736199999999586, 0.0001179300000000022]</msg>
<status status="PASS" starttime="20201110 08:39:23.105" endtime="20201110 08:39:23.109"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.093" endtime="20201110 08:39:23.111"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:23.118" endtime="20201110 08:39:23.121"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.127" endtime="20201110 08:39:23.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.122" endtime="20201110 08:39:23.151"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.113" endtime="20201110 08:39:23.152"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.605" endtime="20201110 08:39:23.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:22.604" endtime="20201110 08:39:23.153"></status>
</kw>
<status status="PASS" starttime="20201110 08:38:27.615" endtime="20201110 08:39:23.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:23.163" endtime="20201110 08:39:23.185"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.159" endtime="20201110 08:39:23.186"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.156" endtime="20201110 08:39:23.187"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201110 08:38:27.488" endtime="20201110 08:39:23.188" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:37:26.663" endtime="20201110 08:39:23.197"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201110 08:39:23.335" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201110 08:39:23.352" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201110 08:39:24.031" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201110 08:39:23.332" endtime="20201110 08:39:24.032"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.038" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201110 08:39:24.035" endtime="20201110 08:39:27.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.329" endtime="20201110 08:39:27.041"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:27.046" endtime="20201110 08:39:27.471"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.043" endtime="20201110 08:39:27.472"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.502" endtime="20201110 08:39:27.523"></status>
</kw>
<msg timestamp="20201110 08:39:27.525" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.499" endtime="20201110 08:39:27.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.531" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.10)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.527" endtime="20201110 08:39:27.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.538" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:27.534" endtime="20201110 08:39:27.539"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:27.492" endtime="20201110 08:39:27.541"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:27.487" endtime="20201110 08:39:27.542"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.484" endtime="20201110 08:39:27.543"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:27.551" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:27.550" endtime="20201110 08:39:27.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.545" endtime="20201110 08:39:27.552"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.482" endtime="20201110 08:39:27.553"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.481" endtime="20201110 08:39:27.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.556" endtime="20201110 08:39:27.559"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.478" endtime="20201110 08:39:27.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.562" endtime="20201110 08:39:27.566"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.474" endtime="20201110 08:39:27.568"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:23.326" endtime="20201110 08:39:27.569"></status>
</kw>
<test id="s1-s4-t1" name="Measure Sleep Jitter With Increasing Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:27.583" endtime="20201110 08:39:27.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.579" endtime="20201110 08:39:27.608"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.642" endtime="20201110 08:39:27.660"></status>
</kw>
<msg timestamp="20201110 08:39:27.661" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.639" endtime="20201110 08:39:27.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.668" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201110 08:39:27.664" endtime="20201110 08:39:27.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201110 08:39:27.675" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201110 08:39:27.670" endtime="20201110 08:39:27.676"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:27.631" endtime="20201110 08:39:27.678"></status>
</kw>
<status status="FAIL" starttime="20201110 08:39:27.625" endtime="20201110 08:39:27.679"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.622" endtime="20201110 08:39:27.680"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201110 08:39:27.688" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201110 08:39:27.687" endtime="20201110 08:39:27.689"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.682" endtime="20201110 08:39:27.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.620" endtime="20201110 08:39:27.690"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.618" endtime="20201110 08:39:27.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.692" endtime="20201110 08:39:27.695"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.614" endtime="20201110 08:39:27.697"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.610" endtime="20201110 08:39:27.699"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.577" endtime="20201110 08:39:27.699"></status>
</kw>
<kw name="${n} IN RANGE [ 10 ]" type="for">
<kw name="${n} = 0" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:27.708" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:27.734" endtime="20201110 08:39:29.850"></status>
</kw>
<msg timestamp="20201110 08:39:29.851" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3724317, 'start-iter': 1, 'wakeups': [3734328, 3744328, 3754328, 37643...</msg>
<status status="PASS" starttime="20201110 08:39:27.730" endtime="20201110 08:39:29.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.858" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 3724317, 'start-iter': 1, 'wakeups': [3734328, 3744328, 3754328, 37643...</msg>
<status status="PASS" starttime="20201110 08:39:29.854" endtime="20201110 08:39:29.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.866" endtime="20201110 08:39:29.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.721" endtime="20201110 08:39:29.872"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.715" endtime="20201110 08:39:29.873"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:29.880" level="INFO">${RESULT} = {'wakeups': [3734328, 3744328, 3754328, 3764328, 3774328, 3784328, 3794328, 3804328, 3814328, 3824328, 3834328, 3844328, 3854328, 3864328, 3874328, 3884328, 3894328, 3904328, 3914328, 3924328, 3934328...</msg>
<status status="PASS" starttime="20201110 08:39:29.875" endtime="20201110 08:39:29.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.895" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:29.890" endtime="20201110 08:39:29.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.901" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:29.898" endtime="20201110 08:39:29.902"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.882" endtime="20201110 08:39:29.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.921" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:29.918" endtime="20201110 08:39:29.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.930" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:29.926" endtime="20201110 08:39:29.932"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.907" endtime="20201110 08:39:29.934"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.946" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:29.944" endtime="20201110 08:39:29.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.951" level="INFO">VALUE: 3724317</msg>
<status status="PASS" starttime="20201110 08:39:29.949" endtime="20201110 08:39:29.952"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.937" endtime="20201110 08:39:29.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.965" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:29.962" endtime="20201110 08:39:29.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:29.970" level="INFO">VALUE: [3734328, 3744328, 3754328, 3764328, 3774328, 3784328, 3794328, 3804328, 3814328, 3824328, 3834328, 3844328, 3854328, 3864328, 3874328, 3884328, 3894328, 3904328, 3914328, 3924328, 3934328, 3944328, 3954328, 3964328, 3974328, 3984328, 3994328, 4004328, 4014328, 4024328, 4034328, 4044328, 4054328, 4064328, 4074328, 4084328, 4094328, 4104328, 4114328, 4124328, 4134328, 4144328, 4154328, 4164328, 4174328, 4184328, 4194328, 4204328, 4214328, 4224328, 4234328, 4244328, 4254328, 4264328, 4274328, 4284328, 4294328, 4304328, 4314328, 4324328, 4334328, 4344328, 4354328, 4364328, 4374328, 4384328, 4394328, 4404328, 4414328, 4424328, 4434328, 4444328, 4454328, 4464328, 4474328, 4484328, 4494328, 4504328, 4514328, 4524328, 4534328, 4544328, 4554328, 4564328, 4574328, 4584328, 4594328, 4604328, 4614328, 4624328, 4634328, 4644328, 4654328, 4664328, 4674328, 4684328, 4694328, 4704328, 4714328, 4724328]</msg>
<status status="PASS" starttime="20201110 08:39:29.967" endtime="20201110 08:39:29.971"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.955" endtime="20201110 08:39:29.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:29.990" endtime="20201110 08:39:30.371"></status>
</kw>
<msg timestamp="20201110 08:39:30.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143174528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.153186931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:29.987" endtime="20201110 08:39:30.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.395" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.143174528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.153186931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:30.380" endtime="20201110 08:39:30.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.398" endtime="20201110 08:39:30.402"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.979" endtime="20201110 08:39:30.403"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:29.974" endtime="20201110 08:39:30.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:30.463" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:30.407" endtime="20201110 08:39:30.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.473" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:30.471" endtime="20201110 08:39:30.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.478" level="INFO">VALUE: 0.143174528</msg>
<status status="PASS" starttime="20201110 08:39:30.476" endtime="20201110 08:39:30.478"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.465" endtime="20201110 08:39:30.480"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.491" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:30.489" endtime="20201110 08:39:30.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:30.496" level="INFO">VALUE: [0.153186931, 0.163188056, 0.173189153, 0.183190236, 0.193191292, 0.203192403, 0.213193458, 0.223194583, 0.233195625, 0.243196764, 0.253197806, 0.263198931, 0.273199986, 0.283201125, 0.293202153, 0.303203292, 0.313204333, 0.323205472, 0.333206528, 0.343207653, 0.353208694, 0.363209847, 0.373210875, 0.383212, 0.393213042, 0.403214181, 0.413215222, 0.423216361, 0.433217403, 0.443218528, 0.453219597, 0.463220722, 0.47322175, 0.483222889, 0.493223931, 0.503225069, 0.513226111, 0.523227236, 0.533228306, 0.543229417, 0.553230458, 0.563231639, 0.573232653, 0.583233806, 0.593234819, 0.603235958, 0.613237, 0.623238125, 0.633239167, 0.643240389, 0.653241347, 0.663242486, 0.673243583, 0.683244681, 0.693245722, 0.703246833, 0.713247889, 0.723249028, 0.733250056, 0.743251208, 0.75325225, 0.763253389, 0.773254417, 0.783255542, 0.793256597, 0.803257708, 0.813258764, 0.823259889, 0.833260917, 0.843262056, 0.853263097, 0.863264208, 0.873265264, 0.883266375, 0.893267431, 0.903268556, 0.913269583, 0.923270708, 0.93327175, 0.943272875, 0.953273917, 0.963275056, 0.973276111, 0.983277236, 0.993278264, 1.003279389, 1.013280431, 1.023281569, 1.033282597, 1.043283722, 1.053284806, 1.063285903, 1.073286958, 1.083288083, 1.093289125, 1.103290236, 1.113291292, 1.123292403, 1.133293444, 1.143294597] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:30.494" endtime="20201110 08:39:30.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.481" endtime="20201110 08:39:30.498"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.505" endtime="20201110 08:39:30.507"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:30.513" endtime="20201110 08:39:30.535"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.509" endtime="20201110 08:39:30.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.500" endtime="20201110 08:39:30.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.710" endtime="20201110 08:39:30.539"></status>
</kw>
<msg timestamp="20201110 08:39:30.539" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:30.560" endtime="20201110 08:39:32.672"></status>
</kw>
<msg timestamp="20201110 08:39:32.673" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6548628, 'start-iter': 1, 'wakeups': [6558638, 6568639, 6578639, 65886...</msg>
<status status="PASS" starttime="20201110 08:39:30.557" endtime="20201110 08:39:32.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.680" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 6548628, 'start-iter': 1, 'wakeups': [6558638, 6568639, 6578639, 65886...</msg>
<status status="PASS" starttime="20201110 08:39:32.675" endtime="20201110 08:39:32.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.682" endtime="20201110 08:39:32.686"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.549" endtime="20201110 08:39:32.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.544" endtime="20201110 08:39:32.689"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:32.695" level="INFO">${RESULT} = {'wakeups': [6558638, 6568639, 6578639, 6588639, 6598639, 6608639, 6618639, 6628639, 6638639, 6648639, 6658639, 6668639, 6678639, 6688639, 6698639, 6708639, 6718639, 6728639, 6738639, 6748639, 6758639...</msg>
<status status="PASS" starttime="20201110 08:39:32.691" endtime="20201110 08:39:32.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.706" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:32.703" endtime="20201110 08:39:32.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.711" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:32.708" endtime="20201110 08:39:32.711"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.697" endtime="20201110 08:39:32.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.723" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:32.721" endtime="20201110 08:39:32.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.729" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:32.725" endtime="20201110 08:39:32.730"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.714" endtime="20201110 08:39:32.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.742" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:32.739" endtime="20201110 08:39:32.742"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.746" level="INFO">VALUE: 6548628</msg>
<status status="PASS" starttime="20201110 08:39:32.744" endtime="20201110 08:39:32.747"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.733" endtime="20201110 08:39:32.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.759" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:32.756" endtime="20201110 08:39:32.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:32.763" level="INFO">VALUE: [6558638, 6568639, 6578639, 6588639, 6598639, 6608639, 6618639, 6628639, 6638639, 6648639, 6658639, 6668639, 6678639, 6688639, 6698639, 6708639, 6718639, 6728639, 6738639, 6748639, 6758639, 6768639, 6778639, 6788639, 6798639, 6808639, 6818639, 6828639, 6838639, 6848639, 6858639, 6868639, 6878639, 6888639, 6898639, 6908639, 6918639, 6928639, 6938639, 6948639, 6958639, 6968639, 6978639, 6988639, 6998639, 7008639, 7018639, 7028639, 7038639, 7048639, 7058639, 7068639, 7078639, 7088639, 7098639, 7108639, 7118639, 7128639, 7138639, 7148639, 7158639, 7168639, 7178639, 7188639, 7198639, 7208639, 7218639, 7228639, 7238639, 7248639, 7258639, 7268639, 7278639, 7288639, 7298639, 7308639, 7318639, 7328639, 7338639, 7348639, 7358639, 7368639, 7378639, 7388639, 7398639, 7408639, 7418639, 7428639, 7438639, 7448639, 7458639, 7468639, 7478639, 7488639, 7498639, 7508639, 7518639, 7528639, 7538639, 7548639]</msg>
<status status="PASS" starttime="20201110 08:39:32.761" endtime="20201110 08:39:32.764"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.750" endtime="20201110 08:39:32.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:32.782" endtime="20201110 08:39:33.136"></status>
</kw>
<msg timestamp="20201110 08:39:33.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039259486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049271208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:32.779" endtime="20201110 08:39:33.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039259486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049271208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:33.145" endtime="20201110 08:39:33.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.162" endtime="20201110 08:39:33.166"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.772" endtime="20201110 08:39:33.167"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:32.767" endtime="20201110 08:39:33.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:33.222" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:33.170" endtime="20201110 08:39:33.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.233" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:33.231" endtime="20201110 08:39:33.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.238" level="INFO">VALUE: 0.039259486</msg>
<status status="PASS" starttime="20201110 08:39:33.235" endtime="20201110 08:39:33.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.224" endtime="20201110 08:39:33.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.253" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:33.251" endtime="20201110 08:39:33.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:33.258" level="INFO">VALUE: [0.049271208, 0.059273319, 0.069274375, 0.079275486, 0.089276542, 0.099277722, 0.109278764, 0.119279861, 0.129280875, 0.139282014, 0.149283056, 0.159284194, 0.169285236, 0.179286347, 0.189287403, 0.199288542, 0.209289569, 0.219290694, 0.22929175, 0.239292917, 0.249293986, 0.259295042, 0.269296097, 0.279297236, 0.289298264, 0.299299389, 0.309300431, 0.319301569, 0.329302625, 0.33930375, 0.349304806, 0.359305931, 0.369306958, 0.379308097, 0.389309139, 0.399310278, 0.409311319, 0.419312458, 0.429313486, 0.439314611, 0.449315667, 0.459316792, 0.469317833, 0.479318958, 0.48932, 0.499321139, 0.509322194, 0.519323306, 0.529324375, 0.539325486, 0.549326542, 0.559327653, 0.569328792, 0.579329833, 0.589330889, 0.599332014, 0.609333056, 0.619334181, 0.629335222, 0.639336361, 0.649337417, 0.659338528, 0.669339569, 0.679340708, 0.689341764, 0.699342875, 0.709343986, 0.719345056, 0.729346097, 0.739347222, 0.749348278, 0.759349403, 0.769350444, 0.779351625, 0.789352653, 0.79935375, 0.809354847, 0.819355931, 0.829356972, 0.839358097, 0.849359139, 0.859360264, 0.869361306, 0.879362431, 0.889363458, 0.899364597, 0.909365625, 0.91936675, 0.929367806, 0.939368917, 0.949369958, 0.959371083, 0.969372139, 0.979373264, 0.989374306, 0.999375417, 1.009376472, 1.019377583, 1.029378625, 1.039379764] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:33.255" endtime="20201110 08:39:33.259"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.242" endtime="20201110 08:39:33.260"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.267" endtime="20201110 08:39:33.269"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:33.275" endtime="20201110 08:39:33.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.270" endtime="20201110 08:39:33.298"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.262" endtime="20201110 08:39:33.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:30.540" endtime="20201110 08:39:33.300"></status>
</kw>
<msg timestamp="20201110 08:39:33.301" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 1 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:33.322" endtime="20201110 08:39:35.437"></status>
</kw>
<msg timestamp="20201110 08:39:35.439" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 9309308, 'start-iter': 1, 'wakeups': [9319318, 9329319, 9339319, 93493...</msg>
<status status="PASS" starttime="20201110 08:39:33.319" endtime="20201110 08:39:35.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.446" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 1\r\n'], 'data': [{'timer-count': '1'}, {'timer-interval': '10000'}, {'start-time': 9309308, 'start-iter': 1, 'wakeups': [9319318, 9329319, 9339319, 93493...</msg>
<status status="PASS" starttime="20201110 08:39:35.441" endtime="20201110 08:39:35.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.448" endtime="20201110 08:39:35.452"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.311" endtime="20201110 08:39:35.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.306" endtime="20201110 08:39:35.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:35.461" level="INFO">${RESULT} = {'wakeups': [9319318, 9329319, 9339319, 9349319, 9359319, 9369319, 9379319, 9389319, 9399319, 9409319, 9419319, 9429319, 9439319, 9449319, 9459319, 9469319, 9479319, 9489319, 9499319, 9509319, 9519319...</msg>
<status status="PASS" starttime="20201110 08:39:35.457" endtime="20201110 08:39:35.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.471" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:35.469" endtime="20201110 08:39:35.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.476" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:35.474" endtime="20201110 08:39:35.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.463" endtime="20201110 08:39:35.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.488" level="INFO">NAME: 1-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:35.486" endtime="20201110 08:39:35.489"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.493" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:35.491" endtime="20201110 08:39:35.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.479" endtime="20201110 08:39:35.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.506" level="INFO">NAME: dut-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:35.504" endtime="20201110 08:39:35.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.511" level="INFO">VALUE: 9309308</msg>
<status status="PASS" starttime="20201110 08:39:35.509" endtime="20201110 08:39:35.512"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.497" endtime="20201110 08:39:35.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.523" level="INFO">NAME: dut-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:35.521" endtime="20201110 08:39:35.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.528" level="INFO">VALUE: [9319318, 9329319, 9339319, 9349319, 9359319, 9369319, 9379319, 9389319, 9399319, 9409319, 9419319, 9429319, 9439319, 9449319, 9459319, 9469319, 9479319, 9489319, 9499319, 9509319, 9519319, 9529319, 9539319, 9549319, 9559319, 9569319, 9579319, 9589319, 9599319, 9609319, 9619319, 9629319, 9639319, 9649319, 9659319, 9669319, 9679319, 9689319, 9699319, 9709319, 9719319, 9729319, 9739319, 9749319, 9759319, 9769319, 9779319, 9789319, 9799319, 9809319, 9819319, 9829319, 9839319, 9849319, 9859319, 9869319, 9879319, 9889319, 9899319, 9909319, 9919319, 9929319, 9939319, 9949319, 9959319, 9969319, 9979319, 9989319, 9999319, 10009319, 10019319, 10029319, 10039319, 10049319, 10059319, 10069319, 10079319, 10089319, 10099319, 10109319, 10119319, 10129319, 10139319, 10149319, 10159319, 10169319, 10179319, 10189319, 10199319, 10209319, 10219319, 10229319, 10239319, 10249319, 10259319, 10269319, 10279319, 10289319, 10299319, 10309319]</msg>
<status status="PASS" starttime="20201110 08:39:35.525" endtime="20201110 08:39:35.529"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.514" endtime="20201110 08:39:35.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.550" endtime="20201110 08:39:35.906"></status>
</kw>
<msg timestamp="20201110 08:39:35.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038222514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048234319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:35.544" endtime="20201110 08:39:35.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:35.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038222514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048234319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:35.914" endtime="20201110 08:39:35.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:35.931" endtime="20201110 08:39:35.935"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.537" endtime="20201110 08:39:35.937"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.532" endtime="20201110 08:39:35.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:35.993" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:35.940" endtime="20201110 08:39:35.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.004" level="INFO">NAME: hil-1-start-time</msg>
<status status="PASS" starttime="20201110 08:39:36.001" endtime="20201110 08:39:36.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.008" level="INFO">VALUE: 0.038222514</msg>
<status status="PASS" starttime="20201110 08:39:36.006" endtime="20201110 08:39:36.009"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:35.995" endtime="20201110 08:39:36.010"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.021" level="INFO">NAME: hil-1-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:36.019" endtime="20201110 08:39:36.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:36.026" level="INFO">VALUE: [0.048234319, 0.058236403, 0.068237444, 0.078238583, 0.088239625, 0.098240806, 0.108241806, 0.118242931, 0.128243986, 0.138245111, 0.148246153, 0.158247264, 0.168248319, 0.178249431, 0.188250472, 0.198251625, 0.208252653, 0.218253806, 0.228254819, 0.238255958, 0.248257014, 0.258258125, 0.268259167, 0.278260306, 0.288261347, 0.298262472, 0.308263528, 0.318264653, 0.328265694, 0.338266819, 0.348267861, 0.358269014, 0.368270056, 0.378271167, 0.388272208, 0.398273347, 0.408274403, 0.418275528, 0.428276569, 0.438277681, 0.448278736, 0.458279861, 0.468280917, 0.478282042, 0.488283097, 0.498284208, 0.508285264, 0.518286403, 0.528287444, 0.538288556, 0.548289611, 0.558290736, 0.568291792, 0.578292903, 0.588293944, 0.598295083, 0.608296181, 0.61829725, 0.628298292, 0.638299486, 0.648300472, 0.658301625, 0.668302653, 0.678303778, 0.688304875, 0.698305944, 0.708306986, 0.718308125, 0.728309181, 0.738310292, 0.748311375, 0.758312486, 0.768313514, 0.778314653, 0.788315694, 0.798316819, 0.808317875, 0.818319, 0.828320028, 0.838321167, 0.848322208, 0.858323333, 0.868324375, 0.878325514, 0.888326556, 0.898327681, 0.908328806, 0.918329875, 0.928330903, 0.938332028, 0.948333083, 0.958334222, 0.968335264, 0.978336403, 0.988337444, 0.998338556, 1.008339597, 1.018340722, 1.028341778, 1.038342903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:36.024" endtime="20201110 08:39:36.028"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.012" endtime="20201110 08:39:36.029"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.036" endtime="20201110 08:39:36.038"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:36.044" endtime="20201110 08:39:36.066"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.040" endtime="20201110 08:39:36.067"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.031" endtime="20201110 08:39:36.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:33.302" endtime="20201110 08:39:36.069"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.704" endtime="20201110 08:39:36.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.702" endtime="20201110 08:39:36.070"></status>
</kw>
<kw name="${n} = 1" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:36.076" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:36.097" endtime="20201110 08:39:38.204"></status>
</kw>
<msg timestamp="20201110 08:39:38.205" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12085995, 'start-iter': 1, 'wakeups': [12096013, 12106012, 12116012, 1...</msg>
<status status="PASS" starttime="20201110 08:39:36.094" endtime="20201110 08:39:38.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.212" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 12085995, 'start-iter': 1, 'wakeups': [12096013, 12106012, 12116012, 1...</msg>
<status status="PASS" starttime="20201110 08:39:38.207" endtime="20201110 08:39:38.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.215" endtime="20201110 08:39:38.218"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.086" endtime="20201110 08:39:38.220"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.081" endtime="20201110 08:39:38.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:38.228" level="INFO">${RESULT} = {'wakeups': [12096013, 12106012, 12116012, 12126012, 12136012, 12146012, 12156012, 12166012, 12176012, 12186012, 12196012, 12206012, 12216012, 12226012, 12236012, 12246012, 12256012, 12266012, 1227601...</msg>
<status status="PASS" starttime="20201110 08:39:38.223" endtime="20201110 08:39:38.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.238" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:38.235" endtime="20201110 08:39:38.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.242" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:38.240" endtime="20201110 08:39:38.243"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.229" endtime="20201110 08:39:38.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.254" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:38.252" endtime="20201110 08:39:38.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.259" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:38.257" endtime="20201110 08:39:38.260"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.246" endtime="20201110 08:39:38.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.271" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:38.269" endtime="20201110 08:39:38.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.276" level="INFO">VALUE: 12085995</msg>
<status status="PASS" starttime="20201110 08:39:38.273" endtime="20201110 08:39:38.276"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.262" endtime="20201110 08:39:38.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.288" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:38.286" endtime="20201110 08:39:38.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.295" level="INFO">VALUE: [12096013, 12106012, 12116012, 12126012, 12136012, 12146012, 12156012, 12166012, 12176012, 12186012, 12196012, 12206012, 12216012, 12226012, 12236012, 12246012, 12256012, 12266012, 12276012, 12286012, 12296012, 12306012, 12316012, 12326012, 12336012, 12346012, 12356012, 12366012, 12376012, 12386012, 12396012, 12406012, 12416012, 12426012, 12436012, 12446012, 12456012, 12466012, 12476012, 12486012, 12496012, 12506012, 12516012, 12526012, 12536012, 12546012, 12556012, 12566012, 12576012, 12586012, 12596012, 12606012, 12616012, 12626012, 12636012, 12646012, 12656012, 12666012, 12676012, 12686012, 12696012, 12706012, 12716012, 12726012, 12736012, 12746012, 12756012, 12766012, 12776012, 12786012, 12796012, 12806012, 12816012, 12826012, 12836012, 12846012, 12856012, 12866012, 12876012, 12886012, 12896012, 12906012, 12916012, 12926012, 12936012, 12946012, 12956012, 12966012, 12976012, 12986012, 12996012, 13006012, 13016012, 13026012, 13036012, 13046012, 13056012, 13066012, 13076012, 13086012]</msg>
<status status="PASS" starttime="20201110 08:39:38.291" endtime="20201110 08:39:38.296"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.279" endtime="20201110 08:39:38.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.318" endtime="20201110 08:39:38.706"></status>
</kw>
<msg timestamp="20201110 08:39:38.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045900167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055919194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.313" endtime="20201110 08:39:38.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045900167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055919194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:38.715" endtime="20201110 08:39:38.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.732" endtime="20201110 08:39:38.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.305" endtime="20201110 08:39:38.737"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.299" endtime="20201110 08:39:38.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:38.794" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:38.741" endtime="20201110 08:39:38.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.805" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:38.802" endtime="20201110 08:39:38.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.809" level="INFO">VALUE: 0.045900167</msg>
<status status="PASS" starttime="20201110 08:39:38.807" endtime="20201110 08:39:38.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.796" endtime="20201110 08:39:38.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.822" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:38.820" endtime="20201110 08:39:38.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:38.827" level="INFO">VALUE: [0.055919194, 0.065919319, 0.075920361, 0.085921486, 0.095922542, 0.105923653, 0.115924694, 0.125925819, 0.135926875, 0.145927986, 0.155929056, 0.165930236, 0.175931208, 0.185932333, 0.195933375, 0.2059345, 0.215935542, 0.225936681, 0.235937708, 0.245938847, 0.255939875, 0.265941014, 0.275942056, 0.285943194, 0.295944236, 0.305945347, 0.315946389, 0.3259475, 0.335948597, 0.345949681, 0.355950708, 0.365951833, 0.375952875, 0.385954028, 0.395955028, 0.405956167, 0.415957208, 0.425958319, 0.435959375, 0.445960486, 0.455961514, 0.465962667, 0.475963681, 0.485964833, 0.495965861, 0.505966972, 0.515968042, 0.525969125, 0.535970167, 0.545971319, 0.555972333, 0.565973458, 0.5759745, 0.585975681, 0.595976667, 0.605977792, 0.615978833, 0.625979958, 0.635980986, 0.645982111, 0.655983167, 0.665984278, 0.675985319, 0.685986458, 0.695987486, 0.705988611, 0.715989653, 0.725990778, 0.735991819, 0.745992944, 0.755993972, 0.765995097, 0.775996139, 0.785997278, 0.795998306, 0.805999444, 0.8160005, 0.826001611, 0.836002667, 0.846003764, 0.856004806, 0.866005931, 0.876006986, 0.886008111, 0.896009125, 0.90601025, 0.916011292, 0.926012431, 0.936013472, 0.946014625, 0.956015639, 0.966016764, 0.976017806, 0.986018931, 0.996019958, 1.006021097, 1.016022111, 1.026023236, 1.036024278, 1.046025417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:38.825" endtime="20201110 08:39:38.828"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.813" endtime="20201110 08:39:38.830"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.836" endtime="20201110 08:39:38.839"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:38.844" endtime="20201110 08:39:38.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.840" endtime="20201110 08:39:38.867"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.831" endtime="20201110 08:39:38.870"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.077" endtime="20201110 08:39:38.870"></status>
</kw>
<msg timestamp="20201110 08:39:38.871" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:38.892" endtime="20201110 08:39:40.996"></status>
</kw>
<msg timestamp="20201110 08:39:40.998" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14879184, 'start-iter': 1, 'wakeups': [14889201, 14899201, 14909201, 1...</msg>
<status status="PASS" starttime="20201110 08:39:38.888" endtime="20201110 08:39:40.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.005" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 14879184, 'start-iter': 1, 'wakeups': [14889201, 14899201, 14909201, 1...</msg>
<status status="PASS" starttime="20201110 08:39:41.000" endtime="20201110 08:39:41.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.007" endtime="20201110 08:39:41.011"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.881" endtime="20201110 08:39:41.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.876" endtime="20201110 08:39:41.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.020" level="INFO">${RESULT} = {'wakeups': [14889201, 14899201, 14909201, 14919201, 14929201, 14939201, 14949201, 14959201, 14969201, 14979201, 14989201, 14999201, 15009201, 15019201, 15029201, 15039201, 15049201, 15059201, 1506920...</msg>
<status status="PASS" starttime="20201110 08:39:41.016" endtime="20201110 08:39:41.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.030" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:41.028" endtime="20201110 08:39:41.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.035" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:41.033" endtime="20201110 08:39:41.036"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.022" endtime="20201110 08:39:41.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.047" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:41.045" endtime="20201110 08:39:41.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.052" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:41.050" endtime="20201110 08:39:41.052"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.038" endtime="20201110 08:39:41.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.066" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:41.064" endtime="20201110 08:39:41.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.071" level="INFO">VALUE: 14879184</msg>
<status status="PASS" starttime="20201110 08:39:41.068" endtime="20201110 08:39:41.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.055" endtime="20201110 08:39:41.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.083" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:41.081" endtime="20201110 08:39:41.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.088" level="INFO">VALUE: [14889201, 14899201, 14909201, 14919201, 14929201, 14939201, 14949201, 14959201, 14969201, 14979201, 14989201, 14999201, 15009201, 15019201, 15029201, 15039201, 15049201, 15059201, 15069201, 15079201, 15089201, 15099201, 15109201, 15119201, 15129201, 15139201, 15149201, 15159201, 15169201, 15179201, 15189201, 15199201, 15209201, 15219201, 15229201, 15239201, 15249201, 15259201, 15269201, 15279201, 15289201, 15299201, 15309201, 15319201, 15329201, 15339201, 15349201, 15359201, 15369201, 15379201, 15389201, 15399201, 15409201, 15419201, 15429201, 15439201, 15449201, 15459201, 15469201, 15479201, 15489201, 15499201, 15509201, 15519201, 15529201, 15539201, 15549201, 15559201, 15569201, 15579201, 15589201, 15599201, 15609201, 15619201, 15629201, 15639201, 15649201, 15659201, 15669201, 15679201, 15689201, 15699201, 15709201, 15719201, 15729201, 15739201, 15749201, 15759201, 15769201, 15779201, 15789201, 15799201, 15809201, 15819201, 15829201, 15839201, 15849201, 15859201, 15869201, 15879201]</msg>
<status status="PASS" starttime="20201110 08:39:41.085" endtime="20201110 08:39:41.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.074" endtime="20201110 08:39:41.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.111" endtime="20201110 08:39:41.453"></status>
</kw>
<msg timestamp="20201110 08:39:41.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038828292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048846639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.108" endtime="20201110 08:39:41.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038828292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048846639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:41.462" endtime="20201110 08:39:41.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.479" endtime="20201110 08:39:41.482"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.101" endtime="20201110 08:39:41.484"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.091" endtime="20201110 08:39:41.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:41.540" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:41.487" endtime="20201110 08:39:41.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.551" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:41.549" endtime="20201110 08:39:41.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.556" level="INFO">VALUE: 0.038828292</msg>
<status status="PASS" starttime="20201110 08:39:41.553" endtime="20201110 08:39:41.556"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.542" endtime="20201110 08:39:41.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.569" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:41.567" endtime="20201110 08:39:41.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:41.573" level="INFO">VALUE: [0.048846639, 0.058847778, 0.068848806, 0.078849931, 0.088850958, 0.098852083, 0.108853125, 0.11885425, 0.128855292, 0.138856417, 0.148857458, 0.158858583, 0.168859653, 0.17886075, 0.188861861, 0.198862917, 0.208863958, 0.218865083, 0.228866125, 0.238867264, 0.248868292, 0.258869431, 0.268870458, 0.278871597, 0.288872639, 0.29887375, 0.308874875, 0.318875917, 0.328876972, 0.338878139, 0.348879139, 0.358880264, 0.368881306, 0.378882431, 0.388883472, 0.398884611, 0.408885639, 0.418886764, 0.428887819, 0.438888944, 0.448889986, 0.458891153, 0.468892153, 0.478893264, 0.488894306, 0.498895444, 0.5088965, 0.518897625, 0.528898667, 0.538899819, 0.548900819, 0.558901944, 0.568903028, 0.578904111, 0.588905153, 0.598906292, 0.608907333, 0.618908458, 0.628909542, 0.638910611, 0.648911667, 0.658912778, 0.668913819, 0.678914958, 0.688916, 0.698917125, 0.708918167, 0.718919306, 0.728920333, 0.738921486, 0.748922514, 0.758923667, 0.768924694, 0.778925819, 0.788926875, 0.798928014, 0.808929056, 0.818930222, 0.828931236, 0.838932375, 0.848933431, 0.858934556, 0.868935625, 0.878936736, 0.888937792, 0.898938958, 0.908939986, 0.918941167, 0.928942153, 0.938943292, 0.948944403, 0.958945486, 0.968946556, 0.978947653, 0.988948708, 0.998949861, 1.008950889, 1.018952028, 1.028953083, 1.038954208] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:41.571" endtime="20201110 08:39:41.574"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.559" endtime="20201110 08:39:41.576"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.582" endtime="20201110 08:39:41.586"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:41.592" endtime="20201110 08:39:41.613"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.588" endtime="20201110 08:39:41.615"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.578" endtime="20201110 08:39:41.617"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:38.872" endtime="20201110 08:39:41.617"></status>
</kw>
<msg timestamp="20201110 08:39:41.618" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 2 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:41.639" endtime="20201110 08:39:43.744"></status>
</kw>
<msg timestamp="20201110 08:39:43.746" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 17625997, 'start-iter': 1, 'wakeups': [17636015, 17646014, 17656014, 1...</msg>
<status status="PASS" starttime="20201110 08:39:41.635" endtime="20201110 08:39:43.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.753" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 2\r\n'], 'data': [{'timer-count': '2'}, {'timer-interval': '10000'}, {'start-time': 17625997, 'start-iter': 1, 'wakeups': [17636015, 17646014, 17656014, 1...</msg>
<status status="PASS" starttime="20201110 08:39:43.749" endtime="20201110 08:39:43.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.756" endtime="20201110 08:39:43.759"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.628" endtime="20201110 08:39:43.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.623" endtime="20201110 08:39:43.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:43.769" level="INFO">${RESULT} = {'wakeups': [17636015, 17646014, 17656014, 17666014, 17676014, 17686014, 17696014, 17706014, 17716014, 17726014, 17736014, 17746014, 17756014, 17766014, 17776014, 17786014, 17796014, 17806014, 1781601...</msg>
<status status="PASS" starttime="20201110 08:39:43.764" endtime="20201110 08:39:43.769"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.779" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:43.777" endtime="20201110 08:39:43.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.784" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:43.781" endtime="20201110 08:39:43.784"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.770" endtime="20201110 08:39:43.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.796" level="INFO">NAME: 2-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:43.794" endtime="20201110 08:39:43.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.800" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:43.798" endtime="20201110 08:39:43.801"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.787" endtime="20201110 08:39:43.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.813" level="INFO">NAME: dut-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:43.811" endtime="20201110 08:39:43.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.818" level="INFO">VALUE: 17625997</msg>
<status status="PASS" starttime="20201110 08:39:43.816" endtime="20201110 08:39:43.819"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.804" endtime="20201110 08:39:43.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.832" level="INFO">NAME: dut-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:43.829" endtime="20201110 08:39:43.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:43.837" level="INFO">VALUE: [17636015, 17646014, 17656014, 17666014, 17676014, 17686014, 17696014, 17706014, 17716014, 17726014, 17736014, 17746014, 17756014, 17766014, 17776014, 17786014, 17796014, 17806014, 17816014, 17826014, 17836014, 17846014, 17856014, 17866014, 17876014, 17886014, 17896014, 17906014, 17916014, 17926014, 17936014, 17946014, 17956014, 17966014, 17976014, 17986014, 17996014, 18006014, 18016014, 18026014, 18036014, 18046014, 18056014, 18066014, 18076014, 18086014, 18096014, 18106014, 18116014, 18126014, 18136014, 18146014, 18156014, 18166014, 18176014, 18186014, 18196014, 18206014, 18216014, 18226014, 18236014, 18246014, 18256014, 18266014, 18276014, 18286014, 18296014, 18306014, 18316014, 18326014, 18336014, 18346014, 18356014, 18366014, 18376014, 18386014, 18396014, 18406014, 18416014, 18426014, 18436014, 18446014, 18456014, 18466014, 18476014, 18486014, 18496014, 18506014, 18516014, 18526014, 18536014, 18546014, 18556014, 18566014, 18576014, 18586014, 18596014, 18606014, 18616014, 18626014]</msg>
<status status="PASS" starttime="20201110 08:39:43.834" endtime="20201110 08:39:43.838"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.822" endtime="20201110 08:39:43.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:43.857" endtime="20201110 08:39:44.200"></status>
</kw>
<msg timestamp="20201110 08:39:44.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037871097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:43.853" endtime="20201110 08:39:44.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037871097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047890111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:44.209" endtime="20201110 08:39:44.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.227" endtime="20201110 08:39:44.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.846" endtime="20201110 08:39:44.233"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:43.841" endtime="20201110 08:39:44.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:44.289" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:44.236" endtime="20201110 08:39:44.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.299" level="INFO">NAME: hil-2-start-time</msg>
<status status="PASS" starttime="20201110 08:39:44.297" endtime="20201110 08:39:44.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.304" level="INFO">VALUE: 0.037871097</msg>
<status status="PASS" starttime="20201110 08:39:44.302" endtime="20201110 08:39:44.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.291" endtime="20201110 08:39:44.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.317" level="INFO">NAME: hil-2-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:44.315" endtime="20201110 08:39:44.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:44.322" level="INFO">VALUE: [0.047890111, 0.05789025, 0.067891292, 0.077892431, 0.087893458, 0.097894611, 0.107895639, 0.117896778, 0.127897819, 0.137898958, 0.147899986, 0.157901125, 0.167902181, 0.177903347, 0.187904403, 0.197905486, 0.207906514, 0.217907708, 0.227908694, 0.237909833, 0.247910889, 0.257912, 0.267913056, 0.27791425, 0.287915222, 0.297916361, 0.307917403, 0.317918542, 0.327919583, 0.337920708, 0.347921764, 0.357922889, 0.367923931, 0.377925069, 0.387926111, 0.39792725, 0.407928292, 0.417929431, 0.427930472, 0.437931625, 0.447932653, 0.457933819, 0.467934819, 0.477935972, 0.487937, 0.497938139, 0.507939208, 0.517940319, 0.527941417, 0.537942486, 0.547943542, 0.557944667, 0.567945708, 0.577946847, 0.587947903, 0.597949042, 0.607950097, 0.617951194, 0.62795225, 0.637953375, 0.647954444, 0.657955583, 0.667956597, 0.677957736, 0.687958778, 0.697959931, 0.707960972, 0.717962083, 0.727963139, 0.737964264, 0.747965319, 0.757966444, 0.767967486, 0.777968625, 0.787969681, 0.797970806, 0.807971847, 0.817973, 0.827974028, 0.837975153, 0.847976222, 0.857977347, 0.867978417, 0.877979528, 0.887980556, 0.897981694, 0.90798275, 0.917983903, 0.927984917, 0.937986042, 0.947987097, 0.957988222, 0.967989264, 0.977990417, 0.987991444, 0.997992583, 1.007993625, 1.017994764, 1.027995806, 1.037996931] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:44.320" endtime="20201110 08:39:44.323"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.307" endtime="20201110 08:39:44.324"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.331" endtime="20201110 08:39:44.333"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:44.339" endtime="20201110 08:39:44.361"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.335" endtime="20201110 08:39:44.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.326" endtime="20201110 08:39:44.364"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:41.619" endtime="20201110 08:39:44.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.073" endtime="20201110 08:39:44.365"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:36.071" endtime="20201110 08:39:44.366"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:44.371" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:44.392" endtime="20201110 08:39:46.498"></status>
</kw>
<msg timestamp="20201110 08:39:46.500" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20381183, 'start-iter': 1, 'wakeups': [20391208, 20401206, 20411205, 2...</msg>
<status status="PASS" starttime="20201110 08:39:44.389" endtime="20201110 08:39:46.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.507" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 20381183, 'start-iter': 1, 'wakeups': [20391208, 20401206, 20411205, 2...</msg>
<status status="PASS" starttime="20201110 08:39:46.502" endtime="20201110 08:39:46.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.509" endtime="20201110 08:39:46.513"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.381" endtime="20201110 08:39:46.515"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.376" endtime="20201110 08:39:46.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:46.523" level="INFO">${RESULT} = {'wakeups': [20391208, 20401206, 20411205, 20421206, 20431205, 20441206, 20451205, 20461206, 20471205, 20481206, 20491205, 20501206, 20511205, 20521206, 20531205, 20541206, 20551205, 20561206, 2057120...</msg>
<status status="PASS" starttime="20201110 08:39:46.518" endtime="20201110 08:39:46.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.533" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:46.531" endtime="20201110 08:39:46.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.537" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:46.535" endtime="20201110 08:39:46.538"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.525" endtime="20201110 08:39:46.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.550" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:46.548" endtime="20201110 08:39:46.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.556" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:46.552" endtime="20201110 08:39:46.557"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.541" endtime="20201110 08:39:46.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.573" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:46.570" endtime="20201110 08:39:46.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.579" level="INFO">VALUE: 20381183</msg>
<status status="PASS" starttime="20201110 08:39:46.576" endtime="20201110 08:39:46.580"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.563" endtime="20201110 08:39:46.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.594" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:46.591" endtime="20201110 08:39:46.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.600" level="INFO">VALUE: [20391208, 20401206, 20411205, 20421206, 20431205, 20441206, 20451205, 20461206, 20471205, 20481206, 20491205, 20501206, 20511205, 20521206, 20531205, 20541206, 20551205, 20561206, 20571205, 20581206, 20591205, 20601206, 20611205, 20621206, 20631205, 20641206, 20651205, 20661206, 20671205, 20681206, 20691205, 20701206, 20711205, 20721206, 20731205, 20741206, 20751205, 20761206, 20771205, 20781206, 20791205, 20801206, 20811205, 20821206, 20831205, 20841206, 20851205, 20861206, 20871205, 20881206, 20891205, 20901206, 20911205, 20921206, 20931205, 20941206, 20951205, 20961206, 20971205, 20981206, 20991205, 21001206, 21011205, 21021206, 21031205, 21041206, 21051205, 21061206, 21071205, 21081206, 21091205, 21101206, 21111205, 21121206, 21131205, 21141206, 21151205, 21161206, 21171205, 21181206, 21191205, 21201206, 21211205, 21221206, 21231205, 21241206, 21251205, 21261206, 21271205, 21281206, 21291205, 21301206, 21311205, 21321206, 21331205, 21341206, 21351205, 21361206, 21371205, 21381206]</msg>
<status status="PASS" starttime="20201110 08:39:46.597" endtime="20201110 08:39:46.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.583" endtime="20201110 08:39:46.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.621" endtime="20201110 08:39:46.965"></status>
</kw>
<msg timestamp="20201110 08:39:46.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045958292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05598475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:46.618" endtime="20201110 08:39:46.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:46.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045958292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.05598475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201110 08:39:46.973" endtime="20201110 08:39:46.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:46.990" endtime="20201110 08:39:46.994"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.610" endtime="20201110 08:39:46.996"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:46.605" endtime="20201110 08:39:46.997"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:47.054" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:46.999" endtime="20201110 08:39:47.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.065" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:47.063" endtime="20201110 08:39:47.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.070" level="INFO">VALUE: 0.045958292</msg>
<status status="PASS" starttime="20201110 08:39:47.068" endtime="20201110 08:39:47.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.056" endtime="20201110 08:39:47.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.083" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:47.081" endtime="20201110 08:39:47.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:47.088" level="INFO">VALUE: [0.05598475, 0.065984819, 0.075984861, 0.085987, 0.095987042, 0.105989153, 0.115989194, 0.125991333, 0.135991375, 0.1459935, 0.155993542, 0.165995694, 0.175995722, 0.185997875, 0.195997889, 0.206000042, 0.216000069, 0.226002194, 0.23600225, 0.246004389, 0.256004431, 0.266006569, 0.276006597, 0.286008722, 0.296008764, 0.306010917, 0.316010958, 0.326013083, 0.336013125, 0.34601525, 0.356015306, 0.366017444, 0.376017528, 0.386019611, 0.396019653, 0.406021778, 0.416021847, 0.426023958, 0.436024, 0.446026153, 0.456026181, 0.466028306, 0.476028375, 0.486030486, 0.496030542, 0.506032667, 0.516032708, 0.526034847, 0.536034958, 0.546037097, 0.556037097, 0.566039194, 0.576039236, 0.586041389, 0.596041417, 0.606043542, 0.616043597, 0.626045722, 0.636045819, 0.646047917, 0.656047944, 0.666050069, 0.676050153, 0.68605225, 0.696052306, 0.706054431, 0.7160545, 0.726056653, 0.736056667, 0.746058778, 0.756058833, 0.766060958, 0.776061, 0.786063139, 0.796063181, 0.806065319, 0.816065417, 0.826067486, 0.836067528, 0.846069681, 0.856069722, 0.866071847, 0.876071889, 0.886074028, 0.896074056, 0.906076194, 0.91607625, 0.926078361, 0.936078458, 0.946080542, 0.956080597, 0.966082722, 0.976082778, 0.986084903, 0.996085, 1.006087083, 1.016087125, 1.026089319, 1.036089306, 1.046091417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:47.085" endtime="20201110 08:39:47.089"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.073" endtime="20201110 08:39:47.090"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.097" endtime="20201110 08:39:47.099"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:47.105" endtime="20201110 08:39:47.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.101" endtime="20201110 08:39:47.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.092" endtime="20201110 08:39:47.130"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.372" endtime="20201110 08:39:47.131"></status>
</kw>
<msg timestamp="20201110 08:39:47.131" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:47.152" endtime="20201110 08:39:49.258"></status>
</kw>
<msg timestamp="20201110 08:39:49.259" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23139618, 'start-iter': 1, 'wakeups': [23149643, 23159641, 23169640, 2...</msg>
<status status="PASS" starttime="20201110 08:39:47.149" endtime="20201110 08:39:49.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.266" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 23139618, 'start-iter': 1, 'wakeups': [23149643, 23159641, 23169640, 2...</msg>
<status status="PASS" starttime="20201110 08:39:49.261" endtime="20201110 08:39:49.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.268" endtime="20201110 08:39:49.272"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.142" endtime="20201110 08:39:49.274"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.136" endtime="20201110 08:39:49.275"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:49.281" level="INFO">${RESULT} = {'wakeups': [23149643, 23159641, 23169640, 23179641, 23189640, 23199641, 23209640, 23219641, 23229640, 23239641, 23249640, 23259641, 23269640, 23279641, 23289640, 23299641, 23309640, 23319641, 2332964...</msg>
<status status="PASS" starttime="20201110 08:39:49.277" endtime="20201110 08:39:49.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.292" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:49.289" endtime="20201110 08:39:49.292"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.296" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:49.294" endtime="20201110 08:39:49.297"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.283" endtime="20201110 08:39:49.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.313" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:49.311" endtime="20201110 08:39:49.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.318" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:49.315" endtime="20201110 08:39:49.320"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.302" endtime="20201110 08:39:49.322"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.332" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:49.330" endtime="20201110 08:39:49.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.337" level="INFO">VALUE: 23139618</msg>
<status status="PASS" starttime="20201110 08:39:49.334" endtime="20201110 08:39:49.337"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.323" endtime="20201110 08:39:49.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.349" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:49.347" endtime="20201110 08:39:49.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.354" level="INFO">VALUE: [23149643, 23159641, 23169640, 23179641, 23189640, 23199641, 23209640, 23219641, 23229640, 23239641, 23249640, 23259641, 23269640, 23279641, 23289640, 23299641, 23309640, 23319641, 23329640, 23339641, 23349640, 23359641, 23369640, 23379641, 23389640, 23399641, 23409640, 23419641, 23429640, 23439641, 23449640, 23459641, 23469640, 23479641, 23489640, 23499641, 23509640, 23519641, 23529640, 23539641, 23549640, 23559641, 23569640, 23579641, 23589640, 23599641, 23609640, 23619641, 23629640, 23639641, 23649640, 23659641, 23669640, 23679641, 23689640, 23699641, 23709640, 23719641, 23729640, 23739641, 23749640, 23759641, 23769640, 23779641, 23789640, 23799641, 23809640, 23819641, 23829640, 23839641, 23849640, 23859641, 23869640, 23879641, 23889640, 23899641, 23909640, 23919641, 23929640, 23939641, 23949640, 23959641, 23969640, 23979641, 23989640, 23999641, 24009640, 24019641, 24029640, 24039641, 24049640, 24059641, 24069640, 24079641, 24089640, 24099641, 24109640, 24119641, 24129640, 24139641]</msg>
<status status="PASS" starttime="20201110 08:39:49.351" endtime="20201110 08:39:49.355"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.340" endtime="20201110 08:39:49.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.373" endtime="20201110 08:39:49.673"></status>
</kw>
<msg timestamp="20201110 08:39:49.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048643625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.370" endtime="20201110 08:39:49.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038617514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048643625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:49.682" endtime="20201110 08:39:49.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.699" endtime="20201110 08:39:49.703"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.362" endtime="20201110 08:39:49.705"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.358" endtime="20201110 08:39:49.706"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:49.760" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:49.708" endtime="20201110 08:39:49.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.770" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:49.768" endtime="20201110 08:39:49.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.775" level="INFO">VALUE: 0.038617514</msg>
<status status="PASS" starttime="20201110 08:39:49.773" endtime="20201110 08:39:49.777"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.762" endtime="20201110 08:39:49.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.790" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:49.787" endtime="20201110 08:39:49.791"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:49.795" level="INFO">VALUE: [0.048643625, 0.058643694, 0.068643736, 0.078645917, 0.088645931, 0.098648056, 0.108648097, 0.118650208, 0.128650264, 0.138652403, 0.148652444, 0.158654556, 0.168654597, 0.178656736, 0.188656792, 0.198658903, 0.208658958, 0.218661069, 0.228661125, 0.23866325, 0.248663292, 0.258665417, 0.268665458, 0.278667611, 0.288667653, 0.298669778, 0.308669819, 0.318671944, 0.328672, 0.338674111, 0.348674208, 0.358676361, 0.368676333, 0.378678458, 0.3886785, 0.398680653, 0.408680681, 0.418682806, 0.428682861, 0.438684986, 0.448685028, 0.458687167, 0.468687236, 0.478689347, 0.488689375, 0.4986915, 0.508691542, 0.518693736, 0.528693736, 0.538695847, 0.548695903, 0.558698028, 0.568698083, 0.578700194, 0.588700236, 0.598702444, 0.608702417, 0.618704542, 0.628704583, 0.638706736, 0.648706764, 0.658708889, 0.668708931, 0.678711069, 0.688711111, 0.69871325, 0.708713292, 0.718715417, 0.728715458, 0.738717611, 0.748717625, 0.758719764, 0.768719806, 0.778721931, 0.788721986, 0.798724125, 0.808724153, 0.818726278, 0.828726319, 0.838728458, 0.848728514, 0.858730625, 0.868730681, 0.878732819, 0.888732847, 0.898734986, 0.908735042, 0.918737153, 0.928737194, 0.938739333, 0.948739375, 0.9587415, 0.968741556, 0.978743708, 0.988743722, 0.998745847, 1.008745889, 1.018748042, 1.028748083, 1.038750194] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:49.793" endtime="20201110 08:39:49.796"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.780" endtime="20201110 08:39:49.798"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.804" endtime="20201110 08:39:49.807"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:49.812" endtime="20201110 08:39:49.834"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.808" endtime="20201110 08:39:49.835"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.799" endtime="20201110 08:39:49.837"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:47.132" endtime="20201110 08:39:49.838"></status>
</kw>
<msg timestamp="20201110 08:39:49.838" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 3 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:49.859" endtime="20201110 08:39:51.965"></status>
</kw>
<msg timestamp="20201110 08:39:51.966" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 25846313, 'start-iter': 1, 'wakeups': [25856339, 25866336, 25876335, 2...</msg>
<status status="PASS" starttime="20201110 08:39:49.856" endtime="20201110 08:39:51.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.973" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 3\r\n'], 'data': [{'timer-count': '3'}, {'timer-interval': '10000'}, {'start-time': 25846313, 'start-iter': 1, 'wakeups': [25856339, 25866336, 25876335, 2...</msg>
<status status="PASS" starttime="20201110 08:39:51.968" endtime="20201110 08:39:51.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:51.975" endtime="20201110 08:39:51.979"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.849" endtime="20201110 08:39:51.981"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.843" endtime="20201110 08:39:51.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:51.988" level="INFO">${RESULT} = {'wakeups': [25856339, 25866336, 25876335, 25886336, 25896335, 25906336, 25916335, 25926336, 25936335, 25946336, 25956335, 25966336, 25976335, 25986336, 25996335, 26006336, 26016335, 26026336, 2603633...</msg>
<status status="PASS" starttime="20201110 08:39:51.984" endtime="20201110 08:39:51.989"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:51.998" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:51.996" endtime="20201110 08:39:51.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.003" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:52.001" endtime="20201110 08:39:52.004"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:51.990" endtime="20201110 08:39:52.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.016" level="INFO">NAME: 3-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:52.013" endtime="20201110 08:39:52.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.020" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:52.018" endtime="20201110 08:39:52.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.007" endtime="20201110 08:39:52.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.037" level="INFO">NAME: dut-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:52.030" endtime="20201110 08:39:52.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.041" level="INFO">VALUE: 25846313</msg>
<status status="PASS" starttime="20201110 08:39:52.039" endtime="20201110 08:39:52.042"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.024" endtime="20201110 08:39:52.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.054" level="INFO">NAME: dut-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:52.052" endtime="20201110 08:39:52.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.059" level="INFO">VALUE: [25856339, 25866336, 25876335, 25886336, 25896335, 25906336, 25916335, 25926336, 25936335, 25946336, 25956335, 25966336, 25976335, 25986336, 25996335, 26006336, 26016335, 26026336, 26036335, 26046336, 26056335, 26066336, 26076335, 26086336, 26096335, 26106336, 26116335, 26126336, 26136335, 26146336, 26156335, 26166336, 26176335, 26186336, 26196335, 26206336, 26216335, 26226336, 26236335, 26246336, 26256335, 26266336, 26276335, 26286336, 26296335, 26306336, 26316335, 26326336, 26336335, 26346336, 26356335, 26366336, 26376335, 26386336, 26396335, 26406336, 26416335, 26426336, 26436335, 26446336, 26456335, 26466336, 26476335, 26486336, 26496335, 26506336, 26516335, 26526336, 26536335, 26546336, 26556335, 26566336, 26576335, 26586336, 26596335, 26606336, 26616335, 26626336, 26636335, 26646336, 26656335, 26666336, 26676335, 26686336, 26696335, 26706336, 26716335, 26726336, 26736335, 26746336, 26756335, 26766336, 26776335, 26786336, 26796335, 26806336, 26816335, 26826336, 26836335, 26846336]</msg>
<status status="PASS" starttime="20201110 08:39:52.057" endtime="20201110 08:39:52.060"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.045" endtime="20201110 08:39:52.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.080" endtime="20201110 08:39:52.423"></status>
</kw>
<msg timestamp="20201110 08:39:52.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038098611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048125417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:52.076" endtime="20201110 08:39:52.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038098611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048125417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:52.432" endtime="20201110 08:39:52.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.449" endtime="20201110 08:39:52.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.067" endtime="20201110 08:39:52.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.063" endtime="20201110 08:39:52.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:52.509" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:52.458" endtime="20201110 08:39:52.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.520" level="INFO">NAME: hil-3-start-time</msg>
<status status="PASS" starttime="20201110 08:39:52.518" endtime="20201110 08:39:52.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.524" level="INFO">VALUE: 0.038098611</msg>
<status status="PASS" starttime="20201110 08:39:52.522" endtime="20201110 08:39:52.525"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.511" endtime="20201110 08:39:52.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.538" level="INFO">NAME: hil-3-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:52.535" endtime="20201110 08:39:52.538"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:52.542" level="INFO">VALUE: [0.048125417, 0.058124472, 0.068124514, 0.078126653, 0.088126681, 0.098128806, 0.108128847, 0.118131, 0.128131042, 0.138133167, 0.148133194, 0.158135319, 0.168135361, 0.178137486, 0.188137528, 0.198139653, 0.208139708, 0.218141833, 0.228141875, 0.238144, 0.248144056, 0.258146181, 0.268146208, 0.278148361, 0.288148389, 0.298150569, 0.308150556, 0.318152694, 0.328152722, 0.338154861, 0.348154903, 0.358157042, 0.368157083, 0.378159194, 0.38815925, 0.398161375, 0.408161417, 0.418163542, 0.428163583, 0.438165722, 0.448165764, 0.458167889, 0.468167931, 0.478170069, 0.488170097, 0.498172236, 0.508172306, 0.518174403, 0.528174444, 0.538176583, 0.548176625, 0.55817875, 0.568178833, 0.578180931, 0.588181014, 0.598183111, 0.608183139, 0.618185278, 0.628185347, 0.638187444, 0.648187458, 0.658189583, 0.668189639, 0.67819175, 0.688191792, 0.698193944, 0.708193958, 0.718196069, 0.728196125, 0.73819825, 0.748198278, 0.758200403, 0.768200458, 0.778202597, 0.788202597, 0.798204722, 0.808204764, 0.818206903, 0.828206931, 0.838209069, 0.848209097, 0.858211278, 0.868211278, 0.878213389, 0.888213417, 0.898215542, 0.908215597, 0.918217708, 0.92821775, 0.938219875, 0.948219917, 0.958222056, 0.968222139, 0.978224208, 0.98822425, 0.998226375, 1.008226417, 1.018228542, 1.028228583, 1.038230708] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:52.540" endtime="20201110 08:39:52.544"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.528" endtime="20201110 08:39:52.545"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.552" endtime="20201110 08:39:52.555"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:52.560" endtime="20201110 08:39:52.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.556" endtime="20201110 08:39:52.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.547" endtime="20201110 08:39:52.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:49.839" endtime="20201110 08:39:52.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.368" endtime="20201110 08:39:52.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:44.366" endtime="20201110 08:39:52.587"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:39:52.592" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:52.616" endtime="20201110 08:39:54.721"></status>
</kw>
<msg timestamp="20201110 08:39:54.723" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28603622, 'start-iter': 1, 'wakeups': [28613655, 28623653, 28633654, 2...</msg>
<status status="PASS" starttime="20201110 08:39:52.613" endtime="20201110 08:39:54.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 28603622, 'start-iter': 1, 'wakeups': [28613655, 28623653, 28633654, 2...</msg>
<status status="PASS" starttime="20201110 08:39:54.725" endtime="20201110 08:39:54.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:54.732" endtime="20201110 08:39:54.736"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.603" endtime="20201110 08:39:54.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.597" endtime="20201110 08:39:54.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:54.745" level="INFO">${RESULT} = {'wakeups': [28613655, 28623653, 28633654, 28643654, 28653654, 28663654, 28673654, 28683654, 28693654, 28703654, 28713654, 28723654, 28733654, 28743654, 28753654, 28763654, 28773654, 28783654, 2879365...</msg>
<status status="PASS" starttime="20201110 08:39:54.741" endtime="20201110 08:39:54.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.756" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:54.753" endtime="20201110 08:39:54.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.760" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:54.758" endtime="20201110 08:39:54.761"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.747" endtime="20201110 08:39:54.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.772" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:54.770" endtime="20201110 08:39:54.773"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.777" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:54.775" endtime="20201110 08:39:54.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.764" endtime="20201110 08:39:54.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.789" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:54.787" endtime="20201110 08:39:54.790"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.794" level="INFO">VALUE: 28603622</msg>
<status status="PASS" starttime="20201110 08:39:54.792" endtime="20201110 08:39:54.794"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.780" endtime="20201110 08:39:54.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.806" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:54.804" endtime="20201110 08:39:54.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:54.810" level="INFO">VALUE: [28613655, 28623653, 28633654, 28643654, 28653654, 28663654, 28673654, 28683654, 28693654, 28703654, 28713654, 28723654, 28733654, 28743654, 28753654, 28763654, 28773654, 28783654, 28793654, 28803654, 28813654, 28823654, 28833654, 28843654, 28853654, 28863654, 28873654, 28883654, 28893654, 28903654, 28913654, 28923654, 28933654, 28943654, 28953654, 28963654, 28973654, 28983654, 28993654, 29003654, 29013654, 29023654, 29033654, 29043654, 29053654, 29063654, 29073654, 29083654, 29093654, 29103654, 29113654, 29123654, 29133654, 29143654, 29153654, 29163654, 29173654, 29183654, 29193654, 29203654, 29213654, 29223654, 29233654, 29243654, 29253654, 29263654, 29273654, 29283654, 29293654, 29303654, 29313654, 29323654, 29333654, 29343654, 29353654, 29363654, 29373654, 29383654, 29393654, 29403654, 29413654, 29423654, 29433654, 29443654, 29453654, 29463654, 29473654, 29483654, 29493654, 29503654, 29513654, 29523654, 29533654, 29543654, 29553654, 29563654, 29573654, 29583654, 29593654, 29603654]</msg>
<status status="PASS" starttime="20201110 08:39:54.808" endtime="20201110 08:39:54.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.797" endtime="20201110 08:39:54.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:54.819" endtime="20201110 08:39:55.125"></status>
</kw>
<msg timestamp="20201110 08:39:55.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047515153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:54.817" endtime="20201110 08:39:55.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047515153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057549444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:55.144" endtime="20201110 08:39:55.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.172" endtime="20201110 08:39:55.176"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.814" endtime="20201110 08:39:55.178"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:54.812" endtime="20201110 08:39:55.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:55.235" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:55.181" endtime="20201110 08:39:55.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.245" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:55.243" endtime="20201110 08:39:55.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.250" level="INFO">VALUE: 0.047515153</msg>
<status status="PASS" starttime="20201110 08:39:55.248" endtime="20201110 08:39:55.250"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.236" endtime="20201110 08:39:55.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.263" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:55.261" endtime="20201110 08:39:55.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:55.268" level="INFO">VALUE: [0.057549444, 0.067549097, 0.077551125, 0.087552278, 0.097553319, 0.107554458, 0.117555472, 0.127556597, 0.137557639, 0.147558792, 0.157559806, 0.167560986, 0.177561972, 0.187563167, 0.197564139, 0.207565264, 0.217566306, 0.227567431, 0.237568472, 0.247569597, 0.257570639, 0.267571764, 0.277572806, 0.287573944, 0.297575042, 0.307576153, 0.317577167, 0.327578278, 0.337579319, 0.347580444, 0.357581486, 0.367582611, 0.377583653, 0.387584778, 0.397585819, 0.407586944, 0.417588, 0.427589194, 0.437590153, 0.447591292, 0.457592333, 0.467593472, 0.477594528, 0.487595708, 0.497596667, 0.507597792, 0.517598833, 0.527599972, 0.537601014, 0.547602125, 0.557603181, 0.567604319, 0.577605403, 0.587606472, 0.597607514, 0.607608667, 0.617609681, 0.627610819, 0.637611861, 0.647612986, 0.657614014, 0.667615139, 0.677616194, 0.687617319, 0.697618361, 0.707619486, 0.717620528, 0.727621653, 0.737622708, 0.747623819, 0.757624861, 0.767625986, 0.777627042, 0.787628181, 0.797629194, 0.807630333, 0.817631375, 0.8276325, 0.837633542, 0.847634667, 0.857635722, 0.867636847, 0.877637875, 0.887639014, 0.897640083, 0.907641167, 0.917642208, 0.927643361, 0.937644403, 0.947645514, 0.957646556, 0.967647722, 0.977648778, 0.987649903, 0.997650889, 1.007652014, 1.017653056, 1.027654208, 1.03765525, 1.047656403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:55.265" endtime="20201110 08:39:55.269"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.253" endtime="20201110 08:39:55.270"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.277" endtime="20201110 08:39:55.279"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:55.285" endtime="20201110 08:39:55.307"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.281" endtime="20201110 08:39:55.308"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.272" endtime="20201110 08:39:55.310"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.594" endtime="20201110 08:39:55.311"></status>
</kw>
<msg timestamp="20201110 08:39:55.312" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:55.335" endtime="20201110 08:39:57.441"></status>
</kw>
<msg timestamp="20201110 08:39:57.442" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31322182, 'start-iter': 1, 'wakeups': [31332215, 31342213, 31352214, 3...</msg>
<status status="PASS" starttime="20201110 08:39:55.331" endtime="20201110 08:39:57.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.449" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 31322182, 'start-iter': 1, 'wakeups': [31332215, 31342213, 31352214, 3...</msg>
<status status="PASS" starttime="20201110 08:39:57.445" endtime="20201110 08:39:57.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.451" endtime="20201110 08:39:57.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.322" endtime="20201110 08:39:57.457"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.317" endtime="20201110 08:39:57.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.465" level="INFO">${RESULT} = {'wakeups': [31332215, 31342213, 31352214, 31362214, 31372214, 31382214, 31392214, 31402214, 31412214, 31422214, 31432214, 31442214, 31452214, 31462214, 31472214, 31482214, 31492214, 31502214, 3151221...</msg>
<status status="PASS" starttime="20201110 08:39:57.460" endtime="20201110 08:39:57.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.475" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:39:57.472" endtime="20201110 08:39:57.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.479" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:39:57.477" endtime="20201110 08:39:57.480"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.466" endtime="20201110 08:39:57.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.491" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:39:57.489" endtime="20201110 08:39:57.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.496" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:39:57.494" endtime="20201110 08:39:57.497"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.483" endtime="20201110 08:39:57.498"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.510" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.508" endtime="20201110 08:39:57.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.515" level="INFO">VALUE: 31322182</msg>
<status status="PASS" starttime="20201110 08:39:57.513" endtime="20201110 08:39:57.516"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.500" endtime="20201110 08:39:57.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.527" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:57.525" endtime="20201110 08:39:57.528"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.532" level="INFO">VALUE: [31332215, 31342213, 31352214, 31362214, 31372214, 31382214, 31392214, 31402214, 31412214, 31422214, 31432214, 31442214, 31452214, 31462214, 31472214, 31482214, 31492214, 31502214, 31512214, 31522214, 31532214, 31542214, 31552214, 31562214, 31572214, 31582214, 31592214, 31602214, 31612214, 31622214, 31632214, 31642214, 31652214, 31662214, 31672214, 31682214, 31692214, 31702214, 31712214, 31722214, 31732214, 31742214, 31752214, 31762214, 31772214, 31782214, 31792214, 31802214, 31812214, 31822214, 31832214, 31842214, 31852214, 31862214, 31872214, 31882214, 31892214, 31902214, 31912214, 31922214, 31932214, 31942214, 31952214, 31962214, 31972214, 31982214, 31992214, 32002214, 32012214, 32022214, 32032214, 32042214, 32052214, 32062214, 32072214, 32082214, 32092214, 32102214, 32112214, 32122214, 32132214, 32142214, 32152214, 32162214, 32172214, 32182214, 32192214, 32202214, 32212214, 32222214, 32232214, 32242214, 32252214, 32262214, 32272214, 32282214, 32292214, 32302214, 32312214, 32322214]</msg>
<status status="PASS" starttime="20201110 08:39:57.529" endtime="20201110 08:39:57.533"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.518" endtime="20201110 08:39:57.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.555" endtime="20201110 08:39:57.896"></status>
</kw>
<msg timestamp="20201110 08:39:57.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041251847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051286139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.552" endtime="20201110 08:39:57.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041251847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.051286139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:39:57.904" endtime="20201110 08:39:57.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:57.921" endtime="20201110 08:39:57.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.545" endtime="20201110 08:39:57.927"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.536" endtime="20201110 08:39:57.928"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:39:57.982" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:39:57.930" endtime="20201110 08:39:57.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.992" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:39:57.990" endtime="20201110 08:39:57.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:57.997" level="INFO">VALUE: 0.041251847</msg>
<status status="PASS" starttime="20201110 08:39:57.995" endtime="20201110 08:39:57.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:57.983" endtime="20201110 08:39:57.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:39:58.010" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:39:58.008" endtime="20201110 08:39:58.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:39:58.016" level="INFO">VALUE: [0.051286139, 0.061285806, 0.071287847, 0.081288972, 0.091290056, 0.101291167, 0.111292208, 0.121293333, 0.131294375, 0.141295528, 0.151296556, 0.161297681, 0.171298736, 0.181299861, 0.191300931, 0.201302042, 0.211303097, 0.221304222, 0.231305264, 0.241306403, 0.251307458, 0.261308569, 0.271309625, 0.281310819, 0.291311806, 0.301312972, 0.311313972, 0.321315125, 0.331316153, 0.341317306, 0.351318333, 0.361319472, 0.371320514, 0.381321653, 0.391322694, 0.401323819, 0.411324875, 0.421326, 0.431327056, 0.441328194, 0.451329236, 0.461330361, 0.471331417, 0.481332542, 0.491333583, 0.501334722, 0.511335764, 0.521336917, 0.531337944, 0.541339097, 0.551340125, 0.561341264, 0.571342319, 0.581343431, 0.5913445, 0.601345611, 0.611346681, 0.621347792, 0.631348847, 0.641349986, 0.651351028, 0.661352194, 0.671353194, 0.681354347, 0.691355389, 0.701356528, 0.711357556, 0.721358708, 0.73135975, 0.741360889, 0.751361917, 0.761363056, 0.771364153, 0.781365236, 0.791366292, 0.801367417, 0.811368458, 0.821369583, 0.831370639, 0.841371778, 0.851372806, 0.861373972, 0.871375, 0.881376125, 0.891377208, 0.901378306, 0.911379347, 0.9213805, 0.931381542, 0.941382667, 0.951383764, 0.961384833, 0.971385889, 0.981387069, 0.991388069, 1.001389194, 1.011390264, 1.021391375, 1.031392431, 1.041393556] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:39:58.013" endtime="20201110 08:39:58.017"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.000" endtime="20201110 08:39:58.019"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:58.025" endtime="20201110 08:39:58.028"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:39:58.034" endtime="20201110 08:39:58.055"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.029" endtime="20201110 08:39:58.057"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.021" endtime="20201110 08:39:58.058"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:55.313" endtime="20201110 08:39:58.058"></status>
</kw>
<msg timestamp="20201110 08:39:58.059" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 4 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:39:58.068" endtime="20201110 08:40:00.171"></status>
</kw>
<msg timestamp="20201110 08:40:00.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34053863, 'start-iter': 1, 'wakeups': [34063897, 34073894, 34083895, 3...</msg>
<status status="PASS" starttime="20201110 08:39:58.067" endtime="20201110 08:40:00.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.181" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 4\r\n'], 'data': [{'timer-count': '4'}, {'timer-interval': '10000'}, {'start-time': 34053863, 'start-iter': 1, 'wakeups': [34063897, 34073894, 34083895, 3...</msg>
<status status="PASS" starttime="20201110 08:40:00.176" endtime="20201110 08:40:00.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.183" endtime="20201110 08:40:00.187"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.063" endtime="20201110 08:40:00.188"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.061" endtime="20201110 08:40:00.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.196" level="INFO">${RESULT} = {'wakeups': [34063897, 34073894, 34083895, 34093895, 34103895, 34113895, 34123895, 34133895, 34143895, 34153895, 34163895, 34173895, 34183895, 34193895, 34203895, 34213895, 34223895, 34233895, 3424389...</msg>
<status status="PASS" starttime="20201110 08:40:00.191" endtime="20201110 08:40:00.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.206" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:00.204" endtime="20201110 08:40:00.207"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.210" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:00.208" endtime="20201110 08:40:00.211"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.198" endtime="20201110 08:40:00.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.223" level="INFO">NAME: 4-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:00.221" endtime="20201110 08:40:00.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.227" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:00.225" endtime="20201110 08:40:00.228"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.214" endtime="20201110 08:40:00.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.240" level="INFO">NAME: dut-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.238" endtime="20201110 08:40:00.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.244" level="INFO">VALUE: 34053863</msg>
<status status="PASS" starttime="20201110 08:40:00.242" endtime="20201110 08:40:00.245"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.231" endtime="20201110 08:40:00.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.257" level="INFO">NAME: dut-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.254" endtime="20201110 08:40:00.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.261" level="INFO">VALUE: [34063897, 34073894, 34083895, 34093895, 34103895, 34113895, 34123895, 34133895, 34143895, 34153895, 34163895, 34173895, 34183895, 34193895, 34203895, 34213895, 34223895, 34233895, 34243895, 34253895, 34263895, 34273895, 34283895, 34293895, 34303895, 34313895, 34323895, 34333895, 34343895, 34353895, 34363895, 34373895, 34383895, 34393895, 34403895, 34413895, 34423895, 34433895, 34443895, 34453895, 34463895, 34473895, 34483895, 34493895, 34503895, 34513895, 34523895, 34533895, 34543895, 34553895, 34563895, 34573895, 34583895, 34593895, 34603895, 34613895, 34623895, 34633895, 34643895, 34653895, 34663895, 34673895, 34683895, 34693895, 34703895, 34713895, 34723895, 34733895, 34743895, 34753895, 34763895, 34773895, 34783895, 34793895, 34803895, 34813895, 34823895, 34833895, 34843895, 34853895, 34863895, 34873895, 34883895, 34893895, 34903895, 34913895, 34923895, 34933895, 34943895, 34953895, 34963895, 34973895, 34983895, 34993895, 35003895, 35013895, 35023895, 35033895, 35043895, 35053895]</msg>
<status status="PASS" starttime="20201110 08:40:00.259" endtime="20201110 08:40:00.262"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.248" endtime="20201110 08:40:00.264"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.283" endtime="20201110 08:40:00.626"></status>
</kw>
<msg timestamp="20201110 08:40:00.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034371944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.277" endtime="20201110 08:40:00.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024337056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034371944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:00.634" endtime="20201110 08:40:00.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.652" endtime="20201110 08:40:00.656"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.270" endtime="20201110 08:40:00.657"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.265" endtime="20201110 08:40:00.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:00.724" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:00.660" endtime="20201110 08:40:00.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.740" level="INFO">NAME: hil-4-start-time</msg>
<status status="PASS" starttime="20201110 08:40:00.735" endtime="20201110 08:40:00.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.745" level="INFO">VALUE: 0.024337056</msg>
<status status="PASS" starttime="20201110 08:40:00.742" endtime="20201110 08:40:00.746"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.727" endtime="20201110 08:40:00.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.759" level="INFO">NAME: hil-4-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:00.757" endtime="20201110 08:40:00.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:00.764" level="INFO">VALUE: [0.034371944, 0.044370611, 0.054372653, 0.064373764, 0.074374819, 0.084375944, 0.094376986, 0.104378139, 0.114379167, 0.124380306, 0.134381333, 0.144382458, 0.154383514, 0.164384639, 0.174385681, 0.184386861, 0.194387861, 0.204389028, 0.214390028, 0.224391167, 0.23439225, 0.244393333, 0.254394403, 0.264395514, 0.274396556, 0.284397694, 0.294398792, 0.304399861, 0.314400903, 0.324402042, 0.334403069, 0.344404194, 0.354405236, 0.364406375, 0.374407417, 0.384408542, 0.394409597, 0.404410708, 0.41441175, 0.424412875, 0.434413917, 0.444415056, 0.454416083, 0.464417208, 0.47441825, 0.484419375, 0.494420431, 0.504421556, 0.514422597, 0.524423736, 0.534424819, 0.544425889, 0.554426931, 0.564428056, 0.574429097, 0.584430236, 0.594431333, 0.604432403, 0.6144335, 0.624434569, 0.634435625, 0.644436736, 0.654437792, 0.664438917, 0.674439958, 0.684441083, 0.694442125, 0.704443264, 0.714444292, 0.724445431, 0.734446472, 0.744447611, 0.754448653, 0.764449764, 0.774450819, 0.784451944, 0.794453, 0.804454139, 0.814455167, 0.824456278, 0.834457347, 0.844458458, 0.8544595, 0.864460625, 0.874461667, 0.884462792, 0.894463833, 0.904464958, 0.914466, 0.924467139, 0.934468181, 0.944469306, 0.954470347, 0.964471472, 0.974472542, 0.984473653, 0.994474708, 1.004475833, 1.014476875, 1.024477986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:00.762" endtime="20201110 08:40:00.765"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.749" endtime="20201110 08:40:00.767"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.773" endtime="20201110 08:40:00.776"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:00.782" endtime="20201110 08:40:00.803"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.777" endtime="20201110 08:40:00.805"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.768" endtime="20201110 08:40:00.808"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:58.059" endtime="20201110 08:40:00.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.589" endtime="20201110 08:40:00.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:52.588" endtime="20201110 08:40:00.810"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:00.815" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:00.838" endtime="20201110 08:40:02.944"></status>
</kw>
<msg timestamp="20201110 08:40:02.945" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36825550, 'start-iter': 1, 'wakeups': [36835592, 36845591, 36855591, 3...</msg>
<status status="PASS" starttime="20201110 08:40:00.833" endtime="20201110 08:40:02.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.952" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 36825550, 'start-iter': 1, 'wakeups': [36835592, 36845591, 36855591, 3...</msg>
<status status="PASS" starttime="20201110 08:40:02.947" endtime="20201110 08:40:02.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:02.954" endtime="20201110 08:40:02.966"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.826" endtime="20201110 08:40:02.967"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.821" endtime="20201110 08:40:02.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:02.975" level="INFO">${RESULT} = {'wakeups': [36835592, 36845591, 36855591, 36865592, 36875591, 36885592, 36895591, 36905592, 36915591, 36925592, 36935591, 36945592, 36955591, 36965592, 36975591, 36985592, 36995591, 37005592, 3701559...</msg>
<status status="PASS" starttime="20201110 08:40:02.970" endtime="20201110 08:40:02.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.986" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:02.983" endtime="20201110 08:40:02.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:02.990" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:02.988" endtime="20201110 08:40:02.991"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.977" endtime="20201110 08:40:02.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.003" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:03.001" endtime="20201110 08:40:03.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.009" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:03.007" endtime="20201110 08:40:03.010"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:02.994" endtime="20201110 08:40:03.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.021" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:03.019" endtime="20201110 08:40:03.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.026" level="INFO">VALUE: 36825550</msg>
<status status="PASS" starttime="20201110 08:40:03.024" endtime="20201110 08:40:03.027"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.013" endtime="20201110 08:40:03.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.039" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:03.037" endtime="20201110 08:40:03.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.044" level="INFO">VALUE: [36835592, 36845591, 36855591, 36865592, 36875591, 36885592, 36895591, 36905592, 36915591, 36925592, 36935591, 36945592, 36955591, 36965592, 36975591, 36985592, 36995591, 37005592, 37015591, 37025592, 37035591, 37045592, 37055591, 37065592, 37075591, 37085592, 37095591, 37105592, 37115591, 37125592, 37135591, 37145592, 37155591, 37165592, 37175591, 37185592, 37195591, 37205592, 37215591, 37225592, 37235591, 37245592, 37255591, 37265592, 37275591, 37285592, 37295591, 37305592, 37315591, 37325592, 37335591, 37345592, 37355591, 37365592, 37375591, 37385592, 37395591, 37405592, 37415591, 37425592, 37435591, 37445592, 37455591, 37465592, 37475591, 37485592, 37495591, 37505592, 37515591, 37525592, 37535591, 37545592, 37555591, 37565592, 37575591, 37585592, 37595591, 37605592, 37615591, 37625592, 37635591, 37645592, 37655591, 37665592, 37675591, 37685592, 37695591, 37705592, 37715591, 37725592, 37735591, 37745592, 37755591, 37765592, 37775591, 37785592, 37795591, 37805592, 37815591, 37825592]</msg>
<status status="PASS" starttime="20201110 08:40:03.041" endtime="20201110 08:40:03.045"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.030" endtime="20201110 08:40:03.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.063" endtime="20201110 08:40:03.424"></status>
</kw>
<msg timestamp="20201110 08:40:03.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048225333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058268639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:03.060" endtime="20201110 08:40:03.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.048225333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.058268639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:03.432" endtime="20201110 08:40:03.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.450" endtime="20201110 08:40:03.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.052" endtime="20201110 08:40:03.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.048" endtime="20201110 08:40:03.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:03.514" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:03.459" endtime="20201110 08:40:03.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.524" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:03.522" endtime="20201110 08:40:03.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.529" level="INFO">VALUE: 0.048225333</msg>
<status status="PASS" starttime="20201110 08:40:03.527" endtime="20201110 08:40:03.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.516" endtime="20201110 08:40:03.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.542" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:03.540" endtime="20201110 08:40:03.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:03.547" level="INFO">VALUE: [0.058268639, 0.068269292, 0.078269903, 0.088272444, 0.098272069, 0.108274625, 0.118274236, 0.128276792, 0.138276403, 0.148279056, 0.158278597, 0.168281153, 0.17828075, 0.188283333, 0.198282931, 0.208285486, 0.218285097, 0.228287667, 0.238287278, 0.248289847, 0.258289444, 0.268292014, 0.278291639, 0.288294181, 0.298293806, 0.308296361, 0.318296014, 0.328298528, 0.338298153, 0.348300722, 0.358300333, 0.368302889, 0.378302514, 0.388305069, 0.398304681, 0.408307278, 0.418306847, 0.428309417, 0.438309028, 0.448311583, 0.458311194, 0.468313778, 0.478313403, 0.488315986, 0.498315556, 0.508318111, 0.518317722, 0.528320278, 0.538319903, 0.548322458, 0.558322083, 0.568324625, 0.578324236, 0.588326819, 0.598326472, 0.608328986, 0.618328597, 0.628331167, 0.638330764, 0.648333361, 0.658332958, 0.6683355, 0.678335111, 0.688337681, 0.698337306, 0.708339847, 0.718339472, 0.728342028, 0.738341653, 0.748344194, 0.758343819, 0.768346375, 0.778345986, 0.788348556, 0.798348167, 0.808350722, 0.818350347, 0.828352889, 0.838352528, 0.848355069, 0.858354681, 0.86835725, 0.878356861, 0.888359417, 0.898359028, 0.908361597, 0.918361222, 0.928363778, 0.938363389, 0.948365944, 0.958365569, 0.968368153, 0.978367736, 0.988370292, 0.998369903, 1.008372486, 1.018372083, 1.028374653, 1.038374264, 1.048376819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:03.545" endtime="20201110 08:40:03.548"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.533" endtime="20201110 08:40:03.550"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.556" endtime="20201110 08:40:03.559"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:03.564" endtime="20201110 08:40:03.586"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.560" endtime="20201110 08:40:03.588"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.551" endtime="20201110 08:40:03.589"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.817" endtime="20201110 08:40:03.590"></status>
</kw>
<msg timestamp="20201110 08:40:03.590" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:03.611" endtime="20201110 08:40:05.717"></status>
</kw>
<msg timestamp="20201110 08:40:05.718" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39598363, 'start-iter': 1, 'wakeups': [39608406, 39618404, 39628404, 3...</msg>
<status status="PASS" starttime="20201110 08:40:03.608" endtime="20201110 08:40:05.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.725" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 39598363, 'start-iter': 1, 'wakeups': [39608406, 39618404, 39628404, 3...</msg>
<status status="PASS" starttime="20201110 08:40:05.721" endtime="20201110 08:40:05.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.728" endtime="20201110 08:40:05.731"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.601" endtime="20201110 08:40:05.733"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.595" endtime="20201110 08:40:05.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:05.741" level="INFO">${RESULT} = {'wakeups': [39608406, 39618404, 39628404, 39638405, 39648404, 39658405, 39668404, 39678405, 39688404, 39698405, 39708404, 39718405, 39728404, 39738405, 39748404, 39758405, 39768404, 39778405, 3978840...</msg>
<status status="PASS" starttime="20201110 08:40:05.736" endtime="20201110 08:40:05.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.751" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:05.748" endtime="20201110 08:40:05.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.756" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:05.754" endtime="20201110 08:40:05.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.742" endtime="20201110 08:40:05.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.768" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:05.766" endtime="20201110 08:40:05.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.775" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:05.771" endtime="20201110 08:40:05.776"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.760" endtime="20201110 08:40:05.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.788" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:05.785" endtime="20201110 08:40:05.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.792" level="INFO">VALUE: 39598363</msg>
<status status="PASS" starttime="20201110 08:40:05.790" endtime="20201110 08:40:05.793"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.778" endtime="20201110 08:40:05.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.805" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:05.802" endtime="20201110 08:40:05.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:05.809" level="INFO">VALUE: [39608406, 39618404, 39628404, 39638405, 39648404, 39658405, 39668404, 39678405, 39688404, 39698405, 39708404, 39718405, 39728404, 39738405, 39748404, 39758405, 39768404, 39778405, 39788404, 39798405, 39808404, 39818405, 39828404, 39838405, 39848404, 39858405, 39868404, 39878405, 39888404, 39898405, 39908404, 39918405, 39928404, 39938405, 39948404, 39958405, 39968404, 39978405, 39988404, 39998405, 40008404, 40018405, 40028404, 40038405, 40048404, 40058405, 40068404, 40078405, 40088404, 40098405, 40108404, 40118405, 40128404, 40138405, 40148404, 40158405, 40168404, 40178405, 40188404, 40198405, 40208404, 40218405, 40228404, 40238405, 40248404, 40258405, 40268404, 40278405, 40288404, 40298405, 40308404, 40318405, 40328404, 40338405, 40348404, 40358405, 40368404, 40378405, 40388404, 40398405, 40408404, 40418405, 40428404, 40438405, 40448404, 40458405, 40468404, 40478405, 40488404, 40498405, 40508404, 40518405, 40528404, 40538405, 40548404, 40558405, 40568404, 40578405, 40588404, 40598405]</msg>
<status status="PASS" starttime="20201110 08:40:05.807" endtime="20201110 08:40:05.810"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.796" endtime="20201110 08:40:05.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:05.829" endtime="20201110 08:40:06.170"></status>
</kw>
<msg timestamp="20201110 08:40:06.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038203375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048247361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:05.825" endtime="20201110 08:40:06.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038203375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048247361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:06.179" endtime="20201110 08:40:06.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.196" endtime="20201110 08:40:06.200"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.818" endtime="20201110 08:40:06.201"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:05.813" endtime="20201110 08:40:06.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:06.258" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:06.205" endtime="20201110 08:40:06.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.269" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:06.267" endtime="20201110 08:40:06.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.273" level="INFO">VALUE: 0.038203375</msg>
<status status="PASS" starttime="20201110 08:40:06.271" endtime="20201110 08:40:06.275"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.260" endtime="20201110 08:40:06.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.289" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:06.287" endtime="20201110 08:40:06.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:06.293" level="INFO">VALUE: [0.048247361, 0.058247014, 0.068247597, 0.078250181, 0.088249764, 0.098252319, 0.108251931, 0.1182545, 0.128254097, 0.138256667, 0.148256278, 0.158258833, 0.168258444, 0.178261, 0.188260611, 0.198263194, 0.208262847, 0.218265347, 0.228264972, 0.238267514, 0.248267139, 0.258269736, 0.268269333, 0.278271861, 0.288271514, 0.298274042, 0.308273653, 0.318276222, 0.328275833, 0.338278389, 0.348278, 0.358280556, 0.368280181, 0.378282736, 0.388282375, 0.398284903, 0.408284569, 0.418287083, 0.428286694, 0.438289319, 0.448288861, 0.458291417, 0.468291069, 0.478293597, 0.488293222, 0.498295764, 0.508295389, 0.518297944, 0.528297556, 0.538300111, 0.548299736, 0.558302292, 0.568301931, 0.578304458, 0.588304083, 0.598306681, 0.60830625, 0.618308806, 0.628308431, 0.638311, 0.648310597, 0.658313153, 0.668312764, 0.678315333, 0.688314944, 0.698317528, 0.708317125, 0.718319681, 0.728319292, 0.738321847, 0.748321472, 0.758324097, 0.768323639, 0.778326208, 0.788325819, 0.798328361, 0.808328042, 0.818330542, 0.828330153, 0.838332722, 0.848332347, 0.858334889, 0.8683345, 0.878337056, 0.888336681, 0.89833925, 0.908338847, 0.918341417, 0.928341014, 0.938343597, 0.948343236, 0.958345764, 0.968345375, 0.978347931, 0.988347542, 0.998350097, 1.008349708, 1.018352264, 1.028351875, 1.038354417] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:06.291" endtime="20201110 08:40:06.294"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.279" endtime="20201110 08:40:06.296"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.302" endtime="20201110 08:40:06.305"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:06.310" endtime="20201110 08:40:06.332"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.306" endtime="20201110 08:40:06.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.298" endtime="20201110 08:40:06.335"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:03.592" endtime="20201110 08:40:06.336"></status>
</kw>
<msg timestamp="20201110 08:40:06.336" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 5 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:06.357" endtime="20201110 08:40:08.463"></status>
</kw>
<msg timestamp="20201110 08:40:08.465" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42344301, 'start-iter': 1, 'wakeups': [42354344, 42364342, 42374342, 4...</msg>
<status status="PASS" starttime="20201110 08:40:06.354" endtime="20201110 08:40:08.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.471" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'timer-count': '5'}, {'timer-interval': '10000'}, {'start-time': 42344301, 'start-iter': 1, 'wakeups': [42354344, 42364342, 42374342, 4...</msg>
<status status="PASS" starttime="20201110 08:40:08.467" endtime="20201110 08:40:08.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.474" endtime="20201110 08:40:08.477"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.347" endtime="20201110 08:40:08.479"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.341" endtime="20201110 08:40:08.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:08.487" level="INFO">${RESULT} = {'wakeups': [42354344, 42364342, 42374342, 42384343, 42394342, 42404343, 42414342, 42424343, 42434342, 42444343, 42454342, 42464343, 42474342, 42484343, 42494342, 42504343, 42514342, 42524343, 4253434...</msg>
<status status="PASS" starttime="20201110 08:40:08.482" endtime="20201110 08:40:08.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.497" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:08.494" endtime="20201110 08:40:08.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.501" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:08.499" endtime="20201110 08:40:08.502"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.488" endtime="20201110 08:40:08.504"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.513" level="INFO">NAME: 5-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:08.511" endtime="20201110 08:40:08.514"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.518" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:08.516" endtime="20201110 08:40:08.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.505" endtime="20201110 08:40:08.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.531" level="INFO">NAME: dut-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:08.529" endtime="20201110 08:40:08.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.536" level="INFO">VALUE: 42344301</msg>
<status status="PASS" starttime="20201110 08:40:08.533" endtime="20201110 08:40:08.536"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.522" endtime="20201110 08:40:08.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.548" level="INFO">NAME: dut-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:08.546" endtime="20201110 08:40:08.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.553" level="INFO">VALUE: [42354344, 42364342, 42374342, 42384343, 42394342, 42404343, 42414342, 42424343, 42434342, 42444343, 42454342, 42464343, 42474342, 42484343, 42494342, 42504343, 42514342, 42524343, 42534342, 42544343, 42554342, 42564343, 42574342, 42584343, 42594342, 42604343, 42614342, 42624343, 42634342, 42644343, 42654342, 42664343, 42674342, 42684343, 42694342, 42704343, 42714342, 42724343, 42734342, 42744343, 42754342, 42764343, 42774342, 42784343, 42794342, 42804343, 42814342, 42824343, 42834342, 42844343, 42854342, 42864343, 42874342, 42884343, 42894342, 42904343, 42914342, 42924343, 42934342, 42944343, 42954342, 42964343, 42974342, 42984343, 42994342, 43004343, 43014342, 43024343, 43034342, 43044343, 43054342, 43064343, 43074342, 43084343, 43094342, 43104343, 43114342, 43124343, 43134342, 43144343, 43154342, 43164343, 43174342, 43184343, 43194342, 43204343, 43214342, 43224343, 43234342, 43244343, 43254342, 43264343, 43274342, 43284343, 43294342, 43304343, 43314342, 43324343, 43334342, 43344343]</msg>
<status status="PASS" starttime="20201110 08:40:08.550" endtime="20201110 08:40:08.554"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.539" endtime="20201110 08:40:08.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.574" endtime="20201110 08:40:08.917"></status>
</kw>
<msg timestamp="20201110 08:40:08.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038140069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048184014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.570" endtime="20201110 08:40:08.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:08.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038140069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048184014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:08.925" endtime="20201110 08:40:08.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:08.943" endtime="20201110 08:40:08.946"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.561" endtime="20201110 08:40:08.948"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:08.557" endtime="20201110 08:40:08.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:09.003" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:08.951" endtime="20201110 08:40:09.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.014" level="INFO">NAME: hil-5-start-time</msg>
<status status="PASS" starttime="20201110 08:40:09.012" endtime="20201110 08:40:09.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.019" level="INFO">VALUE: 0.038140069</msg>
<status status="PASS" starttime="20201110 08:40:09.016" endtime="20201110 08:40:09.019"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.005" endtime="20201110 08:40:09.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.032" level="INFO">NAME: hil-5-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:09.030" endtime="20201110 08:40:09.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:09.037" level="INFO">VALUE: [0.048184014, 0.058183736, 0.068184264, 0.078186819, 0.088186444, 0.098188986, 0.108188597, 0.118191236, 0.128190806, 0.138193375, 0.148192944, 0.158195514, 0.168195111, 0.178197708, 0.188197292, 0.198199847, 0.208199472, 0.218202014, 0.228201667, 0.238204181, 0.248203778, 0.258206333, 0.268205958, 0.278208542, 0.288208125, 0.298210681, 0.308210306, 0.318212847, 0.328212458, 0.338215028, 0.348214639, 0.358217194, 0.368216819, 0.378219361, 0.388218986, 0.398221556, 0.408221153, 0.418223694, 0.428223333, 0.438225861, 0.448225486, 0.458228042, 0.468227667, 0.478230278, 0.488229833, 0.498232417, 0.508232014, 0.518234556, 0.528234167, 0.538236722, 0.548236333, 0.558238889, 0.568238514, 0.578241083, 0.588240667, 0.598243236, 0.608242861, 0.618245431, 0.628245028, 0.638247583, 0.648247181, 0.658249736, 0.668249361, 0.678251917, 0.688251528, 0.698254097, 0.708253708, 0.71825625, 0.728255861, 0.738258417, 0.748258069, 0.758260611, 0.768260222, 0.778262819, 0.788262375, 0.798264931, 0.808264556, 0.818267097, 0.828266722, 0.838269278, 0.848268889, 0.858271444, 0.868271111, 0.878273611, 0.888273222, 0.898275778, 0.908275403, 0.918277972, 0.928277597, 0.938280139, 0.948279736, 0.958282306, 0.968281903, 0.9782845, 0.988284069, 0.998286639, 1.00828625, 1.018288806, 1.028288417, 1.038290958] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:09.034" endtime="20201110 08:40:09.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.022" endtime="20201110 08:40:09.040"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.046" endtime="20201110 08:40:09.049"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:09.054" endtime="20201110 08:40:09.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.050" endtime="20201110 08:40:09.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.041" endtime="20201110 08:40:09.079"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:06.338" endtime="20201110 08:40:09.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.812" endtime="20201110 08:40:09.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:00.811" endtime="20201110 08:40:09.081"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:09.086" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:09.109" endtime="20201110 08:40:11.215"></status>
</kw>
<msg timestamp="20201110 08:40:11.216" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45095864, 'start-iter': 1, 'wakeups': [45105916, 45115917, 45125916, 4...</msg>
<status status="PASS" starttime="20201110 08:40:09.106" endtime="20201110 08:40:11.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.223" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 45095864, 'start-iter': 1, 'wakeups': [45105916, 45115917, 45125916, 4...</msg>
<status status="PASS" starttime="20201110 08:40:11.218" endtime="20201110 08:40:11.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.225" endtime="20201110 08:40:11.229"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.097" endtime="20201110 08:40:11.231"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.091" endtime="20201110 08:40:11.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:11.238" level="INFO">${RESULT} = {'wakeups': [45105916, 45115917, 45125916, 45135916, 45145916, 45155916, 45165916, 45175916, 45185916, 45195916, 45205916, 45215916, 45225916, 45235916, 45245916, 45255916, 45265916, 45275916, 4528591...</msg>
<status status="PASS" starttime="20201110 08:40:11.234" endtime="20201110 08:40:11.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.248" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:11.246" endtime="20201110 08:40:11.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.253" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:11.251" endtime="20201110 08:40:11.254"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.240" endtime="20201110 08:40:11.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.265" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:11.263" endtime="20201110 08:40:11.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.270" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:11.268" endtime="20201110 08:40:11.270"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.257" endtime="20201110 08:40:11.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.282" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:11.280" endtime="20201110 08:40:11.283"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.287" level="INFO">VALUE: 45095864</msg>
<status status="PASS" starttime="20201110 08:40:11.284" endtime="20201110 08:40:11.287"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.273" endtime="20201110 08:40:11.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.296" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:11.295" endtime="20201110 08:40:11.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.299" level="INFO">VALUE: [45105916, 45115917, 45125916, 45135916, 45145916, 45155916, 45165916, 45175916, 45185916, 45195916, 45205916, 45215916, 45225916, 45235916, 45245916, 45255916, 45265916, 45275916, 45285916, 45295916, 45305916, 45315916, 45325916, 45335916, 45345916, 45355916, 45365916, 45375916, 45385916, 45395916, 45405916, 45415916, 45425916, 45435916, 45445916, 45455916, 45465916, 45475916, 45485916, 45495916, 45505916, 45515916, 45525916, 45535916, 45545916, 45555916, 45565916, 45575916, 45585916, 45595916, 45605916, 45615916, 45625916, 45635916, 45645916, 45655916, 45665916, 45675916, 45685916, 45695916, 45705916, 45715916, 45725916, 45735916, 45745916, 45755916, 45765916, 45775916, 45785916, 45795916, 45805916, 45815916, 45825916, 45835916, 45845916, 45855916, 45865916, 45875916, 45885916, 45895916, 45905916, 45915916, 45925916, 45935916, 45945916, 45955916, 45965916, 45975916, 45985916, 45995916, 46005916, 46015916, 46025916, 46035916, 46045916, 46055916, 46065916, 46075916, 46085916, 46095916]</msg>
<status status="PASS" starttime="20201110 08:40:11.298" endtime="20201110 08:40:11.300"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.290" endtime="20201110 08:40:11.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.308" endtime="20201110 08:40:11.632"></status>
</kw>
<msg timestamp="20201110 08:40:11.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045807931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055861819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.307" endtime="20201110 08:40:11.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045807931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.055861819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:11.641" endtime="20201110 08:40:11.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.658" endtime="20201110 08:40:11.662"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.303" endtime="20201110 08:40:11.663"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.301" endtime="20201110 08:40:11.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:11.721" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:11.666" endtime="20201110 08:40:11.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.732" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:11.730" endtime="20201110 08:40:11.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.737" level="INFO">VALUE: 0.045807931</msg>
<status status="PASS" starttime="20201110 08:40:11.735" endtime="20201110 08:40:11.738"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.723" endtime="20201110 08:40:11.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.751" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:11.749" endtime="20201110 08:40:11.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:11.756" level="INFO">VALUE: [0.055861819, 0.065863514, 0.075863486, 0.085864611, 0.095865667, 0.105866778, 0.115867833, 0.125868986, 0.13587, 0.145871111, 0.155872153, 0.165873278, 0.175874319, 0.185875444, 0.195876486, 0.205877611, 0.215878653, 0.225879778, 0.235880847, 0.245881944, 0.255882986, 0.265884125, 0.275885181, 0.285886292, 0.295887333, 0.305888458, 0.315889514, 0.325890639, 0.335891708, 0.345892847, 0.355893889, 0.365895042, 0.375896056, 0.385897194, 0.39589825, 0.405899375, 0.415900486, 0.425901569, 0.435902611, 0.445903819, 0.455904819, 0.465905931, 0.475906986, 0.485908125, 0.495909181, 0.505910319, 0.515911361, 0.525912486, 0.535913542, 0.545914694, 0.555915722, 0.565916847, 0.575917917, 0.585919097, 0.595920097, 0.605921222, 0.615922292, 0.625923431, 0.635924444, 0.645925583, 0.655926653, 0.665927778, 0.675928819, 0.685929958, 0.695931, 0.705932153, 0.715933181, 0.725934306, 0.735935375, 0.745936528, 0.755937583, 0.765938681, 0.775939736, 0.785940875, 0.795941944, 0.805943042, 0.815944083, 0.825945264, 0.835946278, 0.845947403, 0.855948458, 0.865949583, 0.875950639, 0.885951792, 0.895952819, 0.905953986, 0.915955, 0.925956181, 0.935957194, 0.945958319, 0.955959361, 0.9659605, 0.975961542, 0.985962681, 0.995963722, 1.005964903, 1.015965903, 1.025967056, 1.035968125, 1.045969236] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:11.754" endtime="20201110 08:40:11.757"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.741" endtime="20201110 08:40:11.759"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.765" endtime="20201110 08:40:11.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:11.773" endtime="20201110 08:40:11.795"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.769" endtime="20201110 08:40:11.797"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.760" endtime="20201110 08:40:11.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.088" endtime="20201110 08:40:11.799"></status>
</kw>
<msg timestamp="20201110 08:40:11.800" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:11.821" endtime="20201110 08:40:13.926"></status>
</kw>
<msg timestamp="20201110 08:40:13.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47807803, 'start-iter': 1, 'wakeups': [47817855, 47827856, 47837855, 4...</msg>
<status status="PASS" starttime="20201110 08:40:11.818" endtime="20201110 08:40:13.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.934" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 47807803, 'start-iter': 1, 'wakeups': [47817855, 47827856, 47837855, 4...</msg>
<status status="PASS" starttime="20201110 08:40:13.930" endtime="20201110 08:40:13.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:13.936" endtime="20201110 08:40:13.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.810" endtime="20201110 08:40:13.942"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.805" endtime="20201110 08:40:13.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:13.950" level="INFO">${RESULT} = {'wakeups': [47817855, 47827856, 47837855, 47847855, 47857855, 47867855, 47877855, 47887855, 47897855, 47907855, 47917855, 47927855, 47937855, 47947855, 47957855, 47967855, 47977855, 47987855, 4799785...</msg>
<status status="PASS" starttime="20201110 08:40:13.945" endtime="20201110 08:40:13.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.960" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:13.958" endtime="20201110 08:40:13.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.965" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:13.962" endtime="20201110 08:40:13.965"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.951" endtime="20201110 08:40:13.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.979" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:13.976" endtime="20201110 08:40:13.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.983" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:13.981" endtime="20201110 08:40:13.984"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.968" endtime="20201110 08:40:13.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:13.995" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:13.993" endtime="20201110 08:40:13.996"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.000" level="INFO">VALUE: 47807803</msg>
<status status="PASS" starttime="20201110 08:40:13.998" endtime="20201110 08:40:14.001"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:13.987" endtime="20201110 08:40:14.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.012" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:14.010" endtime="20201110 08:40:14.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.017" level="INFO">VALUE: [47817855, 47827856, 47837855, 47847855, 47857855, 47867855, 47877855, 47887855, 47897855, 47907855, 47917855, 47927855, 47937855, 47947855, 47957855, 47967855, 47977855, 47987855, 47997855, 48007855, 48017855, 48027855, 48037855, 48047855, 48057855, 48067855, 48077855, 48087855, 48097855, 48107855, 48117855, 48127855, 48137855, 48147855, 48157855, 48167855, 48177855, 48187855, 48197855, 48207855, 48217855, 48227855, 48237855, 48247855, 48257855, 48267855, 48277855, 48287855, 48297855, 48307855, 48317855, 48327855, 48337855, 48347855, 48357855, 48367855, 48377855, 48387855, 48397855, 48407855, 48417855, 48427855, 48437855, 48447855, 48457855, 48467855, 48477855, 48487855, 48497855, 48507855, 48517855, 48527855, 48537855, 48547855, 48557855, 48567855, 48577855, 48587855, 48597855, 48607855, 48617855, 48627855, 48637855, 48647855, 48657855, 48667855, 48677855, 48687855, 48697855, 48707855, 48717855, 48727855, 48737855, 48747855, 48757855, 48767855, 48777855, 48787855, 48797855, 48807855]</msg>
<status status="PASS" starttime="20201110 08:40:14.015" endtime="20201110 08:40:14.018"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.004" endtime="20201110 08:40:14.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.041" endtime="20201110 08:40:14.357"></status>
</kw>
<msg timestamp="20201110 08:40:14.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0388445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048898764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:14.037" endtime="20201110 08:40:14.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0388445, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048898764, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:14.361" endtime="20201110 08:40:14.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.368" endtime="20201110 08:40:14.370"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.030" endtime="20201110 08:40:14.371"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.021" endtime="20201110 08:40:14.372"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:14.395" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:14.373" endtime="20201110 08:40:14.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.401" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:14.399" endtime="20201110 08:40:14.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.403" level="INFO">VALUE: 0.0388445</msg>
<status status="PASS" starttime="20201110 08:40:14.402" endtime="20201110 08:40:14.404"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.396" endtime="20201110 08:40:14.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.410" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:14.409" endtime="20201110 08:40:14.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:14.412" level="INFO">VALUE: [0.048898764, 0.058900361, 0.068900403, 0.078901542, 0.088902639, 0.098903708, 0.108904792, 0.118905903, 0.128906986, 0.138908153, 0.148909125, 0.158910264, 0.168911319, 0.178912417, 0.188913486, 0.198914611, 0.208915639, 0.218916778, 0.228917847, 0.238918972, 0.24892, 0.258921139, 0.268922222, 0.278923306, 0.288924375, 0.298925486, 0.308926528, 0.318927667, 0.328928708, 0.338929861, 0.348930889, 0.358932028, 0.368933083, 0.378934194, 0.38893525, 0.398936375, 0.408937431, 0.418938556, 0.428939625, 0.438940736, 0.448941778, 0.458942917, 0.468943972, 0.478945097, 0.488946139, 0.498947278, 0.508948319, 0.518949458, 0.528950514, 0.538951625, 0.548952694, 0.558953819, 0.568954861, 0.578955986, 0.588957069, 0.598958167, 0.608959208, 0.618960361, 0.628961389, 0.638962528, 0.648963583, 0.658964708, 0.66896575, 0.678966917, 0.688967931, 0.698969056, 0.708970125, 0.71897125, 0.728972292, 0.738973486, 0.748974472, 0.758975597, 0.768976639, 0.778977792, 0.788978833, 0.798979972, 0.808981069, 0.818982139, 0.828983181, 0.838984319, 0.848985375, 0.858986486, 0.868987542, 0.878988736, 0.888989736, 0.898990847, 0.908991889, 0.918993042, 0.928994153, 0.938995222, 0.94899625, 0.958997389, 0.968998444, 0.978999556, 0.989000625, 0.999001736, 1.009002792, 1.019003931, 1.029004986, 1.039006097] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:14.411" endtime="20201110 08:40:14.412"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.405" endtime="20201110 08:40:14.413"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.416" endtime="20201110 08:40:14.417"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:14.420" endtime="20201110 08:40:14.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.418" endtime="20201110 08:40:14.440"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.414" endtime="20201110 08:40:14.441"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:11.801" endtime="20201110 08:40:14.441"></status>
</kw>
<msg timestamp="20201110 08:40:14.442" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 6 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:14.459" endtime="20201110 08:40:16.565"></status>
</kw>
<msg timestamp="20201110 08:40:16.567" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 50446118, 'start-iter': 1, 'wakeups': [50456170, 50466171, 50476170, 5...</msg>
<status status="PASS" starttime="20201110 08:40:14.456" endtime="20201110 08:40:16.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.575" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 6\r\n'], 'data': [{'timer-count': '6'}, {'timer-interval': '10000'}, {'start-time': 50446118, 'start-iter': 1, 'wakeups': [50456170, 50466171, 50476170, 5...</msg>
<status status="PASS" starttime="20201110 08:40:16.570" endtime="20201110 08:40:16.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.577" endtime="20201110 08:40:16.582"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.449" endtime="20201110 08:40:16.583"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.444" endtime="20201110 08:40:16.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:16.592" level="INFO">${RESULT} = {'wakeups': [50456170, 50466171, 50476170, 50486170, 50496170, 50506170, 50516170, 50526170, 50536170, 50546170, 50556170, 50566170, 50576170, 50586170, 50596170, 50606170, 50616170, 50626170, 5063617...</msg>
<status status="PASS" starttime="20201110 08:40:16.587" endtime="20201110 08:40:16.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.602" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:16.600" endtime="20201110 08:40:16.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.608" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:16.605" endtime="20201110 08:40:16.608"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.593" endtime="20201110 08:40:16.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.621" level="INFO">NAME: 6-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:16.619" endtime="20201110 08:40:16.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.626" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:16.623" endtime="20201110 08:40:16.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.611" endtime="20201110 08:40:16.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.640" level="INFO">NAME: dut-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:16.637" endtime="20201110 08:40:16.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.644" level="INFO">VALUE: 50446118</msg>
<status status="PASS" starttime="20201110 08:40:16.642" endtime="20201110 08:40:16.645"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.630" endtime="20201110 08:40:16.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.658" level="INFO">NAME: dut-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:16.655" endtime="20201110 08:40:16.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:16.663" level="INFO">VALUE: [50456170, 50466171, 50476170, 50486170, 50496170, 50506170, 50516170, 50526170, 50536170, 50546170, 50556170, 50566170, 50576170, 50586170, 50596170, 50606170, 50616170, 50626170, 50636170, 50646170, 50656170, 50666170, 50676170, 50686170, 50696170, 50706170, 50716170, 50726170, 50736170, 50746170, 50756170, 50766170, 50776170, 50786170, 50796170, 50806170, 50816170, 50826170, 50836170, 50846170, 50856170, 50866170, 50876170, 50886170, 50896170, 50906170, 50916170, 50926170, 50936170, 50946170, 50956170, 50966170, 50976170, 50986170, 50996170, 51006170, 51016170, 51026170, 51036170, 51046170, 51056170, 51066170, 51076170, 51086170, 51096170, 51106170, 51116170, 51126170, 51136170, 51146170, 51156170, 51166170, 51176170, 51186170, 51196170, 51206170, 51216170, 51226170, 51236170, 51246170, 51256170, 51266170, 51276170, 51286170, 51296170, 51306170, 51316170, 51326170, 51336170, 51346170, 51356170, 51366170, 51376170, 51386170, 51396170, 51406170, 51416170, 51426170, 51436170, 51446170]</msg>
<status status="PASS" starttime="20201110 08:40:16.660" endtime="20201110 08:40:16.664"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.648" endtime="20201110 08:40:16.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:16.686" endtime="20201110 08:40:17.046"></status>
</kw>
<msg timestamp="20201110 08:40:17.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0311615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041215375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:16.682" endtime="20201110 08:40:17.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0311615, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041215375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:17.055" endtime="20201110 08:40:17.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.072" endtime="20201110 08:40:17.076"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.674" endtime="20201110 08:40:17.078"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:16.667" endtime="20201110 08:40:17.079"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:17.134" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:17.081" endtime="20201110 08:40:17.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.144" level="INFO">NAME: hil-6-start-time</msg>
<status status="PASS" starttime="20201110 08:40:17.142" endtime="20201110 08:40:17.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.149" level="INFO">VALUE: 0.0311615</msg>
<status status="PASS" starttime="20201110 08:40:17.147" endtime="20201110 08:40:17.150"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.136" endtime="20201110 08:40:17.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.162" level="INFO">NAME: hil-6-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:17.160" endtime="20201110 08:40:17.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:17.167" level="INFO">VALUE: [0.041215375, 0.051217014, 0.061217042, 0.071218167, 0.081219194, 0.091220319, 0.101221403, 0.111222514, 0.121223542, 0.131224681, 0.141225736, 0.151226847, 0.161227903, 0.171229069, 0.181230069, 0.191231208, 0.20123225, 0.211233375, 0.221234417, 0.231235569, 0.241236611, 0.251237722, 0.261238792, 0.271239917, 0.281240944, 0.291242083, 0.301243139, 0.311244319, 0.321245319, 0.331246431, 0.341247542, 0.351248625, 0.361249667, 0.371250806, 0.381251861, 0.391252972, 0.401254028, 0.411255153, 0.421256208, 0.431257319, 0.441258361, 0.4512595, 0.461260556, 0.471261681, 0.48126275, 0.491263931, 0.501264889, 0.511266028, 0.521267069, 0.531268208, 0.54126925, 0.551270417, 0.561271431, 0.571272556, 0.581273611, 0.591274806, 0.601275778, 0.611276903, 0.621277972, 0.631279097, 0.641280153, 0.651281319, 0.661282306, 0.671283444, 0.681284486, 0.691285639, 0.701286667, 0.711287792, 0.721288833, 0.731289972, 0.741291014, 0.751292167, 0.761293194, 0.771294361, 0.781295375, 0.7912965, 0.801297611, 0.811298681, 0.82129975, 0.831300875, 0.841301903, 0.851303028, 0.861304083, 0.871305208, 0.88130625, 0.891307403, 0.901308444, 0.911309556, 0.921310625, 0.931311736, 0.941312792, 0.951313931, 0.961314958, 0.971316083, 0.981317111, 0.991318236, 1.001319278, 1.011320403, 1.021321444, 1.031322611] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:17.165" endtime="20201110 08:40:17.168"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.152" endtime="20201110 08:40:17.169"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.176" endtime="20201110 08:40:17.178"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:17.184" endtime="20201110 08:40:17.206"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.180" endtime="20201110 08:40:17.207"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.171" endtime="20201110 08:40:17.209"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:14.442" endtime="20201110 08:40:17.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.083" endtime="20201110 08:40:17.210"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:09.082" endtime="20201110 08:40:17.211"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:17.216" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:17.240" endtime="20201110 08:40:19.345"></status>
</kw>
<msg timestamp="20201110 08:40:19.347" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53226558, 'start-iter': 1, 'wakeups': [53236620, 53246619, 53256620, 5...</msg>
<status status="PASS" starttime="20201110 08:40:17.237" endtime="20201110 08:40:19.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.354" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 53226558, 'start-iter': 1, 'wakeups': [53236620, 53246619, 53256620, 5...</msg>
<status status="PASS" starttime="20201110 08:40:19.349" endtime="20201110 08:40:19.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.356" endtime="20201110 08:40:19.360"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.228" endtime="20201110 08:40:19.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.221" endtime="20201110 08:40:19.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:19.374" level="INFO">${RESULT} = {'wakeups': [53236620, 53246619, 53256620, 53266619, 53276620, 53286619, 53296620, 53306619, 53316620, 53326619, 53336620, 53346619, 53356620, 53366619, 53376620, 53386619, 53396620, 53406619, 5341662...</msg>
<status status="PASS" starttime="20201110 08:40:19.370" endtime="20201110 08:40:19.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.385" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:19.382" endtime="20201110 08:40:19.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.389" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:19.387" endtime="20201110 08:40:19.390"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.376" endtime="20201110 08:40:19.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.405" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:19.403" endtime="20201110 08:40:19.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.410" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:19.407" endtime="20201110 08:40:19.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.394" endtime="20201110 08:40:19.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.422" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:19.420" endtime="20201110 08:40:19.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.428" level="INFO">VALUE: 53226558</msg>
<status status="PASS" starttime="20201110 08:40:19.424" endtime="20201110 08:40:19.428"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.413" endtime="20201110 08:40:19.430"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.440" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:19.438" endtime="20201110 08:40:19.441"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.445" level="INFO">VALUE: [53236620, 53246619, 53256620, 53266619, 53276620, 53286619, 53296620, 53306619, 53316620, 53326619, 53336620, 53346619, 53356620, 53366619, 53376620, 53386619, 53396620, 53406619, 53416620, 53426619, 53436620, 53446619, 53456620, 53466619, 53476620, 53486619, 53496620, 53506619, 53516620, 53526619, 53536620, 53546619, 53556620, 53566619, 53576620, 53586619, 53596620, 53606619, 53616620, 53626619, 53636620, 53646619, 53656620, 53666619, 53676620, 53686619, 53696620, 53706619, 53716620, 53726619, 53736620, 53746619, 53756620, 53766619, 53776620, 53786619, 53796620, 53806619, 53816620, 53826619, 53836620, 53846619, 53856620, 53866619, 53876620, 53886619, 53896620, 53906619, 53916620, 53926619, 53936620, 53946619, 53956620, 53966619, 53976620, 53986619, 53996620, 54006619, 54016620, 54026619, 54036620, 54046619, 54056620, 54066619, 54076620, 54086619, 54096620, 54106619, 54116620, 54126619, 54136620, 54146619, 54156620, 54166619, 54176620, 54186619, 54196620, 54206619, 54216620, 54226619]</msg>
<status status="PASS" starttime="20201110 08:40:19.443" endtime="20201110 08:40:19.446"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.431" endtime="20201110 08:40:19.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.460" endtime="20201110 08:40:19.760"></status>
</kw>
<msg timestamp="20201110 08:40:19.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0470485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057112472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:19.458" endtime="20201110 08:40:19.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0470485, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057112472, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201110 08:40:19.769" endtime="20201110 08:40:19.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.786" endtime="20201110 08:40:19.790"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.454" endtime="20201110 08:40:19.791"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.449" endtime="20201110 08:40:19.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:19.849" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:19.795" endtime="20201110 08:40:19.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.860" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:19.858" endtime="20201110 08:40:19.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.865" level="INFO">VALUE: 0.0470485</msg>
<status status="PASS" starttime="20201110 08:40:19.863" endtime="20201110 08:40:19.866"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.852" endtime="20201110 08:40:19.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.878" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:19.876" endtime="20201110 08:40:19.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:19.883" level="INFO">VALUE: [0.057112472, 0.067112236, 0.077114681, 0.087114403, 0.097116861, 0.107116583, 0.117119042, 0.12711875, 0.137121194, 0.147120944, 0.157123375, 0.167123097, 0.177125569, 0.187125333, 0.197127806, 0.207127458, 0.217129903, 0.227129625, 0.237132069, 0.247131806, 0.257134333, 0.267134, 0.277136444, 0.287136181, 0.297138597, 0.307138333, 0.317140778, 0.327140514, 0.337142958, 0.347142681, 0.357145125, 0.367144875, 0.377147319, 0.387147028, 0.397149486, 0.407149236, 0.417151681, 0.427151403, 0.437153833, 0.447153569, 0.457156014, 0.467155736, 0.477158194, 0.487157917, 0.497160361, 0.507160083, 0.517162556, 0.527162292, 0.537164722, 0.547164444, 0.557166903, 0.567166667, 0.577169069, 0.587168792, 0.597171236, 0.607170972, 0.617173417, 0.627173139, 0.637175583, 0.647175347, 0.657177764, 0.667177514, 0.677179944, 0.687179667, 0.697182111, 0.707181847, 0.717184292, 0.727184014, 0.737186486, 0.747186194, 0.757188639, 0.767188389, 0.777190833, 0.787190569, 0.797193, 0.807192778, 0.817195167, 0.827194903, 0.837197361, 0.847197069, 0.857199528, 0.86719925, 0.877201708, 0.887201472, 0.897203875, 0.907203653, 0.917206097, 0.927205778, 0.937208236, 0.947207958, 0.957210403, 0.967210139, 0.977212625, 0.987212306, 0.99721475, 1.007214486, 1.017216931, 1.027216653, 1.037219125, 1.047218847] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:19.881" endtime="20201110 08:40:19.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.868" endtime="20201110 08:40:19.885"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.892" endtime="20201110 08:40:19.894"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:19.900" endtime="20201110 08:40:19.921"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.896" endtime="20201110 08:40:19.923"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.887" endtime="20201110 08:40:19.925"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.218" endtime="20201110 08:40:19.925"></status>
</kw>
<msg timestamp="20201110 08:40:19.926" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:19.947" endtime="20201110 08:40:22.052"></status>
</kw>
<msg timestamp="20201110 08:40:22.054" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55933236, 'start-iter': 1, 'wakeups': [55943298, 55953297, 55963298, 5...</msg>
<status status="PASS" starttime="20201110 08:40:19.943" endtime="20201110 08:40:22.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.061" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 55933236, 'start-iter': 1, 'wakeups': [55943298, 55953297, 55963298, 5...</msg>
<status status="PASS" starttime="20201110 08:40:22.056" endtime="20201110 08:40:22.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.064" endtime="20201110 08:40:22.068"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.936" endtime="20201110 08:40:22.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.931" endtime="20201110 08:40:22.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.078" level="INFO">${RESULT} = {'wakeups': [55943298, 55953297, 55963298, 55973297, 55983298, 55993297, 56003298, 56013297, 56023298, 56033297, 56043298, 56053297, 56063298, 56073297, 56083298, 56093297, 56103298, 56113297, 5612329...</msg>
<status status="PASS" starttime="20201110 08:40:22.073" endtime="20201110 08:40:22.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.089" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:22.086" endtime="20201110 08:40:22.089"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.093" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:22.091" endtime="20201110 08:40:22.094"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.080" endtime="20201110 08:40:22.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.107" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:22.104" endtime="20201110 08:40:22.108"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.111" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:22.109" endtime="20201110 08:40:22.112"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.098" endtime="20201110 08:40:22.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.126" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:22.124" endtime="20201110 08:40:22.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.131" level="INFO">VALUE: 55933236</msg>
<status status="PASS" starttime="20201110 08:40:22.128" endtime="20201110 08:40:22.131"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.115" endtime="20201110 08:40:22.133"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.143" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:22.141" endtime="20201110 08:40:22.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.148" level="INFO">VALUE: [55943298, 55953297, 55963298, 55973297, 55983298, 55993297, 56003298, 56013297, 56023298, 56033297, 56043298, 56053297, 56063298, 56073297, 56083298, 56093297, 56103298, 56113297, 56123298, 56133297, 56143298, 56153297, 56163298, 56173297, 56183298, 56193297, 56203298, 56213297, 56223298, 56233297, 56243298, 56253297, 56263298, 56273297, 56283298, 56293297, 56303298, 56313297, 56323298, 56333297, 56343298, 56353297, 56363298, 56373297, 56383298, 56393297, 56403298, 56413297, 56423298, 56433297, 56443298, 56453297, 56463298, 56473297, 56483298, 56493297, 56503298, 56513297, 56523298, 56533297, 56543298, 56553297, 56563298, 56573297, 56583298, 56593297, 56603298, 56613297, 56623298, 56633297, 56643298, 56653297, 56663298, 56673297, 56683298, 56693297, 56703298, 56713297, 56723298, 56733297, 56743298, 56753297, 56763298, 56773297, 56783298, 56793297, 56803298, 56813297, 56823298, 56833297, 56843298, 56853297, 56863298, 56873297, 56883298, 56893297, 56903298, 56913297, 56923298, 56933297]</msg>
<status status="PASS" starttime="20201110 08:40:22.146" endtime="20201110 08:40:22.149"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.134" endtime="20201110 08:40:22.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.168" endtime="20201110 08:40:22.519"></status>
</kw>
<msg timestamp="20201110 08:40:22.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037905792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047969792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.164" endtime="20201110 08:40:22.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037905792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.047969792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:22.528" endtime="20201110 08:40:22.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.546" endtime="20201110 08:40:22.550"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.157" endtime="20201110 08:40:22.551"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.152" endtime="20201110 08:40:22.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:22.609" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:22.554" endtime="20201110 08:40:22.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.620" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:22.618" endtime="20201110 08:40:22.621"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.625" level="INFO">VALUE: 0.037905792</msg>
<status status="PASS" starttime="20201110 08:40:22.622" endtime="20201110 08:40:22.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.611" endtime="20201110 08:40:22.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.639" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:22.636" endtime="20201110 08:40:22.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:22.644" level="INFO">VALUE: [0.047969792, 0.057969556, 0.067971972, 0.077971694, 0.087974153, 0.097973875, 0.107976333, 0.117976042, 0.127978528, 0.137978236, 0.147980667, 0.157980389, 0.167982833, 0.177982556, 0.187985069, 0.197984792, 0.207987181, 0.217986903, 0.227989347, 0.237989083, 0.247991528, 0.25799125, 0.267993722, 0.277993486, 0.287995875, 0.297995597, 0.307998042, 0.317997778, 0.328000208, 0.337999944, 0.348002403, 0.358002125, 0.368004569, 0.378004306, 0.388006736, 0.398006472, 0.408008903, 0.418008639, 0.428011083, 0.438010806, 0.448013319, 0.458012986, 0.468015431, 0.478015167, 0.488017611, 0.498017333, 0.508019778, 0.5180195, 0.528021944, 0.538021681, 0.548024125, 0.558023889, 0.568026306, 0.578026028, 0.588028486, 0.598028194, 0.608030653, 0.618030375, 0.628032833, 0.638032542, 0.648035, 0.65803475, 0.668037181, 0.678036889, 0.688039333, 0.698039083, 0.708041528, 0.718041236, 0.728043736, 0.738043417, 0.748045917, 0.758045583, 0.768048028, 0.778047778, 0.788050222, 0.798049944, 0.808052417, 0.818052111, 0.828054569, 0.838054278, 0.848056722, 0.858056458, 0.868058903, 0.878058639, 0.888061097, 0.898060819, 0.90806325, 0.918062972, 0.928065444, 0.938065167, 0.948067667, 0.958067319, 0.968069792, 0.9780695, 0.988071944, 0.998071667, 1.008074111, 1.018073847, 1.028076306, 1.038076014] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:22.642" endtime="20201110 08:40:22.646"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.628" endtime="20201110 08:40:22.648"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.654" endtime="20201110 08:40:22.657"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:22.663" endtime="20201110 08:40:22.685"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.658" endtime="20201110 08:40:22.687"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.650" endtime="20201110 08:40:22.688"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:19.927" endtime="20201110 08:40:22.689"></status>
</kw>
<msg timestamp="20201110 08:40:22.689" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 7 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:22.711" endtime="20201110 08:40:24.816"></status>
</kw>
<msg timestamp="20201110 08:40:24.818" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 58697435, 'start-iter': 1, 'wakeups': [58707497, 58717496, 58727497, 5...</msg>
<status status="PASS" starttime="20201110 08:40:22.707" endtime="20201110 08:40:24.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.825" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 7\r\n'], 'data': [{'timer-count': '7'}, {'timer-interval': '10000'}, {'start-time': 58697435, 'start-iter': 1, 'wakeups': [58707497, 58717496, 58727497, 5...</msg>
<status status="PASS" starttime="20201110 08:40:24.820" endtime="20201110 08:40:24.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.828" endtime="20201110 08:40:24.832"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.700" endtime="20201110 08:40:24.833"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.695" endtime="20201110 08:40:24.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:24.841" level="INFO">${RESULT} = {'wakeups': [58707497, 58717496, 58727497, 58737496, 58747497, 58757496, 58767497, 58777496, 58787497, 58797496, 58807497, 58817496, 58827497, 58837496, 58847497, 58857496, 58867497, 58877496, 5888749...</msg>
<status status="PASS" starttime="20201110 08:40:24.837" endtime="20201110 08:40:24.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.852" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:24.850" endtime="20201110 08:40:24.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.856" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:24.854" endtime="20201110 08:40:24.857"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.843" endtime="20201110 08:40:24.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.869" level="INFO">NAME: 7-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:24.867" endtime="20201110 08:40:24.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.874" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:24.872" endtime="20201110 08:40:24.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.860" endtime="20201110 08:40:24.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.887" level="INFO">NAME: dut-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:24.884" endtime="20201110 08:40:24.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.892" level="INFO">VALUE: 58697435</msg>
<status status="PASS" starttime="20201110 08:40:24.890" endtime="20201110 08:40:24.893"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.877" endtime="20201110 08:40:24.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.905" level="INFO">NAME: dut-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:24.902" endtime="20201110 08:40:24.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:24.909" level="INFO">VALUE: [58707497, 58717496, 58727497, 58737496, 58747497, 58757496, 58767497, 58777496, 58787497, 58797496, 58807497, 58817496, 58827497, 58837496, 58847497, 58857496, 58867497, 58877496, 58887497, 58897496, 58907497, 58917496, 58927497, 58937496, 58947497, 58957496, 58967497, 58977496, 58987497, 58997496, 59007497, 59017496, 59027497, 59037496, 59047497, 59057496, 59067497, 59077496, 59087497, 59097496, 59107497, 59117496, 59127497, 59137496, 59147497, 59157496, 59167497, 59177496, 59187497, 59197496, 59207497, 59217496, 59227497, 59237496, 59247497, 59257496, 59267497, 59277496, 59287497, 59297496, 59307497, 59317496, 59327497, 59337496, 59347497, 59357496, 59367497, 59377496, 59387497, 59397496, 59407497, 59417496, 59427497, 59437496, 59447497, 59457496, 59467497, 59477496, 59487497, 59497496, 59507497, 59517496, 59527497, 59537496, 59547497, 59557496, 59567497, 59577496, 59587497, 59597496, 59607497, 59617496, 59627497, 59637496, 59647497, 59657496, 59667497, 59677496, 59687497, 59697496]</msg>
<status status="PASS" starttime="20201110 08:40:24.907" endtime="20201110 08:40:24.910"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.896" endtime="20201110 08:40:24.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:24.931" endtime="20201110 08:40:25.285"></status>
</kw>
<msg timestamp="20201110 08:40:25.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03877, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048834319, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:40:24.926" endtime="20201110 08:40:25.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03877, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048834319, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201110 08:40:25.294" endtime="20201110 08:40:25.310"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.312" endtime="20201110 08:40:25.316"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.918" endtime="20201110 08:40:25.318"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:24.913" endtime="20201110 08:40:25.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:25.374" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:25.321" endtime="20201110 08:40:25.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.385" level="INFO">NAME: hil-7-start-time</msg>
<status status="PASS" starttime="20201110 08:40:25.383" endtime="20201110 08:40:25.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.390" level="INFO">VALUE: 0.03877</msg>
<status status="PASS" starttime="20201110 08:40:25.388" endtime="20201110 08:40:25.391"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.376" endtime="20201110 08:40:25.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.403" level="INFO">NAME: hil-7-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:25.401" endtime="20201110 08:40:25.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:25.408" level="INFO">VALUE: [0.048834319, 0.058834083, 0.068836542, 0.07883625, 0.088838708, 0.098838444, 0.108840861, 0.118840583, 0.128843028, 0.138842778, 0.148845208, 0.158844931, 0.168847375, 0.178847097, 0.188849569, 0.198849264, 0.20885175, 0.218851431, 0.228853875, 0.238853653, 0.248856069, 0.258855819, 0.268858222, 0.278857944, 0.288860389, 0.298860125, 0.308862556, 0.318862319, 0.328864736, 0.338864472, 0.348866917, 0.358866625, 0.368869069, 0.378868819, 0.38887125, 0.398870972, 0.408873417, 0.418873153, 0.428875597, 0.438875347, 0.448877778, 0.4588775, 0.468879931, 0.478879667, 0.488882097, 0.498881847, 0.508884292, 0.518884, 0.528886444, 0.538886167, 0.548888611, 0.558888333, 0.568890792, 0.578890514, 0.588892958, 0.598892694, 0.608895139, 0.618894847, 0.628897292, 0.638897042, 0.648899486, 0.658899194, 0.668901639, 0.678901361, 0.688903806, 0.698903542, 0.708906, 0.718905722, 0.728908153, 0.738907875, 0.748910319, 0.758910056, 0.7689125, 0.778912222, 0.788914667, 0.798914403, 0.808916847, 0.818916556, 0.828919, 0.83891875, 0.848921181, 0.858920903, 0.868923361, 0.878923097, 0.888925514, 0.898925236, 0.908927708, 0.918927417, 0.928929861, 0.938929611, 0.948932042, 0.95893175, 0.968934208, 0.978933931, 0.988936389, 0.998936111, 1.008938542, 1.018938264, 1.028940708, 1.038940486] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:25.406" endtime="20201110 08:40:25.410"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.393" endtime="20201110 08:40:25.412"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.419" endtime="20201110 08:40:25.423"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:25.429" endtime="20201110 08:40:25.451"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.425" endtime="20201110 08:40:25.453"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.414" endtime="20201110 08:40:25.454"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:22.691" endtime="20201110 08:40:25.455"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.213" endtime="20201110 08:40:25.456"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:17.211" endtime="20201110 08:40:25.456"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:25.462" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:25.485" endtime="20201110 08:40:27.591"></status>
</kw>
<msg timestamp="20201110 08:40:27.592" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61471860, 'start-iter': 1, 'wakeups': [61481934, 61491935, 61501936, 6...</msg>
<status status="PASS" starttime="20201110 08:40:25.480" endtime="20201110 08:40:27.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.599" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 61471860, 'start-iter': 1, 'wakeups': [61481934, 61491935, 61501936, 6...</msg>
<status status="PASS" starttime="20201110 08:40:27.595" endtime="20201110 08:40:27.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.602" endtime="20201110 08:40:27.606"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.473" endtime="20201110 08:40:27.607"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.467" endtime="20201110 08:40:27.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:27.615" level="INFO">${RESULT} = {'wakeups': [61481934, 61491935, 61501936, 61511936, 61521936, 61531936, 61541936, 61551936, 61561936, 61571936, 61581936, 61591936, 61601936, 61611936, 61621936, 61631936, 61641936, 61651936, 6166193...</msg>
<status status="PASS" starttime="20201110 08:40:27.610" endtime="20201110 08:40:27.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.625" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:27.623" endtime="20201110 08:40:27.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.630" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:27.628" endtime="20201110 08:40:27.631"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.617" endtime="20201110 08:40:27.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.643" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:27.640" endtime="20201110 08:40:27.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.647" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:27.645" endtime="20201110 08:40:27.648"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.634" endtime="20201110 08:40:27.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.660" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:27.658" endtime="20201110 08:40:27.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.665" level="INFO">VALUE: 61471860</msg>
<status status="PASS" starttime="20201110 08:40:27.662" endtime="20201110 08:40:27.665"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.651" endtime="20201110 08:40:27.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.677" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:27.675" endtime="20201110 08:40:27.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:27.683" level="INFO">VALUE: [61481934, 61491935, 61501936, 61511936, 61521936, 61531936, 61541936, 61551936, 61561936, 61571936, 61581936, 61591936, 61601936, 61611936, 61621936, 61631936, 61641936, 61651936, 61661936, 61671936, 61681936, 61691936, 61701936, 61711936, 61721936, 61731936, 61741936, 61751936, 61761936, 61771936, 61781936, 61791936, 61801936, 61811936, 61821936, 61831936, 61841936, 61851936, 61861936, 61871936, 61881936, 61891936, 61901936, 61911936, 61921936, 61931936, 61941936, 61951936, 61961936, 61971936, 61981936, 61991936, 62001936, 62011936, 62021936, 62031936, 62041936, 62051936, 62061936, 62071936, 62081936, 62091936, 62101936, 62111936, 62121936, 62131936, 62141936, 62151936, 62161936, 62171936, 62181936, 62191936, 62201936, 62211936, 62221936, 62231936, 62241936, 62251936, 62261936, 62271936, 62281936, 62291936, 62301936, 62311936, 62321936, 62331936, 62341936, 62351936, 62361936, 62371936, 62381936, 62391936, 62401936, 62411936, 62421936, 62431936, 62441936, 62451936, 62461936, 62471936]</msg>
<status status="PASS" starttime="20201110 08:40:27.680" endtime="20201110 08:40:27.684"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.668" endtime="20201110 08:40:27.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:27.702" endtime="20201110 08:40:28.042"></status>
</kw>
<msg timestamp="20201110 08:40:28.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047145444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057220639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:27.699" endtime="20201110 08:40:28.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.047145444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.057220639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:28.046" endtime="20201110 08:40:28.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.053" endtime="20201110 08:40:28.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.692" endtime="20201110 08:40:28.056"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:27.687" endtime="20201110 08:40:28.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:28.082" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:28.058" endtime="20201110 08:40:28.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.088" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:28.086" endtime="20201110 08:40:28.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.090" level="INFO">VALUE: 0.047145444</msg>
<status status="PASS" starttime="20201110 08:40:28.089" endtime="20201110 08:40:28.090"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.083" endtime="20201110 08:40:28.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.096" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:28.095" endtime="20201110 08:40:28.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:28.098" level="INFO">VALUE: [0.057220639, 0.067222778, 0.077224833, 0.087225958, 0.097227014, 0.107228139, 0.117229194, 0.127230375, 0.137231389, 0.1472325, 0.157233556, 0.167234681, 0.177235736, 0.187236861, 0.197237917, 0.207239097, 0.217240125, 0.227241264, 0.237242278, 0.247243417, 0.257244458, 0.267245597, 0.277246653, 0.287247778, 0.297248819, 0.307249958, 0.317251028, 0.327252139, 0.337253208, 0.347254333, 0.357255389, 0.367256556, 0.377257583, 0.387258708, 0.397259764, 0.407260889, 0.417261931, 0.427263056, 0.437264111, 0.447265236, 0.457266278, 0.467267417, 0.477268472, 0.487269597, 0.497270653, 0.507271778, 0.517272847, 0.527273958, 0.537275028, 0.547276139, 0.557277208, 0.567278319, 0.577279375, 0.5872805, 0.597281583, 0.607282681, 0.617283736, 0.627284861, 0.637285917, 0.647287056, 0.657288097, 0.66728925, 0.677290306, 0.687291417, 0.697292472, 0.707293611, 0.717294694, 0.727295778, 0.737296833, 0.747297944, 0.757299, 0.767300125, 0.777301181, 0.787302319, 0.797303361, 0.807304486, 0.817305542, 0.827306667, 0.837307722, 0.847308847, 0.857309917, 0.867311056, 0.877312083, 0.887313208, 0.897314264, 0.907315472, 0.917316444, 0.927317569, 0.937318639, 0.94731975, 0.957320847, 0.967321931, 0.977322972, 0.987324125, 0.997325153, 1.007326292, 1.017327403, 1.027328472, 1.037329528, 1.047330653] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:28.097" endtime="20201110 08:40:28.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.091" endtime="20201110 08:40:28.099"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.102" endtime="20201110 08:40:28.104"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:28.107" endtime="20201110 08:40:28.126"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.104" endtime="20201110 08:40:28.127"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.100" endtime="20201110 08:40:28.128"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.463" endtime="20201110 08:40:28.128"></status>
</kw>
<msg timestamp="20201110 08:40:28.128" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:28.139" endtime="20201110 08:40:30.242"></status>
</kw>
<msg timestamp="20201110 08:40:30.243" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64123548, 'start-iter': 1, 'wakeups': [64133622, 64143623, 64153624, 6...</msg>
<status status="PASS" starttime="20201110 08:40:28.137" endtime="20201110 08:40:30.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.250" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 64123548, 'start-iter': 1, 'wakeups': [64133622, 64143623, 64153624, 6...</msg>
<status status="PASS" starttime="20201110 08:40:30.246" endtime="20201110 08:40:30.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.253" endtime="20201110 08:40:30.257"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.133" endtime="20201110 08:40:30.258"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.131" endtime="20201110 08:40:30.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:30.266" level="INFO">${RESULT} = {'wakeups': [64133622, 64143623, 64153624, 64163624, 64173624, 64183624, 64193624, 64203624, 64213624, 64223624, 64233624, 64243624, 64253624, 64263624, 64273624, 64283624, 64293624, 64303624, 6431362...</msg>
<status status="PASS" starttime="20201110 08:40:30.261" endtime="20201110 08:40:30.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.277" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:30.274" endtime="20201110 08:40:30.277"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.282" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:30.279" endtime="20201110 08:40:30.282"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.268" endtime="20201110 08:40:30.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.295" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:30.293" endtime="20201110 08:40:30.296"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.302" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:30.298" endtime="20201110 08:40:30.303"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.286" endtime="20201110 08:40:30.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.316" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:30.313" endtime="20201110 08:40:30.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.321" level="INFO">VALUE: 64123548</msg>
<status status="PASS" starttime="20201110 08:40:30.318" endtime="20201110 08:40:30.321"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.306" endtime="20201110 08:40:30.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.333" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:30.331" endtime="20201110 08:40:30.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.338" level="INFO">VALUE: [64133622, 64143623, 64153624, 64163624, 64173624, 64183624, 64193624, 64203624, 64213624, 64223624, 64233624, 64243624, 64253624, 64263624, 64273624, 64283624, 64293624, 64303624, 64313624, 64323624, 64333624, 64343624, 64353624, 64363624, 64373624, 64383624, 64393624, 64403624, 64413624, 64423624, 64433624, 64443624, 64453624, 64463624, 64473624, 64483624, 64493624, 64503624, 64513624, 64523624, 64533624, 64543624, 64553624, 64563624, 64573624, 64583624, 64593624, 64603624, 64613624, 64623624, 64633624, 64643624, 64653624, 64663624, 64673624, 64683624, 64693624, 64703624, 64713624, 64723624, 64733624, 64743624, 64753624, 64763624, 64773624, 64783624, 64793624, 64803624, 64813624, 64823624, 64833624, 64843624, 64853624, 64863624, 64873624, 64883624, 64893624, 64903624, 64913624, 64923624, 64933624, 64943624, 64953624, 64963624, 64973624, 64983624, 64993624, 65003624, 65013624, 65023624, 65033624, 65043624, 65053624, 65063624, 65073624, 65083624, 65093624, 65103624, 65113624, 65123624]</msg>
<status status="PASS" starttime="20201110 08:40:30.336" endtime="20201110 08:40:30.339"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.324" endtime="20201110 08:40:30.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.362" endtime="20201110 08:40:30.711"></status>
</kw>
<msg timestamp="20201110 08:40:30.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032392556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.359" endtime="20201110 08:40:30.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022316944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032392556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:30.720" endtime="20201110 08:40:30.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.737" endtime="20201110 08:40:30.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.352" endtime="20201110 08:40:30.742"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.342" endtime="20201110 08:40:30.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:30.799" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:30.746" endtime="20201110 08:40:30.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.810" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:30.808" endtime="20201110 08:40:30.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.815" level="INFO">VALUE: 0.022316944</msg>
<status status="PASS" starttime="20201110 08:40:30.812" endtime="20201110 08:40:30.817"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.801" endtime="20201110 08:40:30.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.830" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:30.828" endtime="20201110 08:40:30.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:30.835" level="INFO">VALUE: [0.032392556, 0.042394264, 0.052396306, 0.062397444, 0.072398486, 0.082399611, 0.092400667, 0.102401792, 0.112402833, 0.122403972, 0.132405014, 0.142406139, 0.152407236, 0.162408319, 0.172409375, 0.1824105, 0.192411542, 0.202412667, 0.212413736, 0.222414861, 0.232415903, 0.242417028, 0.252418069, 0.262419208, 0.27242025, 0.282421375, 0.292422431, 0.302423556, 0.312424625, 0.322425736, 0.332426778, 0.342427917, 0.352428958, 0.362430097, 0.372431153, 0.382432278, 0.392433319, 0.402434472, 0.412435514, 0.422436653, 0.432437681, 0.442438819, 0.452439903, 0.462440986, 0.472442028, 0.482443167, 0.492444208, 0.502445347, 0.512446444, 0.522447514, 0.532448625, 0.542449694, 0.552450764, 0.562451889, 0.572452917, 0.582454069, 0.592455111, 0.602456236, 0.612457278, 0.622458417, 0.632459458, 0.642460583, 0.652461708, 0.662462764, 0.672463875, 0.682465, 0.692465986, 0.702467139, 0.712468167, 0.722469306, 0.732470375, 0.742471486, 0.752472597, 0.762473667, 0.772474708, 0.782475833, 0.792476889, 0.802478014, 0.812479069, 0.822480194, 0.832481236, 0.842482389, 0.852483417, 0.862484597, 0.872485597, 0.882486722, 0.892487778, 0.902488903, 0.912489944, 0.922491083, 0.932492125, 0.942493264, 0.952494306, 0.962495458, 0.9724965, 0.982497625, 0.992498667, 1.002499792, 1.012500847, 1.022501986] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:30.832" endtime="20201110 08:40:30.836"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.820" endtime="20201110 08:40:30.837"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.844" endtime="20201110 08:40:30.846"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:30.852" endtime="20201110 08:40:30.874"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.848" endtime="20201110 08:40:30.875"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.839" endtime="20201110 08:40:30.877"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:28.129" endtime="20201110 08:40:30.878"></status>
</kw>
<msg timestamp="20201110 08:40:30.878" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 8 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:30.899" endtime="20201110 08:40:33.005"></status>
</kw>
<msg timestamp="20201110 08:40:33.007" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 66885884, 'start-iter': 1, 'wakeups': [66895958, 66905959, 66915960, 6...</msg>
<status status="PASS" starttime="20201110 08:40:30.896" endtime="20201110 08:40:33.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.015" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 8\r\n'], 'data': [{'timer-count': '8'}, {'timer-interval': '10000'}, {'start-time': 66885884, 'start-iter': 1, 'wakeups': [66895958, 66905959, 66915960, 6...</msg>
<status status="PASS" starttime="20201110 08:40:33.010" endtime="20201110 08:40:33.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.017" endtime="20201110 08:40:33.021"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.889" endtime="20201110 08:40:33.023"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.883" endtime="20201110 08:40:33.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:33.030" level="INFO">${RESULT} = {'wakeups': [66895958, 66905959, 66915960, 66925960, 66935960, 66945960, 66955960, 66965960, 66975960, 66985960, 66995960, 67005960, 67015960, 67025960, 67035960, 67045960, 67055960, 67065960, 6707596...</msg>
<status status="PASS" starttime="20201110 08:40:33.026" endtime="20201110 08:40:33.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.041" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:33.039" endtime="20201110 08:40:33.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.046" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:33.043" endtime="20201110 08:40:33.046"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.032" endtime="20201110 08:40:33.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.058" level="INFO">NAME: 8-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:33.056" endtime="20201110 08:40:33.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.063" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:33.060" endtime="20201110 08:40:33.064"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.049" endtime="20201110 08:40:33.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.076" level="INFO">NAME: dut-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:33.074" endtime="20201110 08:40:33.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.081" level="INFO">VALUE: 66885884</msg>
<status status="PASS" starttime="20201110 08:40:33.078" endtime="20201110 08:40:33.081"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.067" endtime="20201110 08:40:33.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.093" level="INFO">NAME: dut-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:33.091" endtime="20201110 08:40:33.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.098" level="INFO">VALUE: [66895958, 66905959, 66915960, 66925960, 66935960, 66945960, 66955960, 66965960, 66975960, 66985960, 66995960, 67005960, 67015960, 67025960, 67035960, 67045960, 67055960, 67065960, 67075960, 67085960, 67095960, 67105960, 67115960, 67125960, 67135960, 67145960, 67155960, 67165960, 67175960, 67185960, 67195960, 67205960, 67215960, 67225960, 67235960, 67245960, 67255960, 67265960, 67275960, 67285960, 67295960, 67305960, 67315960, 67325960, 67335960, 67345960, 67355960, 67365960, 67375960, 67385960, 67395960, 67405960, 67415960, 67425960, 67435960, 67445960, 67455960, 67465960, 67475960, 67485960, 67495960, 67505960, 67515960, 67525960, 67535960, 67545960, 67555960, 67565960, 67575960, 67585960, 67595960, 67605960, 67615960, 67625960, 67635960, 67645960, 67655960, 67665960, 67675960, 67685960, 67695960, 67705960, 67715960, 67725960, 67735960, 67745960, 67755960, 67765960, 67775960, 67785960, 67795960, 67805960, 67815960, 67825960, 67835960, 67845960, 67855960, 67865960, 67875960, 67885960]</msg>
<status status="PASS" starttime="20201110 08:40:33.096" endtime="20201110 08:40:33.099"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.084" endtime="20201110 08:40:33.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.119" endtime="20201110 08:40:33.461"></status>
</kw>
<msg timestamp="20201110 08:40:33.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038592806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048668653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.116" endtime="20201110 08:40:33.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.484" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038592806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.048668653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:33.469" endtime="20201110 08:40:33.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.487" endtime="20201110 08:40:33.491"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.107" endtime="20201110 08:40:33.493"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.102" endtime="20201110 08:40:33.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:33.551" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:33.496" endtime="20201110 08:40:33.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.561" level="INFO">NAME: hil-8-start-time</msg>
<status status="PASS" starttime="20201110 08:40:33.559" endtime="20201110 08:40:33.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.566" level="INFO">VALUE: 0.038592806</msg>
<status status="PASS" starttime="20201110 08:40:33.564" endtime="20201110 08:40:33.567"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.552" endtime="20201110 08:40:33.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.580" level="INFO">NAME: hil-8-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:33.578" endtime="20201110 08:40:33.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:33.585" level="INFO">VALUE: [0.048668653, 0.058670806, 0.068672847, 0.078673972, 0.088675, 0.098676139, 0.108677194, 0.118678306, 0.128679347, 0.138680528, 0.148681528, 0.158682653, 0.168683736, 0.178684847, 0.188685875, 0.198687028, 0.208688056, 0.218689181, 0.22869025, 0.238691361, 0.248692403, 0.258693542, 0.268694597, 0.278695708, 0.288696778, 0.298697903, 0.308698931, 0.318700069, 0.328701125, 0.338702236, 0.348703333, 0.358704417, 0.368705458, 0.378706597, 0.388707639, 0.398708833, 0.408709806, 0.418710944, 0.428711986, 0.438713139, 0.448714167, 0.458715292, 0.468716347, 0.4787175, 0.488718514, 0.498719722, 0.508720694, 0.518721875, 0.528722875, 0.538724028, 0.548725042, 0.558726194, 0.568727222, 0.578728347, 0.588729403, 0.598730528, 0.608731569, 0.618732722, 0.628733764, 0.638734875, 0.648735958, 0.658737056, 0.668738097, 0.678739236, 0.688740333, 0.698741444, 0.708742472, 0.718743583, 0.728744625, 0.738745764, 0.748746806, 0.758747944, 0.768749, 0.778750111, 0.788751181, 0.798752306, 0.808753333, 0.818754472, 0.828755514, 0.838756653, 0.848757694, 0.858758875, 0.868759875, 0.878761, 0.888762042, 0.898763167, 0.908764236, 0.918765403, 0.928766417, 0.938767528, 0.948768597, 0.958769694, 0.96877075, 0.978771875, 0.988772931, 0.998774069, 1.008775097, 1.018776236, 1.028777333, 1.038778403] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:33.582" endtime="20201110 08:40:33.585"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.570" endtime="20201110 08:40:33.587"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.593" endtime="20201110 08:40:33.596"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:33.602" endtime="20201110 08:40:33.624"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.598" endtime="20201110 08:40:33.626"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.589" endtime="20201110 08:40:33.627"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:30.880" endtime="20201110 08:40:33.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.459" endtime="20201110 08:40:33.628"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:25.457" endtime="20201110 08:40:33.629"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:33.635" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:33.658" endtime="20201110 08:40:35.763"></status>
</kw>
<msg timestamp="20201110 08:40:35.764" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69644059, 'start-iter': 1, 'wakeups': [69654143, 69664145, 69674145, 6...</msg>
<status status="PASS" starttime="20201110 08:40:33.654" endtime="20201110 08:40:35.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.771" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 69644059, 'start-iter': 1, 'wakeups': [69654143, 69664145, 69674145, 6...</msg>
<status status="PASS" starttime="20201110 08:40:35.767" endtime="20201110 08:40:35.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.774" endtime="20201110 08:40:35.778"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.645" endtime="20201110 08:40:35.779"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.640" endtime="20201110 08:40:35.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:35.793" level="INFO">${RESULT} = {'wakeups': [69654143, 69664145, 69674145, 69684145, 69694145, 69704145, 69714145, 69724145, 69734145, 69744145, 69754145, 69764145, 69774145, 69784145, 69794145, 69804145, 69814145, 69824145, 6983414...</msg>
<status status="PASS" starttime="20201110 08:40:35.788" endtime="20201110 08:40:35.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.803" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:35.801" endtime="20201110 08:40:35.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.808" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:35.806" endtime="20201110 08:40:35.809"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.795" endtime="20201110 08:40:35.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.820" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:35.818" endtime="20201110 08:40:35.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.825" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:35.823" endtime="20201110 08:40:35.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.812" endtime="20201110 08:40:35.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.838" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:35.836" endtime="20201110 08:40:35.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.842" level="INFO">VALUE: 69644059</msg>
<status status="PASS" starttime="20201110 08:40:35.840" endtime="20201110 08:40:35.843"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.829" endtime="20201110 08:40:35.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.855" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:35.853" endtime="20201110 08:40:35.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:35.860" level="INFO">VALUE: [69654143, 69664145, 69674145, 69684145, 69694145, 69704145, 69714145, 69724145, 69734145, 69744145, 69754145, 69764145, 69774145, 69784145, 69794145, 69804145, 69814145, 69824145, 69834145, 69844145, 69854145, 69864145, 69874145, 69884145, 69894145, 69904145, 69914145, 69924145, 69934145, 69944145, 69954145, 69964145, 69974145, 69984145, 69994145, 70004145, 70014145, 70024145, 70034145, 70044145, 70054145, 70064145, 70074145, 70084145, 70094145, 70104145, 70114145, 70124145, 70134145, 70144145, 70154145, 70164145, 70174145, 70184145, 70194145, 70204145, 70214145, 70224145, 70234145, 70244145, 70254145, 70264145, 70274145, 70284145, 70294145, 70304145, 70314145, 70324145, 70334145, 70344145, 70354145, 70364145, 70374145, 70384145, 70394145, 70404145, 70414145, 70424145, 70434145, 70444145, 70454145, 70464145, 70474145, 70484145, 70494145, 70504145, 70514145, 70524145, 70534145, 70544145, 70554145, 70564145, 70574145, 70584145, 70594145, 70604145, 70614145, 70624145, 70634145, 70644145]</msg>
<status status="PASS" starttime="20201110 08:40:35.857" endtime="20201110 08:40:35.861"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.846" endtime="20201110 08:40:35.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:35.880" endtime="20201110 08:40:36.208"></status>
</kw>
<msg timestamp="20201110 08:40:36.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046770861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056857139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:35.876" endtime="20201110 08:40:36.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046770861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056857139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:36.217" endtime="20201110 08:40:36.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.235" endtime="20201110 08:40:36.238"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.869" endtime="20201110 08:40:36.240"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:35.864" endtime="20201110 08:40:36.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:36.298" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:36.243" endtime="20201110 08:40:36.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.310" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:36.308" endtime="20201110 08:40:36.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.315" level="INFO">VALUE: 0.046770861</msg>
<status status="PASS" starttime="20201110 08:40:36.312" endtime="20201110 08:40:36.315"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.301" endtime="20201110 08:40:36.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.328" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:36.326" endtime="20201110 08:40:36.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:36.333" level="INFO">VALUE: [0.056857139, 0.066860375, 0.076861042, 0.086862569, 0.096863292, 0.106864736, 0.116865389, 0.126866889, 0.136867569, 0.146869069, 0.15686975, 0.166871236, 0.176871917, 0.186873403, 0.196874069, 0.206875639, 0.21687625, 0.226877792, 0.236878417, 0.246879931, 0.256880597, 0.266882097, 0.276882764, 0.286884278, 0.296884944, 0.306886458, 0.316887111, 0.326888625, 0.336889292, 0.346890819, 0.356891472, 0.366892972, 0.376893639, 0.386895153, 0.396895806, 0.406897319, 0.416897986, 0.426899486, 0.436900181, 0.446901667, 0.456902347, 0.466903833, 0.476904528, 0.486906014, 0.496906708, 0.506908236, 0.516908861, 0.526910375, 0.536911028, 0.546912528, 0.556913208, 0.56691475, 0.576915458, 0.586916917, 0.596917556, 0.606919069, 0.616919722, 0.626921264, 0.636921903, 0.646923403, 0.656924097, 0.666925583, 0.67692625, 0.68692775, 0.696928431, 0.706929944, 0.716930597, 0.726932111, 0.736932764, 0.746934278, 0.756934944, 0.766936472, 0.776937181, 0.786938625, 0.796939292, 0.806940792, 0.816941472, 0.826942986, 0.836943653, 0.846945153, 0.856945819, 0.866947375, 0.876948, 0.886949486, 0.896950167, 0.906951667, 0.916952333, 0.926953875, 0.936954514, 0.946956042, 0.956956681, 0.966958194, 0.976958861, 0.986960375, 0.996961097, 1.006962597, 1.016963208, 1.026964708, 1.036965389, 1.046966903] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:36.331" endtime="20201110 08:40:36.334"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.318" endtime="20201110 08:40:36.336"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.342" endtime="20201110 08:40:36.345"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:36.351" endtime="20201110 08:40:36.372"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.346" endtime="20201110 08:40:36.374"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.337" endtime="20201110 08:40:36.376"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.636" endtime="20201110 08:40:36.376"></status>
</kw>
<msg timestamp="20201110 08:40:36.377" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:36.399" endtime="20201110 08:40:38.504"></status>
</kw>
<msg timestamp="20201110 08:40:38.505" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72385109, 'start-iter': 1, 'wakeups': [72395193, 72405195, 72415195, 7...</msg>
<status status="PASS" starttime="20201110 08:40:36.395" endtime="20201110 08:40:38.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.512" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 72385109, 'start-iter': 1, 'wakeups': [72395193, 72405195, 72415195, 7...</msg>
<status status="PASS" starttime="20201110 08:40:38.508" endtime="20201110 08:40:38.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.515" endtime="20201110 08:40:38.519"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.388" endtime="20201110 08:40:38.520"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.382" endtime="20201110 08:40:38.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:38.528" level="INFO">${RESULT} = {'wakeups': [72395193, 72405195, 72415195, 72425195, 72435195, 72445195, 72455195, 72465195, 72475195, 72485195, 72495195, 72505195, 72515195, 72525195, 72535195, 72545195, 72555195, 72565195, 7257519...</msg>
<status status="PASS" starttime="20201110 08:40:38.523" endtime="20201110 08:40:38.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.539" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:38.536" endtime="20201110 08:40:38.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.544" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:38.541" endtime="20201110 08:40:38.545"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.530" endtime="20201110 08:40:38.547"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.558" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:38.556" endtime="20201110 08:40:38.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.563" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:38.561" endtime="20201110 08:40:38.564"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.549" endtime="20201110 08:40:38.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.578" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:38.576" endtime="20201110 08:40:38.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.583" level="INFO">VALUE: 72385109</msg>
<status status="PASS" starttime="20201110 08:40:38.581" endtime="20201110 08:40:38.584"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.567" endtime="20201110 08:40:38.585"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.596" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:38.593" endtime="20201110 08:40:38.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.601" level="INFO">VALUE: [72395193, 72405195, 72415195, 72425195, 72435195, 72445195, 72455195, 72465195, 72475195, 72485195, 72495195, 72505195, 72515195, 72525195, 72535195, 72545195, 72555195, 72565195, 72575195, 72585195, 72595195, 72605195, 72615195, 72625195, 72635195, 72645195, 72655195, 72665195, 72675195, 72685195, 72695195, 72705195, 72715195, 72725195, 72735195, 72745195, 72755195, 72765195, 72775195, 72785195, 72795195, 72805195, 72815195, 72825195, 72835195, 72845195, 72855195, 72865195, 72875195, 72885195, 72895195, 72905195, 72915195, 72925195, 72935195, 72945195, 72955195, 72965195, 72975195, 72985195, 72995195, 73005195, 73015195, 73025195, 73035195, 73045195, 73055195, 73065195, 73075195, 73085195, 73095195, 73105195, 73115195, 73125195, 73135195, 73145195, 73155195, 73165195, 73175195, 73185195, 73195195, 73205195, 73215195, 73225195, 73235195, 73245195, 73255195, 73265195, 73275195, 73285195, 73295195, 73305195, 73315195, 73325195, 73335195, 73345195, 73355195, 73365195, 73375195, 73385195]</msg>
<status status="PASS" starttime="20201110 08:40:38.598" endtime="20201110 08:40:38.601"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.587" endtime="20201110 08:40:38.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.620" endtime="20201110 08:40:38.968"></status>
</kw>
<msg timestamp="20201110 08:40:38.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039164056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049250403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:38.617" endtime="20201110 08:40:38.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:38.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039164056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049250403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:38.977" endtime="20201110 08:40:38.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:38.994" endtime="20201110 08:40:38.998"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.609" endtime="20201110 08:40:39.000"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:38.604" endtime="20201110 08:40:39.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:39.057" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:39.003" endtime="20201110 08:40:39.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.068" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:39.065" endtime="20201110 08:40:39.068"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.072" level="INFO">VALUE: 0.039164056</msg>
<status status="PASS" starttime="20201110 08:40:39.070" endtime="20201110 08:40:39.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.059" endtime="20201110 08:40:39.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.087" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:39.083" endtime="20201110 08:40:39.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:39.094" level="INFO">VALUE: [0.049250403, 0.059253583, 0.069254306, 0.079255736, 0.089256431, 0.099257917, 0.109258583, 0.119260083, 0.129260736, 0.13926225, 0.149262917, 0.159264417, 0.169265097, 0.179266583, 0.189267264, 0.199268806, 0.209269431, 0.219270917, 0.229271583, 0.239273097, 0.249273764, 0.259275264, 0.269275944, 0.279277431, 0.289278111, 0.299279611, 0.309280292, 0.319281833, 0.329282444, 0.339283958, 0.349284611, 0.359286125, 0.369286792, 0.379288306, 0.389288972, 0.399290486, 0.409291125, 0.419292639, 0.429293306, 0.439294819, 0.449295472, 0.459296972, 0.469297639, 0.479299167, 0.489299833, 0.499301333, 0.509301986, 0.519303486, 0.529304181, 0.539305708, 0.549306333, 0.559307833, 0.5693085, 0.579310014, 0.589310764, 0.599312181, 0.609312861, 0.619314347, 0.629315014, 0.639316597, 0.649317194, 0.659318694, 0.669319361, 0.679320861, 0.689321528, 0.699323042, 0.709323722, 0.719325208, 0.729325944, 0.739327389, 0.749328111, 0.759329569, 0.769330222, 0.779331722, 0.789332389, 0.799333889, 0.809334556, 0.819336097, 0.829336736, 0.839338236, 0.849338903, 0.859340403, 0.869341069, 0.879342583, 0.88934325, 0.89934475, 0.909345417, 0.919346931, 0.929347611, 0.939349097, 0.949349764, 0.959351278, 0.969352, 0.979353431, 0.989354139, 0.999355639, 1.009356292, 1.019357778, 1.029358444, 1.039359944] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:39.089" endtime="20201110 08:40:39.095"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.076" endtime="20201110 08:40:39.097"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.103" endtime="20201110 08:40:39.106"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:39.112" endtime="20201110 08:40:39.133"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.107" endtime="20201110 08:40:39.135"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.099" endtime="20201110 08:40:39.137"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:36.378" endtime="20201110 08:40:39.137"></status>
</kw>
<msg timestamp="20201110 08:40:39.138" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 9 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:39.159" endtime="20201110 08:40:41.264"></status>
</kw>
<msg timestamp="20201110 08:40:41.266" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 75145668, 'start-iter': 1, 'wakeups': [75155752, 75165754, 75175754, 7...</msg>
<status status="PASS" starttime="20201110 08:40:39.156" endtime="20201110 08:40:41.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.273" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 9\r\n'], 'data': [{'timer-count': '9'}, {'timer-interval': '10000'}, {'start-time': 75145668, 'start-iter': 1, 'wakeups': [75155752, 75165754, 75175754, 7...</msg>
<status status="PASS" starttime="20201110 08:40:41.268" endtime="20201110 08:40:41.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.275" endtime="20201110 08:40:41.279"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.148" endtime="20201110 08:40:41.281"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.143" endtime="20201110 08:40:41.282"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:41.289" level="INFO">${RESULT} = {'wakeups': [75155752, 75165754, 75175754, 75185754, 75195754, 75205754, 75215754, 75225754, 75235754, 75245754, 75255754, 75265754, 75275754, 75285754, 75295754, 75305754, 75315754, 75325754, 7533575...</msg>
<status status="PASS" starttime="20201110 08:40:41.284" endtime="20201110 08:40:41.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.299" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:41.297" endtime="20201110 08:40:41.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.304" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:41.302" endtime="20201110 08:40:41.305"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.291" endtime="20201110 08:40:41.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.316" level="INFO">NAME: 9-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:41.314" endtime="20201110 08:40:41.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.321" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:41.319" endtime="20201110 08:40:41.322"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.307" endtime="20201110 08:40:41.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.339" level="INFO">NAME: dut-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:41.331" endtime="20201110 08:40:41.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.343" level="INFO">VALUE: 75145668</msg>
<status status="PASS" starttime="20201110 08:40:41.341" endtime="20201110 08:40:41.344"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.325" endtime="20201110 08:40:41.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.356" level="INFO">NAME: dut-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:41.354" endtime="20201110 08:40:41.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.361" level="INFO">VALUE: [75155752, 75165754, 75175754, 75185754, 75195754, 75205754, 75215754, 75225754, 75235754, 75245754, 75255754, 75265754, 75275754, 75285754, 75295754, 75305754, 75315754, 75325754, 75335754, 75345754, 75355754, 75365754, 75375754, 75385754, 75395754, 75405754, 75415754, 75425754, 75435754, 75445754, 75455754, 75465754, 75475754, 75485754, 75495754, 75505754, 75515754, 75525754, 75535754, 75545754, 75555754, 75565754, 75575754, 75585754, 75595754, 75605754, 75615754, 75625754, 75635754, 75645754, 75655754, 75665754, 75675754, 75685754, 75695754, 75705754, 75715754, 75725754, 75735754, 75745754, 75755754, 75765754, 75775754, 75785754, 75795754, 75805754, 75815754, 75825754, 75835754, 75845754, 75855754, 75865754, 75875754, 75885754, 75895754, 75905754, 75915754, 75925754, 75935754, 75945754, 75955754, 75965754, 75975754, 75985754, 75995754, 76005754, 76015754, 76025754, 76035754, 76045754, 76055754, 76065754, 76075754, 76085754, 76095754, 76105754, 76115754, 76125754, 76135754, 76145754]</msg>
<status status="PASS" starttime="20201110 08:40:41.359" endtime="20201110 08:40:41.362"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.347" endtime="20201110 08:40:41.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.381" endtime="20201110 08:40:41.721"></status>
</kw>
<msg timestamp="20201110 08:40:41.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038920875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049007486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.377" endtime="20201110 08:40:41.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038920875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049007486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:41.731" endtime="20201110 08:40:41.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.748" endtime="20201110 08:40:41.752"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.370" endtime="20201110 08:40:41.753"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.365" endtime="20201110 08:40:41.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:41.810" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:41.757" endtime="20201110 08:40:41.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.821" level="INFO">NAME: hil-9-start-time</msg>
<status status="PASS" starttime="20201110 08:40:41.819" endtime="20201110 08:40:41.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.826" level="INFO">VALUE: 0.038920875</msg>
<status status="PASS" starttime="20201110 08:40:41.823" endtime="20201110 08:40:41.826"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.812" endtime="20201110 08:40:41.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.840" level="INFO">NAME: hil-9-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:41.837" endtime="20201110 08:40:41.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:41.844" level="INFO">VALUE: [0.049007486, 0.059010736, 0.069011389, 0.079012875, 0.089013542, 0.099015042, 0.109015708, 0.119017208, 0.129017931, 0.139019389, 0.149020056, 0.159021556, 0.169022236, 0.179023736, 0.189024389, 0.199025889, 0.209026556, 0.219028056, 0.229028792, 0.239030222, 0.249030903, 0.259032389, 0.269033056, 0.279034556, 0.289035222, 0.299036722, 0.309037389, 0.319038889, 0.329039556, 0.339041083, 0.349041736, 0.359043236, 0.369043903, 0.379045403, 0.389046083, 0.399047569, 0.409048236, 0.419049778, 0.429050403, 0.439051958, 0.449052583, 0.459054083, 0.469054764, 0.47905625, 0.489056917, 0.499058472, 0.509059097, 0.519060625, 0.52906125, 0.539062778, 0.549063431, 0.559065, 0.569065597, 0.579067097, 0.589067833, 0.599069278, 0.609069931, 0.619071444, 0.629072097, 0.639073667, 0.649074278, 0.659075778, 0.669076444, 0.679077944, 0.689078611, 0.699080125, 0.709080778, 0.719082278, 0.729082944, 0.739084458, 0.749085181, 0.759086625, 0.769087292, 0.779088806, 0.7890895, 0.799090972, 0.809091625, 0.819093125, 0.829093792, 0.839095292, 0.849095958, 0.859097472, 0.869098139, 0.879099653, 0.889100319, 0.899101806, 0.909102472, 0.919104014, 0.929104653, 0.939106139, 0.949106806, 0.959108306, 0.969108972, 0.979110486, 0.989111181, 0.999112653, 1.009113361, 1.019114819, 1.029115514, 1.039117] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:41.842" endtime="20201110 08:40:41.846"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.829" endtime="20201110 08:40:41.848"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.854" endtime="20201110 08:40:41.857"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:41.863" endtime="20201110 08:40:41.884"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.858" endtime="20201110 08:40:41.886"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.849" endtime="20201110 08:40:41.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:39.139" endtime="20201110 08:40:41.888"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.631" endtime="20201110 08:40:41.889"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:33.630" endtime="20201110 08:40:41.889"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Repeat Keyword" library="BuiltIn">
<doc>Executes the specified keyword multiple times.</doc>
<arguments>
<arg>3</arg>
<arg>Measure Sleep Jitter With ${n + 1} Timers</arg>
</arguments>
<msg timestamp="20201110 08:40:41.895" level="INFO">Repeating keyword, round 1/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:41.918" endtime="20201110 08:40:44.023"></status>
</kw>
<msg timestamp="20201110 08:40:44.025" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77904599, 'start-iter': 1, 'wakeups': [77914697, 77924697, 77934697,...</msg>
<status status="PASS" starttime="20201110 08:40:41.913" endtime="20201110 08:40:44.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.032" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 77904599, 'start-iter': 1, 'wakeups': [77914697, 77924697, 77934697,...</msg>
<status status="PASS" starttime="20201110 08:40:44.027" endtime="20201110 08:40:44.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.034" endtime="20201110 08:40:44.038"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.906" endtime="20201110 08:40:44.040"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.900" endtime="20201110 08:40:44.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:44.048" level="INFO">${RESULT} = {'wakeups': [77914697, 77924697, 77934697, 77944697, 77954697, 77964697, 77974697, 77984697, 77994697, 78004697, 78014697, 78024697, 78034697, 78044697, 78054697, 78064697, 78074697, 78084697, 7809469...</msg>
<status status="PASS" starttime="20201110 08:40:44.043" endtime="20201110 08:40:44.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.058" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:44.056" endtime="20201110 08:40:44.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.062" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:44.060" endtime="20201110 08:40:44.063"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.049" endtime="20201110 08:40:44.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.075" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:44.073" endtime="20201110 08:40:44.076"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.080" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:44.078" endtime="20201110 08:40:44.080"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.066" endtime="20201110 08:40:44.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.092" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:44.090" endtime="20201110 08:40:44.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.097" level="INFO">VALUE: 77904599</msg>
<status status="PASS" starttime="20201110 08:40:44.095" endtime="20201110 08:40:44.098"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.083" endtime="20201110 08:40:44.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.110" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:44.107" endtime="20201110 08:40:44.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.115" level="INFO">VALUE: [77914697, 77924697, 77934697, 77944697, 77954697, 77964697, 77974697, 77984697, 77994697, 78004697, 78014697, 78024697, 78034697, 78044697, 78054697, 78064697, 78074697, 78084697, 78094697, 78104697, 78114697, 78124697, 78134697, 78144697, 78154697, 78164697, 78174697, 78184697, 78194697, 78204697, 78214697, 78224697, 78234697, 78244697, 78254697, 78264697, 78274697, 78284697, 78294697, 78304697, 78314697, 78324697, 78334697, 78344697, 78354697, 78364697, 78374697, 78384697, 78394697, 78404697, 78414697, 78424697, 78434697, 78444697, 78454697, 78464697, 78474697, 78484697, 78494697, 78504697, 78514697, 78524697, 78534697, 78544697, 78554697, 78564697, 78574697, 78584697, 78594697, 78604697, 78614697, 78624697, 78634697, 78644697, 78654697, 78664697, 78674697, 78684697, 78694697, 78704697, 78714697, 78724697, 78734697, 78744697, 78754697, 78764697, 78774697, 78784697, 78794697, 78804697, 78814697, 78824697, 78834697, 78844697, 78854697, 78864697, 78874697, 78884697, 78894697, 78904697]</msg>
<status status="PASS" starttime="20201110 08:40:44.112" endtime="20201110 08:40:44.116"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.101" endtime="20201110 08:40:44.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.135" endtime="20201110 08:40:44.452"></status>
</kw>
<msg timestamp="20201110 08:40:44.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046817472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056916375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:44.131" endtime="20201110 08:40:44.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046817472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.056916375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:44.456" endtime="20201110 08:40:44.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.464" endtime="20201110 08:40:44.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.124" endtime="20201110 08:40:44.466"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.119" endtime="20201110 08:40:44.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:44.495" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:44.468" endtime="20201110 08:40:44.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.506" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:44.503" endtime="20201110 08:40:44.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.510" level="INFO">VALUE: 0.046817472</msg>
<status status="PASS" starttime="20201110 08:40:44.508" endtime="20201110 08:40:44.511"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.497" endtime="20201110 08:40:44.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.524" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:44.522" endtime="20201110 08:40:44.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:44.529" level="INFO">VALUE: [0.056916375, 0.066917597, 0.076918625, 0.086919764, 0.096920806, 0.106921944, 0.116923, 0.126924111, 0.136925153, 0.146926292, 0.156927333, 0.166928472, 0.176929569, 0.186930639, 0.196931736, 0.206932833, 0.216933889, 0.226935, 0.236936042, 0.246937194, 0.256938222, 0.266939361, 0.276940417, 0.286941542, 0.296942597, 0.306943722, 0.316944764, 0.326945903, 0.336946944, 0.346948069, 0.356949125, 0.36695025, 0.376951375, 0.386952444, 0.3969535, 0.406954611, 0.416955722, 0.426956806, 0.436957861, 0.446958986, 0.456960028, 0.466961153, 0.476962194, 0.486963375, 0.496964375, 0.506965514, 0.516966556, 0.526967694, 0.53696875, 0.546969889, 0.556970931, 0.566972083, 0.576973097, 0.58697425, 0.596975278, 0.606976417, 0.616977458, 0.626978597, 0.636979639, 0.646980778, 0.656981819, 0.666982944, 0.676984014, 0.686985139, 0.696986194, 0.706987319, 0.716988431, 0.726989486, 0.736990556, 0.746991667, 0.756992722, 0.766993847, 0.776994889, 0.786996028, 0.796997069, 0.806998222, 0.816999333, 0.827000389, 0.837001486, 0.847002597, 0.857003611, 0.867004764, 0.877005875, 0.887006931, 0.897007972, 0.907009097, 0.917010167, 0.927011278, 0.937012347, 0.947013458, 0.957014528, 0.967015653, 0.977016681, 0.987017833, 0.997018861, 1.00702, 1.017021042, 1.027022208, 1.037023222, 1.047024361] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:44.527" endtime="20201110 08:40:44.530"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.514" endtime="20201110 08:40:44.531"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.538" endtime="20201110 08:40:44.541"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:44.547" endtime="20201110 08:40:44.569"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.542" endtime="20201110 08:40:44.570"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.533" endtime="20201110 08:40:44.572"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.897" endtime="20201110 08:40:44.573"></status>
</kw>
<msg timestamp="20201110 08:40:44.574" level="INFO">Repeating keyword, round 2/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:44.596" endtime="20201110 08:40:46.701"></status>
</kw>
<msg timestamp="20201110 08:40:46.703" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80582287, 'start-iter': 1, 'wakeups': [80592386, 80602388, 80612388,...</msg>
<status status="PASS" starttime="20201110 08:40:44.592" endtime="20201110 08:40:46.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.710" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 80582287, 'start-iter': 1, 'wakeups': [80592386, 80602388, 80612388,...</msg>
<status status="PASS" starttime="20201110 08:40:46.705" endtime="20201110 08:40:46.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:46.712" endtime="20201110 08:40:46.716"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.585" endtime="20201110 08:40:46.718"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.579" endtime="20201110 08:40:46.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:46.726" level="INFO">${RESULT} = {'wakeups': [80592386, 80602388, 80612388, 80622388, 80632388, 80642388, 80652388, 80662388, 80672388, 80682388, 80692388, 80702388, 80712388, 80722388, 80732388, 80742388, 80752388, 80762388, 8077238...</msg>
<status status="PASS" starttime="20201110 08:40:46.721" endtime="20201110 08:40:46.726"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.736" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:46.734" endtime="20201110 08:40:46.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.741" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:46.738" endtime="20201110 08:40:46.741"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.727" endtime="20201110 08:40:46.743"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.753" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:46.751" endtime="20201110 08:40:46.754"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.761" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:46.756" endtime="20201110 08:40:46.762"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.744" endtime="20201110 08:40:46.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.774" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:46.772" endtime="20201110 08:40:46.775"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.779" level="INFO">VALUE: 80582287</msg>
<status status="PASS" starttime="20201110 08:40:46.777" endtime="20201110 08:40:46.780"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.765" endtime="20201110 08:40:46.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.793" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:46.790" endtime="20201110 08:40:46.793"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:46.798" level="INFO">VALUE: [80592386, 80602388, 80612388, 80622388, 80632388, 80642388, 80652388, 80662388, 80672388, 80682388, 80692388, 80702388, 80712388, 80722388, 80732388, 80742388, 80752388, 80762388, 80772388, 80782388, 80792388, 80802388, 80812388, 80822388, 80832388, 80842388, 80852388, 80862388, 80872388, 80882388, 80892388, 80902388, 80912388, 80922388, 80932388, 80942388, 80952388, 80962388, 80972388, 80982388, 80992388, 81002388, 81012388, 81022388, 81032388, 81042388, 81052388, 81062388, 81072388, 81082388, 81092388, 81102388, 81112388, 81122388, 81132388, 81142388, 81152388, 81162388, 81172388, 81182388, 81192388, 81202388, 81212388, 81222388, 81232388, 81242388, 81252388, 81262388, 81272388, 81282388, 81292388, 81302388, 81312388, 81322388, 81332388, 81342388, 81352388, 81362388, 81372388, 81382388, 81392388, 81402388, 81412388, 81422388, 81432388, 81442388, 81452388, 81462388, 81472388, 81482388, 81492388, 81502388, 81512388, 81522388, 81532388, 81542388, 81552388, 81562388, 81572388, 81582388]</msg>
<status status="PASS" starttime="20201110 08:40:46.795" endtime="20201110 08:40:46.799"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.783" endtime="20201110 08:40:46.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:46.819" endtime="20201110 08:40:47.167"></status>
</kw>
<msg timestamp="20201110 08:40:47.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040361653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050462111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:46.816" endtime="20201110 08:40:47.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040361653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050462111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:47.176" endtime="20201110 08:40:47.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.193" endtime="20201110 08:40:47.197"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.808" endtime="20201110 08:40:47.199"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:46.802" endtime="20201110 08:40:47.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:47.255" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:47.202" endtime="20201110 08:40:47.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.266" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:47.264" endtime="20201110 08:40:47.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.271" level="INFO">VALUE: 0.040361653</msg>
<status status="PASS" starttime="20201110 08:40:47.269" endtime="20201110 08:40:47.273"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.257" endtime="20201110 08:40:47.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.286" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:47.283" endtime="20201110 08:40:47.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:47.291" level="INFO">VALUE: [0.050462111, 0.060464903, 0.070465944, 0.080467097, 0.090468125, 0.100469264, 0.110470306, 0.120471444, 0.130472472, 0.140473667, 0.150474639, 0.160475778, 0.170476819, 0.180477944, 0.190479014, 0.200480125, 0.210481167, 0.220482319, 0.230483347, 0.240484472, 0.250485569, 0.260486694, 0.270487694, 0.280488833, 0.290489875, 0.300491, 0.310492056, 0.320493194, 0.330494236, 0.340495361, 0.350496417, 0.360497542, 0.370498653, 0.380499708, 0.390500778, 0.400501889, 0.410502944, 0.420504069, 0.430505111, 0.44050625, 0.450507292, 0.460508417, 0.470509472, 0.480510597, 0.490511667, 0.500512819, 0.510513833, 0.520514958, 0.530516, 0.540517139, 0.550518194, 0.560519319, 0.570520403, 0.580521542, 0.590522542, 0.600523667, 0.610524708, 0.620525847, 0.630526889, 0.640528028, 0.650529083, 0.660530222, 0.670531236, 0.680532375, 0.690533417, 0.700534542, 0.710535611, 0.720536736, 0.730537764, 0.740538903, 0.750539944, 0.760541083, 0.770542139, 0.78054325, 0.790544306, 0.800545444, 0.810546472, 0.820547625, 0.830548653, 0.840549792, 0.850550833, 0.860551972, 0.870553028, 0.880554139, 0.890555194, 0.900556319, 0.910557361, 0.920558542, 0.930559556, 0.940560681, 0.950561722, 0.960562847, 0.970563903, 0.980565028, 0.990566083, 1.000567222, 1.01056825, 1.020569375, 1.030570444, 1.040571569] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:47.288" endtime="20201110 08:40:47.291"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.276" endtime="20201110 08:40:47.293"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.300" endtime="20201110 08:40:47.302"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:47.308" endtime="20201110 08:40:47.328"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.304" endtime="20201110 08:40:47.329"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.295" endtime="20201110 08:40:47.330"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:44.575" endtime="20201110 08:40:47.330"></status>
</kw>
<msg timestamp="20201110 08:40:47.330" level="INFO">Repeating keyword, round 3/3.</msg>
<kw name="Measure Sleep Jitter With 10 Timers">
<doc>Run the sleep jitter benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:47.341" endtime="20201110 08:40:49.444"></status>
</kw>
<msg timestamp="20201110 08:40:49.445" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 83325339, 'start-iter': 1, 'wakeups': [83335438, 83345440, 83355440,...</msg>
<status status="PASS" starttime="20201110 08:40:47.339" endtime="20201110 08:40:49.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.453" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'timer-count': '10'}, {'timer-interval': '10000'}, {'start-time': 83325339, 'start-iter': 1, 'wakeups': [83335438, 83345440, 83355440,...</msg>
<status status="PASS" starttime="20201110 08:40:49.448" endtime="20201110 08:40:49.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.456" endtime="20201110 08:40:49.459"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.336" endtime="20201110 08:40:49.461"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.333" endtime="20201110 08:40:49.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:49.469" level="INFO">${RESULT} = {'wakeups': [83335438, 83345440, 83355440, 83365440, 83375440, 83385440, 83395440, 83405440, 83415440, 83425440, 83435440, 83445440, 83455440, 83465440, 83475440, 83485440, 83495440, 83505440, 8351544...</msg>
<status status="PASS" starttime="20201110 08:40:49.464" endtime="20201110 08:40:49.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-interval</arg>
<arg>${RESULT['timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.479" level="INFO">NAME: timer-interval</msg>
<status status="PASS" starttime="20201110 08:40:49.477" endtime="20201110 08:40:49.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.486" level="INFO">VALUE: 10000</msg>
<status status="PASS" starttime="20201110 08:40:49.483" endtime="20201110 08:40:49.487"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.471" endtime="20201110 08:40:49.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${timer_count}-start-iter</arg>
<arg>${RESULT['start-iter']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.500" level="INFO">NAME: 10-start-iter</msg>
<status status="PASS" starttime="20201110 08:40:49.498" endtime="20201110 08:40:49.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.505" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201110 08:40:49.503" endtime="20201110 08:40:49.506"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.491" endtime="20201110 08:40:49.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-start-time</arg>
<arg>${RESULT['start-time']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.518" level="INFO">NAME: dut-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:49.516" endtime="20201110 08:40:49.519"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.522" level="INFO">VALUE: 83325339</msg>
<status status="PASS" starttime="20201110 08:40:49.520" endtime="20201110 08:40:49.523"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.509" endtime="20201110 08:40:49.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>dut-${timer_count}-wakeup-time</arg>
<arg>${RESULT['wakeups']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.535" level="INFO">NAME: dut-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:49.533" endtime="20201110 08:40:49.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.540" level="INFO">VALUE: [83335438, 83345440, 83355440, 83365440, 83375440, 83385440, 83395440, 83405440, 83415440, 83425440, 83435440, 83445440, 83455440, 83465440, 83475440, 83485440, 83495440, 83505440, 83515440, 83525440, 83535440, 83545440, 83555440, 83565440, 83575440, 83585440, 83595440, 83605440, 83615440, 83625440, 83635440, 83645440, 83655440, 83665440, 83675440, 83685440, 83695440, 83705440, 83715440, 83725440, 83735440, 83745440, 83755440, 83765440, 83775440, 83785440, 83795440, 83805440, 83815440, 83825440, 83835440, 83845440, 83855440, 83865440, 83875440, 83885440, 83895440, 83905440, 83915440, 83925440, 83935440, 83945440, 83955440, 83965440, 83975440, 83985440, 83995440, 84005440, 84015440, 84025440, 84035440, 84045440, 84055440, 84065440, 84075440, 84085440, 84095440, 84105440, 84115440, 84125440, 84135440, 84145440, 84155440, 84165440, 84175440, 84185440, 84195440, 84205440, 84215440, 84225440, 84235440, 84245440, 84255440, 84265440, 84275440, 84285440, 84295440, 84305440, 84315440, 84325440]</msg>
<status status="PASS" starttime="20201110 08:40:49.538" endtime="20201110 08:40:49.541"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.526" endtime="20201110 08:40:49.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.562" endtime="20201110 08:40:49.907"></status>
</kw>
<msg timestamp="20201110 08:40:49.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032070472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.558" endtime="20201110 08:40:49.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201110 08:40:49.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032070472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201110 08:40:49.916" endtime="20201110 08:40:49.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:49.934" endtime="20201110 08:40:49.938"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.549" endtime="20201110 08:40:49.940"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.544" endtime="20201110 08:40:49.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201110 08:40:49.996" level="INFO">${RESULT} = {'source': ['DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC', 'DUT_IC'...</msg>
<status status="PASS" starttime="20201110 08:40:49.943" endtime="20201110 08:40:49.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-start-time</arg>
<arg>${RESULT['time'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.007" level="INFO">NAME: hil-10-start-time</msg>
<status status="PASS" starttime="20201110 08:40:50.005" endtime="20201110 08:40:50.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.012" level="INFO">VALUE: 0.021970028</msg>
<status status="PASS" starttime="20201110 08:40:50.010" endtime="20201110 08:40:50.013"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:49.998" endtime="20201110 08:40:50.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>hil-${timer_count}-wakeup-time</arg>
<arg>${RESULT['time'][1:-1]} # exclude start event</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.026" level="INFO">NAME: hil-10-wakeup-time</msg>
<status status="PASS" starttime="20201110 08:40:50.023" endtime="20201110 08:40:50.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201110 08:40:50.031" level="INFO">VALUE: [0.032070472, 0.042073306, 0.052074333, 0.062075458, 0.0720765, 0.082077653, 0.092078681, 0.102079806, 0.112080847, 0.122081986, 0.132083028, 0.142084167, 0.152085264, 0.162086319, 0.172087417, 0.1820885, 0.192089542, 0.202090681, 0.212091708, 0.222092847, 0.232093889, 0.242095028, 0.252096056, 0.262097194, 0.27209825, 0.282099361, 0.292100417, 0.302101611, 0.312102597, 0.322103708, 0.33210475, 0.342105903, 0.352106931, 0.362108111, 0.372109111, 0.382110236, 0.392111333, 0.402112417, 0.412113472, 0.422114583, 0.432115625, 0.442116764, 0.452117833, 0.462118931, 0.47212, 0.482121153, 0.492122153, 0.502123292, 0.512124333, 0.522125458, 0.5321265, 0.542127639, 0.552128681, 0.562129806, 0.572130847, 0.582132, 0.592133056, 0.602134153, 0.612135222, 0.622136347, 0.632137375, 0.642138514, 0.652139556, 0.662140681, 0.672141722, 0.682142889, 0.692143903, 0.702145028, 0.712146069, 0.722147208, 0.732148264, 0.742149389, 0.752150486, 0.762151569, 0.772152611, 0.782153736, 0.792154778, 0.802155917, 0.812156944, 0.822158111, 0.832159139, 0.84216025, 0.852161292, 0.862162431, 0.872163472, 0.882164653, 0.892165653, 0.902166792, 0.912167819, 0.922168944, 0.93217, 0.942171139, 0.952172181, 0.962173319, 0.972174347, 0.982175472, 0.992176514, 1.002177667, 1.012178694, 1.022179819] # exclude start event</msg>
<status status="PASS" starttime="20201110 08:40:50.028" endtime="20201110 08:40:50.031"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.016" endtime="20201110 08:40:50.033"></status>
</kw>
<kw name="Test Teardown" type="teardown">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${KEYWORD_STATUS}' != 'PASS'</arg>
<arg>RIOT Reset</arg>
</arguments>
<status status="PASS" starttime="20201110 08:40:50.040" endtime="20201110 08:40:50.042"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201110 08:40:50.048" endtime="20201110 08:40:50.070"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.044" endtime="20201110 08:40:50.071"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:50.035" endtime="20201110 08:40:50.073"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:47.331" endtime="20201110 08:40:50.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.892" endtime="20201110 08:40:50.074"></status>
</kw>
<status status="PASS" starttime="20201110 08:40:41.890" endtime="20201110 08:40:50.075"></status>
</kw>
<status status="PASS" starttime="20201110 08:39:27.700" endtime="20201110 08:40:50.075"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201110 08:39:27.570" endtime="20201110 08:40:50.077" critical="yes"></status>
</test>
<status status="PASS" starttime="20201110 08:39:23.219" endtime="20201110 08:40:50.085"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10</item>
</metadata>
<status status="PASS" starttime="20201110 08:36:47.956" endtime="20201110 08:40:50.126"></status>
</suite>
<statistics>
<total>
<stat pass="12" fail="0">Critical Tests</stat>
<stat pass="12" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="12" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="12" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="2" fail="0">dev</stat>
</tag>
<suite>
<stat pass="12" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="8" fail="0" id="s1-s2" name="Timer Overhead">tests_ztimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_ztimer_benchmarks.Sleep Accuracy</stat>
<stat pass="1" fail="0" id="s1-s4" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
